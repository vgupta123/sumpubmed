BACKGROUND
improved dna sequencing methods have transformed the field of genomics over the last decade. this has become possible due to the development of inexpensive short read sequencing technologies which have now resulted in three generations of sequencing platforms. more recently, a new fourth generation of nanopore based single molecule sequencing technology, was developed based on minion® sequencer which is portable, inexpensive and fast. it is capable of generating reads of length greater than 100 kb. though it has many specific advantages, the two major limitations of the minion reads are high error rates and the need for the development of downstream pipelines. the algorithms for error correction have already emerged, while development of pipelines is still at nascent stage.


RESULTS
in this study, we benchmarked available assembler algorithms to find an appropriate framework that can efficiently assemble nanopore sequenced reads. to address this, we employed genome-scale nanopore sequenced datasets available for e. coli and yeast genomes respectively. in order to comprehensively evaluate multiple algorithmic frameworks, we included assemblers based on de bruijn graphs , overlap layout consensus   and greedy extension  approaches. we analyzed the quality, accuracy of the assemblies as well as the computational performance of each of the assemblers included in our benchmark. our analysis unveiled that olc-based algorithm, celera, could generate a high quality assembly with ten times higher n <dig> & mean contig values as well as one-fifth the number of total number of contigs compared to other tools. celera was also found to exhibit an average genome coverage of 12 % in e. coli dataset and 70 % in yeast dataset as well as relatively lesser run times. in contrast, de bruijn graph based assemblers velvet and abyss generated the assemblies of moderate quality, in less time when there is no limitation on the memory allocation, while greedy extension based algorithm ssake generated an assembly of very poor quality but with genome coverage of 90 % on yeast dataset.


CONCLUSIONS
olc can be considered as a favorable algorithmic framework for the development of assembler tools for nanopore-based data, followed by de bruijn based algorithms as they consume relatively less or similar run times as olc-based algorithms for generating assembly, irrespective of the memory allocated for the task. however, few improvements must be made to the existing de bruijn implementations in order to generate an assembly with reasonable quality. our findings should help in stimulating the development of novel assemblers for handling nanopore sequence data.

electronic supplementary material
the online version of this article  contains supplementary material, which is available to authorized users.

keywords
contigsde novo assemblyde bruijngreedy extension graphminion®nanoporen50oxford nanoporethe international conference on intelligent biology and medicine   <dig> indianapolis, in, usa 13- <dig> november  <dig> http://watson.compbio.iupui.edu/yunliu/icibm/issue-copyright-statement© the author 2016

