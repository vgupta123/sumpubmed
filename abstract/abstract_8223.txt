BACKGROUND
infectious disease modeling and computational power have evolved such that large-scale agent-based models  have become feasible. however, the increasing hardware complexity requires adapted software designs to achieve the full potential of current high-performance workstations.


RESULTS
we have found large performance differences with a discrete-time abm for close-contact disease transmission due to data locality. sorting the population according to the social contact clusters reduced simulation time by a factor of two. data locality and model performance can also be improved by storing person attributes separately instead of using person objects. next, decreasing the number of operations by sorting people by health status before processing disease transmission has also a large impact on model performance. depending of the clinical attack rate, target population and computer hardware, the introduction of the sort phase decreased the run time from  <dig> % up to more than  <dig> %. we have investigated the application of parallel programming techniques and found that the speedup is significant but it drops quickly with the number of cores. we observed that the effect of scheduling and workload chunk size is model specific and can make a large difference.


CONCLUSIONS
investment in performance optimization of abm simulator code can lead to significant run time reductions. the key steps are straightforward: the data structure for the population and sorting people on health status before effecting disease propagation. we believe these conclusions to be valid for a wide range of infectious disease abms. we recommend that future studies evaluate the impact of data management, algorithmic procedures and parallelization on model performance.

electronic supplementary material
the online version of this article  contains supplementary material, which is available to authorized users.

keywords
mathematical epidemiologyagent-based modeloptimizationperformanceissue-copyright-statementÂ© the author 2015

