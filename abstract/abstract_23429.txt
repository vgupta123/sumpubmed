BACKGROUND
computer languages can be domain-related, and in the case of multidisciplinary projects, knowledge of several languages will be needed in order to quickly implements ideas. moreover, each computer language has relative strong points, making some languages better suited than others for a given task to be implemented. the bioconductor project, based on the r language, has become a reference for the numerical processing and statistical analysis of data coming from high-throughput biological assays, providing a rich selection of methods and algorithms to the research community. at the same time, python has matured as a rich and reliable language for the agile development of prototypes or final implementations, as well as for handling large data sets.


RESULTS
the data structures and functions from bioconductor can be exposed to python as a regular library. this allows a fully transparent and native use of bioconductor from python, without one having to know the r language and with only a small community of translators required to know both. to demonstrate this, we have implemented such python representations for key infrastructure packages in bioconductor, letting a python programmer handle annotation data, microarray data, and next-generation sequencing data.


CONCLUSIONS
bioconductor is now not solely reserved to r users. building a python application using bioconductor functionality can be done just like if bioconductor was a python package. moreover, similar principles can be applied to other languages and libraries. our python package is available at: http://pypi.python.org/pypi/rpy2-bioconductor-extensions/

9â€“ <dig> july  <dig> the 11th annual bioinformatics open source conference   <dig> boston, ma, usa

