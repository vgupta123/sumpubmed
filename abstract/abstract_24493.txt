BACKGROUND
the immune epitope database  project manually curates information from published journal articles that describe immune epitopes derived from a wide variety of organisms and associated with different diseases. in the past, abstracts of scientific articles were retrieved by broad keyword queries of pubmed, and were classified as relevant  or irrelevant  to the scope of the database by a naïve bayes classifier. the curatable abstracts were subsequently manually classified into categories corresponding to different disease domains. over the past four years, we have examined how to further improve this approach in order to enhance classification performance and to reduce the need for manual intervention.


RESULTS
utilizing  <dig>  abstracts classified by a domain expert as curatable or uncuratable, we found that a svm classifier outperformed the previously used naïve bayes classifier for curatability predictions with an auc of  <dig>  and  <dig> , respectively. next, using a non-hierarchical and a hierarchical application of svm classifiers trained on  <dig>  curatable abstracts manually classified into three levels of disease specific categories we demonstrated that a hierarchical application of svm classifiers outperformed non-hierarchical svm classifiers for categorization. finally, to optimize the hierarchical svm classifiers' error profile for the curation process, cost sensitivity functions were developed to avoid serious misclassifications. we tested our design on a benchmark dataset of  <dig>  references and achieved an overall category prediction accuracy of  <dig> %,  <dig> %, and  <dig> % at the three levels of categorization, respectively.


CONCLUSIONS
a hierarchical application of svm algorithms with cost sensitive output weighting enabled high quality reference classification with few serious misclassifications. this enabled us to significantly reduce the manual component of abstract categorization. our findings are relevant to other databases that are developing their own document classifier schema and the datasets we make available provide large scale real-life benchmark sets for method developers.

