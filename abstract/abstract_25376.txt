BACKGROUND
three dimensional biomedical image sets are becoming ubiquitous, along with the canonical atlases providing the necessary spatial context for analysis. to make full use of these 3d image sets, one must be able to present views for 2d display, either surface renderings or 2d cross-sections through the data. typical display software is limited to presentations along one of the three orthogonal anatomical axes . however, data sets precisely oriented along the major axes are rare. to make fullest use of these datasets, one must reasonably match the atlas' orientation; this involves resampling the atlas in planes matched to the data set. traditionally, this requires the atlas and browser reside on the user's desktop; unfortunately, in addition to being monolithic programs, these tools often require substantial local resources. in this article, we describe a network-capable, client-server framework to slice and visualize 3d atlases at off-axis angles, along with an open client architecture and development kit to support integration into complex data analysis environments.


RESULTS
here we describe the basic architecture of a client-server 3d visualization system, consisting of a thin java client built on a development kit, and a computationally robust, high-performance server written in ansi c++. the java client components  support arbitrary-angle viewing and run on readily available desktop computers running mac os x, windows xp, or linux as a downloadable java application. using the neuroterrain software development kit , sophisticated atlas browsing can be added to any java-compatible application requiring as little as  <dig> lines of java glue code, thus making it eminently re-useable and much more accessible to programmers building more complex, biomedical data analysis tools. the nt-sdk separates the interactive gui components from the server control and monitoring, so as to support development of non-interactive applications. the server implementation takes full advantage of data center's high-performance hardware, where it can be co-localized with centrally-located, 3d dataset repositories, extending access to the researcher community throughout the internet.


CONCLUSIONS
the combination of an optimized server and modular, platform-independent client provides an ideal environment for viewing complex 3d biomedical datasets, taking full advantage of high-performance servers to prepare images and subsets of associated meta-data for viewing, as well as the graphical capabilities in java to actually display the data.

