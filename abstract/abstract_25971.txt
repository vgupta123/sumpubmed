BACKGROUND
the identification of statistically overrepresented sequences in the upstream regions of coregulated genes should theoretically permit the identification of potential cis-regulatory elements. however, in practice many cis-regulatory elements are highly degenerate, precluding the use of an exhaustive word-counting strategy for their identification. while numerous methods exist for inferring base distributions using a position weight matrix, recent studies suggest that the independence assumptions inherent in the model, as well as the inability to reach a global optimum, limit this approach.


RESULTS
in this paper, we report prism, a degenerate motif finder that leverages the relationship between the statistical significance of a set of binding sites and that of the individual binding sites. prism first identifies overrepresented, non-degenerate consensus motifs, then iteratively relaxes each one into a high-scoring degenerate motif. this approach requires no tunable parameters, thereby lending itself to unbiased performance comparisons. we therefore compare prism's performance against nine popular motif finders on  <dig> well-characterized s. cerevisiae regulons. prism consistently outperforms all other programs. finally, we use prism to predict the binding sites of uncharacterized regulons. our results support a proposed mechanism of action for the yeast cell-cycle transcription factor stb <dig>  whose binding site has not been determined experimentally.


CONCLUSIONS
the relationship between statistical measures of the binding sites and the set as a whole leads to a simple means of identifying the diverse range of cis-regulatory elements to which a protein binds. this approach leverages the advantages of word-counting, in that position dependencies are implicitly accounted for and local optima are more easily avoided. while we sacrifice guaranteed optimality to prevent the exponential blowup of exhaustive search, we prove that the error is bounded and experimentally show that the performance is superior to other methods. a java implementation of this algorithm can be downloaded from our web server at .

