BACKGROUND
as next-generation sequencing data becomes available, existing hardware environments do not provide sufficient storage space and computational power to store and process the data due to their enormous size. this is and will be a frequent problem that is encountered everyday by researchers who are working on genetic data. there are some options available for compressing and storing such data, such as general-purpose compression software, pbat/plink binary format, etc. however, these currently available methods either do not offer sufficient compression rates, or require a great amount of cpu time for decompression and loading every time the data is accessed.


RESULTS
here, we propose a novel and simple algorithm for storing such sequencing data. we show that, the compression factor of the algorithm ranges from  <dig> to several hundreds, which potentially allows snp data of hundreds of gigabytes to be stored in hundreds of megabytes. we provide a c++ implementation of the algorithm, which supports direct loading and parallel loading of the compressed format without requiring extra time for decompression. by applying the algorithm to simulated and real datasets, we show that the algorithm gives greater compression rate than the commonly used compression methods, and the data-loading process takes less time. also, the c++ library provides direct-data-retrieving functions, which allows the compressed information to be easily accessed by other c++ programs.


CONCLUSIONS
the speedgene algorithm enables the storage and the analysis of next generation sequencing data in current hardware environment, making system upgrades unnecessary.

