BACKGROUND
in bioinformatics, it is important to build extensible and low-maintenance systems that are able to deal with the new tools and data formats that are constantly being developed. the traditional and simplest implementation of pipelines involves hardcoding the execution steps into programs or scripts. this approach can lead to problems when a pipeline is expanding because the incorporation of new tools is often error prone and time consuming. current approaches to pipeline development such as workflow management systems focus on analysis tasks that are systematically repeated without significant changes in their course of execution, such as genome annotation. however, more dynamism on the pipeline composition is necessary when each execution requires a different combination of steps.


RESULTS
we propose a graph-based approach to implement extensible and low-maintenance pipelines that is suitable for pipeline applications with multiple functionalities that require different combinations of steps in each execution. here pipelines are composed automatically by compiling a specialised set of tools on demand, depending on the functionality required, instead of specifying every sequence of tools in advance. we represent the connectivity of pipeline components with a directed graph in which components are the graph edges, their inputs and outputs are the graph nodes, and the paths through the graph are pipelines. to that end, we developed special data structures and a pipeline system algorithm. we demonstrate the applicability of our approach by implementing a format conversion pipeline for the fields of population genetics and genetic epidemiology, but our approach is also helpful in other fields where the use of multiple software is necessary to perform comprehensive analyses, such as gene expression and proteomics analyses. the project code, documentation and the java executables are available under an open source license at
http://code.google.com/p/dynamic-pipeline. the system has been tested on linux and windows platforms.


CONCLUSIONS
our graph-based approach enables the automatic creation of pipelines by compiling a specialised set of tools on demand, depending on the functionality required. it also allows the implementation of extensible and low-maintenance pipelines and contributes towards consolidating openness and collaboration in bioinformatics systems. it is targeted at pipeline developers and is suited for implementing applications with sequential execution steps and combined functionalities. in the format conversion application, the automatic combination of conversion tools increased both the number of possible conversions available to the user and the extensibility of the system to allow for future updates with new file formats.

