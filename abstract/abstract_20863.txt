BACKGROUND
hidden markov models are widely used for genome analysis as they combine ease of modelling with efficient analysis algorithms. calculating the likelihood of a model using the forward algorithm has worst case time complexity linear in the length of the sequence and quadratic in the number of states in the model. for genome analysis, however, the length runs to millions or billions of observations, and when maximising the likelihood hundreds of evaluations are often needed. a time efficient forward algorithm is therefore a key ingredient in an efficient hidden markov model library.


RESULTS
we have built a software library for efficiently computing the likelihood of a hidden markov model. the library exploits commonly occurring substrings in the input to reuse computations in the forward algorithm. in a pre-processing step our library identifies common substrings and builds a structure over the computations in the forward algorithm which can be reused. this analysis can be saved between uses of the library and is independent of concrete hidden markov models so one preprocessing can be used to run a number of different models.

using this library, we achieve up to  <dig> times shorter wall-clock time for realistic whole-genome analyses with a real and reasonably complex hidden markov model. in one particular case the analysis was performed in less than  <dig> minutes compared to  <dig>  hours for the previously fastest library.


CONCLUSIONS
we have implemented the preprocessing procedure and forward algorithm as a c++ library, ziphmm, with python bindings for use in scripts. the library is available at http://birc.au.dk/software/ziphmm/.

