BACKGROUND
copy number data are routinely being extracted from genome-wide association study chips using a variety of software. we empirically evaluated and compared four freely-available software packages designed for affymetrix snp chips to estimate copy number: affymetrix power tools , aroma.affymetrix, penncnv and crlmm. our evaluation used  <dig>  genoa samples that were genotyped on the affymetrix genome-wide human snp array  <dig> . we compared bias and variance in the locus-level copy number data, the concordance amongst regions of copy number gains/deletions and the false-positive rate amongst deleted segments.


RESULTS
apt had median locus-level copy numbers closest to a value of two, whereas penncnv and aroma.affymetrix had the smallest variability associated with the median copy number. of those evaluated, only penncnv provides copy number specific quality-control metrics and identified  <dig> poor cnv samples. regions of copy number variation  were detected using the hidden markov models provided within penncnv and crlmm/vanillaice. penncnv detected more cnvs than crlmm/vanillaice; the median number of cnvs detected per sample was  <dig> and  <dig>  respectively. penncnv detected most of the regions that crlmm/vanillaice did as well as additional cnv regions. the median concordance between penncnv and crlmm/vanillaice was  <dig> % for duplications and  <dig> % for deletions. the estimated false-positive rate associated with deletions was similar for penncnv and crlmm/vanillaice.


CONCLUSIONS
if the objective is to perform statistical tests on the locus-level copy number data, our empirical results suggest that penncnv or aroma.affymetrix is optimal. if the objective is to perform statistical tests on the summarized segmented data then penncnv would be preferred over crlmm/vanillaice. specifically, penncnv allows the analyst to estimate locus-level copy number, perform segmentation and evaluate cnv-specific quality-control metrics within a single software package. penncnv has relatively small bias, small variability and detects more regions while maintaining a similar estimated false-positive rate as crlmm/vanillaice. more generally, we advocate that software developers need to provide guidance with respect to evaluating and choosing optimal settings in order to obtain optimal results for an individual dataset. until such guidance exists, we recommend trying multiple algorithms, evaluating concordance/discordance and subsequently consider the union of regions for downstream association tests.

