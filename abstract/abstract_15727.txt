BACKGROUND
aligning short dna reads to a reference sequence alignment is a prerequisite for detecting their biological origin and analyzing them in a phylogenetic context. with the papara tool we introduced a dedicated dynamic programming algorithm for simultaneously aligning short reads to reference alignments and corresponding evolutionary reference trees. the algorithm aligns short reads to phylogenetic profiles that correspond to the branches of such a reference tree. the algorithm needs to perform an immense number of pairwise alignments. therefore, we explore vector intrinsics and gpus to accelerate the papara alignment kernel.


RESULTS
we optimized and parallelized papara on cpus and gpus. via sse  <dig>  simd  intrinsics for x <dig> simd architectures and multi-threading, we obtained a 9-fold acceleration on a single core as well as linear speedups with respect to the number of cores. the peak cpu performance amounts to  <dig>  gcups  using all four physical cores on an intel i <dig>  <dig> cpu running at  <dig>  ghz. the average cpu performance  is  <dig>  gcups. we also used opencl to execute papara on a gpu simt  architecture. a nvidia geforce  <dig> gpu delivered peak and average performance of  <dig>  and  <dig>  gcups respectively. finally, we combined the simd and simt implementations into a hybrid cpu-gpu system that achieved an accumulated peak performance of  <dig>  gcups.


CONCLUSIONS
this accelerated version of papara  provides a significant performance improvement that allows for analyzing larger datasets in less time. we observe that state-of-the-art simd and simt architectures deliver comparable performance for this dynamic programming kernel when the “competing programmer approach” is deployed. finally, we show that overall performance can be substantially increased by designing a hybrid cpu-gpu system with appropriate load distribution mechanisms.

alignment kerneldynamic programmingpaparaopenclssesimdsimtgpu

