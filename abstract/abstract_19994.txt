BACKGROUND
molecular dynamics  simulations offer the ability to observe the dynamics and interactions of both whole macromolecules and individual atoms as a function of time. taken in context with experimental data, atomic interactions from simulation provide insight into the mechanics of protein folding, dynamics, and function. the calculation of atomic interactions or contacts from an md trajectory is computationally demanding and the work required grows exponentially with the size of the simulation system. we describe the implementation of a spatial indexing algorithm in our multi-terabyte md simulation database that significantly reduces the run-time required for discovery of contacts. the approach is applied to the dynameomics project data. spatial indexing, also known as spatial hashing, is a method that divides the simulation space into regular sized bins and attributes an index to each bin. since, the calculation of contacts is widely employed in the simulation field, we also use this as the basis for testing compression of data tables. we investigate the effects of compression of the trajectory coordinate tables with different options of data and index compression within ms sql server  <dig> 


RESULTS
our implementation of spatial indexing speeds up the calculation of contacts over a  <dig> nanosecond  simulation window by between 14% and 90% . for a 'full' simulation trajectory  spatial indexing reduces the calculation run-time between  <dig> and 81% . compression resulted in reduced table sizes but resulted in no significant difference in the total execution time for neighbour discovery. the greatest compression  was achieved using page level compression on both the data and indexes.


CONCLUSIONS
the spatial indexing scheme significantly decreases the time taken to calculate atomic contacts and could be applied to other multidimensional neighbor discovery problems. the speed up enables on-the-fly calculation and visualization of contacts and rapid cross simulation analysis for knowledge discovery. using page compression for the atomic coordinate tables and indexes saves ~36% of disk space without any significant decrease in calculation time and should be considered for other non-transactional databases in ms sql server  <dig> 

