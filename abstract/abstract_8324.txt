BACKGROUND
the k-mer counting problem, which is to build the histogram of occurrences of every k-symbol long substring in a given text, is important for many bioinformatics applications. they include developing de bruijn graph genome assemblers, fast multiple sequence alignment and repeat detection.


RESULTS
we propose a simple, yet efficient, parallel disk-based algorithm for counting k-mers. experiments show that it usually offers the fastest solution to the considered problem, while demanding a relatively small amount of memory. in particular, it is capable of counting the statistics for short-read human genome data, in input gzipped fastq file, in less than  <dig> minutes on a pc with  <dig> gb of ram and  <dig> cpu cores, and for long-read human genome data in less than  <dig> minutes. on a more powerful machine, using  <dig> gb of ram and  <dig> cpu cores, the tasks are accomplished in less than half the time. no other algorithm for most tested settings of this problem and mammalian-size data can accomplish this task in comparable time. our solution also belongs to memory-frugal ones; most competitive algorithms cannot efficiently work on a pc with  <dig> gb of memory for such massive data.


CONCLUSIONS
by making use of cheap disk space and exploiting cpu and i/o parallelism we propose a very competitive k-mer counting procedure, called kmc. our results suggest that judicious resource management may allow to solve at least some bioinformatics problems with massive data on a commodity personal computer.

k-mer countingde bruijn graph genome assemblersmultiple sequence alignmentrepeat detection

