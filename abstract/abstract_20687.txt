BACKGROUND
conventional pairwise sequence comparison software algorithms are being used to process much larger datasets than they were originally designed for. this can result in processing bottlenecks that limit software capabilities or prevent full use of the available hardware resources. overcoming the barriers that limit the efficient computational analysis of large biological sequence datasets by retrofitting existing algorithms or by creating new applications represents a major challenge for the bioinformatics community.


RESULTS
we have developed c libraries for pairwise sequence comparison within diverse architectures, ranging from commodity systems to high performance and cloud computing environments. exhaustive tests were performed using different datasets of closely- and distantly-related sequences that span from small viral genomes to large mammalian chromosomes. the tests demonstrated that our solution is capable of generating high quality results with a linear-time response and controlled memory consumption, being comparable or faster than the current state-of-the-art methods.


CONCLUSIONS
we have addressed the problem of pairwise and all-versus-all comparison of large sequences in general, greatly increasing the limits on input data size. the approach described here is based on a modular out-of-core strategy that uses secondary storage to avoid reaching memory limits during the identification of high-scoring segment pairs  between the sequences under comparison. software engineering concepts were applied to avoid intermediate result re-calculation, to minimise the performance impact of input/output  operations and to modularise the process, thus enhancing application flexibility and extendibility. our computationally-efficient approach allows tasks such as the massive comparison of complete genomes, evolutionary event detection, the identification of conserved synteny blocks and inter-genome distance calculations to be performed more effectively.

electronic supplementary material
the online version of this article  contains supplementary material, which is available to authorized users.

keywords
comparative genomicsout-of-core algorithmexternal memorylong sequences comparisonissue-copyright-statementÂ© the author 2015

