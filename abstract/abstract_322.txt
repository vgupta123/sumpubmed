BACKGROUND
performing high throughput sequencing on samples pooled from different individuals is a strategy to characterize genetic variability at a small fraction of the cost required for individual sequencing. in certain circumstances some variability estimators have even lower variance than those obtained with individual sequencing. snp calling and estimating the frequency of the minor allele from pooled samples, though, is a subtle exercise for at least three reasons. first, sequencing errors may have a much larger relevance than in individual snp calling: while their impact in individual sequencing can be reduced by setting a restriction on a minimum number of reads per allele, this would have a strong and undesired effect in pools because it is unlikely that alleles at low frequency in the pool will be read many times. second, the prior allele frequency for heterozygous sites in individuals is usually  <dig>  , but this is not true in pools: in fact, under the standard neutral model, singletons  are the most common class of variants because p ∝ 1/f and they occur more often as the sample size increases. third, an allele appearing only once in the reads from a pool does not necessarily correspond to a singleton in the set of individuals making up the pool, and vice versa, there can be more than one read – or, more likely, none – from a true singleton.


RESULTS
to improve upon existing theory and software packages, we have developed a bayesian approach for minor allele frequency  computation and snp calling in pools : the approach takes into account sequencing errors and allows users to choose different priors. we also set up a pipeline which can simulate the coalescence process giving rise to the snps, the pooling procedure and the sequencing. we used it to compare the performance of snape to that of other packages.


CONCLUSIONS
we present a software which helps in calling snps in pooled samples: it has good power while retaining a low false discovery rate . the method also provides the posterior probability that a snp is segregating and the full posterior distribution of f for every snp. in order to test the behaviour of our software, we generated  artificial genomes and computed the effect of a pooled sequencing protocol, followed by snp calling. in this setting, snape has better power and false discovery rate  than the comparable packages samtools, popoolation, varscan : for n =  <dig> chromosomes, snape has power ≈ 35%and fdr ≈  <dig> %. snape is available at
http://code.google.com/p/snape-pooled/ .

