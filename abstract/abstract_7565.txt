BACKGROUND
very frequently the same biological system is described by several, sometimes competing mathematical models. this usually creates confusion around their validity, ie, which one is correct. however, this is unnecessary since validity of a model cannot be established; model validation is actually a misnomer. in principle the only statement that one can make about a system model is that it is incorrect, ie, invalid, a fact which can be established given appropriate experimental data. nonlinear models of high dimension and with many parameters are impossible to invalidate through simulation and as such the invalidation process is often overlooked or ignored.


RESULTS
we develop different approaches for showing how competing ordinary differential equation  based models of the same biological phenomenon containing nonlinearities and parametric uncertainty can be invalidated using experimental data. we first emphasize the strong interplay between system identification and model invalidation and we describe a method for obtaining a lower bound on the error between candidate model predictions and data. we then turn to model invalidation and formulate a methodology for discrete-time and continuous-time model invalidation. the methodology is algorithmic and uses semidefinite programming as the computational tool. it is emphasized that trying to invalidate complex nonlinear models through exhaustive simulation is not only computationally intractable but also inconclusive.


CONCLUSIONS
biological models derived from experimental data can never be validated. in fact, in order to understand biological function one should try to invalidate models that are incompatible with available data. this work describes a framework for invalidating both continuous and discrete-time ode models based on convex optimization techniques. the methodology does not require any simulation of the candidate models; the algorithms presented in this paper have a worst case polynomial time complexity and can provide an exact answer to the invalidation problem.

