BACKGROUND
the need to compare protein profiles frequently arises in various protein research areas: comparison of protein families, domain searches, resolution of orthology and paralogy. the existing fast algorithms can only compare a protein sequence with a protein sequence and a profile with a sequence. algorithms to compare profiles use dynamic programming and complex scoring functions.


RESULTS
we developed a new algorithm called phog-blast for fast similarity search of profiles. this algorithm uses profile discretization to convert a profile to a finite alphabet and utilizes hashing for fast search. to determine the optimal alphabet, we analyzed columns in reliable multiple alignments and obtained column clusters in the 20-dimensional profile space by applying a special clustering procedure. we show that the clustering procedure works best if its parameters are chosen so that  <dig> profile clusters are obtained which can be interpreted as ancestral amino acid residues. with these clusters, only less than 2% of columns in multiple alignments are out of clusters. we tested the performance of phog-blast vs. psi-blast on three well-known databases of multiple alignments: cog, pfam and balibase. on the cog database both algorithms showed the same performance, on pfam and balibase phog-blast was much superior to psi-blast. phog-blast required 10â€“ <dig> times less computer memory and computation time than psi-blast.


CONCLUSIONS
since phog-blast can compare multiple alignments of protein families, it can be used in different areas of comparative proteomics and protein evolution. for example, phog-blast helped to build the phog database of phylogenetic orthologous groups. an essential step in building this database was comparing protein complements of different species and orthologous groups of different taxons on a personal computer in reasonable time. when it is applied to detect weak similarity between protein families, phog-blast is less precise than rigorous profile-profile comparison method, though it runs much faster and can be used as a hit pre-selecting tool.

