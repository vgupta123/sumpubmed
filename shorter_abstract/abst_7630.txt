our method does this using a bloom filter, a probabilistic data structure that stores all the observed k-mers implicitly in memory with greatly reduced memory requirements.
counting k-mers  is an essential component of many methods in bioinformatics, including for genome and transcriptome assembly, for metagenomic sequencing, and for error correction of sequence reads.
for example data sets, we report up to 50% savings in memory usage compared to current software, with modest costs in computational speed.
although simple in principle, counting k-mers in large modern sequence data sets can easily overwhelm the memory capacity of standard computers.
we present a new method that identifies all the k-mers that occur more than once in a dna sequence data set.
this approach may reduce memory requirements for any algorithm that starts by counting k-mers in sequence data with errors.
a reference implementation for this methodology, bfcounter, is written in c++ and is gpl licensed.
in current data sets, a large fraction-often more than 50%-of the storage capacity may be spent on storing k-mers that contain sequencing errors and which are typically observed only a single time in the data.
we then make a second sweep through the data to provide exact counts of all nonunique k-mers.
these singleton k-mers are uninformative for many algorithms without some kind of error correction.
