in contrast, de bruijn graph based assemblers velvet and abyss generated the assemblies of moderate quality, in less time when there is no limitation on the memory allocation, while greedy extension based algorithm ssake generated an assembly of very poor quality but with genome coverage of 90 % on yeast dataset.
in order to comprehensively evaluate multiple algorithmic frameworks, we included assemblers based on de bruijn graphs , overlap layout consensus   and greedy extension  approaches.
celera was also found to exhibit an average genome coverage of 12 % in e. coli dataset and 70 % in yeast dataset as well as relatively lesser run times.
the algorithms for error correction have already emerged, while development of pipelines is still at nascent stage.
to address this, we employed genome-scale nanopore sequenced datasets available for e. coli and yeast genomes respectively.
our analysis unveiled that olc-based algorithm, celera, could generate a high quality assembly with ten times higher n <dig> & mean contig values as well as one-fifth the number of total number of contigs compared to other tools.
though it has many specific advantages, the two major limitations of the minion reads are high error rates and the need for the development of downstream pipelines.
