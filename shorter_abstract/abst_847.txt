we argue that software analogs of biological mechanisms are reasonable candidates for modularization.
to demonstrate, we modularize four pharmacodynamic response mechanisms adapted from an in silico liver .
we verified the modularization process by showing that drug clearance results from in silico experiments are identical before and after modularization.
the pharmacodynamic response module developed here is robust to changes in model context and flexible in its ability to achieve validation targets in the face of considerable experimental uncertainty.
in particular, modularity facilitates component reuse and model integration for models with different use cases, including the ability to exchange modules during or between simulations.
the heterogeneous nature of biology and vast range of wet-lab experimental platforms call for modular models designed to satisfy a variety of use cases.
adopting the modularization methods presented here is expected to facilitate model reuse and integration, thereby accelerating the pace of biomedical research.
this report demonstrates the feasibility of pmms and their usefulness across multiple model use cases.
the modularized isl achieves validation targets drawn from propranolol outflow profile data.
the ishc achieves validation targets drawn from propranolol intrinsic clearance data exhibiting considerable between-lab variability.
the data used as validation targets for pmms originate from both in vitro to in vivo experiments exhibiting large fold differences in time scale.
pmms utilize parametric containers that partition and expose state information into physiologically meaningful groupings.
modular components allow the modeler to think more deeply about the role of the model and to more completely address a modeling projectâ€™s requirements.
we present a general, scientific method of modularizing mechanisms into reusable software components that we call physiomimetic mechanism modules .
in addition, an in silico hepatocyte culture  is created.
currently, most biomedical models exist in isolation.
