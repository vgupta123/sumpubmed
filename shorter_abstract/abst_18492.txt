our algorithm has been applied to perform transcriptome assembly of the non-model blow fly lucilia sericata that was reported in a previous article, which shows that the assembly is of high quality and it facilitates comparison of the lucilia sericata transcriptome to drosophila and two mosquitoes, prediction and experimental validation of alternative splicing, investigation of differential expression among various developmental stages, and identification of transposable elements.
we validate our algorithm by simulating the transcriptome assembly of drosophila using its known genome, and by performing drosophila transcriptome assembly using publicly available rna-seq libraries.
while a popular strategy is to first construct an intermediate de bruijn graph structure to represent the transcriptome, an additional step is needed to construct predicted transcripts from the graph.
since our postprocessing algorithm does not consume as much memory as velvet and is less memory-intensive than oases, it allows biologists to assemble large libraries with limited computational resources.
since the de bruijn graph contains all branching possibilities, we develop a memory-efficient algorithm to recover alternative splicing information and library-specific expression information directly from the graph without prior genomic knowledge.
the recent advance of high-throughput sequencing makes it feasible to study entire transcriptomes through the application of de novo sequence assembly algorithms.
