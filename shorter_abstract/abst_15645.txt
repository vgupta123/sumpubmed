the performance sweet spot occurs when using a number of threads per mpi process that allows the working sets of the corresponding mpi processes running on the multicore to fit within the machine cache.
hence, we suggest that practitioners follow this principle in selecting the appropriate number of mpi processes and threads within each mpi process for their cluster configurations.
microarray gene differential association analysis is even more computationally demanding and must take advantage of multicore computing technology, which is the driving force behind increasing compute power in recent years.
in this paper, we present a two-layer hierarchical parallel implementation of gene differential association analysis.
the resulting improved efficiency reduces computation time and allows the gene differential association analysis code to scale its execution with the number of processors.
we believe that the principles of this hierarchical approach to parallelization can be utilized in the parallelization of other computationally demanding kernels.
our results show that this hierarchical strategy matches data sharing behavior to the properties of the underlying hardware, thereby reducing the memory and bandwidth needs of the application.
microarray gene differential expression analysis is a widely used technique that deals with high dimensional data and is computationally intensive for permutation-based procedures.
