the algorithm needs to perform an immense number of pairwise alignments.
with the papara tool we introduced a dedicated dynamic programming algorithm for simultaneously aligning short reads to reference alignments and corresponding evolutionary reference trees.
the algorithm aligns short reads to phylogenetic profiles that correspond to the branches of such a reference tree.
finally, we combined the simd and simt implementations into a hybrid cpu-gpu system that achieved an accumulated peak performance of  <dig>  gcups.
finally, we show that overall performance can be substantially increased by designing a hybrid cpu-gpu system with appropriate load distribution mechanisms.
a nvidia geforce  <dig> gpu delivered peak and average performance of  <dig>  and  <dig>  gcups respectively.
we observe that state-of-the-art simd and simt architectures deliver comparable performance for this dynamic programming kernel when the “competing programmer approach” is deployed.
