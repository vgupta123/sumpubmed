a small, highly abstract class model, named "operational model," defines the scope of the software system.
at the same time, however, the efficient development of high-quality and interoperable software requires a stable model of concepts for the subject domain and their relations.
the result of these two contradictory requirements is increased complexity in the development of mb software.
we proved our model to be stable, flexible, and useful by implementing a prototype of an mb software framework based on the proposed model.
in this model, we adapted the design pattern "dynamic object model" by using meta data and association classes.
an object model, named "knowledge model," describes concrete concepts of the mb domain.
the structure of the knowledge model is described by a meta model.
stability and flexibility of the domain model is achieved by its separation into two model parts, the operational model and the knowledge model.
these parts are connected by the meta model of the knowledge model to the whole domain model.
as ever new findings change the face of this domain, software for mb has to be sufficiently flexible to accommodate these changes.
this makes it difficult to incorporate the results of different programs, which is needed by many users in order to work with the software efficiently.
this model describes concepts of mb in a formal manner and provides a comprehensive view on it.
molecular biology  is a dynamic research domain that benefits greatly from the use of modern software technology in preparing experiments, analyzing acquired data, and even performing "in-silico" analyses.
to address these problems, we have developed a flexible computer model for the mb domain that supports both changeability and interoperability.
