computational methods for problem solving need to interleave information access and algorithm execution in a problem-specific workflow.
we present a set of syntactic components and algebraic operators capable of representing analytical workflows in bioinformatics.
from our meta-analysis we have identified syntactic structures and algebraic operators common to many workflows in bioinformatics.
the workflow components and algebraic operators can be assimilated into re-usable software components.
iteration, recursion, the use of conditional statements, and management of suspend/resume tasks have traditionally been implemented on an ad hoc basis and hard-coded; by having these operators properly defined it is possible to use and parameterize them as generic re-usable components.
