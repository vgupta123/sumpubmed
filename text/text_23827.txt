BACKGROUND
a key stage for all microarray analyses is the extraction of feature-intensities from an image. if this step goes wrong, then the experiment will certainly be compromised. thus, much research has gone into the tasks of automatic identification of both the features on arrays and the grids on which they lie  <cit> . illumina beadarrays differ from other types of microarray in their construction, and have had special attention paid to them as a consequence  <cit> .

illumina employ random construction of their arrays on a hexagonal grid  <cit> . as a consequence, each probe will occur a random number of times on the array and in random locations. this means that the beads have to be found twice with illumina beadarrays : once by illumina to identify the type of bead present at a location, and once  by the user to quantify intensities after hybridization. these steps are then even more important for the illumina platform than they are for other technologies.

while illumina's software can report the raw bead-level data from an array , more typically only summarized data are produced. we have previously shown that there are advantages to working with the bead-level data  <cit> , not least the abilities to calculate covariances in two colour platforms  <cit>  and to identify and correct spatial artefacts  <cit> . in this paper we show that using the bead-level data it is possible to identify, control, and perhaps correct for a range of other phenomena related to the locations of the beads. in particular, we will consider a number of potential effects that are suggested by previous studies.

for example, it has been shown  <cit>  for microarrays that the depletion of target molecules, due to those molecules hybridizing to probes, can affect the physical chemistry to an extent that the registered intensity will also be affected. such effects can occur locally, and the nature of the illumina array means beads hybridizing to the same target may be proximal, in which case concerns about local depletion may be raised. a previous study  <cit>  showed anecdotal evidence that clusters of beads that failed to be decoded were spatially associated with regions of outliers, suggesting that such regions might be beneficially excluded.

other theoretical aspects of the technology require investigation. the background intensity for arrays is calculated in a non-robust manner that might lead to extreme and biased values. additionally, the high-density structure of the array may lead to situations where the intensity of a bead may influence that of its neighbours.

there are three key steps in moving from an image of a beadarray to a set of intensities. first the bead locations must be identified, second the beads must be mapped to a bead-type, and third, an intensity value extracted. here we investigate each of these steps, showing how each can bias the final intensity, but showing also how such errors can be identified and corrected when working with bead-level data. we illustrate this using two bead-level data sets .

methods
the physical arrays
here we use two illumina beadarray platforms: the human-wg <dig> v <dig> single-channel expression array, and the cnv370-duo two-channel genotyping and dna copy number platform. their differing structures are depicted in figure  <dig>  to allow for comparison and to clarify terminology. the expression array accommodates  <dig> samples, with two array sections devoted to each sample and each section divided into  <dig> segments. by contrast, the cnv370-duo array holds only  <dig> samples but has  <dig> sections per sample, with each section divided into  <dig> segments. these fundamental segments also differ between the two technologies, with  <dig>   <dig> beads  on the expression array, and  <dig>   <dig> beads  on the copy-number array.

data sets
the copy number data we use consist of two arrays from a previously published data set, full details of which are provided by curtis et al  <cit> . the arrays we consider have ids  <dig> and  <dig>  to which were hybridized a tumour sample and hapmap ceph na <dig> cell line respectively. the expression data set consists of two chips  that have been hybridized with two common commercial reference rna sources . since public repositories are not designed to deal with the raw illumina data that we use here, these data are available to download from our website  <cit> .

the raw data we consider to be the .tif image file arising from the scanned array, the .txt file containing the locations of all decoded beads  as well as the associated  intensities, the .locs file that additionally contains the locations of the beads that were not decoded, and the .sdf file that contains details of the chip structure. to reduce download sizes the .txt and .locs file have been compressed using the package beaddatapackr  <cit> . instructions for obtaining bead-level data from the scanner can also be found on our website.

availability of methods
all analyses were conducted in r, primarily through the beadarray package  <cit> . where we introduce functionality that is not part of beadarray or another bioconductor package, we make this available through an r script containing the additional functions , and a vignette that will reproduce the figures and tables in this manuscript .

preprocessing
the array having been scanned, we can consider illumina's preprocessing as consisting of three distinct steps: registration of beads, mapping of bead ids, and feature-intensity extraction.

the registration process is described in full by galinsky  <cit> , but can be summarized thus: first, a bead detection algorithm is used to locate bright beads, then based on these positions, the locations of the remaining beads are interpolated. finally the grid is shifted to ensure it is centred over the array. due to the random construction, in addition to finding the beads it is necessary to match the beads to their bead-types. illumina do this, using a hybridization-based procedure  to identify the probe type attached to each bead  <cit> .

the feature-intensity extraction consists of the calculation of background values, the 'sharpening' of the image via a simple filter that compresses observed fluorescence into tighter regions around the features  <cit>  and then the calculation of foreground values. background values are simply subtracted from foreground values to return the final intensity.

bead registration and mapping of bead ids
illumina return a list of bead locations that have been mapped to their pre-determined grid of bead identities. ideally, the bead-locations will form a regular hexagonal grid, and we can identify beads that are distant from their grid position which may indicate registration issues. this we do separately for each segment, using a simple linear model:   

where px and py are the bead-centre coordinates , and gx and gy are the grid locations. the statistic  gives a measure of departure from the grid. note that for two-colour platforms, the difference between red and green locations will also be an indicator.

further, we consider the possibility that the mapping of bead identities to the beads can go wrong. this will either occur for a subset of beads, in which case we may detect it using our measure of departure from the grid, or it will occur for all beads, in which case we must remap the grid positions for each bead  and use the bead identities associated with these new grid positions. the shift Δx can be determined manually, or automatically by finding the shift that minimizes the mean within bead-type variance for the affected segment and maximizes correlation between replicate segments.

foreground calculation
a large variety of algorithms have been employed to extract feature-intensity values from scanned microarray images, and their relative merits have been extensively reviewed  <cit> . here we consider only illumina's foreground algorithm  <cit>  which begins with the bead-centre positions that were identified during the registration step. the foreground value is calculated as a weighted average of sharpened intensities from a  <dig> ×  <dig> pixel square located about the bead-centre. the centre four pixels of this square always take a maximum weighting, but the weights of the remaining pixels are determined by the fractional part of the bead-centre coordinates as illustrated in additional file  <dig> 

this process relies on being able to identify the centre of a bead to a resolution of a fraction of a pixel. illumina report the bead locations to between  <dig> and  <dig> decimal places of a pixel in the .txt file, whilst they are stored as single precision floating point values  within the .locs file.

background calculation
background values are calculated from a  <dig> ×  <dig> square of pixels located about the bead-centre in the non-sharpened image  <cit> . thus the background being calculated is local rather than global, but not bead-specific. within this square, the mean of the five lowest intensities is taken to be the background value for that bead. the mean is not a robust summary of such extreme values, and we consider alternatives through new functionality in the beadarray package.

note that a  <dig> ×  <dig> square could contain  <dig> bead-centres  and so it is inevitable that beads will share some or all of their five lowest background pixels . it is also clear that many of the pixels in that  <dig> ×  <dig> square will be contributing to foreground calculations. we mask the  <dig> ×  <dig> pixel square around each bead-centre that contributes positively to the foreground calculation in order to calculate the number of "true background" pixels a bead actually has out of the  <dig> considered.

the separate foreground and background values are not returned by illumina's software, so we have used the beadarray package to obtain these values.

the bead-location/bead-intensity circle
from the details of the foreground calculation, it is clear that the reported bead-intensities are influenced by the precise bead-location. however the registration of bead locations is partially dependent on bead intensities and will influence the precise location of the bead. while in isolation, each of these steps appears sound, the potential for some 'feedback' in this loop  is of concern.

simulation of beads
to investigate the magnitude of the bead location effect, we perform simulations of idealized beads. each bead on the array we consider to be a sphere evenly covered in probes. this we assume results in a smoothly fluorescing feature when the bead is scanned. then, we simulate the digitization of the image into discrete pixels by creating a pixel grid, integrating the fluorescence within each square of the grid, and rounding to an integer value. we then systematically move the grid, a fraction of a pixel at a time, and calculate the foreground intensity using the known bead-centre location.

investigation of association in data
we use the fractional part of the bead-centre locations and the intensities obtained from illumina's .txt file to investigate the patterns of association in real data. we break a theoretical pixel into  <dig> ×  <dig> bins and, for each bin, plot the mean of all log-intensities for beads whose fractional bead-centre locations coincide with the bin.

where we identify an association, we investigate the nature of any causality by a) recalculating intensities with location-independent weights, and b) by averaging not the log-intensities but the residual log-intensities once the average for that bead-type has been removed. since beads of the same type should be showing similar intensities, they should be similarly affected by the bead registration algorithm, and so this second step tests the possibility of log-intensity affecting location.

identifying beads near phenomena of concern
clusters of non-decoded beads are identified by finding the locations of all non-decoded beads from the .locs files and mapping the neighbours of all beads. we assume that any such cluster of beads will contain a non-decoded bead with six non-decoded neighbours, and each such bead is used as a seed to identify maximal networks of neighbouring non-decoded beads . clusters we define as being any such network of  <dig> or more beads, and these are then expanded further to identify successfully decoded beads in the vicinity of the cluster.

to identify bright beads that might interfere with their neighbours, we use the ebimage package   <cit>  to segment the image and then select bright features with a mass of at least  <dig> pixels and a high degree of circularity. beads with aberrant background calculations are identified using the readtiff function in beadarray which allows us to interrogate the pixels surrounding a bead.

identifying beads that neighbour beads of the same type is trivial using the neighbours matrix. in an idealized array containing  <dig>   <dig>   <dig> beads from  <dig>   <dig> bead-types where each bead has six neighbours we would expect to have  <dig> such pairs. this calculation ignores some of the structure of the array , and we investigate the numbers that we would expect for our arrays under a truly random construction as follows: we maintain the neighbours matrix for an array, but permute all bead identities of beads that were successfully decoded, tally the number of neighbouring pairs of the same type, and repeat.

assessing impact on biological findings
to assess the impact of the identified phenomena we use the beadarray package along with the scripts we provide here to identify affected beads and remove them prior to summarization. analyses follow the scheme illustrated in additional file  <dig>  and are repeated without adjustment for these phenomena to allow for assessment of their impact.

RESULTS
bead-centre location
on investigation of the possible dependence between the fractional part of the coordinate, and the derived log-intensity, a striking association is seen . that this largely remains when the fractional coordinates are not used to weight the foreground calculation suggests that the majority of the association is due to intensity driving location rather than the other way about. however, the fact that the association is still strong when plotting within-bead-type residual log-intensities suggests that there may still be an element of location determining intensity.

we conducted simulations to establish whether such a large effect of fractional location on intensity was plausible. under our simulations, it is clear that the relative position of the pixel grid over the bead can influence the measured intensity, with the value being greatest when the fractional part of the bead-centre coordinates is close to zero. the range of values that can be achieved is small however, being of the order of  <dig>  on the log intensity scale for large bright beads. this value increases as the bead image becomes smaller relative to the pixels , which would correspond to lower intensity beads, for which such a change might be more important. however this effect is the opposite of the association seen in the real data, suggesting once more that intensity determines location more than location determines intensity.

ostensibly, this broad result is reassuring. if location were determining intensity to a much larger degree than seen here, then this would be a fundamental problem. yet even if the majority of the effect is intensity determining location, to allow the loop wherein intensity determines location, which is then allowed to affect intensity, would seem undesirable. the precision of the reported location  would also seem questionable in these circumstances.

image registration issues
departure from the grid
for the vast majority of beads the difference between their given and predicted locations is very small, commonly less than one pixel. however, there are often thousands of beads where the deviation is greater than a pixel, and it can commonly be as large as  <dig> pixels, which is a concern given the beads have a presumed radius of 2- <dig> pixels and between bead-centre spacings of approximately  <dig> pixels. some allowance must be made for irregularities in scanning the array but, given the theoretically regular nature of the grid, this seems to be evidence that beads are being mis-registered, and there is a distinct association between the degree of departure from the grid and residual log-intensity 

issues of targeting the wrong bead
in such cases, the departure from the grid is so great that we must presume that the wrong bead is being interrogated. this is most apparent when considering two-colour beadarrays. in figure  <dig> we illustrate a region of a two-colour array, where a number of beads show a high departure from their predicted grid positions. note that these could also be identified by the differences in coordinates between the two channels, or because multiple beads in the red channel share the same coordinates.  <dig> beads are tracked in the figure from their reported location in the green channel to their reported locations in the red channel.

note that, of the  <dig> beads, a, d, e, f, g, n, o, p and r map to the wrong position in the red image. moreover, we see three instances where distinct beads in the green image map to the same bead in the red image: ,  and . the consequence of mapping to the wrong bead is clear, with many outliers being created. bead g should map to the bright bead  to which bead f now maps, but instead maps to a region of low intensity. as a consequence, bead g is taken to exhibit lower intensity than is normal for that bead-type, while bead f exhibits greater intensity than does its cohort. beads n and o should map to regions of low intensity, but instead return moderately high values as a consequence of their picking out of neighbouring beads. naturally there are cases, such as p, where the bead-centre maps to the wrong bead in the image, but the two beads exhibit similar intensities so there is little effect.

with localized problems such as this, where frequently only a single bead in a neighbourhood shows a concerning discrepancy between the two channels, it is natural to call upon the redundancy built into the illumina beadarray platform and simply discard the beads in question. in these circumstances, correcting a few extra beads would be unlikely to reward adequately the considerable efforts required. the task then is one of identifying these beads for removal, about which we now add a note of caution.

variable pixel size
when comparing the coordinates of beads from the two channels, one will immediately be struck by a discrepancy. since the array is not in exactly the same position in the two images, a shift of one coordinate set will be required, often by a distance of ten or more pixels. however, closer inspection will show that this shift is not constant across the image. the nature of this shift is illustrated in additional file  <dig>  two things are clear. first, the array does not occupy the same number of pixels in the red and the green channels, therefore a pixel represents a different physical size between the two channels. second, for at least one of the channels, the physical size represented by a pixel changes along the array within the channel.

not only does this have implications for the identification of beads that deviate from the expected grid, but also raises more fundamental questions about the use of a constant number of pixels to calculate foregrounds and backgrounds. moreover, having seen that the fractional part of a bead's coordinates is influential on the derived intensity, we may ponder what might be the implications of such a changing shift between the two channels.

general mapping of images to beads
sometimes the image registration can go dramatically wrong, resulting in the entire grid of bead-centre locations being positioned incorrectly within the image . due to illumina's random construction method, the consequence of such mis-registration is that the beads have random annotation. the intensity values associated with each bead-type are then a random sample of intensities, and their summarization produces an estimate of the average intensity on the array.

we can automate the re-mapping of bead-types. when the grid of bead ids is correctly positioned, the variance within each bead-type should be significantly lower than when they are mis-mapped. being out by a single column or row completely scrambles the annotation, so there should be no improvement until the correct mapping is achieved. we search multiple shifts of the grid and identify when the they are correctly aligned by the drop in variance. additional file  <dig> shows, for the mis-registered segment, how the within-bead-type variance drops when the two mis-mapped segments are moved  <dig> rows vertically. for the two correctly aligned segments, any change in the grid position increases the variance.

influence of local phenomena
beads neighbouring non-decoded beads
we have mentioned already that the decoding process is not perfect and it is common for a small percentage of beads to fail this identification step. the locations of the non-decoded beads fall into two distinct patterns. many non-decoded beads occur apparently randomly scattered across the array. others however occur in compact clusters in a manner clearly not independent of one-another, and consistent with a localized technical issue that could have interfered with the decoding step.

we have observed that it is common for successfully decoded beads, in the vicinity of such clusters, to display higher intensity than is expected for their bead type . such behaviour is suggestive of a technical artefact that extends beyond the area that failed to be decoded, with the implication that these beads should be removed. techniques to identify artefacts of this nature, such as bash  <cit> , will struggle to find the artefact because of the cluster of non-decoded beads in the middle. the identification of the clusters themselves though is relatively straightforward , and exclusion of beads around such clusters would be easy to implement. the influence of this bias across an experiment is illustrated in additional file  <dig> 

beads neighbouring 'encroaching' beads
particularly bright beads can encroach into the region used to calculate the foreground of neighbouring beads. figure  <dig> shows one such example, where several beads fall within the region of fluorescence resulting from a bright neighbour. in particular, the regions used to calculate the foreground intensity of beads  <dig>   <dig> and  <dig> appear to overlap with the signal emitted from the bead in the centre.

naturally, we must be wary of the possibility that the central bead is not encroaching, but that the satellite beads are showing a signal and that we are simply unable to observed the boundary between them. this may be the case for bead  <dig>  but there are two reasons for believing this not to be the case for the other beads. firstly, we would expect a local mode of intensity at the satellite bead if this were the case , and secondly we would expect the satellite beads to show similar intensities to beads of a similar type elsewhere on the array.

beads with aberrant background calculations
out of the  <dig> pixels that are considered for the background calculation, the number that are "true background" pixels for a given bead ranges from  <dig> to  <dig> for one expression array , with median  <dig>  note that if we took a  <dig> ×  <dig> square foreground mask for each bead, more than two-thirds would be considered to have no "true background" pixels within their  <dig> candidates. however since the outer layer of that  <dig> ×  <dig> square makes a negative contribution to the foreground calculation, it is reasonable to use the  <dig> ×  <dig> pixel mask. as anticipated, when there are more true background candidate pixels, the non-robust measure of background tends towards more extreme values. the effect is not large in magnitude however, due to the generally low variability in background values, and so is unlikely to be a concern .

it is not uncommon to see the occasional pixel, in an illumina image, that has an intensity much lower than the general background pixels. such pixels often occur in proximity to extremely bright pixels , suggesting that this is an artefact introduced by the image capturing device.

when such pixels fall within the background calculation region for a bead, they inevitably end up as one of the five lowest pixels in the region and so contribute to the background score for that bead. the resultant background scores for such beads are lower than they would otherwise be, and the final intensity for the bead is calculated to be higher than it should. there are few such pixels on an array, and their identification and exclusion from calculations would not present a technical challenge, however a simple change to the background calculating rule might present the simplest solution. currently the mean of the five lowest pixels is used, however using a trimmed mean of a certain number of the lowest pixels or simply using the pixel of a certain rank  would be alternatives to consider. figure 7b shows that altering the background calculation to use the median of the five lowest pixels, rather than the mean, decreases the departure from the bead-type type median for the beads in close proximity to the pixel shown in figure 7a. the influence of this bias across an experiment is illustrated in additional file  <dig> 

beads neighbouring similar beads
in investigating whether neighbouring beads of the same type can affect the physical chemistry of hybridization to an extent that the registered intensity will also be affected, we find a median of  <dig> pairs of neighbouring twins  across the  <dig> sections of the two expression chips. we can detect no significant association between the presence of a neighbour of the same bead-type and observed intensity , but it should be noted that the range of intensities over which such an effect might be strongest is also that associated with low signal to noise, so we might anticipate having low power to investigate such a phenomenon.

the observed numbers of pairs of such beads far exceed the numbers we expected from theory, or based on a permutation test . only two explanations seem plausible for the excessive number of neighbouring twins that we see in the real data. either the beads are not independently arranged on the array, or the beads are being decoded incorrectly in a manner that leaves them with their neighbour's identity. should either the physical chemistry  or the various possibilities for explaining the excess neighbour pairs raise concerns, then identification of such bead-pairs is a straightforward task given that the identification of the complete network of neighbouring beads is already a necessary task for various bead-level preprocessing steps. identification of beads that neighbour similar beads would fall out of this preparation and allow for their down-weighting or exclusion.

impact on biological interpretation
in this example the masked bead would normally be included in the summarization. however, its removal results in three additional beads being classed as outliers and excluded from the summarization. this in turn dramatically lowers the summarized intensity and results in the bead type being classed as not expressed, a finding that is corroborated by the replicate sections.

CONCLUSIONS
some of the arrays we present here feature the mis-registration of beads on a scale that can have only one of three outcomes. either the array will be omitted from analysis , it will be included 'as is' , or can be included after correction . the remaining phenomena we have described will have a lesser impact, but occur apparently more frequently , and, while not ruining an experiment, will impact upon data quality.

section id
if beads are not providing sound estimates of the quantity that they are designed to measure, yet by chance return an intensity consistent with the true target, then they will have the effect of increasing the perceived number of beads contributing to the estimate and thus will lead to artificially low standard errors and consequently to erroneous results. since low standard errors are inherently desirable, it is unlikely that concerns will be raised in such cases.

when the intensity is inconsistent with the true target, there is a chance that the standard illumina analysis will identify these beads as outliers. however it is sub-optimal to use such a broad tool for this purpose, when more targeted options are available. moreover, we have shown an example where the effect of a miscreant bead is to obscure the outlying status of other beads for which we have no explanation of their abberant intensities. these are the beads for which a general outlier removal step is warranted, and we have shown that a two-pass approach of removing known problems and then applying a general outlier removal can be beneficial.

we summarize our findings in table  <dig>  where we list the problems identified, with associated diagnostics, solutions, and details of where the solutions are implemented. most alarming is that the registration of images produced by illumina scanners can be subject to several forms of error, which could greatly impact upon the downstream results drawn from these images. the mis-registration can take at least two forms, the most obvious of which is the mis-alignment of an entire segment's bead-centres. more subtle, small, mis-registrations can result in local bead-centres missing beads or two bead-centres being assigned to the same feature in a image whilst other features are ignored.

summarizing the phenomena we have described, methods for their diagnosis, and possible solutions.

in addition to this, we have demonstrated that in theory the relationship between the position of a bead on the array and the grid of pixels introduced by creating a digital image of the array during scanning can affect the intensity value attributed to that bead. it appears that the majority of the association seen between bead-intensity and within-pixel bead location can be attributed to the intensity of a bead affecting the location at which it is found, yet for a bead to lie away from its anticipated location on the grid we have shown to be indicative of a biased intensity. it may be that different approaches for identifying beads and computing intensities could reduce or eliminate this source of variation.

finally we have shown that there are a variety of spatial effects that may impact on the reliability of results for individual beads. particularly bright beads appear to display a 'bleed over' effect in which neighbouring beads are swamped by the signal being emitted from the bright bead. we have also identified isolated pixels with intensities far lower than the modal background for the array. each of these artificially inflates the intensity attributed to their neighbouring beads, an effect also seen in the neighbourhood of clusters of non-decoded beads.

yet if they can be identified as suggested in the results and in table  <dig>  beads can easily be down-weighted or excluded from an analysis. the degree of replication on illumina arrays often allows for beads to be excluded while still making estimation possible. unfortunately it is still the case that, on some occasions, entire arrays must be forsaken, so the need for robust experimental design is not negated by these salvage techniques. we have also noted evidence of a lack of independence in the random layout of the beadarrays. this in itself we have not shown to bias results, however it does suggest that one can not simply trust in an iid random layout of beads to overcome biases introduced by spatial artefacts.

the identification and remedy of the problems we have described are reliant upon access to the raw, bead-level, data. even if one plans to analyse summarized data using illumina's software, the routine recording of bead-level data provides a safety net should problems with the arrays be identified or suspected. with such routine access to bead-level data, an automated pipeline for quality assessment could be implemented painlessly, allowing the detection of the artefacts described here, and would provide reassurance regarding an independent summary-level analysis for experimenter, reader, and reviewer alike. given this we highly recommend the collection and storage of bead-level data.

authors' contributions
mls conducted analyses, authored code and drafted the manuscript. mjd provided illumina expertise and helped to draft the manuscript. st provided statistical expertise and helped to draft the manuscript. agl conceived the study, provided statistical expertise, conducted analyses and drafted the manuscript. all authors read and approved the manuscript.

supplementary material
additional file 1
r script containing functions that are not available in beadarray

click here for file

 additional file 2
vignette to reproduce figures and tables in this paper.

click here for file

 additional file 3
figure illustrating the illumina foreground calculation.

click here for file

 additional file 4
figure demonstrating the between-bead dependence of background calculations.

click here for file

 additional file 5
flowchart illustrating preprocessing steps.

click here for file

 additional file 6
figure illustrating the results of the bead simulation exercise.

click here for file

 additional file 7
figure illustrating the association between departure from the grid and intensity.

click here for file

 additional file 8
figure illustrating the inconsistent shift required to align red and green images of the same section.

click here for file

 additional file 9
figure illustrating an example of image mis-registration.

click here for file

 additional file 10
figure illustrating the influence of various biases when considered across an entire experiment.

click here for file

 additional file 11
figure illustrating the influence of the number of true background pixels that a bead has on its calculated background.

click here for file

 additional file 12
the numbers of neighbouring pairs of beads of the same type, observed and theoretical values.

click here for file

 acknowledgements
we thank james hadfield and michelle osbourne for conducting the microarray experiments. we also thank semyon kruglyak for useful discussion and advice on illumina's algorithms, and matt ritchie for useful discussions. we acknowledge the support of the university of cambridge, cancer research uk, and hutchison whampoa limited.
