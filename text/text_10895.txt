BACKGROUND
in this paper we consider an automatic data analysis method to perform the classification of specimens through the analysis of a small portion of the genetic information extracted from specimens. the method proposed in this paper does not address the counterpart of this problem, i.e. the problem of clustering a collection of dna sequences into groups which could potentially correspond to biological species; such approach has been widely adopted in many related papers discussed below and is frequently based on the search of tree-like structures that would be able to convey also the taxonomic relations among the examined species. in  <cit>  a wide discussion of the two problems and the benefits and drawbacks in using dna sequences is addressed.

specimens classification methods based on a small dna subsequence are first proposed for least morphologically distinguished species like archaea, bacteria, protists and viruses  <cit>  and then extended to higher organisms  <cit> .

in his first paper on this topic  <cit>  hebert uses dna barcoding, a technique based on a short dna sequence from a small portion of the mitochondrial dna , the gene cytochrome c oxidase i , to be used as a taxon "barcode", that differs by several percent, even in closely related species, and collects enough information to identify the species of an individual. this molecule, previously identified by  <cit>  as a good target for analysis, is easy to isolate and analyze and it has been shown  <cit>  that it resumes many properties of the entire mt-dna sequence. since  <dig> coi has been used by hebert to study fishes, birds, and other species  <cit> ; one of the most significant results concerns the identification of cryptic species among insect parasitoids  <cit> . for sake of completeness we remind that another mt-dna subsequence , cytochrome b, was proposed as a common species-level marker, while coi is specific for animal species  <cit> .

on the basis of these results the consortium of barcode of life  was established in  <dig>  cbol is an international initiative devoted to developing dna barcoding as a global standard for the identification of biological species, and has identified data analysis issue as one of the central objectives of the initiative. in particular the consortium proposed several key problems:

 <dig>  optimize sample sizes and geographic sampling schemes, as barcodes are not easy to measure, and large samples are very expensive;

 <dig>  consider various statistical techniques for assigning unidentified specimens to known species, and for discovering new species;

 <dig>  stating similarity among species using character-based barcodes and identify what are the character based patterns of nucleotide variation within the sequenced region;

 <dig>  identify small portion of the barcode that are relevant for species classification, as sequencing long molecules is expensive .

in this paper we deal with the last two items. we propose a method that, given a sample, finds a small relevant portion of the coi sequence that allows to distinguish among the species that are present in the sample, and we provide a character based pattern for each species  that allows to precisely classify all the individuals of the sample and individual whose species is unknown . the method, already described and applied in some other variants in previous work  <cit> , is new for this problem and does not provide explicitely a taxonomic structure of the analyzed species.

the topic of shrinking the barcode is studied in  <cit> , where the authors determine how much sequence information is required for identification and calculate the probability of having species-specific barcode for varied size fragments. they show that sequences of among  <dig> and  <dig> sites are most of the time sufficient. in  <cit>  it is shown that while long sequences are needed to obtain correct phylogenetic trees and to identify new species, smaller sequences are sufficient to classify specimens.

most of the known methods for barcode analysis are either based on the concept of distance between m-otus , or character based. an m-otu is a terminal node  in coalescent trees obtained by sequencing an informative sequence of dna. among the distance based methods we recall that one where m-otus are analyzed by first creating m-otu profiles  and then using the neighbor joining  method  <cit>  to obtain a phylogenetic tree , so that each species is identified as represented by a distinct, non overlapping cluster of sequences in this tree. the principle of the nj tree is to find pairs of m-otus that minimize the total branch length at each stage of clustering of m-otus starting with a star-like tree. a model-based, decision-theoretic framework based on the coalescent theory, where both distance and the posterior probability of a group are utilized is presented in  <cit> . finally, in  <cit>  simulations to test the performance of different methods based on sequence comparison  are described.

among character-based methods, we recall here the method due to kuksa and pavlovic  <cit>  and the one proposed by sarkar et al.  <cit> . in  <cit>  string kernel methods for sequence analysis are applied to the problem of species-level identification based on short dna barcodes. this method does not require dna sequences to be aligned; sorting-based algorithms for exact string k-mer kernels and a divide-and-conquer technique for kernels with mismatches are proposed. similarity kernel allows to build accurate predictors and to cluster unknown sequences. the characteristic attribute organization system , proposed in  <cit> , is a method for discovering conserved character states from cladograms  or groups of categorical information. caos identifies character states at each node in a phylogenetic tree, in a similar way that attribute tests are identifies in decision tree algorithms. the method first identifies diagnostic dna sequence changes in a data set, and then establishes those as rules for the second function of the program that reads dna sequences from query specimens and assigns them to their species. other character based methods use neural network  <cit>  or bayesian statistics  <cit> .

the method proposed in this paper is a character based method and is comprised of two steps. the first step is feature selection, where the problem of selecting a small number of relevant features is formulated as an integer programming problem . the second step is the identification of the logic formulas that separate each class from all the others. such task is accomplished using the lsquare system for logic mining, originally described in  <cit> .

the main benefit of this method with respect to other more standard data mining approaches is its capability to provide compact classification rules that possess semantic information, since they identify, for each species, the sites of the molecule, the alleles that are characteristic of that species, and the propositional logic formulas that link them.

the paper is organized as follows: after a brief introduction to the notation and definitions used in the paper, in section "shrinking the barcode", we describe the features selection model adopted, while in section "the extraction of separating logic formulas" we provide the reader with a synthetic description of the logic mining method lsquare . then, in section "results and discussion" the data set used and the results of the experiments are described. final remarks are the topic of section "conclusions".

methods
we introduce the terminology adopted in the paper. we assume that each individual  is described by its barcode, that in turn is composed of a fixed number of m sites . each individual belongs to one and only one species, or class. the data set is composed of n individuals, belonging to two or more classes; we refer to the sites of the barcode also as features, when we are in a mathematical setting. the i - th individual of the data set is represented by the vector fi = , where fij âˆˆ {a, c, g, t}; the data matrix is represent by the sequence of vectors f <dig>  f <dig> ..., fn. given this matrix representation of the data set, when appropriate the individuals may also be referred to as rows, while the features as columns. the classification method adopted is basically a two-class separation method, in the sense that it identifies the logic formulas that separate the individuals of one class in the data set from the remaining individuals of the data set . when needed, we refer to the two classes to be distinguished as class a and class b.

shrinking the barcode
the identification of a subset of relevant features among a large set is a typical problem in data analysis and data mining, often referred to as feature selection. among the different approaches, the idea of formulating the feature selection problem as a mathematical optimization problem where the number of selected features is to be minimized under some constraints has received some attention in the literature, and proven to be effective in many situations. in  <cit>  the authors adopt such an approach for the selection of tag snps; the mathematical model adopted turns out to be a linear problem with binary variables whose structure is well known in the combinatorial optimization literature as the set covering problem. several similar models where also treated in  <cit> , where large set covering models where proposed . the main drawback of this approach, and of the many variants that have been then proposed, lays in the fact that it uses one constraint of the integer programming problem for each pair of individuals of the data set that belong to different classes. such fact implies a rapid growth of the dimension of the problem, and thus its intractability for large sizes, that then requires the use of non optimal solution algorithms.

in this paper we adopt an alternative approach, characterized by:

a. the use of a different method to construct the constraints of the optimization problem, that results in a problem size that grows only linearly with the size of the data;

b. the use of a different objective function, that maximizes a lower bound on the discriminating power of the solution over all the individuals of the training data.

such formulation can be solved in reasonable time with exact optimization algorithms, but very good quality solution can be found also with fast heuristics developed ad hoc; this is the case of the grasp method used in this paper and described in  <cit> .

such approach is based on a very simple idea.

for the time being, we assume the individuals to belong to only two classes, class a and class b. given a feature fj, we define pa and pb be the proportion of individuals where feature fj has value k ) in sets a and b, respectively. if pa > pb  > pa), then the presence of fj with value k is likely to characterize individuals that belong to class a . to better qualify the strict inequality between pb and pa we introduce an additional parameter Î» >  <dig>  and then define, for each feature j and for each individual i in class a the vector dij as follows.

  

while, for individuals i in class b, the value of dij will be:

  

in the practical application the parameter Î» directly influences the density of the matrix composed of dij and can be adjusted to obtain a reasonable value for the density itself .

according to this definition, we intuitively assume that the number of ones in vector d.j is positively correlated with the capability of feature fj to discriminate between classes a and b. we would then like to select a subset of the features that exhibits, as a set, a good discriminating power for all the individuals considered, so that we may use more features combined together to build rules that perform a complete separation between a and b.

the purpose of the feature selection model is then to select a given and small number of features that, collectively, guarantee a good discriminating power for all the individuals of the data sets. this can be formally stated asking to select a given number of features  that maximize the minimum of the discriminating power over all the individuals.

we define the binary decision variable xj = { <dig>  1} with the interpretation that xj =  <dig>  means that feature j is selected, . the binary integer optimization problem can then be defined as follows:

   

we bring to the attention of the reader the fact that Î² is a parameter of the problem, and not a variable. the optimal solution of the above problem would then select the Î² features that guarantee the largest discriminating power over all the individuals in the data. despite the problem has been described with straight-forward arguments, it can easily be shown that its optimal solution amounts to identify the feature set of a given size that maximize the additive class entropy of its individuals. besides, the number of variables of the problem is given by the number of features , and the number of rows by the number of individuals , keeping the size of the problem in a linear relation with the size of the data. the problem is anyway difficult to solve, and for large sizes approximate solution methods may be needed if one is not to resort to heavy and often expensive commercial solvers for integer programming. the use of an efficient heuristic method allows the current implementation of the methods described in section "the blog software system" to be freely distributed for the purposes of the cbol consortium.

once an optimal set of Î² features is selected, these are used by the logic mining tool lsquare to extract the separating formulas, as described in the next section.

the extraction of separating logic formulas
lsquare is a learning method that operates on data represented by logic variables and produces rules in propositional logic that classify the individuals in one of two classes. the appropriateness of lsquare for specimens classification is motivated by the fact that it uses a logic representation of the description variables, that are to all extents logic variables, and of the classification rules, that are logic formulas in disjunctive normal form . such property enables to analyze the classification results also from the semantic point of view, as the classification rules determined by the method express combination of the features that can be appreciated by domain experts and may bring to light useful knowledge in an easily understandable format.

the classification rules are determined using a particular problem formulation that amounts to be a well know and hard combinatorial optimization problem, the minimum cost satisfiability problem, or minsat, that is solved using a solver based on decomposition and learning techniques  <cit> . the dnf formulas identified have the property of being created by conjunctive clauses that are searched for starting from those that cover the largest portions of the training set. therefore, they usually are formed by few clauses with large coverage  and several clauses with smaller coverage .

from the practical standpoint, the problem of finding a separating dnf for a and b is solved sequentially, identifying at each iteration a conjunctive clause that holds true for the largest non-separated subset of a and false for all b. termination of the process is guaranteed by some property of the method . each iteration is in turn formulated as a logic optimization problem, that we briefly describe here. basic notions of propositional logic are given for granted and can be found in  <cit> ; below we summarize the two main steps of the method.

first, we expand the selected features into  <dig> different logic variables, each one associated with the presence or absence of one the  <dig> nucleotides in the given position. for example, vja with value true indicates that in position j is present nucleotide a, and false otherwise. for simplicity, assume that all these logic variables are sequentially indexed from  <dig> to m, and referred to as vj. thus, vj = true for individual i means that, for that individual, a certain position exhibits a certain nucleotide.

second, we formulate a minsat problem whose solution identifies one of the cnf clauses that will form the final dnf formula. to do this, we introduce two additional types of logic variables:

â€¢ pj and qj, linked with the vjs as follows: vj is chosen in the clause with value true if pj = true and qj = false; vj is chosen in the clause with value false if pj = false and qi = true, and vj is not chosen in the clause if pj = qj = false;

â€¢ ei, associated with each individual i of class a, that are forced by the constraints to assume value false if the clause identified by the solution holds true for i, and false otherwise.

also, define as  the set of indices of the features that appear in individual i of class a with value true; and, symmetrically define as  the set of indices of the features that appear in individual i of class a with value false. analogously define  and .

consider now the following minsat problem, whose solution is determined by an assignment of the logic variables pj and qj and ei such that all the logic constraints are satisfied and the sum of costs of the variables that hold true is minimized:

   

it can be verified that the solution of problem  identifies a cnf clause on the vj and that the set a' = {i âˆˆ a|ei = false} is the largest portion of a that can be separated from b by a simple cnf clause. in fact, we have that: vj belongs to the clause with value true if pj= true and qj = false; vj belongs to the clause with value false if pj = false and qj = true; and, finally, that vj is not present in the clause if pj = qj = false. using this information, we can formulate a second minsat problem where we select, amongst all separating clause that separate a' from b, the one that uses the least number of literals :

   

a more detailed description of the system and of its other components can be found in the related papers  <cit> .

the blog software system
the above mentioned methods have been integrated in a data mining software designed specifically for barcode analysis applications, the blog system .

the aim of the system is to identify logic rules that are able to recognize the species  of a specimen by analyzing its barcode sequence. a consistent effort in developing blog has been devoted to the import of files from different data format, to the control of the analysis flow, and to the production of output that are in line with the typical styles and interests of the scientific communities that use barcode or, more in general, dna and rna data, to extract classification rules from training data and to assess their quality.

the standard input of the program is a fasta format file of barcode sequences containing the training and the testing set. the fasta format is an internationally agreed upon format for nucleotide or peptide sequences. it is converted into an internal format named dmb that provides all the information needed for the analysis in an efficient format specifically designed for the adopted algorithms. in dmb, the data set is represented by a set of files each containing a specific portion of the complete information; each file is preprocessed, and a coherency and integrity control step on the data is performed before the real analysis starts. the main files that compose the dmb format are four, and contain respectively the data matrix , the class label and textual description for each specimen , the identification number and the textual label for each column or locus  and, finally, the code and the description of each specimen .

the main outputs of blog are:

â€¢ the predicted class for each specimen with attached a measure of the confidence associated with such prediction;

â€¢ for each class in the training set, the logic formulas that have been extracted from data and are used to predict the class of the specimens; each formula is completed with a measure of its accuracy;

â€¢ the usual classification statistics .

additional output used to interpret the results is also provided:

â€¢ the name of each specimen in the test set followed by a list of the similar specimens in the training set and the accuracy measure of the classification of the test specimen . for example, the following line:

ef539303; dq <dig>  dq <dig>  dq <dig>  dq <dig>  dq <dig>  ef <dig>  dq108252; 100%.

declares that the specimen with code ef <dig> in the test set is recognized to belong to the same class as the specimens dq <dig>  dq <dig>  dq <dig>  dq <dig>  dq <dig>  ef <dig>  and dq108252; besides, the logic formulas that assert such similarities are able to classify all the test individuals of this class without error .

â€¢ the logic formulas associated with each class; a sample of such output is given in table  <dig> below, where the formulas associated with  <dig> species are described. the formulas are formed by a limited number of statements that identify the value  that the given position of the barcode needs to have to satisfy the formula; the following coverage indicates the number of specimens recognized by that formula.

the blog system has been developed using a pipes and filters architecture  <cit> , which provides a structure for computing streams of data. each computational analysis or data manipulation is done by a separate module, or filter. the new data is transferred through pipes between the connected modules. the basic computational modules of the system have been written in ansi c, while a high level web interface can be used to design and interact with the analysis stream. it runs both under windows and linux environments.

the flow diagram of blog in figure  <dig> shows a schematic view of the architecture by representing the system flows and the fundamental modules.

we provide below a description of the blog modules:

â€¢ the sampling module divides the original data files into two or more random samples, according to the sampling strategy that is requested by the user. the system implements standard percentage split and cross-validation; the sampling is designed to take into account, if required, the class distribution, and to perform a required number of repetitions of the sampling step. the created samples are stored in an incidence matrix with the individuals on the rows and the samples on the columns, that is then passed to the next module.

â€¢ the cresample module starts from the sampling matrix and creates the required samples in an expanded dmb format to be used by the following modules; when more samples are to be analyzed, this module is called within a loop.

â€¢ makeclasses is then used to identify the different values that each column may assume. this step is of particular importance when the data is in numerical form, and thus it is required to properly define, for each variable, two or more intervals by means of which a numerical variable can be considered a nominal, or logic, one. for the barcode application the identification of the value is straight-forward, as they will correspond to the  <dig> allelic values that can appear on the sites of the barcode, i.e., a, c, g, and t. nevertheless, this module allows for the introduction and the proper processing of missing values, when present.

â€¢ the discretize module is in charge of creating a new data matrix where each original value is mapped into a numerical code representing the corresponding interval, or value, that appears in the original matrix.

â€¢ the creasc module takes as input the training file in dmb format and creates the optimization problem described in section "shrinking the barcode".

â€¢ the grasp module then executes the grasp solution algorithm  to solve, for a given value of Î², the optimization problem created by the creasc module. the solution of the problem consists in a list of the Î² features selected.

â€¢ the feature selection then projects the samples from their original space into the new, smaller space, defined by the selected features. such projection affects in the same way the training and the testing samples.

â€¢ the crealogic module creates the minsat problem described in section "the extraction of separating logic formulas" in the specific input format required by the logic solver lsquare, that is then called for each different species to create the classification logic formulas.

â€¢ the final module, called evaluation, integrates all the results that have been obtained, in each experiment, by different loops over the classes and over the repetition of the experiments, and creates the output files for the final interpretation of the results.

a standard application of blog is structured in the following way. for each species, or class, s, a 2-class classification problem is defined, where class a contains the individuals of species s, and class b the individuals of the other species. the training data is used to formulate the feature selection problem described in section "shrinking the barcode", and to identify the optimal set of features for different values of the parameter Î². the lsquare system is used to identify logic formulas based on the selected features, to separate the individuals in class a from those in class b. the formula for species s is saved, and the above is iterated for all the species. at the end of this process, we have the logic formulas - one for each class - and apply these formulas to the individuals of the training and testing splits. if an individual is recognized as positive by the formula of species s, we declare its predicted class to be s and then verify if such prediction is correct. when an individual is recognized as positive by more than one formula  we register such an event as a recognition error.

RESULTS
the software has been tested on two data sets provided by the consortium for the barcode of life and one obtained directly from the genbank nucleotide database.

the first data set was provided by the consortium for the barcode of life in the  <dig> conference; it is composed of  <dig> barcode sequences coming from individuals belonging to  <dig> different species. each fragment contains between  <dig> and  <dig> sites . each sequence is extended to  <dig> sites for reaching the same length; initial and final gaps, if present, are handled by our algorithm . this is a selection of barcode datasets extracted from bold , which is based on real barcodes. the species are intentionally hidden by the consortium and are only denoted by an incremental number. the choice of this data set is motivated by the following arguments:

â€¢ the species are not equidistributed: every species is represented, on the average, by  <dig> specimens, but there are some classes with limited available specimens, that make the problem harder ;

â€¢ the variety of data from many species makes it hard to identify the specimen class.

the experiments have been conducted according to the previous described scheme :

â€¢ the data is split into training and testing data, adopting a proportion of 80% or 85% or 90% as training ;

â€¢ for each species s:

- a 2-class classification problem is defined, where class a contains the individuals of species s, and class b the individuals of the other  <dig> classes.

- the training data is used to formulate the feature selection problem described in section "shrinking the barcode", and to identify the optimal set of features for different values of the parameter Î² .

- the lsquare system is used to identify logic formulas based on the selected features, to separate the individuals in class a from those in class b.

at the end of this process, we have  <dig> logic formulas - one for each species - and apply these formulas seperately to the individuals of the training and of the testing splits.

the scheme is then repeated for different random splits of the data in training and testing.

the results are summarized in table  <dig>  that reports a row for each of the experiments that have been conducted. the values of Î²  and the corresponding value of Î± obtained from the optimal solution of the feature selection problem are listed in columns  <dig> and 2; column  <dig> contains the percentage of data used for testing . in the last  <dig> columns are reported the percentage of error obtained on the training and on the testing data, respectively.


                           Î²
                           Î±
the overall error rate decreases, as is to be expected, when a larger training set is used, due to the fact that the information used to extract the formulas is larger and the formulas are therefore more accurate. in the same way, we note that experiments with fewer features  are less precise than those with more features; to any extent, for the largest values of Î² used , the error rates are very small also when the testing data used is larger . this means that the system is able to extract good formulas using only  <dig> of the  <dig> sites that are present in the barcode. moreover, when comparing the error rates obtained on the training set with those obtained on testing we note a very little decay in the performances, thus highlighting the good generalization capabilities of the formulas and the important role of the barcode data for species discrimination.

it is of interest to check the frequency by which the different features  appear in all the formulas that have been identified for the different random splits. we identify a group of sites that appear with particularly high frequency  that are likely to be those whose combination best expresses the difference among the  <dig> species considered: such sites are in position  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig> of the barcode.

the logic formulas are indeed very compact, and very few of them are composed of more than one cnf clause; such clauses are composed of few  literals . in table  <dig> we report as an example a list of the separating formulas for the first  <dig> species of the  <dig> available for one of the experiments with the corresponding correct coverage  and wrong coverage :

the example of the interpretation of the formulas for a subset of the analyzed classes is given in table 3:

â€¢ first line of table 3: if nucleotide in position  <dig> of the barcode has value c, nucleotide in position  <dig> has value a, nucleotide in position  <dig> has value t and nucleotide in position  <dig> has value a then the species is  <dig> with correct coverage of 100% and wrong coverage of 0%.

â€¢ second line of table 3: if nucleotide in position  <dig> of the barcode has value t, nucleotide in position  <dig> has value t and nucleotide in position  <dig> has value c, then the species is  <dig> with correct coverage of 77% and wrong coverage of 0%.

the second data set was provided by the consortium for the barcode of life and is composed of  <dig> barcode sequences coming from specimens belonging to  <dig> different species. the barcode sequences are mainly taken from the kingdom animalia, the phylum chordata, the class mammalia, the infraclass eutheria, the

superorder laurasiatheria and the order chiroptera, or commonly know as bats. also in this case, each sequence is extended to  <dig> sites  with special handling for gaps, if necessary. the sequences are taken from bold  and differ in variety of aspects, length and composition. for this data set the class distribution is more fair, with  <dig> specimens for each, on the average. we have chosen this data set to have a comparison between a fair distributed and a more spread and less populated set.

the experiments have been conducted according to the previously described scheme.

as shown in table  <dig> the results for a less populated set with fewer species have an increased recognition rate. when focusing on a given experiment, interesting considerations may be drawn on the results by a more detailed analysis. for example, considering the correct recognition rates on test individuals for the different classes, we note that, out of the  <dig> species only  <dig> classes do not have a perfect classification rate; namely, noctilio_albiventris_ps <dig>  phyllostomus_discolor, and eumops_hansae. these  <dig> classes are quite under-represented in the training data  and this may easily be a reason for the poor performances obtained; moreover, we also note that for the first  <dig> species no individual in the test data is recognized correctly, and only 50% in the third. such type of information may easily indicate a structural similarity of these  <dig> species with other species that are present and more richly represented in the training data. an example of the logic rules associated with a subset of the species is reported in table  <dig> 


                           Î²
                           Î±
the third data set was obtained from genbank nucleotide database and is composed of  <dig> recent barcode sequences coming from specimens belonging to  <dig> different species. the barcode sequences are mainly taken from the kingdom animalia, the phylum chordata and belong to the commonly know paraphyletic group of the fishes. in this case, each sequence is extended to  <dig> sites  with special handling for gaps, if necessary. because of the different haplotypes and the distinct mitochondrial regions the lengths of the sequences evidently differ from each other. we normalized the downloaded sequences by excluding the under represented species, in order to obtain a balanced training set. for this data set the class distribution is fair, with  <dig> specimens for each species, on the average.

adopting the previously described scheme, we obtain the results presented in table  <dig> and in table  <dig> 


                           Î²
                           Î±
the results shown in table  <dig> are related to the last analysis, in which we have used a higher number of features  in order to obtain similar results to the previous data sets . the formulas are still very compact  and the recognition rates are in line with those of the other experiments.

some general considerations on the results obtained are:

â€¢ the number of sites used for identifying the class of an individual is always very small - smaller, in general, of what is obtained in other experiments presented in the literature , confirming the validity of the barcode information to discriminate among species;

â€¢ the precision of the formulas, when evaluated on a training-test split of the data, is always very high and in line with previous results; even if the method needs a sufficient number of specimens as representative of a species in order to provide robust formulas, a small number  seems to be sufficient to obtain good results ;

â€¢ the formulas produced by the proposed method are not constrained to form a taxonomic structure of the analyzed species .

â€¢ the problem sizes of the described experiments have not caused any computational problem to our method. the feature selection model is linear in the number of specimens, while the dimensions of the barcode fragment  is not at all a problem for standard integer programming solvers. when the number of specimens rises in size, then the use of a specifically designed grasp algorithm  keeps the solution time in a linear relation with the problem size. on the other hand, the identification of the logic formulas with lsquare, although very fast with the considered dimensions, may require longer times when the number of specimens ranges in the tens of thousands. for this reason we are presently experimenting more efficient and parallel implementations of a solution algorithm that would possess, for this part of the method, the desirable scalability.

CONCLUSIONS
in this work we have discussed the application of data mining methods for specimen classification. we consider the problem of the analysis of barcode - a particular fragment of mitochondrial dna that has recently been identified as a potential collector of genetic information that is useful to discriminate among species. the method adopted is comprised of two main steps; the first is based on the compression of the barcode into a reduced set of very informative features using a particular integer programming formulation; the second consists in the application of a logic mining method - the lsquare system - to identify separating formulas on the compressed data. the method appears to be practical, sufficiently fast and precise, exhibits small error rates and produces extremely compact separating formulas for the data sets considered in the experiments. such latter feature plays a very important role in this type of applications as it results in consistent semantic value that can be used by field experts to enhance and complete their knowledge of the studied phenomenon - in this case, the relation between species taxonomies and the coi mitochondrial dna.

the results described in this paper direct the interest of future research into two main directions that go beyond the scope of this paper: one is the detailed comparisons of the correct recognition results with other similar character-based methods with specifically designed experimental designs; the other one is the study of the relations among the small classification formulas obtained and the taxonomical tree-like strucures that are present in the data.

competing interests
the authors declare that they have no competing interests.

authors' contributions
the method described was originally adapted to barcode analysis by paola bertolazzi and giovanni felici. software design and implementation was performed by giovanni felici and emanuel weitschek. experiments were designed and conducted by giovanni felici and emanuel weitschek. all authors contributed equally to the analysis of the experiments and to the writing of the paper.

