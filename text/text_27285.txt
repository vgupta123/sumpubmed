BACKGROUND
synthetic biology has seen the development of many simple gene circuits such as switches , oscillators  and pulse generators  <cit> . larger systems have been constructed  <cit> , but the leap from building low-level circuits to assembling them into complex networks is still a major challenge  <cit> . efforts to do so are plagued by circuit crosstalk, retroactivity, chassis loading effects, and cellular noise, which can render synthetic networks non-functional in vivo  <cit> . although standardization and better part design can partially lower this barrier , design processes that enable the informed selection of appropriate parts are crucial  <cit> .

one of the foundational constructs in synthetic biology is the genetic toggle switch. the toggle switch consists of a set of transcription factors that mutually repress each other . genetic switches play a major role in binary cell fate decisions such as stem cell differentiation, as they are capable of exhibiting bistable behaviour, which gives rise to the existence of two distinct phenotypic states. this allows populations of cells to maintain a heterogeneous response to environmental cues and can increase fitness by bet-hedging  <cit> . switches are powerful building blocks; they underlie electronics and logic systems, and have great potential in synthetic biology. the genetic toggle switch has been used for a number of applications including the construction of a synthetic genetic clock  <cit> , the regulation of mammalian gene expression  <cit> , the development of a predictable genetic timer  <cit> , and the formation of biofilms in response to engineered stimuli  <cit> .

the stability of the toggle switch has been investigated extensively in the literature, but the conclusions drawn vary according to model abstraction. numerous studies have concluded that cooperativity is a necessary condition for bistability to arise . however, lipshtat et al. found that stochastic effects can give rise to bistability even without cooperativity  <cit> . in another study, ma et al. found that stochastic fluctuations can stabilize the unstable steady state in the deterministic system, giving rise to tristability  <cit> . in addition, biancalani et al. identified multiplicative noise as the source of bistability in the stochastic case  <cit> . as is clear from the above, there is yet to exist a consensus on the stability a switch is capable of, and the most appropriate method of modelling it. most of these studies assumed the quasi-steady state approximation   <cit> , which cannot always be assumed to hold in vivo  <cit> .

in terms of system design, extensions of the basic toggle switch motif, including additional positive feedback mechanisms, have been investigated  <cit> , and optimization methods have been used to identify topologies and parameter values for bistable and tristable genetic switches . for stochastic switch design, control theoretic approaches  <cit> , and simulation-based frameworks  <cit> , have been developed. however, none of these existing approaches can be be applied to reasonably sized models, under the assumption of deterministic and stochastic dynamics, and identify regions of parameter space for which switching occurs, which we argue is critical in designing systems under considerable uncertainty.

here we present a computational framework based on sequential monte carlo  <cit>  that can determine the parameter region for a given model to produce a given number of  steady states. uniquely, multistable parameter regions can be identified for both deterministic and stochastic systems, and also complex models with many parameters, thus removing the need for simplifying assumptions. our framework can be used for comparing the conclusions drawn by various modelling approaches and thus provides a way to investigate appropriate abstractions. this framework is available as a python package, called stabilityfinder. we investigate genetic toggle switches and uncover the design principles behind making bistable and tristable switches  we find that both production and degradation rates of transcription factors are key parameters for bistability, and outline how the addition of positive autoregulation, combined with particular parameter combinations, can create multistable switching behaviour. finally we demonstrate the ability of the framework to examine more complex systems and examine the design principles of a three gene switch. these examples demonstrate that stabilityfinder will be a valuable tool in the future design and construction of novel gene networks.



methods
stabilityfinder is based on a statistical inference method that combines approximate bayesian computation  with sequential monte carlo  <cit> . this simulation-based method uses an iterative process to arrive at a distribution of parameter values that can give rise to observed data or a desired system behaviour  <cit> . abc methods are used for inferring the posterior distribution in cases where the likelihood is intractable or is too computationally expensive to evaluate. instead of computing the likelihood, abc methods simulate the data and then compare the simulated and observed data through a distance function  <cit> . given the prior distribution π we can approximate the posterior distribution, π ∝fπ , where f is the likelihood of a parameter, θ, given the data, x. there are a number of different variations of the abc algorithm depending on how the approximate posterior distribution is sampled.

the simplest abc algorithm is the abc rejection sampler  <cit> . in this method, parameters are sampled from the prior and data simulated through the data generating model. for each simulated data set, x
∗, a distance from that of the desired behaviour is calculated, ρ, and if greater than a threshold, ε, the sample is rejected, otherwise it is accepted.





the main disadvantage of this method is that if the prior distribution is very different from the posterior, the acceptance rate is very low  <cit> . an alternative method is abc markov chain monte carlo   <cit> . the disadvantage of this method is that if it gets stuck in an area of low probability it can be very slow to converge  <cit> . the method used here is based on sequential monte carlo, which avoids both issues faced by the rejection and mcmc methods. it propagates the prior through a series of intermediate distributions in order to arrive at an approximation of the posterior. the tolerance, ε, for the distance of the simulated data to the desired data is made smaller at each iteration. when ε is sufficiently small, the result will approximate the posterior distribution  <cit> .

to investigate the multistable behaviour of systems, a number of extensions to existing approaches are required. for a given set of parameter values, sample points are taken across initial conditions using latin hypercube sampling  <cit> , and the ensemble system simulated in time until steady state. the distance function in abc is replaced by a distance on the desired stability of the simulated model. to do this we cluster the steady state coordinates using k-means clustering  <cit>  and use the gap statistic to determine the number of clusters  <cit> . at each iteration, the number of steady states is determined by the number of clusters in phase space. a particle is accepted only if the number of clusters present is within an acceptable distance from the threshold ε. the algorithm is summarised below.





this algorithm is available as a python package, called stabilityfinder. the user provides an sbml model file  <cit>  and an input file that contains all the necessary information to run the algorithm, including the desired stability and the final tolerance, ε, for the distance from the desired behaviour necessary for the algorithm to terminate. the flow of execution is illustrated in fig.  <dig>  since the algorithm is computationally intensive, all deterministic and stochastic simulations are performed using algorithms implemented on graphics processing units , which are used for mutli-threaded computation  <cit> . the algorithm returns the final accepted particles and their associated weights, as well as the initial conditions sampled and the steady state values obtained. the final accepted particles can be used to study the characteristics of the posterior distribution. the sampled initial conditions and the resulting steady state values can be used to study the basins of attraction of the system.
fig.  <dig> using sequential monte carlo to examine system stability. a, b the algorithm takes as input a model and a desired stability structure in phase space. c the system is evolved to achieve the stability of choice via intermediate populations. in this example model, there are two species and two parameters. for the model to be considered bistable, the phase plot of the two species of interest must have two distinct clusters, as shown in . d the parameter posterior distribution for the model to achieve the desired behaviour are given as an output. e flow chart of the python package, stabilityfinder, which implements the algorithm




RESULTS
the gardner switch under deterministic and stochastic dynamics
the first synthetic genetic toggle switch was constructed in e. coli by gardner et al. and consisted of two mutually repressing transcription factors  <cit> . the model used to design and interpret the system is shown in fig. 2
a, and in the deterministic case is defined by the following odes 
 dudt=α11+vβ−udvdt=α21+uγ−v, 
fig.  <dig> analysis of the gardner switch model. a the model consists of two mutually repressing transcription factors. it can be reduced to a two-equation system, where u and v are the concentrations of transcription factors  <dig> and  <dig>  α
 <dig>  α
 <dig> are their effective rates of synthesis, and β, γ represent the cooperativity of each promoter. b two samples of deterministic simulated time courses of the gardner switch and the resulting phase plot and two samples of time courses of the stochastic simulations and the resulting stationary distributions. c, d the deterministic c and stochastic d posterior distributions. these include the one dimensional marginal density plots on the diagonal, and the two dimensional marginal distributions on the off-diagonal. all densities are plotted on the prior range




where u is the concentration of repressor  <dig>  v the concentration of repressor  <dig>  α
 <dig> and α
 <dig> denote the effective rates of synthesis of repressors  <dig> and  <dig> respectively, and β and γ are the cooperativity of repression of promoter  <dig> and of repressor  <dig> respectively. gardner et al. studied the deterministic case and concluded that there are two conditions for bistability for this model; that α
 <dig> and α
 <dig> are balanced and that β, γ > <dig>  <cit> . in order to test stabilityfinder we used it to find the posterior distribution for which this model exhibits bistable behaviour. we therefore set the desired behaviour to two  steady states, and using a wide range of values as priors as shown in the additional file  <dig>  we used stabilityfinder to find the parameter values necessary for bistability to occur. the posterior distribution calculated by stabilityfinder for the gardner deterministic case is shown in fig. 2
c. these results agree with the results reported by gardner et al.  <cit> . for this switch to be bistable α
 <dig> and α
 <dig> must be balanced while β and γ must both be > <dig>  as can be seen in the marginal distributions of β and γ in fig. 2
c.

we next applied stabilityfinder to the case of the gardner switch under stochastic dynamics using the same priors as the deterministic case, and again searched the parameter space for bistable behaviour. the posterior is shown in fig. 2
d. we can see that the conditions on the parameters required for bistability in the deterministic case generally still stand in the stochastic case. there appears to be slightly looser requirements on the parameters of the stochastic model , which is expected due to the nature of clustering deterministic steady states versus stochastic steady states. the gap statistic is used in the case of the stochastic case, as it is capable of dealing with noisier data whereas a simpler and faster algorithm is used for clustering the deterministic solutions . these results demonstrate that stabilityfinder can be used to find the parameter values that produce a desired stability and allow us to confidently apply the methodology to more complex models.

repressor degradation rates are key for achieving bistablity
we next analyzed an extension of the gardner switch model previously studied by lu et al.  <cit> . they considered two types of switches, the classic switch consisting of two mutually repressing transcription factors , as well as a switch with double positive autoregulation . the lu-cs switch was found to be bistable given the set of parameters used, while the lu-dp switch was found to be tristable  <cit> . the classical model used in their study is given by the following system of odes 
 dxdt=gxhxys−kxxdydy=gyhyxs−kyy, 


where 
 his=hi−+λihi+hi−=11+nihi+=1−hi−, 


and g
i represents the production rate, k
i the degradation rate, n
i the hill coefficient, x
i the hill threshold concentration and λ
i the fold change of the transcription rates, and i∈{x
y,y
x,x
x,y
y} .

for the parameter values used in the lu study, the classical switch exhibits three steady states , two of which are stable and one is unstable. using stabilityfinder with priors centred around the parameter values used in the original paper , we can identify the most important parameters for achieving bistability. the posterior distribution of these models are shown in fig. 3
a. we find that the parameters representing the rates of degradation of the transcription factors in the system  must both be large in relation to the prior range, and approximately equal, for bistability to occur. protein degradation rates have been shown to be important for many system behaviours including oscillations  <cit> . we also find that the steady states of the lu-cs model are symmetric: the values for the dominant and repressed species are equivalent in both steady states.
fig.  <dig> the three variants of the deterministic lu models. a the classic switch with no autoregulation is bistable as shown in the stream plot and the phase plot. in the stream plot, the colours indicate the magnitude of the vectors, with yellow indicating high and red low values. the blue points represent stable steady states and the grey points represent unstable steady states. the phase plot shows the steady state values for  <dig> particles at the final population. each particle is represented by a different shade of blue. the most restricted parameters for this behaviour are the degradation rates , which both have to be high while the net protein production for x and y must be balanced. b the extended lu model with a single positive autoregulation on x. this model is bistable when the production rate of x, g
x, is small. c the lu model with double positive autoregulation is tristable as shown in the stream plot and the phase plot. we find two types of tristable behaviour, one where the third steady state is zero-zero and one where the third state is high




the addition of symmetric and asymmetric positive autoregulation
it is known that the addition of positive autoregulation to the classical toggle switch can induce tristability  <cit> . here we investigate the interplay of positive autoregulation on the values of the other parameters in the model. we extended the analysis presented in lu et al. by including the switch with single positive autoregulation , where a single positive autoregulatory feedback is present on one of the genes. this system topology has also been constructed previously  <cit> . the advantage of using stabilityfinder over traditional bifurcation analysis is that the full parameter space is explored rather than solving the system for a single set of parameters. this allows us to deduce model properties that could not otherwise be identified. robustness to parameter fluctuations can be explored, as well as parameter correlations and restrictions on the values they can take while still producing the desired behaviour.

the lu-dp model is given by 
 dxdt=gxhxyshxxs−kxxdydt=gyhyxshyys−kyy, 


whereas the lu-sp switch is modelled using the following ode system 
 dxdt=gxhxyshxxs−kxxdydt=gyhyxs−kyy. 


we find that the switch with single positive autoregulation is capable of bistable behaviour as seen in fig. 3
b, but this is only possible when the strength of the promoter under positive autoregulation, g
x, is small. there appear to be no such constraints on the strength of the original, unmodified, promoter, g
y. we also find that unlike the lu-cs and lu-dp models, the steady states of the bistable lu-sp are not symmetric. the levels of y are around zero and always lower than the levels of x. the levels of both are lower than those found in the lu-cs and lu-dp models.

upon examination of the lu-dp model, we also find that tristability in the switch is relatively robust, as this phenotype is found across a large range of parameter values, with no parameters strongly constrained  but the two parameters for gene expression, g
x and g
y tend to be small compared to the priors. two types of tristable behaviour are identified, one where the third steady state is at  and and one where the third steady state has non-zero values. this result agrees with previous work where it was found that a switch can exhibit two kinds of tristability, one in which the third steady state is high  and one in which it is low   <cit> .

design principles for a switch capable of two, three and four steady states
the lu-dp switch is capable of both bistable and tristable behaviour as well as four coexisting states under deterministic dynamics   <cit> . it is of great interest to understand the conditions under which these three behaviours occur. we carried out a bifurcation analysis of the dp switch using the pydstool  <cit>  in order to get an indication of the stabilities this model is capable of, and at which parameter ranges these are found . this shows that by varying the parameter for gene expression  while all other parameters remain constant we can obtain all three behaviours. we find that if 100≤g
x≤ <dig> the system exhibits four steady states, if 9≤g
x≤ <dig> the system is tristable and if 10≤g
x≤ <dig> the system is bistable .
fig.  <dig> design principles of multistable switches. a using the lu model with added positive autoregulation we uncover the design principles dictating if a switch will be bistable, tristable, or quadristable. b an initial bifurcation analysis of the lu-dp switch uncovers the stabilities it is capable when varying the parameter for gene expression . c–e by considering the bivariate distributions of the parameters we can uncover the differences in the parameters of a bistable switch compared to a tristable switch, compared to a quadristable switch. the posterior distribution of the bistable switch is shown in purple, the tristable switch in red and the quadristable switch in green, all plotted on the prior ranges. the bivariate distributions for which a difference is observed between the stabilities are in black boxes. an example of the phenotype  from each switch is shown next to the corresponding posterior distribution. parameter legend key: g
x production rates; k
x degradation rates; n
xy hill coefficients; x
xy hill threshold concentrations; l
xy transcription rate fold change; n
xx autoregulation hill coefficients; x
xx autoregulation hill threshold concentrations; l
xx autoregulation transcription rate fold change




using stabilityfinder we obtained posterior distributions for the bistable, tristable and quadristable phenotypes . upon examination of the these distributions, we observe that a subset of the parameter values are different for the three behaviours, although the differences are surprisingly subtle. we find differences in the univariate distribution of the parameters for gene expression, g
x, as highlighted in fig. 4
c, box  <dig>  this parameter must be small for four steady states to occur but there are no such restraints for a bistable or a tristable switch. furthermore, parameter x
xx  must be small for tristable and quadristable behaviour to be achieved, but there are no such restraints for a bistable switch, as can be seen in fig. 4
c, box  <dig> 

additionally, we find a difference in the bivariate distributions in the posterior. most notably, we find that parameters x
xx and g
x are tightly constrained in the tristable and quadristable cases, where both parameters are required to be small, but less so in the bistable case . another notable difference is between parameters x
xx and n
xx shown in fig. 4
c, box  <dig>  where they are constrained in the tristable and quadristable cases but not the bistable case. interestingly, we also find parameter correlations conserved between the three behaviours, as seen in fig. 4
c, box  <dig>  where parameters l
xx and g
x,  are negatively correlated in both cases. this highlights the importance of treating unknown parameters as distributions rather than fixed values when studying complex system behaviour. these ensemble based methods are capable of uncovering not only the ranges and values required for certain behaviour, but also the correlations between parameters, which would be missed by optimisation methods.

bistability and tristability using more realistic abstractions
in order to study the switch system in the most realistic way, we avoid using the quasi-steady state approximation  that is often used in modelling the toggle switch. under the assumption of mass action kinetics, the two-equation system becomes a system of  <dig> equations and  <dig> parameters in the classical switch case. these are shown in the additional file  <dig>  in the cellular environment stochastic effects can be non-negligible and should therefore be taken into account when trying to elucidate the behaviours that a system is capable of. therefore, we model these switches using stochastic dynamics.

we find that under stochastic dynamics, both the simple switch, cs-ma, and positive autoregulation switch, dp-ma, are capable of bistable and tristable behaviour . the fact that tristability can occur in the classical model is consistent with the effect of small molecule numbers; if gene expression remains low, it provides the opportunity for small number effects to be observed, and the third unstable steady state to stabilise  <cit> . to verify the robustness of the tristability found in the stochastic case, we re-sampled the posterior distributions, simulated to steady state and confirmed tristable behaviour. as can be seen in fig.  <dig>  differences in the parameter values are observed between the bistable and tristable switches, in both cs-ma and dp-ma models. the design principles for both the cs-ma model and the dp-ma model are summarised in table  <dig> 
fig.  <dig> tristability is possible in the mass action toggle switch models only when simulated stochastically. a the simple toggle switch with no autoregulation can be both bistable and tristable. the two posteriors are shown, plotted on the prior ranges, where the posterior distribution of the bistable switch is shown in blue and of the tristable switch in red. from the posterior distribution we can deduce the the dimerization parameter must be small for tristability to occur but large for bistability. b the switch with double positive autoregulation and its posterior distributions for the bistable and tristable case


bistable
tristable
bistable
tristable
differences are observed between the parameter values of the bistable and tristable cs-ma and dp-ma switches




achieving higher multistability
to further demonstrate the flexibility of our framework we investigated a system capable of higher stabilities. multistability is found in some differentiating pathways, such as the myeloid differentiation pathway  <cit> . we allow for these more complex dynamics by extending the lu-dp model by adding another gene, making it a three gene switch. this new system is depicted in fig. 6
a. in stabilityfinder we look for six steady states, the output being in nodes x and y and use the priors shown in the additional file  <dig>  we successfully find that the system is capable of six steady states, as shown in fig. 6
c. consistent with the lu-dp switch capable of  <dig>   <dig> and  <dig> steady states, we find that the steady states are symmetric . each of the six steady states exists in symmetry with another one, in tightly constrained regions. we find that the most constrained parameters for this behaviour are again the degradation rate of the proteins, k
x. if they are too large or too small the system will not exhibit hexastability. additionally we find that the hill coefficients for the repressors, n
xy, are constrained to be smaller than  <dig>  as seen in fig. 6
d. this example demonstrates that stability finder can be used to elucidate the dynamics of more complex network architectures, which will be key to the successful design and construction of novel gene networks as synthetic biology advances.
fig.  <dig> the three-node mutual repression model, with added positive auto-regulation on each node. a the model is studied in two dimensions using stabilityfinder, with clustering performed on the levels of x and y. b null clines and steady states of the three-node switch. c an example phase plot from the posterior of the three-node switch and d the phase plot of  <dig> particles from the final model. each particle is represented by a different shade of blue. e the posterior distribution of the 6-steady state three-node system plotted on the prior ranges. parameters for degradation, k
x, and the hill coefficient, n
xy, are the most constrained. parameter legend key: g
x production rate; k
x degradation rate; n
xy hill coefficient; x
xy hill threshold concentration; l
xy transcription rate fold change; n
xx autoregulation hill coefficient; x
xx autoregulation hill threshold concentration; l
xx autoregulation transcription rate fold change




CONCLUSIONS
we have developed an algorithm that can identify the parameter regions necessary for a model to achieve a given number of stable steady states. the novelty in our framework over existing methodology is that complex models can be analyzed assuming both deterministic and stochastic dynamics. we have shown that the algorithm can be used to infer the parameter ranges that give rise to specific behaviour in various models. we uncovered the design principles that make a bistable, a tristable and a quadristable switch. we also found that a three-node switch is capable of hexastability. importantly, we removed assumptions made to simplify the switch models and showed that they are still capable of bistable and tristable behaviour.

although we only examined models containing combined transcription and translation, our approach could be applied to any models of switching behaviour, including more detailed kinetic models and more complex multistable switches that exist in natural biological systems, such as developmental pathways. we also limited our framework to the objective behaviour of a given number of stable steady states. however, this approach is extremely flexible, and could be extended to find systems with a given switching rate, or systems robust to a particular set of perturbations, both of which could be of great importance for building more complex genetic circuits.

one limitation of our approach is that we cannot rule out a specific behaviour; it is always possible that some part of parameter space remains unexplored, or because the search space must be predefined, interesting regions are not included in the search. in the bayesian sense, this predefined space is the prior distribution for the parameters that give rise to the stability under investigation. in principle, once our knowledge of these biochemical rate constants grows, we can incorporate these data into the prior regions for exploration. another limitation is that of scalability. our framework can currently be applied to small and medium size gene networks since the computational time is exponential in size, whereas optimization methods are more scalable . this is a manifestation of a general tradeoff between finding an optimal value and exploring a parameter space. however, we argue that for current and relevant problems in synthetic biology, this computational burden is acceptable.

approaches based on parameter space exploration are indispensible tools for providing understanding of general system properties and guiding more detailed experimental and theoretical studies. they will also be key for the design and construction of synthetic gene networks. by selecting standardized parts accordingly, such as promoters, rbs sequences and other untranslated regions , in vivo systems can be matched to parameter regions with a high probability of function.

more generally our results highlight that changing the level of abstraction, in addition to the modification of the feedback structure and parameter values, can significantly alter the qualitative behaviour of a system model. these results advocate the need for a programme of experimental work, combined with systems modelling, to understand the rules of thumb for abstraction in model based design of synthetic biological systems.

additional file

additional file  <dig> supplementary information. contains detailed descriptions of the models and algorithms used. 




