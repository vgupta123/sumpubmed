BACKGROUND
recent technological advances have enabled a wide range of genome-scale experiments and made it easier to obtain multiple types of large-scale data focusing on a specific biological system. all of the experiments need to be combined to address specific biological questions and the series of experiments have to be designed carefully based on a particular technology's advantages and limitations so that the experiments consequently contribute to the purpose of the study. each experimental design can be complicated, and meta-data , as well as the actual data itself, are essential for interpreting experimental results.

in the field of microarray-based studies, miame  has been widely accepted as a guideline for data submission to public repositories. miame requires the description of various types of information that are needed for unambiguous interpretation of the results and reproduction of the experiment  <cit> . a simple and miame-compliant format is mage-tab, which is based on a spreadsheet or a tab-delimited format  <cit> . this format is used for microarray and for high-throughput sequencing-based transcriptome analysis in arrayexpress  <cit> . isa-tab is a variation that extends the targeted fields by covering additional technologies  <cit> . one feature of these formats is a framework called sdrf  that simply and explicitly describes the experimental process including the collection of biological materials, their preparation, and profiling protocols. this type of information is clear when a study is based on simple and typical experiments, but it can be easily missed or misunderstood when a study gets complicated or expanded to include genome-scale profiling.

a central concept underlying sdrf is the investigation design graph , a directed graph that represents the experimental process  <cit> , where each directed edge represents one step of the analysis. mage-tab implements the graph in a spreadsheet-based format as sdrf  <cit> , and the implementation is used to describe 'study' and 'assay' in isa-tab  <cit> . sdrf provides a practical framework for describing and exchanging information on the experimental processes, while idg is more like a concept or idea for recognizing this information. thus, users need to decode an sdrf file in the structure of a graph to understand the contents. the structure of the graph is obvious when the study consists of several materials and steps. however, such a structure is far from intuitive in a spreadsheet file when the study consists of many biomaterials and data objects, resulting in a single idg with many nodes and edges. as more large-scale experiments are conducted in a study, computational support to visualize and verify sdrf files becomes essential.

tab2mage  <cit>  is the only tool that can handle sdrf files and it processes mage-tab formatted files to support microarray data submission to arrayexpress  <cit> . it provides a graphical representation of a sdrf file as idg as well as validation of the file for data submission. here, we develop a complementary tool, sdrf2graph, which focuses on the graphical representation of a wide range of sdrf files. this tool helps sdrf users, including wet scientists who may not be fully familiar with sdrf implementation, describe and exchange information about experiments. it makes the experimental process described in the sdrf files easy to understand and encourages the creation of sdrf files by providing prompt visual feedback. our intention is not to validate a format, since specifications for mage-tab and isa-tab such as acceptable column names are still being discussed  <cit> , but rather to adopt less stringent rules for column names to increase its applicability to a wide range of sdrf files. to more easily facilitate the interpretation of experimental steps, we incorporate information in the graphical representation not shown previously. the enriched information in the graph clearly shows each step even if we are not familiar with the experimental design or technologies.

implementation
sdrf2graph is written in ruby, and the web application is implemented based on webrick, a http server bundled with ruby. the graphical layout and image generation are realized using graphviz  <cit> . the source code and its web application are available from 

RESULTS
graph structure and labels
firstly, we define a graphical representation to be produced by sdrf2graph, since idg was introduced to explain the concept of mage-tab without a formal definition  <cit> . nodes, a structural component of the graph, represent biomaterials or data objects . all of the nodes are encoded as '~name', '~data', and '~file' columns  in sdrf, and we show objects encoded in any columns having these suffixes as nodes in the visualized graph. the only exception is the 'array design file' column. while this represents a data object corresponding to a microarray design, multiple microarrays with the same design are often used in a study and their graphical representation as nodes is not very informative. in fact, graphs used in the original paper on mage-tab  <cit>  and its specification  <cit>  do not show any nodes corresponding to the array design. we process this object as a parameter  rather than a node. the other structural component of the graph, the direct edge, represents a protocol applied to its source node to produce its target node. it is implemented as 'protocol ref' column in the spreadsheet , and we take objects encoded in this column as directed edges in the graph to be represented as described previously  <cit>  and  <cit> .

in addition to the structure of the graph, labels of nodes and edges show essential information of each step in the experiments. while node labels of idg are shown in the previous works  <cit> , edge labels are not incorporated. this worked fine for microarray data because there are several standard experimental designs and all of the members of this field share common knowledge about them. however, edge labels showing protocol information must be more important in a less common experimental design. thus, we implemented an option in sdrf2graph to show protocol names as edge labels. additionally, parameters used in the protocol are required to distinguish similar but different processes as well as protocol name. when the same protocol is applied to different biomaterials with distinct parameters, the differences between them should be clear. for instance, in an rnai perturbation study, distinct double-stranded rnas will be transfected with the same protocol depending on the target genes. the difference between these treatments can be expressed as distinct parameter values to the same protocol , and parameter values are the information to distinguish these steps here. thus, we show parameter values as well as protocol names in the edge labels. while the 'parameter' column contains information supporting the protocol, the 'characteristic' column contains descriptive information for the data object nodes . this also helps to understand what the node represents. we add this information to the node label for explicit understanding of the experimental process described in sdrf.

user interface
to cover a wide range of potential users and usages, we designed sdrf2graph to work as a stand-alone command in unix and as a web-based application . thus, no software needs to be installed to use the latter interface. sdrf2graph is designed for microsoft excel   <cit>  files. these can also be used with an open-source spreadsheet software suit, openoffice.org, using a plug-in. this enables us to obtain immediate and frequent graphical feedback after we modify the file with spreadsheet software. another advantage of this input over the tab-delimited flat-file is that multiple sheets can be opened in a file. a single study consisting of several steps can be divided into small pieces or layers according to arbitrary units  <cit> , resulting in one set of sdrf spreadsheets. these spreadsheets are easily organized in one file with any spreadsheet software format. if a tool accepts only tab-delimited text files, users need to export each spreadsheet separately just to work on it. the use of spreadsheets is beneficial, particularly when a study has numerous experimental steps so that its description consists of several sdrf spreadsheets.

many procedural steps greatly influence the size of the idg, and a large idg makes it difficult to follow experiments even after visualization. this can be addressed by splitting up the entire idg into small sub-graphs corresponding to arbitrary units of experiments. since users can define an arbitrary unit as separate spreadsheets, an option to specify the spreadsheets is provided. visualization of the specified spreadsheets helps users when the study consists of numerous experimental steps.

use case : existing mage-tab and isa-tab files
here we show several examples of sdrf files and their graphical representations generated by sdrf2graph. firstly we show an example of a mage-tab file . this is a simple microarray study, in which three different conditions are replicated twice, and each sample is profiled with a single-color affymetrix microarray followed by normalization. a subset of the sdrf  is visualized by sdrf2graph , where node characteristics , edge names , and their parameters  are shown in the graph. the topology or overview of the graph ) shows that hybridization is performed six times, and all of the produced data are normalized and summarized in a single text file. the zoom view ) shows that the graph is self-explanatory according to the information for nodes and edges, such as genotype of devised cell line, protocol name used for cell growth, and its media.

another example is a study of the rat liver, where plasma metabonome analysis and liver transcriptome analysis are performed in combination with a clinical chemistry analysis  <cit> . an isa-tab file of this study is obtained from the isa-tab website  <cit>  and is visualized by sdrf2graph . this demonstrates that sdrf2graph successfully visualizes the idg structure of the study, so that we can follow the experimental process:  <dig> mice are fed a high-fat diet, then clinical diagnosis, metabonome and transcriptome analysis are performed. we are able to follow which mice are analyzed by which method in this visualization.

use case : fantom <dig> time course study
the examples above demonstrate the applicability of sdrf2graph to existing mage/isa-tab files. here, we apply it to describe a study in our laboratory of several genome-scale experiments including novel technology to see if the tool facilitates the creation of sdrf files. deepcage is a newly developed technology to quantify promoter activities by high-throughput sequencing of the mrna 5'-end. the cage protocol includes a barcode-tagging process  <cit> , in which a linker including a unique sequence is ligated to each rna sample so that we can recognize the original rna from which each 5'-end of mrna is derived after the rna is pooled. we had to design a unique sdrf file describing this technology.

as part of the international collaborative research activity, fantom <dig> , we applied the deepcage technology to a human macrophage cell line over a time course to elucidate the transcription regulatory network behind human macrophage differentiation  <cit> . six time points were profiled with three biological replicates, and each time point was tagged with a different barcode and pooled per replicate. an sdrf spreadsheet corresponding to a part of these cage experiments, figure  <dig>  is visualized by sdrf2graph  and 5). the graph topology ) clearly shows three replicates, where the samples derived from different time points were pooled per replicates. a closer look at the first replicate ) shows that distinct barcodes were used for each time point.

the same samples were profiled with a conventional microarray, and the same time points  were subjected to chip/chip analysis. the entire experiment consisted of several steps, and its corresponding sdrf file became quite large . sdrf2graph visualization , helped our description and we received rapid feedback on the experimental design. we were able to look at connectivity and examine the replicates.  connectivity: inconsistencies of node names were introduced several times in the editing step, resulting in a disconnected graph. for example, we started from a spreadsheet to describe a small piece of experiments, then expanded the sdrf by adding spreadsheets. during the expansion and repetitive revision of each sheet, we needed to go back and forth between the distinct sheets, resulting in inconsistent node names between the spreadsheets.  replicates: we used multiple types of technologies to characterize one model system with biological and technical replicates, and the wrong number of replicates was introduced several times. this was caused by incorrectly copying and pasting of rows to create rows similar to existing ones. prompt visual feedback of the edited sdrf file made it easy to examine the graph topology and we could identify such mistakes with less effort.

sdrf2graph's advantages and limitations
a consistent description of complex experimental situations is important especially in the light of recently emerging technologies and ideas that enable us to simultaneously characterize various experimental aspects of biological material in a genome-wide and innovative way. sdrf provides a practical framework to represent such complicated experimental setups and steps, and tab2mage  <cit>  was the first and is the only available tool to support this framework. one of the bundled scripts, expt_check.pl, provides a functionality to visualize sdrf files, and its visualization based on graphviz  <cit>  helps to understand the descriptions. however, the software has two limitations:  it requires local installation, and  only a text file can be input. the former restricts the utility of sdrf files, especially for non-experts in data annotation in this field, although one of its elegant features is a simple spreadsheet-based framework. the latter limitation does not facilitate the use of multiple sheets to represent a single experiment, which is an indispensable feature of sdrf to describe large and complex experiments. sdrf2graph addresses these two points by providing a representation consistent with tab2mage  <cit> , which is widely accepted. in contrast, sdrf2graph does not offer any other functionality as implemented in tab2mage  <cit> , such as validation of data files, conversion to mage-ml  <cit> , and other support for data submission. for the submission of microarray data to arrayexpress for example  <cit> , tab2mage  <cit>  is more suitable than sdrf2graph.

the release of isacreator  <cit>  has been announced recently. though the software must be installed, it does support the creation of sdrf files and their visualization with its own graphical interface. this approach will make it easier to generate complete files with rigid structures and ontologies; this is particularly beneficial for data submission to public repositories after data assembly and analysis. in contrast, sdrf2graph focuses on visualization and the added benefit that no installation is required and users can create data files by themselves using their favorite software .

although sdrf provides a practical open framework, tab2mage  <cit>  has so far been the only available implementation supporting the format. sdrf2graph promotes the applicability of the sdrf format by complementing the functionality of existing tools for the scientific community.

CONCLUSIONS
we developed a new tool, sdrf2graph, to visualize an sdrf file describing experimental steps . we demonstrated that it is applicable to a wide range of sdrf files, from mage-tab files describing transcriptome analysis to isa-tab files describing a study consisting of multiple omics-scale technologies. it facilitates the description of experiments using various genome-scale technologies. furthermore, it aids in the interpretation of existing sdrf files and can be used to create files for which templates do not exist. as the tool makes it easy to quickly create sdrf files describing a study, it will facilitate internal communication within large complex studies as well as formal submission of data to public repositories.

availability
- project name: sdrf2graph

- project homepage: 

- operating system: unix or gnu/linux

- programming language: ruby

- other requirements: graphviz , ruby-zip 

- license: ruby's license

abbreviations
sdrf: sample and data relationship format; idg: investigation design graph; miame: minimum information about a microarray experiment; fantom: functional annotation of the mammalian genome.

authors' contributions
hk wrote the code of the software and the manuscript. cd and yh were involved in supervision.

supplementary material
additional file 1
an example of sdrf file. a part of mage-tab file, e-mexp- <dig>  which is used in figure  <dig> 

click here for file

 additional file 2
an sdrf file for fantom <dig> data. an sdrf file for the fantom <dig> data.

click here for file

 additional file 3
sdrf2graph representation for the fantom <dig> data. sdrf2graph output of the additional file  <dig> 

click here for file

 additional file 4
sdrf2graph source code. the source code of sdrf2graph.

click here for file

 acknowledgements
we would like to thank p. carninci and c. plessy for their discussion on experimental protocols; m. kanamori-katayama and k. murakami for their discussion on sample information; f. hori for her discussion on meta-data; m. burroughs and t. rodgers for english proofreading; h. suzuki for his support of this work; all members of the fantom consortium for their collaboration; and the mged uhts workshop for the fruitful discussions and information exchanges. this study was supported by a grant of the genome network project from the ministry of education, culture, sports, science and technology, japan to yh
