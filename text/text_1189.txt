BACKGROUND
the structural and functional role of a codon in a gene determines its ability to freely change. for example, nonsynonymous  substitutions may not be tolerated at certain codon sites due to strong negative selection, while at other sites some nonsynonymous substitutions may be allowed if they do not affect key physicochemical properties associated with protein function
 <cit> . thus, at such preferentially changing sites, more frequent substitutions occur between physicochemically similar amino acids  than dissimilar ones
 <cit> . methods which use changes in physicochemical amino acid properties have thus been proposed in the study of evolution. for example,
 <cit>  use distances to calculate deviations from neutrality for a particular amino acid property. alternative approaches model the evolution of protein coding sequences as continuous-time markov chains with rate matrices that distinguish between property-altering and property-conserving mutations as in
 <cit>  and
 <cit> . more recently,
 <cit>  proposed a bayesian hierarchical regression model that compares the observed amino acid distances to the expected distances under neutrality for a given set of amino acid properties and incorporates mixture priors for variable selection. the hierarchical mixture priors enable the model in
 <cit>  to identify neutral, conserved and radically changing sites, while automatically adjusting for multiple comparisons and borrowing information across properties and sites.

a common feature of all the methods listed above is the implicit assumption that properties are independent from each other in terms of their effect on evolution. a review of the amino acid index database , which lists more than  <dig> amino acid properties, shows that a large number of them are highly correlated. although the correlations we observe in the data can be different from those computed from the raw amino acid scores due to the influence of factors such as codon bias, by ignoring these correlations we are also ignoring the fact that correlated properties may affect a particular site in similar ways. hence, approaches that do not take into account the correlations in the rates of mutations on different codons do not make use of key information about the relative importance of different physicochemical properties on molecular evolution.

a natural way to account for correlations in the data is by considering a factor structure, see for example
 <cit> . however, selecting the number and order of the factors can be a difficult task in this type of factor models. in addition, the particular structure of the model in
 <cit>  makes it difficult to incorporate the effect of the factors on regions that are very strongly conserved. this paper extends the bayesian hierarchical regression model in
 <cit>  by placing a nonparametric prior on the distribution of the regression coefficients describing the effect of properties on molecular evolution. the prior is an extension of the well known dirichlet process prior
 <cit>  to model separately exchangeable arrays
 <cit> . as in
 <cit> , the main goal of the model described in this paper is to identify sites that are either strongly conserved or radically changing. in order to account for correlations across properties, our model clusters properties with similar effects on evolution, and within each such group, clusters sites with similar regression coefficients and nonparametrically estimates their distribution. in addition to accounting for correlations across properties, this structure allows us to dramatically reduce the number of parameters in the model and generate interpretable insights about molecular evolution at the codon level.

although the clusters of properties can in principle be considered nuisance parameters that are of no direct interest, in practice posterior inference on the clustering structure can provide interesting insights about the molecular evolution process of a given gene. indeed, as will become clear in the following sections, our approach incorporates the effect of amino acid usage bias. hence, any significant differences between the cluster structure estimated from the observed protein-coding sequence alignment and the correlation structure derived from the raw distances between the properties in such cluster can be interpreted a signal of extreme amino acid usage bias in that particular region of the genome.

the rest of the paper is organized as follows. a brief review of dp mixture models along with the details of our model is provided in the methods section. this section also includes a review of some of the currently available methods for characterizing molecular evolution that take into account changes amino acid properties. the model is then evaluated via simulation studies and illustrated through a real data example. the simulated and real data analyses, as well as comparisons between the proposed semiparametric regression approach and other methods, are presented in results and discussion. finally, the conclusions section provides our concluding remarks.

methods
dirichlet process mixture models
the dirichlet process  was formally introduced by
 <cit>  as a prior probability model for random distributions g. a dp prior for g is characterized by two parameters, a positive scalar parameter ρ, and a parametric base distribution  g <dig>  ρ can be interpreted as the precision parameter, with larger values of ρresulting in realizations of g that are closer to the base distribution g <dig> 

one of the most commonly used definitions of the dp is its constructive definition
 <cit> , which characterizes dp realizations as countable mixtures of point masses. specifically, a random distribution g generated from dp is almost surely of the form 

 g=∑l=1∞wlδϕl, 

 where
δϕl denotes a point mass at ϕl. the locations ϕl are i.i.d. draws from g <dig>  while the corresponding weights wl are generated using the following “stick-breaking” mechanism. let w1=v1and define
wl=vl∏r=1l− <dig> for l= <dig> ,…, where {vl:l= <dig> ,…} are i.i.d. draws from a beta distribution. defining the weights in this way ensures
∑l=1∞wl= <dig>  furthermore, the sequences {vl:l= <dig> ,…} and {ϕl:l= <dig> ,…} are independent.

the dp is most often used to model the distribution of random effects in hierarchical models. in the simplest case where no covariates are present, these models reduce to nonparametric mixture models . assume that we have an independent sample of observations y1y <dig> …,yn such that
yi|θi∼indk, where k is a parametric density. then, the dp mixture model places a dp prior on θi as 

 θi|g∼i.i.d.g,i= <dig> …,ng|ρ∼dp 

the almost sure discreteness of realizations of g from the dp prior allows ties in θi, making dp mixture models appealing in applications where clustering is expected. the clustering nature is easier to see from the pólya urn characterization of the dp
 <cit>  which gives the induced joint distribution for the θis, by marginalizing g over its dp prior. under that representation, we can write
θi=θξi∗ where
θ1∗,θ2∗,… is an independent and identically distributed sample from g <dig> and the indicators ξ <dig> …,ξn are discrete indicators sequentially generated with ξ1= <dig> and 

 pr=rkii+ρk≤maxj≤i{ξi}ρi+ρk=maxj≤i{ξi}+ <dig>  

 where
rki=∑j=1ii and 

 i=1ξj=k0otherwise. 

one advantage of dp mixture models over other approaches to clustering and classification is that they allow us to automatically estimate the number of components in the mixture. indeed, from the pólya urn representation of the process it should be clear that, although the number of potential mixture components is infinite, the model implicitly places a prior on the number of components that, for moderate values of ρ, favors the data being generated by an effective number of components k∗=maxi≤n{ξi}<n.

the model
our data consist of observed and expected amino acid distances derived from a dna sequence alignment, a specific phylogeny, a stochastic model of sequence evolution, and a predetermined set of physicochemical amino acid properties. in the analyses presented here, we disregard uncertainty in the alignment/phylogeny/ancestral sequence level since our main focus is the development and implementation of models that allow us to make inferences on the latent effects that several amino acid properties may have on molecular evolution for a given phylogeny and an underlying model of sequence evolution. extensions of these analyses that take into account these uncertainties are briefly described in conclusions. for further discussion on this issue, see also
 <cit> .

in order to calculate the observed distances, we first infer the ancestral sequences under a specific substitution model and a given phylogeny. in our applications, we use paml version  <dig> 
 <cit>  and the codon substitution model of
 <cit> , which accounts for the possibility of multiple substitutions at a given site. nonsynonymous substitutions are then counted by comparing dna sequences between two neighboring nodes in the phylogeny. the observed mean distance, denoted as yi,j for site i and property j, is obtained as the mean absolute difference in the property scores due to all nonsynonymous substitutions at site i. only those sites with at least one nonsynonymous change from the ancestral level are retained for further analysis.

to compute the expected distances, note that each codon can mutate to one of at most nine alternative codons through a single nucleotide substitution
 <cit> , only some of which are nonsynonymous . let nk be the number of nonsynonymous mutations possible through a single nucleotide change, corresponding to a particular codon k . let
dk,li,j be the absolute difference in property j between nonsynonymous codon pairs at site i differing at one codon position, where l= <dig> …,nk. the frequency of codon k at a particular site i in the dna sequence under study is denoted by
fki. then, the expected mean distance for a particular site i and a given property j is given by 

 xi,j≡dei,j=∑k=161fki∑l=1nkdk,li,j∑k=161fkink. 

we consider a hierarchical regression model that relates xi,j to yi,jand allows us to compare the expected and observed distances at the codon level for several properties simultaneously with the following rationale. if a given site i is neutral with respect to property j, then yi,j≈xi,j. if property j is conserved at site i, then yi,j<<xi,j and finally, if property j is radically changing at site i, then yi,j>>xi,j.

to construct our model, we first standardize the distances xi,j and yi,j by dividing them by the maximum possible distance for each property. this enables us to use priors with the same scale for all the regression coefficients. our regression model for the standardized distances
yi,j∗ and
xi,j∗, for sites i= <dig> …,i and properties j= <dig> …,j, can be written as 

  yi,j∗|βi,j,σi,j2∼nifβi,j=0nifβi,j≠ <dig>  

where
nio is the observed number of nonsynonymous changes at a particular site i and βi,j and
σi,j <dig> are the regression coefficient and variance parameter associated with site i and property j. the mixture model accounts for the fact that some of the
yij∗s can be equal to zero as some nonsynonymous changes do not change the value of the property being measured .

to complete the model, we need to describe a model for the matrix of regression coefficients βi,j. there are a number of possible models for this type of data which utilize bayesian nonparametric methods; some recent examples include the infinite relational model 
 <cit> , the matrix stick breaking process 
 <cit> , and the nested infinite relational model 
 <cit> .

in this paper we focus on the nirm, which is constructed by partitioning the original matrix into groups corresponding to entries with similar behavior. this is done by generating partitions in one of the dimensions of the matrix  that are nested within clusters of the other dimension . this structure allows us to identify groups of  properties with similar pattern and then, within each such group, identify clusters of sites with similar values of βi,j. in our setting, we take
= and employ a nirm to generate a prior for .

more specifically, we denote by θj=′the vector of regression coefficients and the associated variances corresponding to property  j. to obtain clusters for the properties, we assume that θj∼f, where 

  f=∑k=1∞Πkδθk∗ 

is a random distribution such that
Πk=vk∏s<k, vk∼beta, and
θk∗∼hk. indeed, the discrete nature of f ensures that ties among the θjhappen with non-zero probability.

to obtain cluster-specific partitions for the sites , hk  has to be chosen carefully. in particular, we write
θk∗=′ for any specific specific cluster of properties k and let 

  θi,k∗∼∑l=1∞wl,kδφl,k, 

with
wl,k=ul,k∏r<l{1−ur,k}, ul,k∼beta for every k, and φl,k are independently drawn from the baseline measure g <dig> l,k.

the baseline measure g <dig> l,k is chosen to accommodate the fact that some
yi,j∗s can be zero, since some nonsynonymous changes can keep the value of the property being measured unchanged. thus, g <dig> l,kis a mixture with a point mass at zero and a continuous density otherwise. to allow for a more flexible model we assume that different prior variances are associated with the
yi,j∗s which are zero and those
yi,j∗s that are different from zero, with the specific form of g0lkas below. 

  φl,k=|g0lk∼g0lk 

 with 

 g0lk=λ1{ϕl,k=0}p1+pp <dig>  

where
p1∼inv-ga,
p∼n and
p2∼inv-ga. here ϕl,k and
ϑl,k <dig> respectively denote the unique values βi,jand
σi,j <dig> can take, whereas λ is the prior probability that ϕl,khas the value zero .

note that our model implies that both sites and properties are exchangeable a priori. if no additional prior information is available, this type of assumption seems reasonable. however, a posteriori, it is possible to have sites behave differently in different clusters.

to complete the model we place hyperpriors on all parameters of the resulting model. conjugate priors are chosen for ease of computation. αk denotes the mean for the ϕl,ks that are different from zero belonging to a specific cluster of properties k and is assumed to have a n prior for all k. the dp concentration parameters ρand γk are assumed to follow ga with mean aρ/bρ, and ga with mean aγ/bγ for all k, respectively. λ, which is the prior probability for the point mass at  <dig> in g0lk, follows a beta. the specific choice of hyperparameters is discussed later as part of each data analysis. in general, we use ga priors for the dp concentration parameters and a n prior for αkto correspond to our assumption of neutrality a priori for the properties.

related work
we compare results from our proposed method with results from a few currently available methods that aim to characterize molecular evolution while also taking into account changes in amino acid properties, namely, the regression model in
 <cit> , treesaap <cit> , and evoradical <cit> .

in
 <cit> , the first level of the model is the regression equation on
yi,j∗ as in equation , but it implicitly assumes independence among properties and independence among sites unlike our current model. the model in
 <cit>  is suitable for use when a few mostly independent amino acid properties are being analyzed whereas the new semiparametric model is better suited to the analysis of a large number of possibly correlated properties.

treesaap uses the methods of
 <cit>  to classify nonsysnonymous substitutions into one of m categories, with higher numbered categories corresponding to sites showing radical changes and lower numbered categories used for sites showing conserved changes for a given property. for the analysis considered here, we used  <dig> categories where categories  <dig>   <dig>  and  <dig> corresponded to sites showing radical changes, and categories  <dig> and  <dig> to sites showing conserved changes. nonsynonymous changes are inferred from the ancestral reconstruction using the nucleotide substitution models in baseml implemented in paml. we used a bonferroni correction to correct for multiple comparisons.

evoradical implements the models of
 <cit> , which use partitions of amino acids to parameterize the rates of property-conserving and property-altering codon substitutions in a maximum likelihood framework. the model considers three types of substitutions: synonymous, property-conserving nonsynonymous and property-altering nonsynonymous which is a slight improvement from
 <cit> . for analyses with multiple properties, one has to create different partitions for the different properties and run evoradical for each property.

posterior simulation
various algorithms exist for posterior inference of dp mixtures - some of the most popular ones use  the pólya urn characterization to marginalize out the unknown distribution
 <cit> ,  a truncation approximation to the stick-breaking representation of the process which paves the way for the use of methods employed in finite mixture models
 <cit> ,  reversible jump mcmc or split-merge methods
 <cit> . some other recent approaches have also used variational methods
 <cit>  and slice samplers
 <cit> .

we use an extension of the finite mixture approximation discussed in
 <cit>  for its ease of implementation. truncating f at a sufficiently large k, we write
f=∑k=1kΠkδθk∗, with the weights Πkand locations
θk∗ generated as described earlier in this section. next we introduce configuration variables {ζj} such that, for k= <dig> …,k, ζj=k if and only if
θj=θk∗. similarly for gk, we truncate at a sufficient level l, and introduce another set of configuration variables {ξi,k} where ξi,k=l, with l= <dig> …,l, if and only if
θi,k∗=φl,k. additional details about the algorithm are provided in the appendix.

to determine the truncation levels k and l, we follow
 <cit> . in particular, note that conditional on ρ , the tail probability
∑k=k∞Πk has expectation {ρ/}k− <dig>  using prior guesses for ρand acceptable tolerance levels for the tail probability to be small, one can then solve for the truncation level k. in our analyses, we used k and l in the range of  <dig> to  <dig>  these values are in line with those used in other applications .

RESULTS
empirical exploration via simulation studies
we present two simulation studies to check the performance of the model under different scenarios. additional simulation scenarios that may be of interest are available as an additional file
 <dig> 

simulation study 1
the setup for the first simulation is as follows. we generate values for the distinct regression coefficients  from a n. the number of distinct regression coefficients depends on the particular clustering structure for the corresponding simulation. once we obtain the regression coefficients, we generate observations yi,j from n. the xi,js are obtained from the lysin data set described below with analyses for  <dig> properties, which implies j= <dig> and i= <dig> 

we fitted the model in the model subsection to the
yi,j∗s and
xi,j∗s, with the following modifications:  the nirm is imposed on βi,j, so φl,k=ϕl,k and  ϕl,k∼g0where g0∼n. we used k= <dig> and l= <dig> for the simulations. the mcmc algorithm was run with the following hyperpriors: ρ∼ga, γk∼ga for all k, α∼n. σ2∼inv-ga and τ2∼inv-ga were chosen such that the prior means corresponded to the true values for these hyperparameters. results are based on  <dig> iterations, with the first  <dig> discarded as burn-in. convergence was assessed by running two chains where each chain was initialized by randomly assigning the βi,js to different partitions. posterior summaries based on the two chains were consistent with each other.

in this scenario, we had four clusters for the columns, each with differing number of groups, leading to twelve distinct cluster combinations for the entire matrix of βi,js . figure
 <dig> shows the marginal probabilities for any two columns  of belonging to the same cluster. the model correctly identifies that there are  <dig> clusters for the columns and assigns each set of columns to its corresponding cluster with no uncertainty.

similar graphical summaries obtained for the structure of rows within each cluster of columns show that the correct clustering structures for the rows, within each cluster of columns, are inferred . for this level, however, there is some uncertainty about the membership of the clusters for a few rows. see, for example, the right panel of figure
 <dig>  some rows in cluster  <dig>  are sometimes being assigned to cluster  <dig> . the distinct values of ϕ used for these two clusters were  <dig>  and  <dig> , therefore, it does not seem unreasonable to see some uncertainty in the assignment of clusters. posterior means of
β^i,js agree closely with the true values as shown in figure
 <dig> 

this scenario corresponds to the type of situation we expect on most real datasets: properties will cluster into groups and, within each group of properties, clusters of sites with similar responses can be clearly identified. our results suggest that, as expected, the model is capable of identifying these multiple clusters with high accuracy and therefore accurately estimate the value of the regression coefficients. other scenarios, including extreme cases where all properties belong to a common cluster while sites belong to one of several clusters, and cases where each property has a different effect on amino acid rates are available as additional file
 <dig> 

to investigate the effect of the truncation levels and the priors on our model, we performed sensitivity analysis by varying the truncation levels as well as the different hyperparameters. increasing the truncation level to  <dig> did not affect the results and the estimated posterior means of the βs showed close agreement with the true values. the analyses was also fairly robust to the choice of the priors, since varying the hyperparameters had almost no effect on the results. decreasing the prior variance of τ <dig> makes the results marginally better, i.e., posterior means of the βi,js,
β^i,js, are slightly closer to the true values.

simulation study  <dig> - data simulated from a biological model
in our second simulation study the model is evaluated in the context of biological sequences generated from an evolutionary model. in particular, a markov model was used to generate  <dig> sequences of  <dig> codons each. for the first one-third of the sites  we used transition probabilities obtained from the codon-substitution model of
 <cit>  with equal equilibrium probabilities for all  <dig> codons. for the second one-third of the sites , we modified the transition probability matrix from the previous step by increasing the probabilities of transitions between codons that have small distances for volume and decreasing the probabilities of transitions between codons that have large distances for volume - this was done to encourage only those changes that conserve volume in this part of the sequences. finally, for the last one-third of the sites , we modified the original transition probability to encourage radical changes in hydropathy. thus, we increased some transition probabilities between codons that have very different hydropathy scores and decreased a few of those that have similar hydropathy scores. note that, since the equilibrium probabilities are either uniform or roughly uniform across all sites, the correlation structure across properties is retained in the expected distances, which simplifies the interpretation of the results.

once we obtained the sequences, we generated ancestral sequences using paml, version  <dig> ,
 <cit>  and calculated observed and expected distances yi,j and xi,j for five properties, namely, hydropathy , volume , polarity , isoelectric point  and partial specific volume . of these, h and p are correlated and so are mvand v <dig> 

our model was fitted with k= <dig> and l= <dig> as truncation levels. the prior distributions were the same as the ones used for our previous simulation. results are based on  <dig> iterations, of which the first  <dig> were burn-in. there did not seem to be any obvious problems with convergence, which was assessed by visual inspection of trace plots of some of the parameters.

the analyses found that there were three clusters of properties - the first cluster has properties h and p, the second cluster comprised of properties mv and v <dig> and the third cluster only had property phi as shown in figure
 <dig>  figure
 <dig> shows the posterior means of βi,js for representative properties of the three clusters in figure
 <dig>  sites  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig> have large posterior means
β^ijs for cluster  <dig> . these are also the same sites that show up in the small cluster at the top right in figure
 <dig>  specifically, figure
 <dig> shows how often any two sites in cluster  <dig> are grouped together. the sites in the lower left  have small posterior means
β^i,js for these properties  and are grouped together more often. the big group of sites in the middle mostly seem to have mean
β^i,js around  <dig> while sites  <dig>   <dig>   <dig>  and  <dig> have the largest
β^i,j values and very large probabilities of being clustered together in cluster  <dig>  thus, the model successfully identifies sites that have similar βi,jvalues in a specific cluster and groups them together. groups of sites that change a property can also be identified for clusters  <dig> and  <dig> in figure
 <dig>  in particular, for cluster  <dig> , there is a big group of sites which conserve these properties. most of these sites are in the central one-third portion  which were simulated under a transition probability matrix that favors transitions that conserve volume. finally, for cluster  <dig>  there is one large group of sites which conserve the property and one group comprising sites  <dig> and  <dig> which change the property greatly.

to better understand the performance of our method, we also analyzed the sequences generated above with the parametric regression model in
 <cit> , treesaap <cit> , and evoradical <cit> . table
 <dig> lists the thirty sites with the largest posterior means
β^i,js for h, and the thirty sites with the smallest posterior means
β^i,js for mv for the regression model of
 <cit>  and also for our new semiparametric approach. many of the same sites are identified by both methods, however, our new method performs slightly better than the regression model in
 <cit> . in particular the new method identifies two additional sites in the 61- <dig> region as sites that change h.

 <dig> sites with largest posterior mean
 <dig> sites with lowest posterior mean
sites marked in bold are the ones which are in the region of interest - for h this is where radical changes were encouraged and for mvwhere small changes were encouraged while generating the sequences. underlined sites are identified by both methods.

table
 <dig> lists sites that treesaap finds significant for the different properties. all of the sites that treesaap finds significant are also identified by our methods. however, note that once we correct for multiple comparisons in the treesaap results, only one site  still remains significant. we note that the hierarchical specification of the priors in our models automatically accounts for multiple comparisons and no corrections are needed .

values in parentheses denote the cut-off values for the z-test statistic. sites marked in bold are in the region of interest.

finally, we analyzed the sequences generated previously with evoradical using two different partitions
 <cit>  - one for p and the other for mv. we chose to run evoradical with p instead of h, since a partition of the amino acids for polarity was already available in
 <cit> . additionally, given that h and p are correlated, we expect to see somewhat similar results for these two properties.

table
 <dig> lists site-specific results from evoradical. the sites listed have high posterior probabilities  of being in the different site classes. this was the criterion that was used to identify significant sites in
 <cit> . the results presented here correspond to model a <dig> in
 <cit>  which uses ω for the nonsynonymous to synonymous substitution rate ratio for codons encoding amino acids with properties in the same partition, and γmeasures the nonsynonymous to synonymous substitution rate ratio between codons for properties belonging to different partitions. while the sites listed for p somewhat match results from the other methods, the results for mv are not in agreement. this is probably due to the fact that partitions are not always directly comparable with the amino acid distances. for example, under the volume partition of
 <cit> , both glycine and valine are small and glutamine is large, while looking at the volume scores glycine is very different from valine and glutamine. thus, our models would consider a change from glycine to valine as radical, whereas for the partition-based method of
 <cit> , there would be no change. the fact that the user has to define a property-specific partition in advance, as opposed to directly working with the physicochemical distances, is one of the disadvantages of partition-based methods.

sites marked in bold are in the region of interest.

illustration with lysin data
our proposed model was applied to the sperm lysin data set which consisted of cdna from  <dig> abalone species with  <dig> codons in each sequence
 <cit> . sites with alignment gaps were removed from all sequences, which resulted in  <dig> codons for the analysis presented here. the phylogeny of
 <cit>  and the codon substitution model m <dig> in paml, version  <dig> ,
 <cit>  was used to generate the ancestral sequences. the model m <dig> uses a discretized beta distribution to model ω values between zero and one with probability p <dig> and allows for an additional positive selection category with ω> <dig> and probability p <dig> 

the lysin data was analyzed with the model in the model subsection with the  <dig> amino acid properties listed in table
 <dig>  a few of the properties were chosen because of their functional importance. some of the other properties have been previously used in analyses by
 <cit> . only sites which showed at least one nonsynonymous change were retained for the final analysis, which led to a data set with  <dig> sites. we used k= <dig> and l= <dig> as truncation levels for this data. the prior distributions with the following hyperparameters were used in the analysis. the dp concentration parameters ρ and γk were assumed to follow a ga. λ, the prior probability for ϕl,k being  <dig>  was assumed to follow a beta which implied that about 20% of the unique βi,js were expected to be  <dig> a priori. aκand bκ, the hyperparameters for the prior of
ϑl,k <dig> when ϕl,kis  <dig>  were chosen as  <dig> and  <dig> which implied a prior mean of  <dig> . when ϕl,k is different from zero,
aσ∗= <dig> and
bσ∗= <dig> control the prior for
ϑl,k <dig>  v <dig>  the scale factor for
ϑl,k <dig>  was fixed at the ratio of prior means of σ2and
τi <dig> . finally, the αks were assumed to follow a n to conform to our prior assumption of neutrality for the properties. results are based on  <dig> iterations, of which the first  <dig> were burn-in. convergence was assessed by visual inspection of trace plots of some of the parameters and there did not seem to be any obvious problems with convergence.

properties marked by ∗ are from
 <cit> .

figure
 <dig> shows the marginal posterior probabilities of any two properties being assigned to the same cluster. there seem to be four mostly distinct clusters in the properties in our list. the biggest cluster consists of  <dig> properties that are related to polarity and hydropathy. all  <dig> properties are assigned to this cluster with very high probability. the next cluster is comprised of the properties bl, and c. there is also a fairly big cluster whose members are related to volume . pzim, which is correlated with p to some extent, is clustered with phiwith which it shows a large correlation value . there is some uncertainty regarding the membership of k <dig> and esm, since both of them are assigned to the largest cluster about 50% of the time, while esm is clustered with properties related to volume to a lesser extent. pk1is the only property that is almost never clustered with other properties.

site specific results based on the posterior means , for one representative property each from the four clusters in figure
 <dig> are shown in figure
 <dig>  the sites are sorted according to the increasing value of mean
β^i,j for each image. sites on the far right radically change properties in each group. for example, most of the sites that appear on the far right, like sites  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  for cluster  <dig>  have
β^i,j values of  <dig> - <dig> . there seem to be more sites radically changing properties in cluster  <dig> than in clusters  <dig>  or  <dig> . the first three clusters also have a fairly large number of sites with mean
β^i,j between  <dig> and  <dig>  this is different from what we see for cluster  <dig> , which corresponds to properties pzimand phi. a large number of sites in cluster  <dig> strongly conserve the properties , as is evident by the very small mean
β^i,js for sites in the far left, unlike in the other clusters.

figure
 <dig> shows the posterior summaries of βi,js different from zero for sites  <dig>   <dig>   <dig> and  <dig> for properties belonging to different clusters. of these, sites  <dig> and  <dig> were found to be under positive selection by paml, while sites  <dig>   <dig> and  <dig> were identified as radically changing some of the properties by the regression model in
 <cit> . the sites show different behavior for the different properties, for example, site  <dig> shows radical changes for h, while it conserves mv. we can also see similarities in the posterior summaries across sites. for example, for property pk <dig> sites  <dig>   <dig> and  <dig> have similar values for βi,j. one of the advantages of using the semiparametric approach is that we can identify groups of sites that either conserve or radically change a set of similar amino acid properties. for example, sites  <dig> and  <dig> both seem to be altering the amino acid properties in the first large cluster of properties related to p and h. however, sites  <dig> and  <dig> have a very different behavior in cluster  <dig> related to pzim: site  <dig> strongly conserves properties in this cluster while site  <dig> radically changes them.

table
 <dig> lists sites that are highly conserved with posterior mean
β^i,js less than  <dig>  for the different clusters. the largest number of highly conserved sites appears in cluster  <dig>  which includes properties pzimand phi, in agreement with figure
 <dig>  some of these sites like  <dig>   <dig>   <dig> and  <dig> also conserve properties in clusters  <dig> and  <dig>  a number of them, such as sites  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig> are also identified as sites under negative selection by methods that take into account the relative rate of nonsynonymous to synonymous rate ratio, such as those implemented in paml <cit> . in order to determine which sites are under positive and negative selection by paml, we follow an approach similar to that used by
 <cit>  in the analysis of the lysin data. in particular,
 <cit>  found that paml model m <dig>  which supports positive selection, is the model that better fits the lysin data. therefore, we classified sites as negatively selected if the estimated ω was smaller than  <dig>  and if pr< <dig>  using paml model m <dig>  results comparing sites conserving or radically changing a small group of properties with sites inferred to be under positive or negative selection by paml was also presented in
 <cit> .

the results are fairly robust to the choice of different hyperparameter values. note that the scale factor for
ϑl,k <dig> ultimately affects the variation in the βi,jvalues, and it is advisable to choose it so that the prior variance for the unique βi,js is not too large.

CONCLUSIONS
in this paper, we present a bayesian hierarchical regression model with a nested infinite relational model on the regression coefficients. the model is capable of identifying sites which show radical or conserved amino acid changes. the  discreteness of the dp realizations induces clustering at the level of properties which is analogous to the factor model in
 <cit> , with the advantage being that the nonparametric method automatically determines the appropriate number of clusters. the multi-level clustering ability of the nirm also induces clustering at the level of sites and allows us to capture skewness and heterogeneity in the distribution of the random effects distribution associated with each cluster of properties.

the main advantage of the models we have described is their ability to simultaneously handle multiple properties with potentially correlated effects on molecular evolution. our simulations suggest that our models are flexible but robust, being capable of dealing with a range of situations including those where properties are perfectly correlated, as well as those where all properties are uncorrelated. our semiparametric regression models also work well, particularly in comparison with the regression model in
 <cit> , treesaap and evoradical, when applied to dna sequence data generated from an evolutionary model. in addition, the analysis of the lysin data suggests that the model leads to reasonable results.

the nirm that is the basis of our model defines a separately exchangeable prior on matrices. this means that the prior is invariant to the order in which properties and sites are included. this is due to the fact that the rows as well as the columns of the parameter of interest are independent draws from a dp. from the point of view of modeling multiple properties, this is a highly desirable property. however, assuming that dna sites are exchangeable can be questionable. although this is a potential limitation of our model, we should note that the assumption of independence across sites  underlies all the methods discussed in the background section. if information about the 3-dimensional structure of the encoded protein or other sequence specific information that can guide the construction of the dependence model is available, our model could be easily extended to account for this feature. in the absence of such information, exchangeability across dna sites seems to be a reasonable prior assumption. indeed, in contrast to the most common independence assumption, our exchangeability assumption allows us to explain correlations at the level of sites.

in our applications, we have used codon substitution models for reconstructing ancestral sequences as we wished to compare our methods to other methods for detecting selective sites that also use codon substitution models, such as those implemented in paml and evoradical. however, it is possible to perform the proposed bayesian semiparametric analyses using amino acid substitution models instead of codon substitution models. note that the substitution model is only used in the calculation of the observed distances. first, we infer the ancestral sequences under a specific substitution model and a given phylogeny. we then compute the observed distances for a given property and a given site as the mean absolute difference in property scores due to all nonsynonymous substitutions at that site, where the nonsynonymous substitutions are counted by comparing the dna sequences between two neighboring nodes in the phylogeny. the reconstructed ancestral sequences, and therefore the observed distances in our model, may differ under different substitution models, but the method can be implemented under any substitution model, including amino acid substitution models. the gain in execution time from using amino acid substitution models instead of codon-based ones could potentially be significant if the uncertainty in the alignment/phylogeny/ancestral level is taken into account.

finally, it is important to note that the “observed” distances are not really directly observed, but are instead constructed from ancestral sequences and, therefore, subject to error. a simple way to account for this additional level of uncertainty is to modify the computation of expected distances by incorporating the ideas of
 <cit> . this approach was previously employed in
 <cit> , with little impact on the final results.

appendix: details about the gibbs sampler
the truncations and the introduction of the configuration variables imply that  and  can be written as 

  ζj|{Πk}∼∑k=1kΠkδθk∗ξi,k|{wl,k}∼∑l=1lwl,kδφl,k 

with φl,k∼g0lkand Πk and wl,k being the appropriate stick breaking weights. writing the model as in  helps in obtaining the forms of the full conditionals as below.

the column indicators ζj for j= <dig> …,j are sampled from a multinomial distribution with probabilities 

 p=qjk∝∑l=1l∏{i:ξi,k=l}Πkn, 

 where
ϑl,k <dig> is
ϑl,k <dig> if ϕl,k= <dig> or is
ϑl,k2/nio if ϕl,k is different from zero. Πk is sampled in two parts: first, by generating vkfrom a
beta for k= <dig> …,k− <dig> and vk= <dig>  where mkis the number of columns assigned to cluster k and then, by constructing
Πk=vk∏s=1k− <dig> 

for i= <dig> …,iand k= <dig> …,k, the indicators ξi,kare also sampled from a multinomial with probabilities of the form 

 p=pi,kl∝∏{j:ζj=k}wl,kn. 

 the updated weights wl,k are sampled in a manner similar to the Πk, i.e., ul,k are generated from a
beta for l= <dig> …,l− <dig> and ulk= <dig>  where nl,k is the number of βi,js assigned to atom l of cluster k and then, by constructing
wl,k=ul,k∏r=1l− <dig> 

following
 <cit> , the dp concentration parameters ρand γk are sampled in two steps by introducing auxiliary variables η1and η <dig>  first, sample η1from 

 p=beta 

 and then ρfrom 

 p=aρ+nζ∗−1aρ+nζ∗−1+j)×ga)+j)aρ+nζ∗−1+j)×ga), 

 where
nζ∗ is the number of unique column indicators ζj. similarly, for each k= <dig> …,k, 

 p=beta, 

 p=aγ+mξ,k∗−1aρ+mξ,k∗−1+i)×ga)+i)aγ+mξ,k∗−1+i)×ga), 

 where
mξ,k∗ is the number of unique row indicators ξi,k, for a specific cluster of columns k.

to sample the unique
φl,k=s given in , we introduce a set of indicator variables ψl,kwhich take the value  <dig> when ϕl,kis different from zero. for l= <dig> …,land k= <dig> …,k, ψl,k,
ϑl,k <dig> and ϕl,k are jointly sampled in the following way - ψl,k is sampled by integrating out ϕl,kand
ϑl,k <dig> from its full conditional,
ϑl,k <dig> is sampled conditional on ψl,k and ϕl,k is sampled conditional on both the corresponding ψl,kand
ϑl,k <dig>  i.e., 

 p=pp×p 

 with the individual expressions obtained as follows.

first, let
Ωl,ki,j={:ξiζj=l,ζj=k}. then, 

 p∝λ∫∏Ωl,ki,jnigd+∫∫∏Ωl,ki,jn×nigdd. 

 p=igi∗j∗2+aκ,1bκ+σ <dig> scale−1ifψl,k=0igi∗j∗2+aσ∗,1bσ∗+σ <dig> scale−1ifψl,k= <dig>  

 where
i∗j∗=∑i,j1{ξiζj=l,ζj=k} and the update terms are given by
σ <dig> scale=∑Ωl,ki,jyi,j∗ <dig> and
σ <dig> scale=αk2v02+∑Ωl,ki,jnioyi,j∗22− <dig>  

 p=0ifψl,k=0nifψl,k= <dig>  

 where
mϕ=αkv0+∑Ωl,ki,jnioyi,j∗xi,j∗v0+∑Ωl,ki,jnioxi,j∗ <dig> and
cϕ=ϑl,k2v0+∑Ωl,ki,jnioxi,j∗ <dig> 

the full conditional of λ is given by 

 p∼beta. 

finally, for k= <dig> …,k, the full conditional of αkis given by 

 p∼n 

 where 

 cα∗=11cα+∑{l:ψl,k=1}v0ϑl,k <dig> 

 and 

 mα∗=cα∗mαcα+∑{l:ψl,k=1}v0ϕl,kϑl,k <dig> 

software availability
the r code implementing the models in the paper is freely available at http://www.ams.ucsc.edu/~raquel/software/.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
sd, ar and rp formulated the model. sd performed the analyses and drafted the manuscript. ar and rp revised the manuscript draft. all authors read and approve the final version of the manuscript.

supplementary material
additional file 1
additional simulations are provided in a separate supplemental file.

click here for file

 acknowledgements
rp and sd were supported by the nih/nigms grant r01gm072003- <dig>  ar was supported by the nih/nigms grant r01gm090201- <dig> 
