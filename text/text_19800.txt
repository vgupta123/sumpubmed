BACKGROUND
recombination in viruses is the process that creates chimeric molecules from parental genomes of different origin  <cit> . recombination, coupled with point mutations are the main mechanisms of mutation contributing to virus evolution  <cit> . as demonstrated in genetic algorithms, point mutations allow some investigation of the evolutionary fitness landscape, whereas recombination leads to “jumps” within this landscape and exploration of other regions  <cit> . furthermore, recombination has been identified as a mechanism of combining advantageous properties from various genomes into a new one, of eradicating deleterious mutations, i.e. acting against muller’s ratchet. recombination can thus be important in the emergence of drug resistance, or for evasion from the immune system  <cit> . in addition, it breaks the assumption in molecular phylogenetic analyses of a single evolutionary history  <cit> . therefore, it is paramount to be able to detect recombination events and correlate them with new properties, or new outbreaks.

many bioinformatics tools have been developed within the last 20 years that detect recombination events , and listed at http://bioinf.man.ac.uk/robertson/recombination/programs.shtml. these tools are based on four major categories of methods, such as pairwise sequence comparison, phylogenetics, population genetics, patterns of sites. evaluations based on simulated and empirical data indicate that an optimal strategy requires implementing more than one method  <cit> . nevertheless, the current popular methods and many others are not optimized for analyzing hundreds or even thousands of complete viral genomes in one step  and/or in a graphical environment that is user-friendly.

this problem will soon be exacerbated by the recent advances in sequencing technologies, where several popular platforms like illumina, ion proton and oxford nanopore allow the rapid sequencing of complete viral genomes  <cit> . given the fact that viral genomes in general are of small size, do not contain many and large repeat regions, or that their gene structure is compact and remains stable within a virus species, an explosion of sequenced viral whole genomes is already happening.

our motivation was to develop a computational pre-filtering tool, named t-recs  that is based on the blastn heuristic local pairwise alignment method with sliding windows . the tool expands on the basic principles of the ncbi genotyping web tool  <cit>  and the sweblast perl scripts  <cit> , but as a locally installed program in a microsoft windows environment, with a user-friendly graphical interface that allows large-scale analyses and visualization. it rapidly scans hundreds or even thousands of query genomes or even sequence fragments, allows genotyping based on a user-defined sequence database and detects candidate recombination events among members of different evolutionary groups e.g. organisms, genogroups, genotypes etc. the detected candidate events may later be further analyzed  with similarity plots that integrate the blast results and even genomic/functional annotations. t-recs also allows the clustering with usearch/uclust  <cit>  of sequences based on a user-defined similarity threshold and thus removes redundancy and simplifies large-scale analyses with many highly similar sequences. in addition, the tool allows for certain regions of a sequence to be selected and uploaded to ncbi blast or saved. after this pre-filtering step with t-recs, identified targets may be later analyzed with other more specialized methods/tools.

implementation
the software is implemented in visual basic and has been tested for windows  <dig>   <dig>   <dig>  and  <dig> operating systems. the executable files for blastn, makeblastdb  <cit>  and muscle   <cit>  are integrated within the software, but the user is required to manually download the usearch executable file, so as to integrate sequence clustering and reduction of redundancy   <cit>  . the analysis of the  <dig> norovirus genomes was performed on a regular laptop  within  <dig>  h and required less than 3gb of ram. due to the inherent limitations of visual basic, the largest sequence that may be analyzed is two gigabases .

the algorithm
the basic steps
several basic steps are required for the analysis: first, the user uploads the input data that consist of i) a fasta file of query sequence/s ii) another fasta file that contains annotated sequences that will be automatically converted within t-recs with the makeblastdb blast tool to the blastn database iii) an annotation file of viral clusters/groups that is in tab-delimited format, where each row contains the sequence id and the designated phylogenetic group, for all the sequences of the two fasta files  and iv) optionally, a functional annotation file that designates potential regions of interest in the analyzed genomes, such as orf boundaries, or sites of interest, e.g. post-translational events, sites that confer drug-resistance etc .

in the second step, the software performs blastn on the sequences of the query file with default or user-adapted blastn and sliding window parameters. potential recombination events are identified with the detected acceptor and donor sequences and visualized in a graphical window.

in the third step, each potential recombination event can be further analyzed with a similarity plot within t-recs. the plot may integrate the previous blast results as well as functional annotation . within that similarity plot, the user may also opt to select a region of interest from the query sequence and upload it to ncbi blast. for the similarity plot, the user may also include  one or more database sequences of the same evolutionary group as the query. in addition, the user may perform multiple alignment of these sequences with muscle . the similarity plot parameters, such as sliding window size and increment size, treatment of gaps, and colour of sequences within the graph are user adaptable.fig.  <dig> integrated view of a t-recs recombination result with similarity plot and orf annotation that shows a clear recombination event, detected by pairwise alignment of sliding windows and manually verified by similarity plot. this recombination event has been proposed to be an artificial recombinant




as an optional initial step, the user may perform genotyping of the query sequences by using a database with sequences of defined genotypes . once the genotypes of the query sequences are identified, they are saved and used for the downstream recombination analyses. for example, in picornaviruses or noroviruses, genotyping is based on the vp <dig> capsid region. the user may create a genotyping database, by selecting only vp <dig> sequences from the various phylogenetic groups. based on this first genotyping step, the query sequences may later be scanned for recombination events against another database of complete genomes .fig.  <dig> view of genotyping with t-recs. the grey bar on top is the query sequence, whereas the red rectangles are the best blast sequence fragments of database sequences




as an optional extra step, the user may remove redundancy of the query sequences based on a user-defined nucleotide identity threshold, with the help of the usearch/uclust software and more specifically of the uclust command , after it has been embedded within t-recs. also, if the user does not know the genotypes of the sequences, genotype names may be assigned by clustering the sequences with a user-defined similarity threshold and using the cluster name as a genotype.fig.  <dig> clustering of sequences, based on nucleotide identity threshold, with uclust. centroids denote the representative sequence from each cluster, as selected by uclust




apart from a user-guide, all steps of an analysis are also demonstrated in videos that accompany the software.

how the algorithm works
t-recs is based on the principle of sliding windows. the tool breaks each query sequence into sequence fragments with a sliding window of user-defined size and increment. we believe that the optimal window size may be different for the various viruses and should be selected by a user that better understands the evolutionary nature of the virus under investigation. of note, small fragments are not suggested, since they may be susceptible to convergent evolution effects. each of those fragments is blasted against the database. if there is no recombination event, then one expects all the fragments of the query sequence to have as their best blast hit another database sequence of the same phylogenetic group. if at some point a certain fragment has as best blast hit a database sequence of another phylogenetic group, then a stringent criterion needs to be fulfilled in order to designate this as a recombination event. the nucleotide identity of the heterologous best blast hit must be 5%  higher than the identity of the second best blast hit of the same evolutionary group as that of the query. for example, the query sequence belongs to genotype a and all its sequence fragments have as best blast hit other database sequences of genotype a, apart from a region  that has as best blast hit a database sequence of genotype b with 99% nucleotide identity. for that same region , the best blast hit of the same genotype a needs to have a nucleotide identity of 94% or less, in order for genotype b to be recognized as a potential donor. if the nucleotide identity difference is less than the user-defined cutoff, then it is not detected as a recombination event. this cutoff of nucleotide identity percent difference is user-adjustable, depending on the divergence within the groups. if two or more heterologous groups are found as equal best blast hits and the nucleotide identity difference cutoff is satisfied, then all of them are reported as potential donors.

the current algorithm is designed for identifying recent recombination events. for example, if a recombination event happened at some time point and this led to a cluster/group of circulating recombinants, e.g., where two or more of the new recombined genomes have been sampled, then the tool will fail to identify the event. this is because each of the two sequences will have as best blast hit the other recombined sequence. one solution to this problem is prior to the t-recs recombination analysis, to cluster all the sequences  with a high nucleotide identity cutoff  and retain only one representative for further analysis with t-recs. obviously, this analysis step may lead to different representatives and thus hide/reveal some older recombination events. in such a case, the user will have to re-analyze the results with various reasonable nucleotide identity cutoffs.

RESULTS
t-recs implementation on  <dig> norovirus complete genomes
in order to assess the functionality of the software, we analyzed  <dig> complete human norovirus genomes, downloaded from genbank  as a proof of principle  <cit> . a custom perl script  was developed to automatically extract the genbank annotation concerning the evolutionary group that the sequences belong to. next, manual inspection of the automatically extracted data was needed, due to the diverse ways a sequence could be annotated. also, genome annotation that defines the boundaries of the three orfs and their eight peptides was extracted, whenever available. orf <dig> encodes a polypeptide that matures in  <dig> peptides , whereas orfs  <dig> and  <dig> encode two capsid proteins . genogroup and genotype classification is based on the phylogeny of the orf <dig> . therefore, whenever the genbank annotation was not clarifying the genogroup/genotype of the investigated complete genome, we assigned it based on a phylogenetic analysis of orf <dig>  multiple dna alignments  were performed for each of the  <dig> peptide-regions with muscle , whereas the corresponding phylogenetic trees were generated with maximum likelihood by phyml  <cit> . tree branch support was estimated with approximate likelihood ratio test . the selection of the various evolutionary models for each region  was based on jmodeltest  <cit> . trees and their annotations were visualized in treedyn  <cit> . all the above datasets are available in additional file  <dig>  we also compared the performance of t-recs with the well established and very frequently used recombination detection program , that is based on aligned sequences and also incorporates several other published methods  <cit> . for analysis with rdp, the alignments of the  <dig> regions were concatenated into one.

previous small and medium scale published analyses have repeatedly indicated high recombination rates among genogroups and genotypes of this virus, especially at the orf1-orf <dig> junction . in addition, the recombination analysis tool  was specifically evaluated on norovirus sequences  <cit> . in our analysis, rdp detected eleven inter-group recombined sequences that had minor donor fragments larger than 200 nt . manual inspection revealed that seven of those eleven sequences had clear recombination events, one sequence was the only representative of its evolutionary group  and had no other highly similar sequences of the capsid region in our sequence database and three events were old. by the term “old”, we mean recombination events that are shared by two or more highly similar sequences of the same evolutionary group. the same  <dig> complete genome sequences were scanned with t-recs . the  <dig> genomes were used both as queries and database. this time, the seven sequences that were clearly identified as recombined by rdp were also identified by t-recs. two of the three old events detected by rdp were missed by t-recs, one old event detected by rdp was also detected by t-recs, one t-recs event was a potential false positive and there was an event detected by t-recs that was also detected by rdp, but with a minor donor fragment of 160 nt. finally, the single representative sequence  was identified correctly by rdp as a recombinant orf <dig> and was also detected by t-recs, but with the recombination occurring at the capsid region . all these detected recombination events were validated by the phylogenetic trees and by similarity plots within t-recs and double-checked with the simplot software . the majority  of the recombination breakpoints were situated at the orf1-orf <dig> junction region. in addition, there was one recombination event at the orf2-orf <dig> junction, another event where the n-terminal half of the rna-dependent rna polymerase region came from another group  and another event involving the section spanning p <dig> and vpg.

t-recs implementation on  <dig> norovirus sequence fragments
in addition, we performed a t-recs analysis with  <dig> phylogeneticaly annotated sequence fragments of size >300 nt, downloaded from genbank  <cit> . the  <dig> sequences were used both as queries and database. one of the great advantages of the software is that it can analyze sequence fragments of varying length, without any prior data manipulation . t-recs identified  <dig> potential recombination events . nevertheless, manual inspection and simplot analysis revealed that the majority could either be artifacts due to potential mis-annotation in genbank or they were not clearly defined events . we considered a detected recombination as potential mis-annotation when a whole sequence fragment of a certain genotype was clearly giving as best blast hit a sequence of another genotype, throughout its whole length and with no visible evidence of recombination within that fragment. these cases were not investigated any further. we identified eight results, where the recombination point was clearly seen on the query fragment, seven of which were situated at the orf1-orf <dig> junction  and one situated at the middle of the rna-dependent rna polymerase region. all the similarity plots of the detected recombinations  are available for manual inspection in the additional file  <dig> subdirectory: 2538_norovirus_fragments:simplots. nevertheless, a bias exists, because most sequenced fragments are designed to contain orf <dig>  thus, the most unbiased picture is provided from whole genome analyses.

discussion
numerous recombination detection software have been developed within the last 20 years, based on four major categories of methods, i) pairwise sequence comparison, ii) phylogenetics, iii) population genetics and iv) patterns of sites. methods that are based on pairwise local alignment of sliding windows hold the potential to analyze in a simple and rapid manner huge amounts of genomic data. therefore, they are ideal as the first step in a multi-method search strategy. an available computational tool that falls in this specific category is the web-based ncbi genotyping tool, that is based on blast  <cit> . the user may also define a custom sequence database and results may further be analyzed/visualized with similarity plots. yet, this online tool cannot analyze more than one submitted query sequence at a time. another computational tool of the same category is swe-blast, a command line tool that breaks the query sequence in fragments with a sliding window, submits each fragment to ncbi blast and then parses the results in text files  <cit> .

incongruence of phylogenetic trees and similarity plots  <cit>  are among the most popular approaches. a common problem of detecting recombination events with phylogenetic analyses is that it is necessary to define the boundaries of the genomic regions to be analyzed. if the recombination breakpoint is in the middle of one of those regions, then this sequence fragment may cluster incorrectly with other sequence fragments in the tree, and usually with low bootstrap support. one way to circumvent this problem is to use the bootscan method  <cit> , but, if the number and length of sequences is too large, then the analysis becomes problematic in terms of time and complexity. in addition, bootstrap values may be low, either due to other sequences not clustering reliably or due to lack of phylogenetic signal in a region. similarity plots also allow for detection of the recombination breakpoint/s, but only on a small number of sequences. otherwise, visualization, manual inspection and interpretation of results from an analysis of many sequences becomes very complicated.

rdp is a very popular software suite that combines many diverse recombination detection methods, but requires the sequences to be aligned  <cit> . such an alignment step may become very time and labor costly, especially for an analysis of thousands of genomes, because the dna alignment would need to be based on protein alignments of each orf. therefore, the current popular methods and many others are not optimized for analyzing hundreds or even thousands of complete viral genomes in one step  and/or in a graphical environment that is user-friendly.

t-recs is a visual basic graphical tool powered by blast, muscle and usearch/uclust that rapidly scans hundreds or even thousands of viral genomes or sequence fragments for recombination events. it is based on pairwise blastn alignment of sliding windows of query sequences against a user-defined sequence database. query sequences may be further genotyped or clustered based on sequence identity. recombination hits may also be visually inspected with similarity plots within t-recs, or submitted to the ncbi blast website for further analysis. t-recs is recommended as a high-throughput pre-filtering tool for recombination events that would be further analyzed by other more specialized software, optimized for small/medium scale studies, such as simplot, rdp, hyphy, bootscan, maxchi, chimaera, 3seq, visrd, lard, siscan, etc. . t-recs requires that all sequences have an assigned genotype, in order to identify recombinations. in case that a user does not want to define these genotypes via lengthy phylogenetic pre-analyses, t-recs simplifies this step by an embedded genotyping tool, although prototype sequences are still needed. otherwise, another alternative is to cluster the sequences  with a user-defined similarity threshold and use the cluster names as genotypes, so as to proceed to detection of recombination events. although t-recs is not capable of identifying older recombination events in the first run, there is an option to cluster the sequences with a user-defined similarity threshold and proceed to recombination detection with only one representative sequence from each cluster. also, we recommend that the selected sliding window size is large enough to avoid confounding factors stemming from convergent evolution  or from differences in evolutionary rate.

t-recs has been evaluated in this analysis with norovirus genomes. also, it has been tested successfully  with picornaviruses. t-recs has neither been optimized for nor tested in extreme cases of very large viral genomes , nor even in cases of bacterial genomes. nevertheless, the vast majority of viral genomes  are in the range of a few tens of kilobases  and are therefore within the limitations and capabilities of t-recs.

in a way, most of the advantages of the ncbi genotyping tool, sweblast and simplot are recombined into the t-recs tool, and further adapted/optimized for this new era of next-generation sequencing.

CONCLUSIONS
t-recs is a microsoft windows based graphical tool that rapidly scans  hundreds or even thousands of viral genomes or sequence fragments for recombination events and with fairly limited computation resources that are found in common desktops/laptops. it is based on pairwise blastn alignment of sliding windows of query sequences against a user-defined sequence database. query sequences may be further genotyped or clustered based on sequence identity. recombination hits may also be visually inspected with similarity plots within t-recs, or submitted to the ncbi blast website for further analysis. t-recs is recommended as a high-throughput pre-filtering tool for recombination events that may be found in the vast majority of viruses. once these events are detected, they would need to be further analyzed by other more specialized software that are optimized for small/medium scale studies.

availability and requirements
project name: t-recs.

project homepage: http://bioinf.bio.uth.gr/t-recs.html.

operating system: microsoft windows.

programming language: visual basic.

other requirements: usearch/uclust.

additional file
additional file 1: all additional files containing norovirus sequences, alignments, phylogenetic trees similarity plots and the perl script are compressed and can be downloaded from http://bioinf.bio.uth.gr/downloads/t-recs_supplementary_files.zip.

abbreviations
alrtapproximate likelihood ratio test

blastbasic local alignment search tool

ncbinational center for biotechnology information

orfopen reading frame

rdprecombination detection program

t-recstool for recombinations

