BACKGROUND
t-cell receptor  and immunoglobulin  are essential in adaptive immune system as they recognize a wide variety of antigens, triggering immune response  <cit> . each tr and ig gene contains many coding regions, which are classified into variable , diverse  and joining  regions. for example, trβ has 67 v, two d, and 13 j regions  <cit> . to recognize numerous antigens, tr and ig genes undergo vj recombination , and j region) at the dna level for generating a large repertoire of structurally diverse receptors  <cit> . during recombination, the diversity is further enhanced via deletion and non-template addition of nucleotides within the so-called complementarity determining region  <dig> , which is crucial for antigen recognition  <cit> . the knowledge of vj recombination and cdr <dig> is thus important for studying immune response.

several alignment tools have been available to analyze the complex recombination of tr and ig genes, e.g., imgt/v-quest  <cit> . after the introduction of next-generation sequencing , which generates a large amount of data, new tools for analyzing tr and ig sequences are all geared toward faster speed. these include imgt/highv-quest  <cit> , decombinator  <cit> , and the recent igblast  <cit>  and mitcr  <cit> . despite their distinct algorithms, all these tools do alignment only to the vj regions instead of the whole gene to enhance speed. software for subsequent analysis of diversity and clonality, e.g., tcr  <cit>  and imex  <cit> , are also available.

these tools have been quite useful for studying tr and ig sequences, which are often prepared via a multiplex pcr approach  <cit> , in which multiple primers are designed to target different v and/or j regions. such amplicon approaches are efficient in capturing regularly recombined tr and ig genes, but likely suffer from amplification bias and miss non-regular tr and ig sequences due to aberrant recombination in diseases  <cit> , cancerous cells  <cit> , or even healthy individuals  <cit> . although amplification bias can be reduced  <cit> , a complete removal of bias is still not warranted. to avoid amplification bias, 5′ race  strategy is promising  <cit>  and has been applied in recent studies of immune repertoire  <cit> . in addition, the strategy allows for detection of aberrant recombination and non-regular splicing events .

for race data, however, current tools can make mistake because they all assume regular recombination, which is not valid in many race sequences  <cit> . to fully utilize race data, we propose trig to handle non-regular tr and ig sequences. unlike all current programs, trig does alignment to the whole immune gene instead of only to the vdj regions. with this strategy, trig avoids false vj annotations to non-regular immune sequences. the strategy, however, is computationally challenging because full-length tr and ig genes are relatively long and contain many repeats, which may result in multiple hits and the authentic hits need to be identified. the challenges have been properly managed in the trig pipeline.

on real race data, trig revealed several types of non-regular trβ sequences, e.g., the expression of pseudo-gene j2-2p and concatenation of two j regions or j and intergenic regions. trig avoided false vj annotation to those reads, thereby providing a more accurate description of immune repertoire. accurate frequencies of vj recombination have been used as biomarkers for health and disease  <cit> . for those studies, an unbiased and accurate description of immune repertoire can be obtained using trig and race data. besides, trig can unveil the rich behaviors of tr and ig genes toward maturation, providing materials for a deeper understanding of the regulatory mechanisms. therefore, we expect trig to benefit various immune researches.

implementation
5′ race  <dig> sequencing of human trβ gene
total rna was extracted from the mononuclear cells in peripheral bloods of a healthy individual . rna was isolated using qiagen rneasy mini kit . first strand cdna was synthesized using smarter cdna synthesis kit  with a published trbc gsc <dig> primer  <cit> . then, smart ii oligonucleotide kit  was added to provide a 5′ template for race. the pcr protocol was as follows: 70 °c for  <dig> mins and 42 °c for  <dig> mins. the pcr mixture  contained 1× pcr buffer for advantage  <dig> polymerase ,  <dig>  mm of each dntp,  <dig> pmole of upm primer and trbc gsc <dig> primer,  <dig>  ul of polymerase mix, and 1 ul of undiluted first-strand cdna. after first pcr, 1ul of the first-round product and an equimolar of three primers  were added for second pcr reaction . after second pcr, the 520 bp products were visualized and purified by a dna gel extraction kit . the purified products containing the primer were sequenced on roche  <dig> gs junior system following the manufacturer’s protocol.

sequencing data
the raw  <dig> reads were processed to remove primer segments and trimmed reads shorter than 100 bp were discarded. in addition to our own data, we obtained two public race data  from ncbi sequence read archive  <cit> . again, processed reads wshorted than 100 bp were discarded.table  <dig> race data used in this study




trig pipeline
trig aligns reads to the tr/ig gene in four steps :  initial alignments to the whole tr/ig reference using nucmer  <cit> ,  obtaining optimal sets of alignments,  filtering alignments based on vdj annotation, and  realigning the reads with multiple v annotations. the resulting alignments are further adjusted to eliminate overlapping bases between alignments. adjusted alignments are then associated with vdj regions and the corresponding cdr <dig> segments are extracted. these steps are explained in details as follows.fig.  <dig> trig pipeline. trig starts by aligning tr or ig reads to the corresponding reference using nucmer. because many initial alignments overlap, thus not authentic, optimal sets of alignments are obtained using a heuristic iterative approach. some of the optimal alignments are further filtered based on the vdj annotations. if more than one v annotation survives the filtering, trig intends to extend the alignments by relaxing the breaklen parameter of nucmer, followed by re-identification of authentic alignments. because the resulting alignments may still overlap by few bases, the overlapping bases are trimmed . finally, vdj annotations are collected and the cdr <dig> segments are extracted. please see main text for detailed descriptions



initial alignments of reads to the whole tr/ig reference using nucmer


trig uses nucmer  to do initial alignments to the whole tr/ig reference. to allow multiple hits to repetitive regions in the reference, nucmer is set to use all anchor matches regardless of their uniqueness.


obtaining optimal sets of alignments


for each read, many initial alignments overlap a longer one by more than half of the aligned regions, suggesting their invalidity. trig applies an iterative approach to filter invalid overlapping alignments. first, the alignment with the maximal score  is selected to be in the optimal set. second, all alignments that overlap the best one are filtered. third, from the remaining alignments select the next best alignment to be in the optimal set and do the filtering. this procedure is repeated until no alignment remains. note that there can be more than one best alignment with equal score and all of them are included in the optimal set of alignments.


annotation-aware filtering of alignments


equally good alignments can be further reduced using vdj annotation. for example, a read segment can be aligned equally well to the first exon of v4- <dig> and v4- <dig> while another read segment is best aligned to the second exon of v4- <dig>  this suggests that the alignment to the first exon of v4- <dig> should be filtered. in this step, trig also filters alignments of putative cdr <dig> segments. to identify a putative cdr <dig> alignment, trig searches for an alignment flanked by the second exon of a v region on one side and j exon on the other. an identified alignment survives if the segment is from a d or j region or the alignment is long  and is otherwise filtered. in addition, short  and inferior  alignments to intergenic regions are filtered in this step.


realigning reads with multiple v annotations


after the above filtering, more than one v annotation can still remain for some reads. to differentiate multiple v alignments, trig attempts to extend the alignments further outward by relaxing the nucmer parameter breaklen. in some cases, one of the extended alignments stands out better than others and is then selected.


eliminating overlapping bases


alignments overlapping by only few bases can survive the above filtering processes. for those alignments, trig determines an optimal cut point, beyond which the overlapping parts are trimmed . an optimal cut point is found when the trimmed alignments give a maximal total score. to favor alignments to exons, each aligned base within a vdj region receives one more point. for overlapping alignments that span two exons of a v gene, this helps to stop alignment at the exon boundary.


vdj annotation and extraction of cdr <dig> sequences


for each read, the resulting alignments are associated with either a v, d, j, c  or intergenic region. to extract cdr <dig> sequences, trig searches for pairs of alignments annotated as the last exon of a v gene and a j region respectively. once found, the starting and ending positions of cdr <dig> region on the reads are determined according to the definition in imgt website and the cdr <dig> segments are extracted.




related programs
both decombinator  and igblast  were downloaded and run with default parameters. imgt/highv-queset  analyses were performed on the imgt website using the default settings.

RESULTS
trig was compared to decombinator, igblast, and imgt/highv-quest  using our own race data of a healthy individual and two public data . a healthy individual was selected to alleviate complication by disease. public data were used to show generality of results in different implementations of race experiments and sequencing approaches. only annotations of v and j regions were compared because d regions are relatively short and nucleotide modifications often occur at the exon boundaries. in addition to vj annotations, annotations of non-vj segments  were considered. note that only trig could give a non-vj annotation and there could be more than one v or j annotation by all programs except decombinator. the results for each data were described as follows.

our race data of human trβ gene
among the four programs, igblast was the most sensitive as it annotated  <dig>  % of the reads . if non-vj annotations were included, trig became the most sensitive. in contrast, decombinator and imgt made annotations to  <dig>  and  <dig>  % of reads, respectively.table  <dig> number of vj annotations by four programs




among the reads annotated by trig but not decombinator, most  did not contain both a v and a j segment. this is reasonable because decombinator requires the presence of both a v and a j segment, therefore did not make annotation to reads without a regular v-j structure. trig considered the remaining  <dig> reads as regular, but decombinator still did not make annotation. this may be explained by the fact that decombinator looks for specific v and j segments instead of matches to any part of v and j sequences. among the reads annotated by trig but not imgt, most  did not contain a v segment. again, this is reasonable because imgt requires the presence of a v segment. these results indicate that decombinator and imgt were less sensitive than trig mainly because they did not annotate non-regular trβ sequences.

to examine the consistency of annotations by trig and a program, annotations were split into four categories:  identical --- when two annotations were the same,  extra --- when the program made an additional v or j annotation than trig,  missing --- when the program missed a v or j annotation by trig, and  distinct --- when the program and trig made distinct v or j annotations. in addition to the four categories, non-vj annotations by trig were included in statistics.

when both trig and decombinator made annotations, they agreed in most  cases . for the remaining reads, decombinator either missed one of the multiple v annotations by trig  or gave a distinct annotation . the multiple v annotations by trig should be valid because the corresponding alignments were equally good. decombinator could not reveal those possibilities because it always reports only one v and one j annotation.table  <dig> consistency of vj annotations to our data




imgt was also quite consistent with trig because  <dig>  % of their annotations were identical to trig’s annotations . when trig and imgt disagreed, trig’s annotations were usually more convincing because trig gave better alignments than imgt did for  <dig>  % of the non-identical annotations . detailed examinations revealed that imgt missed some j annotations because it did not allow gaps in j alignments. in addition, imgt sometimes reported alignments of relatively low identities . such imgt alignments could be slightly longer than the trig’s alignments; however, the low identities did not support the imgt’s annotations . these results suggest that trig is more robust than imgt even for regular trβ sequences. for non-regular trβ sequences, e.g., those with only a j segment according to trig, imgt might mistake the intergenic segment in the upstream of a j region for a v region. similarly, a cdr <dig> segment in the downstream of a v region could be mistaken as a j region by imgt, which explained some of the imgt’s extra annotations.fig.  <dig> comparison of immune sequence alignments by different tools. differences in length  and identity  of non-identical alignments by igblast and trig  and imgt and trig  for  our  <dig> data of human trβ gene,  public illumina data of human trβ gene, and  public  <dig> data of mouse igh gene. the differences were obtained by subtracting igblast’s or imgt’s values from trig’s values. thus, dots in the first quadrant clearly indicate better alignments by trig. the validities of alignments in the second and fourth quadrants are less clear. however, for most dots in the two quadrants, trig’s annotations are more convincing because trig’s alignments are much longer or the identities much higher. note that the dots may fall on top of each other, this explains the seemingly fewer dots than indicated in the first quadrant of 




compared to decombinator and imgt, igblast was more different from trig as only  <dig>  % of the annotations by igblast and trig were identical . for the extra annotations by igblast, most  reads did not contain a v segment according to trig. this could be attributed to igblast’s low stringency in v alignments, which resulted in false v annotations to non-v segments. for example, the upstream or part of j segments of non-regular reads could be mistaken for v segments by igblast. similarly, for most  of the distinct annotations, igblast reported a v annotation while trig considered the read without a v segment. for all non-identical annotations, trig gave better alignments than igblast for  <dig>  % of reads .

in addition to our data, a public race data of human trβ gene from a  <dig> sequencer  was analyzed. many statements for our data still held for that data . for example, trig gave a better alignment than imgt and igblast did for a majority of the non-identical annotations. the similar pattern of results suggests that the presence of non-regular trβ sequences is common in race approach and the performance of all programs on  <dig> data is consistent.

public race data of human trβ gene
to examine the usefulness of trig on data from a different sequencing platform, a public race data of human trβ gene generated on an illumina sequencer was analyzed. compared to our data, a major difference in the results was that igblast and trig were much more consistent in annotating this illumina data , which is reasonable as trig considered a higher percentage of reads  as regular. for the ~20 % non-regular reads, trig considered most  without a v segment while igblast reported v alignments. for reads with non-identical annotations, trig’s alignments were clearly better than igblast’s and imgt’s alignments in  <dig>  and  <dig>  % of cases, respectively . for some reads in this data, igblast and imgt reported relatively longer but of much lower identity alignments compared to trig. the low alignment identities by igblast and imgt were likely the results of low sequencing quality . facing low quality reads, igblast and imgt might still output low identity alignments while trig did not.table  <dig> consistency of vj annotations to the srr <dig> data




non-regular vdj recombination
in the two race data of human trβ gene, several classes of non-regular vdj recombination were observed. according to trig,  <dig>  % of the reads in our data were non-regular . among those, the most abundant class were sequences containing a j but not a v segment. for those reads, the j segment either extended to upstream of the j region  or was concatenated to a d segment , a constant c segment , an intergenic segment , or another j segment . note that the extension to upstream of a j region could be long enough to cover a neighboring j segment, among which most were a stretch from j2-2p to j2- <dig>  when a j segment was concatenated to a d segment, most of the d segments were longer  than the d regions  and extended only into upstream of the d regions. this suggests suppressed recombination of v and dj segments. the second most abundant class of non-regular reads  in our data was segments from only intergenic regions and most  of the intergenic segments were relatively long . interestingly, most  of the intergenic segments appeared within a region upstream of trbd <dig>  suggesting aberrant recombination between d and j segments. in addition to the two classes, some reads contained only c segment while others contained only a v segment. most of the above non-regular recombination was also observed in another  <dig> data . besides, recombination between a trβ segment and non-trβ gene was detected in that data.

in the illumina data, the percentage of non-regular reads  was much lower but similar observations of non-regular recombination were made. besides, a majority of reads, including regular reads, contained a c segment, which appeared likely because the primer targeted more downstream of the c region.

public race data of mouse igh gene
for the mouse igh data, trig was compared only to igblast and imgt because decombinator had not yet supported alignments to mouse igh gene. for this dataset,  <dig>  and  <dig>  % of annotations by igblast and imgt were identical to trig’s annotations, respectively . note that both igblast and imgt included provisional versions of v genes, e.g., ighv1s <dig> and ighv1s <dig>  which did not appear in the trig’s reference set. because those annotations could not be compared fairly, the reads annotated as a provisional v gene by igblast or imgt and as a v gene by trig were excluded from the following analyses. this excluded about  <dig>  % of the total reads when trig was compared to igblast and imgt. among the remaining non-identical annotations, trig achieved a clearly better alignment than igblast and imgt for  <dig>  and  <dig>  % of the reads, respectively .table  <dig> consistency of vj annotations to the srr <dig> data

note that igblast or imgt gave an annotation not present in the reference set of trig to  <dig>  % of the reads, resulting in non-identical annotations




for the rest non-identical annotations between trig and igblast, trig gave a much longer  but of slightly lower identity  alignment in a majority  of cases, suggesting validity of the trig’s annotations in general. however, there were also cases where trig’s alignment was only slightly longer. this can be attributed to the different reference sets used by trig and igblast. igblast includes multiple versions of v, d, or j genes, which differ by few nucleotides, in the reference set. in contrast, trig uses only one single reference sequence. therefore, igblast’s alignments could be slightly better than trig. the different reference sets used by igblast and imgt could also explain why igblast sometimes gave a longer and of higher identity alignment than trig did. most of these statements also hold when trig was compared to imgt. however, we found that imgt sometimes gave alignments with a relatively low identity compared to igblast and trig .

for this dataset, trig considered  <dig>  % of the reads as non-regular. among those,  <dig>  % were reads containing only j and constant segments. interestingly, most reads contained more than one constant segment from the same region, suggesting artifacts of primer concatenations.

discussion
applicability of the computational programs
trig is a stand-alone program written in perl and is designed for linux system. both decombinator and igblast also offer stand-alone programs for analyzing tr sequences, but decombinator does not work for ig sequences. in contrast, imgt can only be run through the webserver. among those programs, decombinator was most efficient in terms of run time ; however, it was also the least sensitive in terms of vj annotation. trig ran faster than igblast and imgt and can be easily accelerated with multiple processors. for non-regular tr and ig sequences in the race data, igblast was over-sensitive and gave false vj annotations. in contrast, imgt was more conservative and made less false vj annotations; however, it did not examine the details of non-regular sequences. because non-regular tr and ig sequences are not uncommon in race data, trig is the program of choice for analyzing race data. although race approach is less efficient than the common multiplex pcr approach in probing regular vj recombination, it avoids primer bias and offers a more accurate estimation of immune repertoire. as the cost of ngs keeps decreasing, the lower efficiency of race approach will be less a concern. more importantly, accurate description of immune repertoire should be the top priority.table  <dig> run time of four programs on the three data

imgt jobs were done on the webserver. the rest tools were run using only one processor . anot available because the data was split into  <dig> files and the total run time did not reflect the true run time




nucmer is suitable for initial alignments of tr and ig sequences
the initial alignments of trig can be performed using various tools, e.g., blast, blat, bowtie <dig>  etc. blat seems suitable for aligning tr and ig sequences because it is designed for aligning cdna to the genome and vj recombination can be thought of as a special kind of splicing events. however, we found that blat sometimes aligned a v segment incorrectly when similar v exons exist . the presence of similar exons is not common for most genes, but is an issue for tr and ig genes. therefore, the general purposed blat is less suitable for tr and ig sequences. bowtie <dig> is designed to treat ngs data efficiently. with the default options, bowtie <dig> ran as fast as nucmer on our data but was slower than nucmer on the public data. the default options, however, only report the best hit of end-to-end alignments, which do not match the nature of tr and ig sequences. to align segments from different loci of the gene, one must enable the “local” option of bowtie <dig> and ask it to report multiple hits. these options doubled or even tripled the run time, making bowtie <dig> less efficient than nucmer on tr and ig sequences. similarly, blast spent more time to finish initial alignments compared to nucmer.

applications of trig
trig allows for quantifying amplification bias of a multiplex pcr approach when a race approach is also applied. note that multiplex pcr can be applied at the gdna or mrna  level  <cit> . a gdna data reveals the counts of distinct t or b cells. in contrast, a cdna data measures the expressions of t or b cell receptor genes in all distinct t or b cells. from a functional point of view, cdna provides better insight as mrnas are closer to functional proteins. since race is also applied at the cdna level, comparisons should be made to a multiplex pcr approach at the cdna level.

another application of trig is to dissect non-regular recombination in immune diseases. for example, in t cell leukemia cells two j segments could recombine in a head-to-head manner  <cit> . such aberrant recombination can be recognized readily by trig. in t cell acute lymphoblastic leukemia, chromosomal translocation could result in fusion of a tr gene to a non-tr locus  <cit> . for such non-regular tr sequences, trig will not annotate the non-tr segment and the non-tr locus can be further determined via alignment against the whole genome.

besides, trig allows for studying the role of non-regular recombination in immune system. in the race data, many non-regular tr and ig sequences suggest incomplete vdj recombination. for example, a j segment was recombined to a d segment, but not further to a v segment. one explanation of such incomplete recombination is the phenomenon of allelic exclusion  <cit> . for a diploid genome, allelic exclusion interrupts the recombination of the second allele of a tr gene when the first allele is recombined successfully. this results in only a single type of tr on the surface of a t cell. it is interesting that the incompletely recombined tr alleles are also transcribed and their roles in immune system can be investigated using trig.

CONCLUSIONS
trig is the first alignment pipeline for analyzing tr and ig sequences while taking into account non-regular vj recombination. this unique feature is particularly useful for analyzing race data, in which many tr or ig sequences are not regular. applying trig on race data will give accurate description of immune repertoire. therefore, trig should benefit researches of immune system and improve the prediction of various immune diseases.

additional file

additional file 1: is a pdf file containing supplementary results, tables s1-s <dig> and figures s1-s <dig> as described below. table s <dig> pcr primer for 5′ race and the primer and barcode  sequences used in  <dig> sequencing. table s <dig> number of vj annotations by four programs to the srr <dig> data. table s <dig> consistency of vj annotations to the srr <dig> data. figure s <dig> flow of 5′ race experiment. figure s <dig> comparison of alignments by different programs for the srr <dig> data. please check fig.  <dig> of the main text for explanations. figure s <dig> base quality of reads in the  first and  second quadrant of fig. 2b of the main text when trig is compared to igblast and imgt. 




abbreviations
cdrcomplementarity determining region

igimmunoglobulin

ngsnext-generation sequencing

racerapid amplification of cdna ends

trt-cell receptor

