BACKGROUND
proteins are large biomolecules that carry out vital functions in living cells. they typically carry out these functions in concert with other biomolecules, especially other proteins, which enables their diverse functionality, such as forming signaling networks and metabolic pathways, and regulating enzymatic activities  <cit> . in this context, the term protein-protein interaction  stands for the mutual interactions between pairs of proteins.

ppi data are obtained by high-throughput experimental techniques such as yeast 2-hybrid  <cit> , synthetic lethality  <cit>  and co-immunoprecipitation coupled mass spectrometry  <cit> . the data are deposited in more than  <dig> ppi databases  <cit>  such as biogrid  <cit> , the molecular interaction database   <cit> , the human protein reference database   <cit> , and intact  <cit> . despite the large amount of ppi data, the detection of the protein pathways and protein complexes is challenging because many of the ppis are noisy and non-reproducible.

a comparative analysis of ppi networks provides insight into species evolution and information about evolutionarily conserved biological interactions, such as pathways across multiple species . network alignment  algorithms were introduced to compare ppi networks between two or more species.

the comparison of ppi networks, by network alignment, shows that there are identical interaction patterns between proteins with high sequence similarity across different species  <cit> . for example, there are many common protein interactions between proteins in yeast networks and their corresponding protein orthologs in ppi networks of worms  <cit> . because functional interactions are often conserved across species and false positives are unlikely to occur in multiple species, network alignment can increase the confidence level of an observed interaction in a database  <cit> .

ppi-network alignment has many applications in areas such as detection of new pathways and of conserved motifs, prediction of the functions of proteins, orthology detection, drug design, protein-protein interaction prediction and phylogenetic tree reconstruction  <cit> .

generally, ppi-network alignment methods assume that two functional ortholog proteins on two different ppi networks are likely to interact with proteins in the corresponding networks that are functionally orthologs themselves  <cit> . following this line of thought, local network alignment  and global network alignment  methods are the main approaches for aligning ppi networks  <cit> . the lna algorithms search for small but highly conserved subnetworks  between species, whereas gna algorithms try to align all  the proteins to find large subgraphs that are functionally and structurally conserved over all the nodes in the two networks  <cit> .

ppi-network alignment algorithms use topological  and biological  information to align two networks. the topological information is more important than sequence information for aligning functionally conserved interactions  <cit> , hence the focus of network alignment algorithms shifted from using only biological information towards using topological information. most of the early works on ppi-network alignment, such as pathblast  <cit> , networkblast  <cit> , netalign  <cit> , mawish  <cit>  and grælin  <cit> , study the lna problem. more recent methods, such as isorank  <cit> , the graal family , magna and its successor magna++  <cit> , spinal  <cit> , pinalog  <cit> , netcoffee  <cit>  and beams  <cit> , are examples of gna algorithms.

in this paper, we consider the gna of only two networks. singh et al.  <cit>  introduced isorank as the first gna algorithm for ppi networks. the isorank algorithm is formulated as an eigenvalue problem, where it first computes a pairwise protein similarity metric , and then generates the final global alignment between the two networks based on this metric. the authors of  <cit>  developed approximation algorithms for efficient computation of the isorank similarities. ghost  <cit>  aligns two networks according to the similarity of spectral signatures of node couples. pinalog  <cit>  finds the final alignment by matching the communities of the two networks first. the graal  family is a group of gna methods that use the graphlet-degree signature similarity to align two networks. graal  <cit>  is the first gna algorithm that uses only structure of the two networks for alignment. it first selects a couple of nodes with high graphlet-degree signature similarity, and then by a seed-and-extend matching procedure it tries to expand the alignment around this couple in a greedy way. in general, a seed-and-extend algorithm starts the alignment procedure from a set of highly similar couples called seed pairs. then, it proceeds to align iteratively similar couples among neighbors of the seed pairs. h-graal  <cit>  uses the hungarian algorithm for improving the quality of alignments produced by graal, at the cost of increased computational complexity. to align two networks, mi-graal  <cit>  integrates several metrics such as graphlet-degree signature similarity, local clustering coefficient differences, degree differences and protein sequence similarity. l-graal  <cit>  is the latest algorithm from the graal family; it directly optimizes both the structural and sequence similarities with a heuristic seed-and-extend strategy based on a lagrangian relaxation. the spinal algorithm  <cit>  iteratively grows an alignment based on an a priori computed coarse-grained node similarity score. by using a genetic algorithm, magna  <cit>  tries to optimize the edge conservation between two networks.

in this paper, we design a new global pairwise-network alignment algorithm for ppi networks; it is built upon previous results for graph matching in computer science. we show the excellent performance of our algorithm  compared to several state-of-the-art algorithms. we also introduce a new measure for evaluating the performance of algorithms in aligning biological pathways between species. we argue the suitability of our algorithm by analyzing its performance in a bigraph-sampling model of network evolution . for this random-bigraph model, we use the results of  <cit>  to guarantee the performance of our algorithm.

methods
gna algorithms, by finding a one-to-one mapping of proteins, try to find large conserved sub-networks  and network motif <dig> between several species  <cit> . global pairwise-network alignment algorithms align proteins of only two species in order to maximize the biological and topological similarities  between aligned proteins; they have been extensively studied in the literature  <cit> .

a ppi network can be represented by a graph g, where v is the set of proteins and each edge  in e is an indicator of interaction between the two proteins u and v. formally speaking, given two networks g
 <dig> and g
 <dig>  the purpose of global network alignment is to identify a bijection between the full  vertex sets of two networks. the network alignment algorithms use the protein similarities and the network topology. in this study, the pairwise similarities between proteins are computed by the well-known basic local-alignment search tool   <cit>  that considers the alignment of amino acid sequences of those proteins.

the proper algorithm
network alignment has been an active area of research in the computer science literature. in the context of network analysis, the main goal is to align social graphs from different domains  <cit> . in computer vision and pattern recognition, graph matching is used to find similar images in a database .

in many scenarios, there is some side information that could be used in the process of network alignment. for example, it is possible to use information from a small fraction of individuals who elect to reveal their identities in two social networks. alternatively, some users link their accounts across multiple networks. this set of revealed identities or linked nodes  enables us to initiate an iterative procedure for matching the two graphs. in this regard, one main category of network alignment algorithms, known as percolation graph matching , assumes that there is side information in the form of a seed set of pre-matched node couples. in this class of algorithms, the alignment starts with a small set a of initial seed couples and percolates to other node couples, i.e., they build the alignment incrementally between nodes of the two networks .

we use the ideas from pgm algorithms  to design our proper  algorithm.

proper: two steps
in the process of ppi-network alignment by proper, initially we have as inputs two ppi networks g
 <dig> and g
 <dig>  the set of pairwise blast bit-score similarities  for couples of proteins in v
1×v
 <dig>  and fixed thresholds ℓ,r> <dig>  where ℓ and r are the sequence similarity and the local topological similarity thresholds, respectively.

the proper algorithm uses the sequence similarities and network structures in a two-stage procedure:  at the first step, it uses the sequence similarities to generate a seed set for a pgm algorithm; and  at the second step, to align remaining couples, it uses only the network structure and the seeds generated from the first step as inputs to the pgm algorithm. this is in contrast with many other pairwise-alignment algorithms, where they try to simultaneously maximize a function of both sequence and structural similarities. in this section, we first explain the process of generating seed set a from s . then, we explain how to align new couples, starting from the set a .

initial seeds play an important role in the alignment process. in the ppi setting, the blast bit-score is often a good indicator of functional similarities between proteins  <cit> . in other words, at high levels of sequence similarity it is possible to make a functional inference with an acceptable accuracy  <cit> . this means that, for couples of proteins with a high sequence similarity it is very likely that they have similar functions. the main approach in this paper is to use such couples as a starting point to find a global alignment. indeed, the seeds to the proper algorithm are those couples of proteins with high sequence similarities. also, a protein can be aligned with at most one protein from the other species. the degree of similarity between the couples in the seed set a is controlled by the threshold ℓ.

the seed set a is generated from the pairwise similarities  in the following manner: among all the couples of proteins with blast bit-score similarity above ℓ, couples  are matched in a descending order of sequence similarity, unless i or j is matched already. more precisely,  we add the couple ∈s with the highest similarity to the seed set and match i to j;  all the couples [ i,j
′] and [ i
′,j] are now forbidden and we remove them from s. we repeat the steps  and  until there is no remaining couple in the set s with blast bit-score similarity at least ℓ. note that, in the process of seed generation, when there are several couples with the same sequence similarity, we randomly pick one of them.

algorithm  <dig> describes the seedgeneration algorithm in detail. in this algorithm, for a set of couples a, v <dig> defines the set of nodes from network g
 <dig> in a, i.e., v1={i|∃js.t.∈afor somej}. we define v <dig> similarly. also, b
l
a
s
t
b
i
t denotes the blast bit-score similarity between two proteins i and j.

a priori, the probability of biological similarity of a protein couple decreases with a decrease in the sequence similarity. therefore, there is a trade-off between the number of protein couples with the same biological functions and the accuracy  based on ℓ. clearly, choosing a high value for ℓ aligns proteins that, with a high probability, have similar functions. however, this can result in removing couples with lower sequence similarities, but the same functions from the initial seed-set.





the second step of proper  starts the alignment process from the seed couples  obtained from the set of pairwise similarities s . it then incrementally generates the set π of matched couples among v1×v2∖a. in the mappercolation step, the proper algorithm relies only on the structure of g
 <dig> , and it does not use the sequence similarities. in this regard, the seed couples are added to the set of aligned couples π. then, at each time-step, the goal of the pgm algorithm is to add a new couple to the set π so that structural similarity is maximized.

in the process of the mappercolation algorithm, we look at the neighboring couples of the previously matched couples. we say a couple of proteins [ i
′,j
′]∈v
1×v
 <dig> is a neighbor of another couple  if and only if ∈e
 <dig> and ∈e
 <dig>  indeed, the evidence for deciding which couple to match  is the number of common neighbors each couple has in the set of currently aligned couples. to achieve the maximum structural similarity, our algorithm chooses the next couple in a greedy way: it chooses the couple with the maximum number of common neighbors s
c
o
r
e
max  in π and permanently aligns them. therefore the number of conserved interactions by adding the couple with the highest score is s
c
o
r
e
max. note that a new couple of proteins can be matched if its score is at least r.

when there are several couples with the maximum score, we tie-break by the minimum degree-difference in the two networks, i.e., we choose the couple  with the minimum |d
 <dig> i−d
 <dig> j|, where d
 <dig> i and d
 <dig> j denote the degrees of nodes i and j in the networks g
 <dig> and g
 <dig>  respectively. the proteins with closer number of interactions  have more structural similarity. if there is more than one couple with the minimum degree difference, we choose the couple with the minimum d
 <dig> i+d
 <dig> j. the couple with the minimum d
 <dig> i+d
 <dig> j minimizes the number of mismatched interactions. finally, if there are still several candidate couples, we randomly pick one of them. the process of alignment continues to the point where there is no remaining unmatched couple of proteins  and j∉v
2) with at least r common neighbors, in the current set of aligned proteins. note that for a given value of r, only nodes with degree at least r can get enough score to be matched. more precisely, mappercolation is not able to align:  unmatched nodes with a degree less than r, and  couples that have not gained enough scores. figure  <dig> presents an example of the second step of proper . algorithm  <dig> describes this algorithm.
fig.  <dig> 
dark-green nodes correspond the initial seed-set. couples [ i
 <dig> i
2],[ i
 <dig> j
2],[j
 <dig> j
2],[j
 <dig> i
2],[ v
 <dig> i
2],[ v
 <dig> j
2] are neighboring couples of the couple [ u
 <dig> u
2]. the couples [i
 <dig> i
2] and [j
 <dig> j
2] are the common neighbors of the couple [ u
 <dig> u
1] in the set of already matched couples π, i.e., the score of couple [ u
 <dig> u
2] is two. light-green nodes are the nodes that are matched after the first three steps of the mappercolation algorithm








performance measures
in this section, we explain the measures used for comparing alignment algorithms. as there is no single standard measure for evaluating the quality of alignments, we use several existing measures  <cit> . in addition, we introduce a new measure for comparison based on the performance of algorithms in aligning biological pathways.

for better illustration, in this section we assume that, without loss of generality, g
 <dig> has at least as many nodes as g
 <dig>  i.e., |v
1|≤|v
2|. let π denote the mapping produced by an alignment algorithm. also, let g denote the induced subgraph of g on a set of vertices u. assume π maps the nodes v1′⊂v <dig> to the nodes v2′⊂v <dig>  i.e., v2′=πv1′. note that many global alignment algorithms do not match all the nodes from graph g
 <dig> to a node from graph g
 <dig>  i.e., they align a large fraction of the nodes but not all of them. we define graph g
 <dig> as the intersection of the two graphs g
 <dig> and g
 <dig> under the alignment π, i.e., v
 <dig> is the set of proteins in graph g
 <dig> aligned by π to a protein in graph g
2; and e
 <dig> is the set of interactions in g
 <dig>  conserved under the alignment π in the graph g
 <dig>  formally, we have v0=v1′ and e0=eg1∩π− <dig> 

structural and functional similarity measures
in this section, we review the measures that are used widely to evaluate the performance of network alignment algorithms.

 node correctness  of an alignment is defined as the ratio of the number of correctly aligned couples to the number of nodes in the smaller network   <cit> . the precision is defined as the ratio of number of correctly aligned couples to the total number of couples |π| in the alignment π. these measures are applicable only to synthetic networks, because they can be used only for alignments with known ground-truth  <cit> .

as the true alignment between the proteins of two species is not known completely for real networks, it is not possible to directly calculate the nc and precision of an alignment  <cit> . to compare the performance of algorithms over real datasets, two different types of measures were introduced in the literature. the first group of measures uses the topological similarity of aligned networks. the second group measures the quality of an alignment by using other biological information.

the following measures are used for evaluating the topological similarity of aligned networks.

 the number of conserved interactions under the alignment π  is one of the measures used to evaluate the quality of algorithms based on the topological similarity  <cit> . formally, 
 Δπ=|π∩e2|. 


 edge correctness  is a measure of topological similarity among the aligned networks  <cit> . ec computes the ratio of edges from graph g
 <dig>  i.e., all the edges in the smaller network, which are conserved under the alignment π. formally, 
 ec=|π∩e2||e1|. 


 recall that the numbers of proteins  in the two networks are not equal. therefore, one drawback of the ec measure is that aligning sparse regions of g
 <dig> with dense regions of g
 <dig> can result in high values of ec. the induced conserved-structure score  measures the structural similarity of aligned networks by penalizing dense regions of g
 <dig>  <cit> . the ics score for an alignment π from graph g
 <dig> with graph g
 <dig> is 
 ics=|π∩e2||eg2π|. 


 the symmetric substructure score  is defined with respect to both g
 <dig>  networks  <cit> . the s
 <dig> measure penalizes the alignments that map sparse regions of one network to denser regions of the other network. formally, s
 <dig> is defined as follows. 
 s3=|π∩e2||e1|+|eg2π|−|π∩e2|. 


note that |e
1| refers to all the edges in the smaller network.

 the largest connected shared-component  is the largest connected subgraph of g
 <dig>  which is found to also exist in g
 <dig>  i.e., the largest connected component in graph g
 <dig>  <cit> . let |l
c
s
c| denote the number of nodes in lcsc. also, the share of nodes in lcsc is defined as |lcsc||v1|  <cit> .

we now introduce the second group of measures that are used for evaluating the biological quality of alignments.

 the gene-ontology consistency  score measures the functional similarity of aligned proteins. note that usually more than one gene ontology  terms are assigned to a protein  <cit> . also, as the go datasets are noisy and proteins have diverse functions, it is possible that true ortholog proteins do not have exactly the same set of go terms. goc for an aligned couple of proteins u∈v
 <dig> and v∈v
 <dig> is defined as the jaccard similarity coefficient between the go terms of the two proteins  <cit> . formally, it is defined as 
 goc=|go∩go||go∪go|, 


where g
o denotes the set of go terms associated with the protein u. g
o
c is calculated by summation over the goc terms of all the aligned couples in π: 
  <dig> goc=∑u∈v1goc). 


for ease of notation we refer to g
o
c as goc score.

 to compare algorithms based on the sequence similarities of aligned proteins, we use a slightly modified version of the average normalized bit–score  measure proposed in  <cit> . anbs for two graphs g
 <dig> and g
 <dig> under the alignment π is defined as follows. 
 anbs=|v1|−1∑i∈v1blastbit)blastbitblastbit,π). 


pathway comparison measures
in order to evaluate the performance of algorithms in aligning biological pathways, we introduce a new measure in this section. this measure captures the quality of alignments based on a higher level of functional and structural similarities .

it is known that there are many biological pathways with similar functions in different species  <cit> . the kegg pathway database  <cit>  provides a set of experimentally found biological pathways. in this database, a pathway is called by the name of a species , followed by a number. the pathways with the same number have the same function in different species. for example, hsa <dig>  mmu <dig>  dme <dig> and sce <dig> are in homo sapiens , mus musculus , drosophila melanogaster  and saccharomyces cerevisiae , respectively. these pathways have the same functions. <dig> assume p
w
i, <dig> denotes the set of proteins from a pathway with number i in the ppi network of the first species . similarly, we define p
w
i, <dig>  for pathway i, Δ
π,i denotes the number of conserved interactions between the proteins in this pathway under the alignment π, i.e., Δπ,i=eg1∩π− <dig>  note that we are looking for pathways that are present in both aligned species.

we say a protein u from a pathway is aligned correctly, if it is mapped to a protein v from a pathway with the same function. for pathway i, we define the number of correctly mapped proteins as |p
w
i,1∩π
−1|. this measure corresponds to the number of proteins that, from pathway i in the first species, are mapped to a protein from the same pathway in the second species. for pathway i, we define the accuracy as 
  <dig> accπ,i=2|pwi,1∩π−1||pwi,1|+|pwi,2|. 


this measure corresponds to the fraction of correctly mapped proteins in pathway i.

we conjecture that a good alignment algorithm should align proteins from pathways with the same functions across species, and many interactions among these proteins are conserved. to quantify this expectation, we set a threshold over the structural similarity of aligned pathways to consider them as a correct alignment. we say that an alignment π successfully aligns a pathway i, if there are at least δ conserved interactions under the alignment π for proteins in that pathway, i.e., if Δ
π,i≥δ. this thresholding guarantees that the structural similarity of aligned pathways are more than a minimum value . to evaluate the performance of an algorithm based on this thresholding criterion, we define a set of measures as follows. 
we consider pathways with at least δ  interactions in each of the species. let “ #pwδ” denote the number of such pathways.

alignment π successfully aligns pathway i, if Δ
π,i≥δ. the variable “ #fpwδ” refers to the number of successfully aligned pathways. we define the recall as 
  <dig> recallπ,δ=#fpwδ#pwδ. 


again, for a correctly aligned pathway i, we define a
c
c
π,δ,i similar to .




the averages over all i of all the a
c
c
π,i and a
c
c
π,δ,i values are represented by accπ¯ and accπ,δ¯, respectively. figure  <dig> provides a toy example of how to calculate the pathway alignment measures.
fig.  <dig> in this figure, two example ppi networks are given. green nodes are proteins which are in the same pathway . dotted lines represent the alignment π between these two networks. under this alignment, there are five conserved interactions between proteins in this pathway . also, the number of correctly mapped proteins is four. therefore, the accuracy of aligning this pathway is accπ,i=2×46+ <dig>  where there are six and five proteins from this pathway in each species, respectively




RESULTS
in this section, we compare proper with the main state-of-the-art network alignment algorithms, specifically  with l-graal as the most recent member of graal family that takes into account both sequence and structural similarities  <cit> ;  with magna++ that tries to maximize one of the ec, ics or s
 <dig> measures  <cit>  ;  with isorank  <cit>  as one of the first global ppi-network alignment algorithms;  with pinalog  <cit> ; and  with spinal i and ii  <cit>  as their performances are reported to be among the best alignment-algorithms  <cit> . table  <dig> provides an overview of the arguments and parameters of the algorithms used in our comparisons. note that it is recommended to use spinal and magna++ in modes i and s
 <dig>  respectively. also, the recommended settings for isorank is α= <dig> . for the other algorithms, no default setting is provided. we evaluate the performance of proper with r= <dig> and different values of ℓ.



all the algorithms use two sets of data as input:  the ppi networks of two species, and  the pairwise blast similarities  between proteins from the first species and proteins from the second species. we use two different ppi-network databases for our comparisons. the first one is from intact molecular interaction database  <cit> . this database enables us to compare algorithms based on large and more recent ppi networks. the go annotation terms are extracted from the gene ontology annotation  database  <cit> . for pathway comparisons over these networks we can use data from  <cit> . the second database is isobase  <cit> , a common dataset used in comparison of recent algorithms  <cit> . the results for experiments over isobase dataset are provided in additional file  <dig>  for further evaluations, we use synthetic networks with a known ground-truth.

structural and functional based comparisonstable  <dig> ppi networks of five major eukaryotic species from intact molecular interaction database  <cit> 



fig.  <dig> comparison of different global network aligners based on the average go consistency vs. average integrated conserved structure score. for the proper algorithm, we set r= <dig> and each point corresponds to a different value of ℓ. also, the red, blue, magenta and green points correspond to the parameters α= <dig> , <dig> , <dig>  and  <dig> , respectively




note that many of the go annotations are based on only sequence similarities, and these annotations could increase the goc scores artificially. clark and kalita  <cit>   propose to also compare algorithms by using only the experimentally verified go terms  to eliminate the effects of sequence similarities in the goc evaluations. for this reason, in our next experiment, we consider only go terms with codes “exp”, “ida”, “imp”, “igi”, “iep” and “ipi” , and we exclude the annotations derived from computational methods. figure  <dig> compares the goc  versus ec score. the result of this experiment confirms the superiority of proper over the other algorithms.
fig.  <dig> comparison of different global network aligners based on the average go consistency  vs. ec score. for the proper algorithm, we set r= <dig> and each point corresponds to a different value of ℓ. also, the red, blue, magenta and green points correspond to the parameters α= <dig> , <dig> , <dig>  and  <dig> , respectively



 <dig>  and anbs  measures. again, the proper algorithm performs the best based on the two measures, simultaneously.
fig.  <dig> comparison of different global network aligners based on the average anbs vs. average s
 <dig> score. for the proper algorithm, we set r= <dig> and each point corresponds to a different value of ℓ. the parameter α is  <dig> 



table  <dig> the average number of aligned couples  and the average of share of nodes in lcsc . we use α= <dig>  for spinal, isorank, magna and l-graal, and r= <dig> for proper

c
s
c|/|v
 <dig> 
 <dig> 
 <dig> 
 <dig> 
the best value for each column is highlighted in boldface



 <dig>  ec and lcsc measures.
fig.  <dig> comparison of different global network aligners on aligning h. sapiens and s. cerevisiae based on six different measures. for the proper algorithm, we set r= <dig> and ℓ∈{ <dig> }. the parameter α is  <dig> 


fig.  <dig> comparison of different global network aligners on aligning c. elegans and d. melanogaster based on six different measures. for the proper algorithm, we set r= <dig> and ℓ∈{ <dig> }. the parameter α is  <dig> 


fig.  <dig> comparison of different global network aligners on aligning m. musculus and s. cerevisiae based on six different measures. for the proper algorithm, we set r= <dig> and ℓ∈{ <dig> }. the parameter α is  <dig> 




the mappercolation algorithm and r
the proper algorithm has two main steps:  seedgeneration and  mappercolation. the numbers of aligned couples in the first and second steps depend on ℓ and r, respectively. in table  <dig>  we report the average number of aligned couples  in the first and second steps of proper for different values of ℓ and r∈{ <dig> }. we observe that by increasing the value of ℓ, the number of aligned couples in the first step decreases. this is because the number of couples with blast bit-score of at least ℓ has an inverse relationship with ℓ. in the second step, |π| increases by a factor of  <dig>  to  <dig>  for ℓ∈{ <dig> , <dig> , <dig> } with r= <dig>  for the detailed experimental result of proper with r∈{ <dig> } refer to table s <dig> in additional file  <dig> 


ℓ



choosing smaller values of r reduces the required structural similarity for aligning a couple. this explains why the number of aligned couples for r= <dig> is larger than for r= <dig> in table  <dig>  note that the mappercolation algorithm, for a given value of r, cannot align nodes with degrees less than r. from fig.  <dig>  which reports the degree distribution of different networks, we observe that there are many nodes with degree one, e.g, almost half of nodes for c. elegans and m. musculus. these nodes of degree one can not be aligned with r= <dig>  and this is the reason we choose r= <dig> for our experiments. in general, the value of r controls the strength of the structural evidence required before we decide to align a couple and a larger r makes errors less likely. we believe that by the increasing number of known ppi interactions over time, which consequently results in a decrease of the number of low-degree nodes, a larger value of r will generate better alignments.
fig.  <dig> cumulative degree distribution for all the networks from table 2





synthetic networks
in this section, we compare algorithms based on their performance over synthetic networks. for this, we consider the high-confidence yeast saccharomyces cerevisiae ppi network with  <dig> nodes and  <dig> edges  <cit> ; this network serves as our “ground-truth”. for this experiment, a noisy version of the yeast network is generated by sampling each of its nodes and interactions with a probability s. here, s controls the similarity of a sampled network with the original network, and we take 1−s as the “level of noise”. also, the sequence similarity for a subset of randomly chosen proteins is provided as a side information. in this experiment, the ground-truth node mapping is known by design, which enables us to calculate nc and precision. note that in order to account for the randomness of our experiments, we provide the average of  <dig> different alignments for each level of noise and available sequence similarity.

in the first experiment, we align the original network with five networks that are generated by different levels of noise 1−s∈{5%,10%,15%,20%,25%}. also, the sequence similarity for 50% of randomly chosen proteins is provided. figure  <dig> provides nc comparison over these synthetic networks for different levels of noise. from fig.  <dig>  for example, we observe that proper aligns networks which are sampled with the noise level 1−s=15% with nc= <dig> . note that the average number of nodes for different noise levels  is  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig> , respectively. this means that proper correctly aligns  <dig> × <dig> ≈ <dig> couples. figure s <dig> in additional file  <dig> compares algorithms based on precision. from the result of this experiment, we observe that for a low level of noise  l-graal has the best performance and proper comes second. with increasing level of noise, the performance of proper remains almost unaffected, whereas the quality of the other alignments decreases quite markedly.
fig.  <dig> comparison of different global network aligners over synthetic networks based on node correctness . the sequence similarity for 50% of randomly chosen proteins is provided. for the proper algorithm, we set r= <dig> and ℓ= <dig>  the parameter α is  <dig> 




in the second experiment, we investigate the effect of available sequence similarity on the performance of algorithms. we consider different amounts of available sequence similarity and fix the level of noise to 1−s=20%. figure  <dig> compares algorithms when the sequence similarities for 20%,30%,40%,50%,60% and 70% of randomly chosen proteins are provided. figure s <dig> in additional file  <dig> compares algorithms based on precision. we observe that proper outperforms the other algorithms over the entire range of available sequence similarities.
fig.  <dig> comparison of different global network aligners over synthetic networks based on node correctness . the level of noise is set to 1−s=20%. for the proper algorithm, we set r= <dig> and ℓ= <dig>  the parameter α is  <dig> 




these two experiments confirm the success of the proper algorithm in aligning synthetic networks and its robustness to high levels of noise.

aligning biological pathways
in this section, we compare algorithms based on their performance in aligning biological pathways. we use α= <dig>  for spinal, isorank, magna and l-graal, and r= <dig> l= <dig> for proper. we use the measures introduced in the pathway comparison measures section. for our comparisons, we consider the alignment of h. sapiens with the other four species from table  <dig>  we know that there are several proteins that belong to more than one pathway, because some proteins could be involved in different biological processes. for this reason, along the results for all the pathways, we consider a subset of non-overlapping pathways for each pair of species. table  <dig> reports the number of common kegg pathways between different pairs of species, where we consider  all the pathways,  pathways with at least δ= <dig> interactions in each of the species, and  a subset of non-overlapping pathways.



for the first experiment, we do not consider the topological similarities of aligned pathways. the result for alignments of pathways from different algorithms is provided in table  <dig>  we observe that proper outperforms the other algorithms in terms of accuracy. in the second experiment, for each algorithm we consider only the pathways with at least δ= <dig> conserved interactions across species . table  <dig> provides the results for this case. again, we observe that the proper algorithm outperforms the other algorithms, i.e., on average it aligns more pathways with a higher accuracy. magna++ performs very poorly in this experiment and we omit it from table  <dig> 

accπ¯
 <dig> 
 <dig> 
the best value for each column is highlighted in boldface



accπ,δ¯
r
e
c
a
l
l
π
 <dig> 
 <dig> 
 <dig> 
the best value for each column is highlighted in boldface




for many pathways, the proper algorithm, compared to other algorithms, returns alignments with a larger portion of connected conserved subgraphs. for example, fig.  <dig> shows the connected conserved subgraph of pathways hsa <dig> and mmu <dig> between human and mouse <dig> the connected subgraph of this pathway has  <dig> nodes and  <dig> edges, which is larger than alignments by the other algorithms .
fig.  <dig> the connected subgraph of hsa <dig> and mmu <dig> pathways in human and mouse from the proper algorithm, with conserved interactions in both species. this connected subgraph has  <dig> nodes and  <dig> edges. the pinalog algorithm returns the second largest connected subgraph. the rectangular nodes and solid edges are the proteins and interactions among them that are found only by the proper algorithm




execution time
a fast and scalable alignment algorithm is needed with the growing size of ppi networks. one of the key features of the proper algorithm is its low computational complexity and scalability. proper is able to align synthesis networks with millions of nodes in less than a hour. in fact, the complexity of our algorithm is o min), where d
 <dig>  are the maximum degrees in the two networks. table  <dig> provides the total execution time of algorithms for  <dig> pairwise alignments between the five species from table  <dig>  all computations are done on the same linux machine with  <dig> gb of memory and  <dig> intel xeon e3- <dig> cpus working at clock speeds  <dig>  ghz. we observe that proper runs much faster than the other algorithms.




discussion
the purpose of network alignment algorithms is to find functional and structural similarities between ppi networks of different species  <cit> . most of the works in the literature model global network alignment as an optimization problem over the convex combination of sequence and structural similarities between two networks  <cit> . this class of algorithms aims to maximize a cost function in order to increase the following two quantities simultaneously:  the pairwise similarities between aligned proteins , and  the structural similarity between the two graphs,   <cit> .

it appears that this particular formulation of the optimization problem precludes these algorithms from making good alignments by using both similarities jointly  <cit> . for example, the authors of  <cit>  have shown that in the isorank algorithm for the structure-only  alignment, the similarity of two nodes is only a function of their degrees. their results explicate the poor performance of isorank in finding alignments with good structural similarities. also, our experimental results confirm the trade-off between structural and functional similarities in most of the state-of-the-art network alignment algorithms. we observe that each of the five algorithms evaluated here, namely l-graal, magna++, isorank, pinalog and spinal, covers only a small portion of the trade-off frontier . in summary, we believe that these observations make it necessary to study the ppi network alignment problem under rigorous mathematical models.

the proper algorithm, in comparison, shows less compromise between the functional similarities among aligned proteins and the topological similarity. figures  <dig>   <dig> and  <dig> show that our algorithm sweeps the frontier  more robustly than the other algorithms. in addition, large conserved subgraphs with the same function are aligned with proper. the proper algorithm not only aligns proteins and their corresponding interactions from two different species better than other algorithms, it also aligns the conserved pathways between the species with higher accuracy. this shows that instead of finding conserved single pairwise ppis, proper represents a more biologically realistic performance by detecting sub-networks of conserved interactions from pathways with the same function among species.

in addition to its superior accuracy, proper performs better in terms of memory usage and speed, because the alignment process of proper is a very simple local propagation method.

why the proper algorithm?
in the following, we provide two reasons why proper performs well in terms of the cost functions considered.

the first reason is that a high blast bit-score is a reliable indicator of a match, whereas a low blast bit-score is very unreliable for many functional characteristics  <cit> . as a consequence, rather than optimizing a convex combination of functional similarity with structural similarity, it is advantageous to ascribe high confidence to the sparse set of high-blast couples, and to completely ignore low blast bit-scores. this is what proper does, by generating an initial seed-set of high blast couples, and then by propagating outwards from this seed set as a purely structure-driven process. note that as the pgm class of algorithms are shown to be robust against noise in the seed set  <cit> , proper is not too sensitive to the sequence similarity threshold ℓ for aligning new couples of proteins.

the second reason is more speculative and has to do with the statistical structure of the two networks being matched. computational biology postulates evolutionary models to explain the difference between ppi networks. studies have identified gene duplication and the gain or loss of genes and their interactions as the key evolutionary events in forming biological networks . several evolutionary models for regulatory networks and protein–interaction networks have been introduced based on these observed evolutionary processes .

percolation-based methods for network alignment are well-suited for network pairs whose structural differences arise from the random deletions of nodes and edges. specifically, in prior works, the authors of  <cit>  define the g random bigraph model for generating two correlated networks g
 <dig>  that rely on node and edge sampling processes. the two parameters t and s control the node and edge similarity of the generated graphs. although the analysis in these prior works is for a different algorithm within the pgm class, we believe the main concepts carry over to proper.

more specifically, for the sake of simplicity, we assume that the evolutionary process can only delete proteins and interactions among proteins. we call this model e
v
o
l
v
e, where we postulate an ancestor network g, from which both observable networks g
 <dig>  derive through independent evolutionary processes. the parameter t is the probability that a protein in g survives in g
 <dig>  ; and parameter s is the probability that an interaction between proteins, i.e., an edge in g, survives in g
 <dig>  . with the additional assumption that the ancestor network g is an erdős-rényi  <cit>  random graph  graph with n nodes, where each of the n <dig> possible edges occurs independently with probability 0<p<1) this evolutionary model is equivalent to the g model studied in the literature .

under this model, conditions for the success of pgm-based network alignment have been established. in particular, a sharp phase transition in terms of the seed-set size have been shown: if the seed-set size is above some threshold , pgm-based alignment can correctly match, with high probability, almost all the node couples by using a purely structural process. also, from the result of  <cit> , we know that under a similar random bigraph model, the correct alignment maximizes the number of conserved interactions between the two networks. this simple parsimonious evolutionary model provides guarantees for the performance of the proper algorithm over random graphs similar to  <cit> . note that, in practice, these algorithms are able to successfully align large real-networks, as well as many types of random graphs. in conclusion, it seems that mapping a  subset of nodes through a seed-generation step and matching the rest by using only structure of the two graphs works very well under an evolutionary model.

CONCLUSIONS
in this paper, we have introduced a new global pairwise-network alignment algorithm called proper. we have compared our algorithm with the state-of-the-art algorithms. we have shown that proper outperforms the other algorithms in both accuracy and speed. also, we have shown that the proper algorithm can detect large conserved subnetworks between species.

our results suggest that network-evolutionary models could be beneficial in designing network alignment algorithms. we believe that, for future work, considering a model that also takes into account gene duplication, network motifs, clustering within networks and modularity of biological networks  would increase the accuracy of global network alignments. finally, to find biological pathways and protein complexes using the proper algorithm, the next step would be to design methods that can detect sub-networks as potential pathways or complexes .

endnotes

 <dig> a network motif is a small recurrent connected-subgraph that occurs in ppi and other biological networks significantly more often than in random networks.


 <dig> these pathways are spliceosome. spliceosome removes introns from a transcribed pre-mrna, a type of primary transcript.


 <dig> pathways hsa <dig> and mmu <dig> are in the class cancer homo sapiens .

additional files

additional file  <dig> isobase: experimental results. the results for experiments over isobase dataset are provided in this appendix. 





additional file  <dig> the proper algorithm: detailed comparisons. the detailed experimental results for proper are provided in this appendix. 





additional file  <dig> pathways: experimental results. the detailed experimental results for aligning biological pathways are provided in this appendix. 




abbreviations
blastbasic local-alignment search tool

pgmpercolation graph matching

ppiprotein-protein interaction

