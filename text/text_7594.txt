BACKGROUND
although next generation genome sequencing approaches have improved greatly over the last decade, genome sequencing and assembly still relies primarily on shotgun sequencing  <cit> . genome assembly, the process of reconstructing the original genome sequence from sequence reads, is made difficult by the fact that the most commonly used sequencing technologies only produce reads between  <dig> base pairs  and  <dig> kilo base pairs  long. repetitive sequences longer than read lengths lead to ambiguities in the assembly, and additional information from paired-end reads  <cit>  is required to resolve those ambiguities. however, information from paired-end reads is often still insufficient for a comprehensive reconstruction of the original genome sequence  <cit> .

genome assembly is aided by optical mapping--a single molecule system  <cit>  for the construction of genome-wide ordered restriction maps through the assembly of  genomic dna, restriction digested and mapped in situ. the optical mapping system provides estimates on the locations of restriction-enzyme recognition sequences within a genome. although optical maps have been used previously to provide a means for scaffolding and validation, in addition to discernment of structural variants  <cit> , optical map data is commonly used only after a nascent sequence is produced  <cit>  by a genome assembler.

here, we explore an alternative approach for genome assembly leveraging optical map data within the popular de bruijn graph assembly paradigm, developing an algorithm we call agora: assembly guided by optical restriction alignments. we analyze the advantages of utilizing agora with optical map information in constructing accurate and comprehensive assemblies. our algorithm and analysis present the first results showing the benefits of using optical maps within the de bruijn graph assembly paradigm.

initial simulations show that our algorithm is effective at providing comprehensive assemblies of bacterial genomes, given an optical map with simulated errors and an error-free de bruijn graph with k-mer size  <dig>  the majority of our assemblies match the original reference sequences very closely. we also measure how the complexity of a genome's repeat structure, reflected in characteristics of the de bruijn graph, impact agora's assembly accuracy. in addition, we investigate how optical mapping error and the choice of restriction enzyme can affect the quality of the final sequence assembly. moreover, we verify that agora works with an experimentally determined optical map from the yersinia pestis kim genome  <cit> . finally, we also explore the applicability of our methods to assembly graphs produced from real sequence reads with errors, and provide a comparison of our results to what can be achieved through the use of mate-pairs .

optical mapping
the optical mapping system was first described in  <dig>  <cit>  as a single molecule platform capable of whole genome analysis and as a way to quickly construct physical maps to aid in genome assembly. optical mapping produces ordered restriction maps constructed from individual molecules , comprised of an ordered list of restriction fragments identified within each molecule after digestion with a restriction enzyme. the construction of a genome-wide optical map employs assembly techniques akin to those used for sequence assembly  <cit> , modified to account for error in the rmaps  <cit> . the resulting genome-wide optical map produced by this process provides a globally ordered list of restriction fragment sizes across the entire genome.

previously, algorithms have been developed  <cit>  to use optical maps to verify and scaffold contigs . this scaffolding and validation process is done by first computing for each contig an in silico map, which is an ordered restriction map  constructed computationally by finding all occurrences of the restriction enzyme recognition sequence within each contig. the size and order of the fragments within the in silico map are then compared to the sequence of fragments within the optical map of the genome , with the goal of assigning the contig to a single location within the optical map. recent work by nagarajan, et al.  <cit>  employs a dynamic programming algorithm to align contigs to an optical map to form a scaffold for the contigs. the validation of contigs is similarly performed by comparing an in silico map of each contig with an experimentally determined optical map.

de bruijn graph assembly
in this paper, we explore the benefits of using optical maps within the de bruijn graph genome assembly framework first proposed by pevzner et al.  <cit> . a de bruijn graph is a graph whose nodes correspond to k-mers  and edges correspond to -mers; an edge may join two nodes if one of the nodes is a prefix of the edge and the other is a suffix. in the context of genome assembly, a node is created for each k-mer in the set of reads and an edge for each -mer. in this formulation, genome assembly is reduced to finding a “chinese postman path”  <cit> , a path through the de bruijn graph that visits all edges at least once, which represents the true genome sequence. a full description of this approach is beyond the scope of our paper. readers interested in more details should refer to  <cit> .

practical implementations of the de bruijn graph assembly paradigm have been used successfully in practice  <cit> , and must tackle two major challenges: the presence of sequencing errors, which induce false k-mers in the graph, and the presence of repeats. due to repeats, the number of chinese postman paths in the de bruijn graph can be exponential in the number of nodes and edges  <cit> , making it infeasible to identify the one path that correctly matches the sequence of the genome being assembled. furthermore, imposing additional constraints on the reconstruction of the genome leads to computationally intractable formulations .

in practice, implementations of this approach forgo the ultimate goal of correctly reconstructing the entire genome sequence and instead attempt to reconstruct a collection of contigs, which generally represent repeat-free sub-paths in the graph. once these segments have been constructed, additional information from paired-end read data is typically used to resolve repeats and generate scaffolds.

although paired-end information is generally used only after an initial assembly is produced, recently, narzisi and mishra proposed a new algorithm sutta  <cit> , which uses paired-end read information within the genome assembly process. the algorithm uses pair-end information to prioritize a greedy branch and bound traversal of the assembly graph according to paired-end constraints, thereby resolving repeats and potentially generating longer contigs. they suggest that optical mapping information could be used in a similar way, but do not provide the details of such an implementation. here, we design and implement the first algorithm that uses optical mapping data during assembly, employing a framework similar in spirit to the one used by sutta, along with several additional improvements. we also use agora to explore the effect of the other parameters, such as noise in the optical mapping process, on our ability to effectively reconstruct the sequence of bacterial genomes.

overview of agora
as outlined above, genome assembly can be effectively formulated as the search for a path within a de bruijn graph that “spells” the same sequence as the genome being assembled. optical map information can guide the search for this correct path by eliminating alternate paths that are not consistent with the optical map. to guide the search, an in silico map of the sequence corresponding to a partially completed path can be compared to the optical map. if the two maps disagree, we can discard the path as incorrect. as a result, we can quickly prune the set of possible paths, and find a chinese postman path matching the optical map, which is likely to represent the true reconstruction of the genome. although imposing map-based constraints on the traversals of the graph leads to computationally intractable problems similar to the longest path problem  and the edge disjoint paths problem  <cit> , we show that appropriately chosen heuristics lead to a practical implementation that solves the map-guided assembly problem effectively for bacterial genomes.

a key idea for making our search tractable in practice is the identification of edges within the de bruijn graph which only match at one location in the genome optical map. these landmark edges seed our search, and dramatically reduce the number of paths that need to be investigated. after identifying landmark edges, we then proceed to search for paths connecting pairs of consecutive landmark edges, ensuring that these paths are consistent with the optical map. although finding a suitable path between consecutive landmark edges may still require exponential time, our experiments on bacterial genomes show that the search process between landmark edges is generally solvable in practice.

to search for paths between landmark edges, we use a refined version of depth first search. as the depth first search proceeds, we check if the in silico map of the current path matches the optical map, and if so, we proceed with the depth first search. otherwise, we backtrack and proceed along a different path until we find a path to the next landmark matching the optical map. with a few additional modifications to the algorithm to improve efficiency , agora was generally able to find a path in the de bruijn graph with a sequence and corresponding in silico map consistent with the optical map. although there may be multiple paths in the de bruijn graph that yield a sequence with an in silico map matching the genome optical map, our simulations show that these paths typically yield very similar sequences, differing only in the reconstruction of small complex repeat regions.

RESULTS
experimental setup
we analyzed the performance of agora on  <dig> sequenced bacterial genomes, using error-free de bruijn graphs generated from the complete genome sequences as previously described in  <cit>  and optical maps simulated from the sequences. in addition, we also tested agora on a published optical map of the y. pestis kim genome  <cit> . note that the error-free de bruijn graph of a genome sequence of order k is identical to the de bruijn graph constructed from a collection of error-free sequence reads where every k-mer in the genome is covered by at least one read. the de bruijn graph of each sequence was simplified by replacing unipaths  with a single edge representing the longer sequence, along with other de bruijn graph simplifications, which preserve all the information relevant for genome reconstruction from the original de bruijn graph . moreover, we collapsed parallel edges with greater than 99% sequence similarity, as long as the difference in the sequences did not create or remove any restriction sites .

to simulate optical maps from a genome sequence, we first compute an in silico map of the sequence and then perturb the fragments within this map by sampling from an error distribution. we modeled three different error levels -- highmedium and low --- and simulated one optical map from each of these distributions to measure the effect of optical mapping error on assembly quality. although the error simulation is a simple process which may not capture the full characteristics of experimentally generated optical maps , the results nonetheless show the impact of noise on the final assembly quality. the high error setting has characteristics matching the maximum fragment sizing error and maximum size of small fragments lost observed in the experimental y. pestis kim optical map, while the low error setting corresponds to what might be achievable with the new nano-coding technology  <cit> . the low error setting can noticeably improve the performance of our algorithm since it does not remove small fragments from the optical map. a more precise description of the three levels of noise used in our simulations can be found in the methods section.

after running agora, we used four different metrics to measure the quality of the final path through the de bruijn graph and the sequence associated with it.  our first metric, sequence correctness, roughly corresponds to the percentage of the final sequence that was assembled in the correct order. our second metric, edge correctness, is the number of graph edges placed in the correct order divided by the total number of edges in the de bruijn graph. the last two metrics measuring the final n <dig> size and number of contigs produced by our algorithm are computed after breaking the reconstructed sequence  wherever an error occurs, and treating sequence segments between errors as independent contigs produced by our assembler. this approach is consistent with the one used by salzberg et al.  <cit>  in the context of assembly evaluation. these final contig statistics are then compared against the original n <dig> size and number of contigs that would arise if one were to treat each edge in the starting de bruijn graph as a separate contig.

assembly of bacterial genomes with simulated optical maps
we start by measuring the performance of agora on assembling  <dig> bacterial genomes, providing as input their simplified de bruijn graphs of order k =  <dig>  which are equivalent to the graphs that can be obtained in an error-free sequencing experiment generating reads longer than 100 bp, covering each k-mer of length  <dig> in the genome. for each genome, we computationally generated bamhi  in silico maps for simulating optical maps. statistics summarizing the number of restriction sites in the in silico map of each genome and the characteristics of the de bruijn graphs of the genomes are shown in table  <dig> 

the de bruijn graphs for  <dig> bacterial genomes were generated with k-mer size  <dig> from the known sequences from  <cit>  , and the n <dig> size was computed for each genome, treating each edge in the de bruijn graph as a separate contig. the row “restriction sites” refers to the number of cuts within the genome when using the restriction enzyme bamhi.

to determine how well we could assemble the  <dig> bacterial genomes with the help of optical maps, we ran our algorithm on each de bruijn graph and optical maps simulated with the three different error settings described above. we then measured the quality of our assemblies based on sequence correctness, edge correctness, n <dig> size, and number of contigs. the results are aggregated in figure  <dig>  and per-genome information is provided in additional file  <dig> 

as we can see in figure 1a, agora assembles over ¾ of all genomes with greater than 98% sequence correctness for all three error settings. the mean sequence correctness in the high, medium, and low error settings were  <dig> %,  <dig> %, and  <dig> %, respectively. the means were lower than the median sequence correctness values due to a few very complex genomes for which the algorithm could only assemble a small fraction of the genome, producing outliers which are not shown in the figure  <dig>  when measuring the number of edges assembled in the correct order as shown in figure 1b, the edge correctness percentages are lower than the sequence correctness percentages, primarily because edges with short sequences  may be misplaced by our algorithm due to a lack of restriction sites. although agora may misplace 10%-20% of the de bruijn graph edges, these edges typically contribute to less than 2% of the genome assembled, as indicated by the sequence correctness boxplot shown in figure 1a.

in figure 1c and 1d, we plot statistics on the final n <dig> size and number of contigs that would result if we were to break the final path produced by agora wherever a mistake is made, and compare these values with the initial quality of the assembly before using mapping data. we can see in the figures that our algorithm substantially improves the n <dig> size and number of contigs, even after errors are accounted for. when measuring the overall improvement in n <dig> size we found that, in the median case, the n <dig> size increased by a factor of between  <dig>  and  <dig> , while the mean improvement was between  <dig>  and  <dig> , depending on the level of mapping error simulated. similarly, the number of contigs decreased by a factor of between  <dig>  and  <dig>  in the median case, and the mean improvement was between  <dig>  and  <dig> . in addition, we found that we had assembled  <dig>   <dig>  and  <dig> genomes perfectly into a single contig representing the entire genome sequence in the high, medium, and low settings, respectively.

agora finished in under one minute for ¾ of instances, while the longest runtime was around  <dig> minutes. note that we forced the algorithm to skip to the next landmark if no path could be found within one minute , since our tests required running the algorithm more than  <dig>  times. we do not expect this time limitation to significantly affect the median and quartile statistics, as only  <dig> % percent of genomes had any regions skipped. those genomes were generally complex genomes with assembly quality in the lowest quartile, and additional running time did not improve their assembly quality significantly.

in addition to the aggregate statistics shown in figure  <dig>  we also individually compared the original and final n <dig> sizes produced by our algorithm for each genome using the medium error setting. in figure  <dig>  we plot a point for each genome at its original and final n <dig> size, after normalizing by genome length. we see that most genomes have substantial improvement in n <dig> size, with some genomes even having normalized n <dig> size starting below 20% and improving to nearly 100% after assembly. some genomes with normalized n <dig> size starting below 20% did not improve much, mostly because the corresponding graphs contained many short edges without any restriction sites, making it difficult to place those edges on the optical map and rule out incorrect paths in the de bruijn graph.

as the normalized n <dig> size did not seem to predict very well how accurately we could assemble the final genome, we performed further statistical analyses to test whether other factors were more correlated with the final assembly quality. we computed spearman’s rank correlation coefficient between sequence correctness and various de bruijn graph characteristics. we found that the sequence correctness obtained by agora had the highest correlation with the average edge length of the de bruijn graph among all the characteristics we measured. the correlations are: genome size , normalized n <dig> size , n <dig> size , number of edges , average number of restriction sites per edge , and average edge length .

it is not surprising that average edge length, average number of restriction sites per edge, and n <dig> size have a very strong correlation with sequence correctness as this implies the corresponding de bruijn graph has long edges which are likely to contain multiple restriction sites. these long edges are easier to place unambiguously along the map and can be used to rule out incorrect de bruijn graph paths very effectively.

it is important to note that the average edge length and number of edges are strongly anti-correlated  due to the fact that the genome lengths in our dataset are within a fairly narrow range of 1– <dig> mbp . given our data, we cannot fully distinguish between the impact of long edges versus fewer edges  on our ability to reconstruct a genome. genome length also has very low correlation with the sequence correctness of the assembly, but more testing needs to be done on larger and more complex genomes in order to better determine the factors that most influence the quality of genome assembly.

we also directly plotted sequence correctness versus the average edge length in each de bruijn graph over all three error rates  and observed that sequence correctness generally increases with average edge length. almost all genomes with average edge length greater than  <dig> kbp can be assembled with accuracy over 98%, even when relying on maps with the highest error rate, while we have mixed results for genomes with shorter average edge length. also, note the impact of error level in the optical map on the assembly accuracy is less than 2% for genomes with average edge length greater than  <dig> kbp , but has a greater impact on graphs with shorter edges, where the final sequence correctness differs by as much as  <dig> percentage points between the high and low error settings. additionally, we find that most genomes with a starting n <dig> size larger than approximately  <dig> kbp also yield map-guided assemblies with greater than 98% accuracy. 

assembly of y. pestis kim with previously published optical map
we also evaluated the performance of agora on the assembly of the genome of y. pestis kim  with a pvuii  optical map experimentally determined in  <cit> . in addition to the experimental optical map, we also ran agora on optical maps simulated for pvuii with the same three levels of noise mentioned previously. since y. pestis is a complex genome containing many repeats , we provided agora with a de bruijn graph produced with a larger k-mer size of  <dig> in the initial experiment. subsequent experiments for k-mer size  <dig> yield lower quality assemblies, as described in the next section. agora took under  <dig> minutes to find a path matching the genome optical map for each error rate . the resulting reconstruction of the genome matched the correct sequence with accuracy between  <dig> % and  <dig> %, depending on the error rate used .

a summary of the results of our algorithm on assembling y. pestis kim, when given a de bruijn graph with k-mer size  <dig>  and a simulated optimal or experimental optical map from  <cit> .

optical mapping information substantially improves the initial n <dig> size of  <dig>  bp  by a factor of between  <dig>  and  <dig>  depending on the quality of the optical map. the number of contigs is correspondingly reduced by a factor of between  <dig>  and  <dig> . while the maximum fragment sizing error and maximum size of small fragments lost in the high error optical map simulation match the values observed the experimentally produced optical map  <cit>  , agora generates a slightly worse assembly when guided by the experimental map. this indicates that the simple heuristic procedure we used to simulate noise may not adequately match the precise characteristics of the noise seen in experimentally determined optical maps . nonetheless, our results still show the potential impact of noise in the optical on the quality of the final assembly.

to further assess the quality of the assemblies, we used mummer  <cit>  to compare the sequences produced by our algorithm to the known genome sequence. figure 4a illustrates our previous analysis showing that the sequence generated by agora matches the original sequence with greater than 99% accuracy, when given an optical map with low noise. the line along the diagonal indicates sequence that correctly matches the true genome, while only  <dig> errors can be seen at the locations marked by small circles, which occur due to short misplaced edges. in figure 4b, we see that there are more errors in the assembly built using the experimental optical map. the gaps in the line along the diagonal in figure 4b indicate roughly 13% of the genome is not correctly assembled by our algorithm. the longest regions of incorrectly assembled sequence occur in portions of the genome where there are few restriction sites.

in these regions, agora picks a single path among several possible paths which may match the optical map, possibly leading to errors in the reconstruction. for example, the largest erroneous gap shown in the lower left of figure 4b occurs within a  <dig> kbp genomic region that contains only two restriction fragments of size  <dig> kbp and  <dig> kbp, respectively. within the same region, genomic repeats lead to a fragmentation of the de bruijn graph resulting in a collection of short edges without any restriction site information, and one edge which contains a single restriction site. the difference in performance on the low error optical map and the experimental optical map highlights the potential benefit of developing higher resolution and more accurate mapping technologies . alternatively, additional mate-pair information  along with an optical may also help resolve ambiguities in regions with few restriction sites.

effect of restriction enzyme choice on assembly quality
we further examined the effect of using different restriction enzymes on the quality of the assembly that can be produced by our algorithm for the y. pestis kim genome. we generated a de bruijn graph with k-mer size  <dig> for the sequence of y. pestis kim, and then computed the in silico map of the genome for each of  <dig> different restriction enzymes. we then simulated noisy optical maps by adding three different levels of noise to each in silico map, as described previously. in figure  <dig>  we plot the number of restriction sites versus the sequence correctness achieved by our algorithm using the optical map for each enzyme at the three different optical map error rates.

the vertical line in figure  <dig> corresponds to the number of restriction sites for the enzyme pvuii used to construct the experimental optical map of this genome  <cit> . the circles drawn on the line represent the quality of the corresponding assemblies with a pvuii map under different mapping error rates. although we are able to assemble the genome with  <dig> % sequence correctness in the low error setting, the medium and high error settings only assemble with  <dig> % and  <dig> % sequence correctness, respectively . figure  <dig> illustrates that restriction enzymes that cut more frequently can yield better assemblies. a hindiii  optical map with  <dig>  restriction sites achieves  <dig> % sequence correctness in the low error setting and  <dig> % in the medium error setting, as indicated by the green blue squares in figure  <dig>  respectively. in the high error setting, we can achieve  <dig> % sequence correctness  with a bsrgi  optical map with  <dig> restriction sites. over the three cases, we can improve the accuracy by between  <dig> % and  <dig> % by choosing an appropriate restriction enzyme.

the strong dependence of the quality of assembly on the restriction enzyme used highlights the need for choosing an appropriate enzyme. running preliminary lab experiments to digest the genome with different enzymes can be used to find an enzyme which cuts the genome at an appropriate frequency . alternatively, generating preliminary sequence data and building a corresponding de bruijn graph, can also help estimate the cut frequency of various restriction enzymes.

optical maps versus mate-pairs
the use of mate-pairs to guide the assembly process was previously studied by wetzel et al.  <cit>  using the same genomes used in our study. a direct comparison to the full results presented previously is difficult to perform as our goal here is the reconstruction of a single contig spanning an entire chromosome, while the work of wetzel et al. is focused on the resolution of individual repeats  using mate-pair information. furthermore, mate-pairs and optical maps provide complementary types of information: mate-pairs provide local information and are most effective in the short range  where the optical mapping resolution may be limited, while optical maps provide global information and are particularly effective in the long range . to demonstrate the complementary strengths of these technologies, we highlight a couple genomes analyzed both with mate-pairs in  <cit>  and with optical maps in our study.

first, rhodospirillum rubrum atcc  <dig>  was completely and correctly resolved by agora in our study, but mate-pair based analyses were unable to fully resolve this genome even when trying different combinations of library sizes. we applied the mate-pair repeat resolution approach described in the work of wetzel et al.  <cit>  using both the tuned library mixture of sizes  <dig> and  <dig> , and the ‘standard’ combinations of 2kbp + 8kbp, or 2kbp + 35kbp. note that it is possible that some combination of two or more mate-pair libraries could have resolved this genome, as we have not exhaustively explored all possible combinations of mate-pair libraries. however, in practical terms, it is unlikely that a lab interested in solving the rhodospirillum genome would attempt multiple library preparations in hopes of finding the perfect combination for this genome.

a second example is the genome of streptococcus agalactiae nem <dig>  which contains a  <dig> kbp-long plasmid-like repeat  occurring three times within the main chromosome  <cit> . resolving this repeat would require mate-pairs longer than  <dig> kbp, which are beyond the sizes routinely generated, especially in the context of next generation sequencing technologies .

real assembly graphs
our results have focused on running our proof-of-principle algorithm on ideal de bruijn graphs obtained from error-free sequencing data. the application of agora to data from real sequencing experiments is the object of future work and beyond the scope of this paper. however, it is natural to ask whether our algorithms can feasibly be extended to real datasets. to address this question we focused on sequencing data available for the yersinia pestis kim genome, specifically a  <dig> dataset . we assembled these reads using newbler  and explored the structure of the resulting contig graph .

we compared the newbler graph to the ideal de bruijn graphs of order  <dig> and  <dig>  as the average length of the  <dig> reads falls between these values at 438 bp. the newbler assembly resulted in  <dig> contigs with an n <dig> size of  <dig>  while the order  <dig> graph had  <dig> contigs with an n <dig> size of  <dig>  bp and the order  <dig> graph had  <dig> contigs with an n <dig> size of  <dig>  bp. thus, in broad terms, the real assembly graph has similar characteristics to the perfect de bruijn graphs in our experiments.

more relevant to our study is the question of whether landmark edges can be easily found in the newbler graphs. the agora algorithm critically depends on our ability to find edges that have a unique placement along the optical map. according to this criterion, the newbler contig graph is also roughly similar to the simulated graphs. specifically we find  <dig> landmarks in the newbler assembly, compared to  <dig> and  <dig> landmarks in the order  <dig> and  <dig> de bruijn graphs, respectively. we also aligned the newbler contigs using the more complex dynamic programming algorithm described in  <cit>  and identified  <dig> landmarks, indicating that the use of already existing optical map alignment algorithms will be effective in extending the agora algorithm to real sequencing data.

CONCLUSIONS
we have presented a computational framework that allows optical mapping data to be used during the genome assembly process. our work demonstrates the potential of this approach in improving the assembly of bacterial genomes. with optical maps, over ¾ of our bacterial genomes were assembled with over 98% accuracy, and even the complex genome of y. pestis kim could be assembled with sequence correctness between  <dig> % and  <dig> %, depending on the quality of the reference optical map. moreover, for the bacterial genomes in our test data set, in the median case we could improve on the n <dig> size by a factor of between  <dig>  and  <dig>  and reduce the number of contigs by a factor of between  <dig>  and  <dig>  over what could be achieved with sequence data alone.

our initial study also allowed us to explore the effect of experimental parameters on the usefulness of mapping data. we demonstrated substantially improved quality of assembly when using high quality optical maps, highlighting the value of continued improvements in this technology . in addition, we showed that the choice of restriction enzyme significantly affects assembly quality, indicating the benefits of preliminary analysis to determine a suitable restriction enzyme before constructing an optical map.

the results we have shown are only a first step towards developing a map-guided genome assembler. agora has only been tested on error-free assembly data and will need to be adapted to handle the characteristics of assembly graphs derived from real sequencing data. the heuristics used to speed up the alignment process may not be effective in the context of a combination of realistic sequencing and mapping error profiles. a practical implementation of our approach may need to rely on a variant of the dynamic programming alignment algorithm described in  <cit>  with additional heuristics or the use of parallel/high-performance architectures. additionally, it may be useful to develop methods to detect regions of the assembly where multiple paths may match the optical map, and exclude those regions from the final assembly to avoid introducing errors.

finally, a promising area of future research involves the combination of mapping and mate-pair data. these types of information offer complementary strengths – long-range structural information from optical maps, and short-range links from the mate-pair data – which can be leveraged to overcome our difficulty in resolving genomic regions that are sparsely sampled by the restriction map.

