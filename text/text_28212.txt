BACKGROUND
reconstructing cellular signaling networks and understanding how they work are major endeavors in cell biology. the scale and complexity of these networks, however, render their analysis using experimental biology approaches alone very challenging. as a result, computational methods have been developed and combined with experimental biology approaches, producing powerful tools for the analysis of these networks. these tools aid biologists in interpreting existing experimental findings, evaluating hypotheses, enumerating possible biological behaviors, and, ultimately, in quickly designing experiments that maximize the amount of useful information gained. by assisting biologists in maximizing the amount of information obtained from their experiments through improved experimental design and more thorough analysis of results, computational tools increase the pace of scientific discovery.

biological network analysis can generally be classified as either structural or dynamic  <cit> . structural analysis provides insights into global properties of the network, among them decomposition of the network into functional modules , enumeration of signaling paths connecting arbitrary protein pairs , and the identification of key pathways that determine the behavior of the network . dynamic methods, on the other hand, simulate the actual propagation of signals through a network by predicting the changes in the concentration of signaling proteins over time. these predictions will be of varying degrees of resolution and accuracy, depending largely on the accuracy and level of detail of the model from which they are produced.

the prevailing methods for dynamic analysis involve systems of ordinary differential equations   <cit> . these approaches require kinetic parameters for the individual biochemical reactions involved in the signaling process. this requirement often poses a significant hurdle for researchers as the numerical values of such parameters are difficult to obtain and may be the object of the researcher's project in the first place. in  <cit> , we presented a novel signaling network simulation method which uses a non-parametric petri net model of network to predict the signal flow under various experimental conditions. our simulation method uses a novel technique to approximate the interaction speeds and predicts the qualitative behavior of the signaling network dynamics.

the advantage of our method over odes is the wide availability of connectivity-based models of signaling networks, and the relative speed with which they can be constructed. numerous databases exist which catalog known signaling interactions . thus, the existence and type  of an interaction can often be inferred directly from literature and/or these databases. this presents a stark contrast to the kinetic parameters required by odes, the numerical values for many of which must be determined experimentally for each experimental condition and cell line of interest  <cit> .

in this paper, we present the software tool pathwayoracle, an integrated environment for connectivity-based structural and dynamic analysis of signaling networks, supporting

• visualization of signaling network connectivity;

• two versions of the simulation method described in  <cit>  where

- the first allows prediction of signal flow through a given network for a specific experimental condition, and

- the second predicts the difference in signal flow through a given network induced by two different experimental conditions;

• enumeration of the paths connecting arbitrary pairs of nodes in the network; and

• visualization of experimental concentration data on the signaling network display.

in future releases we plan on expanding capabilities in all three areas of analysis – dynamic, structural, and experimental – with a focus on providing effective ways of integrating results from each together.

pathwayoracle has been designed in a modular fashion in order to facilitate extension of existing capabilities and the addition of new features.

since pathwayoracle's most distinctive analytical capability involves the signaling petri net simulator, a new dynamic analysis technique for signaling networks, we first provide an overview of the signaling petri net modeling approach. then in subsequent sections, we focus on pathwayoracle and explain the architecture and core concepts underlying the tool and then examine the individual features, how they can be used, and how they compare to existing tools.

the signaling petri net simulator
petri nets provide a graphical and executable model of processes in which information or material flows among a series of places or entities  <cit> . a petri net consists of places, transitions, and tokens . quantities of tokens are assigned to individual places. this assignment is called a marking. as figure  <dig> illustrates, the network flow is modeled by the reassignment of tokens to individual places in the petri net in response to transition firings.

a signaling petri net is an extension of the petri net formalism to model a signaling network. places are signaling proteins and transitions implement directed protein interactions; each transition models the effect of a source protein on a target protein. the marking of  protein p at time t is interpreted as the activity-level of that protein – the number of activated molecules of that type. figure  <dig> shows the correspondence between a signaling network and a signaling petri net model.

the signaling petri net simulator models signal flow as the pattern of token accumulation and dissipation within proteins over time in the petri net. through transition firings, the source can influence the marking of  the target, modeling the way that signals propagate through protein interactions in cellular signaling networks.

in order to overcome the issue of modeling reaction rates in the network, signaling dynamics are simulated by executing the signaling petri net  for a set number of steps  multiple times, each time beginning at the same initial marking. for each run, the individual signaling rates are simulated via generation of random orders of transition firings . when the results of a large enough number of runs are averaged together, we find that the change in distribution of tokens in the network correlate with experimentally measured changes in the activity-levels of individual proteins in the underlying signaling network. in essence, the tokenized activity-levels computed by our method should be taken as abstract quantities whose changes over time correlate to changes that occur in the amounts of active proteins present in the cell. it is worth noting that some of the most widely used experimental techniques for protein quantification – western blots and microarrays – also yield results that are treated as indications, but not exact measurements, of protein activity-levels within the cell. thus in some respects, the predictions returned by our spn-based simulator can be interpreted like the results of a western blot or microarray experiment looking at changes relative to "control".

during a simulation run, the simulator imposes a strict ordering on transition firing such that it creates a two-time scale simulation. the smaller time scale is discretized as the firing of a single transition. this unit is referred to as the firing time scale. firing steps are nested within a larger time scale, called time blocks, within which each transition is fired exactly once. the values returned by the simulator are the averaged token-counts for each protein at each time-block .

in the first time block, transition t <dig> fires first: it reads  <dig> tokens out of grb <dig> and places  <dig> additional tokens in ras. transition t <dig> fires second, reading  <dig> tokens out of grb <dig>  transition t <dig> is evaluated last. the final marking for the network, highlighted as the red column in block  <dig> is used by the simulator as the marking for that block when averaging across runs.

at the conclusion of block  <dig>  compare the values highlighted in red in the initial column and at the end of both blocks. note how the distribution of tokens have changed over the course of the simulation. grb <dig> has the same number of tokens, implying that its activity-level has remained unchanged – this is consistent with the signaling network since no activating or inhibiting edges affect it in the model. akts token-count has risen, consistent with the fact that it is only activated in the signaling network. ras's token-count has fallen which is one plausible behavior of the system since it is activated by grb <dig>  but inhibited by akt.

implementation
pathwayoracle is written in python  <cit> . the user experience is oriented around visualization of and interaction with three main types of data: the signaling network, markings, and paths. at any given time, one signaling network is open, which is the basis for all analyses. any simulation or concentration data is loaded and inspected as markings. currently all static analyses revolve around paths, which are the third data type. in the following subsections, these individual data types and the user interfaces to them are discussed in more detail.

the signaling network model
while the implementation of our methods use the signaling petri net model discussed in an earlier section of this paper, we provide a simpler and more convenient representation of the network to the user which omits the internal topology of the transitions and allows the user to specify interactions simply as either activating or inhibiting. thus, for the remainder of this paper we use the following definition of the signaling network which is consistent with the experience the user will have when working with pathwayoracle. the signaling network connectivity is a directed graph g =  where

• v is the set of nodes, which are signaling proteins and complexes  and

• e is the set of edges, which are signaling interactions. each edge is of one of two types: u → v for activation and u ⊣ v for inhibition.

within pathwayoracle, each signaling node has a name, unique within the network. a signaling edge has no properties besides its type and is only defined by its source and target.

in order to facilitate the rapid construction of such signaling network models, we devised a file format called the connectivity format. it is capable of expressing both general networks as well as paths. when representing a network in the format, as shown in the example in figure  <dig>  one signaling interaction is written on a line with the format

 u -> v   or   u - | v 

where u is the name of the source signaling node and v is the name of the target signaling node. each node is taken to represent the active form of the protein it is named for. thus, from the example above, the interaction pi-3-k→akt means that the active form of pi-3-k increases the activity-level of akt whereas the interaction pten⊣akt means that the active form of pten decreases the activity-level of akt. while these types of unparameterized relationships can be represented in sbml, sbml was designed for encoding much more information than just connectivity  <cit> . as a result, we deemed it appropriate to design a more concise format for our purposes. however, in a future release, pathwayoracle will support loading and saving in the sbml format.

at a given point in time, only one signaling network can be open in pathwayoracle. the main window displays a graphical representation of the network. the layout of the network can be modified by dragging nodes or by shift-clicking on edges to create, remove, or move waypoints. these layouts can be saved with the network and loaded again.

signaling network markings
in signaling networks, signal flow is measured and quantified as the fluctuation of concentrations of various forms of signaling proteins over time. in pathwayoracle, we model concentrations using the concept of a network marking, which was adapted from petri nets in which it was first used  <cit> .

markings
in pathwayoracle, a marking, μ is an assignment of real values to the nodes of a signaling network such that every signaling node receives a value. earlier, the concept of a marking was introduced as the assignment of tokens to protein places in the signaling petri net. in a signaling petri net, tokens are discrete. in pathwayoracle, a marking is an average of the markings from many independent simulation runs, which gives rise to the real, rather than integral values, assigned by the marking.

as discussed earlier, the value of the marking of a signaling node, μ, can be interpreted as an estimate of the concentration or change in concentration of the active form of the signaling protein v . the two different versions of the simulator generate markings with these different meanings. the first simulator predicts the signal flow due to an experimental condition and generates markings whose values are taken to represent the actual activity-level of signaling protein present over the assumed basal levels. the second version of the simulator predicts the difference in signaling due to changing experimental conditions. the values assigned by markings produced by this simulator correspond to the change in the activity-level of the protein induced by the change in experimental condition. this will be discussed further in the results and discussion section.

marking series
in order to model signal flow, a single marking is not enough since it only provides a single snapshot of concentrations throughout the network. a marking series is an sequence of markings,  in which the marking μt is a snapshot of the concentration distribution at time step t. thus, it is possible to see how the activity-level of protein v changed by plotting the values μ <dig>  μ <dig> ..., μt. pathwayoracle provides the ability to do this.

pathwayoracle supports loading a marking series dataset from comma-separated value  files. as shown in figure  <dig>  the file has a header row which specifies, for each column, the name of the molecule whose concentration values will appear in that column. each subsequent row contains the value assignments for a marking: the second row contains the marking for time step  <dig>  the third row contains the marking for time step  <dig>  and so on.

marking groups
in many experiments, the activity-level of various proteins are sampled at different time points and under different experimental conditions. since the marking series is not able to represent changes due to different experimental conditions, we introduced the more general concept of a marking group in which each marking can correspond to an arbitrary activity-level distribution. each marking is given a descriptive label that can be used to identify the conditions under which the activity-level was sampled.

like the marking series, a marking group is loaded from a .csv file. however, unlike the marking series in which each row corresponds to a time step, in the marking group, each row corresponds to an independent marking . as shown in figure  <dig>  the first row is a header row specifying the molecule names for each column, the first column specifies the names for the individual markings .

the marking manager
pathwayoracle includes a specific user-interface, the marking manager, designed to manage the three different types of markings. the marking manager provides a central interface within which it is possible to view all markings loaded and inspect them in ways that are relevant to their type . the specific ways in which markings can be inspected will be discussed further in the results section.

signaling paths
the current structural analysis capabilities available in pathwayoracle allow inspection of signaling paths within the network. a signaling path p is a sequence of nodes,  where vi ∈ v ∀ <dig> ≤ i ≤ k, and  ∈ e ∀ <dig> ≤ i <k. in this case, we say that node v <dig> is the source of path p, and node vk is the target of p. given a path, a variety of statistics may be of interest to the user. additionally, it may be useful to view the path within the larger network. pathwayoracle provides these capabilites which will be discussed in the results and discussion section.

sets of paths can be saved to a file and loaded back into a session. like networks, paths are also stored in the connectivity format. when representing a set of paths, as shown in figure  <dig>  the full node names and the edge types are written so that all path information is directly available within the file itself. one line contains one path.

RESULTS
pathwayoracle provides a variety of tools for analyzing the structural and dynamic properties of a signaling network based on its connectivity. while its main differentiating feature is the ability to predict signal flow through a network using only the connectivity of the signaling network, pathwayoracle also provides the ability to visualize the network, analyze its connectivity, and inspect concentration-based experimental data.

with the exception of the signaling petri net simulator, pathwayoracle's features can be found in various combinations in other tools. figure  <dig> provides a matrix of the features and capabilities of several tools most commonly-used for signaling network analysis. while other tools support a variety of simulation techniques, pathwayoracle, alone, provides non-parameterized simulation capabilities. it is worth noting that the commercial software package cellillustrator  <cit>  provides petri net-based simulation capabilities. the difference between cellillustrator and pathwayoracle petri net approaches is the extensive set of kinetic parameters required by cellillustrator in order to simulate a biological system. in this regard, hybrid functional petri nets, the underlying technology used by cellillustrator, are not significantly different from odes.

another important distinguishing characteristic of pathwayoracle is the combination of features that it supports. biological network analysis is a multi-faceted process that may involve structural, dynamic, and data analysis in parallel. whereas other tools tend to focus on one or two of these general areas of analysis, we considered it important for pathwayoracle to incorporate all three in order to provide the researcher a single environment in which all their analysis could be done. in future releases we plan to increase pathwayoracle's support for all three of these directions of investigation: structural, dynamic, and data analysis.

in the remainder of this section, we discuss the features currently available in pathwayoracle.

network visualization
as in many other computational analysis tools for signaling networks , an interactive graphical representation of the signaling network connectivity is at the center of the pathwayoracle interface. the main window provides a visualization of the signaling network connectivity. this visualization interface allows the user to edit the layout of the network by clicking on and dragging nodes and by shift-clicking on edges to create, remove, or move waypoints. waypoints are points that lie on an edge. holding down shift will display all edge waypoints. existing waypoints can be dragged to change the path that an edge follows. right-clicking on a waypoint will remove it. left-clicking on a straight segment of the edge will create a new waypoint.

the network visualization also provides a view onto which path and experimental data analysis may be mapped. as will be discussed in subsequent sections, selected paths may be highlighted in this view and markings from experiments can set the colorings of individual nodes.

network signal flow simulation
the main feature differentiating pathwayoracle from other tools, such as celldesigner  <cit>  and copasi  <cit> , is its ability to simulate signal flow using an unparameterized signaling network model. simulations can be performed in two different ways. in the first , the simulator predicts the signal flow through the network for a specific experimental condition. in the second , the simulator predicts the difference in signal flow due to two different experimental conditions on the same network. these simulation methods themselves are described in  <cit> . here we focus on how simulations are configured, run, and analyzed.

whereas the consensus networks typically represent the connectivity in normal cells, many experiments are conducted on abnormal cells in which oncogenic mutations, gene knockous, and pharmacological inhibitors have altered the behavior of various signaling nodes in the network. in pathwayoracle users can model these cell- and experiment-specific conditions by specifying each signaling node as either high, low, or free. the high state models any condition under which a protein's activity-level is held high for the duration of the experiment. this may be due to external stimulation or a known mutation in the protein that makes it constitutively active, for example. similarly, a low state models any phenomenon that forces a protein to have a persistently suppressed activity-level. this may be due to mutations that render the protein inactive, gene knockouts, or pharmacological inhibitors that force the activity-level of the protein low. in general, most signaling nodes will be free, which means that their activity-level is unconstrained throughout the simulation. only those nodes designated as high or low will have their activity-level fixed for the duration of the simulation.

in order for a protein to be held high during the simulation, it is necessary to indicate the initial activity-level that the protein will be elevated to. this is done by specifying the number of tokens that the protein will receive. since a protein with a high state cannot be inhibited , the protein's activity level will never fall below this initial value. the initial value for a high protein is indicated by placing it in parentheses next to the protein's name, as shown in figure  <dig>  two other parameters that must be specified for a simulation are:

• the number of simulation runs to perform and

• the number of time blocks

the number of runs sets the number of independent simulations whose time block markings are averaged together to yield the overall simulation markings. in general, using more runs is a tradeoff between reliability of the results and simulation speed. in practice, the number of runs needed is dependent on the signaling network model and should be selected by observing the reproducability of the simulation results. an appropriate number of iterations will be large enough so that for a given experimental condition, the results are very similar across multiple simulations.

the time block, as discussed earlier, is a fundamental unit of time in the simulator. the appropriate number of time blocks for which to simulate will vary depending on the size of the signaling network and the scale of the network behavior of interest. generally it should be selected by running simulations for a variety of time block values and determining which yields the most biologically reasonable activity-level changes for a known protein. while this is a manual process in the current version of pathwayoracle, we are investigating automated methods for estimating the number of time blocks by training against experimental time series data.

in pathwayoracle, the setup window for the single simulation ) prompts the user for a single experimental condition. the setup window for the differential simulation ) prompts the user for two experimental conditions. both simulators produce a marking series. the tokenized simulation marking series corresponds to the activity-level time series predicted for the specified experimental condition. the differential simulation marking series corresponds to the change in activity-levels over time produced by switching from experimental condition  <dig> to experimental condition  <dig>  the marking series produced by a simulation can be accessed through the marking manager. choosing to inspect a marking series will present the user with a blank plot. by selecting signaling nodes, the plot is populated by the marking series values for individual nodes over time, as shown in figure  <dig> 

while this plot generation capability exists in many other dynamic simulation tools, the simplicity of the model used for simulation and the speed with which a simulation runs set pathwayoracle apart from other tools which require specification of the numerical values of kinetic parameters for each reaction in the network of interest . pathwayoracle, because of its novel approach, does not have such requirements. it is worth noting, however, where pathwayoracle provides approximations of signal flow, an ode generates the actual concentration changes using extremely detailed and accurate models of the underlying biochemistry. the simulators in pathwayoracle provide an attractive, time- and resource-saving alternative this more exhaustively parameterized techniques. in particular, pathwayoracle's features will benefit researchers interested in quickly assessing characteristics of signal flow in their network.

for some networks, biologists will have partial knowledge of kinetic parameters or of other biological details which the signaling petri net model does not, at present, consider. by integrating this knowledge into the simulator, it may be possible to improve the simulator's predictions. we identify this as a direction for future investigation. as the signaling petri net simulator is extended, these new capabilities will be incorporated in future releases of pathwayoracle.

signaling path analysis
the use of the simulators and plotting tools allows the user to observe trends in the activity-level of individual signaling nodes over time. since the activity-level of a node is determined by the activity-level of other nodes in the network, the activity-level time series of a node may be explained by changes in the activity-level history of nodes upstream of it. in order to investigate such indirect interactions, it is useful to enumerate all the paths leading from a specific protein to the protein of interest. pathwayoracle provides this capability. additionally, it provides various statistics on the set of paths linking two signaling nodes as well as a classification of the effect of each path as either coherent or incoherent . a coherent path is a directed series of interactions that leads from x to y such that an increase in the activity-level of x causes an increase in the activity of y and a decrease in the activity-level of x causes a decrease in the activity-level of y. an incoherent path is a directed series of interactions leading from x to y such that an increase in the activity-level of x causes a decrease in the activity-level of y and a decrease in the activity-level of x causes a increase in the activity-level of y. it is possible to classify a path p as either coherent or incoherent by counting the number of inhibitory edges along p. a path with an even number of inhibitory edges is coherent; a path with an odd number of inhibitory edges is incoherent  <cit> . this logic is assumed in pathwayoracle. all simple paths  connecting two specified signaling nodes are enumerated by an exhaustive depth-first search. these paths then are classified as either coherent or incoherent, and presented to the user for further inspection in a window similar to the one shown in figure  <dig>  when a path is selected in the results window, it is highlighted in the main window, allowing the user to evaluate it within the context of the complete network ).

experimental data analysis
a model of the connectivity of a signaling network makes it possible to identify components of the model that are inconsistent with experimental data or visa versa. pathwayoracle enables this kind of analysis by allowing users to load experimental concentration data and visualize it both as a heatmap ) or superimposed on the network view ). several other software tools provide similar capabilities . in pathwayoracle, experimental concentration data is loaded as a marking group in which a single marking corresponds to a condition for which concentrations were sampled. figure  <dig> shows a marking group with  <dig> conditions . the concentration of seven signaling proteins were sampled for each condition. this is the heatmap view for the marking group. when a specific marking in the group is selected, the colors for that marking are applied to the network view. this is particularly useful when assessing whether the experimental data is consistent with the interactions in the model. in figure  <dig>  the mda231-b-dmso <dig> marking has been superimposed on the network. we can see that rsk has a relatively low concentration despite the high concentration of mapk. given that, in the model, rsk is activated by mapk, this combination of activity-levels seems unlikely to occur. such an inconsistency suggests that there may be other signaling interactions contributing to the overall activity-level of rsk. such an insight can help a researcher quickly identify areas where the model or experimental results need to be re-evaluated or improved.

future directions
our goal is to develop pathwayoracle into an integrated and expansive suite of tools that allow the biologist to extract as much information as possible from models of signaling network connectivity and experimental data relating to those models. we consider future directions for pathwayoracle to fall into several categories: network construction, network augmentation, experimental and computational analysis integration, and architecture.

one of the benefits of working with connectivity models of signaling networks is the abundance of databases and other online resources that publish connectivity-level data. future versions of pathwayoracle will have support for querying such databases for connectivity components and, ultimately, for automated connectivity construction based on a set of signaling nodes specified by the user.

analysis of network connectivity and topology is increasingly relevant to biological research. we intend to expand pathwayoracle's structural analysis features to include the ability to search for and identify motifs in the signaling networks.

network connectivity can also be inferred from experimental data, which provides another direction for research and development. by using experimental results to identify inconsistencies between experimental results and the current network model, it may be possible for pathwayoracle to augment the network with new connectivity based on hints supplied by experimental results. at present only experimental concentration data is supported. however, as experiments produce more information beyond concentration profiles of signaling nodes, we plan to expand the experimental data that pathwayoracle can load, visualize, and use as part of network analyses.

experimental results can also provide computational analysis methods information that can improve their final predictions or decompositions. taking advantage of the additional, potentially obfuscated, information present in experimental results to improve the results returned by computational tools is a major goal for future versions of pathwayoracle.

a longer term direction for pathwayoracle is the integration of transcriptional and metabolic network analysis. in the biological systems of interest, the behavior of any one of these networks is dependent on the characteristics of the other two. as a result, developing a complete understanding of signaling, transcriptional regulation, or metabolism depends in part on integrating knowledge from the others. finally, an ongoing priority in the design of pathwayoracle is its role as an open platform for the development and deployment of new analytical capabilities by other groups. currently pathwayoracle employes a modular architecture that facilitates easy integration of new functionality. however, in future releases we plan to expose a plugin interface which will make it easier to developers and researchers to develop and deploy tools within pathwayoracle.

CONCLUSIONS
pathwayoracle is an integrated software environment in which biologists may conduct structural and dynamic analysis of signaling networks of interest. pathwayoracle is distinguished from other tools in the field of systems biology by its ability to predict the signal flow through a network using a simplified, connectivity-based model of the signaling network. simulations are fast and, based on a published study, predictors of signal propagation. this novel simulation capability, combined with support for structural analysis of connectivity between pairs of proteins and for analysis of certain kinds of experimental data make pathwayoracle a powerful asset in the experimentalist's endeavor to gain a more complete understanding of the cellular signaling network.

availability and requirements
project name: pathwayoracle

project home page: 

operating system: platform independent

programming language: python

other requirements: python  <dig>  or higher

license: gnu gpl

any restrictions to use by non-academics: none

authors' contributions
dr designed and developed the pathwayoracle application, participated in evaluating features for inclusion, and drafted the manuscript. ln participated in application design and feature selection. ptr contributed biological case studies and data for pathwayoracle feature design. all authors read and approved the final manuscript.

