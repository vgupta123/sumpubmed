BACKGROUND
burrow-wheeler transform
suffix trees, suffix arrays, and their variants have long been studied, over the past quarter of a century, in relation to diverse text-search problems. in particular, the burrows-wheeler transform   <cit> , aka fm index  <cit> , is one of the most memory-efficient variations with rich order-preserving  properties in various situations.

recently, the advent of so-called next-generation sequencers  has posed a challenging problem for developing ultrafast genome-mapping tools that can cope with the unprecedented flood of short-read data  <cit> . today, the problem has already been almost solved satisfactorily by popular short-read mapping tools, many of which owe their superior performance to the bwt of reference genomes  <cit> . in other words, the great usefulness of the bwt of reference genomes has been undoubtedly demonstrated.

in contrast, except for some pioneering works, the utility of the bwt of a large amount of short-read data remains largely unexplored. efficient methods for computing the bwt of a large amount of short-read data, typically larger than  <dig> gbp , were presented in  <cit> . simpson et al.  <cit>  proposed an efficient de novo assembler using the compressed bwt of reads. cox et al.  <cit>  proposed large-scale compression  of genomic sequence data. janin et al.  <cit>  proposed adaptive large-scale reference-free compression  of base-calling quality scores. in our previous studies, the authors showed that the bwt of reads enables ultrafast analysis of single nucleotide polymorphisms   <cit> .

the bwt of short-read data basically serves as a lossless dictionary of the read data, unlike the heuristic and lossy reads-to-genome mapping results conventionally obtained in the first step of sequence analysis. thus, it is naturally expected to lead to development of sensitive analysis methods, as will be demonstrated in this study.

genomic rearrangements and breakpoints
genomic rearrangements are variations of genomic sequence on a large scale, typically  <dig> kbp  or more, as opposed to single nucleotide variations  and small indels . inherited and acquired rearrangements are referred to as "structural variations" and "structural alterations", respectively. structural alterations are often found in many cancers and have a great influence on various disease states.

in cancer studies, matched tumor and normal samples are comparatively analyzed because somatic  structural alterations are only found in the cancer samples, while germline  structural variations are similarly found in both samples. however, tumor samples are usually heterogeneous due to instability of genomic dna, and partially contain normal cells. therefore, their analysis requires high sensitivity. furthermore, recent studies have revealed that some cancer genomes harbor very complicated rearrangements resulting from discontinuous steps of carcinogenesis processes known as chromothripsis  <cit>  and chromoplexy  <cit> .

genomic rearrangements basically occur as follows: genomic dna sequences are split into fragments at certain breakpoints, and the fragments are re-joined across the breakpoints in different orders and in different orientations from those before the splitting. these events occur on a large scale, typically larger than  <dig> kbp, namely, much longer than  <dig> bp, a typical length of short reads.

analysis of breakpoints from short-read data
breakpoints associated with large-scale genomic rearrangements can be indirectly detected from paired-end short-read whole-genome sequencing  data. paired-end reads are obtained by sequencing both ends of a genomic dna fragment, customarily called an insert. the inserts are typically obtained by sonication of a dna sample, and they have approximately the same length, which is usually somewhat larger than twice the read length, but much smaller than the scale of the genomic rearrangement.

when an insert does not contain any breakpoints, the paired-end reads satisfy the paired-end mapping condition, namely, they are mapped onto the reference genome in an inward orientation and apart from each other by a distance equal to the insert length. such a pair of reads is referred to as an accordant pair. on the other hand, when an insert contains a breakpoint at which distant parts of the genome are concatenated, the paired-end reads are mapped to the corresponding parts, and the paired-end mapping condition is violated. such a pair of reads is referred to as a discordant pair.

discordant pairs are easily found from short-read data by using standard paired-end mapping tools such as bwa  <cit> . subsequently, the existence of breakpoints and their approximate positions can be predicted from the discordant pairs  <cit> . however, their precise positions, at single-base-level resolution, cannot be determined.

split reads are reads that contains breakpoints. they are so called because they can be split into separate parts that are mapped onto different parts of the genome. the precise positions of breakpoints are immediately given by the positions of the splits. it is possible to find split reads by using standard mapping tools -- for example, collecting reads that can be mapped onto the genome only partially with significant unmapped overhangs, and mapping the overhangs onto the genome. however, the overhangs are often too short to be mapped unambiguously. moreover, the number of split reads is much smaller than the number of discordant pairs because these numbers are roughly proportional to read length and insert length. therefore, it is difficult to sensitively detect breakpoints on the basis of split reads.

recent tools for analyzing genomic rearrangement can sensitively detect breakpoints and precisely determine the positions on the basis of integrated analysis of discordant pairs, split reads, and others  <cit> . in this study, a method for sensitively detecting break-points and precisely determining their positions, by using the discordant pairs and the dictionary of reads but without using the split reads, is proposed.

methods
conceptual method for confirming known breakpoints
confirming the existence of known breakpoints by using a dictionary of reads is conceptually simple and straightforward on the assumption that the exact breakpoint positions are precisely known. namely, it is only necessary to confirm the existence of read fragments going through the breakpoints. this confirmation can be done immediately by using a query given by a concatenation of genomic subsequences that are to be concatenated by rearrangement.

more specifically, let g = ... a|b ... c|d ... be a genomic sequence with a pair of known breakpoints , where a, b, c and d denote subsequences adjacent to the breakpoints, and "..."s denote the remaining sequences. for simplicity, assume that there are no other breakpoints. the known breakpoints can relate to four different rearrangements corresponding to four different concatenations, namely, ad, ac', cb, and d'b, or their reverse complements, d'a', ca', b'c', and b'd, where a' denotes the reverse complement of a and so on. existence of these concatenations can be checked immediately by using exact matching with backward search  <cit>  . the chosen length of the adjacent subsequence should be large enough so as to avoid ambiguous false detection.

in practice, however, most of known breakpoints are not given in terms of exact base positions but in terms of approximate positions relative to nearby genes or exons. in fact, even if similar disease-related fused genes are found in patients with the same cancer subtype, the precise breakpoint positions differ from patient to patient  <cit> . it is therefore necessary to make a number of queries according to a varying combination of possible precise breakpoint positions. specifically, ad differs according to the chosen ends of a and chosen heads of d. moreover, as is often the case, if an unknown short sequence is intervened between the breakpoints in the rearrangement, for example, asd instead of ad for some unknown short sequence s, it is necessary to make a number of queries, asd, according to varieties of the intervening s. thus, it is not practical to make a large number of queries directly corresponding to all possible cases.

overview of the proposed method in practical use
to exploit the dictionary of reads in practice, it is important to make a limited number of effective queries that are likely to extract useful information from the dictionary. in particular, effective queries should be chosen from genomic regions where breakpoints are likely to exist. additionally, breakpoint-containing queries should be avoided because they have a combinatorially increasing and unaffordable number of variations. accordingly, the proposed method is composed of the following three steps.

 <dig> predict breakpoint regions that are likely to contain breakpoints and be joined by rearrangement.

 <dig> scan the breakpoint regions with a sliding window from right to left, collect all the read fragments exactly matching the window, and subsequently collect all possible leftward extensions of the fragments.

 <dig> identify breakpoints as branching points among the extensions.

the dictionary of reads is effectively used in the second step. the most time-consuming steps are the last two steps; therefore, it is important to reduce the size of the breakpoint regions as much as possible. the first step further consists of the following three sub-steps:

1a collect discordant pairs by using a standard paired-end mapping tool.

1b get rough breakpoint regions by means of clustering the discordant pairs.

1c narrow down the breakpoint region in each cluster on the basis of a detailed analysis of the distribution of discordant pairs.

the first two sub-steps are basically similar to known methods in previous studies  <cit> , while the third sub-step is first introduced in this study. these sub-steps and the following main steps are described in the following subsections.

collection of discordant pairs
the paired-end short reads are mapped onto a reference genome by using a standard paired-end mapping tool, bwa  <cit> . discordant pairs are extracted from the results in the sam  format  <cit>  by reference to bitwise flags indicating whether paired-end mappings are accordant or discordant. only unambiguous mapping results with phred-scaled mapping-quality score not less than  <dig> are employed.

two-dimensional clustering of discordant pairs
a global coordinate system is defined on the whole reference genome sequence. namely, dna sequences from all chromosomes are concatenated into a single dna sequence, g, with a punctuation symbol "$" in between them; and each base position in each chromosome is specified by a global coordinate indicating the position in the concatenated sequence. thus, all chromosomal positions are mutually comparable according to the global coordinates.

each discordant pair of reads is represented by a point, , in a two-dimensional region, g×g, where x and y are the global coordinates of the mapped positions of the first bases of the reads, and, for disambiguation, x < y is assumed because x and y can be swapped otherwise. thus, discordant pairs are identified with the corresponding points in g × g.

the discordant pairs are scattered very sparsely as a whole in g × g because it is vast, and those associated with the same breakpoint are clustered together within a distance of the insert length. therefore, it is easy and straightforward to extract such clusters.

as an example of extraction procedure, sort the points  according to the first coordinates, and classify them into groups so that the differences between the first coordinates in the same  groups are less  than the insert length; subsequently, sort the points in each group according to the second coordinates, and further classify them into subgroups so that the differences between the second coordinates in the same  subgroups are less  than the insert length; repeat such classification several times, and obtain the desired clusters.

as for matched tumor and normal samples, clusters of discordant pairs associated with somatic breakpoints, simply referred to as somatic clusters here-after, exclusively consist of those from the tumor sample, while clusters of discordant pairs associated with germline breakpoints, simply referred to as germline clusters, are mixtures of those from both tumor and normal samples. therefore, clusters are judged to be somatic if the rate of discordant pairs from the tumor is high, e.g., 90% or more, and judged to be germline otherwise.

prediction of breakpoint regions
breakpoints are also represented by points in g × g in a natural way. namely, when x <dig> and y <dig> are breakpoints originally apart from each other on g and are joined together by rearrangement, the pair of breakpoints is represented by point , where, for disambiguation, x <dig> < y <dig> is again assumed. thus, breakpoints are identified with the corresponding points in g × g.

when discordant pairs associated with the same breakpoint are clustered together, the breakpoint is within the insert length in g × g from the cluster. therefore, the cluster of discordant pairs roughly indicates the breakpoint region. furthermore, the region can be reduced drastically on the basis of detailed analysis of the relationship between the distribution of breakpoints and that of discordant pairs.

forward relationship -- from breakpoints to discordant pairs
assume that discordant pairs , , ...,  are associated with breakpoint . as explained earlier, in disregard of possible short intervening sequences, there are four essentially different rearrangements associated with breakpoint . they correspond to four different conditions on the ordering of coordinates: xi < x <dig> < y <dig> < yi, x <dig> < xi < y <dig> < yi, xi < x <dig> < yi < y <dig>  and x <dig> < xi < yi < y <dig> for  <dig> ≤ i ≤ p. here, only the first case is considered, since other cases can be treated similarly. then, the discordant pairs are distributed in a belt in g×g extended in the diagonal direction and located in the anti-diagonal direction from the breakpoint .

in particular, when the inserts are obtained by sonication of a dna sample, the distribution of the insert length is well-approximated by a gaussian distribution, n , where l and σ denote the mean and standard deviation. then, discordant pair  associated with given breakpoint  is distributed such that

 <dig> ℓ =  +  is distributed according to n .

 <dig> x <dig> - x is uniformly distributed in interval  on the condition that  +  = ℓ.

the first condition refers to the distribution of insert length, and the second condition reflects an ideal condition that there is no sonication bias around the breakpoint.

distribution of breakpoints is represented by vector x =  indexed by i, j ∈ g with i < j, where xij =  <dig> if a breakpoint exists at  ∈ g × g, and xij =  <dig> otherwise. then, distribution of the discordant pairs associated with these breakpoints is given by y = ax, where a is a stochastic matrix determined by the distribution of the insert length. more precisely, given a discordant pair, the probability that it is found at  ∈ g × g is given by yij/n, a component of y =  divided by the number of breakpoints, n.

a represents a linear transformation of a distribution of breakpoints into a distribution of discordant pairs. in particular, when the insert length is distributed according to a gaussian distribution, it is given by a composition of three basic linear transformations:

  a=gσultl 

where gσ represents a two-dimensional gaussian diffusion with standard deviation σ, ul represents a one-dimensional uniform diffusion in finite length ±l/ <dig> in the diagonal direction, and tl represents a parallel translation in the upper-left anti-diagonal direction by distance l/ <dig>  these basic linear transformations are mutually commutative. in practice, these linear transformations are discretized so that they work on grid points in g × g.


backward relationship -- from discordant pairs to breakpoints

an empirical distribution of discordant pairs found by analysis of short-read data is represented by vector y =  indexed by i, j ∈ g with i < j, where yij is the number of discordant pairs found at  ∈ g × g. note that it is not normalized as a probability distribution. since only a limited number of discordant pairs can be obtained from a finite amount of short-read data, the empirical distribution varies from sequencing to sequencing even for the same sample, and approximates to the unknown true distribution.

in principle, the distribution of breakpoints can be obtained by solving the following equation:

  ax=cy 

where c is a normalizing constant. however, the equation can be solved more easily by a kind of conjugate gradient method. namely, by multiplying both sides of the equation by a∗, the conjugate linear transformation  of a, from the left,

  a*ax=ca*y 

is obtained. the obtained equation is conventionally referred to as normal equation. it is noteworthy that the composite transformation on the leftside is positive semi-definite and self-adjoint: x⋅a*ax=||ax||2≥ <dig> for any x and ∗ = a∗a. intuitively, a∗a is a "blurring" transformation.

in particular, when the insert length is distributed according to a gaussian distribution, the composite transformation is given by

  a*a=*gσultl=g2σul <dig>  

this is a two-dimensional diffusion symmetric both in the diagonal and anti-diagonal directions.

prediction of breakpoint regions by using the conjugate
the breakpoint regions, where xij is significantly large, are blurred by a∗a and expanded to wider regions in which zij, where zij is a component of z = a∗y, is significantly large. therefore, a prediction of breakpoint regions is given by regions where zij is significantly large. since the blurrings occur locally, z = a∗y in each cluster can be computed independently.

incidentally, a∗y can be interpreted intuitively as follows. if there is only a single discordant pair associated with an unknown breakpoint, a∗y indicates a region where the breakpoint is likely to occur ; more precisely, zij, a component of z = a∗y, is the likelihood that the breakpoint occurs at position  ∈ g × g. thus, the breakpoint is most likely to occur at the maximum component of a∗y. if there are multiple discordant pairs associated with the same unknown breakpoint, the breakpoint is most likely to occur in the overlap among the regions indicated by the discordant pairs .

collecting relevant read fragments and their extensions
to find breakpoints in the breakpoint regions, relevant read fragments that partially match with the regions are collected. if the matching length is too small, irrelevant read fragments are also collected with the desired ones. therefore, the matching length is chosen to be somewhat  larger than mlu . mlu is defined on the reference genome as the minimum length of the subsequence starting from a given position and extending in a given direction such that the subsequence appears only once in both strands of the genome  <cit> . mlus over the whole reference genome are efficiently computed, and the results are compactly represented  <cit> .

the reference genome sequence around one of the projected regions, say, region a, is scanned from right to left, and a query is taken as a genomic subsequence of length mlu+ + α with the left end at x, where mlu+  denotes mlu at x in the positive  direction, and α is a small positive constant ). all of the read fragments exactly matching the query are collected from the dictionary of reads by exact matching with backward search  <cit> .

similarly, all of the possible leftward extensions of the collected read fragments are obtained by exact matching with backward search  ). the extensions are performed until the length of extension reaches a fixed value, e.g.,  <dig> 

generally, the extensions are diverse as a result of snps, breakpoints, sequencing errors, and other events. in particular, when some of the extensions contain breakpoints joining regions a and b, they can be detected by aligning them with the reference genome sequences in each of regions a and b ).

detection of breakpoints from the extensions
the extensions can be aligned efficiently with the regions a and b by a very fast dynamic programming algorithm based on bit-level parallelism  <cit> . since the minimum edit distance attained at the optimal local alignment can be computed much faster than the optimal local alignment, which requires backtracking computations, it is advantageous to detect breakpoints only from the minimum edit distances. figure  <dig> intuitively illustrates this detection.

while the left end of the query, x, scans from right to left a neighborhood of region a, the minimum edit distances between extensions  and region a  are computed. in the simplest case where there is only a unique extension with a single breakpoint, they are given by the length of unaligned part of the extension in the optimal alignment ). specifically, when at most d % of the extension can be aligned somewhere in region a , they are given by e, where e is the extension length. they are functions of x ), more precisely, multivalued functions of x because of the multiplicity of extensions. they are thus hereafter referred to as a multivalued edit-distance function concerning region a and that concerning region b.

when x, the left end of the query in region a, passes though a breakpoint, the edit-distance function changes drastically as shown in figure  <dig>  on the other hand, when breakpoints do not exist, such a drastic change never happens -- the multivalued editdistance function concerning region a remains zero, and that concerning region b remains large. thus, breakpoints are detected from the multivalued editdistance function, and their precise positions are also obtained. to provide more confidence in the detection, similar analysis is performed once again with regions a and b swapped.

as for the analysis of matched tumor and normal samples, breakpoints are somatic if such a drastic change is found only in the tumor sample but not in the normal sample.

computation of the bwt of short-read data
the bwt of a large amount of short-read data, typically larger than  <dig> gbp, is efficiently calculated by the bwt/wt algorithm  <cit> , which basically follows the bcrext algorithm  <cit>  with dna sequences represented by wavelet trees  <cit> .

RESULTS
examples of analysis of real biological data
the proposed method was experimentally implemented for proof of concept. to demonstrate how the method actually works for real biological data, several examples of analysis are presented here. the data are publicly available wgs data of matched tumor and normal samples, srr <dig> and srr <dig> in the ncbi sequence read archive . the samples were taken from excised tumor tissue and blood from the same patient with gastric cancer  <cit> .

two-dimensional clusters of discordant pairs
clusters  to  consist of discordant pairs only from the tumor tissue, namely, not from the normal tissue, and they are therefore somatic. clusters  and  are associated with a single breakpoint; the discordant pairs are distributed in a belt as described in the previous section. cluster  is dense, seemingly resulting from copy-number amplification, and cluster  is sparse, indicating low concentration in the heterogeneous tumor sample. cluster  is composite, associated with two nearby breakpoints; the discordant pairs are distributed along two belts corresponding to the breakpoints. cluster  is not associated with any breakpoints. discordant pairs from the tumor and normal tissues are mixed; and they are distributed not in belts in the diagonal or anti-diagonal direction but in indefinite shapes. it seems to stem from two reasons:  variations and resulting accidental hits to similar sequences far apart, and  fluctuations of the sonicated positions and the insert lengths.

multivalued edit-distance function around a breakpoint
performance of breakpoint detection
to examine the performance of breakpoint detection, simulation data with known artificial rearrangements were employed. they were generated as follows.

an artificial normal genome sequence was obtained by introducing random snps at  <dig> % rate into the human reference genome, hg <dig>  an artificial cancer genome sequence was obtained from the artificial normal genome sequence by randomly introducing  <dig> rearrangements of each of six types: insertion, deletion, inversion, tandem duplication, and intra-chromosomal and inter-chromosomal translocations. in total,  <dig> breakpoints were introduced by these rearrangements. for each type of rearrangement, the lengths of affected subsequences were chosen uniformly ranging from  <dig> bp to  <dig> kbp. artificial paired-end short-read wgs data sets were randomly generated from the artificial normal and cancer genome sequences approximately at 40-times  coverage; each data set amounted to about  <dig> gbp . the read lengths were set to  <dig> bp, and the insert lengths were chosen so that they were distributed according to the gaussian distribution with mean  <dig> bp and standard deviation  <dig> bp. these parameters for generating wgs data sets were chosen according to real biological data  <cit> . the wgs data sets of artificial heterogeneous cancer samples at different cancer purities and of the same size were generated by mixing the artificial wgs data sets from the artificial normal and cancer genome sequences.

simulation data with known artificial rearrangements are employed for evaluation of the proposed method. the third and fourth columns indicate the number of predicted breakpoint regions and the number of detected breakpoints, respectively. the last column is the ratio of the fourth column to all  breakpoints.

the sensitivity of breakpoint detection is somewhat different for different types of rearrangement . the sensitivity is lowest  in the case of tandem duplications. the same copies of a sequence generated by a tandem duplication tend to mislead the mapping tools, resulting in loss of discordant pairs.

the second column is the number of breakpoints associated with each type of rearrangement. the third column is the number of detected breakpoints corresponding to each type. the last column is the ratio of the third column to the second column. intra-chrom. trans.: intra-chromosomal translocations, inter-chrom. trans.: inter-chromosomal translocations, tandem dup.: tandem duplications.

targeted types of rearrangement and features of simulated wgs data  differ from tool to tool. d: deletions, t: tandem duplications, misc: insertions, deletions, inversions, tandem duplications, and intra-chromosomal and inter-chromosomal translocations, fdr: false-detection rate.

application to real biological data
the proposed method was applied to real biological data, and the results were compared with published known results  <cit> . the real biological data were taken from publicly available wgs data of patients with hbv -associated hcc  in a study erp <dig> in the ncbi sra. the matched tumor and normal samples were taken from excised tumor liver tissues and surrounding normal liver tissues. these normal tissues did not seem to be truly normal, unlike blood samples, because they were likely to be exposed to hbv infection for a long time with potential damage to the genomic dna. two kinds of libraries with long and short insert lengths  were used, and the read lengths were  <dig> bp. total amount of data in each sample ranged approximately from  <dig> to  <dig> gbp.

tables  <dig> and  show the numbers of somatic breakpoints in different patients detected by the proposed method and those reported by banet et al.  <cit>  using crest  <cit> . the intra-chromosomal and inter-chromosomal somatic breakpoints are separately counted in tables  and , respectively. detailed lists of detected somatic breakpoints are given in additional file  <dig> 

 <cit> .

the second and third columns are the number of predicted somatic breakpoint regions and the number of detected somatic breakpoints, respectively, for each patient. the fourth column is the number somatic breakpoints reported by  <cit> . the fifth column is the number of breakpoints that are counted in the third column and in the forth column . the last column is the ratio of the fifth column to the fourth column. the intra-chromosomal and inter-chromosomal somatic breakpoints are separately counted in tables  and , respectively. detailed lists of detected somatic breakpoints are given in additional file  <dig>  as for patient id  <dig>  evidential materials for detected somatic intra-chromosomal breakpoints are given in additional file  <dig> 

as for the intra-chromosomal events, the agreement rate between the breakpoints detected by the proposed method and those reported by banet et al. is generally much smaller than the sensitivity of the proposed method evaluated above. accordingly, the case  with the lowest agreement rate was further investigated.

among nine somatic breakpoints reported by banet et al., only two were detected by the proposed method; five were actually found in both the tumor and normal samples, and they were therefore not tumor-specific; one was a rearrangement in a small distance  and was actually missed by the proposed method; and one remained unclear, and no clues were found. the evidential materials are given in additional file  <dig>  likewise, in other cases, many of the somatic breakpoints reported by banet et al. but not detected by the proposed method were in fact not tumor-specific.

on the other hand, somatic breakpoints not reported by banet et al. were detected by the proposed method. they are roughly  <dig>  times more abundant than ones in agreement. if the low false-detection rate evaluated above is applicable in these cases, the extra breakpoints are new findings not reported previously. as for the same patient id  <dig> as above, evidential materials for extra somatic breakpoints are given in additional file  <dig> 

the top four patients with the largest numbers of detected intra-chromosomal somatic breakpoints, namely, those with id  <dig>   <dig>   <dig>  and  <dig>  are reported to have chromothripsis  <cit> , which is known to induce hundreds of very complicated intra-chromosomal genomic rearrangements  <cit> .

as for the inter-chromosomal events, the agreement rate between the breakpoints detected by the proposed method and those reported by banet et al. is even lower. the difference in the agreement rate between the intra-chromosomal and inter-chromosomal events are far larger than the difference between the evaluated sensitivity of the intra-chromosomal and interchromosomal translocations . the somatic breakpoints detected by the proposed method but not reported by banet et al. are roughly three times as many as the ones in agreement. they are likely to be new findings not reported previously, if the evaluated low false-detection rate of the proposed method is also applicable in these cases.

although the inter-chromosomal events were generally much fewer than the intra-chromosomal events, tens of inter-chromosomal events were detected in some patients. these events correspond to a feature of chromoplexy that are known to induce tens of very complicated inter-chromosomal rearrangements  <cit> .

computational time and memory usage
a dual-cpu pc server  was used in the above computational experiments, prior to which the following data were prepared: burrows-wheeler transforms of wgs data  <cit>  and discordant pairs extracted from bam files  obtained by using bwa  <cit>  and samtools  <cit> .

the method for predicting breakpoint regions and that for detecting breakpoints therein were implemented in perl and c++, respectively. their computational times were roughly proportional to the number of discordant pairs and the number of predicted regions, respectively. the maximum memory usage was dominated by the size of the burrows-wheeler transform data and was roughly proportional to the number of base pairs in the wgs data.

as for the case of patient id  <dig>  with about  <dig> million  discordant pairs, the time for predicting breakpoint regions was  <dig> seconds, and the time for detecting breakpoints was  <dig> seconds ; the maximum memory usage for the wgs data of  <dig> gbp  was  <dig> gb.

CONCLUSIONS
the bwt of short-read data, serving as a lossless dictionary of reads, enables sensitive analysis of genomic rearrangements in heterogeneous cancer-genome samples when used in conjunction with breakpoint-region predictions. breakpoint regions are predicted by means of a conjugate transformation of an empirical distribution of discordant pairs. the breakpoint regions are efficiently examined by using the bwt of reads and a fast dynamic programming method, and the break-points are detected by using the multivalued edit-distance functions, and their precise positions are determined. the proposed method was demonstrated to actually work on real biological data by using publicly available wgs data of cancer patients. it achieved comparable sensitivity to existing tools and much lower false-detection rate when applied to simulation data with known artificial rearrangements. moreover when applied to publicly available wgs data of cancer patients, it detected many somatic breakpoints that were not reported previously in the literature.

competing interests
the authors declare that they have no competing interests.

authors' contributions
all authors designed the study and examined the results. kk carried out the computational experiments and drafted the manuscript. ak supervised the study and helped draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
detailed list of breakpoint detection for real biological wgs data. the data are publicly available wgs data of patients with hbv -associated hcc  in a study erp <dig> in the ncbi sra  <cit> .

click here for file

 additional file 2
evidential materials  in the analysis of patient id  <dig>  the disagreement between the results by the proposed method and those reported by banet et al.  <cit>  is the greatest in case of patient id  <dig>  evidential material is given for each event reported by banet et al.

click here for file

 additional file 3
evidential materials  in the analysis of patient id  <dig>  for the same patient, evidential materials for detected somatic intra-chromosomal breakpoints are given.

click here for file

 declarations
publication charges for this article have been funded by hitachi, ltd.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2015: joint 26th genome informatics workshop and 14th international conference on bioinformatics: bioinformatics. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/16/s <dig> 
