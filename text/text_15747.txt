BACKGROUND
sequence alignment has become an indispensable tool in modern molecular biology research, as it provides an effective and intuitive way of comparing and analyzing biological sequences. given a set of biological sequences, the primary objective of sequence alignment is to predict the best overall mapping between the sequences, which accurately aligns the homologous regions that are embedded in them. this provides an effective means for detecting conserved sequence regions with potentially important functional roles. the concept of sequence alignment has had diverse applications in biomedical research , which include homology search, function and structure prediction of biomolecules, phylogenetic analysis, and detecting sequence motifs, among others.

typically, sequence alignment is carried out by formulating and solving an optimization problem - either implicitly or explicitly - where the goal is to maximize an objective function that measures the overall quality of the sequence alignment. for example, one simple way of aligning a sequence pair would be to score each potential alignment by assigning a "substitution score" to every aligned symbol pair and penalty scores for gaps and then find the optimal alignment that maximizes the overall score through dynamic programming  <cit> . in the past, various ad hoc scoring schemes have been proposed to obtain intuitive and biologically meaningful sequence alignment results. as an alternative to heuristic scoring schemes, there have been also research efforts to develop probabilistic models for sequence alignment that can be used to evaluate and compare potential alignments and to estimate the symbol-to-symbol alignment probabilities.

examples of such probabilistic schemes include the pair hidden markov models   <cit>  and the partition function based scheme  <cit> . given two biological sequences, these methods can be used to estimate the posterior symbol alignment probability for each symbol pair that may be aligned in the final sequence alignment. based on the estimated probabilities, we can predict the optimal sequence alignment that contains the largest expected number of correctly aligned symbol pairs, rather than an alignment that maximizes an ad hoc score. this is typically referred to as the maximum expected accuracy  alignment , and as before, it can be also found through dynamic programming.

among a number of probabilistic sequence alignment models, pair-hmms have been especially popular, and they have been widely adopted by many multiple sequence alignment  algorithms, including probcons  <cit>  and picxaa  <cit> . despite the simplicity of the model, pair-hmms have been shown to be very effective in modeling sequence homology, as reflected in the well-rounded overall performance of various msa algorithms that utilize the symbol alignment probabilities estimated by pair-hmms. furthermore, these probabilities can be estimated in a relatively efficient manner, making the pair-hmms an attractive choice for various sequence alignment problems. however, pair-hmms also have a number of shortcomings, which may negatively affect their alignment performance or make them impractical for certain alignment tasks.

in this paper, we propose a novel scheme for comparing and aligning biological sequences that can effectively address the limitations of pair-hmms. the proposed scheme computes probabilistic symbol alignment confidence scores based on a simple and computationally efficient message-passing approach. as we will demonstrate in this paper, this message-passing scheme has a number of important advantages over the traditional pair-hmms and it clearly outperforms pair-hmms in terms of both speed and accuracy on protein alignment benchmark datasets.

methods
a brief overview of pair hidden markov models
the pair-hmm  <cit>  is a generative sequence model that can simultaneously generate a pair of aligned symbol sequences. this is different from the traditional hmms, which generate only a single symbol sequence at a time  <cit> . figure  <dig> shows two examples of pair-hmms that are widely used in biological sequence analysis. as shown in figure  <dig>  a typical pair-hmm consists of three hidden states ix, iy, and m, which are used to model insertions in sequence x, insertions in sequence y, and matched  symbols in both sequences, respectively. the pair-hmm generates an aligned sequence pair  by making transitions between the hidden states according to the specified state transition probabilities. at state ix, the model emits a symbol only to sequence x, while at iy, a symbol is emitted only to sequence y. on the other hand, at state m, the model emits a pair of aligned symbols, where one symbol is added to x and the other symbol is added to y. figure  <dig> gives an example of a sequence pair  that is generated by a pair-hmm. in this example, the underlying hidden state sequence that gives rise to the two sequences x = aaccg and y = ccgtt is ixixmmmiyiy. this indicates that the first two symbols  in x and the last two symbols in y  are "insertions," which do not have any matching counterpart in the other sequence, while the last three symbols in x and the first three symbols in y  are jointly generated by the pair-hmm, hence closely match each other. as we can see from this example, we can unambiguously identify the alignment of a given sequence pair , once the underlying hidden state sequence yielding the sequence pair is known. of course, the hidden state sequence is generally not known, but there exist efficient algorithms that can be used for its prediction. for example, we can use the viterbi algorithm  <cit>  to predict the optimal hidden state sequence that maximizes the observation probability of the sequence pair . alternatively, we can also predict the state sequence that maximizes the expected number of correct states, by first estimating the alignment probabilities between the symbols in x and y through the forward and backward procedures  <cit>  and then applying the needleman-wunsch algorithm  <cit> . this will lead to the mea alignment between the two sequences x and y.figure  <dig> 
pair hidden markov models.  the state transition diagram of a widely used pair-hmm.  an alternative pair-hmm implementation that does not allow transitions between the two insertion states i
x and i
y.  an example of a sequence pair  that is generated by a pair-hmm.



limitations of pair-hmms
although the hidden state sequence of a pair-hmm unambiguously points to a specific sequence alignment, this is not necessarily true the other way around. in fact, several different state sequences can lead to the same sequence alignment, hence we may not always be able to unambiguously determine the underlying state sequence for a given pairwise sequence alignment. for example, let us consider two sequences x = aaacgg and y = aaatta. suppose the "true" alignment aligns only the first three symbols  of x and y, hence the last three symbols in the respective sequences are regarded as insertions that do not have any matching counterpart in the other sequence. this is illustrated below, where the solid lines correspond to the aligned symbols:  <dig>  

for the pair-hmm shown in figure  <dig>  any hidden state sequence  such that s <dig> = s <dig> = s <dig> = m and  is a permutation of ix ix ix iy iy iy would lead to the sequence alignment shown in . when using this pair-hmm for predicting the optimal alignment of a sequence pair with the largest probability, this ambiguity may lead to performance degradation as these potential state sequences compete against each other. for this reason, it is generally more desirable to estimate the symbol alignment probabilities via the pair-hmm by considering all potential alignments and state sequences and use the estimated probabilities to find the mea alignment that is expected to have the maximum number of correctly aligned symbols . however, the aforementioned ambiguity also negatively affects the quality of the estimated symbol alignment probabilities, which is especially noticeable for sequence pairs with low percentage identity. in some cases, the alternative pair-hmm shown in figure  <dig> is used to avoid such ambiguity. this alternative pair-hmm blocks transitions between the insertion states ix and iy, thereby prohibiting the model from inserting unaligned symbols to both sequences. for example, the alignment shown in  would not be allowed based on this alternative pair-hmm. however, due to this restriction, the pair-hmm in figure  <dig> has a relatively stronger tendency to align unrelated sequence regions by treating them as mutations. this may again negatively affect the quality of the symbol alignment probabilities estimated based on the pair-hmm.

another potential drawback of pair-hmms is that the associated algorithms  can become numerically unstable for long sequences. application of pair-hmms to biological sequence analysis involves computing extremely small probabilities, which decrease exponentially with the sequence length. for example, based on the pair-hmm that was used in  <cit> , the observation probability  of a protein pair is typically in the order of 10- <dig> for proteins of length  <dig>  10- <dig> for proteins of length  <dig>  and 10- <dig> for proteins of length  <dig>  as a result, pair-hmm algorithms are prone to underflow errors, unless they are carefully implemented to keep them numerically robust. so far, a number of schemes have been proposed to address this issue, such as using log transformations of the probabilities or normalizing the probabilities to keep them within a reasonable numerical range, and have been shown to work well for relatively long sequences  <cit> . however, log transformations can make the forward and backward algorithms considerably slower, and the normalization approach can still lead to underflow errors as the sequences get longer.

one further disadvantage of pair-hmms is that the algorithms that are used with the model cannot be easily parallelized. although the viterbi, forward, and backward algorithms for pair-hmms are relatively efficient, they are still computationally expensive to be used with very long sequences. moreover, as the algorithms are not amenable to massive parallelization, this makes the pair-hmms not suitable for large-scale sequence analysis tasks, such as the whole genome alignment, despite their superior performance compared to other heuristic methods.

a message-passing scheme for estimating symbol alignment confidence scores
here, we propose a novel method for aligning biological sequences that can effectively address the aforementioned shortcomings of pair-hmms. the proposed method is based on a message-passing scheme, where messages are iteratively exchanged between neighboring symbol pairs to estimate the level of confidence for potential pairwise symbol alignments. the main underlying motivation is to develop an "analytical" method that can directly estimate the symbol alignment probabilities, without specifically modeling symbol insertions and deletions. this stands in contrast to the pair-hmm approach, which is essentially based on a "generative" sequence model that tries to explicitly model symbol insertions/deletions, in addition to symbol alignments. as discussed before, modeling symbol insertions in pair-hmms can lead to subtle issues with potentially negative effects, and considering that our ultimate goal lies in finding an accurate sequence alignment through effective estimation of the symbol alignment probabilities, a method that can directly estimate these probabilities without explicitly modeling insertions/deletions would be desirable.

suppose x = x1x <dig> ⋯ xl and y = y1y <dig> ⋯ ym are the two sequences to be aligned. we define cxy  as the symbol alignment confidence score between xi  and yj . the score cxy  provides a quantitative measure of confidence as to whether xi and yj should be aligned to each other or not, and we assume cxy  ∝ p, where p  is the posterior symbol alignment probability between xi and yj given the sequences x and y. we estimate the alignment confidence score by iteratively passing messages between neighboring symbol pairs, where each symbol pair  corresponds to a potential symbol alignment in the true  sequence alignment between x and y. for example, during the estimation process, the symbol pair  will exchange messages with its two neighbors  and , and similarly, the pair  will exchange messages with  and . the message-passing process is illustrated in figure  <dig>  where the solid lines indicate the messages that are used to update the alignment confidence score cxy of the symbol pair . the dashed lines correspond to messages that are used to update the confidence scores of other symbol pairs.figure  <dig> 
illustration of the proposed message-passing scheme. at iteration n, the alignment confidence score c
xy of the symbol pair  is updated based on the messages received from its neighbors  and  and the joint occurrence probability p of the symbols x
i and y
j. solid lines indicate the messages that are used to update c
xy, while the dashed lines correspond to messages that are used to update the alignment confidence scores of other symbol pairs.



the pseudocode of the proposed message-passing algorithm is as follows:

   step- <dig> initializecxy .

   step- <dig> update the alignment confidence score:     

   step- <dig> normalizecxy.

   step- <dig> ifcxy has converged, then terminate the algorithm.

                  otherwise, go to step- <dig> 

in step- <dig>  we first initialize the alignment confidence score cxy, where we can simply use random initialization. if a preliminary sequence alignment of x and y is available , we can also initialize the score based on this alignment such that cxy =  <dig> if xi and yj are aligned, and cxy =  <dig> otherwise. next, in step- <dig>  the alignment confidence score cxy of the symbol pair  is updated based on the scores of its two neighbors  and . note that the score is set to cxy =  <dig> if i ∉ { <dig>  ⋯ , l} or j ∉ { <dig>  ⋯ , m}. p  is the joint occurrence probability of the symbol pair , which is essentially equivalent to the joint emission probability of an aligned symbol pair  at the match state m of a pair-hmm. it should be noted that this probability p  is not location-dependent and is simply determined by the symbols xi and yj. the weight parameter λ ∈  <cit>  is used to balance the contribution from the neighbors and that from the joint probability of  in estimating the alignment confidence score. a large λ gives more weight to the "messages" received from the neighbors in estimating the scores, which tends to penalize gaps more heavily, and it generally leads to longer aligned regions with fewer gaps. on the contrary, a small λ gives more weight to the joint symbol occurrence probability p  while giving less weight to the messages received from the neighbors, which tends to be more lenient to gaps. once the symbol alignment confidence score cxy is updated for all i =  <dig>  ⋯ , l and j =  <dig>  ⋯ , m, we normalize the scores to keep them within a proper numerical range, as shown in step- <dig>  for example, a simple way would be to divide the score matrix c =  by its matrix norm to normalize the confidence scores. after normalization, the updated scores are compared to the scores in the last iteration, and the algorithm terminates if the specified convergence criterion has been met. otherwise, the algorithm goes back to step- <dig> and repeats the message-passing process.

RESULTS
dataset and experimental set-up
in order to evaluate the performance of the proposed message-passing scheme, we carried out pairwise sequence alignment experiments based on the balibase  <dig>  protein alignment benchmark  <cit> . balibase is arguably the most widely used benchmark for multiple sequence alignment, and it has been utilized by most multiple sequence alignment algorithms for assessing their performance. the benchmark consists of five reference sets, where reference  <dig> consists of two subsets: v <dig> and v <dig>  each reference set consists of multiple sequence alignments that satisfy specific criteria, such that different reference sets can be used to test the performance of multiple sequence alignment algorithms under different conditions. for example, each alignment in reference  <dig> consists of sequences that share reasonably high identity  and "orphan sequences" that share little identity  to other sequences in the alignment. reference sets  <dig> and  <dig> are constructed such that every sequence has at least one other sequence in the same alignment whose identity exceeds 20%. sequences in reference  <dig> and reference  <dig> may contain large n/c-terminal extensions or internal insertions, respectively. further details of the balibase  <dig>  benchmark can be found in  <cit> .

for every sequence family in balibase  <dig> , we performed pairwise sequence alignment for all possible sequence pairs in the given family. the pairwise alignment was performed in the following manner. first, we estimated the probabilistic symbol alignment confidence score using the proposed message-passing scheme. in our experiments, we used three different values of λ  to investigate the effect of λ on the overall sequence alignment performance. for the joint symbol occurrence probability p , we used the joint emission probability  of the pair-hmm that was used in  <cit> . at the end of each iteration, we normalized the alignment confidence score by dividing the confidence score matrix c by the matrix 2-norm: c←c/||c|| <dig>  we terminated the message-passing process if , where cxy is the current score and  is the score obtained in the previous iteration. once the scores converged, based on our assumption that cxy  ∝ p , we used the confidence score cxy  to find the mea alignment through dynamic programming. the predicted alignment was compared to the benchmark alignment in balibase  <dig>  to compute the sensitivity  and the positive predictive value , where tp is the number of correctly aligned symbol pairs, fp is the number of incorrectly aligned pairs, and fn is the number of symbol pairs that are aligned in the benchmark alignment but not aligned in the predicted alignment. for comparison, we repeated similar experiments using the pair-hmm with the same set of parameters as the one used in  <cit> .

performance of the proposed message-passing scheme
λ
=  <dig> 
λ
=  <dig> 
λ
=  <dig> 
sn
ppv
cpu
sn
ppv
cpu
sn
ppv
cpu
sn
ppv
cpu
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
the average sensitivity , positive predictive value , and cpu time  on different reference sets are shown for each sequence alignment scheme. all experiments were performed in matlab on a macpro workstation with  <dig> ×  <dig>  ghz quad-core intel xeon processors and 32gb memory.



from table  <dig>  we can clearly see that the proposed message-passing scheme significantly outperforms the pair-hmm approach in terms of sn and ppv, for all three values of λ. for example, the message-passing scheme achieved up to  <dig>  higher sn and  <dig>  higher ppv for λ =  <dig> , and up to  <dig>  higher sn and  <dig>  higher ppv for λ =  <dig> . our experiments showed that a larger λ tends to yield more accurate alignments, while a smaller λ tends to make the algorithm converge faster, hence computationally more efficient. for example, when the weight parameter was set to λ =  <dig> , the message-passing scheme was around  <dig>  ~  <dig>  times faster than the pair-hmm, while still yielding much more accurate alignments.

the results in table  <dig> demonstrate that, on average, the proposed message-passing scheme considerably improves the quality of sequence alignment over the traditional pair-hmm approach. in order to see whether the proposed scheme also leads to a consistent improvement for most sequence pairs, we calculated the difference between snmp  and snhmm  for every pairwise sequence alignment that we have performed in our experiments. similarly, we calculated the difference between ppvmp  and ppvhmm  for all sequence pairs in balibase  <dig> . figure  <dig> shows the distributions of snmp- snhmm and ppvmp- ppvhmm for all sequence pairs. to avoid any bias from unsuccessful alignments, sequence pairs for which neither method yielded an alignment with at least one correct symbol alignment were excluded. the plots in the left column of figure  <dig> show the distributions of snmp- snhmm, and those in the right column show the distributions of ppvmp- ppvhmm. the results obtained from the same reference set are shown in the same row, where the first row shows the results on rv <dig> and the last row shows the results on rv <dig>  as we can see in figure  <dig>  every single distribution shown in the figure has a much larger probability mass in the right-half plane, which clearly demonstrates that the proposed message-passing scheme consistently outperforms the pair-hmm-based approach for most  sequence pairs. in many cases, the improvements in sn and ppv were quite significant , which shows that the proposed scheme can often find an accurate sequence alignment even when the pair-hmm has difficulty aligning the sequences.figure  <dig> 
performance comparison between the proposed message-passing scheme and the traditional pair-hmm approach. the plots in the left column show the distributions of the sensitivity difference sn
mp
-sn
hmm between the message-passing scheme and the pair-hmm-based approach. in the right column, the distributions of the difference between the positive predictive values ppv
mp
- ppv
hmm of the two schemes are shown. each row shows the evaluation results obtained from each of the six reference sets in balibase  <dig> .



CONCLUSIONS
in this paper, we proposed a novel method for sequence alignment based on an efficient message-passing approach. given two biological sequences, the proposed method estimates the symbol alignment confidence scores for all possible symbol pairs. these scores are iteratively computed by exchanging messages between neighboring symbol pairs, where empirical evidence shows that these scores quickly converge within several iterations. the proposed message-passing scheme effectively addresses a number of limitations of the traditional pair-hmm-based approach, and extensive performance assessment based on balibase  <dig>  shows that the proposed scheme consistently outperforms the pair-hmm approach, both in terms of alignment accuracy and computational efficiency. considering that pair-hmms have been widely adopted by many modern multiple sequence alignment algorithms , the proposed scheme has potentials to further improve the current state-of-the-art. furthermore, the proposed scheme is numerically stable even for extremely long sequences. unlike the pair-hmm approach, there is no global measure or quantity  of the entire sequence pair) to be estimated, and the exchanged messages  are normalized after each iteration, which ensures that they lie within a reasonable numerical range. finally, the simple iterative estimation process - in which the neighboring symbol pairs only exchange "local" messages - makes the proposed message passing scheme amenable to massive parallelization through the utilization of modern gpu  architecture. these characteristics open up the possibility of applying the proposed message-passing scheme to accurate probabilistic alignment of genome-scale sequences, which has not been possible using traditional pair-hmms.

finally, it is worth noting that the formula that is used to update cxy in the proposed message-passing algorithm bears conceptual similarity to the eigenvalue equation used by the network alignment algorithm called isorank  <cit>  for estimating the functional similarity between proteins across different protein-protein interaction  networks. as demonstrated in  <cit> , techniques that were originally developed for sequence alignment may also have potentials to improve network alignment methods. conversely, techniques used in network alignment may also lead to better sequence alignment methods. for example, the scoring scheme used by isorank can be viewed as a random walk  <cit> , and it was shown that the use of a different random walk scheme can lead to more accurate network alignment results  <cit> . similarly, it may be possible to modify the update formula for cxy to further improve the performance of the proposed message-passing scheme, and we are currently in the process of investigating several different implementations.

competing interests

the authors declare that they have no competing interests.

authors' contributions

bjy conceived the idea, performed the simulations, analyzed the results, and wrote the paper.

