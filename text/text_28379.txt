BACKGROUND
in systems biology, complex biological systems are often modeled as networks. examples include protein-protein interaction , metabolic, gene-regulatory, and signal transduction networks. the increasing quality and quantity of available data creates the need for automated analysis methods to better understand cellular processes, network organization, evolutionary changes, and disease mechanisms  <cit> . based on the assumption that evolutionary conservation implies functional significance, comparative approaches may help improve the accuracy of data, elucidate protein pathways and complexes, generate, investigate, and validate hypotheses about the underlying networks, and transfer functional annotations. in addition to component-based comparative approaches, network alignments provide the means to study conserved network topology such as common pathways and more complex network motifs. yet, unlike in classical sequence alignment, the comparison of networks becomes computationally more challenging, as most meaningful assumptions instantly lead to np-hard problems.

previous work
one of the first contributions to automatic biological network alignment is  <cit> , where the authors introduce a concept later called global alignment graph and find functionally related enzyme clusters in metabolic networks using a simple heuristic. kelley et al.  <cit>  formalize the concept and present the pathblast algorithm, which heuristically finds high-scoring common paths in two protein-protein interaction networks using randomized dynamic programming. detecting more complex shared topologies has been addressed by sharan et al.  <cit> , where the authors introduce a probabilistic model for protein complexes and propose a heuristic greedy approach to search for dense subgraphs in the global alignment graph, which correspond to significant shared complexes in the original ppi networks. koyutürk et al.  <cit>  also use the global alignment graph with a more elaborate scoring scheme to compute pairwise alignments of ppi networks. narayanan and karp  <cit>  compare two ppi networks using a different model based on a graph-matching algorithm. they restrict the structural conservation to the environment of a node and thus achieve a polynomial running time.

while most of the above approaches aim at computing local alignments, a recent method by singh et al.  <cit>  focuses explicitly on computing global alignments between protein interaction networks. they heuristically approach the problem by preferably matching nodes which have a similar neighborhood, which they encode as an eigenvalue problem.

for multiple network alignment, the method from  <cit>  has been adapted in  <cit> . koyutürk et al.  <cit>  determine multiple alignments by contracting the global alignment graph and then applying algorithms from frequent itemset extraction. jaeger and leser  <cit>  determine conserved subgraphs among k ppi networks using a heuristic for multidimensional matching in a k-partite graph that results from linking each protein to its best ortholog match candidate in each of the other networks. the graemlin algorithm  <cit>  uses local search to construct a global multiple alignment. singh et al. have adapted their method for the multiple case  <cit> .

contribution
in this paper, we introduce the maximum structural matching formulation for global network alignment and show its relation to the global alignment graph. we derive integer linear programming formulations for the maximum structural matching problem and a lagrangian relaxation algorithm based on these formulations. to our knowledge, this is the first contribution to the relatively young field of biological network alignment that does not approach the problem heuristically. still, our computational results indicate that the lagrangian approach is reasonably fast to provably optimally align even large networks. we present preliminary results from two ongoing proof-of-concept studies, where we use the method to globally align protein-protein-interaction networks and to classify metabolic subnetworks.

note that this is a methodological paper whose purpose is to introduce the new approach with mathematical rigor. the two proof-of-concept studies demonstrate the potential of the method in practice. however, a detailed comparison to other methods is beyond the scope of this article and will be carried out as future work.

methods
a combinatorial formulation for network alignment
in this section we give a formal definition of network alignment. we define the global pairwise network alignment problem and present a graph-theoretical reformulation, which is an extension of the maximum weight trace formulation, which has been proposed by kececioglu for classical sequence alignment  <cit> . furthermore, we relate our definition to previous work.

in analogy to the classical sequence case, we define a pairwise alignment of two networks as follows. note that this definition is already quite close to the formulation presented later in this section and can readily be extended to multiple network alignment. let "-" denote the gap symbol.

definition  <dig> . given two networks g <dig> =  and g <dig> = , a network alignment a: v <dig> → v <dig> ∪ {-} maps a vertex i ∈ v <dig> to

 a={j∈v2a vertex j in the second network−a gap. 

note that in contrast to sequence alignments, network alignments do not have to respect an inherent sequential order of the objects to align.

definition  <dig> . the score of a network alignment a: v <dig> → v <dig> ∪ {-} of two networks g <dig> =  and g <dig> =  is

 s=∑i∈v1a≠−σ)+∑i∈v1a≠−∑k∈v1a≠−τ,k,a), 

where σ: v <dig> × v <dig> → ℝ≥ <dig> gives the score of mapping individual nodes onto each other and τ: v <dig> × v <dig> × v <dig> × v <dig> → ℝ≥ <dig> gives the score of mapping pairs of nodes onto each other.

this definition allows a quite flexible modeling of scores, which may be used to express mismatches and gaps, and which can also be based on additional information, such as, for example, edge weights. typically, the σ-part of the scoring function will be based on pairwise similarity of the objects represented by the nodes and will assign, say, similar proteins in two protein-protein interaction networks a high score, whereas the τ-part will reward conserved interactions between pairs of nodes. note that the definition is similar to structural alignment scoring functions as, for example, used to compare rna molecules  <cit> . figure  <dig> illustrates the definitions.

given these definitions, we are able to define the network alignment problem formally:

definition  <dig> . given two networks g <dig> =  and g <dig> =  and a scoring function s as defined in def.  <dig>  the pairwise global network alignment problem asks for a highest-scoring alignment a* of g <dig> and g <dig>  that is, a∗=arg⁡max⁡a∈ass, where adenotes the set of all possible alignments of g <dig> and g <dig> 

theorem  <dig>  the pairwise global network alignment problem as defined in def.  <dig> is np-hard.

proof. it is easy to see that the pairwise network alignment problem is in np, since a non-deterministic algorithm needs only guess the best alignment a. we prove np-hardness by a simple reduction from the maximum common subgraph problem. a common subgraph of two graphs g <dig> =  and g <dig> =  is characterized by subsets e1' ⊆ e <dig> and e2' ⊆ e <dig> such that the two subgraphs g′ <dig> =  and g′ <dig> =  are isomorphic, where v1' and v2' denote the vertices that are the endpoints of edges in e1' and e2', respectively. a maximum common subgraph is a common subgraph with the maximum number of edges, and its computation is a well-known np-hard problem  <cit> .

we can solve the maximum subgraph problem with an algorithm for network alignment by simply using the following scoring function:

 σ =  <dig> for all i ∈ v <dig>  j ∈ v <dig> 

and

 τ={1for ∈e1and∈e20otherwise. 

a best network alignment will then correspond to a maximum common subgraph.   □

the above definition of network alignment is very close to the notion of trace as introduced by kececioglu for classical sequence alignment  <cit> . we give an analogous definition for the alignment of networks:

definition  <dig> . given two networks g <dig> =  and g <dig> = , the alignment graph a is a complete bipartite edge-weighted graph with vertex set v <dig> ∪ v <dig>  the weight of an edge e =  with i ∈ v <dig> and j ∈ v <dig> is w = σ and represents the gain of aligning the endpoints of the edge.

observation  <dig>  there is a one-to-one correspondence between matchings in the alignment graph and network alignments.

the alignment graph provides an alternative way to represent an alignment of the nodes in a network. yet, in the basic version we are unable to deal with structural conservation. therefore we introduce the concept of structural matches, which have already been used for structural alignment, where they are referred to as interaction matches  <cit> .

definition  <dig> . a structural match is a pair of alignment edges ,  in the alignment graph. we say that a network alignment realizes a match ,  if it realizes both alignment edges  and .

we are now able to reformulate the pairwise global network alignment problem as a combinatorial problem in the alignment graph. let > denote an arbitrary order of the edges in a.

definition  <dig> . given two networks g <dig> =  and g <dig> =  and a scoring function s, the structural score of a matching m in the alignment graph a is given by

 s=∑∈mσ=∑∈m∑∈m>τ. 

the maximum structural matching problem asks for a highest-scoring structural matching.

observation  <dig> straightforwardly extends to the structural case and yields the following result.

lemma  <dig>  consider a network alignment a and the matching m it realizes in the alignment graph. then we have s = s.

this allows us to concentrate on the alignment graph to find the best pairwise global network alignment. in the next section, we present an integer linear programming approach to determine a maximum structural matching in a bipartite graph.

note that our definition of alignment graph is different, but in a sense equivalent, to the global alignment graph concept used in the pathblast algorithm  <cit>  and first introduced in  <cit> . the following observation relates the two concepts for the case of pairwise alignment; the multiple case is analogous. the global alignment graph contains weighted nodes for pairs of nodes in the original networks – which correspond to the alignment edges in our bipartite alignment graph – and weighted edges represent conserved interactions, gaps, or mismatches – which correspond to structural matches in our definition. weights of nodes and edges correspond to the weights of alignment edges and structural matches, respectively. determining clique-like heavy subgraphs in the global alignment graph – for which several heuristics have been presented – is equivalent to our definition of network alignment as a maximum structural matching in our alignment graph. we nevertheless prefer our alternative definition, because it allows us to employ the well-studied field of matchings in bipartite graphs as the next sections will show.

integer linear programming formulations for network alignment
we can straightforwardly cast the maximum structural matching problem as a non-linear integer program.

for each edge  ∈ v <dig> × v <dig> of the alignment graph, we define a binary variable xij with the interpretation xij =  <dig> if  is part of the structural matching and xij =  <dig> otherwise. let δ denote the set of edges incident to vertex v. the formulation is then

  max⁡∑∈v1×v2σxij+∑∈v1×v2∑∈v1×v2τxijxkl 

  s.t.∑∈δxij≤1∀v∈v1∪v <dig> 

  xij ∈ { <dig>  1}   ∀ ∈ v <dig> × v <dig> 

inequalities  make sure that the choice of alignment edges corresponds to a matching in the bipartite graph and go back to birkhoff's theorem  <cit> . linearization leads to the following integer linear program , which forms the basis of our lagrangian relaxation approach. we define variables yijkl = xijxkl and obtain

  max⁡∑∈v1×v2σxij+∑∈v1×v2∑∈v1×v2τyijkl 

  s.t.∑∈δxij≤1∀v∈v1∪v <dig> 

  yijkl ≤ xij   ∀ ∈  <dig> 

  yijkl ≤ xkl   ∀ ∈  <dig> 

  xij ∈ { <dig>  1}   ∀ ∈ v <dig> × v <dig> 

  yijkl ∈ { <dig>  1}   ∀ ∈  <dig> 

we now apply variable splitting or lagrangian decomposition, a well-known technique in mathematical programming  <cit> , to build a good basis for a lagrangian approach. in computational biology, this technique has already been successfully applied to the maximum contact map overlap problem in computational structural proteomics  <cit>  and to structural rna alignment  <cit> .

we therefore split each structural variable yijkl into two "directed" variables y→ijkl and y→klij and make sure that they adopt the same value. likewise, we define new weights τ→ for the directed structural variables with the property

  τ→+τ→=τ, 

setting τ→=τ→=τ <dig>  the resulting integer linear program is then:

  max⁡∑∈v1×v2σxij+∑∈v1×v2∑∈v1×v2τ→y→ijkl 

  s.t.∑∈δxij≤1∀v∈v1∪v <dig> 

  y→ijkl≤xij∀∈ <dig> 

  y→ijkl=y→klij∀∈ <dig> 

  xij ∈ { <dig>  1}   ∀ ∈ v <dig> × v <dig> 

  y→ijkl∈{ <dig> }∀∈ <dig> 

the following result allows us to concentrate on solving the ilp –.

theorem  <dig>  a feasible solution respecting the constraints of ilp – corresponds to a structural matching in the alignment graph whose score is equal to the score of the objective function.

proof. let  be a feasible solution of the ilp. clearly, x represents a network alignment. now consider a variable y→ijkl with y→ijkl =  <dig>  inequality  ensures that the first half of the match, namely, , is realized, whereas the second half is taken care of by equality  in combination with inequality . thus, the solution corresponds to a structural matching, the score of which, due to property , clearly equals the score of . for the other direction of the proof, setting the variables x and y according to the characteristic vectors of a structural matching does not violate any of the constraints. again, it is easy to see that the structural score of the matching and the objective function value coincide.   □

lagrangian relaxation for network alignment
inspired by recent successes in solving similar integer linear programs using lagrangian relaxation, we propose to employ this approach to find provably optimal and near-optimal solutions of ilp –.

therefore, we relax constraint  and obtain the following relaxed problem:

  max⁡∑∈v1×v2σxij+∑∈v1×v2∑∈v1×v2τ→y→ijkl+∑∈v1×v2∑∈v1×v2λijkl 

  s.t.∑∈δxij≤1∀v∈v1∪v <dig> 

  y→ijkl≤xij∀∈ <dig> 

  xij ∈ { <dig>  1}   ∀ ∈ v <dig> × v <dig> 

  y→ijkl∈{ <dig> }∀∈ <dig> 

here, vector λ contains the lagrangian multipliers, which penalize the violation of . we exploit the fact that, in our case, λijkl = -λklij and rewrite  as

  max⁡∑∈v1×v2σxij+∑∈v1×v2∑∈v1×v2+λijkl)y→ijkl. 

a fundamental result in mathematical optimization says that for each choice of penalty terms λ, each solution of the relaxed problem provides an upper bound for the original problem. naturally, we are interested in the tightest such bound.

the penalty vectors in  change the weights of the structural matches and, intuitively, can be used to force pairs of complementary directed structural match variables to agree on their choices. we employ subgradient optimization for this task and find the lagrangian multipliers that yield the lowest upper bound. subgradient optimization is an iterative process that involves solving the relaxed problem over and over again, see, for example  <cit>  for a detailed description of the method. the following result implies that we can do this efficiently.

theorem  <dig>  the relaxed problem can be reduced to the bipartite matching problem and can be solved in polynomial time.

proof. the proof is similar to the one given in  <cit>  for the contact map overlap problem and rests upon the observation that each directed structural match variable can be assigned unambiguously to an alignment variable – unlike in the undirected, original case. we can therefore concentrate on the alignment variables x. if such a variable xij is zero, then its contribution to the objective function is zero as well, since all incident directed structural match variables y→ijkl are forced to zero due to constraint . if, on the other hand, an edge  is part of the solution, we can compute its contribution to the objective function, or its profit, in polynomial time as follows: we assign the weight τ→ + λijkl to each edge  in the alignment graph and compute the profit pij of edge  via a maximum bipartite matching according to these weights. the resulting matching corresponds to the best case that may happen if alignment edge  is part of the solution.

to compute the overall best solution, we choose those alignment edges that give the best network alignment according to their profits p. again, this is a bipartite matching problem, which can be solved in polynomial time.   □

theorem  <dig> gives us a good upper bound. in order to find good lower bounds, we analyze the network alignment given by the solution of each relaxed problem and compute the best structural completion, yielding a feasible solution for the original problem. given a matching m, we simply add all structural matches ,  with both  ∈ m and  ∈ m.

let u*, l* be the best upper and lower bounds found by our algorithm, respectively, and let  be the best solution it finds. our algorithm for network alignment is then as follows:

 <dig> initialization;

 <dig> λ = 0; u* = ∞; l* = -∞;

 <dig> main loop;

 <dig> repeat

5   x = solution of relaxed problem with value u;

6   adapt lagrangian multipliers;

7   compute structural completion  of x with value l;

8   if u <u* then u* = u;

9   if l > l* then

10      l* = l;

11       = ;

 <dig> until l* = u* or some termination criteria are met;

as the structural matching problem is np-hard, there will, in the general case, be a duality gap unless p equals np. in other words, there will be instances for which u* and l* will not coincide. therefore we define some additional termination criteria like, for example, a maximal number of iterations. although the possible duality gap makes our algorithm heuristic in nature, it nevertheless comes with a quality guarantee due to the computation of the upper bound. often this bound is quite good, and then it is fair to say that our algorithm efficiently computes provably near-optimal solutions. in addition, it is straightforward to embed the lagrangian approach into a branch-and-bound framework resulting in a truly exact approach for the network alignment problem, which will then, of course, take exponential time to finish for some instances.

RESULTS
we have implemented that lagrangian algorithm for network alignment described in the previous section and offer it as the freely available software tool natalie within the planet lisa framework. planet lisa is a library of algorithms for computational structural and systems biology, which has initially been created to facilitate computational structural comparisons of rna molecules and proteins  <cit> . in its basic version, natalie reads in two graphs in graphml format  <cit>  as well as additional information that determine the σ- and τ-parts in the scoring function depending on the application.

the purpose of this paper is to introduce the new method; we have not yet performed a detailed comparative study including other tools, which we plan to carry out as future work. we present, however, preliminary results from two ongoing projects that utilize the natalie algorithm. these studies demonstrate that the method works well in practice and has a high potential to become a very competitive tool in the area of network alignment.

first proof of concept: comparison of protein-protein interaction networks
in a cooperation with the knowledge management in bioinformatics group of the humboldt-universität berlin we use natalie to align protein-protein interaction networks based on orthology information about proteins in different species.

we analyze data from the following four species: homo sapiens, mus musculus, drosophila melanogaster, and saccharomyces cerevisiae. the ppi networks were obtained using data from several open databases and their origin is described in  <cit> . candidates for orthologous proteins between the species were determined using protein enzyme classes, interpro domains, and a minimum sequence identity threshold of α =  <dig> , see again  <cit>  for details. in a prototypical experiment, we compare the network of h. sapiens against all other networks using a simple scoring function. table  <dig> provides information about the network sizes, where n and m denote the number of nodes and edges in the networks, and the average number of potential orthologs for a sequence identity threshold of α =  <dig>  as compared to the network of h. sapiens. we use the following scoring function and align the three pairs of ppi networks. we set

 σ={0if protein i and j are orthologous candidates−∞otherwiseτ={1if both interactions  and  exist0otherwise. 

this scoring function simply counts the number of conserved interactions of proteins that are potentially orthologous. we limit the cpu time to  <dig> h and yield the results summarized in tab.  <dig> 

clearly, more elaborate scoring schemes may yield biologically more meaningful solutions. this simple experiment demonstrates, however, that the lagrangian algorithm performs very well even on large data. all solutions but the alignment computed for d. melanogaster are provably optimal and even this alignment is very close to optimal. figure  <dig> shows the alignment computed between the ppi networks of mus musculus and homo sapiens.

second proof of concept: classification of metabolic subnetworks
a common way to represent the topology of a metabolic network is its stoichiometric matrix, which characterizes the system of homogeneous linear equations that describe the network of biochemical reactions at steady state. together with the computational systems biochemistry group at charité, berlin, we investigate randomization models for a given metabolic network.

we therefore consider environments of different sizes for each reaction in the network and classify the resulting subnetworks according to their topological equivalence. two reaction environments are topologically equivalent if the induced stoichiometric submatrices are permutation-equivalent, that is, one can be transformed into the other only by permuting its rows and columns. then, randomized networks can be generated by swapping reaction environments that exhibit the same topology.

we employ a result by colbourn  <cit>  and determine permutation-equivalence via computing whether two corresponding labeled graphs are isomorphic. since two graphs are isomorphic if and only if their maximum common subgraph equals the input graphs, we can use natalie to do the computations. we compute the equivalence classes of reaction environments of sizes s ∈ { <dig>   <dig>  3} of the metabolic networks of e. coli and s. cerevisiae, which were obtained from the systems biology research group at ucsd. the graphs that correspond to the stoichiometric matrices of these reaction environments are typically quite small and have rarely more than twenty vertices. table  <dig> shows the number of pairwise comparisons that had to be computed:

for each comparison, natalie has to decide whether the two subnetworks are topologically equivalent or not. although, in the current version, it takes about two weeks to do the computations, natalie finds the correct answer for all of the more than  <dig> million comparisons and thus correctly computes the equivalence classes. in this application, the quality guarantee of the lagrangian approach is indispensable, and the same results could not have been computed with a purely heuristic method. yet, they could have been obtained probably much faster using a tailor-made algorithm for detecting graph isomorphisms. we plan, however, to develop a similarity metric between stoichiometric matrices based on the maximum common subgraph of their corresponding labeled graphs and have therefore used our novel approach, which has been proven efficient enough for this application. the details of this study will be described elsewhere.

CONCLUSIONS
we believe that the maximum structural matching formulation and our algorithmic contribution is a first step towards a very competitive framework for network alignment, query, and comparison problems. we see perspectives for many interesting research directions. as the formulation as well as the algorithm can deal with multiple alignments, we plan to adapt the concepts to the multiple case. for practical purposes, a progressive alignment method seems to be appropriate for which an adequate consensus concept has to be developed. moreover, the analogy to classical sequence alignment suggests to investigate local network alignments, where a first step consists in computing maximum connected motifs.

as the formulation is very flexible, it can easily be adapted to any type of undirected or directed, labeled or unlabeled, and weighted or unweighted network. it can be used for answering network queries as well as for detecting repeated motifs in a single network.

clearly, a good search procedure is only one component in a successful alignment framework. the analogy to sequence alignment suggests that a lot of further research has to go into development and evaluation of suitable scoring functions and into statistical analysis of the results. this more statistically-oriented line of research will be different for each of the numerous applications for network alignment in computational biology. currently, we address these topics in the ongoing projects, the alignment of ppi networks and the comparison of metabolic networks. likewise, a visualization of the results is an important research topic. here, we envision an integration into the cytoscape software  <cit> .

competing interests
the author declares that they have no competing interests.

