BACKGROUND
comparative genomics is based on the identification and alignment of homologous genes across multiple species and has become a standard, powerful approach in molecular biology for many purposes, including characterization of structurally and functionally important motifs in gene families. typically, this approach starts with a set of query sequences as input to sequence similarity-based database search programs such as blast  <cit>  to identify significantly similar matches in the sequence databases of species of interest. if the species of interest are fully sequenced and evolutionarily close enough to the query species, then this approach will yield the homologous genes in their genomic context. however, the comparative genomics approach is currently limited by the sparse sampling of eukaryotic species from the tree of life that have been sequenced as model organisms. for example, so far only three species  from the entire plant kingdom have been completely sequenced. at the same time, a large number of on-going sequencing projects  are generating large numbers of short  genomic sequences through strategies such as whole-genome shotgun or bac-by-bac minimum tiling path sequencing. these sequence reads are continuously made available through the ncbi trace archive  <cit> . in the summer of  <dig> the archive topped one billion reads  <cit> .

because the deposited sequenced reads are short , a simple query of the repository with a dna or protein seed  will typically only tag this gene as present in the target genome. depending on the genome sequence coverage, the query may result in redundant and overlapping tags. analysis of the resulting set of reads without the help of an assembly program could become very tedious, particularly if one wishes to obtain the genome context of the tagged gene further upstream or downstream, which would require additional rounds of repository searches.

to facilitate the task of homolog identification in the trace archive repository of an ongoing genome sequencing project, we have developed software that seamlessly integrates recursive database searches and contig assembly and interpretation. depending on the depth of the current sequencing effort, the final results returned by tracembler will ideally be full-length genomic sequences that are homologs of the user-supplied query sequences.

implementation
the tracembler algorithm is illustrated in fig.  <dig>  as input, the program takes a single or multiple user-supplied query sequences , an e-value cutoff, and a user selected trace archive database, which contains sequence reads from a particular species deposited at the ncbi trace archive. an initial search is then initiated via the remote blast service provided by ncbi  <cit> . because the searches are always performed directly at ncbi , users are assured to search against the most up-to-date sequence read repository. if the initial blast search returns significant matching sequences , these matching sequences are considered as queries for further database searches, which can potentially extend the initial matching region in both 5' and 3' direction . this process is automatically iterated until either no more new matching sequences are found, a given maximal number of queries is exhausted, or a specified maximum number of rounds of recursion is reached. only newly identified non-redundant matching sequences from the previous round are used as queries for the next round blast search. the ceiling on the number of rounds of recursion is imposed to prevent assembly of more than the local regions surrounding the genes of interest, thus protecting the intellectual properties of the whole-genome sequencing project by preventing large-scale assembly . additionally, tracembler has the following rules for polite dynamic ncbi data requests: mandatory pauses between data requests and blast job submissions, a maximum number of requests for an individual blast result, fixed limits on the blast parameter values.

all the obtained blast matching sequences are considered as potential genomic constituents of homologous regions of the original user-supplied query sequence and are assembled with the cap <dig> program  <cit> . in addition to the actual sequences, quality scores and mate-pair distance constraints are also critical for high-quality assembly. therefore, the quality score and mate-pair distance constraint information for each read are dynamically retrieved from the trace archive and used in the assembly to evaluate the significance of sequence overlaps. multiple contigs may result from coverage gaps in one locus or represent duplicated loci. the cap3-generated contigs are compared with the original user-supplied query sequences using blast  <cit>  and genomethreader  <cit>  to assess and display the extent of similarity and coverage. after completion of the analysis, an email is sent to the user indicating urls to view all the results, including the assembled contig sequences, the multiple-sequence alignment underlying the assembly, as well as the pair-wise alignments between the original query and the contigs. in addition, the intermediate files , the recursive blast output, the cap <dig> output files, and a log file are included in the result. these additional files permit interested users to download and locally analyze their data further, such as using a different assembly program.

RESULTS
validation
to validate tracembler, we first tested the software by trying to re-assemble a published genome region from trace reads matching an annotated gene. our test case used the rat  chrm <dig> gene sequence  as query against the entire rat whole-genome shotgun sequence reads. the gene was picked randomly. the rat genome has already been fully sequenced and assembled  <cit> , and thus tracembler was expected to assemble a contig that matches the published genome. as shown in "additional file 1: tracembler validation and applications", tracembler produced a single contig of length  <dig>  bp. this contig covers the entire, perfectly matched chrm <dig> gene. the entire contig matches very well to chromosome  <dig>  from base positions  <dig> , <dig> to  <dig> , <dig> . the chrm <dig> gene maps from base positions  <dig> , <dig> to  <dig> , <dig>  <cit> , and thus the contig generated by tracembler not only recovered the full-length annotated chrm <dig> gene but also successfully "walked"  <dig>  bp into the 5' upstream and  <dig>  bp into the 3' down-stream regions.

application
next, we discuss a tracembler application that revealed microsynteny between medicago truncatula and glycine max, which are thought to have diverged through speciation around  <dig> mya  <cit> . m. truncatula is an established model organism for the legumes, with a nearly complete sequencing and annotation effort  <cit> . whole genome shot-gun sequencing of g. max  has only recently been initiated  <cit> , with currently more than  <dig>  million unassembled and unannotated sequence reads deposited in the ncbi trace archive. soybean is the most valuable legume crop  <cit> , and establishing its syntenic relationship with m. truncatula is critical for transferring knowledge from this model organism.

in m. truncatula, the "swim zinc finger" gene  is annotated on a bac clone  from position  <dig>  to  <dig>   <cit> . 3' downstream of this gene, there is another "hypothetical" gene  annotated from positions  <dig>  to  <dig> . according to the current m. truncatula genome annotation, the "swim zinc finger" gene and its neighboring "hypothetical" gene are only  <dig> bp apart. in order to investigate whether such close distance is likely a result of mis-annotation , we took the protein sequences encoded by these two m. truncatula genes as input and used tracembler to search against soybean sequence reads at ncbi trace archive. interestingly, one  <dig>  bp soybean genomic contig obtained from the assembly does match well to both the "swim zinc finger" and the "hypothetical" protein from positions  <dig>  to  <dig>  and from positions  <dig>  to  <dig>  of this contig, respectively . thus, there appear to be homologs of the medicago genes on the soybean genome in similar proximity  as on the medicago genome. our result provides compelling evidence that the two genes are highly conserved between m. truncatula and soybean. in particular, the high conservation of the "hypothetical" gene suggests that it is a true gene.

performance
the performance of tracembler is mainly determined by three factors. the first is the sequencing depth of the target genome, which provides a boundary of the expected extent of read overlaps and therefore assembled contig length. the second factor is the abundance of gene duplications in the genome of interests. for plant genomes, in which many gene duplications have occurred through tandem or whole genome duplication events, multiple homologs of genes of interests may have been sampled by the deposited sequence reads and show up as close blast matching sequences in the initial stage of tracembler. if the multiple gene copies are sufficiently diverged, the cap <dig> program will split them into different contigs. the pairwise comparison between the original user-supplied queries and the final contigs in the final step of tracembler may identify the likely ortholog of the query based on highest match score. third, because tracembler relies on the up-to-date ncbi trace archive blast search engine over the web, the response time for users will be affected by network traffic as well as the current work-load at the search engine. various parameter settings deal with the stringency of matching and extent of the search, which will also affect speed and quality of the results.

other programs
during the preparation of this manuscript, we became aware of a published software package, genotrace, from berezikov et al.  <cit>  that is similar to our tracembler. in addition to the choices of embedded external computer programs  that likely produce different final outputs, there are several subtle yet important differences between tracembler and genotrace that matter to the general biology user community. first, genotrace requires maintaining a local copy of ncbi trace archive. although this approach improves the search speed, the required amount of disk space is enormous , which is beyond a typical user's resources and is superfluous for the task of exploring just a few genes of interest. by contrast, tracembler takes advantage of the dynamic api provided by ncbi and sends query sequences via the internet to directly search the trace archive at ncbi. this not only eases the installation and maintenance for the users, but also ensures that users are always searching the most up-to-date version of trace archive. furthermore, because trace sequences can often accumulate in amounts of hundreds of thousands of sequences per organism per week  <cit> , genotrace's requirement of a local copy of ncbi's trace archive necessitates frequent downloading and processing of local files, which is an obstacle for widespread use. second, only dna sequence can be used as query for genotrace, whereas tracembler can take either dna or protein sequences as input . third, genotrace is restricted to one query sequence at a time. as demonstrated by our application example above, there are instances where it is more convenient to allow multiple seeds spanning one region of interest in one genome to search another genome.

CONCLUSIONS
biologists are often left with an eager sense of anticipation when their species of interest are in the process of being sequenced but the sequencing reads have not yet been assembled. our tracembler server, although algorithmically simple, provides an elegant solution for biologists to recover genomic regions of interest from species with on-going sequencing project before the whole genome assemblies are published.

availability and requirements
the tracembler program is freely accessible, using a web browser at . the software, written in perl and designed for use on linux machines, is also freely available for local installation by download from . instructions on obtaining the required external free programs  are provided with the software.

authors' contributions
vb designed and supervised the project. qd and mw implemented the computer program. qd analyzed the results and prepared the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
tracembler validation and applications. examples of tracembler usage

click here for file

 acknowledgements
this work was supported in part by nsf grant dbi- <dig> and by a specific cooperative agreement with the agricultural research service, u.s. department of agriculture  awarded to vb. qd is currently supported by the indiana metacyt initiative, funded by the lilly endowment, inc. we are grateful for constructive suggestions from two anonymous reviewers.
