BACKGROUND
sequence alignment is a fundamental problem in bioinformatics. despite of a big amount of efforts spent by researchers on designing efficient alignment methods, improving the alignment efficiency remains of primary importance. this is due to the continuously increasing amount of nucleotide sequence data, such as est and newly sequenced genomic sequences, that need to be compared in order to detect similar regions occurring in them. those comparisons are done routinely, and therefore need to be done very fast, preferably instantaneously on commonly used computers. on the other hand, they need to be precise, i.e. should report all, or at least a vast majority of interesting similarities that could be relevant in the underlying biological study. the latter requirement for the alignment method, called the sensitivity, counterweights the speed requirement, usually directly related to the selectivity  of the method. the central problem is therefore to improve the trade-off between those opposite requirements.

the smith-waterman algorithm  <cit>  provides an exact algorithmic solution to the problem of computing optimal local alignments. however, its quadratic time complexity has motivated the creation of rapid heuristic local alignments tools. a basic idea behind all heuristic algorithms is to focus only on those regions which share some patterns, assumed to witness  a potential similarity. those patterns are formed by seeds which are small strings  that appear in both sequences. fasta  <cit>  and blast  <cit>  are well-known examples of such methods. blast is currently the most commonly used sequence alignment tool, and is a kernel of higher-level search tools, such as psi-blast  <cit>  for instance.

more recently, several new alignment methods have been proposed, such as blat  <cit> , patternhunter  <cit> , lagan  <cit> , or blastz  <cit> , to name a few. the improvement brought by all those tools results from new more efficient hit criteria that define which pattern shared by two sequences is assumed to witness a potential alignment. two types of improvements can be distinguished. on the one hand, using two or more closely located smaller seeds instead of one larger seed has been shown to improve the sensitivity/selectivity trade-off  <cit> , especially for detecting long similarities. on the other hand, new seed models have been proposed, such as spaced seeds  <cit> , seeds with errors  <cit> , or vector seeds  <cit> .

in this paper, we propose further improvements in both those directions. in the first part , we propose a new flexible and efficiently computable hit criterion, called group criterion, combining the advantages of the single-seed  and multi-seed  criteria. in the second part , we propose a new more expressive seed model which extends the spaced seed model of patternhunter  <cit>  by the possibility of distinguishing transition and transversion mismatches. we show that this allows to obtain a further gain in sensitivity on real genomic sequences, usually rich in transition mutations. both proposed improvements have been implemented in yass software  <cit> , used in the experimental part of this work.

RESULTS
group hit criterion
the first preparatory step of most heuristic alignment algorithms consists of constructing a hash table of all seeds occurring in the input sequences. in this section, we assume that a seed of weight k is a word consisting of k contiguous nucleotides , more general notions of seed will be considered in the next section.

in the simplest case, implemented in the early version of blast  <cit> , an individual seed occurring in both sequences acts as a hit of a potential alignment. it triggers the x-drop algorithm trying to extend the seed to a so-called high-scoring segment pair , used then to obtain a larger final alignment. gapped blast  <cit>  proposes a double-seed criterion that defines a hit as two non-overlapping seeds occurring at the same dotplot diagonal within a fixed-size window. this allows to considerably increase the selectivity with respect to the single-seed approach, and at the same time to preserve, and even to improve, the sensitivity on large similarities. on the other hand, gapped blast is less sensitive on short and middle-size similarities of weak score.  most of the existing alignment programs  <cit>  use either a single-seed or a double-seed hit criterion.

here we propose a new flexible hit criterion defining a hit as a group containing an arbitrary number of possibly overlapping seeds, with an additional constraint on the minimal number of matching nucleotides. the seeds of the same group are assumed to belong to the same similarity, and therefore should be proximate to each other. in contrast to other multi-seed hit criteria  <cit> , we don't require seeds to occur at the same dotplot diagonal but at close diagonals, to account for possible indels. the possible placement of seeds is controlled by parameters computed according to statistical models that we describe now.

group criterion
a hit criterion defines a pattern which is considered as an evidence of a potential similarity. every time this pattern is found, its extension is triggered to compute a potential larger alignment. the extension is usually done via a dynamic programming algorithm and is a costly step. the hit criterion should be selective enough to avoid spurious extensions and, on the other hand, should be sensitive to detect as many relevant similarities as possible.

the hit criterion we propose is based on a group of seeds verifying conditions ,  . by the considered statistical analysis, this ensures a good sensitivity. however, many groups will contain a single seed or two strongly overlapping seeds, that either belong to a similarity with a low score, or do not belong to any similarity at all . to cope with this problem, we introduce an additional criterion that selects groups that will be actually extended. the criterion, called group criterion, is based on the group size defined as the minimal number of matching individual nucleotides in all seeds of the group. the group size can be seen as a parameter specifying the maximal overlap of the seeds of a group. for example, if the group size is k +  <dig>  then no constraint on the overlap is imposed, i.e. any group containing two distinct seeds forms a hit. if the group size is 2k, then the group must contain at least two non-overlapping seeds, etc.

allowing overlapping seeds is an important point that brings a flexibility to our method. note that other popular multi-seed methods  <cit>  consider only non-overlapped seeds. allowing overlapped seeds and controlling the overlap with the group size parameter offers a trade-off between a single-seed and a multi-seed strategies. this increases the sensitivity of the usual multi-seed approach without provoking a tangible increase in the number of useless extensions. in the next section, we will provide quantitative measures comparing the sensitivity of the yass group criterion with blast and gapped blast.

some comparative and experimental data
in this section, we adopt the following experimental setup to estimate the sensitivity of the yass group criterion compared to other methods. we first set a match/mismatch scoring system, here fixed to +1/- <dig> . the main assumption is that the sensitivity is estimated as the probability of hitting a random gapless alignments of a fixed score. moreover, to make this model yet more close to reality, only homogeneous alignments are considered, i.e. alignments that don't contain proper sub-alignments of bigger score . for a given alignment length, all homogeneous alignments are assumed to have an equal probability to occur.

in this setting, we computed the hit probability of a single-seed criterion with seed weight  <dig>  and compared it with multi-seed criteria of gapped blast and yass for seed weight  <dig> . for yass, the group size was set to  <dig>  figure  <dig> shows the probability graphs for alignment score  <dig> 

comparing blast and gapped blast, the former is more sensitive on short similarities , while the latter is more sensitive on longer similarities, in which two close non-overlapping runs of  <dig> matches are more likely to occur than one run of  <dig> matches. the yass group criterion combines the advantages of both: it is more sensitive than the single-seed criterion even for short similarities, and than the non-overlapping double-seed criterion for large similarities .

note, however, that for the chosen parameters, the yass criterion is slightly less selective than that of gapped blast as it includes any two non-overlapping seeds but also includes pairs of seeds overlapped by at most  <dig> bp. the selectivity can be estimated by the probability of a hit at a given position in a random uniform bernoulli sequence . for yass, this probability is  <dig> ·10- <dig>  which improves that of blast  by more than ten. for gapped blast, this probability is  <dig> ·10- <dig>  to make an accurate sensitivity comparaison of yass and gapped blast, parameters should be set so that both algorithms have the same selectivity level.

to compare the sensitivity of yass and gapped blast for an equal selectivity level, we chose a parameter configuration such that both algorithms have the same estimated selectivity . this is achieved with seed weight  <dig> for gapped blast and group size  <dig> for yass . in this configuration, and for sequences of score  <dig>  yass turns out to be considerably more sensitive on sequences up to  <dig> bp and is practically as sensitive as gapped blast on longer sequences . at the same time, yass is more time efficient in this case, as gapped blast tends to compute more spurious individual seeds that are not followed by a second hit, which takes a considerable part of the execution time. this is because the yass seed is larger by one nucleotide, and the number of spurious individual seeds computed at the first step is then divided by  <dig> on large sequences.

compared to the single-seed criterion of blast, the yass group criterion is both more selective  and more sensitive for all alignment lengths, as soon as the alignment score is  <dig> or more. if the score becomes smaller, both criteria yield an unacceptably low sensitivity, and the seed weight has then to be decreased to detect those similarities.

finally, we point out another experiment we made to bring more evidence that the group criterion captures a good sensitivity/selectivity trade-off. we monitored the partition of the execution time between the formation of groups and their extension by dynamic programming . it appeared that yass spends approximately equal time on each of the two stages, which gives a good indication that it provides an optimal distribution between the two complementary parts of the work.

generalized seed models
so far, we defined seeds as k-words, i.e. short strings of contiguous nucleotides. recently, it has been understood that using spaced seeds allows to considerably improve the sensitivity. a spaced seed is formed by two words, one from each input sequence, that match at positions specified by a fixed pattern – a word over symbols # and _ interpreted as a match and a don't care symbol respectively. for example, pattern ##_# specifies that the first, second and fourth positions must match and the third one may contain a mismatch.

patternhunter  <cit>  was the first method that used carefully designed spaced seeds to improve the sensitivity of dna local alignment. in  <cit> , spaced seeds have been shown to improve the efficiency of lossless filtration for approximate pattern matching, namely for the problem of detecting all matches of a string of length m with q possible substitution errors -problem). the use of some specific spaced seeds for this problem was proposed earlier in  <cit> . yet earlier, random spaced seeds were used in flash software  <cit>  to cover sequence similarities, and the sensitivity of this approach was recently studied in  <cit> .

the advent of spaced seeds raised new questions: how to choose a good seed for a local alignment algorithm? how to make a precise estimation of the seed goodness, or more generally, of a seed-based local alignment method? in  <cit> , a dynamic programming algorithm was proposed to measure the hit probability of a seed on alignments modeled by a bernoulli model. in the lossless case, an analogous algorithm that allows to test the seed completeness for an -problem was proposed in  <cit> . the algorithm of  <cit>  has been extended in  <cit>  for hidden markov models on order to design spaced seeds for comparing homologous coding regions. another method based on finite automata was proposed in  <cit> . a complementary approach to estimate the seed sensitivity is proposed in  <cit> . papers  <cit>  present a probabilistic analysis of spaced seeds, as well as experimental results based on the bernoulli alignment model.

other extensions of the contiguous seed model have been proposed. blat  <cit>  uses contiguous seeds but allows one error at any of its positions. this strategy is refined in blastz  <cit>  that uses spaced seeds and allows one transition substitution at any of match positions. an extension, proposed in  <cit> , enriches the patternhunter spaced seeds model with a scoring system to define a hit.

here we propose a new transition-constrained seed model. its idea is based on the well-known feature of genomic sequences that transition mutations  occur relatively more often than transversions . while in the uniform bernoulli sequence transitions are twice less frequent than transversions, in real genomic sequences this ratio is often inverted. for example, matrices computed in  <cit>  on mouse and human sequences imply that the transition/transversion rate  is greater than one on average. transitions are much more frequent than transversions in coding sequences, as most of silent mutations are transitions. ti/tv ratio is usually greater for related species, as well as for specific dna .

transition-constrained seeds are defined on the ternary alphabet {#, @, _}, where @ stands for a match or a transition mismatch , and # and _ have the same meaning as for spaced seeds. the weight of a transition-constrained seed is defined as the sum of the number of #'s plus half the number of @'s. this is because a transition carries one bit of information while a match carries two bits.

note that using transition-constrained seeds is perfectly compatible with the group criterion described in section group criterion. the only non-trivial algorithmic issue raised by this combination is how to efficiently compute the group size during the formation of groups out of found seeds. in yass, this is done via a special finite automaton resulting from the preprocessing of the input seed.

transition-constrained seeds for bernoulli alignment model
to estimate the detection capacity of transition-constrained seeds, we first use the bernoulli alignment model, as done in  <cit> . we model a gapless alignment by a bernoulli sequence over the ternary match/transition/transversion alphabet with the match probability  <dig>  and the probabilities of transition/transversion varying according to the ti/tv ratio. the sequence length is set to  <dig>  a typical length of a gapless fragment in dna alignments. we are interested in seed weights between  <dig> and  <dig>  as they represent a good sensitivity/selectivity compromise.

a natural question is the efficiency of transition-constrained seeds depending on the ti/tv ratio. this is shown in figure  <dig>  the left and right plots correspond to the seeds from table  <dig> of weight  <dig> and  <dig> respectively. the plots show that the sensitivity of transition-constrained seeds greatly increases when the ti/tv ratio is over  <dig>  which is typically the case for real genomic sequences.

transition-constrained seeds for markov alignment model
homologous coding sequences, when aligned, usually show a regular distribution of errors due to protein coding constraints. in particular, transitions often occur at the third codon position, as these mutations are almost always silent for the resulting protein. markov models provide a standard modeling tool to capture such local dependencies. in the context of seed design, papers  <cit>  proposed methods to compute the hit probability of spaced seeds with respect to gapless alignments specified by  markov models. to test whether using transition-constrained seeds remains beneficial for alignments specified by markov models, we constructed a markov model of order  <dig> out of a large mixed sample of about  <dig>  <dig> crossed alignments of genomic sequences of distantly related species . the alignments were computed with different seeds of small weight, to avoid a possible bias caused by a specific alignment method. we then designed optimal spaced and transition-constrained seeds of weight 9– <dig> with respect to this markov model. table  <dig> shows the results of this computation providing evidence that transition-constrained seeds increase the sensitivity with respect to this markov model too.

experiments
seed experiments
in order to test the detection performance of transition-constrained seeds on real genomic data, we made experiments on full chromosomic sequences of s. cerevisiae  and neisseria meningitidis . the experiments were made with our yass software  <cit>  that admits user-defined transition-constrained seeds and implements the group criterion described in section group criterion. the experiments used seeds of weight  <dig> and  <dig>  obtained on bernoulli and markov models . the search was done using group size  <dig> and  <dig> respectively for seed weight  <dig> and  <dig> . this means that at least two distinct seeds were required to trigger the extension, with no additional constraint on their overlap, which is equivalent to the double-seed criterion of patternhunter. the scoring system used was +1/- <dig> for match/mismatch and -5/- <dig> for gap opening/extension. both strands of input chromosomes has been processed in each experiment .

for each comparison, we counted the number of computed alignments with e-value smaller than 10- <dig>  table  <dig> reports some typical results of this experiment. they confirm that using transition-constrained seeds does increase the search sensitivity. a side  observation is that, in all tests, the seed designed on the markov model turns out to be more efficient than the one designed on the bernoulli model. note that the similarity search can be further improved by using transition-specific scoring matrices  rather than uniform matches/mismatch matrices, and transition-constrained spaced seeds are more likely to detect alignments highly scored by those matrices.

another advantage of transition-constrained seeds comes from the fact that they are more robust with respect to the gc/at composition bias of the genome. this is because purins and pyrimidins remain balanced in gc- or at-rich genomes, and one match carries less information  than two match-or-transition pairs.

program experiments
a series of comparative tests has been carried out to compare the sensitivity with traditional approaches. several complete bacterial genomes ranging from  <dig> to  <dig> mb have been processed against each other using both yass and the b12seq programs . the tests used the scoring system +1/- <dig> for match/mismatch and -5/- <dig> for gap opening/extension. the threshold e-value for the output was set to  <dig> , and the sequence filtering was disabled. yass was run with its default seed pattern #@#__##__#_##@# of weight  <dig> which provides a good compromise in detecting similarities of both coding and non-coding sequences.

for each test, the number of alignments with e-value less than 10- <dig> found by each program, and the number of exclusive alignments were reported. by "exclusive alignment", we mean every alignment of e-value less than 10- <dig> that does not share a common part  with any alignment found by the other program. to take into account a possible bias caused by splitting alignments into smaller ones , we also computed the total length of exclusive alignments, found by each program.

experiments are summarized in table  <dig> and show that within a generally smaller execution time, yass detects more exclusive similarities that cover about twice the overall length of those found by b12seq. the gain in execution time increases when the sequence length gets larger.

CONCLUSIONS
in this paper, we introduced two independent improvements of hit criteria for dna local alignment. the group criterion, based on statistical dna sequence models, combines the advantages of both single-seed and double-seed criteria. transition-constrained seeds account for specificities of real dna sequences and allow to further increase the search sensitivity with respect to spaced seeds. both options have been implemented in yass software available at .

transition-constrained seeds could be further extended using the idea of vector seeds  <cit> , i.e. by assigning weights to each seed position, but also to each type of mutation. this would give a more general mechanism to account for the information brought by different mutations. but the model is also more flexible, an thus involves a larger search space to design seeds.

another new direction for further improving the efficiency is a simultaneous use of several seed patterns  <cit> , complementing the sensitivity of each other. however, designing such families is also hard problem, due to the involved search space.

