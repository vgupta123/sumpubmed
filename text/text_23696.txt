BACKGROUND
micrornas  are a class of endogenous small ) non-coding rnas that play important roles in the regulation of gene expression. the mirna genes are first transcribed as primary mirnas that are further processed into pre-mirnas by drosha, an rnase iii enzyme . then pre-mirnas are exported to the cytoplasm and processed by dicer, another rnase iii enzyme, to generate a ~22-nt duplex consisting of a mature mirna and its corresponding star mirna  <cit> . finally, the duplex is unwound to give rise to mature mirnas. mature mirna species may be generated from the 5′ and/or 3′ arms of the precursor duplex, and are called mirna-5p and -3p, respectively. the mature mirna is incorporated into a mirna-induced silencing complex , which then binds to the 3′-utr of the target mrna transcript, leading to translational inhibition or mrna degradation.

the significance of mirnas in health and disease is still an unfolding story. a single mirna can regulate hundreds of target mrnas concurrently. importantly, aberrant regulation of mirnas plays a central role in pathological events underlying cancers  <cit>  and neurodegenerative diseases  <cit> . many researchers have demonstrated the potential role of mirnas as non-invasive biomarkers of a variety of diseases . targeting mirnas provides an emerging opportunity to develop effective mirna-based therapy  <cit> . the rising body of advanced preclinical evidence on the biological significance of mir-221/ <dig> in a variety of malignancies indicates that they will play a crucial role in the future of innovative therapeutic strategies, both as validated biomarkers and drug targets  <cit> .

recent advances in next-generation sequencing  technologies have enabled the interrogation of genome-wide mirna expression at high throughput and low cost . deep sequencing of mirna  has provided researchers an opportunity to catalogue the repertoire of mirna expression across various tissues and models and comprehensively study their dysregulation. importantly, mirna profiling by sequencing can better distinguish very similar mirnas compared with other available methods, including microarrays and qpcr panels. the ngs approach is a powerful way of cataloguing mirnas, and has led to an exponential increase in mirbase entries in the last few years  <cit> .

many groups have developed open-source tools for mirna-seq data analysis, including mirtools  <cit> , dsap  <cit> , mirnakey  <cit> , miranalyzer  <cit> , mirdeep <dig>  <cit> , mirexpress  <cit> , uea srna workbench  <cit> , srnatoolbox  <cit> , mirspring  <cit> , imir  <cit> , oasis  <cit> , israp  <cit> , cap-mirseq  <cit> , and mirge  <cit> . these tools differ in the methods and algorithms used for various processing steps such as adapter trimming and sequence alignment. despite the availability of these tools, many bioinformatics challenges remain. on the one hand, a mirna-seq dataset is enriched for small rna species between  <dig> and 23 nt, and short sequence lengths make it more likely that a read maps to a genomic locus or known mirna simply by chance in a large and complex reference genome. on the other hand, a sequence read can map to more than one mirna, and how to deal with multiple mapping reads is still a challenge. this issue becomes more severe when mirna-seq reads derived from multiple precursors are aligned to a reference genome directly. therefore, for accurate mirna quantification, it is especially important to introduce computational strategies to reduce or minimize potentially false mappings.

nearly all mirna-seq data analyses are performed using linux clusters or workstations. however, analysis results in linux are often hard to access for most bench scientists. moreover, analyses of mirna-seq datasets typically generate large amounts of data and a variety of result files that are difficult to interpret. therefore, it is crucially important to organize and share mirna-seq data analysis results in an efficient and user friendly way. interactive web interfaces that allow end users not only to navigate all the quality control  metrics and quantification results, but also to drill down and gain more insights into mirna-seq datasets are thus much preferred.

to address those aforementioned challenges, we implemented a pipeline called quickmirseq to advance accuracy, efficiency, and automation of mirna-seq data analysis to the next level. quickmirseq is, in part, motivated by our development of quickrnaseq  <cit> , an integrated tool for large-scale rna-seq data analyses. quickmirseq reconciles its implementation with the unique nature of mirnas. specifically, we require that quickmirseq would:group mirnas with identical or similar sequences to solve or mitigate the multiple mapping issue of sequencing reads;

be strand-aware, and respect the fact that mirna-seq dataset are intrinsically sense stranded;

implement joint mapping of multiple samples for both computational efficiency and filtering out noisy background reads to improve the reliability of mirna detection and quantification;

remap those sequences with mismatches to known mirnas to the reference genome to further reduce potentially false positives;

quantify the expression levels of both mirnas and isomirs; and

organize results in a user-friendly manner, make them fully accessible via a web interface, and enable end users to interactively digest analysis results in a user friendly manner.




implementation
quickmirseq is designed for quick and accurate quantification of known mirnas and isomirs from large-scale small rna sequencing, and the entire pipeline consists of three main steps , i.e.  database preparation,  quantification and annotation, and  integration and visualization. step # <dig> prepares databases required for step #2; step # <dig> processes the mirna-seq dataset and generates count tables for mirnas and isomirs; and step # <dig> produces an integrated and interactive project report for data analyses. step # <dig> requires to run only once for any given species, and then the databases can be shared by many mirna-seq projects. steps # <dig> and # <dig> are accomplished by perl scripts quickmirseq.pl and quickmirseq-report.pl, respectively.fig.  <dig> overview of the quickmirseq pipeline




step #1: database preparation
this step prepares mirna, hairpin, and small rna and mrna databases for step # <dig>  two scripts were written to automate the entire step . the utility script prepare_smallrna_mrna.sh is used to prepare small rna and mrna databases. it automates the downloading mrna, trna, and small rna database from a variety of public domains, performs cleanup and extraction, and generates bowtie index libraries for small rna and mrna. quickmirseq_build.pl takes a mature mirna and a hairpin sequence database in fasta format as input, and creates modified mirna and hairpin databases for alignment in step # <dig>  the workflow for creating the modified mirna and hairpin databases is depicted in fig. 2a, and the main issues to be addressed are described as follows.fig.  <dig> database preparation. a the flowchart of creation of modified mirna and hairpin database. b mature mirnas with identical sequences. c sequences from a model mirna cluster; i.e., different mirnas mapping  to a region of the same hairpin precursor. d the same pre-mirna gene loci can generate many mirna isoforms, but the most abundant isoform in a particular sample may not necessarily be the one annotated in mirbase. the numbers in the first column represent counts of sequences identical to the sequences in the second column. e a mature mirna can be derived from more than one precursor. f representative entries in a *mirna database. all extended bases are in lower case, while the nucleotides that correspond to mature mirnas are in upper case




all known mature mirnas and hairpins can be downloaded directly from mirbase  <cit> . currently, there are  <dig> precursors and  <dig> mature mirnas  registered in the most recent mirbase release  <dig>  some mature mirna sequences are identical , though derived from different pre-mirna sequences . examples of such mirna sequences are found in the same cluster on human chromosome  <dig>  presumably, a single gene was expanded to form all the other paralogs. the paralogs have maintained the same mature mirna sequence, but their genomic sequences have slowly diverged, potentially leading to alternate functions. therefore, the redundant sequence entries in mirna and hairpin databases are first removed, and only unique sequences are kept. the identical mirna and hairpin groups are listed in additional file 1: table s <dig> and additional file 1: table s <dig>  respectively. next, unique mirnas are mapped to unique hairpins. individual mirna clusters are identified, and then merged into groups if any two clusters share a common mirna member. although mirbase registers hsa-mir-520c-3p, hsa-mir-520b, and hsa-mir-520f-3p as three separate mature mirnas, they are all aligned to the same hairpin precursor in fig. 2c. if the alternative splicing events of 5′ and 3′ end are taken into account, the sequence reads derived from these three mirnas are nearly indistinguishable. in quickmirseq, we group overlapping mature mirnas mapped to the same precursor into individual clusters.

another issue in quantification of mirnas is the presence of isomirs . unfortunately, mirbase annotates only one mature mirna for a given mirna locus, and often the most abundant isomir present in the sample is not necessarily the one annotated in mirbase  <cit> . for instance, the most abundant hsa-mir-30e-5p isoform in fig. 2d is 2 bp longer at the 3′ end than the mirbase annotation. therefore, it is not sufficient to use only annotated mirnas in mirbase as the sole reference for accurate mirna quantification. to capture the entire set of isomir length variants, all the annotated mirna sequences are extended at the 5′ and 3′ ends by adding user specified additional nucleotide bases from their corresponding hairpin precursors. the extended mirnas are used in the sequence alignments.

more than  <dig> mature mirnas are found in two or more hairpin precursors in the human genome  <cit> , and hsa-let-7a-5p is used to exemplify this point . these loci produce identical mature mirnas but often have different nucleotides adjacent to the mature sequence. accordingly, after the 5′ and 3′ end extension, one mature mirnas can generate more than one extended sequence. these extended sequences are combined to represent hsa-let-7a-5p  in the database. it is noted in fig. 2f that the extended nucleotides are in lower case while mature mirna sequences are in upper case. different extended sequences are delimited by either a single “n” if corresponding to the same mature mirnas, or a double “nn” if corresponding to different mature mirnas.

step #2: quantification and annotation
figure 3a outlines the main flowchart for step # <dig>  first, all adapter sequences are trimmed from raw sequencing reads, and then short mirna-seq reads are collapsed into unique reads as illustrated in fig. 3b within and across samples. next, the unique reads are mapped sequentially to the mirna, hairpin, small rna, and mrna sequence databases prepared in step # <dig>  our implementation exploits as many unique features of mirna reads as possible, and a variety of strategies are introduced for computational efficiency and accuracy in quantification. these include collapsing identical reads into unique ones and joint mapping of unique reads across multiple samples , remapping of mirna reads with mismatches to the reference genome to reduce false hits  and taking into account the strand information for more accurate read mapping .fig.  <dig> various strategies introduced in quickmirseq to reduce computational time and to improve accuracy in mirna quantification. a the overview of workflow for mirna-seq data analysis. b collapsing identical reads into unique ones within and across multiple samples. c remapping of mirna reads with mismatches to the reference genome to reduce false hits. d mirnas has-mir-3913-5p and has-mir-3913-3p are generated from the same hairpin precursor and reverse complementary to each other. e genes hsa-mir-374b and hsa-mir-374c are expressed from the same genomic locus in chromosome x but transcribed in opposite directions




a major feature of mirna reads that can be utilized is their high redundancy. therefore, collapsing identical reads into unique ones is advantageous in mirna-seq data analysis because it significantly reduces the number of mirna reads in the alignment step. a step that collapses identical reads has been adopted by mirdeep <dig>  <cit> , mirexpress  <cit> , srnabench  <cit> , mirge  <cit> , and other programs. a mirna-seq study often consists of many samples from different biological conditions. it is expected that the majority of identical mirna reads can be found in most samples of a given dataset. instead of processing individual samples independently, it is more efficient to perform an alignment using the combined unique sequence reads identified across multiple samples .

short reads derived from genomic loci can be mapped to mirnas by chance, especially when mismatches are allowed. therefore, quickmirseq introduces an optional “remapping” step to map those sequences with mismatches to the reference genome to reduce the number of likely false positives . if a mismatch read can be mapped perfectly to the reference genome without any mismatch, its mapping to the mirna will be invalidated. read “a” in fig. 3c is a case in point. the mapping of read “b” is kept because no perfect mapping is found in the reference genome.

in all current small rna sequencing protocols, the adapters are ligated first to the rna molecule, and therefore mirna-seq dataset are intrinsically stranded. however, bowtie  <cit>  by default will attempt to align a sequence read against both the forward and reverse-complement reference strands, and this is problematic as illustrated in fig. 3d and e. as shown in fig. 3d, mature mirna species can be generated from both the 5′ and/or 3′ arms of the same hairpin precursor, and these two mirnas can even be reverse complementary to each other, such as hsa-mir-3913-5p and hsa-mir-3913-3p. in this scenario, reads derived from hsa-mir-3913-5p can be mapped to the reverse-complement strand of hsa-mir-3913-3p, and vice versa. in fig. 3e, hsa-mir-374b and hsa-mir-374c are expressed from the same locus in chromosome x but transcribed in opposite directions. likewise, reads derived from this locus become ambiguous if the strand information is ignored in the alignment step. more mirna pairs that are reverse complementary to each other are listed in additional file 1: table s <dig>  if the strand information is ignored, the accurate quantification becomes problematic for those mirna pairs in additional file 1: table s <dig>  thus, it is crucial to specify “--norc” option to instruct bowtie not attempt to align against the reverse-complement reference strand when analyzing currently sequenced mirna-seq dataset.

the joint mapping procedure was first introduced by mirge  <cit> . quickmirseq not only incorporates this strategy into its alignment step, but also extends it to filter out potentially noisy background reads to improve the reliability of detected mirnas. in our experience, sufficient sequencing depth reveals low expressing mirnas  across many samples, while noisy background reads  are more likely to be seen only in a very small subset of samples. therefore, potentially noisy reads can be identified based on the patterns of their read counts across samples and accordingly filtered out. as we will show later, the filtering of noisy reads barely impacts the total number of mapped mirna reads, but significantly reduces the number of detected mirnas.

previously, each arm of the hairpin precursor mirna is believed to give rise to a single mature product. however, recent advances have revealed that a number of distinct mature mirna species can arise from the same hairpin arm, and thus significantly increase the diversity and complexity of the mirnas. recent additional studies have shown that isomir sequences are tissue and gender-specific  <cit>  and play distinct roles in biological processes  <cit> , which emphasize the importance of performing mirna-seq analysis simultaneously at both the mirna and isomir levels. to this end, the quickmirseq pipeline produces parallel quantification results for mirnas and isomirs. the protocol for isomir quantification is detailed in additional file 1: figure s <dig>  in brief, the 5′ and 3′ end offsets for all mapped reads are identified first. then reads that have identical 5′ and 3′ end offsets are added up to generate an isomir counts table.

quite often, end users are required to make an uninformed choice in advance between inclusion and exclusion of sequences that contain mismatches when analyzing mirna-seq datasets. if end users change their minds, the same dataset have to be re-analyzed. to help end users to make an informed decision afterwards, the quickmirseq pipeline generates companion counts tables in which only sequences with mismatches are counted, in addition to the ‘standard’ counts table for mirna and isomirs. the companion tables serve two purposes. first, they can be used for quality controls and secondly, they offer the end user a choice of using only perfectly matched reads for downstream analysis, eliminating the need to reanalyze the entire dataset. instead, the subtraction of the companion counts table from its ‘standard’ mirna or isomir counterpart provides the necessary information.

step #3: integration and visualization
this step automates the generation of various qc plots and produces an integrated interactive project report. all high-quality plots are ready for powerpoint presentation and scientific publications. from the entry webpage of the project report as shown in fig.  <dig>  a user can easily navigate and visualize analysis results. more importantly, the project report offers interactive visualizations of mirna-seq qc and expression results. the visualization in quickmirseq is implemented by combining cutting edge javascript-based open source visualization libraries, including jquery, d <dig> , canvasxpress, and nozzle  <cit> . jquery simplifies html page traversal, manipulation, event handling, and animation, while d <dig> can manipulate html documents based on input data. nozzle  <cit>  is designed to facilitate summarizing and rapid browsing of complex results in data analysis pipelines when multiple analyses are performed on big datasets. all required javascript libraries have already been packaged into the quickmirseq project report; thus, the report can be digested on a pc locally and deployment into a web server is optional.fig.  <dig> entry page of a project report. the first section provides the summary of reads mapping and annotation for individual samples. the second section shows a variety of key qc metrics, including adapter trimming, detected mirnas and distributions of variation at 5′ and 3′ ends of mirna reads. the third section lists expression values of detected mirnas in each sample, which can be interchangeably shown as either raw counts or rpms on the fly




RESULTS
quickmirseq can analyze mirna-seq datasets from any species as long as the corresponding mature mirna and hairpin databases are available. we selected three datasets gse <dig>  <cit> , gse <dig>  <cit> , and gse <dig>  <cit>  for test runs, corresponding to human, mouse and rat, respectively. all three datasets were generated and deposited into geo between  <dig> and  <dig>  the complete project reports can be downloaded from the quickmirseq project home page . we will use the gse <dig> dataset to highlight important functionalities and features of quickmirseq. all the results presented below, including summaries and qc plots, were generated automatically by the quickmirseq pipeline, and end users are not required to perform any additional analysis steps.

integrated and interactive project report
a screenshot of the entry webpage for the project report is shown in fig.  <dig>  the page consists of three main sections. the first section provides the summary of reads mapping and annotation for individual samples, including the distribution of read lengths, the breakdown of read annotations, and the number of reads falling into mirna, hairpin, small rna, mrna and unaligned categories, respectively. clicking on “qc parallel plot” button will show an integrated and interactive qc plot for linked quality control measurements. the second section shows an array of key qc metrics graphically, including adapter trimming, detected mirnas and distributions of variation at 5′ and 3′ ends of mirna reads. for each qc plot, clicking on the icon image will bring forth the corresponding enlarged plot, and the interactive plot is accessible by clicking the pointing hand. the third section lists expression values of detected mirnas in each sample, which can be interchangeably shown as either raw counts or rpms .

incorporation of strand information gives more accurate quantification
it was demonstrated more accurate quantification is obtained in stranded mrna-seq than in non-stranded mrna-seq  <cit> . to demonstrate the importance of the strand information in mirna quantification, four samples  in the dataset were analyzed by the quickmirseq pipeline with and without incorporation of the strand information in the alignment, and the scatter plots for srr <dig> and srr <dig> are shown in fig. 5a. in comparison, the four samples were also analyzed using mirge  <cit> , and the results are shown in additional file 1: figure s <dig>  the comparison between quickmirseq and mirge is discussed later in a separate section. the majority of mirnas are arrayed along the diagonal line in the scatter plots and their quantification results are either identical or very close. however, there are some mirnas whose quantifications are influenced dramatically by the strand information. additional file 1: table s <dig> lists the top  <dig> mirnas with large differences. to better understand the reasons for the observed large differences, mir-103b and mir-3065-5p were selected for in-depth analysis.fig.  <dig> incorporation of strand information gives more accurate quantification. a scatter plots of mirna quantification results. b,c many reads are wrongly mapped to anti-sense strand of has-mir-103b and has-mir-3065-5p when the stranded information is ignored in mirna-seq quantification. samples srr <dig> and srr <dig> are stranded, but analyzed with and without incorporation of the strand information, respectively




as shown in fig. 5b, the sequence agcagcattgtacagggctatgt has  <dig> copies in srr <dig>  if the strand information is ignored, this read maps equally well to the sense strand of hsa-mir-103a-3p and to the antisense strand of hsa-mir-103b. in fact, the dataset is sense-stranded, and thus the mapping to hsa-mir-103a-3p is true, whereas the alignment to hsa-mir-103b is wrong. fig. 5b shows that ignoring the strand information underestimates the expression of one of the mirnas and overestimates the other. in fig. 5c, a large number of reads were aligned to the antisense strand of hsa-mir-3065-5p; however, these reads would not be mapped if the stranded sequencing protocol was taken into consideration. as a result, the expression of hsa-mir-3065-5p is overestimated due to false mappings. therefore, incorporation of strand information in the alignment step gives rise to more accurate quantification.

benefits of joint mapping and remapping of mismatch reads
for gse <dig>  if each individual sample is processed independently, a total of  <dig> , <dig>  reads need to be aligned, whereas this number drops to  <dig> , <dig> if all  <dig> samples are combined and jointly processed . the benefit of joint mapping becomes increasingly evident as the number of sample increases. the strategy of joint mapping of multiple samples takes advantage of the high redundancy of mirna-seq reads within and across samples, and it significantly reduces computational time. in our hpc cluster, it took bowtie   <dig>  h to align  <dig> million reads to mirbase, and the time would rise to  <dig>  h if mapping all  <dig>  billion raw reads without introducing the strategy of jointing mapping. in the meantime, joint mapping is powerful in filtering out false positives , thereby improving the reliability of the detected mirnas . as depicted in fig. 6b, the filtering of noisy reads barely impacts the total number of mapped mirna reads, but significantly reduces the number of detected mirna, and accordingly, improves the statistical power in downstream differential analysis of mirnas. in fig. 6b, a read is considered noisy if it is absent in more than 60% of the samples, and the average number across samples is less than two. in the quickmirseq pipeline, end users can define the criteria for noisy reads when analyzing their mirna-seq datasets.fig.  <dig> the benefits of joint mapping and “remapping” of mismatch reads. a if individual samples are processed independently, a total of  <dig> , <dig>  sequences need to be aligned. this number drops to  <dig> , <dig> if all  <dig> samples are jointly processed. b the filtering of noisy reads significantly reduces the number of detected mirnas  but barely impacts the total number of mapped mirna reads . a read is filtered out if it has zero counts in more than 60% of samples, or its average count across all samples is below  <dig>  c for unique mismatch reads, the average invalidation rate is  <dig> % ; however, the corresponding average rate is only  <dig> % for all mismatched reads. note the y-axis indicates the percentage of mirna reads that are invalidated in the “remapping” step




the motivation of remapping reads with mismatches to the reference genome is to reduce potential false hits. the impact of “remapping” on mirna reads with mismatches is shown in fig. 6c. the invalidation rate was calculated for all mismatch reads and unique mismatch reads, respectively. for unique mismatch reads, the average invalidation rate was  <dig> % . however, the corresponding average rate was  <dig> % for all mismatch reads. this confirms that the majority of the invalidated reads has low abundance and thus, is most likely to be false positives. clearly, the invalidation rate varies greatly from sample to sample . this “remapping” is implemented as an optional step, although it is recommended for mirna-seq data analyses.

as mentioned in the implementation section, the quickmirseq pipeline separates the mapped reads into two categories: perfect and mismatches, and generates a companion counts table for reads with mismatches only, in addition to the standard counts table. on average, about 12%  mapped reads have mismatches . in general, we recommend that reads with mismatches are included in the quantification step because their exclusion can underestimate mirna expression levels.

comprehensive analysis reports and rich qc metrics
as shown in fig. 3a, adapter-trimmed reads undergo four separate alignments against mirna, hairpin, small rna, and mrna sequences in a sequential manner. after annotation, quickmirseq provides an overview of the distribution of annotated reads in each sample . the relative abundance of annotated reads in each category is sample dependent. usually, only a tiny portion of reads are mapped to hairpins. for high-quality mirna-seq datasets, mirnas should be dominant compared with other annotated categories. furthermore, dividing the total number of reads by the unique number of reads gives rise to the read redundancy in each annotated category . depending on sequencing depth, the redundancy for mirna reads can be as high as several hundred folds, whereas the redundancies of reads in other annotated categories are generally much lower. this feature can be used to identify potential issues in sequencing samples. for example, when we analyzed an in-house cell-free mirna-seq dataset from urine, we found some samples had exceptionally high redundancy in unaligned reads . it turned out that many unaligned reads in those samples resulted from dimerization of primers added during the library preparation step. because the amount of rna in cell-free urine is low, this is more likely to happen than in other sample types. therefore, the redundancy plot  is very helpful in trouble-shooting potential issues arising from difficult samples during library preparation.fig.  <dig> read duplications in each annotated rna category. as expected, the redundancy in mirna reads is typically high, while redundancies in other annotated categories are generally much lower. the sample names from the gse <dig> mirna-seq dataset used in this study are shown along the x-axis




the sequence read length in most mirna-seq datasets that we analyzed was 50 bp, much longer than the typical length of a mirna . all adapter sequences need to be trimmed prior to alignment. after trimming, reads that are shorter than 16 bp are discarded and excluded from further analysis. quickmirseq automatically generates a summary qc report for adapter trimming step . ideally, the percentage of reads with adapter sequences should be close to 100% in a high-quality mirna-seq dataset . the trimmed reads should still be long enough to be kept for alignment, and thus the percentage of reads surviving adapter trimming should also be very high . moreover, a high-quality mirna-seq dataset is expected to have a characteristic read length distribution. for human samples, the length distribution of the trimmed reads should, in principle, be centered on 22 bp. the read length distributions for samples srr <dig>  srr <dig>  srr <dig>  and srr <dig> from gse <dig> are shown in additional file 1: figure s <dig>  the peak is indeed at 22 bp for all four samples, and the overall pattern of length distribution indicates the majority of reads are derived from mirnas. usually, the length distribution is very informative on mirna-seq data quality.

the offsets of all unique reads are first calculated with respect to mirna seed sequences. next, the distribution of offsets is examined and depicted as shown in additional file 1: figure s <dig> . generally speaking, the 5′ end shows a much narrower range  of variations compared with the 3′ end  . of the  <dig> unique reads, only  <dig> reads  have no variation on both the 5′ and 3′ ends . if we examine only one end,  <dig> reads  show 3′ end variations whereas only  <dig> reads  show 5′ end variations. the pattern of distributions shown in additional file 1: figure s <dig> is in accordance with mirna’s biological role and biogenesis. it is believed the first  <dig> nucleotides are crucial for mirna’s binding to its targeted mrnas, and the variation at the 5′ end is therefore functionally more constrained. the larger variability at the 3′ end mainly results from imperfect dicer editing, which either adds additional hairpin nucleotides or shortens the length of the mirna, most commonly at the 3′ end. argonaute crystallographic studies have indicated that the the 3′ ends extend from the paz domain and are therefore susceptible to exonucleolytic cleavage  <cit> , causing 3′ end shortening. moreover, non-templated nucleotide addition to the 3′ end can occur on the mature mirna  <cit> . taken together, it is expected that the 3′ end of mirna displays higher variation than the 5′ end.

rich and interactive visualization features in quickmirseq
the rich interactive features of quickmirseq are partially illustrated in fig.  <dig>  as shown in fig. 8a, mirna expression profiles can be grouped and segregated in real time according to the sample annotations, such as time points, biological conditions and dosage arms. the look and feel of the plot is highly customizable including plot type, font size, color, and position of each box. the alignments of sequence reads with microrna  show details of abundance of isomirs, patterns of 5’ and 3’ offsets, and potential noisy reads. correlation plot can be generated based on user selected micrornas as shown in fig. 8c to explore co-expression patterns. the heatmap shown in fig. 8d is highly interactive. data transformation and hierarchical and k-mean clustering can be performed through user menu. the quickmirseq user guide  has detail instructions on how to explore the analysis results interactively.fig.  <dig> rich interactive visualization features of quickmirseq report. a boxplot of expression values grouped by sample conditions. b alignment details of reads mapped to has-mir-1247-5p. c correlation plot of selected microrna expressions. d heatmap view of multiple microrna expressions in log <dig> scale. note all plots are generated interactively. the demo dataset is from gse64977




quickmirseq versus mirge and other tools
the software mirge is one of the latest tools available for known mirna quantification. it is considerably more computationally efficient than any prior software tools and scales well with large datasets  <cit> . the comparisons for samples srr <dig>  srr <dig>  srr <dig>  and srr <dig> are shown in additional file 1: figure s <dig>  the scatter plots indicate the quantification results are reasonably consistent for most mirnas, but for some mirnas, large differences were observed. the difference mainly results from the fact that mirge ignores strand information when analyzing mirna datasets and that its execution workflow tends to exclude reads with mismatches from quantification, as discussed further in additional file 1: figure s <dig> 

many tools developed in early years are sort of superseded by recent ones. the new tools published in  <dig> and  <dig> included srnatoolbox  <cit> , oasis  <cit> , israp  <cit> , cap-mirseq  <cit>  and mirge  <cit> . the comparison of mirge with srnatoolbox was reported in the mirge paper. oasis is a web based application and does not meet our needs. we installed israp but failed to make it work. cap-mirseq was claimed to be a comprehensive analysis pipeline for microrna sequencing data. in essence, cap-mirseq is a wrapper of mirdeep <dig>  <cit> , and simplifies batch processing of multiple samples. however, in order to process multiple samples in parallel, cap-mirseq requires a sun grid engine cluster. unfortunately, pfizer’s hpc cluster is running lsf. in contrast, quickmirseq does not have special requirements on its execution environment, and can be run in a stand-alone linux workstation or any cluster environment.

bcbio-nextgen also implements a configurable best-practices pipeline for small rna-seq data analysis , including quality controls, adapter trimming, mirna/isomir quantification, other small rna detection, and prediction of new mirnas. the quantification of known small rnas is carried out by seqbuster  <cit> , a bioinformatic tool developed in  <dig>  while the quantification isomirs is done by r script. in contrast, quickmirseq quantifies both known mirnas and isomirs simultaneously. quickmirseq is simple to use, and its implementation blends many useful features from other open source tools. more importantly, quickmirseq makes all analysis results fully accessible via a web interface, and enables end users to visualize them interactively.

discussion
quickmirseq highlights
the analysis of mirna-seq data presents unique challenges. the mirna-seq dataset are intrinsically stranded, and quickmirseq incorporates the strand information in the alignment step for more accurate quantification . compared with mrna-seq, mirna sequences are typically only 19–23 bp in length, and are more likely to be mapped to random sequences throughout the genome. to remedy this situation, quickmirseq introduces joint mapping of multiple samples not only to reduce computational time , but also to filter out potentially false positives  based upon their expression patterns across samples, thereby improving the reliability of the detected mirnas . additionally, quickmirseq introduces the step of remapping reads with mismatches to a reference genome to further reduce the number of false hits . the combined effect of our approaches maximizes the capture of true mirnas and minimizes false assignments. besides, quickmirseq quantifies the expression levels for both mirnas and isomirs simultaneously.

quickmirseq automatically generates a rich set of qc metrics and publication-ready plots and a variety of summary tables . the summary plots on adapter trimming as well as the read length distribution offer concise information on the quality of the raw dataset. after alignment, various plots, including the number of detected mirnas, the distribution of annotated sequences and the read redundancy in each annotated category  can be used to quickly uncover potential sequencing issues in some samples or in the entire dataset, such as primer dimerization or sample preparation failures. the rich visualization features implemented in quickmirseq allow end users to interactively explore the results of mirna-seq data analyses, and to gain more insights into mirna-seq datasets without setting up database and/or server.

quickmirseq is very easy to use. for practical mirna-seq data analysis, a user just needs to prepare run.config, a plain text configuration file that stores project, species, and software-specific parameters, such as the location of database and sequencing files. this run configuration file also improves the reproducibility of mirna-seq data analyses. for the convenience of quickmirseq users, a configuration file template has been provided in the quickmirseq package for easy customization. furthermore, end users have full control of the execution workflow in step # <dig> by enabling or disabling some optional computational analysis steps. step # <dig> does not require any parameters when running the quickmirseq-report.pl script under the results folder.

limitations of the quickmirseq pipeline
quickmirseq is designed for accurate quantification of known mirnas and isomirs. the current version of quickmirseq cannot be used to discover novel mirnas. the counts table generated from quickmirseq provides a starting point for functional analysis and biological interpretation. downstream analyses are usually driven by biological questions and the experimental design, and thus vary from project to project. currently, quickmirseq cannot be used to perform differential expression analysis of mirnas  <cit>  or carry out gene set overrepresentation analysis  <cit> . we attempted to automate differential analysis but realized it is extremely hard to make this step user friendly and universally applicable to any experimental design. some tools like israp  <cit>  and cap-mirseq  <cit>  offer such a functionality, but support only the comparison between two conditions such as “treatment versus control”. a practical microrna-seq study is quite often much more complex. for instance, for biomarker discovery in clinical studies, it’s common to collect specimens at different time points, from different population , from various disease stages or treatment arms , and even from different sources . as a result, the statistical model and covariates for differential analysis can be very complicated. the “treatment versus control” comparison is too simple to be practically used in most mirna-seq data analysis.

another limitation is sample size. quickmirseq collapses sequences into unique sequences, first within and across samples, and then annotates them. all unique reads and their quantification are held in memory; therefore, the number of samples that can be run together is not unlimited. the read counts table is kept in memory, and its size and growth is roughly proportional to the number of unique reads. if the mirna-seq process is clean and the majority of reads are mirnas, the table should not grow significantly as each sample is added. according to our internal test runs, quickmirseq should have no problem in batching  <dig> samples on a linux workstation with 128 gb memory. until now, the majority of mirna-seq datasets deposited into geo have sample sizes much smaller than  <dig>  in case the samples from a large-scale mirna-seq study cannot be processed in one batch by quickmirseq, the large dataset can be divided into multiple chunks for parallel processing.

CONCLUSIONS
we developed quickmirseq, an integrated pipeline for quick and accurate quantification of known mirnas and isomirs by jointly processing multiple samples. its implementation takes advantage of the unique nature of mirnas, and is computationally efficient. a variety of strategies have been introduced to maximize the capture of true mirnas, to minimize false positives, and to improve the reliability of mirna detection and quantification. the user-friendly interactive application makes data exploration and sharing more efficient.

additional files

additional file 1: table s <dig>  human mature mirnas in mirbase release  <dig> with identical sequences. table s <dig>  human hairpins in mirbase release  <dig> with identical sequences. table s <dig>  pairs of mirnas that are reverse complementary to each other in human mirbase release  <dig>  table s <dig>  top  <dig> mirnas with large differences in mirna quantification between stranded and non-stranded mapping modes. table s <dig>  distribution of 5′ and 3′ end offsets of unique mirna reads in gse <dig>  figure s <dig>  top panel: all of the mirnas in the alignment have the same mature sequence , but originate from different genes as evidenced by the differences in the pre-mirna sequences. bottom panel: mirna genes found in a cluster on human chromosome  <dig>  figure s <dig>  protocol of isomir quantification. figure s <dig>  scatter plots of mirna quantification results by mirge for samples srr <dig> srr <dig>  srr <dig> and srr <dig>  the same dataset were analyzed with and without incorporation of the strand information, respectively. figure s <dig>  breakdown of mapped mirna reads into perfect and mismatch categories. figure s <dig>  comprehensive annotation of mirna-seq reads. the summary plot provides an overview of the distribution of annotated reads in all five annotated rna categories for each sample. figure s <dig>  summary report for adapter trimming. figure s <dig>  read length distributions for samples srr <dig>  srr <dig>  srr <dig>  and srr <dig> in the gse <dig> mirna-seq dataset. figure s <dig>  variations at 5′ and 3′ ends of mirna reads. figure s <dig>  the comparison of quickmirseq with mirge. 




abbreviations
isomirsmirna isoforms

miriscmirna-induced silencing complex

mirnamicrorna

ngsnext generation sequencing

ntsnucleotides

qcquality control

