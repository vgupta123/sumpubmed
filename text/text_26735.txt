BACKGROUND
expression microrrays are used in a wide range of applications to simultaneously monitor the relative abundance of thousands of target sequences. a basic requirement of array probes is that of having low reciprocal similarity in order to reduce the likelihood of cross-hybridization effects. on the other hand, the permissible sequence 'dissimilarity' between probes is constrained by the requirement that probes have to share similar temperatures of annealing. this guarantees that all target sequences correctly hybridize with their probes in the same experimental conditions. thus, the optimal array probe design is a trade-off solution between probe tm similarities and probe sequence 'dissimilarities'. as a consequence, the greater the number of probes spotted on the array, the greater the chance of cross-hybridization events occurring. in this case the signal intensity measured by a chip spot carrying a given probe is affected by the unspecific binding of an off-target sequence similar to the target sequence. this effect, if not detected, can result in a number of false positives signals on the array. even in the case of optimal probe design, suboptimal experimental conditions may favor cross-hybridization over specific binding  <cit> . this issue can be particularly relevant for customized microarray designs. in fact, hybridization protocols of standard commercial platforms are optimized and rigorous quality controls are carried out before the microarray platform gets deployed  <cit> . on the contrary, customized arrays are more prone to be affected by cross-hybridization or other issues related to the novel probe design. as a consequence, the set up of ad-hoc quality controls procedures is a crucial pre-requisite to improve data quality. crosshybdetector identifies probes highly similar and checks for 'suspicious' spot intensity patterns based on the outcome of a single microarray experiment. a p-value expressing the likelihood of the pattern occurring by chance is calculated for each probe using monte carlo simulations. in addition, a global 'cross-hybridization quality control' parameter is provided in output and plots are generated which allow a visual overview of the cross-hybridization events in the microarray experiment. here we present the crosshybdetector software and, as a proof of concept, we illustrate two case studies in which the software and the underlying methodology have been successfully applied to detect cross-hybridization events.

implementation
crosshybdetector is implemented as a package within the statistical computing environment r  <cit> . functions of marray and methods r packages are internally utilized and are required by crosshybdetector to work.

data formats
crosshybdetector algorithm uses as input data i) the array probe sequences, ii) the spot intensities and array layout, iii) the spot type information . this information is respectively contained into three separated text files. exemplary analysis and related input files are submitted as  supplemental materials .

algorithm
a cross-hybridization event takes place when a target sequence not only hybridizes to its related spot on the chip, but also 'corrupts' chip spots carrying probes with similar sequences. the degree of the cross-hybridization effect is proportional to the sequence similarity between probes and to the relative abundance of the off-target sequence versus the target sequence. as a consequence, abundant target sequences can generate high signal intensities on their related chip spots as well as 'pushing ahead' the intensity values of spots carrying similar probes. the algorithm implemented in crosshybdetector works as follows:

 <dig>  the probes with the highest intensities are selected as follows: probes with intensities higher than the saturation value  or probes with intensity higher than a z-score threshold . among the two generated probe list, the largest one is selected. these probes are more prone to cause detectable cross-hybridization events on probes with similar sequences. in principle even low abundant targets could cross-hybridize to non specific probes on the chip, but this would have a minor impact on the final readout. for this reason these probes are not considered by default. however, the default threshold values can be modified by the user to extend the analysis to the probes with lower intensities.

 <dig>  each of the selected probes is aligned against all the others. for each pairwise alignment the similarity between sequences is expressed as the smith-waterman  score  <cit> .

among the available measures of pairwise sequence similarity   <cit> , we decided to adopt the sw score. this metric can be rapidly computed and is reported to be highly correlated  with the best univariate predictor of cross-hybridization   <cit> .

in the presence of a particular composition of the probes spotted on the array, alternative methods to compute the pairwise sequence similarity can be easily plugged in.

 <dig>  all the probes similar in sequence to probe i are identified by selecting all the alignments with a Δsw score below a user-defined threshold. Δsw is computed as:

 Δswi,k = swi,i - swi,k 

where swi,i is the score of the alignment of probei vs. probei  and swi,k is the score of the aligment of probei vs probek .

 <dig>  monte carlo simulations: the sum of intensities for each subset of probes selected in  <dig> is compared against the distribution of the sums obtained from the random sampling of an equal number of probes on the array . a p-value is therefore calculated for each subset of probes as the fraction of the random samplings having a sum of intensities higher than the observed value, and corrected for multiple testing using the fdr procedure  <cit> . probe subsets with p-value below a user-defined threshold  are assessed as being composed of probes affected by unspecific binding. these probes are flagged as corrupted. the probe corresponding to the target sequence causing cross-hybridization is instead flagged as corruptor. a corruptor/corrupted probe pair is therefore composed by a corruptor probe with one of its corrupted probes.

the total number of corruptor/corrupted probe pairs reflects the amount of cross-hybridization in the microarray experiment.

output
different types of outputs are generated as results of the analysis :

1) a plot showing for each analyzed probe the p-value resulting from the monte carlo simulation

2) a list of the probes identified as corruptors and their related p-values

3) a list of the probes identified as corrupted and their related p-values

4) a plot showing the spatial distribution of corruptors and corrupted probes on the array

5) a plot showing the ratio versus average intensity values  with corruptors and corrupted probes highlighted in colors .

performance
the analysis of a double channel agilent 22k array  takes about  <dig> min using a pentium  <dig>   <dig> ghz, 1gb ram

a step-by-step description on how to run an exemplary microarray analysis and the output figures is illustrated in supplemental materials .

RESULTS
to validate the software and the related methodology, we have used the crosshybdetector software to analyze independent microarray data sets obtained from two different array layouts, here referred as "phage tag array" and "yeast tag array". in both cases the oligonucleotide probes spotted on the arrays were representing artificially designed "dna barcodes". these types of arrays are largely used in a variety of applications to monitor the respective abundances of dna synthetic sequences  present in different samples  <cit> .

the "phage tag array" dataset is composed of  <dig> previously reported microarray experiments carried out in our laboratory  <cit> . the array layout includes probes complementary to a repertoire of  <dig>  synthetic dna "barcode" sequences and was designed to analyze collection of phage clones tagged with short synthetic dna sequences  <cit> . the "yeast tag array" dataset contains  <dig> microarray generated with in-house synthesized oligonucleotide arrays  <cit> . the array layout includes probes complementary to a collection of  <dig>  different dna barcodes. in this case, it was designed to profile the relative abundances of yeast strains from the yeast knockout  strain collection  <cit> , tagged with short synthetic dna sequences.

the results obtained by applying crosshybdetector to each hybridization experiment of the two data sets  are presented in table  <dig>  in both data sets corruptor and corrupted probes were identified. in the case of the "phage tag array" data set, after the adoption of more stringent conditions to the hybridization and washing protocols, the hybridization experiments affected by cross-hybridization problems decreased from  <dig>  to  <dig> .

the output plots in figure  <dig>  show the results of the crosshybdetector analysis in one experiment affected by cross-hybridization events in each of the two data sets. in panel a, it can be observed that many spots with high intensity values are identified as corruptors and affect a large part of the probes with a fold change greater than two, thus resulting as corrupted.

the complete set of output results can be generated by following the software guidelines provided as supplemental materials .

to further validate the results, we separately run an additional analysis on the probes identified as corrupted in more than 10% of the experiments of each data set.

for each corrupted probe, the correlation with each of its respective corruptors in the different experiments was calculated across the entire data set.

the rationale for this analysis is that any statistically significant correlation observed between two probes of a corruptor/corrupted pair can only be ascribed to cross-hybridization effects as no functional relationship exist between the synthetic sequences monitored in the two experiment settings. results are illustrated in table  <dig>  in both data sets we observed that the average pearson's correlation for the whole set of corruptor/corrupted pairs was significantly higher than the average correlation obtained on an equal number of randomly selected probe pairs . as an example, the correlation between the probes of two corruptor/corrupted pairs, respectively identified in each data set, is shown in figure  <dig> 

these results represent independent confirmation that the probes identified as corrupted in individual experiments by the crosshybdetector were affected by artifactual cross-hybridization effects.

discussion and 
CONCLUSIONS
other methods have been reported that address the problem of cross-hybridization in dna microarray. flikka et al.  <cit>  developed a web-tool for the assessment of the reliability of hybridization signals in different array designs by comparing probe sequences against human, mouse and rat transcript collections. gene candidates for cross-hybridization are selected on the basis of sequence similarity calculated using the blast algorithm  <cit> . as opposed to crosshybdetector, this tool was not conceived as a quality control tool for array hybridization experiments and it does not take into account the hybridization signals derived from specific experiments. a different approach was used by casneuf and collaborators  <cit> . here probe sets affected by off-target hybridization were identified on the basis of positive correlations between sequence similarity and expression across a series of microarray experiments. this approach is similar to the correlation analysis we carried out to validate the results of crosshybdetector. the most important difference between the two methodologies lies in the fact that while casneuf's approach uses an entire data series to identify potential cross-hybridizing probes, crosshybdetector focuses on individual hybridization array experiments.

in this respect, crosshybdetector is mainly a quality control software for single hybridization experiments, conceptually similar to other published tools aiming at the monitoring of different quality parameters such as the 'geographical' bias, the spot replicate concordance, the two-channel correlation  <cit> . other methods also exist, which are aimed at correcting the spot intensities with a model-based approach  <cit>  and therefore with a different purpose than experimental quality control.

crosshybdetector uses both the probe intensity values and the probe sequences to identify potentially 'corrupted' spots. as a consequence, cross-hybridization events that do not cause an intensity increase of the spots carrying similar probe sequences cannot be detected. this has to be considered as an intrinsic limitation due to the 'in-silico' nature of the method and does not affect its general utility.

crosshybdetector can be applied to all arrays where for each individual probe its intensity signal is provided. as a consequence, it can not be applied to affymetrix chips where the intensity values are associated to multiple probes . we envisage crosshybdetector to be extremely useful to quality control experiments performed on customized microarrays. in these particular settings, microarrays are more prone to present issues related to suboptimal probe design and/or experimental conditions.

moreover, being developed as a standard r package, crosshybdetector is well suited to integrating into more complex quality control platforms and automated analysis workflows.

availability and requirements
project name: crosshybdetector

project home page: 

operating systems: the crosshybdetector package can be installed on all the platforms supporting r. these include a wide variety of unix platforms, windows and macos.

programming language: r

license: lgpl

authors' contributions
pu conceived and implemented the method, wrote the code and drafted the manuscript. edr contributed to the conceptualization of the method and wrote the final version of the manuscript. both authors read and approved the final manuscript.

supplementary material
additional file 1
application of crosshybdetector to a microarray experiment. pdf file containing step-by-step instructions on how to run a complete analysis using the crosshybdetector package. the document also includes all the plots produced by the package. input files used in this example are available in additional file  <dig> 

click here for file

 additional file 2
input files used for crosshybdetector exemplary analysis. this zip archive include three files containing i) the array probe sequences, ii) the array spot intensities and array layout, iii) the spot type information .

click here for file

 acknowledgements
we wish to thank paolo monaci and armin lahm for useful discussions and janet clench for the linguistic revision of the text. we also would like to thank the insightful suggestions from anonymous reviewers. this work was supported in part by a grant from ministero dell'istruzione, dell'università e della ricerca.
