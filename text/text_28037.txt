BACKGROUND
networks are complex structures endowed with both statistical and topological properties . biological networks, and protein-protein interaction networks  in particular, require both theory and algorithms to describe complex mechanisms and relationships. ideally, these networks can be assumed to represent snapshots depicted by connectivity maps observed at particular times. through a sequence of such maps, we could verify how the network connectivity changes over time, and thus conceive a topological model for interpreting the dynamics and conducting inference by the built-in predictive power.

when time changes cannot be monitored, the available static pictures limit the potential for global interactome analysis. despite this limitation, there has been a great interest in analyzing topological features of networks in order to cluster proteins into groups, assign functions to uncharacterized proteins, study their similarities, and establish reliability of the interactions. however, due to the impact of relatively low ratios between true and false positives and negatives, it is hard to accomplish those tasks before filtering interactome signals from noise.

notably, comparative method evaluations  have been proposed to extract clusters of densely connected proteins which might indicate protein complexes or functional modules. the meaning of these two entities is distinct in biological terms . we refer to a protein complex  as a molecular machine consisting of multiple proteins  that bind at the same place and time. in contrast, a functional module  represents a set of proteins  that controlor perform a particular cellular function but not necessarily at the same time and place, and thus may not form a macromolecular complex.

however, it is often hard to distinguish between these two structures by relying only on ppin, as in general the analyzed protein interactions do not have temporal and spatial information. nevertheless, since ppin represent undirected binary or weighted graphs, several graph-based inference approaches have been successfully employed to detect modularity. the majority of such approaches evaluate interactome topological features, and typical examples are node degree and clustering coefficient, both based on the levels of connectivity of each node.

both global and local connectivity can be explored by these methods, depending on the kind interactome analysis to be performed. the results may vary, as methods are based on different principles. for instance, the two main contributions to our work come from the application of two algorithms, cfinder  and mcode  <cit> . interestingly, they deal with network modularity through similar topological instruments, but achieve quite different outcomes; therefore, we based our analysis on them, while also evaluating other methods.

in parallel, a substantial heterogeneity of human interactome datasets has been generated depending on the underlying methods of identifying and characterizing protein interactions. besides high-throughput approaches , in particular the curation of literature  and the provision of computational predictions  have allowed for the mapping of the human interactome.

despite the impressive size of ppin produced by the different approaches, their overall coverage remains limited. a general procedure to increase the coverage level is the integration of different interaction maps. however, recent analyses  <cit>  have revealed that the class of integrated ppin may display distinct functional characteristics and topological features. this evidence suggests that the analysis of integrated maps could be compromised by the heterogeneity which is fused into them, ending up with diverging modular maps.

to assess this possibility, we have defined integrated and also individual ppin classes; as the latter have a source-specific characterization, they in turn generate disaggregated interactome datasets. in particular, datasets have been constructed from literature, orthology, and high-throughput experiments in an attempt to assess the variability of the modularity maps caused by the underlying source of interaction data. we have thus retrieved modules by various methods and from each interactome class, including the integrated one, and finally compared them by multiple validations.

a comparative evaluation of human protein interactome classes suggests that a scoring system should be available. we have proposed a confidence scoring method based on several sequential steps. using gene expression data and gene annotation, we assigned initial confidence scores to ppin modules. in order to calibrate the initial scores, information from go http://www.geneontology.org/, mips  was subsequently utilized. overall, the combined use of interactome classes, network clustering methods and additional multiomic sources allows for better characterization of the modularity map, and for an assessment of the influence of integration and disaggregation on the detected and validated modules.

the integrative approach requires specific tools for both analysis and validation, and is based on a qualitative and quantitative representation of a compilation of information from diverse biological sources. specifically, we have focussed on how disaggregated and integrated interactome classes influence and characterize the detected modules. in addition, we addressed two related questions: do clustering algorithms determine modularity maps? to what extent is the overlap or separation of modules induced by inherent data complexity or by capacity of the method to partition the data?

there are limitations in the current practice of interactome modularity detection and representation, and two main factors condition the analysis: the choice of the modularity-finding algorithm, and the choice of the interactome dataset with the related biological sources. in this article we provided evidence that quantifies the existing discrepancies between methods whose performance is comparatively evaluated over different interactome datasets. simultaneous evaluation of both interactome methods and data may provide valuable guidance on the overall interpretability of modularity and likely lead to improved inference methods and models. the paper is organized in such way that module extraction algorithms are first introduced, then the structure of the available datasets is presented, and finally the results of a data integration approach are illustrated.

methods
detection of modularity
following many saccharomyces cerevisiae  ppin studies based on large-scale proteomic data , and concerned with modularity detection, similar analyses have been recently proposed for the human interactome. not surprisingly, the latter presents more challenges and requires many efforts to substantially improve both coverage and accuracy .

modularity is primarily studied to reveal the organization of a protein interactome into its constituent modules, to quantify their level of intra-cohesiveness and cross-communication, and to measure the overall partition quality based on biological grounds. to advance our understanding relatively to all these aspects, we performed extensive comparative analyses of newly compiled and carefully tracked interaction maps derived from the unified human interactome  database  <cit> , which currently houses  <dig>   <dig> distinct interactions between over  <dig>   <dig> unique human proteins. our study of the modular structures inhuman interactome involved two steps: one to compare the retrieved modules obtained from integrated and disaggregated human interactomes, and another to perform biological validation by multiple functional information sets and tissue-based gene expression data.

notably, the inclusion of gene co-expression complies with earlier studies  in which the identification of protein modules was not based on interaction data only. we also believe that there is additional value in gene expression data to indicate the presence of the detected modules in certain tissues, as previous analysis of modular structures in the human protein interactome clearly demonstrated . since gene co-expression and physically interacting proteins tend to be correlated for the human interactome, an integration might increase the reliablity of modules detected by computational algorithms. thus, we performed a proteome-wide integration of expression and interaction data to assess the quality of the retrieved modules, which our results showed to be highly useful as an approach to the integration of complementary interaction maps.

in interaction maps, modules  represent densely connected sub-structures whose functions might be of biological relevance  <cit> . they recur frequently and with variable size in protein interactomes. several detection methods  <cit>  have been proposed to identify modules based on different principles, but with the common shortcoming of achieving only a limited resolution spectrum  when applied to large networks .

interestingly, while the modules are expected to represent highly related functions, it has been observed  <cit>  that known pathways in metabolic networks do not correspond to top-scoring modules, as large pathways are composed of smaller units which are mixtures of sub-structures associated to different pathways. the same considerations may hold for more general protein pathways where hub-like proteins  are usually essential  in the network and maintain sparse links between different modules, while other protein regulators characterize modules of smaller size. since protein interactomes usually show heterogeneity in their module distribution with regard to size, we elucidated this aspect in the next section, in relation to both methods and interactome data.

proposed algorithms
a novel aspect of our study is the comparative analysis of interactome aggregation and disaggregation effects. for the comparison, we first assembled three different human ppin solely derived by manually-curated interactions from the literature , by computationally predicted interactions using orthology , and by high-throughput protein interactions . finally, we fused them to an integrated dataset referred as int-pi .

in order to extract the modules , we applied two different network clustering algorithms, c finder and mcode, to all the disaggregated and the integrated datasets, and then compared the retrieved modules. these two deterministic methods are topology-based and centered on 'cliques' as the reference entities to identify modules. therefore, they both depend on local node-connectivity due to the definition of clique, i.e. a maximally connected graph or an induced sub-graph which is a complete graph, or equivalently a graph with every pair of distinct nodes connected by a link. in contrast, both algorithms differ considerably with regard to their computational implementation strategies . we considered the deterministic definitions of cohesive subgraphs from both mcode and cfinder as possible ways to explore the degree of separation versus overlapping of protein groups through their complex underlying clique structure.

summary of cfinder, mcode, maxmod and walktrap modules for unihi datasets.

we have then applied a third method  <cit>  to our datasets. q-modularity, whose maximization is here addressed as the maxmod approach, aims at partitioning a network in modules that emphasize deviations from purely random dynamics. in particular, for a partition in n modules, with eij establishing links between modules mi and mj , and given ei = ∑jeij and tr = ∑ieij , the modularity function can be formulated  as follows:   

thus, q associates proportions of links within each module with proportions of all links ; equivalently, it compares observed modular to inherently non-modular network architectures. intuitively, a good modular partition would lead to high values for the trace, and q would approach 1; vice versa, a large presence of random links between nodes  would make q approaching  <dig>  in general, a modular partition shows dense intra-modular links and sparse inter-modular links. equivalently, the detected modularity structure presents a few local maxima capturing the most relevant information of the internal network organization.

maxmod leverages on a greedy optimization algorithm that starts by modules of one element, i.e. each node, and iterates a merging process designed to join the module pair whose amalgamation creates the largest modularity increase . as said, the optimization function is defined to be zero in one case, when the fraction of within-module links is equal to what we would expect for a randomized network of equivalent size. otherwise, non-zero values indicate deviation from randomness .

we note that the induced sparsity implies a poor identification power with regard to the resolution spectrum, especially for small and intermediate module sizes. due to the retrieval of coarse resolution modules, whose large sizes depend on incremental merging of small modules, a weakness of the maxmod approach concerns its possible interpretation in biological applications. in addition, more reasons of concern exist with reference to methodological aspects. first, more than one partition could reach the maximal modularity . second, the modularity definition could reveal only some groups . third, as modularity calculation is sensitive to noise, an optimal partition may not be achieved. consequently, the maxmod sub-optimality effect of limiting the coverage for the network resolution spectrum requires investigation when all module sizes may in principle count.

then, we extended the analysis to a random walk  search, and thus considered a stochastic optimization approach centered on the definition of a distance that measures structural similarity between nodes. we have thus applied the walktrap algorithm  <cit> , freely available in the igraph r package, in order to know whether a resolution refinement is possible in the modularity structure by allowing more chances of escaping from high-density regions. rw introduces probabilistic elements in the hierarchical scheme underlying most of the algorithms, and can be compared with the previous algorithms.

since our two benchmark methods rank their outputs according to an internal scoring system, we selected only highly ranked sub-networks for further investigation . specifically, we refer to  <dig> groups from cfinder's results , and to  <dig> groups from mcode's results .

we also considered network inference aspects involving protection against random effects, such as design of randomization schemes and generation of possible null models. the matter is still controversial  <cit> , and in our study we present distinct interactome data and methods that prevent from conceiving a unified scheme, but some remarks are as follows.

mcode was designed and tested to be robust; for instance, it was shown in  <cit>  that large-scale and noisy experimentally derived interactions do not remarkably affect the prediction of complexes by mcode, while  <cit>  referred to increased robustness compared to other methods in terms of negative control and unassigned nodes.

as for cfinder, the randomization effects have been evaluated on a large set of generated random networks  <cit> , in particular on homogeneous scale-free networks. the results indicated that the observed number of k-cliques  is indeed highly significant, while for small-sized communities there is an increased chance of results that become close to random outcomes.

consequently, the retrieved number of cfinder communities may be indeed overestimated, likewise the real distance between the extremes  of the resolution scale emphasized by the distribution of module sizes. in turn, such evidence justifies our approach based on thresholding. moreover, recent results  <cit>  suggest that both algorithms and datasets should be considered in order to establish acceptable solutions such as hierarchies of null models.

confidence scoring
following an original approach  <cit>  previously proposed for an integrated interactome analyzed by cfinder, we have combined the module id extracted from each disaggregated interactome with the variables listed and described in table  <dig>  and with the compendium of gene co-expression measurements generated from the human gene atlas data source http://biogps.gnf.org. since we do not focus in our study on a particular tissue, we have chosen to utilize a compendium of gene expression profiles comprising a large number of tissues and generated on a single platform to minimize experimental variability.

with regard to the human gene expression atlas dataset, the available link is at http://biogps.gnf.org

the term "co-annotation" refers to the similarity of go annotation of interacting proteins, based on a comparison of the associated go graphs. the size of the intersection of the graphs divided by the size of their union was used as a similarity measure. the implementation of the variable selection method is elucidated in table  <dig>  where go annotation results are presented for some modules selected by mcode and cfinder. in particular, we have combined the variable selection approach with a scoring procedure based on thresholding in order to assign confidence measures to the modules .

go-based annotation results of cfinder andmcode modules: high , medium , and low  confidence groups.

based on the last three average quantities listed as mf.mean, bp.mean, cc.mean, we have made an even finer selection by retaining only the modules with mf.mean, bp.mean and cc.mean values ≧  <dig> , our thresh old . we call them high confidence modules. according to  <cit> , two interacting proteins must be close to each other in a permanent or transient manner; proteins in the same complex should be localized at the same cellular compartment, while the non-interacting proteins should likely be just transient, if not spuriously present . thus, co-localization explains our rationale for keeping cc.mean ≧  <dig> . similarly, we apply the same numeric threshold for the other two go categories, in order to characterize the functional association strength of each module.

correspondingly, we have defined medium confidence and low confidence modules according to two criteria. first, at least two over three go thresholds  had to be satisfied. second, modules satisfying an expression correlation threshold, i.e. cor.mean ≧  <dig> , retained a medium confidence level, while modules with cor.mean <  <dig>  were assigned a low confidence level . calibration consists of three main steps aimed at refining the described scoring system, and the corresponding confidence levels assigned to modules. as a first step, we proceeded through go annotation by ranking modules according to computed fdr-corrected p-values  in order to assess the pre-assigned confidence levels .

as a second step, we considered annotated complexes to measure the overlap scores . we mapped every selected module over both mips and reactome domains to exploit more coverage .

finally, we looked at pathway enrichment through p-values  and performed a qualitative evaluation aimed to characterize each module according to inherently cohesive  versus cross-talk  dynamics. a very interesting aspect to investigate is indeed a characterization for more than just sparsely interacting cohesive modules, as the latter may be heavily involved in cross-talks according to 'connector groups'  <cit> , i.e. involved in the same connecting functional role by showing a variable degree of cohesiveness.

a final remark is with regard to the assignment of our confidence scores and concerns the influence of thresholding. in particular, our results are in part sensitive to the selected fixed thresholds . repeated testing  has suggested the best possible threshold choice from the available data. another consideration is about the whole sequence of steps required to implement our multilayer approach, which reflects the scoring system in terms of validation sources. we have added pathway to other go-based inference and mips analysis in order to validate our modules, and emphasize their permanent versus transient characterization. last, by casting this framework in a protein pathway context, we could compare the detected modules with pre-assigned confidence scores against other multiple validation approaches .

algorithm performance measures
precision and recall  <cit>  are two well-known measures to test the performance of algorithms. in eq.  context, precision refers to the predicted interacting pairs that match true positives, recall refers to interacting pairs identified by the algorithm out of all the possible known ones. we report both precision and recall formulas , given tp as the true positives, fp as the false positives, and fn as the false negatives, as follows:   

then, we report in eq.  precision and recall computed again for both the methods, but this time across the modules in each dataset . thus, mm and pm represent the significantly matched and the predicted modules, respectively, while mc and kc represent the well matched and the known mips complexes, respectively. following  <cit> , it is important to note that mm  is not necessarily equal to mc , because the same complex can be reflected by multiple detected modules. we have reported in detail evidence for the numerous well-studied complexes detected by clustering methods.   

RESULTS
given the list of methodological steps previously described, we first report numerical outcomes and then proceed with the assessment of our results based on each performed validation.

numerical evidence
the retrieved modules indicate that cfinder has identified  <dig> modules , which are mostly based on 3- and 4- cliques . mcode has instead generated  <dig> modules . results for varying ranges of k have also been reported for both methods, and the algorithmic details and parameters explained in materials and methods of the appendix.

although not exhaustive, this comparative evaluation is useful to define the inherent resolution power of each method, and elucidate the specific modularity associated to each interactome class. the modules result dependent on both methods and data, and can be compared in terms of resolution and distributional aspects. in particular, mcode and cfinder represent quite far extremes in the resolution range allowed by the examined data, while both greedy and stochastic learning approaches stand in between these extremes and thus depict only intermediate modularity maps.

consequently, we have corroborated the analysis by investigating the resolution at which the modules are detected by each method and each dataset . with regard to the number of retrieved modules in each interactome class, maxmod converges to mcode , probably due to the underlying hierarchical structure present in both schemes. the inherent modularity can remain partially latent when the maxmod method is applied to protein interactions. thus, a small number of final modules can be found, but mainly due to the module merging effects rather than biological structure. as a result, more sparsity implies lack of detection power for small and intermediate module sizes, whose overlaps are instead observed with cfinder.

we have then provided evidence for the distribution of module sizes by the histograms obtained from the frequency with which each module size appears. as a result of its overlapping structure, cfinder covers the interactome resolution spectrum of module sizes to the highest degree, thus exploring more extensively the inherent module heterogeneity. through a rw-based search, a distributional change can be observed, but we still found that the resolution spectrum remained comprised between those of mcode and cfinder. furthermore, in figure  <dig> we have combined the resolution evidence for both the int-pi and the lit-pi datasets with the corresponding power laws, given that from x drawn from a certain probability distribution p, a power law is observed when p ∝ x-α with α the scaling parameter  <cit> .

multilayer validation
pathway analysis
an important outcome of our multilayer approach is the possibility of analyzing each protein module based on a grid of confidence levels. one step is designed to use the kegg pathway database  <cit> , which has been interrogated by queries of proteins from each extracted module and then annotated to a specific pathway .

znrd <dig> polr1d
polr2c polr2e polr <dig> h polr2l
znrd <dig> polr <dig> d polr2e polr2f
psma <dig> psma <dig> psmb1
taf <dig> taf <dig> taf <dig> taf10
taf <dig> taf <dig> taf7
taf <dig> taf <dig> taf <dig> taf10
hsa <dig> rna degradation
hsa <dig> regulation of actin cytoskeleton
hsa <dig> insulin signaling pathway
pathways results for cfinder and mcode high, medium and low confidence modules . see also: figure 9- <dig> 

with cfinder, high confidence modules have identified in most cases the same hsa <dig> pathway, thus behaving similarly across the different datasets. the same occurs for the hsa <dig> pathway in both mcode's and cfinder's low confidence modules.

overall, a quite strong pathway characterization is found for the different confidence levels, with some differences: the effect is more method-dependent for the high confidence cases, thus the variation occurs across the datasets, and to a larger extent compared to the low confidence case.

disaggregated datasets lead to an evaluation of both intra-dependence and inter-dependence relationships which can arise within and between the datasets, respectively. intra-dependence addresses specific structural features and biases characterizing each dataset, i.e. types of correlation of an endogenous nature. inter-dependence addresses overlaps or redundancies among different datasets, which are of relevance in addition to their distinct information contents.

similarly, even if in relation to another scale, binary interactions have been considered either intra-complex, i.e. occurring within protein complexes, or non intra-complex, because not found to belong to one of them in particular. the latter category naturally links to transient interactions, while permanent interactions are typically intra-complex dynamics. we have presented examples of permanent and transient modules, after analyzing protein complexes and how the retrieved modules could map to them.

functional annotation by gene ontology
we have carried out go annotation in order to identify complexes that account for both biological process  and cellular component , and reported the complete annotation for both methods in figure  <dig> and figure  <dig> 

go-based biological process annotation results for cfinder and mcode high, medium and low confidence modules. marked with a symbol  are modules with the same annotation; identical results across the two methods are in bold font. p-values are described in additional files  <dig> and  <dig>  cluster frequency indicates, for a given module, the number of genes annotated over the number of all included genes.

polr <dig> h polr1a polr3g polr3a polr2f polr3c polr1a polr3g
psmc <dig> psmd <dig> psma1
psmd <dig> psmd <dig> psmc <dig> psmc2
psmc <dig> psmd <dig> psma1
go-based cellular component annotation results for cfinder and mcode high, medium and low confidence modules. marked with a symbol  are modules with the same annotation; identical results across the two methods are in bold font. p-values are described in additional files  <dig> and  <dig>  cluster frequency indicates, for a given module, the number of genes annotated over the number of all included genes.

our annotation emphasizes the inherent modularity in the available datasets, as shown by mapping the extracted modules to known complexes. the int-pi dataset overlaps sometimes with the lit-pi and the ortho-pi datasets, but also extracts modules which are uniquely detected .

some examples are: int- <dig>  which overlaps with lit- <dig> ; int- <dig>  which overlaps with ortho- <dig> ; int- <dig>  which overlaps with ortho- <dig> . in other cases the int-pi dataset extracts non-overlapping modules, such as int- <dig> , or int- <dig> .

by comparison of the disaggregated datasets with the int-pi dataset, we have identified some non-overlapping modules, such as lit- <dig>  or lit- <dig> . this is evident especially in the high confidence modules.

with the mcode method we have selected only one int-pi module, int- <dig> which overlaps with ortho- <dig>  in disaggregated datasets, overlapping lit- <dig> and ortho- <dig>  modules are extracted.

overall, the extraction of overlapping modules int- <dig> and lit- <dig> with cfinder, and lit- <dig> and ortho- <dig> with mcode) involved the transcription factor tfiid complex, while other cases  involved copi vesicle coat. however, separated complexes were retrieved as well.

mips mapping
after kegg and go annotations, we have validated our modules  by mapping them to known complexes in mips  <cit> . such step delivers comparative algorithmic performance across different interactome classes.

cfinder
mcode
precision and recall values for each module selected from each dataset with various confidence levels. modules without indicated confidence level have been successively recovered. p-values described in additional files  <dig> and  <dig> 

a first examination showed that cfinder could extract modules that map to different sub-units of large complexes. for instance, the rna polymerase complex  which is located in the nucleus, has dna-directed rna polymerase activity, and is composed of rna polymerase i for the synthesis of rrna 28s,  <dig> s e 18s, then rna polymerase ii for the synthesis of mrna, and rna polymerase iii for the synthesis of trna, rrna 5s, snrna and scrna. last, the proteasome complex , with proteolitic activity, is composed of one central unit 20s and two caps  <dig> s.

instead, mcode could extract modules that map to specific complexes such as the mediator complex lit- <dig> low confidence), a multiprotein complex that functions as a transcriptional co-activator, or the mrp complex , a ribonucleoprotein complex that performs the first cleavage in rrna transcript processing, and is also involved in mitochondrial rna processing.

precision versus recall
while precision addresses exactness or accuracy, recall addresses completeness. we computed these measures twice, and for each predicted module, in order to emphasize modules showing sufficient density in terms of proteins. notably, this has been done for all the modules selected according to confidence scoring within the specific interactome classes. the values reported in table  <dig> have been calculated for the lit-pi, the int-pi and the ortho-pi datasets, according to cfinder and mcode.

therefore, we represented the protein complexes showing a good match module-wise, which thus involved the examination of each interactome class. in particular, the complexes could be deemed well matched when at least a  <dig>  frequency matching threshold was reached .

then, precision and recall were computed protein-wise by each interactome class, but the tp were proteins in the predicted modules matching proteins in mips complexes, the fp were proteins in the predicted module not matching proteins in mips complexes, and the fn were proteins in mips complexes with no reference in the predicted module.

permanent versus transient modules
next, we have considered classification of the extracted modules in both permanent and transient protein associations, and have then established the protein pathway context within which this dichotomy occurs for some of the cases under study.

literature on yeast protein complexes  has shown relationship of protein-protein interactions with mrna expression levels, with consequent characterization of permanent versus transient complexes. we have referred to permanent and transient complexes by our approach too: while the former are maintained throughout the cell cycle and most conditions, the latter do not consistently maintain their interactions, and are involved in part of the cell cycle or in just some cellular states.

in our examples, it is through the impact of each method at the three confidence levels and across the various data types that we have assessed the co-expression scores to distinguish between complexes. we measured the correlation mean values for the mapped modules, which were also annotated in kegg.

similarly to the results obtained for yeast, the modules matching the proteasome and ribosome complexes  can be identified as permanent complexes, and the modules matching the transcription factors complexes  as transient complexes.

regarding the methods, cfinder is more redundant than mcode , but they include permanent and transient modules. correspondingly, a combination of dynamic and static components had been observed in the sixty protein modules found to vary with the yeast cell cycle in  <cit> .

in particular, for the rna polymerase complex we have observed two different expression scores: in one case we found a high score in favor of a permanent complex, while in two other cases the scores were low, in favor of transient complexes.

a look at protein pathways
modules can be more or less cohesive, but their relevance must be seen in relation to the degree at which they communicate, particularly at the pathway scale. we have compared our confidence scoring approach with that of string  <cit> , which investigates functional protein association networks. thus, we have queried string with the extracted modules to assess the quality of validation relatively to our approach.

in particular, the concept of evidence in string implies the recourse to many different biological sources to validate the interactions, similarly to what we have done with disaggregation. therefore, a few evidence categories  have been comparatively assessed in relation to our disaggregated data.

pathway information has been evaluated too, from the database evidence in string and from our own integrative analysis. we cast our confidence levels within the string pathway framework based on as coring procedure which assigns a predicted value to each possible link between enzymes in metabolic maps from the kegg db.

comparisons for two datasets are reported in figure  <dig> and figure  <dig>  where int-pi and lit-pi are analyzed by multiple evidences. we have also introduced, for each case, pathway information through database evidence. the corresponding plots with reduced evidences have also been reported . as a benchmark for comparison, we have marked with bullets the proteins identified by our approach in each string-based module. we emphasize three main aspects of our outcomes:

 <dig>  int-pi and lit-pi datasets. we found that some modules, such as int- <dig> and lit- <dig> from cfinder and lit- <dig> from mcode, and all referring to transcription factors, together with int- <dig> and lit- <dig> from cfinder related to chromatin remodelling, were in agreement between the approaches. some modules were uniquely validated in the lit dataset, such as lit- <dig>  from cfinder, lit- <dig>  from cfinder, lit- <dig> , from cfinder and mcode, respectively. we found from int two distinct modules, int- <dig>  from cfinder, and int- <dig>  from cfinder that corresponds to int- <dig> from mcode. last, we noticed that the rna polymerase complex is richer in terms of evidences in the int-pi dataset.

 <dig>  incorporating pathways. when the database evidence is included, transcription factors in both the int-pi and the lit-pi datasets resulted denser and linked to rna polymerase. also, we found that the cross-links between some modules  related to chromatin remodelling were reinforced. last, the analysis of the int-pi dataset confirmed these outcomes.

 <dig>  matched annotation. overall, we have found only to a marginal extent the presence of isolated nodes that remained non-annotated, while most modules  matched very well with string evidences. by comparing our confidence scoring scheme with string confidence levels, we noticed that for the int-pi dataset there is a strong match, with just one case of mismatch for int- <dig> from cfinder. for the lit-pi dataset we found the same strong match, and just two cases of mismatch for lit- <dig> from mcode, and lit- <dig> from cfinder.

scoring calibration
we verified  that modules ranking at the top  <dig> positions confirmed after calibration their pre-assigned confidence levels . we could thus conclude that the initial scoring system was quite robust, but could be refined by calibration through multiple validations. with regard to the interactome classes, we observed that the top  <dig> ranks involved equally all the classes , and with marginal prevalence for int-pi in cfinder and for ortho-pi in mcode.

we found that the best overlap scores were uniformly distributed among modules according to their pre-assigned confidence levels, while interactome classes had an impact depending on the method. on average, for cfinder the lit-pi modules scored  <dig>  -  <dig>  , while the other two classes scored  <dig>  -  <dig> , and for mcode the int-pi scored around  <dig>   and the other two classes scored  <dig>  -  <dig> , with lit-pi closer to the higher limit. overall, we found evidence confirming the goodness of our initially assigned confidence levels, and additionally observed method's sensitivity when averaging overlap scores over interactome classes.

in examining the fdr-corrected p-values in pathways, we noticed that just a few cases could be quantified, while we observed that the participation degree of each module to intra-modular or inter-modular dynamics was clearly induced by the methods. cfinder determined evidence of cross-talks in several cases and with both dense and sparse modules, but regardless the interactome class or the pre-assigned confidence levels. mcode instead showed only for the lit-pi class evidence of inter-modularity through dense modules, while ortho-pi appeared just cohesive.

the calibration approach applied to the initial scoring system provided therefore additional evidence by looking at go p-values, but also at overlap scores and pathway analysis, which were not previously included. in particular, the analysis across the interactome classes revealed dependence on methods of the overlap scores , and of both intra-modular and inter-modular dynamics . it is the sparsity degreee of modular maps produced by the methods which suggests how to interpret these findings. mcode allows for a coarse simplified analysis of cross-talks compared to cfinder, and emphasizes the relevance of interactome classes in particular. instead, the presence of high overlapping degree in cfinder appears to mask the differential impact of classes. thus, based on the resolution spectrum allowed by the modularity method and depending on the induced sparsity of the map, the interactome classes may have a relevant or a marginal role.

confidence schemes  usually address the problem of selecting reliable interactions by intersecting multiple high-throughput data  sets. weights can be assigned to the interactions, and they represent confidence levels that rank the proteins by their likelihood of belonging to a certain annotated complex or functional module. estimates of the chance that a protein-target set association exists are in general obtained as the fraction of sampled networks that include a path connecting the candidate protein to the set.

in general, the confidence level thus reflects a belief about the likelihood of a biological module. in particular, determining confidence for protein interactions depends on assigning a reliability measure to the observed measurements, or to predictions. thus, confidence scores are formulated according to the type of experiment, or according to a combination of features like functional similarity, expression correlation, co-essentiality, over which the predictions have been formed.

our scoring approach is semi-quantitative, and calibrates confidence measures obtained by thresholding through validations conducted across multiple biological sources. as a result of filtering interactions and modules by confidence levels, the heterogeneity of modularity maps that depends on both methods and interactome datasets may be reduced according to a better control of the uncertainty levels. for instance, the suggested scoring yields an empty mcode medium confidence module set, while the noisier htp modules are missing.

CONCLUSIONS
we have applied popular graph mining methods, in particular cfinder and mcode, to different classes of human protein interactomes, and extensively evaluated their induced modularity maps. both mcode and cfinder are deterministic methods based on node connectivity and cliquishness. we have then validated the extracted modules by integrating the annotation of known mips complexes, go categories and pathways. the proposed multilayer analysis has thus involved protein pathway explorations through modules with assigned confidence measures.

we have achieved three main results. first, by verifying that interactome disaggregation reveals useful information on modularity, we emphasized the fact that in some cases annotation can be performed with no reference to the integrated dataset, which is usually the starting point of most analysis.

second, our approach defines a scoring mechanism from protein interactions to modules which might lead to a novel network design because the scoring is usually performed at the beginning, for instance at the experimental phase, and not a posteriori  as we suggest. notably, this leads to a network calibration strategy aimed to possibly shift an un weighted network to a weighted one through biological validation evidences that are incrementally evaluated and combined.

assigning confidence scores computationally and not at the experimental stage allows the application of a large variety of possible schemes. here, we pursued a simple data-driven approach corroborated by multiple validations instead of a more complex model-oriented approach. our choice offers the advantage that it does not assume a specified model for the data with its implicit risks, but can be adapted to the quality of interaction data derived from experiments, databases or computational predictions. this simple procedure turned out to be an effective strategy that might help to improve the reliability of ppin.

last, as we have implemented an approach for combining protein interactions with gene expressions, we have found modules which are more consistent than those obtained by using only the topology of the network itself, and then refined their validation with reference to permanent versus transient modules, together with other proposals . future work is going to be devoted to further calibration of the thresholding step in a data-adaptive way, and to tune it to a better elucidation of the interaction-expression interplay.

regarding the initial questions, the main issue is about the influence of data integration and/or disaggregation on modules. from a quantitative standpoint, we demonstrated that protein complex detection benefits from interactome disaggregation. we have reported evidence of well-defined modules which have been distinctly detected within disaggregated datasets, and have compared our approach with string through its variety of evidences accounting for different information sources.

we presented examples where our class separation was matched by comparable evidences leading thus to similar validation performance under both the int-pi and lit-pi datasets. inference on the qualitative characterization of the various different modules indicates replication effects in cfinder, i.e. two disaggregated datasets appear similarly informative, and nesting effects in mcode, i.e. similar biological evidence persists at both the integrated and the disaggregated levels. this outcome might depend only in part on the number of modules that each method is producing; thus, their structural features  seem to reasonably explain the different performances.

another question referred to modularity dependence on algorithms. overall, we noted that mcode produced less modules than cfinder in every dataset which was considered. in particular, mcode has generated only a few modules , thus tending to perform sub-optimally with regard to the global resolution at which the interaction dynamics occur. instead, the module overlapping evidence by cfinder has been more emphasized , despite substantial module specificity in the disaggregated interactomes. the related distributional aspects have been also examined by inspection of the resolution of module sizes and their associated power laws.

then, we have explored module overlapping and separation effects, and their data-driven or method-driven nature. together with mcode and cfinder, which effectively represent coarse-to-fine coverage of modularity maps, we have implemented a deterministic method  and a stochastic algorithm  to allow for variation of the resolution spectrum. the results ranged from a minimum of  <dig> modules by maxmod and  <dig> modules by walktrap for htp-pi, to a maximum of  <dig> modules by maxmod for ortho-pi and  <dig> modules by walktrap for int-pi). overall, the insertion of both greedy and stochastic learning features allowed a reduction of the resolution distance exhibited by the previous methods, but performed  more similarly to mcode, thus still inducing sparsity to a certain extent.

overall, despite some kind of sparsity-redundancy trade-off that is inherent to the module extraction method, protein complexes can be distinctly characterized based on disaggregated interactomes. a closer look at the interactomes is thus recommended, as protein associations may find stronger or weaker justification in relation to the specific sources used to measure them and build the datasets. the proposed multilayer approach offers insights on how the specific interactome datasets may determine the performance of modularity detection algorithms, and suggests strategies to refine their biological validation.

list of abbreviations
we used the following abbreviations: ppin: protein-protein interaction networks; maxmod: maximization of modularity; lit-pi: literature-based interactome; ortho-pi: orthology-based interactome; htp-pi: high-throughput interactome; int-pi: integrated interactome; rw: random walk.

authors' contributions
em conducted method and algorithm implementation, with data analysis . at performed biological validation, module characterization and graphical representation. gc and mf designed variable selection method based on gene co-expression and built unihi db. ec conceived confidence scoring approach, methodological analysis, organized and wrote the paper. every author contributed to writing parts of the manuscript, and then approved the final draft.

appendix
materials and methods
residual modules
go-based annotation results for cfinder modules. values in bold font are above the  <dig>  threshold. the listed groups have passed less than three thresholds, and thus received a low score.

go-based annotation results for mcode modules. values in bold font are above the  <dig>  threshold. the listed groups have not passed at least the two required go thresholds, and thus received a low score.

mips annotation
we observed that cfinder could extract modules which match well with multiple mips complexes, and in some cases also functionally related to other proteins , or instead with relatively poor match with mips. this is the case of proteins belonging to the int- <dig> medium confidence module, which map to the proteasome complex. however, the protein traf <dig>  that maps to small mips complexes, do not belong to the proteasome. instead, from string we have observed  a functional relation of traf <dig> with psmc <dig> of the proteasome complex.

an example refers to the ortho  <dig> high confidence module that has a match with the proteasome complex, but also with the psma <dig> protein which is not present in mips. when we looked at string we found that this protein too is functionally related . furthermore, an example is provided by the lit- <dig> high confidence module, which has a match with the lsm1- <dig> complex . the smn <dig> protein  associated to the smn complex , is linked in string with other proteins of the lsm complex . the last example consists in the lit- <dig> high confidence module that has a match with the exosome complex, but not through a protein, mpp <dig>  which instead is associated to the exosome by string .

precision and recall
while precision indicates for a certain group of elements the number of true positives  divided by the total number of elements labelled as belonging to the group , recall is defined as the number of true positives divided by the total number of elements that actually belong to the group .

for each predicted module, after first looking at the best annotation by go cellular component according to the computed p-values, we have considered the modules that matched mips complexes relatively to the go annotation. for each matched complex we have estimated the corresponding frequency .

in order to estimate precision and recall of eq. , we took the mips-matched complex with the best frequency . instead, in order to estimate precision' and recall'  formulas), we kept only the frequencies ≥ <dig> . therefore, p was calculated as the ratio between thefrequencies ≥ <dig>  over the number of all the detected mips complexes. for the estimation of r, where mc was calculated as the mean of the frequencies involved in the same module, the ratio has involved the mean frequencies ≥ <dig>  over the number of predicted modules.

note that the int-pi dataset referred to mcode, and reported in figure  <dig> like the other datasets, has requested a less stringent selection in order to be considered . instead, the three modules  that have been newly introduced were not in the initial selection. thus, we relaxed the selection criterion by accepting lower confidence to include more examples from mcode. however, the frequencies related to int- <dig> and int  <dig> are low because these modules are mapped against big complexes, which in turn emphasizes the differential performance of mcode in comparison to cfinder.

data sources
through unihi we have access to more than  <dig>   <dig> distinct interactions between over  <dig>  unique human proteins. unihi is a comprehensive database of both computational and experimental human protein interactions aimed to integrate various possible protein maps and publicly accessible at http://www.unihi.org. from the sources available within unihi, we have considered the following disaggregated datasets to specify our interactome classes: htp-pi, which is a rich yeast two hybrid  network; ortho-pi, which consists of thousands of interactions that are computationally predicted from experimentally measured interactions in lower model organisms such as yeast, fly and worm; lit-pi, which represents literature-curated binary interactions built from bind, dip, biogrid, hprd-binary, and intact db sources. finally, we have considered a fusion of all the data from the disaggregated interactome, which we call the int-pi.

we point out that the overlap between the y <dig> h human data set and literature-curated interactions is limited to only 10%  <cit> , which represents a weak intersection due to the superior accuracy achieved by the latter approach. however, recent work  <cit>  has cast doubts over curation's accuracy, thus calling for re-curation strategies.

modules extraction techniques
algorithms for graph mining and cluster detection in networks are mainly based on network flow and minimum cut theory , and also on spectral clustering  <cit> . we have focused on two popular deterministic methods, mcode and cfinder, in comparison with other algorithms allowing for different search strategies .

mcode stands for molecular complex detection, and discovers densely connected regions that may be associated with molecular complexes. it is based on a node-weighting concept that utilizes the clustering coefficient to measure the cliquishness of the neighborhood of each node, and computes fully connected subgraphs of a given minimal degree k, called k-cores.

thus, for each given k each node in a k-core has connectivity degree greater or equal to k; thus, k-cores potentially embed -cores, where p is a positive integer. the mcode algorithm scores and ranks each resulting complex according to both its density and its size.

cfinder detects overlapping dense groups of nodes in un weighted undirected networks, or k-clique "communities", based on the clique percolation method, and by the analysis of a so-called clique-clique overlap matrix.

a k-clique community is the union of smaller complete fully connected subgraphs that share nodes: thus a group of clusters composed by k nodes fully connected to each other in the same cluster, but not necessarily with many others in the community.

we note that k-cores and k-clique communities differ in some sense: in the former case each node is connected with at least k other nodes , while this is not true in the latter case, where k is the number of elements in each clique of the community.

consequently, both mcode and cfinder are essentially meant to find highly connected subnetworks, but while mcode cores are fully connected , each node in cfinder' smodules is not required to be connected to all other nodes.

mcode and cfinder present a few differences, which may affect the biological relevance of findings. the most striking aspect is that cfinder locates overlapping modules: a given node can be a member of several different communities at the same time, and communities can overlap with each other by sharing nodes. this overlap occurs also with mcode because of its nested structure visible through the k sequence, but good layer separation can control the induced redundancy. overlaps reflect an important property, as the module cross-links can emphasize a particular interface role for proteins with regard to multiple biological processes.

method parameterization
both mcode and cfinder require the tuning of some parameters which are described in the corresponding  software packages. in mcode, a score is associated to each module by the ratio between the number of interactions and that of proteins in the module. in additional file  <dig>  the structure of cores found for k =  <dig> and for each dataset are shown as an example. the user-controlled parameters for implementing and running the algorithm are set in our numerical experiments as follows:

 <dig>  fluff = false, was chosen to emphasize the best possible cluster separation degree aimed to identify as many unique modules as possible, and to control the possible redundancy induced by the nest-based structure;

 <dig>  haircut = true, was chosen to remove all single  nodes and allow for at least 2-core clusters;

 <dig>  node score =  <dig> , was kept at default value not to have too small modules as an outcome;

 <dig>  max depth =  <dig>  was chosen to avoid the presence of very small modules.

the rationale behind our selection of clique sizes and their modules considers one factor: we try to avoid the redundancy inherent to the nested structure . thus, while we keep track of the sequence of k values, we consider all modules produced by the minimal k, say k =  <dig>  consequently, we can establish each module's assignment according to specific connectivity degrees, and label it according to coreness levels from which biological associations can be investigated.

in cfinder, for each interactome class  a list of entries for various k  is reported in the additional file  <dig>  and refers to the number of retrieved communities, the ordinal number of selected communities, and the given id.

as the original number of communities is quite high, some reduction steps have been undertaken. a first forward reduction step has involved the consideration of only k ≥  <dig> , and in each case only a representative sub-set of five communities  of the output file was retained .

then, the second reduction step has involved a backward selection to limit redundancy as follows: starting from the biggest k, we have chosen communities for each k in an exclusive manner, i.e. only if they had not been selected yet, thus avoiding duplicates and too big clusters . after the identification of the communities at the high-size k-clique level, more communities were selected and added incrementally from the smaller k-cliques so to introduce proteins not yet visited.

the rationale of the above strategy is that we sought a rapid detection of communities for each value of k. thus, we sequentially added communities with decreasing k-clique size, while keeping track of the previous community structure, and therefore limited both the redundancy and the overlapping effects. we looked at shared communities between the new k-cliques and those already considered. we allowed for all possible k apart from k =  <dig> . note in table  <dig> that the symbol "-" indicates that the communities of the corresponding k are almost totally overlapping with the communities of k +  <dig>  thus yielding the same groups as before.

cfinder communities across datasets for varying k.

for maxmod and walktrap methods, parameterization is less requiring. while for the former method we just counted the number of modules each time a maximum for the modularity function was obtained, for the latter method we kept the length of the rw to default values, thus allowing for module merging to be as much informative as possible .

recently, the approaches proposed in newman  <cit>  suggest that a graph should be split in a hierarchy of modules, for instance by successively removing links with large betweenness , where this property defines the number of shortest paths crossing a link. however, due to the slow convergence, these approaches have been found to be often unfeasible for large networks, as in our cases.

other supporting information
modularity values for maxmod and walktrap methods .

