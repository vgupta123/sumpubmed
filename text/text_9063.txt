BACKGROUND
alignments of homologous dna sequences are crucial for comparative genomics and phylogenetic analysis  <cit> . the most accurate multiple alignment tool arguably remains the human eye. however, the increasing amount of sequence data and the increasing scope of projects using these data mean that an automated alignment procedure is often necessary at some point to achieve the final alignment.

for protein-coding dna sequences, alignments obtained from the amino-acid residues specified by the dna sequences will often be superior to those obtained directly from the dna for several reasons . first and foremost, aligning the amino-acid residues preserves the codon structure of the coding sequence, thereby avoiding the introduction of any frame shifts through the alignment process. second, because amino acids are more conserved evolutionarily than dna, and possibly because the amino-acid alphabet is larger than the dna one and therefore less likely to become saturated with convergent substitutions over longer timeframes, it is often easier to align amino-acid sequences between more distantly related organisms. third, unlike for nucleotide data, the transition matrices that exist for amino-acid data  are empirically derived and thus perhaps more "biologically realistic". the many different possible models of nucleotide evolution  and the fact that different genes evolve according to different models makes the likelihood of obtaining an equivalent, global nucleotide transition matrix small. finally, because the translated amino-acid sequence is one-third as long as the original dna sequence, the alignment procedure will be faster. based purely on the differences in sequence length, the speedup would be on the order of a factor of nine, given that the smith-waterman  <cit>  algorithm for the pairwise alignment of sequences that underlies many multiple-alignment programs runs in o, where n = length of the sequence . however, other considerations, including the speed of the different scoring routines that could be implemented for dna versus amino-acid data or the memory usage and general implementation of the system, will also be important determinants of the final relative speed increase.

one limitation to aligning amino-acid residues is that the redundancy of the genetic code, whereby up to six sets of nucleotide triplets can specify the same amino acid, means that it is not possible to back-translate an amino-acid sequence without recourse to the corresponding dna sequence. numerous programs exist to back-translate aligned amino-acid sequences – for example, the standalone version of revtrans  <cit>  and mrtrans  <cit>  – but most require both the aligned sequences and the corresponding, unaligned dna sequences as input. as such, the investigator must determine the proper translation frame for each sequence and perform the amino-acid alignment beforehand, which does not lend itself to the automated alignment of large numbers of dna sequences.

the server version of revtrans  <cit>  goes a step further by optionally taking dna sequences as input, virtually translating them into their respective amino-acid sequences, aligning the latter using dialign <dig>  <cit> , and then back-translating to achieve the dna alignment. altogether, this strategy makes use of the superior and faster alignments produced by amino-acid data, while retaining the greater information content of the dna sequences for future analyses. similar functionality is also built directly into dialign <dig>  however, the revtrans server is limited to only  <dig> dna sequences and does not perform any preprocessing of them. as such, is not well-suited to the automated alignment of large numbers of sequences. both revtrans and dialign <dig> also make use of only the blosum transition matrix. lagan and multi-lagan  <cit>  also offer the possibility of "translated alignments" , but both programs are geared more toward the alignment of long, genomic sequences.

building on these solutions, transalign  provides the same basic functionality as the revtrans server, but with no constraints on the number of input sequences  and a wider selection of amino-acid transition matrices. more importantly, transalign also offers a suite of user-defined options  for manipulating either the raw sequence data or the aligned sequences. the most of important of these options relate to dna sequences that do not translate into "clean" amino-acid sequences and thus could impact negatively on the amino-acid alignment. together with it being a standalone program, these features make transalign suitable for both individual data sets and as part of a pipeline for the automated alignment of large numbers of sequences downloaded directly from any of the sequence databases.

implementation
transalign can automatically read dna sequences in any of four formats: fasta, nexus  <cit> , classic  <cit>  or "extended"  <cit>  phylip, and se-al  <cit> . it can also write the final alignment in any of these same formats.  some basic filtering of the dna sequences is also implemented, including the stripping of gaps  and deleting sequences with more than a user-defined percentage of ambiguous nucleotides .

after initial processing of the dna sequences, transalign will determine the optimal translation for each sequence according to any of the genetic codes listed by the ncbi  <cit> . it is also possible for se-al formatted data to have different genetic codes specified for each sequence. as far as possible, transalign translates codons containing ambiguous nucleotides . the optimal translation is held to be that yielding the fewest stop codons excluding the terminal codon. by default, only the three reading frames for the input orientation are examined; however, it is possible to examine the complemented, reversed, and reverse-complemented orientations as well. for equally optimal orientations, transalign favours the one perturbing the original dna sequence the least: in order, 1) the orientation as input, followed by the second and third reading frames in that orientation, and then the respective reading frames in each of the 2) complementary, 3) reverse, and 4) reverse-complementary orientations.

transalign then passes the translated sequences to clustalw  <cit>  for alignment  and back-translates the resulting aligned residue sequences into aligned dna sequences. clustalw was chosen because it is perhaps the best known and most widely used multiple-alignment program. it also offers the largest choice of amino-acid transition matrices  and the ability to do profile alignments . however, slight modifications to the transalign code would allow the use any suitable multiple-alignment program that accepts protein sequence data as input . regardless of the alignment program used, it is expected that increases in both speed and accuracy compared to aligning the sequences as dna would still occur given the many advantages for aligning protein-coding dna sequences as amino acids .

an option is also provided to automatically delete any poorly aligning sequences as determined by the initial pairwise alignments performed by clustalw. this feature is intended largely to remove problematic sequences from alignment pipelines, where it is difficult to  improve the global alignment afterwards. for each sequence, the mean of its pairwise alignment scores is compared to that between all the remaining sequences according to a one-tailed two-sample t-test corrected for multiple comparisons. as such, the procedure is most effective at identifying isolated problematic sequences, which might derive from the inclusion of a potential paralog or simply a misidentified sequence. families of such sequences  are less likely to be detected.

because clustalw ignores ambiguous amino acids and stop codons , transalign translates them initially as gaps to permit back-translation. this procedure is unproblematic unless the ambiguous residue or stop codon is adjacent to a gap inferred by the alignment procedure, where it could be placed at either the start or end of the gap. for ambiguous residues arising from incomplete codons, transalign determines the more optimal of the two placements based on the concordance of the missing nucleotide with the gap. however, all such instances should still be examined and, if necessary, corrected for on an individual basis during the manual inspection that follows any automated alignment procedure.

obviously, the use of transalign is restricted to coding dna sequences only and should not be used for non-coding dna, whether for genes such as 18s rdna ; flanking utr, regulatory, or intronic regions of genes; or microsatellite sequences. the procedure is also adversely affected by frame shifts . therefore, transalign will minimally issue a warning for each sequence that contains more than a user-specified threshold of stop codons  in the optimal orientation. this threshold can either be an absolute number of stop codons  or a percentage of stop codons in the remaining sequence after the first stop codon is encountered. although this procedure is generally robust, it is less likely to detect frame shifts that occur near either end of a given sequence because of the reduced probability of an erroneous stop codon arising in the few remaining resides.

three global solutions for any frame-shifted sequences are implemented in transalign: 1) deletion, 2) alignment using the translated sequences regardless , or 3) subsequent profile alignment as dna to the aligned set of non-frame-shifted sequences . the latter option is the slowest of the three, but allows all sequences to be aligned as robustly as possible. moreover, even a partial profile alignment will always be faster than aligning all sequences as dna , regardless of the actual speedup inherent to aligning the shorter amino-acid sequences. however, performance will drop off quickly as the proportion of frame-shifted sequences in the data set increases. for instance, assuming a speedup of 9x for aligning amino acids compared to dna , the overall time saving will only be about 2x if frame-shifted sequences comprise 25% of all sequences . finally, to facilitate the manual inspection of the dataset, transalign will also attempt to infer putative locations for frame-shifting indels based on a comparison of gaps between the amino-acid aligned and dna profile-aligned sequences.

as mentioned above, transalign will output the aligned dna sequences in any or all of fasta, nexus,  phylip, or se-al formats. by default, the sequences are output in alphabetical order according to their name. however, it is also possible to output them to match their order in the original input file or as they were output from the clustalw alignment. the latter option is particularly useful at identifying "families" of similar sequences or those sequences that were profile-aligned to facilitate any manual correction of the global alignment.

transalign is written in perl and is open source. it will run on any operating system with a perl interpreter and is command-line driven. however, it also features a user-interactive mode where the user is prompted to set all the relevant variables. it requires that a remotely-callable version of clustalw is present either in the global path or in a user-specified one. again, however, slight modifications to the code would allow the use any suitable multiple-alignment program.

RESULTS
to test the potential performance advantages offered by a translated alignment of protein-coding dna sequences, six mammalian coding genes were each aligned either directly using clustalw  or via their amino-acid translations using transalign . all alignments used clustalw v <dig>  on an 800-mhz dual-processor macintosh g <dig> running os  <dig> . <dig>  the qualities of the respective alignments were judged relative to a manual alignment of the same data set, each of which was completed for other purposes prior to transalign being written. as such, the manual alignments represent reasonable, independent reference points. quality was quantified by calculating the opposite of the hamming distance  between the same sequence in the test alignment and the manually produced one. these values were then averaged for each data set to essentially reveal how many nucleotides, on average, were correctly aligned.

the benchmark data  show that transalign indeed delivers alignments of often superior quality compared to a dna alignment of the same data set, but always with a significant savings in time. in particular, the speedup was usually 7x or greater, and approximately the theoretical 9x for the three cases where a profile alignment was not performed. the only exception was for rbp <dig>  where the many sequences that were identified as having possible frame shifts  necessitated an extensive dna profile alignment. even so, the overall speedup for this data set remained greater than 3x, in line with theoretical expectations based on the proportion of frame-shifted sequences . in all cases, accuracy was either comparable to or significantly exceeded that of a dna alignment. for mtcyb, the largest data set examined, the improvement in the alignment score was substantial , with the translated alignment requiring only  <dig>  days as compared to over two weeks for the dna sequence data.

it should be kept in mind that these benchmarks serve largely to point out the performance advantages inherent to performing a translated alignment. other multiple-alignment programs that are faster than clustalw do exist. but, the same advantages would also apply to these programs, such that alignments for the benchmark data sets could be obtained in even less time.

CONCLUSIONS
the principle underlying transalign – that of aligning protein-coding dna via its amino-acid translation – is not novel, having been suggested at least since the initial release of mrtrans . however, together with lagan, multi-lagan, dialign <dig>  and the revtrans server, transalign represents one of the few complete implementations of the principle, with most of the remaining methods requiring the user to manually translate the dna sequences and perform the amino-acid alignment. however, transalign, in addition to being cross-platform, also includes a diverse suite of user-definable options relating to the processing of the dna sequence data, its alignment as amino-acid data, and subsequent back-translation into aligned dna data. in particular, transalign uniquely offers different options to process sequences that do not translate into clean amino-acid sequences and, as such, may disrupt the alignment procedure. all these options mean that transalign is well suited for the large-scale automated alignment of very large and/or very numerous data sets. as the benchmark studies show, the use of translated alignments provides alignments of at least comparable and often improved quality compared to a dna alignment and always with a significant savings in time.

availability and requirements
project name: transalign

project home page: http://www.tierzucht.tum.de/bininda-emonds/ 

operating system: unix-based systems including os x and linux; dos

programming language: perl; no additional modules required

other requirements: clustalw or, with suitable modifications to the source code, most other multiple-alignment programs

license: none; open-source

any restrictions to use by non-academics: none

