BACKGROUND
biological systems pose very interesting challenges to scientists and despite the availability of relatively large sets of data, their inherent complexity stands out as the major hindrance to scientific progress in this field of work  <cit> .

comprehension of gene-to-phenotype interactions plays a key role in this process. genes, the basic blocks of heredity, do not operate alone but instead in complex networks of interactions where multiple genes can directly or indirectly influence a single phenotype. such networks exist even in the simplest of organisms, a clear indicator of their relevance  <cit> .

bearing this need in mind, the development of large-scale genome experiments  created the opportunity to gain a holistic view of biological systems, thus providing a better view of the full complexity of the systems in hand. nevertheless, interpreting the results of dna microarrays is still a daunting task that must be performed if any knowledge is to be extracted.

the classical approach to this analysis is a two-step procedure  <cit> : first, a subgroup of genes considered differentially expressed are selected by one or more bioinformatics tools; and second, the resulting set of genes is further explored to extract commonalities and biological meanings that may help to explain why these genes were co-expressed in the experiment. the primary focus of this paper is related to this second goal.

a common approach consists of the assignment of genes to functional biological categories based on the assumption that genes with similar expression profiles tend to have similar biological roles. while several bioinformatics tools have been proposed to perform this task, most of them use gene ontology  <cit>  and pathway databases as the main sources of data. one such example is onto-express  <cit> , a tool that uses gene ontology data to provide a functional profile for the condition studied. onto-express is a desktop application and was the first to compute significance values in the context of gene expression studies. other examples of tools that use gene ontology are gominer  <cit>  and gostat  <cit> . a complete review of similar tools is available in  <cit> . there are also tools focused on other domains, such as the pathway explorer  <cit>  for analysis of regulatory, metabolic and cellular pathways or quext  <cit>  for analysis of the literature. some wide-scope tools have also been proposed. for example, fatigo  <cit>  is a web-based tool that, in addition to gene ontology, also uses other concepts, such as chromosomal location and pathways, to provide a comprehensive analysis of the results. david  <cit>  also allows the functional analysis of a set of genes based on the analysis of gene ontology, pathways, protein domains and literature. despite the value of the presented tools, some limitations were found including the number of covered species , the time taken to process the input query and the possibility to explore the dataset with references to external data sources.

in this paper, we present genebrowser, a web-based tool that addresses the issue of extracting biological knowledge from a list of genes. genebrowser combines data from several sources and different visualisation methods to improve biological interpretation and knowledge extraction from a group of genes. genebrowser combines the advantages of web portals, such as entrez gene  <cit>  and genecards  <cit> , with the advantages of the previously presented tools for functional analysis.

while a previous version of genebrowser was already presented in  <cit> , the platform was completely revamped to include many new features, such as an improved methodology to calculate the significance of results, a completely redesigned interface with web  <dig>  principles, dataset filtering capabilities, improved overall performance and additional functionalities including gene locus, gene expression studies and homologies, among others. genebrowser  <dig>  is freely available at http://bioinformatics.ua.pt/genebrowser2/.

implementation
genebrowser is a web application that combines data from several biological data sources and visualisation methods to explore a list of genes. figure  <dig> illustrates the implemented workflow. as input, this tool takes a list of gene identifiers that are subsequently used to retrieve information from several public data sources, such as uniprot  <cit> , entrez gene  <cit> , gene ontology, kegg  <cit>  and pubmed  <cit> . these data are then processed and merged, allowing the user to further explore the results via several visualisation perspectives and methods. moreover, the system provides direct links to the original repositories, where complementary information is available. the main requirements of genebrowser development were to fill the gap between functional analysis tools and web portals and to allow a fast response to user requests by means of state-of-the-art web technologies. figure  <dig> presents the genebrowser main interface. genebrowser is implemented in asp.net and uses web  <dig>  technologies, including ajax, json and soap/rest web services. to assure efficiency and scalability, the data are stored in a sql server  <dig> database cluster.

although genebrowser can be used to answer many different biological questions, a particular question set was used to tune its development:

- what public databases provide relevant information about my dataset and how can i navigate through them?

- what biological processes are enriched with respect to my input list of genes?

- what are the most relevant metabolic pathways that contain my genes?

- what are the genomic regions of these genes?

- which are the most relevant homologue classes in my list of genes?

- what gene expression experiments have been previously conducted with the same genes?

- what are the most relevant publications associated with my study?

integrated access to biological data
the functionalities provided by genebrowser require intensive access to several biological databases. for each set of genes, genebrowser must independently access an array of databases as a means to validate every single entry and obtain additional biological data to provide as much relevant information as possible. the nature of this procedure determines that its response time is directly proportional to the number of genes evaluated. notwithstanding, the platform must have a low response time if it is to be of any practical use. such a dichotomy could only have been solved through use of an integration platform that quickly validated the entries and returned the required data. for that purpose, we have developed gens  <cit> , a database that works as a name server for biological entities.

gens has a generic database schema that supports an unlimited number of biological databases. addition of a new database requires identification of the most suitable method to obtain data and development of a specific loader responsible for converting data to a format compatible with the schema. currently, we integrate data for roughly  <dig> species, representing over  <dig> million gene products with  <dig> million alternative gene/protein identifiers and  <dig> million associations to biological entities. for instance, the species saccharomyces cerevisiae has  <dig> gene products that can be mapped to  <dig>  synonyms and  <dig>  associations with biological entities, such as pathways, gene ontology terms or homologues. detailed information regarding the schema and the integrated databases is available in  <cit> .

despite the variety of data stored in gens, it is more focused on the mapping of biological identifiers than on the actual data . given the need to complement this lack of relevant information, genebrowser performs direct, run-time access to a selected set of data sources. some examples include the following: a) extended protein details, obtained in xml format from the uniprot rest interface; b) bibliographical abstracts, obtained from pubmed; and c) other data necessary for construction of the gene explorer perspective such as the sequence obtained from genbank and the protein structure obtained from pdb. table  <dig> contains a complete list of the databases that are integrated and also the methods that are used to access them. for a list of one hundred human genes, validating and obtaining all of the associated concepts are performed in less than one second, which shows the concern taken during development to meet the real-time execution goal.

background processing
as previously mentioned, one of the requirements in developing genebrowser was the need to offer a low response time to user requests. while the use of gens was a major step towards meeting this goal, some tools possess relatively heavy processing needs that require fine-tuning. this is the case of computing the go directed acyclic graph  and the bibliographical list. because two out of the seven functionalities provided are computationally intensive, and as such, cannot be made immediately available after submitting the dataset, their processing is executed in the background and it is made available as soon as it is complete.

after insertion of a new dataset, genebrowser launches a background process that pre-computes the p-value for each entry and stores it in the database. while all the other tools are made available immediately, ontology and bibliographical options may trigger a message informing that the values are still being processed. for registered users, future access to the dataset will not require reprocessing because the results are permanently stored.

extended approach to functional gene clustering
gene ontology is the most relevant biological ontology, containing structured information about biological processes, cellular components and molecular functions. it is commonly used by establishing a match between genes in the dataset and terms in the ontology. the terms that accumulate higher number of genes are the ones with more potential interest to the study. to be valid, this gene accumulation procedure requires the use of statistical measures that consider the number of expected genes in each category and the occurrence of several simultaneous tests  <cit> . despite the major relevance of gene ontology, other terminologies can be used to extract communalities from a dataset. herein, we extend the use of this approach to pathways, protein domains, orthologues and homologues.

the implemented procedure works as follows. for each term t of a specific terminology, we obtain the associated genes from list l <dig>  and the genes from list l <dig> . then, for each term, we use the number of associated genes to calculate the p-value. the p-value is a measure of confidence in the data that corresponds to the probability of observing the actual number of genes in a certain category just by chance. lower p-values indicate more confidence in the data, and usually only terms with values under  <dig>  are considered.

although several methods are available to calculate the p-value, genebrowser utilises binomial distribution, mainly due to its good balance between performance and robustness. a discussion of the available methods for gene expression studies is available in  <cit> . because the p-values for all categories are calculated separately, the final step consists of adjusting the p-values to consider the occurrence of multi-testing  <cit> . genebrowser uses the false discovery rate  correction proposed by benjamini and yekutieli  <cit> .

RESULTS
this section contains detailed information about the main functionalities provided in genebrowser.

inserting and exploring the dataset
the first step in using genebrowser is creating a new dataset. the information includes the species name of the organism, the list of genes found as relevant and a second list with all the genes under study . the list of supported species was obtained from the kegg organism database  <cit> , selecting only those with complete genome annotation, resulting in a total of  <dig> entries. although genebrowser is prepared to deal with identifiers from all organisms, some functionalities depend on availability of the data in the original source.

currently, genebrowser is prepared to accept  <dig> different types of gene identifiers simultaneously. the process of validating each gene identifier requires not only the removal of repeated and null entries but also their conversion to a unique internal identifier. use of the gens name-server capabilities ensures this task is quickly performed, thus meeting the strict time requirements. the second list is used to calculate the significance values obtained through the statistical analysis algorithms. by default, this list contains all the genes in the genome.

although registration is not mandatory, by logging on, the user can store all of the inserted datasets, thus saving time in future access. it is also possible to insert the dataset, close the browser and return later when the results are ready.

after inserting data, the data explorer facility provides a simple and effective way to visually inspect the inserted list of genes . for each gene, all of the information available on public databases is matched into seven distinct sections: general gene information, ontology classes, protein structure, genetic and protein sequence, bibliographical references and links to external databases.

additionally, if the user is focused on a particular subject, it is possible to filter the initial list of genes for those that match the search criteria, such as a chromosome locus, gene ontology class or metabolic pathway.

gene clustering to extract similarities
the accumulation of genes into classes can be used to identify the most relevant biological phenomena. genebrowser uses a graphics-based view to allow immediate analysis of the most relevant functional classes. the significance is calculated using both the binomial and corrected p-value. each class will show the number of accumulated genes, the p-values, and a direct link to the database that contains detailed information regarding that class. next, we describe the available functionalities that use this clustering strategy: gene ontology, homology, pathway explorer and gene on locus.

gene ontology consists of a structured, controlled vocabulary used to describe genes and gene products independently of the organisms in which they are present. because gene ontology is structured as a dag, the graph view shows the most relevant terms independently of their relevance . for instance, due to lack of detail, a gene may be annotated as "response to stress", while in fact, it is directly involved in a more specific stress such as "response to heat". to address this issue, genebrowser proposes two solutions. first, genebrowser allows pruning of the dag to a user-defined level where all pruned terms are enclosed in their more general counterparts. for instance, both "response to heat" and "response to oxidative stress" belong to level  <dig> in the ontology. by pruning the tree in level  <dig>  genes previously annotated in those two classes are now considered in the more general term "response to stress". second, genebrowser allows navigation in the dag by means of a tree that allows exploration of classes while keeping their structure in a familiar way .

two genes are considered homologues if they share a common ancestor. usually, homology is based on sequence similarity that can be inferred by computational methods . these results can be stored in well-established databases that maintain the association between genes and their homologues. these repositories fall into two main categories: orthologues and protein subcomponents. the latter category includes motifs and domain  databases  <cit> . for genebrowser, we selected six of the most relevant homology databases: prints, prosite, kegg orthologs, prodom, tigrfam and interpro.

analysing metabolic pathways allows biologists to know the processes in which genes are involved, much like gene ontology. moreover, it also enables the creation of a graph of interactions in which the genes are involved. pathway explorer calculates the most relevant pathways and presents a graphical view of each pathway, highlighting the genes from the dataset.

study of the distribution of genes is based on the assumption that co-expressed genes tend to be near one another in the genome. to validate this assumption, the identification of co-expressed genes in nearby loci is an important feature. for that, chromosomes are ordered by their significance showing the number of accumulated genes. from each chromosome, it is possible to navigate to the ncbi mapview tool and observe the genomic context of this particular set of genes. after this step, all the ncbi mapview features can be used to navigate in the chromosome.

extract relations from previous gene expression studies
the arrayexpress data warehouse is the curated instance of the arrayexpress repository  <cit> . by the end of  <dig>  it contained  <dig> experiments with more than  <dig> million gene expression profiles. because the data have been manually verified, they are of major relevance and can be used to study the expected profile of a set of genes. this database has already been used by the gene expression atlas  <cit>  to study the expression of several conditions such as different cell types, organism parts, developmental stages, disease states and sample treatments. using the programmatic interface provided, we can establish a relationship between our list of genes and previous studies available in arrayexpress.

the implemented procedure consists of obtaining, for each gene from the dataset, the experiments in which it was marked as differently expressed and the corresponding experimental conditions. then, genebrowser organises the output in a structure composed of the experimental factor, the associated factor values, and all genes in the experiment . the interface also provides direct links to the experiment in arrayexpress, to the study, and to the gene expression profile in atlas.

literature mining
the medline database is the most relevant source of information for both biomedical and life sciences fields. its broad collection included, at the end of  <dig>  more than  <dig> million abstracts collected from five thousand journals dating back to the  <dig> s  <cit> . every day, roughly  <dig> new abstracts are added. to search and retrieve information from this database, an easy-to-use web interface named pubmed http://www.pubmed.com was developed. herein, we use this huge array of data to obtain the most relevant papers for our dataset.

ranking the papers by their relevance involves determining the relationship among three values: the total number of genes in the dataset, the total number of genes in each paper and the number of genes that are simultaneously in both the paper and the dataset. ideally, a paper is relevant if the number of genes associated with it matches those from the dataset. to calculate the relevance, we used the tanimoto coefficient, hence computing the similarity between the binary vectors formed by the genes present in each paper with the genes present in the dataset  <cit> . with representing the vector formed by the genes in the dataset and representing the vector with the genes in each paper, the relevance is given by:  

the calculated values are subsequently normalised and their abstracts sorted and presented as illustrated in figure  <dig> 

discussion
the genebrowser tool can be used to analyse any set of genes. to show its added value, we used two sets obtained from expression experiments. the first one consisted of a heat shock experiment applied on yeast, and the second was a subset of the profiling of  <dig> human breast tumour cases.

heat shock on yeast
this experiment consisted of a comparison of two conditions, where one was the cell in a steady state and the other was after submitting it to a heat shock  for  <dig> minutes. for each condition, the total mrna was extracted and three biological replicates were performed.

the expression values obtained for both conditions were analysed with a local framework  <cit>  that uses the limma library. thirty-five genes were selected as differentially expressed and used to create a new dataset. this dataset is included as an example in genebrowser, and as such, the following steps can be followed directly through the application.

from the list of genes available in the gene explorer, it is easy to find the well-known gene yfl014w . therefore, the user can easily obtain the list of bibliographical references, the genetic and genomic sequences, homologies and gene ontology terms related to this gene. it is also possible to verify the absence of data regarding pathways and protein structure. using the provided functionalities, a possible step is to obtain all genes, including yfl014w, which are related to the response to oxidative stress. this task is performed using the filtering tools from the left menu and selecting the gene ontology term "go:0006979". other possible filtering options are pathways, homologies and chromosome.

an extended approach is available on the gene ontology tool. figure  <dig> shows all biological processes with corrected p-values under  <dig> . for this dataset, the two most relevant biological processes are the response to stress  and protein folding . after following the link to amigo, additional information can be observed, explaining that the response to stress is caused by an exogenous perturbation, being a direct consequence of the induced heat shock. protein folding is a physical process in which a linear chain of polypeptides is folded to obtain the tertiary structure and to become a protein. given that proteins unfold with increasing temperature, the observed induction is a feedback mechanism that helps to overcome this situation.

additional information about the set of genes can also be found in the bibliography section. for example, the top ranked paper "identifying gene regulatory modules of heat shock response in yeast" relates directly to the subject of study . this experiment is publicly available in genebrowser through the url http://bioinformatics.ua.pt/genebrowser2/explorer.aspx?id= <dig>  the workflow of this study is provided in .

experiment from arrayexpress
the other experimental data were obtained from the arrayexpress experiment "transcription profiling of  <dig> human breast tumor cases", stored with the entry e-geod- <dig>  <cit> . from this experiment, we selected all of the differently expressed genes associated with the experimental condition "brca1-associated breast cancer". the pathway analysis indicated that the most representative pathway was the "calcium signalling pathway". in fact, several studies already stress the role of calcium in cancer as a major signalling agent, due to cell proliferation and cell death  <cit> . another active pathway is the "pathways in cancer" entry.

in the homology analysis, three protein families from the interpro database were identified: rhodopsin-like superfamily, adrenergic receptor and nucleotide phosphodiesterase. although the active genes were distributed across all chromosomes, the most active ones resided in chromosomes  <dig>   <dig> and  <dig>  this experiment is also publicly available in genebrowser through the url http://bioinformatics.ua.pt/genebrowser2/explorer.aspx?id= <dig>  the workflow of this study is provided in .

CONCLUSIONS
a major challenge in bioinformatics is to construct tools that can give answers to any biological problem. one such problem is to interpret a list of genes, and find related diseases, pathways or any kind of biological process. this paper presents genebrowser, a web based application that, for a given list of genes, merges the benefits of biological web portals with those of knowledge extraction software tools. the main innovation of the proposed application is the possibility to use a single entry point to obtain a complete biological interpretation of the list of inserted genes, rather than using several disperse data sources and tools, thus facilitating biological interpretation of the study. the features of genebrowser include a gene explorer that enables simple and easy retrieval of specific molecular information for each inserted gene, thus allowing through filtering, the detection of common traits. the literature and the gene expression visualisation modes allow quick identification of previous related studies as well as an extended approach to functional analysis that facilitates detection of the most relevant classes in gene ontology, homologies, gene chromosomal localisation and pathways.

this second version includes a completely redesigned system and several improvements, including statistical analysis and multiple conceptually different kinds of gene identifiers such as input, chromosomal locus distribution, homologues and related gene expression studies. possible future developments include the addition of regulatory information, mirnas, and phenotype associations. other feature that we aim to explore is to create a unified view that merges the different analysis outputs into a single one, providing a rich summary of the main evidences found by the several methods.

overall, the functionalities implemented in genebrowser allow better understanding of the global biological phenomena underlying a list of genes.

availability and requirements
project name: genebrowser

project home page: http://bioinformatics.ua.pt/genebrowser2/

operating system: platform independent

programming language: asp.net/c#

other requirements: n/a

license: n/a any restrictions to use by non-academics: no restrictions

authors' contributions
ja conceived and designed the application. jf wrote most of the code related to the interface, parallel processing and database. jp dealt with integrated access to external databases. ja, jp and jlo participated in writing the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
experiment "heat shock on yeast". workflow followed in genebrowser for the interpretation of the heat shock experiment.

click here for file

 additional file 2
experiment "transcription profiling of  <dig> human breast tumor cases". workflow followed in genebrowser for the interpretation of the breast tumor experiment.

click here for file

 acknowledgements
the research leading to these results has received funding from the european community's seventh framework programme  under grant agreement n° <dig> - the eu-adr project. j. arrais is funded by fct grant sfrh/bd/23837/ <dig> 
