BACKGROUND
gene family classification is an important pre-requisite in bioinformatics studies and enables, e.g., phylogenetic and structural analysis. proteins translated from related genes  tend to have similar structure and function and most of their chemical properties are also similar  <cit> . one of the initial tasks in genome analysis, given a novel genome, is to find homology between genes and then to use this homology information to make a rough guess about the properties of each gene as well as to construct the phylogenetic tree from these gene families. due to the importance of gene family classification, it has become one of the most active fields of research in bioinformatics and bioinformaticians have employed different algorithms to detect homology and to partition detected homologs into gene families.

the pioneers of homology inference algorithms use similarity-based methods, typically employing blast  <cit>  as a subroutine, like reciprocal bidirectional hits   <cit>  and clusters of orthologous groups   <cit> . other examples of similar algorithms are silix  <cit>  and blastclust  <cit>  that apply threshold on blast output, e.g., e-value and/or percentage identity, and perform single linkage clustering  <cit> . despite speed and simplistic computations, they lack the sensitivity to infer homology for more divergent and highly evolving gene families, e.g., in the presence of differential gene loss and/or domain recombination events  <cit> . the next class of algorithms use sequence clustering techniques and examines a wide range of blast hits. well-known examples are tribemcl  <cit> , orthomcl  <cit> , inparanoid  <cit> , and multiparanoid  <cit> , which are applicable on large datasets and are more accurate than simple blast based methods. the next generation of homology inference algorithms improved the accuracy and the time and/or memory complexity requirements and include algorithms like neighborhood correlation  <cit> , hifix  <cit> , phyrn  <cit> , coco-cl  <cit>  etc. and infer homologs by extracting evidence from network structure of blast hits or multiple sequence alignments.

the algorithms mentioned previously are all based on sequence similarity. other algorithms have been designed that do not infer homology between genes but instead retrieve chromosomal regions that share homology. given the chromosomal homology information, one can infer homologous genes by using similarity matches in the region. examples are r-window  <cit>  and max-gap  <cit> , which use the concept of "gene teams"   <cit> . popular software that implement these algorithms or variants thereof are synblast  <cit> , mcscanx  <cit> , cyntenator  <cit>  and dagchainer  <cit> . however, homology inference from these software require further processing of results and homology is not a direct result from these algorithms and software.

at present, there is a relative lack of methods that assess homology by using synteny heuristics directly and not through implicit computation of syntenic regions. the few algorithms that use synteny directly for homology inference are not able to give an objective quantitative measure of synteny  for a given pair of gene. as an example, synergy, a species-tree aware and synteny-based method, showed impressive results on yeast dataset  <cit> . however, the method is not general enough for use with all datasets  <cit> . an issue for using synteny information in this way is the fragmentation in genome assemblies, which may handicap current synteny based software. alternative synteny-based strategies that may avoid this pitfall define synteny by using a fixed sized neighborhood . jun et al.  <cit>  have used this definition to identify orthologs and have shown comparative results with other similarity-only based approaches. another approach based on local synteny that also takes into account evidence from multiple genomes is syns  and has been shown to work on five protoploid yeasts  <cit> . these and other such strategies generally define homology in the neighborhood by applying a threshold on the blast e-values, which has been shown by joseph et al.  <cit>  to be a weak indicator of homology.

we propose a novel gene similarity and synteny based pipeline that makes use of network structure for both similarity and synteny. first, it is a method based on evidence for conserved gene order across many genomes instead of only two genomes directly. second, it is the first method to calculate synteny scores based on the neighborhood correlation score  <cit>   instead of blast e-value and defines a quantitative synteny score. third, there is a noticeable gain in accuracy when combining nc and synteny score compared to nc alone. fourth, the pipeline is robust to fragmentation in genome assemblies and can reliably be employed to most data sets. genfamclust is available as a single, user-friendly java command line tool that provides homology inference pipeline and clustering algorithm implementations.

methods
given a full list of sequences in fasta format and information about order of each gene in a specified format, genfamclust partitions the data into homologs and non-homologs by determining combined evaluated scores from nc  <cit>  and synteny correlation  scores. from these classified homologs, genfamclust constructs the gene families by using single  <cit> , average  <cit>  or complete linkage  <cit>  clustering. genfamclust searches for evidence of conserved synteny by computing the synteny correlation score for each pair of sequences that have acceptable sequence similarity. the main idea is that the advantages that nc has over blast based scores, can also be employed for synteny to make it more robust, standardized and accurate than the "gene teams" concept by making it based on evidence from multiple witnesses. while nc scores over  <dig>  can in general be classified as homologs, genfamclust uses synteny to assess homology for gene pairs with nc scores below  <dig> .

the data and pipeline
genfamclust assumes that there are two sets of data; the query dataset q and the reference dataset r. the query dataset q consists of those genes for which homology relationships are inquired and classification into gene families is desired. the reference dataset r consists of those genes which will be used for finding evidence for conserved synteny but may not be of interest in the final analysis.

the input expected by the genfamclust implementation is synteny files that contain information about the gene order and fasta files containing protein sequences . figure  <dig> describes the general workflow of the pipeline.

neighborhood correlation calculation
we chose the neighborhood correlation score as given by song et al.  <cit>  as our measure of similarity. the attractive feature about this measure is that it is standardized, has a known range between  <dig> and  <dig>  can easily be applied a threshold, has been shown to work well with diverse protein domain architectures and is more accurate than any simple blast based thresholds. we demand that nc score is above a threshold β and setting β =  <dig>  ensures that most non-homologs are discarded while retaining virtually all homologs in the dataset. furthermore, this limit helps reduce memory consumption. nc needs a lenient threshold on blast e-value  <cit> ; for our experiments, we have chosen e =  <dig> .

synteny score calculation
to compute syc, we make use of a synteny score sys for two sequences g <dig> and g <dig>  let n be the set of neighbor genes, upstream or downstream of g, at most at distance k, on a chromosome or contig. we define sys = max{nc : a ∈ n, b ∈ n}.

the purpose of sys is to find evidence of homology of genes in n with genes in n. sys is only calculated for pairs  where nc > β and at least one of g <dig> and g <dig> is in q. below β, nc is regarded sufficient to indicate that no homology exists. while the qxq gene pairs indicate direct evidence for synteny in the query dataset, the qxr gene pairs provide indirect evidence within the reference dataset genes. our experiments with the human-mouse dataset suggests setting k =  <dig> .

we tried four different functions to define a synteny score for a pair of genes and an assessment of the behavior of each method made us choose the "maximum score" method. see additional file  <dig> for details on the alternatives and the assessment.

syntenic correlation calculation
for each gene pair  such that g <dig>  g <dig> ∈ q and nc > β, genfamclust computes synteny correlation scores, syc, for using pairs with good nc score. let nchitsgi=h|h∈q∪r,ncgi,h≥βand h=nchitsgi∩nchitsgj, then

 syc=∑h∈h-sys¯)-sys¯)∑h∈hsys-sys¯2∑h∈hsys-sys¯ <dig> 

where sys¯g is the average sys taken over h.

using syc, we evaluate synteny as an evolutionary signal that can vary across lineages. note that it is not necessary for gi and g <dig> to be found in synteny; 1) similarity to syntenic genes in reference species may support the homology of gi and g <dig> and 2) the range of syc is 0- <dig> like nc.

a combined score
nc and syc scores are transformed into a single "strength of prediction" score using an elliptical function that evaluates the homology relationship between two genes. this strength of prediction variable has a range between  <dig> and  <dig> and increases consistently as nc and/or syc values increase. it is standardized, normalized and gives strength of prediction score for all homolog gene pairs. from rigorous testing on a human mouse dataset at different nc and syc thresholds , the best curve that has maximum individual family specificity and sensitivity is an ellipse that cuts syc at around  <dig>  and nc at around  <dig> . for a gene pair , the formula for calculating the evaluation value h is given by

h = nc <dig> +  <dig>  * syc <dig> -  <dig> .

gene family clustering
depending on the requirement of type of gene families required, we have tested three standard algorithms. genfamclust has custom implementations of single linkage, complete linkage and average linkage clustering, which are tailored for using transformed scores, are memory efficient and thus suitable for even very large datasets. for single linkage and complete linkage, gene pairs  with h >  <dig> were considered. for average linkage clustering, the average similarity threshold score  <dig>   has been set.

RESULTS
validation on a simulated dataset
to enable validation on data that we fully understand, we generated data using alf  <cit> , which is a software that simulates major evolutionary forces for genome rearrangement. the details of parameter settings used for generating this dataset are given in additional file  <dig> 

we selected mus musculus chromosome  <dig> as input to alf due to its nominal size of  <dig> genes. we then performed six simulations by varying translocation rate, values  <dig> ,  <dig>  and  <dig> , and substitution rate, from  <dig> to  <dig> pam, to test genfamclust for varying levels of gene order and gene content conservation. we used default parameters setting for all other options and turned off parameters related to gene inversion, lateral gene transfer , fission, fusion and pseudogenization events without loss of generality. for this dataset, since no referenced data r has been defined, query data q also acts as the reference data.

each cell represents the absolute difference between number of extant gene families   and the number of gene families determined by the corresponding gene family algorithm for the corresponding dataset with the corresponding linkage algorithm. for nc, the threshold of  <dig>  was used while for genfamclust, the elliptical curve with nc =  <dig>  and syc =  <dig>  was used.

human versus mouse dataset
the human-mouse dataset is from ensembl genes  <dig>  <cit> , has human and mouse genomes as query, and has a reference dataset consisting of complete genomes from eighteen eukaryotic species, ranging from yeast to mammals. a gold standard dataset was available in the form of twenty homologous gene families of human and mouse identified by song et al.  <cit> .

since genfamclust requires whole genome information, we used the human and mouse genome data, extracted from ensembl, as our query sequences. for reference sequences, we selected genomes evenly distributed over the species tree of life provided by ensembl  <cit> .

song et al. suggested  <dig> gene families in human and mouse based on literature in their paper  <cit> . these families are diverse and contain single as well as multi-domain families; contain very small families to very large families; and vary from very conserved families to highly divergent sequence families . with this known excellent gold standard, it was very logical to test our approach on this dataset and compare with similarity only software.

validating genfamclust
genfamclust was applied to the human and mouse dataset and was checked for the results on the gold standard data of twenty families. the first paper published after sequencing of mouse genome gave a synteny-based match of mouse genome with the human genome  <cit> . such a large number of conserved syntenic regions and the level of conservation provides a strong argument in favor of using synteny to support gene homology inference. to validate that the synteny score of genfamclust is capturing gene order conservation information, we applied genfamclust on the human and mouse datasets and found that genfamclust could replicate the original image  <cit>  almost perfectly:  <dig> syntenic segments with  <dig> blocks of consistent color in the original image vs  <dig> syntenic segments with  <dig> blocks of consistent color using nc and syc). the few regions and segments missed by our approach did not contain genes or contained less than five genes. figure  <dig> is a comparison between the original image and our results.

comparison with neighborhood correlation without synteny
we applied genfamclust and nc to complex and diverse cases of the gold standard dataset from song et. al  <cit> . we compared the performance of neighborhood correlation software to the performance of genfamclust according to f, the harmonic mean of precision  = fraction of elements in cluster j that are members of family i) and recall  = fraction of members of family i that are found in cluster j)  <cit> . f  is determined by following formula.

 fi,j=2pi,jri,jpi,j+ri,j 

the results, shown in figure  <dig>  clearly demonstrate that we have a marked improvement in terms of accuracy for single linkage  and average linkage clustering  while we have maintained the accuracy shown by the neighborhood correlation alone in the complete linkage-clustering  algorithm. in particular comparing the two quality scores at the proposed threshold of  <dig>  for nc, genfamclust outperforms nc in single linkage  and average linkage  clustering while has a minute difference  with nc in complete linkage clustering.

we also examined the effect of varying nc values while syc score remains constant at  <dig>  and vice versa. lowering nc threshold improves the overall and all-kinase quality scores. however, it can be observed that the small sized families tend to suffer with low nc values. therefore, it is logical to choose a nc value threshold that is best able to define individual families for all three clustering algorithms. in this regard, a nc value threshold of just around  <dig>  seems to be the most appropriate . joseph et al. made the same deduction in the follow up paper of neighborhood correlation as well  <cit> . similarly, for genfamclust and nc value  <dig> , an evaluation curve cutting syc axis at  <dig>  on syc seems to provide the best results .

discussion
conserved gene order is one of the properties that can aid in identifying homologs along with similarity. in this paper, we combined gene order and content conservation to infer homology. we use the concept of local synteny as well as gain evidence from multiple genomes, similar to  <cit> . however, we suggest a way to quantify synteny and combine it with similarity information before doing the actual classification. moreover, we avoid the pitfalls of blast scores by building on nc  <cit> .

syntenic orthologs versus non-syntenic orthologs
since orthology is generally extracted from direct similarity measures, orthologs with syntenic support have an extra degree of confidence in their prediction. depending on the requirements for determining gene families, if split families is not problematic but accurate clustering is a requirement, then syntenic orthologs can act as a good dataset. furthermore, as displayed by wolf et al.  <cit> , syntenic orthologs can act as validation data for confirming the results from different techniques.

choice of reference dataset
the choice of reference dataset is highly important as it has profound impact on the neighborhood correlation scores for both similarity and synteny. the reference data must reflect the similarity and synteny information for the query dataset accurately. while there is no upper bound on the amount of reference data, there are practical limitations as well as usability issues for the size of the reference data set; having many species with little divergence times will have redundant similarity and synteny information, which only adds to the computational burden without adding any new information. on the other side of spectrum, if no reference data is available, the query data itself serves as reference data. in general, reference data should be able to capture the synteny and similarity relationships for the query data e.g. by choosing a few representative species from each branch of a known species tree from which query dataset is taken from.

advantages of using query versus reference blast
all similarity-based programs mentioned in this study require all-versus-all blast results for gene family classification. genfamclust takes advantage of network structure employed in nc for similarity and performs a query versus reference blast only. then, the reference versus reference blast results are appended to these results and passed onto the next module for nc calculation. as the size of r is fixed, the size of q varies and is the determining factor of the time taken by the blast module. while for an all-versus-all blast, it would take o2) time, this version of blast takes o time, where m is the size of q and n is the size of r. this comparison is, of course, only meaningful when m>>n. furthermore, the blast results for reference versus reference dataset can be reused giving the effective time complexity of o.

CONCLUSIONS
clustering sequences into meaningful families and to infer the true evolutionary history of widely diverse set of genes are difficult tasks. while the clustering techniques are relatively long known and mostly standard, homology inference is the defining step for determining accurate gene families. however, homology inference is an achilles heel of determining reliable gene families. methodologies only based on similarity have long been proposed for homology inference without taking account of synteny. however, a sensible combination of sequence similarity and synteny would perform better than only similarity-based approaches. in this work, we have proposed genfamclust, a novel pipeline that is first to make use of network structure of synteny across multiple genomes. it provides an objective way of assessing synteny for a gene pair as well as a noticeable improvement in accuracy as compared to a similarity-only algorithm. we suggest that genfamclust is a good framework due to its ability to handle larger genomes, large and diverse datasets spread across a variety of species from eukaryotes, as well as across varying protein domain architectures from single domain to conserved and varying multi-domain proteins. another feature of genfamclust is its ability to work and define synteny with fragmented gene assemblies. moreover, the java implementation of genfamclust is user friendly and easy to deploy and use by the general community.

competing interests
the authors declare that they have no competing interests.

authors' contributions
rha designed and implemented the algorithm for genfamclust, prepared the multi-species datasets, performed comparative analysis with nc and drafted the manuscript. sam collaborated in designing the algorithm, performed statistical analysis of all datasets and prepared the simulated dataset. mak participated in the design of the study and aided in evaluation of human-mouse dataset. la conceived of the study, participated in its design and coordination and helped to draft its manuscript.

supplementary material
additional file 1
supplementary materials. data descriptions, technical details, and additional results.

click here for file

 acknowledgements
we thank pekka parviainen and kristoffer sahlin for help and suggestions, and daniel dalquen for help with running alf. the computations were performed on resources provided by snic through uppsala multidisciplinary center for advanced computational science  in project b <dig>  pontus freyhult and lennart karlsson at uppmax are acknowledged for assistance concerning technical aspects in making the code run on the uppmax resources.

declarations
rha was funded by higher education commission of pakistan . sam was funded by eurospin  and swedish e-science research center . mak was funded by uet peshawar. publication charges for this article were paid by the kth royal institute of technology.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2013: proceedings from the eleventh annual research in computational molecular biology  satellite workshop on comparative genomics. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/14/s <dig> 
