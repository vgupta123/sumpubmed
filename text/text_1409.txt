BACKGROUND
currently the sequencing of many genomes has brought to light the discovery of thousands of possible open reading frames which are all potentially transcribed and translated into gene products. for many proteins, little is known beyond their sequences, and for the typical proteome, between one-third and one-half of its proteins remains uncharacterized. for example, yet despite being the most highly studied model bacterium, a recent comprehensive community annotation effort for the fully sequenced reference k- <dig> laboratory strains indicated that only half  of the protein-coding gene products of e. coli currently have experimental evidence indicative of a biological role  <cit> . the remaining genes have either only generic, homology-derived functional attributes  or no discernable physiological significance. moreover, as we know that proteins play role in many biological processes, due to the complexity of biological systems, so many functions of these proteins may have undiscovered yet. as a result, a major challenge in modern biology is to develop methods for determining protein function at the genomic scale  <cit> .

it is widely known that proteins seldom act alone; rather, they must interact with other biomolecular units to execute their function. protein-protein interactions operate at almost every level of cellular functions  <cit> . thus, implications about function can often be made via protein-protein interaction studies. these inferences are based on the premise that the function of unknown proteins may be discovered through studying their interaction with a known protein target having a known function. it has been postulated that a far better way to systematically uncover gene function and the higher-level organization of proteins into biological pathways is by the examination of these interaction networks via proteomic, genomic and bioinformatic approaches, which is essential to discovering the biological context of protein functions and the molecular mechanisms of underlying biological processes  <cit> .

basically, there are two types of automatic function prediction paradigms by analyzing the entire set of functional associations recorded between gene products in the context of a network. the first one is to use the set of associations in the network to propagate the functional labels from well characterized protein nodes to those with limited or no annotations. many functional prediction studies following this paradigm are often focused first on sub-grouping or clustering the interaction networks into functional modules based on the pattern or distribution of protein nodes and interaction links which can be highly suggestive of shared functions. these modules may be distinct or overlapping. any unannotated gene products in a given module can be subsequently assigned the most common functional annotation associated with its interacting partners or neighbors  <cit> . this 'unsupervised' approach often works well if there is extensive coherent annotation available and relatively few uncharacterized proteins per cluster, but there can be difficulty if a module contains many proteins without annotations or with diverse, seemingly unrelated functions. most of the methods for identifying modules operate on the underlying assumption that proteins within modules are more tightly connected than proteins in different modules; broadly speaking, the clustering methods we consider are either specific to the network domain, or are based on standard distance- or similarity-based clustering techniques; in the latter case, the key issue is typically in deciding on a suitable measure of distance or similarity between two proteins in an interaction network. these methods differ in the extent to whether they use only local neighborhood information when clustering whereas others use more global features of the network.

alternate computational methods have been devised to automatically assign functional labels, such as gene ontology  terms  <cit> , to the uncharacterized proteins present in an interaction network in a 'supervised' manner according to the annotations of the broader neighborhood of interacting gene products. differentiating from the module-based methods cited above, these newer approaches often exploit both the global and local properties of network graphs  <cit> . the trade off is that additional error or uncertainty may be introduced by assuming functional similarity among more loosely connected gene products that are more than one step apart in an interaction network.

supervised computational methods for automatically assigning functional terms to previously uncharacterized genes based on the categorical properties of their annotated interaction partners have been widely developed  <cit> . schwikowski et al  <cit>  developed majority counting method to predict for a given protein up to three functions that are prevailing among its neighbors. nabieva et al.  <cit>  proposed the functional flowmethod which simulates a network flow of annotations from annotated proteins to target ones. they formulated the annotation problem as a global optimization problem, where a unique function is assigned to an unknown protein so as to minimize the cost of edges connecting proteins with different assignments. chua et al.  <cit>  defined the functional similarity between a pair of proteins by taking both the direct and indirect neighbors of the protein pair into account. they showed that level  <dig> and  <dig> neighbors have an above average likelihood of sharing functional similarity. a weighted averaging method based on functional similarity weight between the proteins is defined to predict the function using level  <dig> and level  <dig> neighbors. it has been shown to outperform some of the existing methods that use interconnection network information in the three main categories of go. lee et al.  <cit>  developed a new kernel logistic regression  method for protein function prediction based on diffusion kernels. in the klr method, the authors incorporated the correlation among biological functions into their model by identifying a set of functions that are highly correlated with the function of interest using the χ <dig> test. the prediction accuracy is comparable to another protein function classifier based on the support vector machines with a diffusion kernel. hu et al.  <cit>  proposed a network-based protein function prediction method that assigns functions to unannotated proteins in a functional association network. the algorithm includes two steps: the first step is to compute function affinity  of uncharacterized proteins to the functional categories we are interested using the functional information from their level  <dig>  neighbors and level  <dig>  neighbors; the second step is to evaluate the correlated functional profiles based on a penalized logistic regression model and uses a stepwise variable selection procedure to select optimized function profiles in the final model to estimate probability of uncharacterized proteins assigned to the interested functions. their experiments showed that their method makes improvements of prediction accuracy compared to existing techniques.

these methods can be roughly categorized as either simple, local, guilt-by-association techniques or global, network optimization procedures. while both approaches often achieve similar performance  <cit> , there are potential deficiencies in the procedures. for example, since functional terms are often interrelated , the correlation structure of the respective functional categories can potentially be exploited. hence, to deduce the biological role of a particular protein, one should take into account the full spectrum and relatedness of available annotations of the interaction partners when evaluating a particular functional category.

in this study, we proposed a relaxation labelling method for network-based protein function prediction. we explored to incorporate the inter-relationship among functional labels into the function predictions. the relaxation labelling is employed to iteratively update each node's likelihood for a given function by taking its non-local dependencies into account. the advantages of the method are demonstrated by a recently generated ecoli protein functional association network  <cit> .

methods
relaxation labelling method for protein function prediction
in a functional association network, let us assume that o is the set {o <dig>  ..., on} of n proteins to be labelled. l is the set {l <dig>  ..., lm} of m possible functional labels  for the proteins. let pi be the probability that the label lk is the correct label for protein oi and each probability satisfies  <dig> ≤ pi ≤  <dig> where pi =  <dig> implies that label lk is impossible for protein oi and pi =  <dig> implies that this labelling is certain.

the relaxation labeling process includes three steps  <cit> :

1) initialize the probability pi of protein oi for function lk . this can be done by assigning an initial and perhaps arbitrary probability for each label and protein. in this study, we used the weighted voting approach as proposed by mcdemott et al.  <cit> . we considered all labelled proteins in the direct neighbors of a given protein oi and calculated the probability pi  of protein oi for function lk given by:   

where aij is the association score between protein oi and oj. n is the set of proteins neighbouring oi. we introduce a discrete value function θ, which takes value  <dig> if protein oj has function lk and  <dig> otherwise. if protein oi has no neighbours with function lk, we estimate pi based on the function's prior in go gold standard we constructed.

2) update the probability pi of protein oi for function lk . this is done by considering the probabilities of labels for neighbouring proteins. let us assume that we have changed all probabilities up to some step, t, and we now seek an updated probability for the next step t +  <dig>  we can estimate the change in confidence of pi  by:   

where cij  is the correlation between protein functional labels defined as the conditional probability that protein oi has a label lk given that protein oj has a label ll, i.e. cij  = p. we estimate cij based on semantic similarity between functional terms in go . n is the set of proteins neighboring oi, and ωij is a factor that weights the labellings of these neighbours, defined in such a way that . the new probability for label pi in generation t +  <dig> can be computed from the values from generation t using   

3) the process of step 2) is repeated until the labelling method converges or stabilises. this occurs when there is little or no change between successive sets of probability values.

construct functional association networks
we used an integrated functional association network which merged the physical interaction network and predicted genome context association network  <cit> . the resulting combined probabilistic network consisted of  <dig>  high-confidence  putative pairwise interactions encompassing virtually the entire proteome of e. coli, including  <dig> proteins.

construct go gold standard
the most widely adopted gold standard system is the gene ontology  database  <cit> , which uses a clearly defined, and computationally friendly, vocabulary for representing the cellular, biochemical and physiological roles of gene products in a systematic manner. from the perspective of functional computation, go provides a standardized way to assess whether a set of genes have similar functions, which has led to its increasing popularity for the many function prediction procedures used in model organism settings  <cit> . go terms are organized in a tree-like structure, starting from most general  at the root to the most specific at the leaves  distributed across three major semantic domains - molecular function, biological process, and cellular location. since terms may have more than one parent, they are technically structured as a network called a directed acyclic graph. for instance, "b cell apoptosis" represents a sub-type of both the term "apoptosis" and "b cell homeostasis". hence, the functional classes are not necessarily independent of one another, and the dependencies are explicitly defined.

while expert curators manually assign terms based on published experimental evidence, most terms are electronically inferred based on sequence similarity to other well-studied gene products or other criteria. each term is assigned an evidence code stating how the annotation is supported  <cit> , which allows one to assess the reliability of an annotation. if the annotation is based on experimental evidence traceable to an author or publication, it is presumably more reliable than if it was simply inferred through sequence similarity. the go has over ten such evidence codes, which are not part of the core ontology.

we created the gold standard for the function predictions based on gene ontology  <cit> . in order to have a suitable number of proteins for cross-validation, we only consider those functional categories with the minimum of  <dig> associated labeled proteins. since a functional term is too general if it has too many labeled proteins, we also fixe the maximum number of labeled proteins in a function term to be  <dig>  for biological process  terms in the go hierarchy related to e. coli proteins  <cit> , we removed the terms that had neither ipi  nor igc  evidence codes. we also removed any proteins with ncbi product descriptions as "hypothetical", "predicted" or "putative". the final go gold standard used in this study included  <dig> of the  <dig> proteins in the functional interaction network. since e. coli proteins have not been well-annotated using go, there are only  <dig> go bp terms which meet the mentioned filtering requirements and are shown in table  <dig>  a more complete description of the go gold standard selection can be found in our previous study  <cit> .

measure semantic similarity of functional terms in go
different methods have been developed to determine the similarity of two go terms based on their distances to the closest common ancestor term and/or the annotation statistics of their common ancestor terms  <cit> . there are some drawbacks in these go semantic similarity measurement methods. for example, resnik method only considers the information content of a functional term derived from the corpus statistics while the location of a go term in go graph is usually ignored. wang et al.  <cit>  recently proposed a novel method to encode a go term's semantics  into a numeric value by aggregating the semantic contributions of their ancestor terms  in the go graph. they designed an algorithm to measure the semantic similarity of go terms as follows:

assume that there are two go terms: li and lk, which are represented as two directed acyclic graphs :  and , respectively, where  is the set of go terms in , including term li  and all of its ancestor terms in the go graph, and  is the set of edges  connecting the go terms in . the semantic similarity between go terms li and lk is defined as   

where  and  is the similarity score of go functional term q associated to term li . here  is defined as:   

where  <dig> <re <  <dig> measures the contribution of edge e ∈  linking term q with its child term q'. sv and  are defined in the same ways as sv and , respectively.

for the  <dig> go biological process terms we discussed above, we used the software g-sesame to calculate wang's semantic similarity between any pair of gos  <cit> .

performance evaluation
classifier performance is evaluated by five-fold cross-validation. briefly speaking, all labelled proteins are arbitrarily split into five representative sub-groups. each sub-group is kept to have approximately equal number of labelled proteins in each functional go term. the computational algorithm is then trained on n- <dig> of the groups, followed by testing on the remaining holdout group. this procedure is repeated  <dig> times, each time using a different sub-group of gene products as the test set. we quantify the performance of each go term based on the area-under-the-curve  in receiver operating characteristic  curves drawn by plotting sensitivity versus specificity at different thresholds. each threshold yields one pair of sensitivity and specificity values and, thus, one point on the curve. the single statistic  provides a quantitative indication of how well a particular functional classifier performs.

to evaluate the overall prediction performance of our algorithm, we plot the precision against recall at different thresholds, which can be calculated as follows: given a threshold, if a protein has predicted probability larger than it in a function category, we assign the function to the protein, so we compute   

where mi is the number of predicted annotations for protein i, ni is the number of known annotations for protein i, ki is the number of correctly predicted annotations for protein i.

RESULTS
based on the pairwise semantic similarity among the  <dig> go terms calculated using formula , we made a heat map representing this go term similarity matrix, which is shown in figure  <dig> 

as we can see from the plot, some highly correlated go terms  are grouped into a single block.

to compare the performance of the weighted voting and relaxation labelling classifiers, we performed five-fold cross-validation on the built gold standard data. the comparisons of the auc scores of the  <dig> go terms generated by the two classifiers are shown in figure  <dig>  overall, the auc scores for  <dig> of the  <dig> go terms have been increased based on our new function prediction method. the advantage of the new method has been further demonstrated by plotting the recall versus precision curves generated from the predictions based on the two classification methods. as shown in figure  <dig>  the relaxation labelling based approach has larger recall and precision than those based on the weighted voting approach. we also observed that highly correlated go terms as shown in figure  <dig> have larger prediction improvement than uncorrelated go terms based on our new method.

in this study, we used the go structure-based method to quantify the similarity between go terms and demonstrated its advantage by incorporating this information in e. coli protein function prediction. we are exploring to compare the performance of this method with information-content-based approaches to measure go similarity in protein function prediction. in the future, we will apply the new method to protein functional association networks generated in other species and compare its performance with other representative methods in detail.

CONCLUSIONS
in this study, we have proposed a new method for efficiently exploring relevant non-local dependencies of functional labels in the protein function prediction task. our approach is able to take into account the correlations among go terms. it includes two major steps: first, initial label assignment is made by a local classifier; second, the dependencies among go labels are taken into accounted and propagated using an iterative relaxation procedure. the potential trade-off is that additional error or uncertainty may have occasionally been introduced by assuming functional similarity among more loosely connected proteins. we evaluated the performance of the new method with one other representative network-based function prediction method using e. coli protein functional association networks. our results showed that the new method has better prediction performance than the previous method. the better predictive power of our method gives further insight about the importance of the dependence between functional terms in protein functional prediction.

competing interests
the authors declare that they have no competing interests.

authors' contributions
ph designed and implemented the algorithms. ph drafted the manuscript. hj and ae provided helpful suggestions on the algorithm development. ae and hj monitored the study. all authors read and approved the final manuscript.

