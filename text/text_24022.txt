BACKGROUND
translational medicine deals with the application of basic research results, especially those coming from “omics” technologies to help in health and disease processes  <cit> . this new area of research seeks to reduce the existing gap between the bench and the bedside. this is a big challenge that has many barriers to be overcome and one of the most important is related to the diversity of data. the nature of clinical data is very different from the nature of molecular data, although they are often closely related.

another significant aspect is that in many cases there is no consensus about what kind of information is most useful and therefore important to relate  <cit> , and there are distinct needs of information for each case, i.e. the kind of information is heterogeneous. thus, a generic and flexible model tends to be more appropriate. taking as an example a cancer project that includes several research groups, it is expected that there is a disparity between the databases derived from each project. thus, to analyze data coming from these sources, it is necessary a platform that processes an effective data integration. in addition, this platform should allow the creation of new types of data easily, to attend the diversity of researchers’ needs.

a global analysis concerning different levels of information is necessary when studying complex mechanisms responsible for the onset of pathological processes. to make it possible, two major aspects of data handling must be well defined and mastered: storage and analysis. it is necessary to provide a computational platform and a data model able to store, represent and integrate clinical and biomolecular information in a consistent way. from a well formalized and structured model it is possible to design consistent methods for computational analysis.

in translational science there are some computational platforms to store and retrieve clinical data. slim-prim  is an integrated data system for collecting, archiving and distributing basic and clinical research data. slim-prim is hosted at the university of tennessee and provides an open-source version called prime  <cit> . although slim-prim and prime claim to allow the management of microarray data information, dna sequencing information and other biomolecular data, they don’t provide integration to any bioinformatics tools and, at the time, this data are treated like a generic data type.

stride , developed at stanford university, is a standard-based platform to support clinical and translational research  <cit> . it consists of three components: a clinical data warehouse, based on hl <dig> rim , a semantic model based on ontologies  and a framework to build research management applications. currently there are no plans to implement stride outside stanford.

the nih ncbc  i2b <dig>  is responsible for building applications to manage project-related clinical data in the genomic era  <cit> . i2b <dig> hive is a framework composed of software modules to computationally support clinical research  <cit> . each software module is called a “cell” and each cell can communicate with each other through web services. the main modules are responsible for data storage, ontology management, identity management and others. although i2b <dig> hive is a powerful scalable tool to manage clinical information, it does not have a cell to represent or to analyze biomolecular data such as microarray or nucleotide sequence data.

in the area of genomics there are several databases of specific organism, disease or biological process and some models of biological databases such as acedb, ensembl and chado that are organism-independent. these specific databases also include analytical tools specific for the problem addressed. cerealsdb  <cit>  is a database of genomic information about wheat. ibdsite  <cit>  is a platform to aggregate and analyze biomolecular data involved in inflammatory bowel diseases . ipad  <cit>  and atlas  <cit>  are more general approaches because they aggregate data from several public genomic databases such as kegg, genbank, and uniprot.

on the other hand, there are biological databases models that are the basis for building computational tools for genomic analysis under an organism-independent way. acedb   <cit>  is one of the pioneering models for biological databases. it consists of a hierarchical schema of database management system  and was initially built to support research about c. elegans . it is based on an integrative approach and can be used to represent many other types of information, including those unrelated to biology. ensembl  <cit>  was initially developed to support human genome research and currently support more than  <dig> genome species. it consists of several computational tools such as ensmart  <cit> , a biological data warehousing tool for integration and query of biological data.

a model of biological databases which have gained popularity among research groups devoted to different organisms is chado  <cit> . it is a robust, flexible and generic platform that can be adapted to support research related to several organisms. it consists of a modular schema of a relational database that can be adapted and extended. an essential feature of chado, which differs from the other biological database models is that it is ontology-oriented. ontologies are structural artifacts used for the representation and integration of knowledge in many domains. ontologies vary from simple vocabularies, used to standardization of terms, to fully conceptual models that enable reasoning and knowledge discovery. chado, as well as those other biological databases, does not have a module to store clinical and socio-demographic information.

in this context, we are presenting the definition of a computing framework that aggregates clinical and biomolecular data in a consistent way, allowing the development of computational analysis to be applied in the field of translational medicine. to guarantee standardization and enable further development of generic tools for data analysis we propose the use of a common reference ontology.

we consider to use the chado model as the basic genomic data model to propose the design and implementation of a new module to store clinical and socio-demographic information, in order to assist procedures and research in translational medicine. chado was chosen because it is a flexible, robust and ontology-oriented model.

ontology-anchored approaches have been used successfully to query and integrate data in the clinical and biological domain. cdao-store  <cit>  is a computational tool that uses the comparative data analysis ontology to facilitate the storage and retrieval of phylogenic data. borlawsky et al. reports a proof of concept information retrieval tool called research-iq  <cit> , which enables research to query heterogeneous datasets. this approach uses free-text that is mapped to concepts related to osteoarthritis. payne et al. <cit>  proposes an approach called constructive induction to enable the reasoning over a knowledge repository aimed to discover potentially informative biomarker-to-phenotype relationship.

we propose the use of a common reference ontology  to allow data integration through terminology standardization, and to support the development of generic analytical tools. as a use case we have tested our framework to aggregate data from the project “oncogenomics applied to therapy of head and neck carcinoma” sponsored by brazilian genoprot network . through this framework it is possible to integrate sequence data, gene expression data from microarray, microrna and disease association data with the clinical and socio-demographic features of patients who provided samples for laboratory test generation.

methods
the proposed platform is divided in four levels: data level, semantic level, application level and web interface level . in data level we use the chado model as the basic genomic data model and we have created a new module to store clinical information . the semantic level consists of the ontologies that represent the clinical databases and a common reference ontology that acts as a conceptual framework. the application level is composed of a set of modules, written in perl language, that are responsible for the management of the clinical databases, ontologies and data integration process. a web interface allows the interaction between the system and the user. this interface is implemented using the catalyst model-view-controller  framework.

we also propose a migration methodology to be applied on legacy clinical databases and an ontological mapping that allows data standardization, integration and development of generic analysis tools.

data level
the data level is responsible for storing the data. it is composed of a database management system implementing the chado data model. we implement the proposed clinical module in this level, since chado has the relations to represent biomolecular data, but does not represent clinical data.

chado
mungal, emmert and the flybase group proposed a modular design based on ontology to represent biological information, called chado  <cit> . chado is a relational database schema that can be used as a basis for any group of genomic research. chado is part of gmod  project  <cit>  and is currently used by several research groups such as xenbase  <cit> , parameciumdb  <cit> , aphidbase  <cit> , beetlebase  <cit> , among others.

chado is composed of eighteen modules. each module is defined as a set of tables, triggers and functions responsible for managing information from a subdomain of genomics. five out of these modules are the core of chado. chado is extensible because it allows the incorporation of new modules and, if necessary, amendments to existing modules.

one hallmark of chado in relation to other generic databases models is that it makes intensive use of ontologies. ontology plays a central role in chado, because all stored information must be related to some ontology or controlled vocabulary. some ontologies are already incorporated into chado such as the sequence ontology, which is used to describe types of nucleotide sequences and the obo  - relation ontology, which is used to describe relationships. but it is possible to incorporate new ontologies described in owl   <cit>  or in obo-format  <cit> .

there are computational tools compatible with chado databases. these tools are mostly provided by the gmod group. we can mention the genome browser gbrowse  <cit>  and the apollo  <cit>  annotation tool. chado also allows incorporation of other tools through the creation of bridge layers which consist of built views to make chado similar to other databases and act as layers for compatibility with other tools.

proposed clinical model
chado has the stock module which allows representation of stock collection in a laboratory. this concept of ‘stock’ can be generalized to represent strain, line, biological entities or individual, therefore it could represent patients. the natural diversity module  <cit>  allows representation of experiment data related to a stock, therefore this module allows to represent clinical information as experiments. however, this approach could make it harder the process of clinical data integration from different sources and would preclude the generation and the use of the clinical databases bridge layers. moreover, we think it’s very important to keep a higher level of semantics associated with the tables that are being used. thereat, and also because of the inherent complexity associated with clinical information, we choose to develop a new clinical module. this data model, proposed in this work as a new module of chado, is shown in figure  <dig>  an ontology stored in the controlled vocabulary  module of chado defines the semantics of the clinical data stored in this module. this ontology could be any one of those belonging to the biomedical domain, representing the concepts of the clinical data.

the proposed module was designed to be a flexible and generic tool for representation of legacy clinical databases. in figure  <dig>  the pink table comes from the general module of chado, the green tables come from controlled vocabulary module and the blue tables make up the proposed chado clinical module.

the clinical module was built based on the entity-attribute-value  model. in eav model the information is represented as a tuple of  <dig> itens: 1) the entity, an identifier of the item or individual which is been described; 2) the attribute, the feature described about the item; 3) the value, which is the value of that feature applied to the individual. eav model is best applied mainly when data is sparse, highly heterogeneous, the number of attributes is large and new attributes are often needed. this is the case of clinical data repository or research databases especially those dealing with a large range of medical specialties  <cit> .

the clinical module is composed of seven tables: patient, patientprop, appointment, project_cdb, csd, csd_relationship and csdprop. the patient table is self-described, it is where the patients data are stored. chado already has a project table, which defines a context grouping a set of related information such as a set of assays in a study. since each patient belongs to a clinical database and each clinical database can be linked to many projects, we created the table project_cdb.

the clinical or socio-demographic information that do not change over time or that do not require a temporal record , are stored in the table patientprop.

the types of clinical or socio-demographic information  are represented by an ontology that is stored in the controlled vocabulary module, particularly in cv and cvterm tables.

the csd  table is where most of the information is stored. this table was designed to represent, in a flexible way, any kind of clinical or socio-demographic information related to a patient. the patient’s information is linked through the patient_id column. the semantics of the clinical information is given in column type_id that is a foreign key to column cvterm_id in cvterm table which stores the terms of the ontology that represent the types of clinical and socio-demographic information. the column value holds the content of information. the column rank is used when it is necessary to store the same type of information to the same patient. for each instance of that information, the column rank receives a new value. another important column is parent_csd, which is a self-relationship. this column is used to represent information related to another patient clinical data.

the csdprop table is responsible for storing patient-independent information. usually this kind of data is stored in tables that are referenced by foreign keys in patient table or in any patient-dependent table, for example information about cities, drugs, hospitals, procedures, etc. this kind of information exists regardless of the patients.

the table csd_relationship is used when it is necessary to represent complex relationships between clinical or socio-demographic data. in this table it is possible to link two clinical information, using columns subject_id and object_id which are foreign keys of csd table, through a relationship given by the column type_id, which is a foreign key of cvterm table.

semantic level
the semantic level is composed of a set of ontologies and database models. according to rubin et al.  <cit> , ontologies can be a wide variety of computational artifacts such as: terminologies, thesaurus, controlled vocabularies, information models and formal defined ontologies themselves. we can classify the models stored in the semantic level in three different ways:

• clinical database model: these models will describe the structure of a clinical database. in order to do this, it is necessary to represent the tables and their corresponding columns. the model has three levels: the first is the generic element root which, by convention, is the name of the legacy database; the second level is composed of the tables; and in the third level the columns linked with their respective table are represented .

• domain ontologies: ontologies that represent concepts from a specific domain of interest, e.g.: icd, snomed, translational medicine ontology and gene ontology.

• common reference ontology: it is an ontology used to integrate the clinical information from different clinical database models. it can be composed of one or more domain ontologies. this ontology is used like a conceptual framework where the information is integrated through ontological mappings between concepts of a clinical database model and the common reference ontology.

application level
the application level is composed of a set of modules responsible for creating, updating, retrieving and managing information. these modules are written in perl language to facilitate the integration with tools built to work with chado.

user interface level
catalyst is the perl mvc framework for building web applications  <cit> . it is possible to design and implement web application in a modular, maintainable and testable manner. we have used catalyst to implement the web user interface level. it resulted in a tool called iptrans , whose query interface is shown in figure  <dig>  besides supporting the management of clinical and socio-demographic information, this application also supports the management of projects, microarray assays and biomaterials.

proposed migration methodology
we have developed a methodology to migrate data from legacy sources to the clinical module. the data sources can be of different types, such as relational databases, comma-separated values  files or sql dump files.

the methodology consists of four steps:

step  <dig>  create the clinical database model
this step consists of the creation of a model to describe the clinical database  which houses the original data, as described in the semantic level section.

step  <dig>  store the clinical database model on chado
since the clinical database model is structured in a hierarchical way, it can be represented as a basic ontology. there are several ways to store the created ontology in chado. it depends on the language used for representation. the most common ontology representation languages are owl  and obo-format . a simple way is to use the perl scripts provided with chado. the clinical database model is represented mainly in the chado tables cv and cvterm.

step  <dig>  store the data in the clinical module
in order to migrate the data stored in the legacy clinical database to the clinical module in chado, it is necessary to plan an etl  process. in this step, it is important to maintain the correct “typing” information according to the ontology of clinical database stored in the cv module. in other words, it is necessary to correctly relate the information stored with the respective term of the clinical database model.

step  <dig>  create the clinical database bridge layer
the bridge layer consists of a set of views that represent the structure of the clinical research database through chado. the advantage of creating the bridge layer is the facility to query and to adapt the analytical tools that were designed for the clinical database to work correctly on chado.

the migration methodology proposed here can be used to adapt legacy clinical databases to the proposed framework. this methodology can be applied to data in relational database, comma-separated files and sql dump files. the integration occurs when the ontologies of the clinical sources are mapped to a common reference ontology.

ontological mapping
the key advantages of the developed platform are the flexibility and the generality to represent information. on the other hand, the proposed structure does not define the meaning of the stored information. the information stored in clinical databases could be represented using specific ontologies that capture the meaning of data in the particular database. but to get the most out of this generic model, allowing the development of analytical tools that could be applied in different instances of chado with data descending from different clinical databases, it is necessary to define a common semantic. this can be done by adopting a reference ontology, so the analytical tools could be designed to get semantic information from the reference ontology. the work then consists of ontological mapping between the model that describes the clinical database and the reference ontology .

in the following, we formally define the notion of the ontological mapping environment and the rule of the common reference ontology.

definition: an ontological mapping environment is a 5-tuple concept: ome = , k= <dig> .n, where:

• cro is the common reference ontology, which is a domain ontology that represents general concepts from biomedical domain, acting as a mediated schema. the set of ‘p’ concepts and ‘q’ relations of cro are defined as c <dig> …,cp and r <dig> …,rq respectively.

for each k =  <dig> …n

• sk: is a source schema, representing the schema of a clinical source. examples of clinical sources are tabular files, sql dump files and relational databases. each source is composed by a set of ‘r’ entities defined as e <dig> …,er.

• smk: is the source model, that uniquely and formally describe sk using a simple hierarchy of terms. smk is composed by a set of ‘r’ terms defined as t <dig> …,tr. each term represents an entity of sk.

• mk: is the set of mapping relations that are defined between smk and cro. each mapping relation ‘m’ is defined as an exact match between a ci and ti. mk is composed by ‘o’ mapping relations where o ≤ r.

• m: is defined as the set of all mk, in other words, it corresponds to all mapping relations between all smk and the cro.

in this work we propose the use of translational medicine ontology   <cit>  with mappings to the acgt  master ontology  <cit>  as the common reference ontology.

tmo is an ontology built by the healthcare and life sciences  interest group in the w3c semantic web. tmo aims to represent general concepts related to translational medicine. it is based on three external ontologies: basic formal ontology, relation ontology and information artifact ontology. tmo also have mappings to about other  <dig> ontologies, e.g. tmo is mapped to the acgt master ontology. the acgt master ontology is an ontology dedicated to cancer research and has been developed in the context of the acgt project.

the use of tmo with mappings to the acgt master ontology enables the representation of general concepts in the area of translational medicine and it has achieved a greater specificity in the field of oncology allowing representation with greater granularity of information in this area. through tmo it is possible to extend the platform to other areas of translational medicine using one of the ontologies already mapped to tmo or by extending it.

data integration
the user can obtain the integrated data in two different ways through a query tool: the user defines a set of patients based on clinical or socio-demographic characteristics and then the tool outputs the related biomolecular information, such as the gene expression from microarray experiments. the other way is opposite: from a selection of biomolecular information it is possible to obtain the clinical or socio-demographic information related to the set of patients that originated that biomolecular information. this integrated data set can be used in a user-defined analysis or data mining algorithms can be adapted to search for associations between the biomolecular and clinical information .

the integration between clinical information and gene expression information in chado occurs by the link between the tables patient and biomaterial. the biomaterial table is part of the mage module and is responsible for representing some biological material such as tissue, cells and serum. the patient identification is stored as a property of the biological material in the biomaterialprop table. the assay table represents a hybridization. the link between the biomaterial and the expression information occurs in assay_biomaterial table which maps each biomaterial that is used in each hybridization. in that way, it is possible to associate expression information with clinical or socio-demographic patient data.

RESULTS
use case
to test the proposed framework we have implemented an instance of chado using the database management system postgresql  <dig>   <cit> . we also have implemented the proposed clinical module.

we have tested the functionality of this approach with success with data from the project “oncogenomics applied to therapy of head and neck carcinoma” from genoprot network , whose information is stored in the database of clinical genomics project, which is part of the ludwig/fapesp human cancer genome project. this project aims to carry out joint research focused on the analysis of genetic and epigenetic mechanisms responsible for regulating the transcriptome and secretome in head and neck carcinomas. this research focus on searching for biomarkers for diagnosis and prognosis to allow the use of them as therapeutic targets.

clinical and demographic data were obtained from patients with tumors of head and neck through the service of head and neck surgery in school hospital of faculty of medicine  of university of são paulo, at ribeirão preto, brazil. these patients provided the biomaterial for the assays.

a chado instance was installed on the relational dbms postgressql. the clinical database has about  <dig> tables with some of them containing up to  <dig> columns. the main table stores information about the patient like age, sex, weight and height. the legacy clinical information was stored in a mysql  <cit>  relational dbms.

to implement the first step, by building the clinical database model, based on an ontology, we have used the ontology editor obo-edit  <cit>  with the knowledge representation language obo-format.

during step  <dig>  we loaded the ontology using perl scripts provided with chado.

figure 7-a shows part of the structure of the patient table in clinical database  and how this information was stored in the chado cv module after the ontology loading. the first step consists in representing the patient table and the respective columns such as ‘age’, ‘height’ and ‘weight’ by an ontology and then load this ontology in chado cv module. this is done specifically in cv table, where the ontologies are stored, and in cv_term table, where the ontology terms are stored.

in step  <dig>  we have built an etl process, which consisted in: extracting the data from the clinical database; transforming the information provided ; and loading this data in the clinical module of chado. this process was built through the definition of a set of functions in pl/pgsql. figure 7-b illustrates how the original information from clinical database can be stored in chado. in this example, the data extracted from a specific patient are age, height and weight. first, a record in the patient table of chado clinical module is created, and this record receives an internal identifier . then, the clinical data and demographic data from this patient as well as the clinical database identifier are stored in the table csd of the clinical module. this information will be differentiated from each other through the column type_id, that is foreign key of column cvterm_id from table cv_term, which stores the clinical databases ontology. each piece of information stored in the table csd is “typed”, in other words, is semantically represented by the clinical database model stored in clinical cv module.

to represent part of the information from the clinical database we used the columns rank and parent_csd. the column rank received a serial value and was used when we stored the same type of information  for the same patient. a sample case is when we wanted to store the drugs taken by a patient . in this case, the tool automatically created three records in the table csd for the same patient  and with the same type_id , so each drug is distinguished by a different value of rank.

the column parent_csd represents a self-relationship. it was used to store the dosage of the drugs, suppose carboplatin, one of the drugs that were mentioned in the previous paragraph. to relate the information of dosage to the right drug, we used the column parent_csd. figure 7-b also illustrates the structure and content of the table csd for the discussed example.

finally, a bridge layer for the clinical database in chado was built, together with a web tool to run on the cdb information management database. the bridge layer adapts the web tool to chado, as well as other applications .

the bridge layer could be built for other databases through a portion or all information stored in the clinical module. thus, other tools and applications built for other databases could be used without recoding.

limitations and future work
the proposed computational platform, yet flexible and generic has some limitations: the clinical module is not the best choice to implement hospital common daily procedures such as hospital bed control, drug control, billing and scheduling appointments. the flexibility and generality of the clinical module, which are important in the process of data integration, make the implementation of these functionalities complex and costly. another issue is the loss of performance in queries over the bridge layer. this happens because the views that compound the bridge layer are built through pivoting the table that follows the eav model, i.e., the transformation of row modeled data to column modeled. one way to solve this is the materialization of the views that make up the bridge layer. in this solution the data become redundant but there is a performance gain that is higher as the number of columns that compound the view. this same problem occurs in the ad hoc query tool. in this case the materialization is not a good strategy because the queries vary widely. then, we applied the solution proposed by dinu and nadkami  <cit>  which consists of breaking a big query into smaller and simple queries and accomplish the union or intersection of the results.

much remains to be done to meet the computing needs of translational research. future work can be divided into two contexts: data integration and clinical issues.

in the context of data integration, implementation of entity resolution algorithms would allow identification of the same entity in different databases that are integrated. schema matching algorithms could be applied to guide the process of mapping between the clinical database models and the reference ontology. one possible solution would be to use the platform openii  <cit> . it would be possible to integrate the openii tool into iptrans data integration methodology.

in terms of clinical information, it would be important to extend the clinical module to allow importation of data that follow health information standards like hl <dig>  it would also be important to provide support to dicom medical image standard. another aspect would be a security module to implement anonymization algorithms.

CONCLUSIONS
turning knowledge generated by sciences in a real benefit to enhance human health is one of main goals of translational research in medicine. to make this real, a computing infrastructure is required to support storage, management, integration and analysis of both biological and clinical information.

the presented approach aims to take a step toward this infrastructure, proposing a computational platform that enables the representation of clinical, socio-demographic and biological information in a integrative database, supported by an ontological environment in a flexible and robust way. this platform was designed with a four level architecture: data level, semantic level, application level and user interface level.

chado biodatabase model was extended to include a module for representing clinical information. through the proposed clinical information module different clinical databases can be adapted and integrated. the real benefit of adopting a generic model for information representation becomes concrete with the emergence of various applications and analysis tools that are constructed and maintained by the community that adopts this model. it also facilitates the integration of applications and the exchange of data between research groups and also for research groups that do not adopt chado and may wish to use it after the proposed extension.

the adoption of chado as the basic model of biological database allows the reuse of the existing tools built from chado or adapted to it through bridge layers for analysis and visualization of molecular data. with the proposal of the clinical module, this solution becomes a robust way to practice translational medicine.

by the use of an ontological approach, through building the semantic level, it is possible to manage and integrate highly heterogeneous data types such as the clinical and socio-demographic data. the common reference ontology acts as a conceptual framework, enabling the mapping of clinical information from different sources to a unique reference.

the practical use of this platform with the real use case demonstrated the feasibility of the integration proposal, highlighting its characteristics of flexibility and robustness.

through this computational framework we are giving a new step to fulfill the technological gap that exists between the bench and bedside, allowing the reuse of bioinformatics tools and also enabling a flexible way to integrate different sources of clinical and socio-demographic information.

availability
the clinical module and the instructions to import this approach can be obtained in http://dcm.ffclrp.usp.br/caib/pg=iptrans. it is recommended to use a fresh install of chado model in a postgresql relational database.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
jcf and wasj conceived the project. nsbm made the platform design and implementation. jcf coordinated the project and supervised the design and implementation processes. wasj provided the access to the clinical data. dgp participated in the evaluation and selection of the data model. all authors helped to draft the manuscript. all authors read and approved the final manuscript.

