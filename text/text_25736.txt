BACKGROUND
technological developments have increased the ability to generate and store large amounts of data. however, for the data to be useful relevant methods for their analysis are needed. classification methods are algorithms that automatically learn from such large data sets; however, the requirements on such methods are quite high and the need for new classification methods have been stressed, especially the need for methods that are able to identify interactions in the data
 <cit> . for instance, single nucleotide polymorphisms  found in genome-wide association studies using traditional statistical analysis can only explain small fractions of many common diseases
 <cit>  and classifiers using those markers may be of poor quality
 <cit> . it has been suggested that this is due to the lack of gene-gene and gene-environment interactions in the models
 <cit>  and efforts have been made to develop specific tools, e.g. for the identification of snp interactions
 <cit> .

rule-based classifiers are one type of classifiers. their strength lies in the fact that they are comparably easy to interpret while still producing models of reasonable quality, which have made them suitable for applications in systems biology. rule-based classifiers have earlier been applied to a wide spectrum of problems in genomics, proteomics, epigenetics, e.g., predict gene ontology terms from gene expression time profiles
 <cit> , to interpret microarray data
 <cit> , to model cleavage of polypeptide octamers by the hiv- <dig> protease
 <cit> , to model ligand-receptor interactions
 <cit> , and to classify alzheimer’s patients
 <cit> .

a rule-based classifier consist of a set of if-then rules that describes the relations in the training data almost in natural language based on the original feature names. there are different software packages that can generate rules including rosetta
 <cit> , and weka
 <cit> . rule-based classifiers are non-linear and the identified rules may describe important features and interactions in the data. an intuitive heuristic to identify putative interactions from a set of rules is to search the rules for combinations of conditions that occur frequently in them. however, a classifier typically contains a large number of rules, which sometimes may be very complex with five to ten, or even more, conditions. thus, new tools are needed to support the visualization and interpretation of the rules.

most attempts to visualize rules have concerned association rules. for an overview of such visualization techniques, see for example
 <cit> . software previously developed for this task includes the r package arulesviz <cit>  that uses a two-dimensional matrix in which similar rules are clustered. however, most methods scale poorly with an increased number of rules. we were impressed by the readability of the circular graphs produced by the circos software
 <cit>  and decided to use it for rule visualization. to our knowledge, the only attempt to visualize rules in a circular layout was done for association rules by
 <cit> .

we therefore present ciruvis: a web-based tool
 <cit>  for the visualization of conditions that are associated in the rules using a circular layout. it relies on a scoring system previously introduced by
 <cit>  for which we now provided a free-to-use web-based implementation. the tool may produce both separate rule networks for each decision outcome and a combined network. in this study we focused on the detection of interaction effects in those networks, although they may also be valuable solely for visualization purposes.

using different types of simulated data sets, we showed that applying our tool to rosetta rules may identify interactions in the data. furthermore, we applied the tool to real data in order to compare it to other methods and to illustrate its use. the tool is fast, scales well with the number of rules and is easy to use.

in conclusion, we believe that ciruvis may facilitate visualization of rule-based classifiers and the discovery of interactions.

methods
rule terminology
a rule describes a relation between the rule conditions  and the rule outcome . for example, a rule taken from a classifier for leukemia based on gene expression is: if 
mif=‘high’ and 
gpx1=‘low’ then 
type=‘chronic lymphocytic leukemia’.

the rule support is the number of objects that fulfill the lhs of the rule, and the accuracy is the fraction of those objects that also fulfill the rhs of the rule, or equivalently, accuracy = p . a rule condition has the form feature=‘value’  and a rule may have one or multiple conditions. the rule outcome has the form of class=‘value’ and there is only one such feature.

definition of the rule network
ciruvis is a tool to visualize combinations of rule conditions that are important for a particular rule outcome. each condition that has at least one connection to another condition is placed as a node on the outer ring of the circle in an alphabetical order. two conditions are connected inside the circle if they co-occur in some rule . the score of the connection between two conditions, x and y, is defined as

 connectionx,y=∑r∈rx,ysupportr⋅accuracyr 

where r is the set of all rules in which x and y co-occur.

the connections are shown as edges between the nodes. the width and color of the edges are related to the connection score . the inner ring shows the color of the condition on the other side of the connection. the width of a node is the sum of all connection to it, scaled so that all nodes together cover the whole circle.

parameters and user interface
to run ciruvis, a rule file must be submitted either in the rosetta or in a line-by-line format. several optional filtering and formatting parameters are available . a screen shot from the submission form and the results page are shown in . one rule network is generated for each possible outcome. the figures are interactive, and by clicking on the edge between two conditions, all rules containing that combination of conditions are shown. if the ctrl key is held while selecting multiple edges, the intersections of rules from these edges are shown. the name of a node is shown when the mouse is hovered over it. it is possible to download the ciruvis figure in the scalable vector graphics  format and the feature labels as an html table which both can be easily edited and used to produce publication-quality figures.

generation of simulated data
we used simulated data to test the ability to detect interactions using the networks. the dataset was constructed to contain both noise, features correlated to the decision, and pairs of interacting features. the interacting features were defined so that they together were predictive for the decision but that each of them was uncorrelated to it. translated into a real-world situation, this could represent a situation with snps of which some lack marginal effects on the outcome, but have an interaction effect caused by gene-gene interactions or epistasis.

for each data set we defined five correlated features with expected correlation c = x*i/ <dig>  where x was the maximal correlation for that data set and i =  <dig>   <dig>  …,  <dig>  each correlated variable was named after the index i and its correlation c according to ci_c. similarly, we defined five pairs of interacting features which, when taken together, were predictive for the outcome with the probability p = y*i/ <dig>  where y was the maximal value for that data set and i =  <dig>   <dig>  …,  <dig>  the features of the pairs were named ri_ p and si_ p where i was an index 0 < = i < =  <dig>  and p was their probability of being predictive.

each choice of the parameters x and y thereby represented one data set with  <dig> features. in order to generate datasets with different properties, we allowed x and y to take all values in { <dig> ,  <dig> ,  <dig> , …,  <dig> ,  <dig> }, which defined 21*21 =  <dig> datasets. in each dataset  <dig> objects were generated using the algorithm below. note that the random() function returns only discrete values and thus, that both the decision and the features are discrete.  

here random() is a function that returns  <dig> or  <dig> with equal probability, and probability is a function that returns true with probability q and false otherwise. we generated  <dig> replicate data sets for each combination of x and y and trained a classification model on each of those. the classification accuracies presented were the averaged over those  <dig> models and all rules from the replicates were merged together for ciruvis to construct an average picture.

rule-based classification using rosetta
the rule-based classifiers were constructed using the rosetta toolkit for analysis of tabular data
 <cit> . rosetta is a mathematical framework capable of deriving if-then rules from a set of training examples. boolean reasoning is used to compute minimal sets of features, called reducts, able to discriminate between the training examples equally well using all features. based on the feature values in the training data, the reducts are transformed into rules that describe minimal sets of feature conditions associated with a particular decision class. combined, these rules may be used to classify previously unseen objects.

algorithms and parameters are described shortly in the results section and in more detail in the supplementary methods . the quality of each classifier was measured by the classifier accuracy  which was estimated using 10-fold or leave-one-out cross validation.

RESULTS
detection of correlated versus interacting features in simulated data
to investigate how well the rule networks from ciruvis could detect feature interactions, we first tested it using simulated data. the data contained both features correlated to the decision and pairs of interacting features predictive for the decision. the level of correlation and pairwise predictability was determined by two parameters that defined a maximum level for the most predictive feature/pair in the dataset. the maximum level of correlation, x, and of interaction, y, was varied between  <dig> and  <dig>  then, for each data set the number of correctly classified objects was counted . as expected, there were usually more correctly classified objects when the features were more predictive . surprisingly, a higher level of interaction increased or at least retained the classification quality, whereas a higher correlation sometimes decreased the quality. specifically, the quality was decreased when the pairwise correlation was high and the correlation increased over  <dig> - <dig> . when the interaction level was  <dig>  this was the most evident, since the average number of correctly classified objects decreased from 998– <dig> out of  <dig> for x <  <dig>  to a local minimum  <dig> at x =  <dig> .

this suggests that the rule generation algorithm was biased towards finding rules containing features correlated to the decision. when the correlated features were not present, then the combinatorial rules of higher quality were more likely to be found. the identified masking became one of the focuses in our study.

next, we investigated the behavior of the rule networks for different datasets . since both the features and the decision were binary only the networks for outcome “0” are presented. based on the data generation algorithm opposite values of the r and s variables were expected to predict the “0” decision, e.g., if r =  <dig> and s =  <dig> then dec =  <dig>  whereas equal values predict the “1” decision. the aim was to observe how small interactions could still be detected and to learn about their properties; for instance, whether they would be masked by features strongly correlated to the decision.
4: figure s <dig>  the correlated features are named c <dig> to c <dig> , and the pairs r <dig>  s <dig> to r <dig>  s <dig> . the colors were specified so that the interacting pairs have the same color. each feature occurs twice in the figure; the first time with the value  <dig> and the second with  <dig> 

using x =  <dig>  and y =  <dig>  we could identify visible connections between pairs with an interaction level at  <dig>   <dig>  and 5% . the connections between “r4_10” and “s4_10” were the two strongest in the figure demonstrating that very weak interactions may be detected in the ciruvis networks even in the presence of very noisy data. this particular example also illustrated that the rules from a classifier may be informative, even when the quality of classification is essentially not better than “random guessing”.

in the following runs we processed datasets with a small background correlation, x =  <dig>  . with y =  <dig>  the pair with a 10% chance of interaction was barely visible, and not among the highest scored connections in the figure . as y was increased the two  highest scored pairs became step-by-step more visible  and when y was set to  <dig>  or higher the three most interacting pairs were by far the strongest connections , with the exception of y =  <dig>  when the third pair  was masked by the more predictive pairs .

similarly, when the best interaction was 100% predictive  and with higher correlation , the strongest interacting pair was highly visible and the second pair had indeed a visible connection, but it was on the same level as some of the noise . although it is useful to know that stronger rules may mask weaker ones, masking caused by perfect correlation would normally not be expected in a real data set.

when the dataset had both a high level of correlation and interactions, the connections for the two strongest interacting pairs were visible, but not the strongest connections . however, the true interactions are shown as connections from conditions with otherwise few and weak connections, while connections that are artifacts caused by combinations of correlated features origin from conditions with a lot of strong connections.

an observation in all of the generated rule networks was that at most three  interacting pairs appeared in the networks. a likely explanation is that the stronger interactions mask the weaker ones, similarly to how strong correlations do.

removal of correlated features decreased the masking of weak interactions
in the previous section we showed that when features correlated to the decision were roughly as strong or stronger than the interacting pairs, the latter were masked by the former. subsequently, rules containing the interacting pairs were rarely found or barely visible in the rule networks. to investigate whether the removal of correlated features from the data would benefit to the detection of the pairs, we used the data from figure 
1b  and removed the correlated features c <dig> and c <dig> . the pair with the highest interaction  subsequently became relatively stronger . for instance, in figure 
2a the connection score between “s4 = 1” and “r4 = 0” is  <dig> % of the total score in the figure, which increases to  <dig> % in figure 
2b; becoming the strongest connection in the figure. the increase for the combination “s4 = 0” and “r4 = 1” was smaller but still significant, from  <dig> % to  <dig> %. in addition in figure 
2b the “r3 = 0” and “s3 = 1” pair could be identified , although the connection was still weak. when the last two correlated features  were removed as well, the strength of the first and the second pair increased sharply  .

comparison to other methods using real data
in order to compare the interaction detection to other methods, and to apply the methodology to real data, we used the california housing <cit>  dataset downloaded from
 <cit> . this dataset was chosen as it had previously been subject for interactions detection
 <cit> .

california housing describes housing value based on  <dig> census data in california. the decision is the median value of a block group  and there are  <dig> features. we discretized the decision into three groups; one group of houses valued ≥ <dig>  <dig> which was encoded as ‘2’ , the remaining houses were split at their median into the intervals 0– <dig>  <dig> and  <dig> 601– <dig>  <dig> . we used the features longitude, latitude, housingmedianage, total rooms, population, and median income previously selected by
 <cit>  to build a rule-based model using rosetta. the numeric features were discretized using equalfrequencybinning with  <dig> intervals. the model accuracy was estimated using 10-fold cross validation.

the medianincome feature was highly correlated to the decision  and when the rule-based model was built to include it, it dominated the strongest connections . an alternative model was built excluding medianincome which reduced the accuracy of the model from  <dig> % to  <dig> % as important information was excluded, but made the identification of interacting pairs easier. inspecting the rule networks , we identified the ten strongest connections for each outcome . for instance, for medianhousevalue =  <dig> three of these described combinations of conditions with specific values for latitude and longitude, three combinations with population and totalrooms, two with population and longitude, and two with totalrooms and longitude. for each one of these specific combinations of features, we computed whether it had a significant interaction effect . additionally, we computed the expected accuracy  by first estimating the effect of each condition separately and then combining these effects under a multiplicative model . the interaction effects could then be assessed by comparing the observed and the expected accuracies.

out of the ten strongest connections for medianhousevalue =  <dig> three were describing significant interactions. for instance, “population = [ <dig>  1726) and totalrooms = [ <dig>  2127)” had an accuracy of  <dig> % compared to an expected  <dig> %. this increase in accuracy is due to a specific interaction between the population in the area and the total number of rooms. supposedly, the number of rooms per capita is what determines the house prices.

in conclusion, an interaction between population and totalrooms was described by several connections. additionally, a specific combination of latitude and longitude described an interaction predictive for low house prices, and a combination of high housemedianage and high totalrooms described an interaction predictive for very high house prices. two of these pairs were reported as interacting by
 <cit> , but the third one is novel. the interaction between latitude and longitude was very strong in the previous study and it indeed appeared in several of the strongest connections. however, only one specific combination of conditions showed a significant interaction effect. this is most likely due to these two features being strongly correlated  and the assumption of independent effects therefore underestimated their interaction.

applications to leukemia and lymphoma
finally, we applied ciruvis to biological data describing leukemia
 <cit>  and lymphoma
 <cit> . the leukemia set contained gene expression for  <dig> genes from  <dig> patients divided into two different outcomes: acute lymphoblastic leukemia  and acute myeloid leukemia . the lymphoma set contained  <dig> genes from  <dig> patients divided into three outcomes: lymphoma and leukemia , follicular lymphoma  and chronic lymphocytic leukemia . the probe names were changed into gene names when possible and otherwise kept as in the source data. a single quote was used to discern between multiple probes matching the same genes. since most genes had their expression discretized into two intervals by rosetta  the intervals were renamed into “low” and “high”, with the addition of “medium” if applicable. see  for details on gene names and values.

firstly, we used monte carlo feature selection
 <cit>  to rank the genes by significance. after correcting for multiple testing, there were  <dig> significant  genes for leukemia and  <dig> for lymphoma. details about the feature selection are described in the supplementary methods . a principal component analysis  verified that using the  <dig> most significant features the outcomes were separable by the first two principal components . missing values were replaced by the gene average during the pca. performing a disease association analysis using webgestalt
 <cit>  we could confirm that the top ten disease associations of the selected genes contained annotations related to lymphoma and leukemia. for example the leukemia data were enriched for genes related to lymphoid leukemia  and the lymphoma for acute myeloid leukemia  and acute erythroblastic leukemia . the p-values were calculated by webgestalt using the hypergeometric distribution and adjusted with bonferroni correction.

next, we used rosetta to train a rule-based classifier based on the selected features. the accuracy of the classifier was 100% for both data sets, estimated by leave-one-out cross validation. details on the classification are described in the supplementary methods .

since each rule set in the leave-one-out cross validation was trained from all objects except one, they are expected to be very similar to rules trained on the whole data. therefore, instead of repeatedly training a classifier on the whole data, we merged all the rules from the cross validation iterations. duplicates were removed and the rules were filtered so that rules that are supersets of other rules were removed if they had lower significance ; for details on the p-value calculations, see
 <cit> . the motivation behind the filtering strategy is that shorter rules are preferred if they are at least equally significant as their longer counterparts.

the filtered set of rules was submitted to ciruvis using default parameters. the interactive rule networks are available online at
 <cit> .

the rule network for leukemia is shown in figure 
 <dig>  the difference in the overall topology of the networks for all and aml may partly be explained by a different number of rules for each outcome . direct comparison between the networks was therefore difficult, since the same width would relate to a different number of rules. instead we studied the strongest connections in each network. for this dataset both networks were quite simple, with all connections supported by only one high-quality rule. for all the highest scoring connections were based on any pair of the following conditions: sptan1 = high, ptx3 = low, and cfp = low; the conditions sptan1 = high and cfp = low were the most frequent in other rules as well. had the set of patients been larger, noiseless relationships would likely have been harder to identify and ciruvis might have helped us identify the most important pairs out of more complicated rules. the aml network showed the same property, with a large number of connections based on only one rule with a pair of conditions. most likely, the reason why more combinations were found in this network was that no single condition constituted a high quality rule in itself which forced the generation of longer rules.

similar behavior was observed in some of the rule networks for the lymphoma data . for cll many connections were based on only one rule. the strongest connection  was based on four rules. this combination corresponded to a rule with 73% accuracy, compared to an expected accuracy of 51% assuming independent and multiplicative effects, which indicated that an interaction could be present. the second strongest connection was between nt5c2 = low and gpx1 = high which showed an accuracy of 84% compared to the expected 55%. a three-way interaction could be hypothesized and tested between nt5c2 = low, mif = low and gpx1 = high with accuracy of 92% compared to the expected 83%.

the connections for the next outcome, dlcl, were supported only by one rule of high quality. apparently, adding more conditions did not yield a significant increase in the rule quality. notably, there are groups of conditions in the network that are interchangeable in certain rules. for instance, cxcl9 = high may be combined with either of prkcb = low, prkcb’ = low, mxi1 = low, hdgf = high, tubb = high and gene669x = high to produce a rule for dlcl supported by all of the  <dig> patients in that group and with 100% accuracy. if instead gpx1 = high is combined with any of the six genes the second highest scoring connections are achieved with rules that are almost as good; supported by  <dig> patients and with 100% accuracy.

for the fl outcome, a hypothesized three-way interaction between gene1625x = low, mif = low and nt5c2 = low had to be rejected as the combined accuracy was lower than the predicted. pairs of these conditions were separating fl + cll from dlcl and together with any of several other conditions they defined three-way interactions.

CONCLUSIONS
the requirements on classification methods to be user friendly and easy to interpret have increased over the past years. in that respect, rule-based classifiers which consist of if-then “sentences”  make the models comparably easy to interpret. however, when the model has too many rules to be conveniently read, methods for visualization of the rules become important. we developed a web-based tool for rule visualization that is compatible with any type of classification rules. its primary use is to provide a fast and easy visualization of a rule-based classifier. however, interpreting the rule networks can also help to generate hypotheses about feature interactions; which was the main focus of this study. a limitation of rule-based models is that the attributes have to be discrete, but discretization techniques help overcome this.

using simulated data, we showed that the rosetta software may be used to construct rules that describe interactions even if the features lack marginal effects. yet the rule detection may be biased towards features strongly correlated to the decision. we modeled different trade-offs between correlated and interacting features, and demonstrated to what degree stronger associations mask weaker ones.

the masking is a consequence of the classification algorithm, which is biased towards using the most predictive features for classification, omitting weaker but still predictive features or feature combinations. the problem arises when the interpretation of the classifier is important. to detect masking features, correlations between each feature and the decision may be computed or ciruvis may be used to identify nodes with connections to almost all other nodes. we introduced a strategy in which the features most strongly correlated to the decision are removed from the data and the model is re-generated, in order for weaker interactions to gain importance for the classifier and the ciruvis network.

an important difference as compared to other methods for interaction detection is that the rule networks are based on feature-value pairs  that tell us more precisely what feature values are involved in the interactions. although not all the connections that were found in the networks were true interactions, the rule network is a fast method to generate a set of hypotheses to be further validated using other methods and new data.

in a comparison using data that have previously been used for interaction detection, we could identify both the reported interactions and a possibly novel one. surprisingly, the strongest interaction previously reported  was found several times in the network, but appeared as significant only once. this interaction was based on two strongly correlated features that contradicted the assumption of independent effects.

finally, we applied the tool to leukemia and lymphoma data. our classification was very successful with 100% accuracy in the cross validation for both outcomes, similarly to what has been reported previously using multiple classification techniques
 <cit> . the rule visualization provided a fast overview of the rule models and showed that there was very little overlap of conditions between the rules. this was likely caused by the small number of objects which allowed the individual rules to be of high quality; thus without the need for the rule-generation algorithm to construct a set of partly overlapping rules. using the rule networks we were able to observe several possible interactions, of which many were computationally validated on our data. we believe it would be worth studying those interactions further and ultimately to validate them experimentally.

by making the ciruvis freely available on the web
 <cit>  we hope that it will benefit the further research on rule-based classifiers and interactions. additionally, since decision trees are commonly used and may be translated into rules, the application of the tool on decision trees would also provide an interesting extension.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
jk and sb conceived the study. sb performed the experiments and analyzed the data. sm and sb implemented and developed the web-based tool. jk supervised the work. sb drafted the manuscript with input from jk and sm. all authors read and approved the final manuscript.

supplementary material
additional file 1: table s1
description of parameters and possible values for the rule submission form.

click here for file

 additional file 2: figure s1
 ciruvis submission form.  ciruvis figure for the selected outcome “1” . rules for the selected connection between totalrooms = [ <dig> *) and medianincome = [ <dig> ,*) are shown to the right.

click here for file

 additional file 3
supplementary methods. supplementary description of the methods.

click here for file

 additional file 4: figure s2
the number of correctly classified objects varied for different maximal correlation  and level of interaction . the points a-l here represent the different parameters choices in figure 
 <dig>  the average standard error of the number of correctly classified objects in the replicates with the same x and y was  <dig>  , with datasets with the lowest x and y having the highest variation.

click here for file

 additional file 5: figure s3
correlation between pairs of features and decision in the california housing dataset are displayed in the upper half as filled circles with size relative to the correlation and in the lower half as values. positive correlations are colored from white to blue  and negative correlations from white and red .

click here for file

 additional file 6: figure s4
rule networks for the california housing data including the medianincome feature. the color of the nodes shows which feature it is, and the condition values are shown in increasing order  on the circle.

click here for file

 additional file 7: table s2
calculation of relative risks  and their confidence intervals  for each of the ten strongest connections for each outcome, as well as the expected  values. connections that had a rr significantly greater than what would be expected assuming independent effects are marked with yellow background and may indicate interaction effects. an asterisk ‘*’ in the intervals denotes + or - ∞.

click here for file

 additional file 8: table s3
the  <dig> most significant features for the lymphoma data . the original name refer to the internal name in the source data set. the gene name is given whenever it was available. the range for the discretized expression values are given as low and high.

click here for file

 additional file 9: table s4
the  <dig> most significant features for the leukemia data . the original name refer to the internal name in the source data set. the gene name is given whenever it was available. the range for the discretized expression values are given as low, medium  and high.

click here for file

 acknowledgements
jk was supported by the polish ministry of science and higher education, grant number n <dig>  <dig>  jk was partially sponsored by a grant from the swedish research council formas.
