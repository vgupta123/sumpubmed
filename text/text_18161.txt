BACKGROUND
microarray analysis has become a widely used technique for the study of gene-expression patterns on a genomic scale  <cit> . oligonucleotide and cdna arrays have been utilized to study mrna  <cit>  and protein levels  <cit> , to decipher protein-dna interactions  <cit> , to analyze the dna copy number  <cit> , to detect methylated sequences  <cit> , and to analyze gene phenotypes in living mammalian cells  <cit> . microarrays represent a very complex, multi step technique involving array fabrication, labeling, hybridization, and data analysis. currently, most laboratories are using either one labeled sample  or two labeled samples  for hybridizations, but several applications have been established were three color microarrays are used  <cit> . state-of-the-art microarrays can have from several hundred up to tens of thousands of elements annotated by dozens of parameters. information on details of the bench work, typically kept in lab notebooks or scattered files, as well as information regarding spotting, reliable tracking of the spotted molecules, scanning, and image quantification settings, is important for the computational analysis and reproducibility of experiments. every step generates a wealth of data spanning tens of megabytes and in each of them errors may occur or protocols might need optimization to improve results. moreover, all these information must be archived according to accepted scientific standards, which allow scientists to share common information and to make valid comparisons among experiments. for this reason the microarray gene expression data society   <cit>  is focusing on establishing standards for microarray data annotation and exchange, facilitating the creation of microarray databases and related software implementing these standards. mged is heavily promoting the sharing of high quality, well annotated data within the life sciences community. their initiatives – miame   <cit> , mged ontology  <cit> , and mage-ml   <cit>  – maximize the value of microarray data by permitting greater opportunities for sharing information within scientific groups and thus for discovery. these will ultimately affect the description, analysis, and management of all high throughput biological data.

the 'list of genes' resulting from microarray analysis is not the end of a microarray experiment. the major challenge is to assign biological function and to generate new hypotheses. the simplest way to find genes of potential biological interest is to search the normalized data for the highly expressed ones. additionally, identifying patterns of gene expression and grouping genes into expression classes can provide greater insight into their biological relevance. for this purpose several supervised or unsupervised clustering algorithms like support vector machines , hierarchical clustering, k-means, self organizing map , or principal component analysis  are in use. the annotation of genes or gene clusters can be achieved by mapping them to the gene ontology   <cit>  in order to provide insights into relevant molecular functions, biological processes, and cellular components  <cit> . another way to identify genes of biological interest is to map the normalized data or gene expression clusters  <cit>  to known metabolic pathways as provided e.g. by kegg  <cit>  or biocarta  <cit> .

several academic as well as commercial systems are available that address at least some of the needs such as laboratory information management systems   <cit> , microarray databases  <cit>  and repositories, normalization, clustering, pathway or go mapping tools or expression analysis platforms  <cit> . however, freely available systems which integrate all the aspects mentioned above are rare and may lack important issues like usability, scalability, or standardized interfaces. furthermore, for such integrated systems it is desireable to use a uniform and state-of-the-art software architecture in order to enhance setup, maintenance and further development.

we have therefore developed a microarray analysis and retrieval system  using latest java  <dig> platform, enterprise edtition  software technology. mars provides modules mandatory for microarray databases:

• a laboratory information management system  to keep track of information that accrues during the microarray production and biomaterial manipulation

• mage-ml export of data for depositing to public repositories e.g. arrayexpress  <cit> , geo  <cit> 

for these components already existing projects  <cit>  have been evaluated. their advantages as well as disadvantages have been taken into account for the design of mars. widely used concepts have been taken into consideration and accepted standard libraries like mage-stk  <cit> have been used whenever possible. additionally, we extented this solid foundation and added novel features which can be highlighted as distinct advantages of the mars system.

• a quality management application storing necessary quality control parameters indispensable for high-quality microarray data

• web services to connect several well established tools such as normalization, clustering and pathway annotation applications

• applications for microarray normalization, gene expression clustering, and pathway exploration that are tightly integrated into the microarray analysis pipeline

• a novel, comprehensive, and web based user management system to administrate institutes, groups, users, and their corresponding access rights

implementation
software architecture
mars is based on a three tier architecture  using the java  <dig> platform, enterprise edition , which defines a standard for developing multi tier enterprise applications. the j2ee platform simplifies the development of enterprise applications using on standardized, modular components like enterprise javabeans , java servlets, java server pages , and xml technology.

a relational database  builds the data- or enterprise information system tier. in the middle tier the j2ee compliant application server jboss  <cit>  is situated. it manages the access to the relational database as well as the interaction with the data. the web server in conjunction with a servlet-container is responsible for the presentation tier. all the servlets and jsps are executed to enable input and output of an application and to manage the applications workflow logic. an advantage of a multi tier architecture is that different tiers can be deployed to different servers, enabling load distribution as well as scalability.

systems
the database schema, the business logic, and the web interface can be subdivided into five major groups:

 <dig>  microarray production
to address the needs of many laboratories which produce their own microarrays, mars includes a generic array production lims. it manages data regarding the substances  and their localization in microtiter plates, the array design spotted on the support, as well as single arrays and array batches. the flexible and generic database design facilitates mapping of the steadily changing laboratory workflow. additionally, each plate can be assigned to a library, which designates the organism and contains details about the cloning vector, forward and reverse primer and standard molecule annotations including gene name, accession number, unigene number, and sequence. substances stored in microtiter plates may undergo certain manipulations such as pcr amplification. therefore a pcr amplification event can be assigned to a plasmid plate in order to generate a pcr plate in the database.

after entering the information necessary for spotting, a file is generated and prepared for download. this file is used by the spotting robot software to generate an array design file. after the spotting run has been completed, the array design file has to be uploaded into mars. for each spotting run an array batch has to be created in mars, and all slides spotted by this spotting run have to be assigned to this array batch. additionally, important parameters regarding the spotting run such as temperature, duration, or humidity can be assigned to this array batch. barcode tracking is employed for plates as well as for arrays to reduce possible input errors. laboratories using commercial arrays have to upload the array design instead and define an array batch afterwards.

 <dig>  sample preparation
samples can be annotated in a user-customizable manner. mars allows the annotation of biological descriptions such as the source and characteristics of a sample , any genetic and chemical manipulation and stimulation. performing such annotations in free text fields leads to large undefined vocabularies and makes them difficult to query. thus, three different annotation types are provided: 1) enumeration enabling the usage of defined vocabularies or ontologies, 2) numbers to allow scoring and counting and 3) free text. annotated samples will be linked to an extract, enabling a lab worker to annotate the extraction method, protocol, concentration, purity, and quantity. the labeled extract stores information on used extract quantity, the label and the labeling protocol.

 <dig>  hybridization and raw data management
the hybridization page archives parameters regarding the hybridization tool and method and is linked to the used labeled extracts. in contrast to several other microarray databases mars can handle any number of labeled extracts and thus allows the storage of multi color experiments. resulting images from hybridized scanned slides can be uploaded to mars and added to a hybridization record. it is noteworthy that a hybridization can have several image sets associated with images of different scanner settings. after analyzing the images several different raw datasets analyzed with different program settings can be uploaded and added to the appropriate image set.

 <dig>  experiment annotation
a set of hybridizations forms an experiment. to store the experimental design these hybridizations can be divided into classes, paired, and flagged as a dyeswap hybridization. additionally, an experiment can be annotated using mged ontology definitions  to specify the perturbational, methodological, and epidemiological design, as well as the biological properties. transformed datasets can be added to classes and their corresponding raw dataset.

 <dig>  quality management
to ensure high quality data and to allow the detection of possible sources of errors, a powerful quality management system has been integrated into mars. this system is based on standard quality control procedures conducted during microarray production as well as during sample preparation, extraction and hybridization. in order to control the quality of pcr and purified pcr products generated during probe production, authorized users can upload gel images and analyze the bands according to a predefined schema . based on this schema, pcr products can be identified later as a source of bad or missing spots on a slide. quality annotation can be viewed by any user.

slides can be scanned after fixation and/or after staining and parameters like spot walking or the number of missing spots are used to determine slide quality. in addition to array production quality controls, it is also necessary to check the quality of samples and its extracts. data gained from an agilent bioanalyzer or gel images can be uploaded and analyzed either automatically  or manually  . labeled extracts can be measured with a spectrophotometer to assess the efficiency of dye incorporation. results of these measurements can be entered into mars and the corresponding efficiency is calculated automatically. finally, the quality of a hybridized slide is analyzed by extracting and displaying several statistical parameters from the raw data result file and by examining positive and negative controls printed onto a slide.

data interfaces
one of the most important parts for the acceptance of a database is the data import interface. to allow the import of generic file formats, we have implemented a user definable parser that allows to read any tab delimited text file. the user has to define a file format where file columns are assigned to appropriate database fields. mars allows to define file formats for importing plates, raw datasets, transformed datasets, and array designs.

any file that has to be imported, linked, or used has to be uploaded to mars at first. afterwards these data can be analyzed by the users at their office desk without having to use another central storage system. uploaded files are stored on the servers file system where mars has been installed. additionally, links to these files are maintained in the relational database to prevent the deletion of already imported, linked, or used files.

the implementation of other web based applications and more important, the usage and correct linkage of their stored data have been addressed by an external application connector interface. additional applications like supplementary quality checks can be added without any additional coding in mars. the mars user interface is dynamically displaying links to all former registered applications.

the microarray gene expression markup language  has emerged as a language to describe and exchange information about microarray based experiments  <cit> . mage-ml is based on xml  and can describe microarray designs, microarray manufacturing information, microarray experiment setup and execution information, gene expression data, and data analysis results. by using the java mage-stk   <cit>  mars is able to export samples, extracts, labeled extracts, arraydesigns, raw datasets, or whole experiments including several hybridizations.

web service
in order to grant users access to mars with software they are familiar with , mars provides a well defined simple object access protocol  interface. soap is an xml-based communication protocol and encoding format for inter-application communication. after minor software adaptions these interfaces allow to authenticate against mars, to browse own and shared datasets, to download raw data, to filter the data, and to insert transformed datasets into mars. to take advantage of the soap web service we provide a java library called marsexplorer, that allows software developers to extend their programs with data access functionality to mars. additionally, if no firewall is located between the client software and mars, the mars api  can be used to access public accessible methods via the rmi  interface.

access control
to avoid unauthorized database access in a multi user environment the control of user access is a crucial criterion for the acceptance of any database managing functional genomic data. furthermore, the definition of several fine grained user access levels that allow to visualize, edit or delete data  based on the user rights is mandatory. therefore we have developed an extensible and easy to use authentication and authorization system  which rests upon the same technology as mars. in addition to its web based management interface, the aas provides software libraries that enable existing and new applications the integration of highly sophisticated authentication and authorization mechanisms. moreover, the aas provides single-sign-on to all its connected web based applications. since this aas can also be used in various projects or institutions relying upon freely available software, mysql has been choosen as database management system. if desired, this aas can also manage windows and unix accounts using samba  <cit>  and ldap   <cit> . for instance, at the insitute for genomics and bioinformatics all web based applications and user accounts are administrated by one single instance of the aas.

RESULTS
database
all mars user interfaces are providing a consistent look and feel and are very intuitive to use. in general, the web based user interface can be divided into two types of user interaction pages: the first one is an input form, where a user can record required and optional data according to the miame standard. required fields are marked in magenta and are validated for correct input. the second allows to list all stored records. to keep the information on a page simple, a user can hide unnecessary datafields. furthermore it is possible to query for specific records  using the mars report query tool. because all web pages are linked together, mars permits to follow all conducted steps from the transformed data back to the corresponding well in a microtiter plate and to visualize the results of quality controls. the description of an experiment including hybridizations and their raw datasets is typically the starting point for further analysis.

analytical pipeline
the usability of mars and the functionality of the provided interfaces and apis  are revealed by the integration of mars into an analytical pipeline of microarray analysis, beginning with image analysis, normalization, gene expression clustering, and finally mapping of gene expression data onto biological pathways.

after entering all required information into mars, the first step is to normalize the raw data gathered from the image analysis software in order to remove systematic and random errors inherent in the data. arraynorm  <cit> , an application for visualization, normalization and analysis of two-color microarray data facilitates these essential steps. raw data including the definition of experiment classes  and pairs  from whole experiments can be loaded from mars into arraynorm. after visualization and applying different normalization methods like linear regression, lowess, or self-normalization, the transformed intensities can be written back to mars, including the history of the applied methods. the next step in the analytical pipeline is usually gene expression cluster analysis to extract the fundamental patterns inherent in the data and to organize genes with similar expression patterns into biological relevant clusters. normalized gene expression data can be loaded into genesis  <cit> . genesis allows to cluster the dataset using various similarity distance measurements and different clustering algorithms like hierarchical clustering, k-means, self-organizing maps, principal component analysis, correspondence analysis, and support vector machines. moreover it is possible to perform one-way anova to identify differentially expressed genes and to incorporate the gene ontology  to map gene expression clusters to go terms. results can be written back into mars.

finally, the pathway editor  <cit>  provides the opportunity to access mars and to map data either from whole experiments or from gene expression clusters to specified pathways in order to get an overview of gene expression changes and their influencing factors. all aforementioned applications have integrated marsexplorer to connect to mars and to query, up- and download datasets.

discussion
the database design, state-of-the-art software technology, well designed user interface, and its application interfaces make mars a powerful tool for storing, retrieving, and analyzing multi color microarray data. the fusion of web based and standalone applications provides researchers with an unique set of computational tools for genomic and transriptomic data.

the main strengths of mars are:

 <dig>  data interfaces
fundamental for the acceptance of a database are the data interfaces. in principle two types of data interfaces for human computer interactions can be distinguished. standalone applications allow better program-user interactions while having the drawback that several or even very old versions are in use. on the other hand web based applications can be easily used on every computer without any installation effort and they provide the same and newest version to all users with the cost of limited user interaction. to ensure data integration and good usability we have developed the core data manipulation and storing functions using web based technology and for data analysis we are using robust applications.

 <dig>  application interfaces
excellent usability does not only account for primely data interfaces. the ability to easily import data and the availability of well defined application interfaces are also crucial. different institutions use diverse, mostly self tailored applications with proprietary and varying data formats. mars provides several data and application interfaces. to import data we provide user definable and manageable parsers. when a user is uploading data, mars tries to find an appropriate parser based on the file data or format header. once the data is uploaded and stored, the data can be analyzed using the provided applications. for scientists who would like to analyze their data with other software, mars provides also a web service data interface. after some slight adaptations, users can authenticated and down- or upload data. providing a web service interface allows through its wide spread and platform independence to be implemented in all well-established programming languages and in tools like matlab or bioconductor.

existing web applications can be plugged-in using the eaci that enables the linkage between data provided by the plugged-in application and data stored in mars. moreover it is possible to extend mars without having to amend the mars source code.

 <dig>  quality management
in order to assure high-quality data and to understand or optimize lower value data it is important to be able to trace back all conducted quality control steps. mars traces several quality measurements performed during the microarray production as well as during the sample preparation, extraction, and hybridization process. these quality checks are implemented as an additional application called mars-qm, which is tightly integrated into mars.

 <dig>  data sharing and export
mars enables users to share their datasets with other users. supplementary to the user oriented data management an institution oriented level has been introduced. this amelioration allows several institutes to store their data into one data repository without having to share common settings and resources such as scanners, but offering the possibility to share the data among them.

besides the sharing of microarray experiment data we provide the possibility to export hybridizations and experiments using the common exchange format mage-ml. this feature facilitates the easy sharing and publishing of high quality, well annotated data within the life sciences community by uploading the generated files to public repositories like arrayexpress  <cit> .

 <dig>  user management
since microarray- as well as the corresponding quality control data may contain highly sensitive data, we have integrated our aas into mars to provide authentication and fine grained authorization mechanisms. the combination of aas and external application connector interface provides through a single-sign-on mechanisms and dynamic linkage of data the possibility to assemble heterogeneous web applications to one powerful suite.

because information attached to molecules is changing quickly, we are currently implementing the possibility to update and enhance the information tagged to a molecule. changing this information on the molecule level may affect already existing results. in order to avoid such precarious alterations, a user should be able to update the molecule information for each experiment separately instead of replacing the initial molecule information. further ongoing projects concentrate on the integration of affymetrix genechip arrays into mars and the improvement of mage-ml export capabilities in order to obtain approval from the arrayexpress annotation team. both features will be made available to the public in the next major release.

CONCLUSIONS
in summary, we have developed an integrated system consisting of a microarray database and a microarray quality control database, that has been tailored to serve the specific needs of microarray based research projects. due to the unique fusion of using web based and standalone applications connected to the latest j2ee application server technology, bioinformatics researchers receive the benefits of standards-based software engineering. the system can provide a model how to build up a similar platform for other emerging functional genomics technologies.

availability and requirements
• project name: mars

• project home page: 

• operating system: solaris, linux, windows

• programming language: java, html

• other requirements: java jdk  <dig> .x, oracle 9i, mysql  <dig> .xx, server with at least  <dig> gbytes of main memory

• license: igb-tug software license

• any restrictions to use by non-academics: no

installation of mars is not complicated and should be manageable within a few hours if necessary access rights especially to oracle and mysql are granted. step-by-step instructions are provided at the projects web site together with the files and scripts necessary for installation. the reference installation of mars is running on a sun fire v <dig> server under solaris  <dig> using oracle 9i as database management system. attached is a storage area network  with  <dig> tbytes.

the production instance of mars contains information from more than  <dig> microtiter plates,  <dig> array batches,  <dig> hybridizations, and  <dig> rawbioassays with about  <dig> , <dig> datapoints.

authors' contributions
mm, rm, and as designed and implemented the current version of mars. they were responsible for the database design, the development of the business- as well as presentation logic. jh developed the quality management system and incorporated it into mars. mm and jh were the lead developers of the aas. hh, ap, gs, and ms have been involved in the compilation of the user requirements document and contributed to the conception and design of the system. zt was responsible for the overall conception and project coordination. all authors gave final approval of the version to be published.

