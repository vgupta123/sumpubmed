BACKGROUND
drug repositioning aims to identify new therapeutic effects for known drugs. by repositioning known drugs, drug development time, costs and risks can be reduced significantly . there are mainly two challenges to reposition drugs. first, pharmacological data is usually big and difficult to analyze  <cit> . second, pharmacological data is highly complex and involves various drug characteristics, including their chemical structures, molecular targets and induced gene expression signatures  <cit> .

existing drug repositioning methods can be divided into three categories; data-driven methods , text-mining methods  <cit> , and network-based methods . the data-driven methods reposition drugs by analyzing pharmacological data using statistical and machine learning concepts such as statistical estimations, classification and clustering  <cit> . because of the overlapping nature of pharmacological data  <cit> , the evaluation process of the data-driven methods is complicated  <cit> . on the other hand, text mining methods use efficient text analytics and semantic inference approaches to reposition drugs  <cit> , but their application is limited by the availability of relevant biomedical publications and reports. network-based methods are emerging methods that use networks to represent pharmacological data  <cit> . these methods typically reposition drugs by identifying drug candidates in multiple decomposed subnetworks . even though multiple therapeutic effects are expected to be found, it requires a long time to analyze these multiple decomposed subnetworks.

subnetwork identification is a technique to identify a single small-scale subnetwork from a large-scale network. it differs from previous network-based methods in that we only need to analyze a single identified subnetwork. this method has already been proven to be efficient to simplify the visualization and interpretation of protein-protein interaction networks , protein-dna interaction networks  <cit> , gene-regulatory networks  <cit>  and metabolic networks  <cit> . however, to our knowledge, no one has applied subnetwork identification to pharmacological networks so far. this paper will fill this gap by exploring the application of subnetwork identification to drug repositioning for the first time.

the prize-collecting steiner tree  approach is gaining traction in subnetwork identification, but has not been tried with pharmacological data yet. existing methods are slow and non-deterministic, chance based. this method is heuristic, i.e. it is not an exact solution, but it is deterministic. the definition of prize-collecting steiner tree problem  is given as follows: let g= be a connected, undirected graph, where v is the set of vertices, e is the set of edges, p is a function which maps each vertex in v to a non-negative number called the prize, and c is a function which maps each edge in e to a positive number called the cost. let t be a subset of v called terminals. the aim of pcstp is to find a connected subgraph g
′=,v
′⊆v,e
′⊆e which contains all the terminals while minimizing the objective function c=∑e∈e′c−∑v∈v′p, and the optimal solution of pcstp is called steiner minimum tree  in g for t.

the algorithms for pcstp can be divided into two groups: exact algorithms and heuristic algorithms. exact algorithms can find smt, but are slow in large graphs  <cit> . on the contrary, heuristic algorithms can find solutions faster, but they may only find close approximations to smt  <cit> . the drug similarity networks  we used in this paper are large graphs with  <dig> vertices and thousands of edges. thus, it is necessary for us to use heuristic algorithms in dsns. many heuristic algorithms have been proposed to solve pcstp; the gw algorithm  is the most popular one . however, in our simulations we observe that gw algorithm does not perform well in dsns. physarum-inspired algorithms are emerging heuristic algorithms that have already been used to solve pcstp  <cit> . in this paper, we propose a new physarum-inspired algorithm called physarum-inspired subnetwork identification algorithm  to identify subnetworks in dsns. our proposed psia outperforms the popular gw algorithm by identifying more suitable subnetworks for drug repositioning. furthermore, by analyzing the identified subnetworks, we find evidence to support previous discoveries that some drugs could be repositioned for cardiovascular diseases. these discoveries show that our proposed prize-collecting steiner tree approach is effective and efficient to reposition drugs.

methods
generation of drug similarity networks
we build drug similarity networks  to represent the similarities between drugs. there are several pharmacological databases at present, such as pharmgkb  <cit> , drugbank  <cit> , sider  <cit> , etc. we generate dsns using the data following the work of zhang et al.  <cit> , which includes data from drugbank and sider. similarities between drugs are quantified in dsns based on their chemical, therapeutic, protein and phenotype features. there are  <dig> chemical features,  <dig> therapeutic features,  <dig> protein features, and  <dig> phenotype features considered for each drug. therefore,  <dig>  features in total are considered for each drug.

the dsns we generated have five components: 

vertex: each vertex represents a drug. there are  <dig> drugs included in each of our generated dsns  <cit> . each drug is associated with a 1× <dig> feature vector where binary numbers represent the presence or absence of each individual feature that we consider. note that, binary numbers have already been widely used to describe drug features  <cit> .


edge: each edge represents the association between two drugs.


terminal: each terminal represents a vertex which must be contained in the identified subnetworks of dsns. in each dsn, the terminal set represents a cardiovascular subclass of drugs in the anatomical therapeutic chemical  classification system  <cit> . atc is used for the classification of active ingredients of drugs according to the organ or system on which they act and their therapeutic, pharmacological and chemical properties. there are  <dig> subclasses in the cardiovascular class ; cardiac therapy , antihypertensives , diuretics , peripheral vasodilators , vasoprotectives , beta blocking agents , calcium channel blockers , agents acting on the renin-angiotensin system , and lipid modifying agents . there are  <dig> drugs in total in these subclasses. .


edge cost: each edge cost represents the quantified dissimilarity between two drugs. the bigger the edge cost is, the more dissimilar the two drugs are. the edge cost is calculated using the jaccard coefficient, as shown in the formula below. 
  <dig> cij=1−∑k=1nυi∩υj∑k=1nυi∪υj 


where i and j are indexes of two different drugs, c
ij is the cost of edge , n is the total number of features considered for each drug, which is  <dig>  and υ
i is the feature vector of drug i.


vertex prize: a prize is associated with each vertex to signify the similarity between the drug represented by this vertex and all the drugs represented by terminals. the vertex prize is calculated using the following equation. 
  <dig> pi=∑j∈t,j≠i11+cij|t| 


where p
i is the prize of vertex i, t is the set of terminals, and |t| is the total number of terminals.




the objective of pcstp is to minimize the net-cost of edge costs and vertex prizes. thus, the subnetwork identified using the pcst approach tends to include edges with small costs and vertices with big prizes. in our generated dsns, edges with small costs connect drugs with big similarities, and vertices with big prizes represent drugs that are similar to the drugs represented by terminals. hence, a subnetwork of dsn that includes drugs similar to the drugs represented by terminals is expected to be identified using the pcst approach.

complete graphs with different sets of terminals can be generated using the five graph components defined above. since the sets of vertices are identical, the sets of edge costs are also the same in different complete graphs. however, the sets of vertex prizes are different as the sets of terminals are different in different complete graphs. pcstp algorithms perform better in sparse graphs than in complete graphs  <cit> . therefore, we propose two sparse graph generation algorithms to prune the complete graphs to produce sparse graphs for dsns.

in our first proposed algorithm, the minimum spanning tree  of the complete graphs is found using prim’s algorithm  <cit> . then, edges are added probabilistically to mst until the total number of edges is increased to the desired number. this algorithm is outlined in fig.  <dig>  in which |e| is the number of edges in the sparse graph, |v| is the number of vertices, de is the desired number of edges in the sparse graph, pro is the probability of adding edges to mst.
fig.  <dig> the first proposed sparse graph generation algorithm




our first proposed algorithm generates a sparse graph by adding edges to the mst of a complete graph. while our second proposed algorithm generates a sparse graph by deleting edges from a complete graph. the challenge of generating a sparse graph by deleting edges is to delete as many edges as possible while maintaining the graph connectivity. the graph connectivity can be checked using tarjan’s algorithm, which has the complexity of o  <cit> . it takes a long time to generate a sparse graph if the connectivity is checked every time after an edge is deleted. in our second proposed algorithm, two threshold values, t
 <dig> and t
 <dig>  are used to delete edges in two steps. in the first step, all the edges which have a cost below t
 <dig> are deleted from the complete graph. in the second step, all the edges which have a cost below t
 <dig> are deleted from the graph when deleting the edge will not make the graph disconnected. set t
1<t
 <dig>  and make sure t
 <dig> is small enough to maintain the graph connectivity. the purpose of deleting edges in two steps is to make the algorithm fast by only checking the graph connectivity in the second step. our second proposed algorithm is outlined in fig.  <dig> 
fig.  <dig> the second proposed sparse graph generation algorithm




two sparse graphs can be generated from each complete graph using the two algorithms proposed above. these two algorithms generate sparse graphs by only considering the edge costs. since the sets of edge costs are the same in different complete graphs, the sparse graphs generated using the same proposed algorithm will have the same set of edges. therefore, sparse graphs with two different sets of edges are generated using the two proposed algorithms, and these two types of sparse graphs are visualized in fig.  <dig>  in which fig. 3
a visualizes the sparse graphs generated using the first proposed algorithm, and there are  <dig> vertices and  <dig> edges in each of them, fig. 3
b visualizes the sparse graphs generated using the second proposed algorithm, and there are  <dig> vertices and  <dig> edges in each of them.
fig.  <dig> visualization of two types of sparse graphs. a shows the first type of sparse graphs, which are generated using the first proposed algorithm. b shows the second type of sparse graphs, which are generated using the second proposed algorithm




the distributions of edge costs in the complete graphs and two types of sparse graphs are shown in fig.  <dig>  it can be seen from fig. 4
a that most edges in the complete graphs have costs between  <dig>  and  <dig> . it can be seen from fig. 4
b that most edges in the first type of sparse graphs also have costs between  <dig>  and  <dig> . the reason why the complete graphs and the first type of sparse graphs have similar distributions of edge costs is that, in the first proposed algorithm, edges are randomly added to the mst of the complete graphs without considering their costs. however, it can be seen from fig. 4
c that most edges in the second type of sparse graphs have costs between  <dig>  and  <dig>  it is because t
 <dig> and t
 <dig> are set respectively to be  <dig>  and  <dig>  in the second proposed algorithm, and all the edges which have a cost below  <dig>  have been deleted. in the computational trials, it takes the second proposed algorithm  <dig>  s to generate a sparse graph when t
1= <dig>  and t
2= <dig> . in contrast, it takes the second proposed algorithm  <dig>  seconds to generate a sparse graph when t
1= <dig>  and t
2= <dig> . moreover, the graph becomes disconnected when t
1= <dig> . therefore, the computational trials prove that a big t
 <dig> makes the second proposed algorithm fast, but at the risk of ruining the graph connectivity, and a big t
 <dig> makes the graph sparse, but at the cost of long running time.
fig.  <dig> the distributions of edge costs in the complete graphs and the sparse graphs. a shows the distribution of edge costs in the complete graphs. b shows the distribution of edge costs in the first type of sparse graphs, which are generated using the first proposed algorithm. c shows the distribution of edge costs in the second type of sparse graphs, which are generated using the second proposed algorithm




dsns in sparse graphs are generated using the two proposed algorithms. because no vertex has been deleted in any of these sparse graphs, subnetworks containing similar drugs can be identified in the sparse graphs generated by both proposed algorithms. nevertheless, in our simulations we find that pcstp algorithms have better performances in dsns generated using the second proposed algorithm than in dsns generated using the first proposed algorithm.

the proposed physarum-inspired subnetwork identification algorithm
physarum polycephalum is a large amoeboid organism that has displayed many intelligent behaviors . the physarum-inspired subnetwork identification algorithm  is proposed in this paper to identify subnetworks in dsns. the proposal of psia is inspired by the lowest-cost network physarum optimization algorithm   <cit> . lnpo is designed to find pcstp solutions as close to smt as possible. there are two iteration processes in lnpo, the inner iteration process and the outer iteration process. a feasible pcstp solution can be found in each inner iteration process. the outer iteration process is used to find multiple solutions and choose the solution which is closest to smt as the final solution. however, smt or close approximations to smt may not be suitable for drug repositioning. there is no need to use the outer iteration process in psia. thus, only the inner iteration process is included in psia. moreover, the subnetwork identified in the inner iteration process may not be a tree. hence, a post-processing technique is used in psia to ensure that the identified subnetwork is a tree.

in our proposed psia algorithm, a single terminal is chosen probabilistically to be the sink node, and all the other terminals will become source nodes. let l be the total cost of edges linked to terminal i. name the terminals in such a way that l≤l≤⋯≤l, where |t| is the number of terminals. then, the probability of choosing terminal i as the sink node can be obtained by 
  <dig> p=l∑j=1|t|l 


there is flux flowing through each edge, and the flux q
ij in edge  is given by 
  <dig> qij=dijcijpri−prj 



  <dig> cij=cij−pidi−pjdj+2n 


where d
ij is the edge conductivity, c
ij is a net-cost for edge , p
r
i and p
r
j are pressures at vertex i and j, c
ij is the cost of edge , p
i and p
j are the prizes of vertex i and j, d
i and d
j are the degrees of vertex i and j, and n=m
a
x,k⊆v.

the flux flows into the network from each source node, and the flux flows out of the network from the single sink node. by considering the conservation law of flux at each vertex, the network poisson equation is described below. 
  <dig> ∑i∈vdijcij=−i <dig> j=source+i <dig> j=sink <dig> otherwise 


where v is the set of vertices linked to vertex j, and i
 <dig> is the flux flowing into each source node. let the pressure at the sink node be  <dig>  and other pressures can be calculated by solving the network poisson equation. in our simulations, we find that the net-costs of edges in dsns are quite close to each other. in this case, if all the edge conductivities are the same, then the network poisson equation may not be solvable. thus, we give each edge conductivity a random initial value to make the network poisson equation solvable.

after the calculation of pressures, the flux in each edge can be got. edge conductivities will be updated using the conductivity update equation below. 
  <dig> dij=dij+α|qij|−μdij 


where k is the number of conductivity update times, α and μ are two constants. edges with conductivities smaller than the threshold value ε will be cut from the graph. we iteratively update the edge conductivities and cut edges for k times to find a subnetwork. however, this subnetwork may not be a tree. thus, mst of this subnetwork is found to be the final identified subnetwork. the proposed psia is outlined in fig.  <dig> .
fig.  <dig> the proposed physarum-inspired subnetwork identification algorithm




because the sink node is chosen probabilistically in psia, different subnetworks can be identified in a single dsn by employing psia for multiple times. to reposition drugs, we employ psia for multiple times in each dsn to identify multiple subnetworks. then, we select the most suitable subnetwork from them for drug repositioning.

gw algorithm
besides the proposed psia, we also use the popular gw algorithm to identify subnetworks in dsns. gw algorithm was proposed by michel x. goemans and david p. williamson  <cit> , and it is widely used to solve pcstp . however, gw algorithm is designed to solve pcstp instances with a single terminal, which is called the root. while in dsns, there are multiple terminals. in this paper, we apply gw algorithm to dsns by randomly choosing a single terminal to be the root and give other terminals big prizes.

we first choose a single terminal to be the root. then, we give each of the other terminals a big prize m, and m>∑∈ecij. this big prize ensures that all the terminals will be included in the subnetwork identified by gw algorithm.

to identify a subnetwork, we initially set each vertex as a component. each component has a surplus . a component is active when its surplus is bigger than  <dig>  however, the root component will always be inactive. in addition, each edge has a deficit , and an edge is active when it is not connecting two vertices in the same component.

setting a constant Δ, we iteratively do this: the surplus of all active components are reduced by Δ, the deficit of any active edge adjacent to a single active component is reduced by Δ, and the deficit of any active edge adjacent to two active components is reduced by 2Δ. after the update of surpluses and deficits, we check that: if an edge’s deficit is not above  <dig>  we merge the two components linked by this edge and give the new merged component the sum of surpluses of the two components being merged; if a component’s surplus is not above  <dig>  we deactivate this component. the iteration will end until there is no active component disconnected with the root component.

after the iteration, the vertices and the edges in the root component will be a tree. then, we delete some vertices and edges by strong pruning the tree. the strong pruning idea was proposed by johnson et al. in  <dig>  <cit> . in the general gw algorithm, mst of the strong pruned tree is recommended to be found to increase the total net-prize of the identified subnetwork. however, in this paper, the aim of identifying subnetworks is to identify drug candidates, which are vertices in dsns. therefore, it is not necessary to find mst of the strong pruned tree, and we can directly use the strong pruned tree as the identified subnetwork for drug repositioning. the matlab coding of gw algorithm is publicly available at https://github.com/yahuisun/gw-to-identify-subnetworks.

subnetwork evaluation for drug repositioning
as described above, we select each of the  <dig> cardiovascular subclasses individually as the terminal set, and all the other drugs in the dsn are considered as non-terminal vertices. we then apply two sparse graph generation algorithms to generate two sparse graphs for each cardiovascular subclass, resulting in  <dig> dsns. we name each dsn as d_i_a or d_i_b, in which i represents the origin of the terminal set , a or b represents the first or the second sparse graph generation algorithm that is used to generate that particular dsn.

both psia and gw algorithm have been applied to each of the  <dig> dsns to identify subnetworks. psia can identify multiple subnetworks in each dsn, while gw algorithm can only identify a single subetwork in each dsn. each identified subnetwork contains all the terminals and may also contain some non-terminal vertices. in dsns, the drugs represented by terminals are in a certain cardiovascular subclass, while the drugs represented by non-terminal vertices may or may not be in the other cardiovascular subclasses. the aim of subnetwork identification is to reposition drugs for cardiovascular diseases. drugs in the cardiovascular class are closely related to cardiovascular diseases. moreover, the identified subnetwork is supposed to contain drugs that are closely related to each other. therefore, a subnetwork that is suitable for drug repositioning for cardiovascular diseases may contain a high percentage of drugs that are in the cardiovascular class and a low percentage of drugs that are not in the cardiovascular class. hence, we propose rand index   <cit>  as the metric to evaluate the identified subnetworks, and it is defined as 
  <dig> ri=ic+nnc|v|−|t|×100% 


where i
c is the number of non-terminal vertices that represent drugs that are in both the identified subnetwork and the cardiovascular class , n
nc is the number of vertices that represent drugs that are neither in the identified subnetwork nor in the cardiovascular class, |v| is the number of vertices in dsn , |t| is the number of terminals in dsn. notably, our computational trials show that identifying true positives  and true negatives  are both important to subnetwork identification for drug repositioning.

we evaluate all the subnetworks identified by psia and gw algorithm. then, we select the subnetworks with high ri as the suitable subnetworks for drug repositioning. most drugs in these selected subnetworks have already been classified into the cardiovascular class. however, there may still be drugs in these selected subnetworks that have not been classified into the cardiovascular class yet. we consider the ‘not-classified-yet’ drugs that have frequently occurred in these selected subnetworks as candidates for drug repositioning.

RESULTS
there are two groups of dsns generated in this paper. each group contains  <dig> dsns that are generated using  <dig> cardiovascular subclasses . the dsns in the first group  are generated using the first proposed sparse graph generation algorithm , while the dsns in the second group  are generated using the second proposed sparse graph generation algorithm . these dsns are publicly available at https://github.com/yahuisun/drug-similarity-network.

both psia and gw algorithm are used to identify subnetworks in two groups of dsns. since psia can identify multiple subnetworks in a single dsn, we employ psia for three times in each dsn to identify three subnetworks.

in each dsn, the subnetwork with the highest ri identified by psia is selected to compare with the subnetwork identified by gw algorithm. the comparison results are shown in tables  <dig> and  <dig>  in which id is the name of dsn, |v|, |e|, |t| are the numbers of vertices, edges, terminals in each dsn, t-origin is the origin of the terminal set in each dsn, |v
′| and |e
′| are the numbers of vertices and edges in each identified subnetwork.

i
c
7
 <dig> 
10
 <dig> 
4
 <dig> 
1
 <dig> 
4
 <dig> 
1
 <dig> 
2
 <dig> 
4
 <dig> 
1
 <dig> 
the highlighted numbers indicate the higher rand index and the corresponding i
c in each instance



i
c

d_01_b
gw
32
31
1
 <dig> 

d_02_b
psia
22
21
2
 <dig> 

d_03_b
psia
18
17
2
 <dig> 

d_04_b
psia
9
8
2
 <dig> 

d_05_b
psia
12
11
1
 <dig> 

d_07_b
psia
23
22
2
 <dig> 

d_08_b
psia
19
18
1
 <dig> 

d_09_b
psia
22
21
1
 <dig> 

d_10_b
gw
14
13
1
 <dig> 
the highlighted numbers indicate the higher rand index and the corresponding i
c in each instance




the identified subnetwork with a higher ri in each dsn has been highlighted in tables  <dig> and  <dig>  it can be seen that every highlighted subnetwork has a smaller number of vertices than the other subnetwork in the same dsn. thus, we observe that


observation 1: in each dsn, the identified subnetwork which has a higher ri is generally smaller than the other identified subnetwork.

it is preferable to choose small subnetworks than large subnetworks for drug repositioning as analysis can be done more efficiently in small subnetworks. most drugs included in our generated dsns are not in the cardiovascular class. hence, it is important for subnetworks to identify true negatives ), and then avoid false positives . one counter-example is that the subnetworks identified by gw algorithm in d_01_a to d_10_a contain many false positives, and thus are large and not suitable for drug repositioning.

in d_01_a to d_10_a, all the highlighted subnetworks are identified by psia. in d_01_b to d_10_b,  <dig> out of  <dig> highlighted subnetworks are identified by psia. in  <dig> dsns, the average ri of the subnetworks identified by psia is  <dig> %, while the average ri of the subnetworks identified by gw algorithm is  <dig> %. therefore, the conclusion below can be made.


conclusion 1: in our generated dsns, psia generally outperforms gw algorithm in identifying subnetworks for drug repositioning.


d_01_a to d_10_a are generated using the first proposed sparse graph generation algorithm , while d_01_b to d_10_b are generated using the second proposed sparse graph generation algorithm .  <dig> out of  <dig> highlighted subnetworks in d_01_b to d_10_b  have higher ri than the corresponding highlighted subnetworks in d_01_a to d_10_a . hence, the conclusion below can be made.


conclusion 2: the second proposed sparse graph generation algorithm is more suitable than the first proposed sparse graph generation algorithm for dsn generation.

we select the nine highlighted subnetworks in d_01_b to d_10_b  for drug repositioning. these subnetworks are visualized in fig.  <dig>  in which s01-s <dig> are ids of the highlighted subnetworks in d_01_b to d_10_b, the numbers in the visualized subnetworks represent the drug index , the green-color vertices represent drugs that are in the cardiovascular class, and the white-color vertices represent drugs that are not in the cardiovascular class. drug candidates are selected from the frequently occurring drugs that are not in the cardiovascular class. these drug candidates are closely related to the cardiovascular system, and they could be repositioned for cardiovascular diseases.
fig.  <dig> visualization of the highlighted subnetworks in d_01_b to d_10_b. s01-s <dig> are ids of the highlighted subnetworks in d_01_b to d_10_b. the numbers in the visualized subnetworks represent the indexes of drugs. the green-color vertices represent drugs that are in the cardiovascular class. the white-color vertices represent drugs that are not in the cardiovascular class




discussion
due to the long time, large costs and high risks to develop new drugs, drug repositioning is important since it finds new therapeutic effects for known drugs. in this paper, we propose subnetwork identification as a new method to reposition drugs. because cardiovascular health contributes significantly to the burden of illness and injury in the australian community  <cit> , and the prize-collecting steiner tree  approach is a good way to identify subnetworks, we focus on using the pcst approach to reposition drugs for cardiovascular diseases.

to identify subnetworks for drug repositioning, we generate drug similarity networks  including five components, which are vertices, vertex prizes, edges, edge costs, and terminals. the pcstp algorithm tends to identify a subnetwork constructed by vertices with big prizes and edges with small costs. in our dsns, the vertex prizes represent similarities between drugs, and the edge costs represent dissimilarities between drugs. moreover, terminals represent drugs in the cardiovascular class. therefore, a subnetwork of drugs that are closely related to the cardiovascular system is expected to be identified using the pcst approach.

 <dig> dsns are generated using  <dig> cardiovascular subclasses and  <dig> sparse graph generation algorithms. after generating dsns, pcstp algorithms are used to identify subnetworks. gw algorithm is one of the most popular pcstp algorithm. however, gw algorithm is designed for the single-terminal  case, while there are multiple terminals in dsns. therefore, we first adapt gw algorithm for the multiple-terminal case and then use it to identify subnetworks in dsns. nevertheless, gw algorithm can only identify a single subnetwork in each dsn, and this subnetwork may not be suitable for drug repositioning. hence, we propose a new pcstp algorithm, physarum-inspired subnetwork identification algorithm , to identify subnetworks in dsns as well, and psia can identify multiple subnetworks in each dsn.

we employ both psia and gw algorithm in  <dig> dsns. in each dsn, one subnetwork is identified by gw algorithm, and three subnetworks are identified by psia. since rand index gives equal weight to the identification of true positives and true negatives, it can be used to select suitable subnetworks for drug repositioning. thus, we evaluate these subnetworks using their rand index. furthermore, the subnetwork identified by gw algorithm and the best subnetwork identified by psia are compared with each other in each dsn.

based on the comparison results shown in tables  <dig> and  <dig>  we first observe that smaller subnetworks always have higher rand index than larger subnetworks in the same dsn. then, we conclude that psia outperforms gw algorithm in dsns. moreover, we conclude that the second proposed sparse graph generation algorithm is more suitable than the first proposed sparse graph generation algorithm for dsn generation.

drug repositioning for cardiovascular diseases
after the evaluation of all the identified subnetworks, we select nine most suitable subnetworks to reposition drugs for cardiovascular diseases. these nine subnetworks are visualized in fig.  <dig>  the drugs contained in these subnetworks are supposed to be closely related to the cardiovascular system. there are  <dig> drugs contained in these subnetworks, in which  <dig> drugs are already in the cardiovascular class, while  <dig> drugs are not in the cardiovascular class yet. therefore, we consider these  <dig> drugs as newly identified drugs for drug repositioning. these  <dig> drugs are listed in table  <dig>  in which index is the drug index, freq is the number of times each drug has been identified for, s01-s <dig> are ids of the nine selected subnetworks.



it can be seen from table  <dig> that ten newly identified drugs have occurred more than once in the selected subnetworks, while the other  <dig> drugs have occurred only once in the selected subnetworks. we consider the ten drugs which have occurred more than once as candidates for drug repositioning. these ten drug candidates are nitroglycerin, theophylline, arsenic trioxide, isocarboxazid, lincomycin, acarbose, adapalene, haloperidol, malathion, and neomycin.

we believe that these ten drug candidates could be repositioned for cardiovascular diseases. thus, we evaluate each drug candidate using published pharmacological discoveries. the existing discoveries on three candidates  are introduced below.

as to nitroglycerin, koch et al.  <cit>  found that nitroglycerin can produce a sharp fall in the cardiac filling pressures and the pulmonary arterial pressures. moreover, the vasodilatory effects of nitroglycerin also have the potential to be used in cardiovascular therapeutics  <cit> . as to theophylline, sollevi et al.  <cit>  found that theophylline can act as an adenosine antagonist to antagonize cardiovascular responses. as to acarbose, chiasson et al.  <cit>  found that treating impaired glucose tolerance patients with acarbose is associated with a significant reduction in the risk of cardiovascular diseases and hypertension.

it can be seen from these discoveries that nitroglycerin, theophylline and acarbose have already been suspected for their potential therapeutic effects for cardiovascular diseases. therefore, we provide evidences to support these previous discoveries. as to the other seven drug candidates, we believe that they also may interact with the biological cardiovascular system. these evidences have shown the effectiveness and efficiency of our proposed pcst approach for drug repositioning.

different types of drug similarities
in our generated dsns, the edge cost represents the quantified dissimilarity between drugs, and the vertex prize represents the similarity between the drug represented by this vertex and all the drugs represented by terminals. there are different types of drug similarities with physical meanings, such as chemical similarity, therapeutic similarity, phenotype similarity, and similarity based on their interacting targets   <cit> .

in our generated dsns, drug similarities are calculated using four types of drug features, which are the chemical, therapeutic, protein, and phenotype features. in this section, we generate new dsns based on new drug similarities, and show that the initial drug similarities calculated using four types of drug features are the best drug similarities for drug repositioning.

we generate four new types of dsns, and in each of them the drug similarities are calculated using a single type of drug features. the used drug features are chemical, therapeutic, protein, and phenotype features. we compare the standard deviations of vertex prizes and edge costs in the initial type of dsns and four new types of dsns.

the comparison results are demonstrated in table  <dig>  in which sd_vp is the average standard deviation of vertex prizes, sd_ec is the standard deviation of edge costs in the corresponding complete graphs, dsn_c is the type of dsns where drug similarities are calculated using the chemical features, dsn_t is the type of dsns where drug similarities are calculated using the therapeutic features, dsn_pr is the type of dsns where drug similarities are calculated using the protein features, dsn_ph is the type of dsns where drug similarities are calculated using the phenotype features, dsn_01_a/b to dsn_10_a/b are the initial type of dsns used for drug repositioning, where drug similarities are calculated using all the four types of drug features.



it can be seen from table  <dig> that sd_vp and sd_ec of dsn_c are higher than that of other types of dsns. it is recommended to select dsns with high standard deviations for drug repositioning as it is hard to identify drug repositioning candidates in dsns with low standard deviations. however, many drugs undergo complex and largely uncharacterized metabolic transformations, and the physiological effects of drugs may not be able be predicted by their chemical properties alone  <cit> . therefore, it is not appropriate to only consider chemical similarities for drug repositioning. similarly, it is not appropriate to only consider any other homogeneous drug similarity either  <cit> . the initial drug similarities are heterogeneous as they are calculated using multiple types of drug features. it can also be seen from table  <dig> that sd_vp and sd_ec of dsn_01_a/b to dsn_10_a/b are also relatively high. therefore, the initial heterogeneous drug similarities calculated using four types of drug features are the best drug similarities for drug repositioning.

the running time in large drug similarity networks
we use the pcst approach to identify subnetworks for drug repositioning. the prize-collecting steiner tree problem is np-hard  <cit> , which means that the time required to solve it may increase exponentially as the graph size increases. large dsns with thousands of vertices can be generated using the existing pharmacology data. thus, it is necessary to ensure that we can use the pcst approach to identify subnetworks in large dsns.

in this section, random dsns with different sizes are generated. we employ both psia and gw algorithm in these dsns using matlab r2014a on a computer with  <dig> gb ram and the intel core i7- <dig> cpu. the running time of psia and gw algorithm in these dsns is demonstrated in table  <dig>  in which dsn_x means a dsn with x vertices. the unit of the running time is minute.



it can be seen from table  <dig> that both psia and gw algorithm can identify subnetworks in large dsns with up to  <dig> vertices in a reasonable time. moreover, the running time above can be further shortened by using a low-level programming language. thus, we can use the pcst approach to identify subnetworks in large dsns. notably, even though the running time of psia is longer than that of gw algorithm, psia is considered better as it can identify more suitable subnetworks for drug repositioning.

CONCLUSIONS
drug repositioning is important for drug development. in this paper, the subnetwork identification method is used to reposition drugs for the first time. a new price-collecting steiner tree algorithm is proposed in this paper to identify subnetworks. the popular gw algorithm is also used to compare with our proposed algorithm. drug similarity networks are generated, in which vertex prizes and edge costs represent the similarities and dissimilarities between drugs respectively, and terminals represent drugs in the cardiovascular class, as defined in the anatomical therapeutic chemical classification system. in the generated drug similarity networks, our proposed algorithm identifies subnetworks with higher rand index than the popular algorithm. furthermore, nine most suitable subnetworks are selected for drug repositioning, and ten drug candidates are identified from these subnetworks. we find evidence to support previous discoveries that nitroglycerin, theophylline and acarbose may be able to be repositioned for cardiovascular diseases. moreover, we identify seven previously unknown drug candidates that also may interact with the biological cardiovascular system. therefore, our proposed prize-collecting steiner tree approach is shown to be a promising strategy for drug repositioning.

additional file

additional file  <dig> this file contains a long table of the drug indexes and names. 




declarations
this article has been published as part of bmc systems biology volume  <dig> supplement  <dig>   <dig>  15th international conference on bioinformatics : systems biology. the full contents of the supplement are available online http://bmcsystbiol.biomedcentral.com/articles/supplements/volume-10-supplement- <dig> 

funding
both ys and pnh are supported by the phd scholarships of the university of melbourne. pnh is also partially supported by nicta scholarship of national ict australia, now data <dig> since merging csiro’s digital productivity team. this work is partially funded by australian research council grant dp <dig> 

availability of data and materials
the data supporting the results of this article are included and cited within the article.

authors’ contributions
ys proposed the idea of applying subnetwork identification to pharmacology networks. pnh proposed the idea of repositioning drugs for cardiovascular diseases using subnetwork identification. pnh collected atc classification  data. both ys and pnh designed and generated the drug similarity networks. ys proposed the psia algorithm for drug positioning. ys applied both psia and gw algorithm to identify subnetworks. pnh evaluated the identified subnetworks. both ys and pnh analyzed the identified subnetworks and the drug candidates. ys and pnh drafted the manuscript. both sh and kv provided assistance on this work. all authors edited and approved the final draft.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
