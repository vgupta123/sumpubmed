BACKGROUND
next generation sequencing  technologies provide affordable, reliable and high-throughput sequencing of dna, and make it possible to comprehensively catalog genetic variations in human genomes. single-nucleotide variation is one of the most common genetic variations in human individuals. the single-nucleotide variants can be further interpreted as germline snvs, i.e. single-nucleotide polymorphisms , in normal cells or somatic snvs in cancer/tumor cells. up to date, a variety of computational methods have been developed to call germline or somatic snvs from ngs read data and a typical pileline based on ngs comprises:  sequence read quality control ;  align sequence reads from one or more samples to the genome using leading aligners ;  realign reads around indels to facilitate indel calling;  call variants using probabilistic methods ; and  assess the statistical significance of the called variants and report the results. note that some methods also call indels along with snvs.

a number of single-sample snv callers have been developed for ngs, and representative callers include maq  <cit> , soapsnp  <cit> , samtools  <cit> , snvmix  <cit> , gatk  <cit> , and fasd  <cit> . maq, soapsnp and fasd model allele counts at each site as a binomial distribution, while snvmix uses a mixed binomial distribution. all of the four callers identify snvs by computing bayesian-based posterior probabilities. both samtools and gatk employ bayesian likelihood and provide support for the processing of pooled data. it should be noted that these snv callers actually can be applied to identify any single-nucleotide genetic variation in an individual, including both germline and somatic variants, albeit originally targeting snps. in addition, some of these tools do not call indels. refer to  <cit>  for more details about the state-of-the-art research on genotyping and single-sample snv calling.

compared to germline snv calling, somatic snv calling is more challenging since its objective is to identify alleles that appear in the tumor, but do not occur in the host’s germ line. in other words, we have to additionally distinguish germline polymorphisms from somatic ones at the sites containing variants. one approach  <cit>  is to first call snvs in the tumor using conventional snp callers and then screen the predicted snvs against public snp databases, e.g. dbsnp  <cit> . unfortunately, this approach is challenged by the considerable number of novel snvs found in individuals, e.g.  <cit>  reported that  <dig> ∼ <dig> % of snvs per individual are novel events. in this case, germline mutations uncatalogued in public databases would be falsely identified as somatic mutations.

a more reliable approach to detecting somatic mutations is to call variants in both a tumor sample and its matched normal sample. approaches used by existing somatic snv callers can be classified into two categories: simple subtraction and joint sample analysis. the simple subtraction approach separately genotypes the normal and tumor samples at each site and then classifies the site as somatic if the genotype in the normal is homozygous reference and the genotype in the tumor contains alternative alleles to the reference base. this also suggests that callers based on simple subtraction can directly use well-established single-sample snv callers such as samtools and gatk. this simple subtraction approach may provide reasonable prediction for sample pairs with high somatic allele frequency and data purity. however, it has been observed that somatic mutations are prevalent at a low frequency in clinical samples  <cit> . in this case, any tendency to mistake germline mutations for somatic ones may potentially contaminate the discovery of somatic snvs. on the other hand, there are variations in somatic allele frequencies from site to site or sample to sample, which are often caused by substantial admixture of normal cells in the tumor sample, copy number variations and tumor heterogeneity. in this regard, a joint analysis of both samples is expected to be capable of further improving performance, by facilitating simultaneous tests for alleles in both samples and enabling more comprehensive representation of tumor impurity and noisy data. several somatic snv callers have been developed based on joint sample analysis, including varscan <dig>  <cit> , somaticsniper  <cit> , jointsnvmix <dig>   <cit> , strelka  <cit> , mutect  <cit>  and fasd-somatic  <cit> . albeit employing a simple subtraction approach at the core, varscan <dig> pioneered to jointly evaluate the statistical significance of allele frequency information in tumor-normal samples. somaticsniper, jsm <dig>  strelka, mutect and fasd-somatic all employ bayesian models to jointly analyze the tumor-normal pair, while adopting diverse specific procedures or formulas. in addition, unlike other somatic callers that only focus on snv calling, varscan <dig> provides additional support for somatic indel calling.

in this paper, we present snvsniffer, an integrated solution to fast and efficient identification of both germline and somatic snvs/indels. this algorithm relies on genotype inference using bayesian probabilistic models to identify snvs, and investigated a multiple ungapped alignment  approach to call indels. for germline variant calling, at each site we model its allele count vector to follow a multinomial conditional distribution, and then single out the most likely genotype by computing bayesian posterior probabilities. for somatic variant calling, we use paired tumor-normal samples from identical individuals, and at each matched site we consider the allele count vector in the normal to be a mixture of reference bases, diploid germline variants or artificial bases , and the allele count vector in the tumor to be a mixture of bases from normal cells and somatic variants besides artificial bases. moreover, we investigate a hybrid somatic snv calling approach by combing a subtraction analysis with a joint sample analysis, where joint sample analysis models the joint allele count vector from the tumor-normal pair to follow a joint multinormal distribution. for performance comparison, we have used the smash  <cit>  and gcat  <cit>  benchmarks for germline variant calling, and have used synthetic tumors from simulated data, virtual tumors  <cit>  from real sequencing data, and real mouse and human tumors for somatic variant calling. through our evaluations, in terms of germline variant calling, snvsniffer demonstrates highly competitive accuracy and faster speed than the top-performing fasd, gatk and samtools algorithms. meanwhile, in terms of somatic variant calling, our algorithm achieves comparable or even better accuracy compared to the leading varscan <dig>  somaticsniper, jsm <dig> and mutect algorithms, while demonstrating highly competitive speed.

RESULTS
the assessment of snvsniffer  is conducted from two aspects: single-sample germline variant calling and somatic variant calling from tumor-normal pairs. for germline variant calling, we have used smash  <cit> , a benchmarking toolkit for human genome variant calling and gcat  <cit> , a genome comparison and analytic testing platform for optimizing variant discovery from personal genomes. for somatic variant calling, we have generated synthetic tumors from simulated and real data, respectively, and also used real tumors acquired from the cancer genome atlas  and tron mainz   <cit> . for synthetic data, recall, precision and f-score are used to measure performance, because of the known ground truth. recall is defined as tptp+fn, precision as tptp+fp and f-score as 2×recall×precisionrecall+precision, where tp is the number of true positives, fp is the number of false positives and fn is the number of false negatives. for real datasets, sensitivity and specificity are used. sensitivity and specificity is defined as tptp+fn and tntn+fp, respectively, where tn is the number of true negatives.

in this paper, unless otherwise specified, all tests are conducted on a workstation with two intel xeon x <dig>  <dig>  ghz hex-core cpus and  <dig> gb ram, running the linux operating system . likewise, the runtime is measured in wall clock time by default and every caller runs in sequential. both varscan <dig> and fasd take mpileup-formatted input files, while other callers all use bam-formatted inputs. for snvsniffer, we have implemented three execution modes. the first mode  directly applies our calling engine to bam-formatted inputs. the second mode  realigns the reads, whose alignments have indels or soft clipped ends, to calculate per-base alignment quality  scores  <cit>  and then inputs the new alignments to our calling engine. the third mode  re-aligns all reads to calculate baq scores as samtools does. this realignment procedure could improve overall calling quality, but at the cost of lower speed and the potential loss of sensitivity, as per our experiences. in addition, gatk used the accurate “haplotypecaller” subprogram for variant calling.

it needs to be stressed that the fasd executable binary  encountered an illegal instruction error on the aforementioned workstation. fortunately, we managed to execute fasd in another personal computer  with an intel i7- <dig> quad-core  <dig>  ghz cpu and  <dig> gb memory, running the ubuntu  <dig>  operating system. since fasd was executed sequentially, its speed could be considered directly proportional to the core frequency of the cpu used. in other words, it is reasonable to estimate the actual runtime of fasd on the workstation by multiplying its runtime on the pc by a constant factor  <dig>  .

germline variant calling
smash benchmarks
we first evaluated our caller using the smash benchmark toolkit and then compared it to three leading germline variant callers including samtools , gatk  and fasd . in this evaluation, two types of benchmarks in smash are used, namely the synthetic benchmark and the sampled human benchmark. the synthetic benchmark comprises two read datasets: venter and contaminated venter, both of which are derived from the craig venter’s genome  with the variants provided by  <cit> . the sampled human benchmark consists of four read datasets: na <dig>  contaminated na <dig> , na <dig> and na <dig>  the na <dig> dataset is derived from a european female , the na <dig> dataset from a nigerian male  and the na <dig> dataset from a nigerian female . moreover, the na12878+ dataset is obtained by contaminating the na <dig> dataset with reads from the na <dig> individual’s husband . for these benchmarking datasets, smash released the alignments files in addition to raw sequence reads. in this regard, we did not realign the reads in each benchmarking dataset, and instead directly used the ready-to-use alignments. in addition, in the consideration of speed, our study merely used the reads all aligned to the human chromosome  <dig>  tables  <dig> and  <dig> show the performance comparison using the synthetic benchmark and the sampled human benchmark, respectively.
 <dig> 
133
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
119
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
best results are highlighted in boldface

 <dig> 
 <dig> 
 <dig> 
 <dig> 
226
203
190
206
best results are highlighted in boldface



on venter synthetic dataset
for snp calling, the recall is  <dig>  % for snvsniffer,  <dig>  % for snvsniffer and  <dig>  % for snvsniffer, suggesting that more broad application of baq score  <cit>  to reads could result in decreased recall. on the contrary, precision gets improved as the execution mode moves from m <dig>  via m <dig>  to m <dig> . these two observations are consistent with our expectations as mentioned above. f-score has a roughly consistent trend with precision, where the value is  <dig>  % for m <dig>   <dig>  % for m <dig> and  <dig>  % for m <dig>  in terms of recall, snvsniffer performs best, while snvsniffer and samtools are jointly second best. in terms of precision, gatk is best with  <dig>  % precision and is immediately followed by snvsniffer with  <dig>  % precision. both snvsniffer and samtools yield the worst precision. in terms of f-score, gatk is best and snvsniffer second best. meanwhile, both samtools and fasd perform worst. for indel calling, gatk performs best with respect to all measures and samtools the worst. the recall is  <dig>  % for gatk and  <dig>  % for samtools; the precision is  <dig>  % for gatk and  <dig>  % for samtools; and the f-score is  <dig>  % for gatk and  <dig>  % for samtools. snvsniffer yields the second best recall of  <dig>  % and the second best f-score of  <dig>  %, while snvsniffer gave the second best precision of  <dig>  %.

on contaminated venter synthetic dataset
due to the contaminated nature of this dataset, the performance ranking between callers becomes different compared to the venter dataset. for snp calling, similar to the venter dataset, snvsniffer yields decreasing recall, increasing precision and increasing f-score as the execution mode moves from m <dig> via m <dig> to m <dig>  more specifically, the recall is  <dig>  % for m <dig>   <dig>  % for m <dig> and  <dig>  % for m3; the precision is  <dig>  % for m <dig>   <dig>  % for m <dig> and  <dig>  % for m3; and the f-score is  <dig>  % for m <dig>   <dig>  % for m <dig> and  <dig>  % for m <dig>  samtools achieves the best recall of  <dig>  %, while snvsniffer performs second best. snvsniffer yields the best precision and f-score, whereas gatk has the worst precision of  <dig>  % and f-score of  <dig>  %. for indel calling, gatk achieves the best recall of  <dig>  %, the best precision of  <dig>  % an the best f-score of  <dig>  %. in addition, samtools performs worst for each measure.

on sampled human datasets
in this evaluation, we used sensitivity to measure the performance of a caller. snvsniffer and snvsniffer achieve ≥ <dig>  % sensitivity for each dataset. the average sensitivity is  <dig>  % for m <dig>   <dig>  % for m <dig> and  <dig>  % for m <dig>  samtools achieves the best sensitivity for the na <dig> and na12878+ datasets, while gatk performs best for the rest. on average, the sensitivity is  <dig>  % for samtools,  <dig>  % for gatk and  <dig>  % for fasd.

speed comparison
for each benchmarking dataset, snvsniffer is undoubtedly the fastest caller. on the venter dataset, this caller achieves a speedup of  <dig>  over samtools, a speedup of  <dig>  over gatk and a speedup of  <dig>  over fasd . on the contaminated venter data, it achieves higher speedups over each of the other callers. concretely, the speedup is  <dig>  over samtools,  <dig>  over gatk and  <dig>  over fasd . on the sample human benchmark, snvsniffer runs up to  <dig> × faster than samtools, up to  <dig> × faster than gatk and up to  <dig> × faster than fasd . even though snvsniffer and snvsniffer are slower than snvsniffer, they are still considerably faster than samtools, gatk and fasd for each benchmarking dataset.

gcat benchmark
the gcat platform provides a variant calling test, which uses the sequencing data from the na <dig> human individual to evaluate germline variant callers. an illumina paired-end read datatset is used in this study. this dataset is generated from the exome capture of na <dig> and has 150× coverage. all reads in this dataset are aligned using bwa  to get the initial alignments. for the sake of indel calling, the initial alignments are further processed by the indelrealigner subprogram in gatk  which locally realigns the reads around indels. as per our experiences, this realignment procedure does facilitate performance improvement for variant calling. to assess variant calling quality, gcat uses the genome in a bottle   <cit>  high-confidence calls as the gold standard. giab targets the well-studied na <dig> individual and is produced by integrating different sequencing platforms, read aligners and variant callers  <cit> . note that in this test, fasd continued to be executed in the pc as mentioned above.
table  <dig> performance and runtimes on gcat illumina 150× exome sequencing data

t
i/t
v
766
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
best results are highlighted in boldface



somatic variant calling
we evaluated the somatic variant calling performance of snvsniffer using synthetic tumors from simulated data, virtual tumors from real data and real tumors. this performance was further compared to four selected leading somatic variant callers, i.e. varscan <dig> , somaticsniffer , jsm <dig>  and mutect . among these callers, jsm <dig> outputs the probabilities of joint genotypes rather than explicitly report somatic mutations as other callers do. in this regard, as suggested by the authors  <cit> , the probability of a site being a somatic location is computed as p+p. in our evaluations, a somatic site is deemed to be valid as long as its probability is ≥ <dig>  for jsm <dig>  moreover, as shown in germline variant calling, snvsniffer demonstrates highly competitive calling quality compared to the leading callers including samtools, gatk and fasd, while achieving superior speed. in this regard, we will merely use snvsniffer for somatic variant calling performance comparison in the following. in addition, for somatic variant calling, the runtime of snvsniffer counts in the execution time spent on the estimation of tumor purity, where tumor purity represents the expected percentage of reads coming from tumor cells. the tumor purity estimation procedure is input-dependent and can take half of the overall runtime at maximum. if the value of tumor purity is specified at start-up, the tumor purity estimation procedure will not be conducted, thus significantly improving speed. details about our tumor purity estimation approach can be obtained from  <cit> .

on synthetic tumors from simulated data
we have simulated three tumor-normal sample pairs from the human chromosome  <dig>  with uniform base sequencing error rate  <dig>  %,  <dig>  % and  <dig>  % respectively . each sample is comprised of 100-bp illumina-like paired-end reads with a mean insert size of  <dig> and 30× coverage over the reference. for each tumor, we have set the expected tumor purity to  <dig> , the fraction of indels among mutations to  <dig>  and the probability of indel extension to  <dig>  for the simulation. for each sample, we aligned all reads using bwa  to get the initial alignments and employed the gatk indelrealigner subprogram to further process them, considering the existence of indel mutations.
table  <dig> somatic snv calling performance comparison

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 

 <dig> 
 <dig> 
 <dig> 
183
180
179
best results are highlighted in boldface



since only our caller and varscan <dig> support indel calling, we have further compared both callers in terms of indel calling . from the table, it can be seen that the recall, precision and f-score is relatively low for either caller. snvsniffer is superior to varscan <dig> for each dataset with respect to every metric. concretely, our caller yields  <dig>  % recall,  <dig>  % precision and  <dig>  % f-score for error rate  <dig>  %,  <dig> $ recall,  <dig>  % precision and  <dig>  % f-score for error rate  <dig>  % and  <dig>  % recall,  <dig>  % precision and  <dig>  % f-score for error rate  <dig>  %.
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
best results are highlighted in boldface



on virtual tumors from real data
we have used virtual tumors  <cit>  to assess the performance of somatic snv callers. virtual tumors only contain somatic snvs and are produced from real sequence reads of two human individuals by following the procedure described in  <cit> . we have generated  <dig> virtual tumors with tumor purity uniformly ranging from  <dig>  to  <dig> , and implanted  <dig>  somatic snv mutations. at each somatic mutation site, the normal genotype is homozygous reference while the tumor genotype is heterozygous reference accordingly.

figures  <dig>   <dig> and  <dig> show the recall, precision and f-score as a function of tumor purity, respectively. for each virtual tumor, our caller yields the best f-score and mutect the best recall. in terms of recall, our caller always outperforms varscan <dig> and jsm <dig>  in comparison with somaticsniper, our caller is superior for the virtual tumors with purity ≤ <dig> , while the former performs better for the rest. it should be noted that mutect managed to identify all somatic sites for the virtual tumors with purity ≥ <dig> , but none of all other callers is able to make it. in terms of precision, varscan <dig> is best for the two virtual tumors with purity  <dig>  and  <dig> , respectively. snvsniffer is best for the virtual tumor with purity  <dig>  and jsm <dig> best for the rest. meanwhile, both somaticsniper and mutect are inferior to our caller. in terms of f-score, jsm <dig> always yields the worst performance. somaticsniper outperforms varscan <dig> for the two virtual tumors with purity  <dig>  and  <dig> , while the latter is superior for the rest.
fig.  <dig> recall on virtual tumors in the function of tumor purity

fig.  <dig> precision on virtual tumors in the function of tumor purity

fig.  <dig> 
f-score on virtual tumors in the function of tumor purity



on real tumors
sensitivity assessment
to measure sensitivity, we have used  <dig> whole genome sequencing tumor-normal pairs for the ovarian serous cystadenocarcinoma disease, all of which are obtained from the tcga project. the accession identifiers are tcga-13-0885-01a-02w-0421- <dig> , tcga-13-1481-01a-01w-0549- <dig> , tcga-13-1488-01a-01w-0549- <dig> , tcga-24-1417-01a-01w-0549- <dig> , and tcga-24-1424-01a-01w-0549- <dig> , respectively. the gold-standard somatic variants used here are in part based on the data generated by the tcga research network . in this test, we have executed each caller on a supercomputer with each node equipped with  <dig> amd opteron  <dig> cpus of  <dig>  ghz frequency and  <dig> cores. moreover, we have measured the runtime in cpu time, instead of wall clock time as used before, in order to evade the impact of job scheduling on the supercomputer.
table  <dig> sensitivity and runtimes comparison using real tumors

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
best results are highlighted in boldface



specificity assessment
assuming alignments are correct, we can identify any site with at least one non-reference read as a mutation candidate. obviously, this very aggressive approach can lead to the development of an extremely sensitive variant caller, but will also result in enormous false positives  <cit> . therefore, given a variant caller, characterizing its specificity becomes critical in evaluating its calling accuracy using real tumors. since we are not aware of the ground truth of somatic variants in real tumors, one approach to measuring specificity is  first producing two read datasets from an identical tumor sample by two separate sequencing experiments and  then considering both datasets as a tumor-normal pair and input them to somatic variant callers. in this way, the ideal number of true positives is zero and all mutations identified are necessarily false positives.

in this test, we have used two real exome sequencing datasets generated from two separate sequencing experiments of an identical epithelial mouse tumor, i.e. the ct <dig> colon carcinoma cell line studied in tron mainz   <cit> . both datasets are sequenced using an illumia hiseq  <dig> sequencer and are also publicly available at european nucleotide archive  under the accession numbers err <dig> and err <dig>  respectively. the alignments are gained by exactly following the data processing procedure described in  <cit> . given a caller, we input the err <dig> alignments as the normal and the err <dig> alignments as the tumor, and then execute the caller on the workstation mentioned above. table  <dig> shows the specificity  and runtime comparison for all callers. from the table, none of the evaluated callers achieves zero false positive, suggesting the difficulty in accurate somatic variant calling in some sense. concretely, varscan <dig> yields  <dig> false positives and therefore achieves the best specificity of  <dig>  %. snvsniffer produces  <dig>  false positives and therefore performs second best with a specificity of  <dig>  %. mutect performs worst with the most  <dig> , <dig> false positives and the smallest specificity of  <dig>  %. jsm <dig> is superior to somaticsniper, where the specificity is  <dig>  % for the former and  <dig>  % for the latter. as for speed, somaticsniper runs fastest and snvsniffer second best. nonetheless, in comparison with all others our caller demonstrates considerably faster speed with a speedup of  <dig>  over varscan <dig>   <dig>  over jsm <dig> and  <dig>  over mutect.
 <dig> 
4507
 <dig> 
best results are highlighted in boldface



CONCLUSIONS
advances in ngs technologies have enabled us to conduct genome-wide identification and cataloging of genetic variations in a cost-effective manner. in this paper, we have presented snvsniffer to provide a fast, efficient and integrated calling algorithm for both germline and somatic single-nucleotide and indel mutations. for snv calling, bayesian models are the core of our algorithm. although bayesian models are frequently used in variant calling, an integrated solution to both germline and somatic variant discovery has not yet been extensively investigated in the literature. technically, in terms of germline snv calling we model allele counts per site to follow a multinomial distribution and employ a bayesian model to infer the most likely genotypes per site and then determine variants via genotype interpretation. on the other hand, in terms of somatic snv calling we model the paired tumor-normal allele count to follow a joint multinomial distribution, and then investigate a hybrid approach that combines subtraction analysis with a joint sample analysis to infer genotypes for both samples.

we have conducted a comprehensive study to evaluate the performance of our algorithm and then compare this performance to existing state-of-the-art callers. for germline variant calling, snvsniffer achieves highly competitive accuracy at superior speed, compared to the leading samtoosl, gatk and fasd algorithms. for somatic variant calling, snvsniffer achieves comparable or better accuracy than the selected top-performing somaticsniper, varscan <dig>  jsm <dig> and mutect algorithms, while demonstrating highly competitive speed. in particular, firstly, performance evaluation using synthetic tumors showed that snvsniffer performs best in terms of recall, associated with relatively high precision and f-score for each tumor. in contrast, mutect performs worst in terms of both precision and f-score. secondly, performance evaluation using virtual tumors demonstrated that snvsniffer always achieves the best f-score, while holding relatively high precision. in contrast, mutect has the best recall but along with the worst precision. thirdly, performance evaluation on real tumors exposed that mutect and snvsniffer yield the best and second best sensitivity, respectively, while varscan <dig> and snvsniffer performs best and second best with respect to specificity. finally, snvsniffer has superior speed to varscan <dig>  jsm <dig> and mutect, albeit slightly slower than somaticsniper. nonetheless, for somatic variant calling, there are still some limitations and challenges. firstly, the normal sample is assumed to be an admixture of germline mutations and noise. this assumption does not always hold since contamination may occur in normal cells. secondly, the accuracy of somatic indel calling is still relatively low based on our evaluations. thirdly, our caller does not take into account some more complex genomic variations in cancer such as copy number variations and sub-clonal populations. how to address such limitations and challenges is part of our future work. as the sequencing of matched tumor-normal samples is becoming a popular routine in cancer research, we still demand more accurate yet efficient calling algorithms for somatic variants at practical levels of tumor purity.

