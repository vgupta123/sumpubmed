BACKGROUND
metagenomics is a relatively new branch of science and much of the current research is exploratory. visualization has thus been a prominent aspect of the field, beginning with the analysis package megan  <cit> . distilling metagenomic data into graphical representations, however, is not a trivial task. the foundation of most metagenomic studies is the assignment of observed nucleic acids to taxonomic or functional hierarchies. the various levels of granularity  inherent in these classifications pose a challenge for visualization. node-link diagrams can be used to convey hierarchy, and bar or pie charts can relate abundances at specific levels, but neither of these methods alone creates a complete illustration of classificatory analysis. furthermore, taxonomic and functional hierarchies are often too complex for all nodes to be shown, and wide variations in abundances can be difficult to represent. megan addresses these problems by augmenting node-link diagrams with small, log-scaled quantitative charts at the nodes. this type of display is also used by the web-based metagenomic platform mg-rast  <cit> . the approach has the advantage that nodes are explicitly represented in the hierarchy, regardless of magnitude. its drawback, though, is that its disparate quantitative charts and logarithmic scaling obfuscate relative differences in abundances. another web-based platform, metarep  <cit> , features naturally scaled heatmaps of abundance, but only for specific ranks. both mg-rast and metarep can also display the relative abundances of children for individual nodes while browsing their hierarchies. a common strength of megan, mg-rast, and metarep is that they facilitate direct comparison of multiple datasets at each node, such as metagenomes sampled from different regions or under different conditions. it is important to note, however, that these comparisons will be of predictions, rather than true abundances.

metagenomic classification algorithms are constantly improving, but their results still come with a significant degree of uncertainty. only a small fraction of the tree of life is represented in reference databases, and this causes widespread bias in classifications  <cit> . uncertainty increases for more specific classifications, but can also vary widely among hierarchical branches. thus, in order to properly interpret classificatory results, it is important to be able to make direct comparisons across multiple ranks simultaneously. this task is difficult or impossible with available visualizations. moreover, most classification methods provide valuable information about the confidence of their predictions. this can be explicit, as the confidence estimates provided by the ribosomal database project  classifier  <cit>  and phymmbl  <cit> , or inferred, as from the e-values of blast results  <cit> . even though this information should be considered before drawing comparative conclusions, none of the tools discussed here provides a way of visualizing it with abundance. radial space-filling  displays  <cit> , however, allow both comparisons across multiple ranks and custom coloring, making them an attractive alternative to the typical visualizations. hybrids of traditional pie charts and contemporary treemaps  <cit> , these displays convey hierarchy implicitly via angular subdivision. as in treemaps, nesting lower levels within higher ones makes efficient use of space. however, since angular space increases with distance from the center, deeper levels of the hierarchy can be labeled without distortion. this property also creates a problem for metagenomics, though - the angular aspect diminishes for deep, broad hierarchies, making rsf displays infeasible for typical metagenomic taxonomies. to address the demands of metagenomic visualization, we have extended the capability of rsf displays with a novel layout algorithm, a polar-coordinate zooming technique, and rich interactive features. additionally, to maximize portability and keep pace with the rapidly advancing field of metagenomics, we have implemented our method, entitled krona, utilizing the emerging html <dig> standard. this allows interactive krona charts to be shared via the web and allows the krona platform to be easily adapted into existing analysis frameworks. finally, because metagenomic analysis tools continue to be introduced and refined, krona is designed to be independent of these methods and flexible enough to be adapted to new ones.

implementation
architecture
thanks to technologies such as html <dig> and javascript, modern web browsers are capable of rendering fully featured, graphical user interfaces for both web sites and local applications. krona's architecture takes a hybrid approach in which data are stored locally, but the interface code is hosted on the internet. this allows each krona chart to be contained in a single file, making them easy to view, share, and integrate with existing websites. the only requirements for viewing are an internet connection and a recent version of any major web browser . modularity is achieved by embedding xml chart data in an xhtml document that links to an external javascript implementation of the interface . when a web browser renders the xhtml document, the javascript loads chart data from the embedded xml and renders the chart to an html <dig> canvas tag. hosting the javascript on the internet avoids installation requirements and allows seamless, automatic updating as krona evolves. to allow krona to be used for a wide variety of applications, utilities for creating krona charts are separated from the viewing engine. a package of these, called kronatools, comprises perl scripts for importing data from several popular bioinformatics tools and generic file types.

hierarchical classifications can be directly imported from the rdp classifier, phymm/phymmbl, mg-rast , or the web-based bioinformatics platform galaxy  <cit> . sequences can also be taxonomically classified from blast results downloaded from ncbi  <cit>  or the metarep metagenomic repository  <cit> . classification of raw blast results is performed by finding the lowest common ancestor of the highest scoring alignments , and data are mapped to a taxonomy tree automatically downloaded and indexed from the ncbi taxonomy database  <cit> . when importing classifications from rdp and phymmbl a color gradient can be used to represent the average reported confidence of assignments to each node. for mg-rast, metarep, and raw blast results, the nodes can be colored by average log of e-value or average percent identity. also, since phymm/phymmbl and blast classifications can be performed either on reads or assembled contigs, the scripts for importing from these tools allow the optional specification of magnitudes for each classified sequence. a script is also provided to generate magnitudes based on reads per contig from assemblies in the common ace file format. other types of classifications can be imported from basic text files or an excel template detailing lineage and magnitude. finally, an xml file can be imported to gain complete control over the chart, including custom attributes and colors for each node. since node attributes can contain html and hyperlinks, xml import allows krona to be deployed as a custom data browsing and extraction platform in addition to a visualization tool.

visual design
the krona display resembles a pie chart, in that it subdivides separate classes into sectors, but with an embedded hierarchy. each sector is overlaid with smaller sectors representing its children, which are squeezed toward the outside of the chart to give the parent room for labeling. this does not cause distortion because, as in a pie chart, magnitudes are represented by the angle of each sector rather than the area. for example, figure  <dig> shows an oceanic metagenome  <cit>  imported from metarep. the taxon "gammaproteobacteria" is selected, and the angle of the highlighted sector indicates the relative magnitude of the node . the sector also surrounds smaller sectors, which represent constituents of gammaproteobacteria. in this case, the sum of the constituent angles equals the angle of the parent, indicating that no assignments were made directly to gammaproteobacteria. if assignments had been made to this internal node, its angular sweep would be wider than the sum of its children's, clearly showing both the summary and the assigned amount in relation to each other.

a common criticism of rsf displays is the difficulty of comparing similarly sized nodes. to make comparisons easier, krona sorts nodes by decreasing magnitude with respect to their siblings. in addition, the nodes can be colored using a novel algorithm that works with the sorting to visually emphasize both hierarchy and quantity. this algorithm, which is enabled by default, uses the hue-saturation-lightness  color model to allow procedural coloring that can adapt to different datasets. first, the hue spectrum is divided among the immediate children of the current root node. each of these children in turn subdivides its hue range among its children using their magnitudes as weights. coloring each sorted node by the minimum of its hue range causes recursive inheritance of node hue by the largest child of each generation. the result is visual consistency for lineages that are quantitatively skewed toward particular branches. to distinguish each generation without disrupting this consistency, the lightness aspect of the hsl model is increased with relative hierarchical depth, with saturation remaining constant.

spatial efficiency
metagenomic hierarchies can easily become too complex for all nodes to be discernibly apportioned and labeled on a computer screen. although krona ameliorates this problem with interactive zooming, it also offers several modifications to rsf displays that maximize the amount of information contained in each view.

first, radix-tree compression is used to collapse linear subgraphs in the hierarchy, simplifying the chart without removing quantitative relationships. linear subgraphs, which represent multiple ranks of the same classification, occur when taxonomic classifications for a sample are mapped onto a full taxonomy tree. for example, if homo sapiens were the only representative species of the class mammalia, it would typically be redundantly classified under primates, hominids, and other ranks. to allow such classifications to be viewed, collapsing can be dynamically toggled, with animation depicting the transition. for additional simplification of complex trees, the taxonomy can be pruned to summarize the data at a specified depth. figure  <dig>  for example, shows an ncbi taxonomy summarized at a maximum depth of  <dig> levels and with linear subgraphs collapsed.

second, since deeper taxonomical levels are often the most interesting , krona allows significant quantities at these levels to be viewed in direct relation to the root of the hierarchy. this is accomplished by dynamically reducing the labeling area of intermediate classifications, removing their labels if necessary. compression is increased moving outward from the center to ensure that the highest levels of the current view can also be labeled. the intermediate levels that have been compressed can always be seen more clearly by zooming.

finally, krona's labeling algorithms greatly increase textual information density compared to other rsf implementations. space is used efficiently by orienting leaf node labels along radii and internal node labels along tangents. internal labels use step-wise positioning and collision-based shortening to display as much text as possible while avoiding overlaps.

polar-coordinate zooming
because radial space-filling displays recursively subdivide angles, the shapes of the nodes approach rectangles as hierarchical depth increases and as node magnitudes decrease. thus, zooming small nodes by simply scaling the entire figure in cartesian coordinate space would result in a loss of the angular aspect that makes rsf displays intuitive and space-efficient. to increase the capacity of the displays without causing this problem, krona uses a polar coordinate space for zooming. this is accomplished by increasing the angular sweep and radius of the zooming node until it occupies the same circle as the original overview. the angular sweeps of surrounding nodes are decreased simultaneously, creating an animated "fisheye" effect. this animation ensures user cognition of the change in context, and the final zoomed view retains the entire capacity as the original. zooming can then be repeated for any node with children, providing informative views of even the deepest levels of a complex hierarchy. zooming out to traverse up the hierarchy can be accomplished similarly by clicking ancestral nodes, which are shown in the center of the plot and as summary pie charts next to the plot. this triggers the reverse of the fisheye animation, compressing the current node to reveal its position in the new, broader context.

multi-dimensional data
to visualize secondary attributes in addition to magnitude, individual nodes in krona may be colored by variable. for categorical variables, users may define the color of every node in the xml. for quantitative variables, a gradient may be defined that will color each node by value. an example of this is shown in figure  <dig>  where each node is colored by a quantitative red-green gradient representing classification confidence.

additionally, metagenomic data are often generated at discrete points across multiple locations or times. krona is able to store the data from multiple samples in a single document. individual samples may then be stepped through, at any zoom level, using the navigation interface at the top left. for example, in figure  <dig> krona is displaying one of seven depth samples from the oceanic water column. advancing through these samples progresses through samples at greater and greater depths. the transition between samples is animated using a polar "tween" effect, emphasizing the difference between samples. the result of this style of navigation is a series of moving pictures, where the taxa dynamically grow and shrink from sample to sample-in this case as sampling descends the water column. this approach is eye-catching for a few samples, but direct comparison between many samples simultaneously is difficult with radial charts. analysis across many samples is better left to traditional heatmap and differential barchart visualizations.

RESULTS
interactive design
the design of krona addresses the seven key tasks recommended for productive interactions with dynamic visualizations  <cit> : overview, zoom, filter, details-on-demand, relate, history, and extract. the initial radial space-filling display showing the first several ranks of the hierarchy serves as an overview, while relation of quantitative and hierarchical properties of the nodes is conveyed by angular sweep and optionally by color. any visible node can be selected to reveal details, which can include attributes, descriptions, and html elements, including hyperlinks. the selected node can then be zoomed so it fills the view, revealing its sub-hierarchy in more detail. to reduce clutter, a semantic zoom joins small, adjacent nodes into groups to create easily discernable regions, and to provide an overview while zoomed, ancillary charts display the position of the current view relative to higher levels. these can also be selected to zoom out from the current view, refocusing at the selected level. a history of zooming actions is also kept to allow users to retrace their traversal of the hierarchy. if multiple datasets are present in a chart, the view can be switched between them while at any zoom level, showing an animated transition to remain oriented. to filter the chart by node names, a textual search function highlights both matching nodes and nodes that contain hidden matches. finally, at any point while exploring data with krona, users may extract their favorite figures as publication-ready svg files for later reference.

evaluation
an effective visualization should display the data in such a way that the answers to common questions are obvious. for metagenomics, krona aims to answer questions regarding the relative abundance of taxa across multiple levels of the hierarchy simultaneously. to evaluate krona's utility for metagenomics, we chose to compare it against two other commonly used metagenomic visualizations from the mg-rast and megan toolkits. all three programs were used to visualize the famous metagenome of an acid mine drainage biofilm  <cit> . mg-rast was used to create taxonomical and functional classifications of sequencing reads from the sample. figure  <dig> shows the taxonomical classification of the same sample viewed with mg-rast, krona, and megan. the three charts have been limited to the same physical dimensions to simulate typical screen or document space, with the direct comparison highlighting the relative strengths of krona. first, because of its naturally scaled, space-filling display, krona is able to display information at all levels of the hierarchy for the most abundant taxa, from the domain to the species rank. megan and mg-rast, however, utilize a fixed-width layout that forces them to summarize abundance at higher ranks  to fit in the same space, limiting the scope of their overview.

for example, the question "what are the most abundant domain and species?" can be easily answered by the krona plot as "bacteria" and "leptospirillum rubarum". in comparison, the name of the most abundant domain is not available with mg-rast, which only displays labels and abundance at the leaves and does not summarize internal nodes like krona and megan. the megan plot does show bacteria as the most abundant domain, but its log scale suggests that bacteria and archaea are similarly abundant. the krona plot, however, shows the true abundance estimates of bacterial and archaean sequences are roughly 80% and 10% of the sample, respectively. as for the most abundant species, only krona displays enough ranks of the hierarchy to make this clear at first glance. even at the higher ranks, comparisons of abundance are difficult in the mg-rast and megan displays due to the small, log-scaled charts. evaluation of lower levels in these tools requires expanding the trees beyond the available screen space, which further hinders comparison. in cases where the rare components of a metagenome are of interest, the fixed-width displays of mg-rast and megan may be justified. however, krona's interactive search and polar zoom supports drill-down to even the smallest magnitudes, following the information seeking mantra of overview first to guide discovery, then zoom and filter  <cit> . furthermore, krona's coloring of the chart by e-value makes it clear that the blast analysis can differentiate the two most abundant species of leptospirillum with relatively high confidence, while many other abundance estimates are less confident even at the phylum level. the presence of these two species is consistent with the characterization of this metagenome, but would not be immediately evident with other visualizations.

the acid mine drainage dataset discussed above is a relatively "simple" metagenome. figure  <dig> shows a much more complex metagenomic profile of bacterioplankton in the north pacific subtropical gyre water column. this dataset was imported into krona from metarep, which hosts blast results for sequencing reads, and comprises seven separate samples at depths ranging from  <dig> meters to  <dig> meters. the multiple samples can be browsed using the navigational controls, as described previously in the implementation section. in addition, each taxon is annotated with the total number of fragments assigned, the average log-scaled e-value of the corresponding blast hits, and the genbank taxon id with html link-out. figure  <dig> displays only the bacterial component at a static depth of  <dig> meters and summarized at a maximum hierarchical depth of six levels. to experience the interaction provided by the krona interface, readers are encouraged to explore the dynamic version of this chart, available from the krona website  <cit> .

CONCLUSIONS
krona supplements existing metagenomic visualizations by creating clearer depictions of abundance estimates and by enabling in-depth understanding of the underlying classifications. it leverages recent advancements in the field of information visualization and introduces new methods of interaction. moreover, it is not tied to a specific analysis toolkit and is designed to be a generic and modular visualization, capable of benefiting a wide variety of applications within and beyond metagenomics. consequently, much of krona's strength comes from its lightweight implementation and its ease of integration into existing and powerful web analysis portals such as mg-rast, metarep, and galaxy. furthermore, to the best of our knowledge, krona is the first bioinformatics tool built completely on html <dig> and serves as a demonstration of the power of emerging web technologies for creating widely applicable and highly accessible visualization tools.

availability and requirements
• project name: krona

• project home page: http://krona.sourceforge.net

• operating system: platform independent

• programming language: html <dig>  javascript, perl

• other requirements: chrome  <dig> + , safari  <dig> +, firefox  <dig> +, opera  <dig> +, or internet explorer  <dig> +

• license: bsd

list of abbreviations
html5: hypertext markup language, version 5; rsf: radial space-filling; svg: scalable vector graphics; xhtml: extensible hypertext markup language; xml: extensible markup language.

authors' contributions
bdo conceived, designed and programmed the software and drafted the manuscript. nhb contributed to the design of the software and generated test data. amp contributed to the design of the software and drafted the manuscript. all authors read and approved the final manuscript.

