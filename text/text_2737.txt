BACKGROUND
protein structures very robust under sequence change
evolution creates the specific protein landscape that we observe today. mutations are random but selection is the driving force that shapes the observable protein variety by favoring those deviations that maintain or improve phenotype. this constrained sampling process explains the sequence diversity compatible with a given protein three-dimensional  structure: over 50-80% of all residues can be changed without altering structure significantly  <cit> .

local structure change can impact phenotype
although many different sequences map to similar structures, point mutants can change structure dramatically  <cit> . some of the intricate details of 3d structures are crucial for function. therefore, such local conformational changes may impact protein function and may cause disease. usually, this is more likely for structure changes connected to binding sites. for instance, the disruption of hydrophobic interactions, or the introduction of charged residues into buried sites, or mutations that break beta-sheets often impact phenotype severely and raise the susceptibility for disease  <cit> . using  <dig> x-ray mutant structures from  <dig> classes of proteins, an early work pioneered the prediction of local structural changes by expert rules operating on position-dependent rotamers  <cit> . it is unclear, how well such an approach would cope with the protein variety found in the current pdb  <cit> . thus, we followed a different approach. we compiled a set of structurally superimposed pairs of protein fragments with identical sequence except for one central residue mismatch, and applied machine-learning to predict structural change from sequence.

methods
central pentamer data
we extracted  <dig>  protein chains from x-ray structures in the protein data bank   <cit> . then we applied two techniques for redundancy reduction. the first set  contained  <dig>  chains; it resulted from clustering with cd-hit  <cit>  to a level at which no pair had over 98% percentage sequence identity. the second set  contained  <dig>  chains; it resulted from filtering at hval> <dig>  <cit>  . we chopped each chain in each set into all overlapping fragments of five consecutive residues , removing:  pentamers with chain breaks ,  pentamers with non-standard amino acids, and  all but the first set of atomic coordinates for residues with alternative locations. each pentamer from the first set  was paired with each pentamer from the second set .

we selected pairs of pentamers that differed only in the central amino acid, and that originated from proteins with over 30% overall percentage pairwise sequence identity. we also filtered out pairs for which either fragment was already in a much larger fragment that fulfilled the above criteria. this procedure yielded  <dig>  pentamer pairs. for each pair, we calculated the root mean square displacement  over all c-alpha atoms after optimal superposition of the two pentamer backbones . to turn the continuous rmsd differences into a binary problem , we had to decide what constitutes a structural effect and what is neutral in that sense. in lack of a scientifically meaningful definition for structural change of pentamers, we chose thresholds that appeared reasonable given the observed distributions and that separated all pentamer pairs into an even amount of structurally neutrals and non-neutrals. we defined rmsd values < <dig> Å as structurally neutral and values > <dig> Å as structurally non-neutral, i.e. as structural change; we ignored all pairs in between these two. these particular thresholds assigned  <dig>  pentamer pairs to the class of “structural change” and  <dig>  to the class “neutral”. for each such pair we randomly designated one fragment as wild type fragment and the central mismatch residue of the other fragment as the mutant amino acid.

additional functional data
for comparison, we also used two data sets that had been used previously . the first set comprised  <dig>  functionally neutral and  <dig>  functional effect mutants from  <dig>  proteins  <cit> . the second consisted of  <dig> mutants having an effect on protein stability and  <dig> mutants with no effect on stability covered by  <dig> proteins  <cit> . mutations leading to a change in the gibbs free energy  < - <dig> kcal/mol or > <dig> kcal/mol were considered as non-neutral ; all other mutations were treated as neutral .

additional prediction methods
various methods predict other aspects of the impact for amino acid changes, e.g. effects on protein function or stability. in particular, we applied snap  <cit>  and i-mutant <dig>  <cit>  to test their discriminative power on our data sets. both methods return raw numerical scores reflecting direction and reliability of the prediction. snap values range from - <dig>  to  <dig> . the distance of the actual prediction to the decision boundary  reflects the reliability of the prediction and the severity of the predicted effect . i-mutant <dig> predicts the ΔΔg value upon mutation. we adhered to the same decision cutoffs as mentioned above to define neutral and non-neutral.

prediction method: basics
we applied logistic regression to learn the structural change upon amino acid change. logistic regression is a parameter-free machine-learning algorithm; we adhered to an implementation offered by the liblinear package   <cit> .

many protein features may be relevant for the given prediction task. our feature construction procedure adhered to a protocol established during the development of snap  <cit> . all features were derived from protein sequence alone and were extracted from predictprotein  <cit> , a wrapper that combines a large number of independent prediction methods. we used three conceptually different types of features:  global features describing the global characteristics of a protein,  local features describing one particular pentamer and its immediate sequence neighborhood, and  difference features that explicitly describe sequence-derived aspects by which wild type and mutant amino acid differ.

 global features: we represented sequence length as four different values each representing a length interval . the bin that represented the sequence length was set to  <dig> , bins below were assigned to  <dig>  bins above to  <dig>  amino acid composition was encoded by  <dig> values representing relative frequencies of standard amino acids. we predicted secondary structure and solvent accessibility using profphd  <cit> . three values represented the relative content of residues in predicted helix, strand and loop conformation and, similarly, three values were used to encode the relative content of predicted buried, intermediate and exposed residues.

 local features: we used features that described the local sequence neighborhood of the amino acid change. we considered window lengths of  <dig> ,  <dig>   <dig>   <dig>   <dig> and  <dig> consecutive residues centered on the position of change. values were normalized to the interval  <cit> . the biochemical characteristics of an amino acid influence the local structural conformation. we considered six different structural and biochemical propensities: mass, volume  <cit> , hydrophobicity  <cit> , c-beta branching  <cit> , helix breaker  and electric charge of side chain. evolutionary information contained in sequence profiles is a valuable source to obtain knowledge about which amino acids are compatible with a specific region in the protein. while some residues are tolerated others could disrupt structure. we used position specific scoring matrices , relative amino acid frequencies and the information content per alignment position taken from psi-blast  <cit>  runs  against a sequence database consisting of uniprot  <cit>  and pdb  <cit> . sequences were redundancy-reduced to a level where no protein pair had more than 80% sequence identity  <cit> . furthermore, we took position-specific independent counts  and adhered to a protocol necessary for sequence extraction and generation of multiple alignment as described elsewhere  <cit> . in addition, we used the following predicted structural and functional features: secondary structure  <cit>  and solvent accessibility  <cit> , protein flexibility  <cit> , protein disorder  <cit> , protein-protein interaction hotspots  <cit>  and dna-binding residues  <cit> . most prediction methods used to generate features returned both a discrete prediction and a score reflecting the strength and reliability of the prediction. we incorporated both outputs in our feature set. two-state predictions  were encoded as two mutually exclusive combinations of  <dig> and  <dig>  each representing the presence  and absence  of a state . three-state predictions  were handled similarly. flexibility was predicted as a numerical value only. we considered information about the location of the site of change in the sequence relative to a protein domain as an important feature. for example, a hydrophobic-to-polar exchange within the core of a domain may have a more severe impact on local structure than a change that happens in a surface loop. we extracted relevant per-residue information out of the protein family database pfam-a  <cit>  using the output from hmmer <dig>  <cit> . of specific interest was the information about whether the residue resided in a domain, the conservation of that position within the domain alignment, how well the residue fitted into the alignment position and the posterior probability of that match.

 difference features: of particular interest were features that captured the difference in characteristics between the two differing central amino acids in a pair of pentamers. we represented the difference of a particular property separately by its absolute and its sign, encoded as  <dig>  or  <dig> . the following properties were encoded in that respect: change in any of the six amino acid propensities, difference in conservation scores , change in iupred predictions for both short and long disorder, change in predicted secondary structure and solvent accessibility. for the latter two we ran profphd on raw sequence rather than sequence profile. although this mode resulted in reduced prediction performance, it allowed us to observe an actual difference in the prediction outcome, which would have been disguised by the use of sequence alignments otherwise.

prediction method: feature selection
we concentrated the training of our model only on the most predictive sequence features. toward this end, we considered one fifth of the pentamer pairs  and ensured that those pairs were derived from proteins without significant sequence similarity  to any protein in the remaining four fifth of the data. those  <dig>  instances were further partitioned into ten subsets. nine such sets participated in training a logistic regression model, while its performance was tested on the remainder. we rotated ten times over all sets such that each instance served once during testing and training and guaranteed that no significant sequence similarity existed between train and test folds . before each new rotation, a set of features for training and testing the model was determined by the following iterative protocol. we started with one feature and established its predictive performance during one complete rotation as explained above. we did that for all global and difference features as well as every combination between local features and window lengths. we measured feature performance by means of average auc  derived from rotating ten times over the testing folds. the best performing feature was automatically included for the subsequent evaluation of the remaining features. we stopped this forward selection after no further increase in average auc> <dig>  was observed.

performance estimates
we assessed performance only on the test sets . in lack of a biological intuition for how to measure the success of our prediction method, we fell back to standard measures. following the typical acronyms, we used tp  to denote pairs correctly predicted to change structure  and fp  are neutral pairs predicted as change. in analogy, tn  describes correctly predicted neutral pairs  and fn  are structure-changing pairs incorrectly predicted as being neutral. with these, we compiled roc  plots, as well as the true positive rate , and the corresponding false positive rate  defined by:   

the area under the roc-curve  averaged over ten rounds of training and testing served as a single performance estimator. we also employed the overall two-state accuracy, often referred to as the q <dig> measure. finally, we monitored class-specific values for accuracyc, i.e. the accuracy for the class “structural change”, accuracyn , coveragec  and coveragen  defined by:     

our logistic regression model yielded a probability for an instance to be structurally non-neutral rather than a discrete class label. by iterating over different probability thresholds, we sampled a roc-like space of accuracy-coverage pairs for each of the two classes.

box plots
we presented distributions through box plots. the lower and upper box edges depict the first and third quartile, respectively. the length of a box is the interquartile range of the distribution. the bold bar inside the box represents the median, while dashed lines reach to the most extreme data point that is no more than  <dig>  times the interquartile range away from the upper or lower box edge. it is worth noticing that per definition the box covers half of the distribution.

RESULTS
fitting parameters to observations easily ends in the trap of over-optimization  <cit> . we have addressed this issue in two ways . firstly, we carefully applied standard cross-validation techniques. this included setting pentamer pairs aside that were used only for feature selection, ascertaining minimal sequence similarity between cross-validation sets, and avoiding to over-sample the data set. secondly, we compared the final method on completely different data sets.

evolutionary and structural features most predictive
our forward selection scheme  yielded the following features as most informative : difference in psic between “native” and “mutant”, predicted secondary structure , blast information for each residue , residue flexibility , difference in pssm and predicted secondary structure between “native” and “mutant”, hmmer scores for fitting amino acids into a pfam domain alignment , predicted protein-protein interaction hotspots , and finally the amino acid volume . due to the specific encoding of those properties , the overall feature space covered  <dig> numerical feature values.

three features dominate, most features unstable
for the final assessment of our method, we applied full cross-validation. however, in this paragraph, focus is on assessing the relative contribution of input features. toward this end, we only used one fifth of the data as one attempt to avoid over-fitting. the numbers are, therefore, only relevant in a relative way.

the success of the method was dominated by the first three features, as indicated by the steepest ascent in average auc . already the very first property alone  gave an auc of almost  <dig>  . with the third feature , the discrimination reached an auc of almost  <dig> , close to the performance maximum. the inclusion of the last feature  gave an auc of ~ <dig>  . thus, the most informative feature increased the auc by  <dig> , the last six together by only one tenth of this.

the per-feature performance varied strongly in their auc distributions . while this variance was most pronounced for the first feature , the trend continued throughout the feature selection . in the performance plateau regime, features were no longer distinguishable by the distributions of their ten auc values . nevertheless, we stopped the feature selection when the performance did not improve more than auc>10- <dig>  this early stop was implemented as another safeguard against over-fitting.

sequence-based prediction of structural impact successful
all performance measures reported in following were compiled from a 10-fold cross validation . the logistic regression model estimates the probability for structural change. through a simple threshold, this probability gives a binary prediction  with an overall two-state per-residue accuracy q2>72%. however, we also established roc-curves and accuracy-coverage plots by dialing through the whole spectrum of probability values . the final model reached an overall auc of ~ <dig> .

both above measures assess overall performance without explicitly revealing per-class  levels. we investigated pairs of coverage/accuracy values sampled at different probability thresholds. more than half of neutral and non-neutral predictions  reached around 80% accuracy ; for higher accuracy, the correct predictions were dominated by predictions of effect.

these results suggested that sequence suffices to predict the impact of point mutations upon structure through machine learning. this is particularly remarkable in light of the fact that pentamer conformations depend crucially on their structural environment outside the windows that we have considered as input features in our prediction method  <cit> .

structural effect predictions enriched in functional impact
our explicit objective was to predict the impact of single point mutations upon local structure. the implicit objective was to also develop a new perspective that aids in the prediction of how mutations affect function. while it is clear that the subset of all mutations that locally change structure will be enriched in mutations that also affect function, the inverse is not true: mutations that do not change structure may or may not change function, i.e. will not be enriched in “functionally neutral”. if our prediction method captured important aspects of structural change, at best its prediction of structural impact will be enriched in those with functional impact.

we tested this alternative perspective on performance in two ways. on the one hand, we used a data set distinguishing amino acid mutations  that impact function from those that do not. on the other hand, we used a data set of mutants that do and do not impact protein stability. two results stood out from this analysis. first, mutations predicted to affect structure were enriched in those that also affect function . second, the enrichment was proportional to the severity of predicted structural change: starting at over 76% to values over 81% at a probability > <dig>  . we observed a similar trend for the stability data: enrichment in predicted structural effect mutations was 8- <dig> percentage points above random . due to little sample size, the stability enrichment was less significant than that for functional impact.

the above results strongly suggested that our method captured important information beyond its explicit training task. the enrichment over the background might not seem particularly strong . however, it remains unclear what to compare this enrichment with: some mutations affect structure but not function. so what would the enrichment become if we had the complete experimental information correlating all possible assays for structure and function change? does our method pick up a significant fraction of the possible signal? we have no means of answering this question. however, our prediction method undoubtedly captured a signal pointing into the expected direction: the increasing severity of structural effect upon amino acid change is linked with an accumulation of mutants having an effect on protein function or stability, and this achievement was truly “novel” and it provides information that seems orthogonal to what any other method could have provided.

signal for the reverse: predicted functional impact more pronounced in structural change
in the previous paragraph, we established that our structure impact predictions capture some signal of functional change. what about the opposite, i.e. to which extent do methods that aim at predicting impact on function  and on stability  correctly capture the impact of mutations upon structure? first, we provided the “background” by the application of our structural effect method . both snap  and i-mutant <dig>  failed to separate mutations with and without impact on structure. snap at least was able to observe some signal: very few mutations with impact on structure were predicted at scores corresponding to predictions of strong effect upon function. at the default probability threshold of  <dig>  our method correctly predicted 69% of all effect , and 76% of all the neutral pentamers . the corresponding numbers were 39% functional effect in structural effect / 88% functional neutral in neutral for snap , and 33% effect on stability in structural effect / 72% no effect on stability in neutral for i-mutant <dig> .

one conclusion from applying snap and i-mutant <dig> to our data is that only our method succeeded in managing the task that we had set. one possible explanation is that our task is incorrectly formulated, i.e. our data set of pentamers with and without local structural change is wrong. imagine, we assigned labels to pentamers randomly. then snap and i-mutant <dig> would fail. if the labels had truly been random, our own method would fail, too. assume they are not random but biophysically meaningless . if this assumption were fully true, our method would not have picked up a signal in the other data sets that we tested . furthermore, if our data set were fully non-sense, snap could not have picked up a weak signal. the fact that i-mutant <dig> does not pick up a signal may point to the difference between local changes – as targeted here – and global changes – as targeted by i-mutant <dig> 

all the above considerations support the view that our definition of local structural change captures an important feature of the response of proteins to amino acid changes, and that the method introduced here succeeds at solving the task that we posed.

CONCLUSIONS
how do point mutations change the life of a protein? here, we introduced three new views toward tackling this question. firstly, we introduced a different perspective of change. structural effect by our definition is perceived as two protein fragments having a significant dissimilarity in backbone conformation. secondly, we created a new dataset that allowed us to successfully train a machine-learning model with the incentive to separate structural neutral from non-neutral fragments. thirdly, we established that both our method and definition of structural change also capture to some extent the impact of change on protein function. it remains to be investigated in more detail how exactly the new method can help in annotating the impact of amino acid changes and nssnps.

competing interests
the authors declare that they have no competing interests.

authors' contributions
cs carried out the data analysis, programming, and helped to draft the manuscript. br conceived and supervised the project, and helped to draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
datasets of mutants with observed effects on function and stability. archive of the two different mutant sets with observed effects along with predictions of their effect on local structure.

click here for file

 acknowledgements
we thank yana bromberg , marco punta  and ulrich mansmann  for helpful discussions. special thanks go to laszlo kajan, guy yachdav and tim karl  for maintenance of our compute cluster and to marlena drabik  for administrative support. particular thanks to the anonymous reviewers and the two editors  for their important help. last not least, thanks to those who deposit their experimental data in public databases and those maintaining those databases.

funding: cs and br were funded by alexander von humboldt foundation.

this article has been published as part of bmc genomics volume  <dig> supplement  <dig>  2012: snp-sig 2011: identification and annotation of snps in the context of structure, function and disease. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcgenomics/supplements/13/s <dig> 
