BACKGROUND
time course microarray and rna-seq experiments are increasingly used to study biological phenomena that evolve in a temporal fashion. unlike the static experiment which captures only a snapshot of the gene expression, the time course experiment monitors the gene expression levels over several time points in a biological process, allowing investigators to study dynamic behaviors of the genes. one goal of such experiments is to identify genes associated with a biological process of interest or a particular stimulus, like a therapeutic treatment or virus infection. the differentially expressed genes can be defined as genes with expressions changed significantly with respect to time or across multiple conditions.

the time course gene expression data typically exhibit features such as high dimensionality, short time course, few or no replicates, missing values, large measurement errors, correlations between observations over time, etc. many of the multivariate techniques for analyzing such data, for example, sam  <cit> , anova  <cit>  and empirical bayes  <cit> , suffer from serious limitations when facing missing data or non-uniformly sampled data. they also fail to account for correlations between measurements from the same gene and do not facilitate the removal of noise from the measured data. in addition, the timing information of when the measurements are taken is not utilized and the inherent temporal structure of the time course data is ignored. a hidden markov model has been proposed by  <cit>  and  <cit> , where the observed gene profiles are considered to be influenced by an underlying markov process. the computation of this model involves a large number of parameters, which can be difficult if there are no replicated data, and it can not be applied if the observation time points are distinct for different experimental groups.

functional data analysis approaches view the expression profile of each gene as a smooth function of time, and the time course measurements are collected as discrete observations from the function that are contaminated by noisy signals  <cit> . a key step is to create an estimate of the gene expression curve from the noisy functional data and this usually involves representing the expression curve as a linear combination of a finite number of basis functions, such as polynomials  <cit>  and b-splines  <cit> . another popular approach for representing functional curves is the functional principal component analysis   <cit> . in the fpca model, the basis functions are estimated from the observed data and the data-adaptive basis has the favorable property to flexibly characterize the major modes of variation in the data. so fewer number of basis functions are needed to capture the shape of gene expression patterns than that using the pre-specified basis.

many of the existing functional methods are designed for time course data with longitudinal replicates.  <cit>  used a functional hierarchical model and empirical bayes techniques to determine differentially expressed genes, but the estimates of the model parameters can be very unstable if the number of replicates is small.  <cit>  proposed a functional anova model and  <cit>  adopted the fpca model for identifying differentially expressed genes across two conditions. in both methods, the model is fitted for one gene at a time to estimate the gene-specific group mean and the covariance structure, which is computationally intensive and may result in overfitted models for a small sample size.  <cit>  adopted a similar approach as  <cit>  to impose a mixture distribution on the gene-specific variation and employed an indicator to reflect whether a gene is differentially expressed. all of these methods require longitudinal replicates in data and only apply to two group comparisons.

time course data with longitudinal replicates are costly and rather rare in reality. many of the published time course data have no replicates or only a small number of independent replicates  <cit> . the edge method proposed by  <cit>  is a comprehensive approach that is suitable for data with or without replicate, and for both single group and multiple group tests. it represented gene expression trajectories using natural cubic splines and then compared the goodness-of-fit of the model under the null hypothesis to that under the alternative hypothesis. the null distribution of test statistics was approximated by bootstrap.  <cit>  recently extended this method under a permutation-based multiple testing framework. specifically for time course data without replicate,  <cit>  developed a statistics to measure the signal-to-noise ratio by comparing the energies of the smoothing convolution and differential convolution of the expression profiles. a common problem to these existing methods is that the test statistics are constructed for each gene separately. so they may not be powerful enough to identify differentially expressed genes for short time series data and data without replicates.

in this work, we propose a unified approach to model the gene profiles using the techniques of fpca, and to identify differentially expressed genes in both single group test and multiple group test. our methodology is motivated by the gene expression data without replicate, so we will focus on this case in this paper, although our method can also be easily adapted to accommodate data with replicates. we argue that our method can improve the power in identifying differentially expressed genes compared to existing methods. first, using the eigen-basis enables a parsimonious modeling of the gene expression curves, so we have more degrees of freedom for the inference than that using a pre-specified basis. moreover, we propose to estimate the expression curve of a gene by borrowing strength across all the genes, which leads to a more powerful inference than that using the information of one gene only.

the remainder of the paper is organized as follows. we first describe the fpca model for representing the gene expression curves and then elaborate a hypothesis testing method based on random permutations to identify differentially expressed genes in both single group and multiple group scenarios. the proposed method is compared with several existing methods via the analysis of the saccharomyces cerevisiae cell cycle data from  <cit>  and simulation studies. lastly, we summarize the proposed method and discuss possible extensions.

methods
fpca for time course gene expression data
we adopt the point of view in functional data analysis to consider the time course gene expression curves as a sample of random functions. we further assume that the expression profile x of a single gene is a smooth function in the time interval , with mean function μ = e ) and covariance function g = cov , x). under mild conditions, we can assume that x possesses karhunen-loéve representation  <cit>  with representation 

  x=μ+∑l=1∞ξlϕl, 

where ϕl are sequences of orthonormal eigenfunctions with non-increasing eigenvalues λl, satisfying ∑lλl<∞ and g= ∑l=1λlϕlϕl. these eigenfunctions reflect the direction of major shape deviations from the mean function and the random coefficient ξl, often referred to as the functional principal component  score, indicates how much a gene deviates from the mean function in the direction of ϕl.

the observed gene expression data are assumed to be discrete observations from the true expression curves which are further disrupted by noisy signals. for convenience of presentation, we assume that there are no replicates. the model for the observed data can be written as 

  yijk=xij+εijk,i= <dig> …,n,j= <dig> …,j,k= <dig> …,kij, 

where n is the number of genes, j is the number of experimental groups, and kij is the number of sampling time points for gene i in the j-th experimental group. the noises εijk are assumed to be i.i.d. random variables with mean  <dig> and variance σ <dig>  in this paper, we adopt the pace method – principal component analysis through conditional expectation proposed by  <cit>  to estimate x^ij from the observed noisy data. this approach borrows information across all the genes to predict individual expression curves and is more efficient than the gene-specific smoothing method when dealing with thousands of genes simultaneously.

in real data analysis, some genes may share similar expression patterns but with dramatically different magnitude levels, for example, genes sur <dig> and sps <dig> in the yeast cell cycle data shown in figure  <dig>  using model , this magnitude difference will be modeled as the random variation around the population mean μ, which is not efficient, as the magnitude difference may obscure some other interesting variations. so we first subtract the mean expression of each gene from the observed data and apply fpca to the centered data. the empirical covariances are calculated from the aggregated data of all genes as 

  cj=1n∑i=1n, 

where μ^ij=∑k=1kijyijk/kij. we then obtain the estimate of the covariance function g by applying two-dimensional local linear smoothers to . note that the diagonal elements cj should not be used in estimating g because they are contaminated by the noise signal. when replicates are present, we can apply the above procedure to the averaged expression data y¯ijk=1mj∑myijkm, where mj is the number of replicates for group j.

the eigenfunctions and eigenvalues are estimated by numerical spectral decomposition of Ĝ for a suitably discretized version. the fpc scores can be estimated by approximating the integral ξijl=∫ab−μ)ϕldt if the observed data are dense. alternative shrinkage estimators for sparse and irregular data are described in  <cit> . analogous to the principal component analysis in multivariate analysis, the total variation in the data can be largely explained by the first few functional principal components. so we use the first l eigenfunctions to approximate x^ij and l can be chosen by the information criteria such as aic, bic, or by scree plot or fraction of variation explained , similarly as in the pca in multivariate analysis. more details for the estimation procedure can be found in  <cit> . with the estimates of all the model components in hand, we can now represent the individual gene expression trajectories as 

  x^ij=μ^ij+∑l=1ljξ^ijlϕ^jl. 

identifying differentially expressed genes
one group case
in the case of a single experimental group , we are often interested in discovering genes whose expression profiles are time-dependent. we want to test whether the expression curve is constant for gene i, i= <dig> …,n, i.e. 

  hi0:xi=μi,v.s.hi1:xi≠μi,for allt∈. 

under hi <dig>  the constant is estimated as the sample mean x^i0=μ^i=∑k=1kiyik/ki, and under hi <dig>  the curve estimate x^i <dig> is obtained as . the test statistic is a modified f-statistic, which compares the goodness-of-fit of the null model to the alternative model: 

  fi=rssi0−rssi1rssi1+δ, 

where rssi <dig> and rssi <dig> are the residual sum of squares under the null and the alternative models, respectively. in a typical time course gene expression data, the number of time points is the same for all genes within one experimental group. since we use the same number of eigen-basis functions to approximate the gene expression curves, dividing the numerator and denominator of  by the corresponding degrees of freedom will not change the ordering of the test statistics. in case that there are missing values in the data, one could adjust  correspondingly.

this statistic can also be viewed as the signal-to-noise ratio of each gene. for genes with a low signal level, variance in fi can be high because of small values of rssi <dig>  the small constant δ in the denominator can help stabilize the variance of fi. a similar idea has been adopted in  <cit> . in this work, we set δ=σ^ <dig>  the estimated variance of the noisy signal in . since cov=cov,xi)+σ2δkl, where δkl= <dig> if k=l and  <dig> otherwise, we can estimate σ <dig> by smoothing  with and without the diagonals cj. specifically, σ <dig> can be estimated by the averaged difference between the local linear smoother along the diagonal of the raw covariance and a local quadratic smoother along the direction perpendicular to the diagonal. see  <cit>  for more details.

there is a sizable literature on the asymptotic distribution of fi, for example  <cit> . however, such methods are generally not applicable to time course gene expression data, as the number of measurements for each gene is usually very small. in order to generate the null distribution of , we propose using a permutation test. each permutation sample is generated by randomly matching the expression measurements of n genes with their sampling times. if there are replicates available, the expression measurements at the same time point are permuted as a group. for example, let yikm be the m-th measurements for gene i at time tk, m= <dig> …,m. the permutation samples are obtained by randomly shuffling the time index k. to facilitate the computing efficiency, we use the eigenfunctions obtained from the observed data for the permutation samples.

with the f-statistics of the permutation samples computed from , the p-value for gene i can be defined as 

  pi=∑b=1bi{fi≥fi}b, 

where b is the number of permutation samples, i is an indicator function and fi is the statistic computed from the b-th permutation.  <cit>  proposed another definition of the p-value by considering the permutation statistics from all genes: 

  pi=∑b=1b∑j=1ni{fj≥fi}n·b. 

this definition has the advantage that the ordering of the test statistics is preserved in the ordering of the p-values. we also find in our simulations that  leads to fewer false positives than . therefore, we adopt  in the real data application.

when we apply the proposed procedure to identify differentially expressed genes, it is necessary to consider the multiple testing adjustment because n hypotheses are tested simultaneously and the number of genes n is usually very large. a commonly used strategy is to control the false discovery rate , which has been studied in various literature, including  <cit>  and  <cit> . we adopt the one proposed in  <cit>  since it is easy to compute and widely accepted.

multiple group case
in the multiple group setting, we want to identify genes with different expression profiles in different experimental groups. the hypothesis for gene i can be written as 

  hi0:xi1=…=xij,v.s.hi1:xij≠xij′,j≠j′,for allt∈. 

the estimates x^ij <dig> under hi <dig> are obtained as  by using the data from group j only. under hi <dig>  the group-free estimates x^i <dig> can be obtained using the pooled data from j groups. the residual sum of squares under the null and the alternative models are calculated as rssi0=∑j=1j∑k=1kj and rssi1=∑j=1j∑k=1kj, respectively, and the f-statistics are computed as , where δ=max with σ^j <dig> being the estimated variance of the noisy signal for the j-th group.

we again use a permutation test to obtain the null distribution of . without loss of generality, we assume that the measurement times are the same among the j groups and at least one observation is available at each time point for each group. a permutation sample is generated by permuting the pooled gene expression data at each time point, i.e., the data {yijk,1≤j≤j} are randomly partitioned into j groups. if replicates are available, i.e., {yijkm,1≤m≤mj,1≤j≤j}, the measurements are randomly partitioned into j groups of sizes m <dig> …,mj. the calculation of p-values and the multiple testing adjustment are the same as described in the previous subsection. this approach can also be extended to situations where the measurement time points vary across different experimental groups. in this case, we can divide the time interval  into small bins so that at least one observation falls into each bin for each group. we then permute the gene expression data within each bin instead of at each time point. this extended approach is further illustrated with the yeast cell cycle data in the next section.

RESULTS
yeast cell cycle data
in this section, we applied the proposed method to saccharomyces cerevisiae cell cycle gene expression data reported in  <cit> . the dataset includes the gene expression measurements of n= <dig> probe sets for both wild type and cyclin mutant cells at  <dig> different time points. in the following presentation, we refer to the probe sets as genes. the clock time points are aligned to the corresponding lifeline positions, covering about two cell cycles in the wild type and about  <dig>  cell cycles in the cyclin mutant.  <cit>  found that  <dig> genes were transcribed periodically and  <dig> of these periodic genes showed changes in expression behaviors in the cyclin mutant. in the following analysis, we use the numerical lifeline positions as indicators for time. the measurement times are irregular for both the wild type and the cyclin mutant, and in addition the time points are different among these two groups. we take log <dig> transformation of the original data.

differentially expressed genes in wild type cells
we first apply the single group test to the wild type data to identify differentially expressed genes with non-flat expression profiles. the lifeline positions of the wild type data range from  <dig> to  <dig>  where 0- <dig> correspond to the recovery phase from synchrony and 100- <dig> correspond to two cell cycles. we take the data with lifeline greater than  <dig>  including  <dig> time points. applying the fpca method, we select the first three principal components, accounting for  <dig> % of the total variation. figure  <dig> displays the estimated covariance function and the first three eigenfunctions. the ridge along the diagonal of the covariance function depicts the variance of the noisy signal. the first eigenfunction  has an increasing trend with small fluctuations after lifeline  <dig>  both the second and the third eigenfunctions  exhibit clear periodic patterns. the second eigenfunction has two peaks around lifeline  <dig> and  <dig>  corresponding to the two cell cycles, respectively. the third eigenfunction displays a seemingly sinusoidal wave up to lifeline  <dig> and increases linearly afterwards.

using b= <dig>  permutations, we identified  <dig> genes with fdr= <dig> , in which  <dig> are shared with the list of  <dig> genes identified by  <cit> . we also find that these  <dig> shared genes constitute 82% of the  <dig> top ranked genes in orlando’s list. the discrepancy between genes identified by  <cit>  and by our method may due to the differences in the selecting criteria.  <cit>  emphasized on the periodic pattern of the gene expressions, while our method aims to maximize the ratio of the variation around the mean expression and the noise level. so genes included in orlando’s list but missed by our method may have large noises in the observed data. on the other hand, genes identified by our method could have non-periodic patterns, for example, genes with large loadings on the first eigenfunction may exhibit linear trends.

it is also of interest to compare the results from the proposed method with those of the edge method proposed by  <cit>  and the permutation-based method by  <cit> . since there are no longitudinal replicates available, the methods in  <cit>  and  <cit>  are not applicable. in both edge and sohn’s methods, the gene expression curves are estimated using the gene-specific b-spline smoothing, and the number of spline basis functions is determined as the sufficient size for fitting all the top “eigen-genes”. for this dataset, nine b-spline basis functions are used. edge used a bootstrap method for approximating the null distribution of the statistics, while sohn’s method adopted a similar permutation approach as our method. in order for the results from different methods to be comparable, we also use the fdr procedure proposed by  <cit>  in the edge and sohn’s methods. table  <dig> shows the numbers of genes identified by these two methods and their overlaps with genes identified by  <cit>  and our proposed method. we can see that our method identified the most genes and had the highest agreement with the significant gene list in  <cit> .

the numbers of genes overlapped with the list by  <cit>  and the proposed method are also included.

comparing genes in wild type and cyclin mutant cells
we next apply our method to identify genes with different expression patterns in the wild type and cyclin mutant cells. we restrict this analysis to the  <dig> periodic genes identified by  <cit> . since the maximum lifeline position for the cyclin mutant is  <dig> , we consider the gene expressions within interval  <cit> , which includes  <dig> time points for the wild type and  <dig> time points for the cyclin mutant. the observation times are not equally spaced and are not the same for the two cell types.

we apply the fpca method to the wild type, the cyclin mutant and the combined samples and obtain the estimates of their eigenfunctions. figure  <dig> shows the estimates of the first two eigenfunctions, accounting for  <dig> % of the total variation for the wild type,  <dig> % for the cyclin mutant and  <dig> % for the combined data. we can see that the eigenfunctions of different samples have some similarity, but also show some clear differences: the first eigenfunction of the wild type  increases up to around lifeline  <dig> and starts to decrease afterwards, while the first eigenfunction of the cyclin mutant  increases at a slower rate but keeps increasing till the end; the second eigenfunction of the wild type  has a sinusoidal shape with a peak around lifeline  <dig> and a trough around lifeline  <dig>  while the second eigenfunction of the cyclin mutant  peaks a little later and does not exhibit an increase pattern after lifeline 200; the eigenfunctions of the combined samples seem to be the average of the corresponding eigenfunctions of the wild type and the cyclin mutant.  <cit>  found that, although the cyclin mutant cells are devoid of functional clb-cdk complex and arrest at the g1/s-phase border, a majority of their genes continued to be expressed on schedule, with minor changes in transcript behavior in comparison with wild type cells. this explains the similarity of the eigenfunctions of the wild type and cyclin mutant. in addition, we find that the cell cycle of the cyclin mutant cells seem to be 50% longer than that of the wild type, so within  <dig>  cell cycles of the wild type, the cyclin mutant cells only have one cell cycle.

since the observation times are different for the wild type and the cyclin mutant, we can not use the usual permutation. instead, we divide the lifeline domain  <cit>  into small bins with length  <dig> each. within each bin, there are at least one observation from each of the wild type and the cyclin mutant groups . the observations are permuted within each bin, using the permutation strategy for data with replicates as described in section “multiple group case”.

using b= <dig>  permutations, we identified  <dig> genes for an fdr of  <dig> , in which  <dig> are included in the  <dig> genes identified by  <cit>  with changed expression patterns in the cyclin mutant. these genes are likely to be directly or indirectly regulated by clb-cdk, and since clb-cdk activities are known to be essential for triggering the transcriptional programme, we may not observe any periodic expression patterns in these genes for the cyclin mutant cells. for this data, ten b-spline basis functions are used in edge and sohn’s methods for smoothing the expression data. the numbers of differential genes identified by edge and sohn’s methods are  <dig> and  <dig> for fdr= <dig> , respectively, sharing  <dig> and  <dig> genes with those identified by  <cit>  .

the numbers of genes overlapped with the list by  <cit>  and the proposed method are also included.

most of the genes identified by edge and sohn’s methods are also identified by our method, but our method identified some genes that are not picked by the other two methods. this is because the edge and sohn’s methods used a large number of b-spline basis for smoothing the bootstrap/permutation samples, which generally leads to under-smoothed fits. this may inflate the probability of large valued statistics under the null hypothesis, so fewer genes would be identified. in figure  <dig>  we display  <dig> randomly picked genes that are selected by our method but not by  <cit> , edge or sohn’s method.  <cit>  seems to miss some genes with vertical shifts in their expression levels. figure  <dig> shows genes that are not selected by our method but by others. the y-axis is adjusted to have the same scale of that in figure  <dig> for easier comparison. the comparison confirms that the proposed method can detect significant patterns that the other methods fail to identify.

simulation studies
simulation studies are carried out to compare the performance of our method to that of the edge method and the permutation-based method by  <cit> . we consider a single group test of non-flat gene expressions and a two group test of differential gene expressions across groups. in both cases, the data are simulated to mimic the saccharomyces cerevisiae cell cycle data set.

in the single group case, the non-differential genes have model xi= <dig>  and the differential genes have xi=∑l=13ξilϕl, where ϕ1=−2/cos2Π/, ϕ2=2/sin2Π/ ) and ϕ3=−2/cos4Π/, t∈. the coefficients ξil are i.i.d. normal r.v.’s with mean  <dig> and variance λl with λ1= <dig>  λ2= <dig> and λ3= <dig>  for each gene, the gene expression profiles are simulated at the same time points as the wild type yeast data, so there are  <dig> observations in = <cit> . the noisy signal in the observed data is simulated as i.i.d. normal r.v. with mean  <dig> and variance σ2= <dig> .

in the two group case, the data are generated from model , where j= <dig> , and the number of observations is ki1= <dig> for the “wild” group and ki2= <dig> for the “mutant” group, i= <dig> …,n. the sampling times are the same as those in the yeast cell cycle data, locating within interval = <cit> . for the true gene expression profiles, we consider model xij=∑l=12ψl, where ψ1=−2/cos2Π/, ψ2=2/sin2Π/, t∈. the coefficients ξijl∼i.i.d.n, γijl∼i.i.d.n, with = and =. for non-differentially expressed genes, we let γijl= <dig>  the error term is generated from n.

for both cases, we generate n= <dig> genes and the proportion of differential genes is set to be Π0= <dig> , <dig> , <dig> , respectively. the number of principal components in our method is selected so that the fraction of variation explained  exceeds 90%. this criterion selects the correct number of components for over 90% of time under all simulation scenarios. we tried the method proposed by  <cit> , which fits all the top “eigen-genes”, to select the number of b-spline basis for edge and sohn’s method. for over 80% of time, we ended up with selecting  <dig> basis for the single group case and  <dig> basis for the two group case, leading to severely under-smoothed gene expression curves and very few differential genes identified. we therefore manually select  <dig> bases for the single group case and  <dig> bases for the two group case for edge and sohn’s methods, which seem to provide the best results when experimenting from  <dig> bases to  <dig> bases.

we perform  <dig> simulations for each simulation setting and the results are summarized in tables  <dig> and  <dig>  we compare the performance of our fpca method in detecting differentially expressed genes with that of the edge and sohn’s methods, based on the empirical false positive rate  and senstivity . in our simulation studies, we also evaluated the performance of p-values calculated by , ‘proposedb’ in tables  <dig> and  <dig>  and by , ‘proposeda’ in tables  <dig> and  <dig>  we find that it is better to use  for computing the p-values when the proportion of differential genes is small, and throughout all settings, using  provides smaller false positive rates. we also find that under all scenarios, the proposed method clearly outperforms the edge method and sohn’s method, especially when the proportion of differential genes is small. the fact that our method has the highest sensitivity is in line with the finding that our method identified the most genes in the application of yeast cell cycle data.

proposed b uses  for computing p-values and proposed a, edge and sohn’s use .

proposedb uses  for computing p-values and proposed a, edge and sohn’s use .

CONCLUSIONS
we proposed a new method for significance analysis of time course gene expression data by integrating a functional principal component method into a hypothesis testing framework. our method can be applied to both single group and multiple group scenarios, and has shown to be more powerful in identifying temporally differentially expressed genes than the existing methods through real data application and various simulation studies. moreover, our method is generally applicable, no matter the time course expression data have replicates or not, while most of the existing methods require replicates or even longitudinal replicates.

fpca is a flexible nonparametric method for analyzing continuous trajectory data. the time course data are modeled through a data-based eigen-representation and the eigen-basis functions reflect the major modes of variation in the data. as illustrated in the yeast cell cycle data, the eigenfunctions often have a direct biological interpretation and offer a visual tool to assess the main directions in which the gene expression profiles vary. in addition, these eigenfunctions are orthogonal basis, so they carry information in a most efficient way and the representation of temporal trajectories can be more parsimonious than using the predetermined basis. this is particularly important in the significance analysis of time course gene expression data, because we could reserve more degrees of freedom for the inference.

in the edge and sohn’s methods, the test statistic is constructed as a goodness-of-fit measure for each gene separately. although our method uses a similar statistic, part of our statistic involves information from all genes, as the gene-specific expression curve and the variance stabilizer δ in the f-statistic  are estimated by borrowing strength from all the genes. this strategy can improve the power of the inference, especially for short time course data or data without replicates. in a simulation for one group test with only  <dig> measurements and no replicates for each gene , our method can identify about 50% of differential genes correctly for an fdr of  <dig>  and about 72% for an fdr of  <dig> , but the edge and sohn’s methods can hardly identify any differential genes.

our method is also computationally fast. for the yeast cell cycle data, on a dual core processor  <dig> ghz pc with  <dig>  gb ram, it took  <dig> seconds for the proposed method,  <dig> seconds for edge and  <dig> seconds for sohn’s method to complete the one group test with n= <dig> genes and b= <dig> permutations/bootstraps, and  <dig>   <dig> and  <dig> seconds, respectively, for the two group test with n= <dig> and b= <dig>  this ensures that our method can be applied to analyze very large genome wide data sets.

in our method, the covariance function is assumed to be the same for all genes in the same experimental group. this strategy has also been adopted by many other works in the analysis of time course gene expression data, for example  <cit>  and  <cit> . a similar assumption was adopted in  <cit> , where the within-gene correlation is implied in the presence of first-order dependence structure of the underlying markov process and it is assumed to be identical for all genes. although our method is presented assuming a homogeneous covariance, it can be easily extended to accommodate the heterogeneity in the covariance of gene expressions. we can first cluster the data and compute the covariance of gene expressions for each cluster, and then combine them to obtain the covariance of the mixed population  <cit> .

when smoothing the covariance function, the bandwidth is chosen by generalized cross-validation . the overall shapes of the estimated covariance and eigenfunctions are quite stable over a range of bandwidth values in our numerical examples. the smoothing parameter may have effects on the power of the inference procedure, but the detailed investigation on this problem is beyond the scope of this paper. intersected minds are referred to  <cit>  and references therein for further discussions. another related topic is to incorporate the inter-gene correlations in the multiple testing procedure, which has been discussed in  <cit>  and  <cit> . our method can be applied in combination with any of these multiple testing adjustment methods. however, the effect of different multiple testing adjustments on the results of significant testing is not the emphasis of this paper and could be an interesting topic for future research.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
sw proposed the method, performed the statistical analysis and wrote the manuscript. hw supported the research project and revised the manuscript critically for important intellectual content. all authors read and approved the final manuscript.

