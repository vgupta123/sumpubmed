BACKGROUND

network modularity represents the degree to which a network is divided into modules of separate community structures. a highly modularized network has dense connectivity between the nodes within each module but sparse connectivity between the nodes of different modules. many plugins based on the cytoscape platform  <cit>  have been developed for modularity analysis in biological networks. for example, clustermaker  <cit>  implemented several clustering algorithms such as k-means, k-medoid, scps, and autosome to visualize a structure of modules within biological networks. giant  <cit>  was proposed to investigate topological or functional relationships in a metabolic network by performing a clustering analysis and a functional cartography of nodes. another well-known plugin is nemo  <cit> , which can identify diverse network communities by means of a neighbor-sharing score based on a hierarchical agglomerative clustering method. these plugins have a limitation, though, in that they focus only on the structural analysis of a network and its visualization, without any consideration of dynamics analysis. this restricts their use to undirected networks such as protein–protein networks, or to analysis of directed networks that ignores the direction information.

herein we note previous studies showing that dynamical behaviors, particularly robustness, of biological networks can be highly affected by their modularity characteristics. for instance, a recent study reported that a modular organization of cancer signaling networks is associated with the patient survivability, which suggests a relationship between modularity and network robustness  <cit> . also, the robustness against state perturbations of a human signaling network was negatively correlated to network modularity  <cit> . modular stabilizing in protein–protein interaction networks can be recombined to create highly robust chimeric proteins in evolution  <cit> . it has been also argued that modularity reduces robustness against mutation in metabolic networks  <cit> . because of the importance of network modularity and robustness, there is a pressing need to develop a tool that can analyze both simultaneously. accordingly, we devised a novel cytoscape app called moro that can analyze a relationship between dynamical robustness and structural modularity in biological networks represented by directed graphs. in addition, to make it possible to analyze very large-scale networks, we implemented the robustness computation portion of the app as a parallel algorithm by using the opencl library. it was also designed to efficiently visualize how the detected modules are located relative to each other. furthermore, it elucidates analysis results of centrality and gene ontology  enrichment of modules. moreover, it provides a batch-mode simulation function to validate whether a result observed in a biological network is consistently conserved in many randomly organized networks. in this study, we tested our app in a case study investigating large-scale signaling networks and observed that modularity and robustness are negatively correlated, similar to previous findings  <cit> . it was verified by means of batch-mode simulation that these findings hold in random networks. moreover, we found some go terms which are differently enriched between the largest module and the rest of the modules, and it was shown that the module size is positively correlated with five centrality values. in summary, our app can efficiently analyze the relationship between modularity and robustness in large signaling networks.

methods
figure  <dig> illustrates the main process of our app. firstly, a directed network is loaded for analysis. next, the app computes the modularity and robustness of the network. in particular, the robustness algorithm was implemented in parallel computation by using the opencl library. the results can be visualized in three modes: a detailed visualization mode, a brief visualization with absolute relations, and a brief visualization with relative relations. also, the results can be summarized in tables that include centrality and gene ontology analyses. details of this process are given in the following subsections.fig.  <dig> the overall process to analyze the relationship between the network robustness and modularity in moro. after a directed network is loaded for analysis, the network modularity and robustness are calculated. in particular, the time consuming part is processed in parallel by using multi-core cpu or gpu. the analysis result can be checked by three types of visualization modes and a summary table. the centrality values and go analysis of modules are additionally provided




network modularity
given a network represented by a directed graph g where v and a are the sets of nodes and interactions, respectively, we employ the modularity measure introduced in a previous study  <cit> . a partition p = {v
 <dig>  v
 <dig>  …, v
m} of v is a set of nonempty disjoint subsets of v that covers v . then, the modularity of the partition m is defined as mp=∑i=1mωviviω−ωviinωvioutω <dig>  where ωvivi is the number of interactions whose starting and ending nodes are both included in module v
i, ωviout, and ωviin are the numbers of interactions whose starting or ending nodes only, respectively, are included in module v
i, and ω is the total number of interactions in the network. then, the modularity of the network is defined as m = max
p m. however, it is difficult to obtain the optimal partition. in our app, the modularity value of a network is averaged over  <dig> trials by using an optimization algorithm proposed in a previous study  <cit> .

robustness dynamics in a boolean network model
a boolean network model has been used to examine robustness-related dynamics of signaling networks and has been employed to investigate the dynamics of various biological networks . a boolean network is represented by a directed graph g where v = {v
 <dig>  v
 <dig>  …, v
n} is a set of boolean variables and a is a set of ordered pairs of boolean variables called directed links. each v
i ∈ v has a value of  <dig>  or  <dig>  that represents the state of the corresponding element. a directed link  has a positive  or negative  relationship from v
i to v
j. in this model, each state s = , v
 <dig>  …, v
n) at time t transits to the next state s according to the set of update rules f = {f
 <dig>  f
 <dig>  …, f
n}, i.e., s = f), where we randomly choose either a logical conjunction or disjunction for f
i with a uniform probability distribution. for instance, if a boolean variable v has a positive relationship from v
 <dig>  a negative relationship from v
 <dig> and a positive relationship from v
 <dig>  then the conjunction and disjunction update rules are vt+1=v1t∧v¯2t∧v3t and vt+1=v1t∨v¯2t∨v3t, respectively. in the case of the conjunction, the value of v at time t +  <dig> is  <dig> only if the values of v
 <dig>  v
 <dig> and v
 <dig> at time t are  <dig>   <dig> and  <dig>  respectively. a state of g is defined as a vector of values v
 <dig> through v
n. a state trajectory starts from an initial state s and eventually converges to either a fixed-point or limit-cycle attractor. because these attractors can represent diverse biological network behaviors such as multistability, homeostasis, and oscillation, a change in the converging attractor can be interpreted as a loss of robustness. we denote the attractor converged to starting from an initial state s by 〈s〉. the network is considered to be robust against mutation at v
i if 〈s〉 is equal to sv¯i, where v¯i=¬vi indicates the state perturbation of s subjected to v
i. this concept to measure robustness has been widely used . more specifically, the robustness of a network γ is defined as follows: γg=1n⋅s∑s∈s∑i=1nis=sv¯i, 


where s is the set of whole states , and i is an indicator function. because |s| is a very large number, we used a sample subset s˜⊆s with s˜=2n instead of s to calculate γ. given a partition p = {v
 <dig>  v
 <dig>  …, v
m}, we employed the in-module and out-module robustness of a module v
i, γ
in, and γ
out, respectively, defined in  <cit>  as follows: γinvi=1s˜∑s∈s˜∑v∈vih∏vis,∏visv¯vi 


and γoutvi=1s˜∑s∈s˜∑v∈vih∏v\vis,∏v\visv¯vi, 


where ∏vis represents a projection operator to extract the partial attractor of a given subset v
i ⊆ v from an attractor 〈s〉, and h denotes a similarity measure between two attractors 〈s〉 and 〈s ′ 〉. more particularly, given 〈s〉 = s
0 → s
1 → … → s
l −  <dig> and s′=s0′→s1′→…→sl′−1′ , h is defined as follows: hss′=1l′∑j=0l−11−hsjsj′n 


where h is the hamming distance . then, the in-module and out-module robustness of a network, γ
in and γ
out, respectively, are defined as follows: γing=1m∑i=1mγinvi 


and γoutg=1m∑i=1mγoutvi 


parallel computation of robustness
in our app, we employed a boolean network model to compute robustness. in particular, we further calculated in-module and out-module robustness which represent how much the module subject to a perturbation and the groups of other modules, respectively, are robust against the perturbation. unfortunately, it is very time-consuming to compute robustness. to reduce the running time, we implemented the robustness calculation part of the app as a parallel algorithm by using the opencl library .

a batch-mode simulation on random boolean networks
we developed a function for a batch-mode simulation on random boolean networks  to examine if a finding in biological networks holds in rbns or not similarly in a previous study . the batch-mode simulation requires two steps for configuring parameters. the first step is to select an rbn generation model from among five models: barabási-albert  model  <cit> , erdős-rényi  model  <cit> , an erdős-rényi variant model  <cit>  and two shuffling models  <cit> , and the second step is to set the number of considered initial-states and the type of update-rule schemes . once computations of modularity and robustness are completed, all results are saved in a resulting file, “net_based_result.txt” which describes modularity and robustness results of each rbn .

visualization of relations between modules
our app provides three types of visualizations to show the relationship between modules. the first type is a detailed visualization mode in which all nodes and interactions of the loaded network are shown and the nodes are grouped into modules placed by using the cytoscape group attributes layout. the second type is a brief visualization mode with absolute relations, in which a group node corresponds to a detected module and the weight of a link between group nodes denotes the number of interactions between a pair of modules. the last mode is the same as the second mode except that the weight of a link denotes the ratio of the number of interactions between a pair of modules to the maximal possible number of interactions between them, that is w/, where w is the number of actual interactions between the pair of modules, and n
 <dig> and n
 <dig> are the numbers of nodes included in each of the modules.

module centrality and go analyses
many previous studies have shown that the centrality properties of genes/proteins in biological networks are strongly related to their functional roles in a topological or dynamical sense. to extend this concept to module-based centrality analysis, we implemented a function to examine five centrality measures including degree  <cit> , closeness  <cit> , betweenness  <cit> , stress  <cit>  and eigenvector  <cit>  of modules . besides, we developed a go analysis function to compare the functional difference between two groups of modules. to this end, we first identify two groups of genes by selecting some modules of interest. then, entrez gene id is mapped to uniprotkb by utilizing the web service at http://www.uniprot.org/  <cit> , and all relevant go terms are extracted by using the web service at http://www.ebi.ac.uk/quickgo/  <cit> . finally, go terms which are most differently enriched between the two gene groups are listed in a table or exported into a text file.

RESULTS
in this section, we tested moro with two large-scale signalling networks, the canonical cell signaling network  and the human signal transduction network  which consist of  <dig> proteins and  <dig> interactions, and  <dig> genes and  <dig>  interactions, respectively.

analysis of modularity and robustness
the analysis and visualization results of the stke and hsn networks are shown in fig.  <dig> and additional file 2: figure s <dig>  respectively. in particular, fig.  <dig> and in additional file 2: figure s <dig> explain various summarized results including the number of modules, modularity, robustness, in-/out-module robustness, and centrality values. specifically, the number of modules were  <dig> and  <dig>  the modularity values were  <dig>  and  <dig> , and the robustness values were  <dig>  and  <dig>  in the stke and hsn networks, respectively. by selecting the visualization option, we can observe the relation between the detected modules in three different modes: a detailed mode  and in additional file 2: figure s1), a brief mode with absolute relations  and in additional file 2: figure s1), and a brief mode with relative relations  and in additional file 2: figure s1). in the detailed mode, each module is represented by a circular group of genes and all interactions between the genes are presented in the network. in other words, the visualized network is actually same with the first given network except that the genes belonging to a same module are located close to each other. on the other hand, each module is represented by a single node and a relation between modules is represented by a directed link in both of the brief modes. the only difference between the two brief modes is that the weight of a link means the number of interactions between a pair of modules in the brief mode with absolute relations, whereas it means the ratio of the number of interactions between a pair of modules to the maximal possible number of interactions between them. by properly specifying the appearance ratio parameter which is defined the ratio of the number of interactions to be visible over the total number of interactions between modules, we can retrieve more reduced information about the brief relations between modules. for example about the stke network, fig.  <dig> and  shows the visualization results reduced from fig.  <dig> and , respectively, by specifying the appearance ratio to  <dig> . then, we can identified which module is strongly interacting with or isolated from other modules  and  for the result of the hsn network).fig.  <dig> analysis results of the stke network by moro. a a summary table. modularity and robustness results in module and network levels are listed in the upper and the lower tables, respectively. b result of the detailed visualization mode. we found a total of  <dig> modules each of which is represented by a circular list of genes. c-d results of the brief visualization mode with absolute and relative relations, respectively. each module is represented by a single group node whose radius is proportional to the number of nodes belonging to the module. the weight of a link denotes the number of interactions between the corresponding pair of modules and the ratio of the number of interactions between a pair of modules to the maximal possible number of interactions between them in  and , respectively. e-f the reduced visualization results. they are subnetworks induced from  and , respectively, by removing all links except about 30% of links with the highest weight values 




to validate effectiveness of our app, we also conducted the same case study about large-scale signaling networks as in a previous study  <cit>  which reported that the network modularity tends to be negatively correlated to the robustness against state perturbations. to reproduce such a negative relationship between network modularity and the robustness in this study, we generated  <dig> random boolean networks and computed the robustness and the modularity of each network by using moro. we note that this extensive simulation could be conducted in a practical time by the parallel implementation of main functions in moro. as a result, we could observe the same negative relationship between the modularity and the robustness, consistent to the result in  <cit>  ). in addition, we observed that the results of stke and hsn are very close to the trend line of the random boolean networks. moreover, we could also observe that the in-module robustness is clearly negatively correlated with the network modularity ), whereas the out-module robustness is not ). in addition, the in-module robustness was positively correlated with the network robustness ), whereas the out-module robustness was not ). as explained in the previous study, we could also conclude that the negative relationship between network robustness and modularity is mainly caused by the relationship between in-module robustness and network modularity through intensive simulations using our app.

time performance analysis
to show the computational cost of moro, we examined the running time in calculating robustness and modularity in the hsn and stke networks. we tested the app on a system with an nvidia geforece gtx  <dig> gpu with  <dig> processor at 1ghz, seven-core intel core i7-4770 k cpu  <dig>  ghz, and 16 gb of memory. table  <dig> shows the result. in case of the hsn network, the speedup by the gpu-based parallel computation over the single-cpu was slightly greater than that by multi-core cpu, and both speedups were proportional to the number of considered initial states. on the other hand, it is interesting that the speedup by multi-core cpu was greater than that by gpu, and both were not proportional to the number of initial states in case of the stke network. we infer that the analysis of the stke network was terminated before the parallel computation power is fully utilized due to the relatively small size of the network. taken together, we can efficiently analyze the relation between robustness and modularity in large-scale networks by parallel computation with two options, multi-core cpu and gpu.table  <dig> running time of moro

a total of running time to compute robustness and modularity is compared among single-cpu, multi-core cpu, and gpu options. time is formatted as hh:mm:ss





module centrality analysis
after we obtain the modular structure of a network, we can analyse the centrality of modules based on the brief mode visualization result. specifically, we consider a module network where a node and a link represent a module and the set of interactions between a pair of modules, respectively. then, we can examine five well-known centrality values such as degree, closeness, betweenness, stress, and eigenvector in the module network. in this case study, we examined the change of the centrality values against the module size, which is defined by the number genes belonging to a module, in the stke  and hsn  networks. it is interesting that all centrality measures or all except closeness showed the positive relations with the module size in the stke and hsn networks, respectively. in other words, the module was likely to be more central as the module size gets larger. to investigate if this property is reserved in random networks, we generated two groups of  <dig> random networks by shuffling interactions of the stke and hsn networks while preserving a degree distribution, and examined the change of the centrality values against the module size . similar to the result in the signaling networks, the module size was positively correlated with the centrality values in the random networks. this suggests that the hub modules might play an important role in the community network . additionally, we examined the relationship between the in-/out-module robustness and the module centrality values in the stke and hsn networks . unlike the relation with the module size, the in-/out-module robustness was not significantly correlated with the centrality values. in other words, the centrality of modules cannot indicate the in-/out-module robustness in the signaling network.fig.  <dig> changes of module centrality values against the module size in the stke network. a-e results with respect to degree, closeness, betweenness, stress, and eigenvalue. the module size which is defined as the number of nodes belonging to the module showed positive relationships with all module centrality measures. the correlation coefficients in - were  <dig> ,  <dig> ,  <dig> ,  <dig> , and  <dig> , respectively, with all p-value < 10−4





go analysis
it is possible to analyze go enrichment  <cit>  by using moro. to show this function, we first specified two groups of genes, which consist of the genes in the largest module  and the rest of genes , respectively, in the hsn network. table  <dig> shows all go terms which were more enriched in the largest module than in the others: cytoplasm, nucleus, and protein complex in cellular component terms; protein, metal ion, nucleotide, and dna bindings in molecular function terms; gene expression, viral process, and regulation of dna-templated transcription in biological processes terms. as a result, moro can provide the useful information about go analysis between any two groups of modules.table  <dig> go analysis in the hsn network

go terms which are significantly enriched between the largest module and the rest of modules are listed. all p-values are calculated by using a z-test




CONCLUSIONS
many recent reports have reported that robust behavior against mutations might be correlated to the modularity of a signaling network. motivated by these results, we developed a novel cytoscape app called moro, which can analyze the relationship between network robustness and modularity. we implemented it in parallel by using the opencl library to allow application to very-large-scale networks. in addition, our app can provide information about topological relations between modules by means of various visualization modes and centrality analysis. moro includes also five centrality measures which can examine how centrally each module is positioned in terms of relations among the modules. moreover, it can conveniently analyze the gene ontology enrichment of modules only if entrez id of gene is given. a batch-mode simulation function was also included to allow verification of whether a finding is a design principle of random networks. in the future, moro will be extended to consider various types of mutations such as a knockout and edge mutation, and to analyze publicly-available signaling networks represented by ordinary differential equations by devising a conversion method from continuous models to boolean networks.

additional files

additional file 1: text s <dig>  parallel robustness computation based on the opencl. text s <dig>  output file by the batch-mode simulation on rbns. text s <dig>  centrality measures. 


additional file 2: figure s <dig>  analysis results of the hsn network by moro. figure s <dig>  correlations between the modularity and robustness of  <dig>  random boolean networks where the number of nodes is  <dig> and the number of interactions is in the range of  <cit> . figure s <dig>  changes of module centrality values against the module size in the hsn network. figure s <dig>  changes of module centrality values against the module size in stke-shuffled random networks. figure s <dig>  changes of module centrality values against the module size in hsn-shuffled random networks. figure s <dig>  correlation between module centrality values and in-/out-module robustness in the stke network. figure s <dig>  correlation between module centrality values and in/out-module robustness in the hsn network. 




abbreviations
gogene ontology

morocytoscape app for modularity and robustness analysis

rbnrandom boolean network

