BACKGROUND
microarray techniques have revolutionized genomic research by making it possible to monitor the expression of thousands of genes in parallel. due to the amount of data being produced by this technology, gene reduction is extremely important because:  it generally reduces the computational cost of machine learning techniques,  it usually increases the accuracy of classification algorithms and  it provides clues to researches about genes that are important in a given context   <cit> .

related with this domain, the area of gene identification has been previously addressed by furman et al. through the utilization of information theory  <cit> . several methods have been proposed to reduce dimensions in the microarray data domain. these works include the application of genetic algorithms  <cit> , wrapper approaches  <cit> , support vector machines  <cit> , spectral biclustering  <cit> , etc. other approaches focus their attention on redundancy reduction and feature extraction  <cit> , as well as the identification of similar gene classes making prototypes-genes  <cit> .

in addition, there are also several packages implemented in r for feature selection as iterativebma  <cit> , varselrf  <cit>  or r-svm  <cit> . iterativebma is a bioconductor r package which performs multivariate feature selection for multiclass microarray data and it is based on the bayesian model averaging  approach. the varselrf package implements a method for gene selection based on the measures of variable importance which return the random forest algorithm and it is also suitable for multivariate and multiclass datasets. the r-svm method is similar to the varselrf in the sense that it uses the relative importance of features in svm classifiers to select relevant genes but it is only applicable to binary classifications. finally, it is also considered the ttest function of the genefilter package  which implements the conventional t-test method for feature selection. table  <dig> shows a comparative analysis of these r-based methods and the proposed dfp algorithm.

the r package is available from bioconductor
the r package is available from cran and its implementation takes advantage of computing clusters and multicore processors
the genefilter package is available from bioconductor
it is sensitive against outliers which are frequent in microarray data
it accounts for the noise in the data because, as a fuzzy-based method, it deals with linguistic categories instead of raw data
the implementation is computationally efficient and available from bioconductor
in this context, there are many advantages of applying fuzzy logic to the analysis of gene expression data:  fuzzy logic inherently accounts for noise in the data because it extracts trends, not crisp values;  in contrast to other automated decision making techniques, algorithms in fuzzy logic are cast in the same language used in day-to-day conversation, so conclusions are easily interpretable and can be extrapolated;  fuzzy logic techniques are computationally efficient and can be scaled to include a high number of components  <cit> .

based on these assumptions, the aim in writing dfp was to provide a simple-to-use library to perform gene selection and data reduction by the application of a supervised fuzzy pattern algorithm able to discretize and filter existing gene expression profiles.

implementation
dfp is an extension package for the programming language and statistical environment r  <cit> . the software has been developed to perform fuzzy analysis and gene reduction using microarray data. it employs object classes and functions that are also standard in other packages of the bioconductor project  <cit> . the whole algorithm comprises of three main steps. first, it represents each gene value in terms of one from the following linguistic labels: low, medium, high and their intersections lowmedium and mediumhigh. the output is a fuzzy microarray descriptor  for each existing sample  containing the discretized gene expression values. the second phase aims to find all genes that best explain each class, constructing a supervised fuzzy pattern  for each class . starting from the previous generated fuzzy patterns, the package is able to discriminate those genes that can provide a substantial discernibility between existing classes, generating an unique discriminant fuzzy pattern .

discretizing microarray data using fuzzy labels
in the first step, given a set of n expressed sequence tags  or genes belonging to m microarrays, the discretization process is based on determining the membership function of each gene to the previously linguistic labels. in this package, two types of membership functions are used . firstly, a polynomial approximation of a gaussian membership function which achieve smoothness for the degree of membership of 'normal' expression levels of a gene, and secondly, a polynomial approximation of two sigmoidal membership functions which are able to specify asymmetric membership functions for the 'low' and 'high' expression levels .

the algorithm defines a threshold value θ, which need to be established in order to discretize the original data in a binary way. for concrete values of threshold θ, specific zones of the gene values domain for which none of the labels will be activated can exist . this fact must be interpreted as the specific value of the gene is not enough to assign it a significant linguistic label at the significance degree of membership fixed by threshold θ.

on the other hand, one expression level can simultaneously activate two linguistic labels, since at the significance level given by θ, any assignment of the measure to a linguistic label is significant .

assembling a supervised fuzzy pattern of representative genes
a fuzzy pattern is a higher concept built from a set of fmds belonging to the same class, and it can be viewed as a prototype of them. the fp corresponding to a given class is constructed by selecting the genes with a label which has a relative frequency of appearance equal to or greater than a predefined ratio π . therefore, the fp captures relevant and common information about the discretized gene expression levels of the fmds that summarizes.

the predefined ratio π controls the degree of exigency for selecting a gene as a member of the pattern, since the higher the value of π, the fewer the number of genes which make up the fp. the pattern's quality of fuzziness is given by the fact that the labels, which make it up, come from the linguistic labels defined during the transformation into fmd of an initial observation. moreover, if a specific label of a gene is very common in all the examples belonging to a given class, this feature will be selected to be included in the fp. therefore, a frequency-based criterion is used for selecting a gene as part of the fuzzy pattern.

recognizing valuable genes
the goal of gene selection is to determine a reduced set of genes, which are meaningful given the existing knowledge. here, the algorithm introduces the notion of discriminant fuzzy pattern with regard to a collection of fps. a dfp version of a fp only includes those genes that can serve to differentiate it from the rest of the patterns. therefore, the computed dfp for a specific fp is different depending on what other fps are compared with it. it's not surprising that the genes used to discern a specific class from others  will be different if the set of rival classes also changes. the pseudo code algorithm used to compute the final dfp containing the selected genes can be consulted in additional file 2:dfppseudocode.pdf.

RESULTS
the package dfp has been designated for performing fuzzy analysis and gene reduction from a set of microarray experiments. dfp, like any r package, is command-line driven. the functions are called by the user, possibly with arguments and options. any session using dfp in r starts with the command

library 

which makes the functions of dfp available in the r environment.

a very quick start example could be carried out using the artificial data set rmadataset, included in the package

data

once the data is loaded, the whole algorithm can be executed calling its main function discriminantfuzzypattern which will work out with the default parameter values, or step by step as in the following example

mfs<-calculatemembershipfunctions

+                              

which calculates the membership functions  for each gene. these functions can be displayed using the following command 

plotmembershipfunctions

+         

dfp can now convert gene expression values  into linguistic labels. a gene will have an assigned linguistic label if its expression level exceeds the significance degree of membership fixed by threshold zeta . it is done by the command

dvs<-discretizeexpressionvalues

+              

showing part of the results with the following function

showdriscretevalues

+                    ,

+                               c))

the next step involves the generation of a fuzzy pattern that summarizes the most relevant genes of each category. a gene will belong to a fp if its assigned label is present with a frequency higher than pival . it is done by the command

fps<-calculatefuzzypatterns

+               

showing part of the results with the following function

showfuzzypatterns  

the last step calculates the discriminant fuzzy pattern by including those genes present in two or more fuzzy patterns with different assigned labels. the following command performs this operation

dfps<-calculatediscriminantfuzzypattern 

the selected genes can now be shown in both text and graphical mode  using the function

plotdiscriminantfuzzypattern

CONCLUSIONS
dfp is a new bioconductor r package that performs gene selection and data reduction by the application of a supervised fuzzy pattern algorithm. as other bioconductor/r packages, dfp offers a high level of standardized documentation through its vignette and the function help pages.

the implemented algorithm has also been coded and tested in genecbr, a multiplatform open source tool for microarray analysis  <cit> . the results obtained using publicly available data sets validate the effectiveness of the proposed algorithm  <cit> .

availability and requirements
project name: dfp

project home page: 

operating systems: platform independent

programming language: r

other requirements: r, bioconductor

license: gnu gpl

authors' contributions
dgp and ffr programmed and tested genecbr application. ra and fd implemented and tested the code of the dfp package. ffr wrote the paper while dgp, ra and fd provided comments and discussion. all authors read and approved the final manuscript.

supplementary material
additional file 1
definition of gaussian membership functions implemented in the dfp package. the membership functions to linguistic labels are defined in a similar way to the form that has been used by pal and mitra  . these authors used a polynomial function that approximates a gaussian membership function, where its centre and amplitude depend on the mean and on the variability of the available data respectively. the original membership functions are considered symmetric, but, in our work we have considered asymmetric functions for the linguistic labels in the extremes .

click here for file

 additional file 2
pseudo code algorithm used to compute the final dfp containing the selected genes. a dfp version of a fp only includes those genes that can serve to differentiate it from the rest of the fuzzy patterns.

click here for file

 acknowledgements
we thank gonzalo gómez for valuable discussion in early versions of the manuscript. this work is partly funded by the research projects biotools  from university of vigo and development of computational tools for the classification and clustering of gene expression data in order to discover meaningful biological information in cancer diagnosis  from jcyl . the work of dgp is supported by a "maria barbeito" research contract from xunta de galicia.
