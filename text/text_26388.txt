BACKGROUND
large scale technologies, such as dna microarrays or proteomics, provide biologists with the ability to measure the expression levels of thousands of genes in a single experiment. both methods provide quantitative information about the state of the cell regulatory networks at the moment when the sample was collected. when a particular process is monitored over a longer period of time, samples can be collected in short time intervals. such an approach generates time series vectors for all detectable genes or proteins, which record activity of the regulatory networks involved in the observed process. previous experiments suggest that genes sharing similar functions yield similar expression patterns in the microarray or proteomic experiments  <cit> . identification of genes that have similar patterns of expression allow for the identification of gene clusters controlled by the same regulator or the identification of processes parallel to the process in which the gene of interest is involved.

so far the identification of specific patterns has been achieved mostly by application of various clustering methods  <cit> , where all gene expression time series  were classified into disjoint groups according to a predefined distance metric. the profiles similar to the profile of the gene of interest are then identified as members of these clusters. also other approaches based on neural networks  <cit> , support vector machines  <cit> , or genetic algorithms  <cit> , and others  <cit>  were applied for the classification of transcriptomic and proteomic data. a comprehensive review on the analysis of time series gene expression data was written by bar-joseph  <cit> . classification methods lead to the identification of genes associated with the cell cycle  <cit> , antibiotic biosynthesis  <cit>  or proteins involved in the stress response  <cit>  to name a few.

the classification of genes according to the shapes of their expression profiles has thus become an important issue in the field of systems biology, which allows for the identification of coordinately controlled genes and their associated networks. with the accumulation of knowledge about the role of individual genes, pathways and regulatory networks, it is possible to base the identification of coordinately controlled genes on the previously known roles of particular genes. those genes then serve as templates for the identification of the other genes which are co-expressed or controlled in the same way as the template gene. in general, such a goal represents a supervised single-class classification problem which was, in the field of transcriptomics, addressed by support vector machine algorithms for the classification of cancer tissue samples  <cit> . except for the work of pan et al.  <cit>  that used a rule based system for the gene of interest search in a transcriptomic database, vohradsky  <cit>  who applied neural networks in the classification of a proteomic time series, and brown  <cit>  who used svm, a supervised method based on the previous knowledge of the particular role of a gene or a group of genes has not been reported. pan et al. identified genes with similar expression profile by using modified pearson correlation coefficient formula, where a tested gene is compared with a template gene expression profile. here, we address this problem by utilizing general geometrical concepts and genetic algorithms.

gene profiles can be viewed as points in multidimensional space with the dimensionality given by the number of measurements. coordinately controlled genes form a cluster in this space which is more or less separated from the other points. this feature was utilized in cluster analysis which could successfully identify such genes if they were sufficiently separated, otherwise the clustering failed. in this paper, an initial set of genes that are known to share the same function is used as a training set for the suggested algorithm. these points are fitted with a hyperplane which is identified by the genetic algorithm. other genes are identified as points close to this hyperplane.

genetic algorithms  are computational methods inspired by darwinian evolution theory. the variable  are coded into the vector which is called a chromosome; an initial population of chromosomes is generated randomly. the evolution is performed in an iterative manner where in each step the fitness of chromosomes is evaluated and the population is altered by the operations of crossover, mutation and selection.

each chromosome can be thought of as a point in the search space of the candidate solutions. the ga processes populations of chromosomes, successively replacing one population by another. the ga most often requires a fitness function that assigns a score  to each chromosome in the population. in crossover, the operator randomly chooses a locus in the chromosome and exchanges it between two chromosomes to create two offspring. mutation randomly flips some of the bits in a chromosome. the selection selects chromosomes for reproduction according to their fitness. the fitter the chromosome is, the higher the probability that it will be selected for the next generation. the procedure iterates until the desired fitness is reached or a predefined number of iterations are reached. as the ga is a stochastic process where the initial population is randomly created, and the other operations are also random, usually several runs are done for the same task and the results are evaluated.

in recent years, parallel computing has been applied in evolutionary computing and it has shown not only increased speed, but also the creation of high quality solutions. the parallel scheme can be classified  <cit>  into the following: single population master-salve, multiple-population, fine-grained, and hierarchical hybrids. in this paper, the island model  was applied and we demonstrate here that it can solve the problems better than the sequential ga.

the influence of the parameters of the ga was tested with a set of artificial profiles with different levels of superimposed noise and different dimensions. the performance of the algorithm was demonstrated using the analysis of secondary metabolite gene clusters in the eubacterium s. coelicolor. the data were obtained from  <cit> .

RESULTS
implementation of ga
a) chromosome
each chromosome was encoded as a fixed-length string of  real numbers . the first n real values represented ui ; the last real value represented v.

b) control parameters of the algorithm
after extensive testing for different sizes of the template vector, we chose the following values of the control parameters, which gave satisfactory results: number of generations =  <dig>  population size =  <dig>  probability of crossover =  <dig> , probability of reproduction =  <dig> . mutation was excluded from the scheme as it substantially increased the computational requirements and did not cause proportional improvement of the algorithm's performance. the choice of parameters was thoroughly discussed in the conference papers of to et al.  <cit> 

c) fitness function
each chromosome represented a hyperplane, i.e. each chromosome of the initial population was created as a set of  real numbers whose values were within the range  satisfying eq. . eq.  was used to calculate the fitness value of each chromosome. the best chromosome, i.e. the chromosome with the smallest value of the fitness function, was selected.

d) parallel scheme
we applied the parallel ga with the following parameters: the ring topology, the migration rate was set to 5% to 10%, migration was executed every  <dig> generations, and sub-population sizes were  <dig> for  <dig> islands and  <dig> for  <dig> islands.

test using simulated data
the performance of the algorithm was tested by the application of the algorithm to artificial random datasets with different expression profile vector dimensions. the fitness of the population was calculated according to eq.  <dig>  the template patterns were created randomly and the training set with  <dig> members from each of the template patterns was created by adding random gaussian noise to the template profile. the creation of the artificial database  of the profile vectors and the search procedure is summarized in the following steps:

step  <dig>  random set r of  <dig> n-dimensional expression profiles was generated.

step  <dig>  search pattern x was defined.

step  <dig>   <dig> patterns were created by adding 50% gaussian noise to the search pattern x which generated a set of patterns to be searched .

step  <dig>  set c and r were mixed to form set b .

step  <dig>  the algorithm was applied to search the set c within the set b.

performance of the algorithm was tested using two criteria – sensitivity  and specificity .

se=tp|c|     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwglbqzcqgh9aqpdawcaaqaaiabdsfaujabdcfaqbqaamaaemaabagaee4qameacaglhwuaayjcsdaaaiaaxmaacawljawaaewaaeaacqai3awnaiaawicacaglpaaaaaa@3a96@

sp=|r|−fp|r|     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwgwbaccqgh9aqpdawcaaqaamaaemaabagaeeouaifacaglhwuaayjcsdgaeyoei0iaemoraykaemiuaafabawaaqwaaeaacqqgsbguaiaawea7cagliwoaaagaaczcaiaaxmaadaqadaqaaiabiida4agaayjkaiaawmcaaaaa@3fea@

where

- tp : the classifier predicts that the pattern is in the set c and the pattern belongs to the set c.

- fp : the classifier predicts that the pattern is in the set c but the pattern does not belong to the set c.

- |c|: total number patterns in set c .

- |r|: total number of other patterns in set r .

results are summarized for the profiles of sizes |x| =  <dig> and  <dig> in table  <dig> and  <dig>  patterns 1– <dig> mentioned in the table  <dig> are shown in figure  <dig> 

the execution time for one training loop with a training set of size  <dig> is approximately 3s. for the streptomycetes datasets, which are smaller, the execution time was below  <dig> s on a pentium  <dig>  <dig>  ghz pc

identification of secondary metabolite clusters in s. coelicolor
a transcriptomic dataset monitoring  <dig> time points in the cell cycle of eubacterium streptomyces coelicolor  <cit>  was chosen for evaluation of the algorithm. the database contained temporal expression profiles of  <dig> genes forming a  <dig> ×  <dig> data matrix. streptomycetes are known as producers of antibiotics and other secondary metabolites. about  <dig> gene clusters encoding the secondary metabolites were identified by genome sequence analysis  <cit> . identification of such gene clusters from time series experiments serve as a good example of a case where the utilization of a single class classification algorithm is essential.

we found that when the data matrix was subjected to singular value decomposition and the first two eigenvectors were subtracted from the matrix, the members of two chromosomal clusters coding for the polyketide antibiotic actinorhodin, the so-called red complex, and another secondary metabolite cluster specifying the biosynthesis of siderofore coelichelin, exhibited increased similarity . nonetheless, even after such cleaning, the correlation coefficient between the members of the two groups still ranged from - <dig>  to  <dig>  for the red gene cluster  indicating rather high variability in the set which made a search of similar profiles according to the level of correlation or other distance metrics virtually impossible. not surprisingly, clustering methods failed in the identification of the gene clusters. individual gene expression profiles of the eleven gene clusters analyzed are shown in figure  <dig> 

the profiles of these two clusters were used as training sets for ga and through application of the trained algorithms to the whole database of  <dig> profiles other genes with kinetics similar to these two templates were identified. the procedure was performed  <dig> times with random initiation of the chromosomes in each run. all genes identified in each run were scored. this means that if a gene was identified in every run, it got a score of  <dig>  if it was not identified at all, it got a score of zero. genes were sorted according to their scores and those having scores higher than the threshold were selected. sorted score values for each gene for both training sets are plotted in figure  <dig>  table  <dig> summarizes the results of the identification of common antibiotic and secondary metabolic clusters with the algorithm trained for the two training sets.

close inspection of table  <dig> shows that genes with an expression profile similar to the red cluster represented genes of the cad complex almost exclusively where  <dig> out of  <dig> genes were found similar to the red cluster. this template was found only rarely in other gene clusters. surprisingly, three genes of the second template, the coelicheline gene cluster, were also found to be similar to the red template. comparison of the individual profile shapes of the two gene clusters  shows that such overlap is possible. following the logic of the selection, the similar genes of the coelicheline template should be found in the red gene cluster. indeed, two were found .

the coelicheline template profiles were also found in two gene clusters – deoxysugar synthase and desferioxamines. other gene clusters did not show a gene cluster specific profile shape  and the two template profiles were not found among them, indicating a different control.

other genes identified as similar to the two template gene clusters are listed in tables  <dig> and  <dig>  together with their function in the cell metabolism, as defined by the sanger institute that sequenced the organism  <cit> . the threshold value  for inclusion of a gene to the search list was arbitrarily set to  <dig> for red and to  <dig> for coelicheline clusters respectively, generating output sets of similar sizes. it can be expected that these genes are directly or indirectly associated with the secondary metabolite production.

all together  <dig> genes were identified as similar to the red gene cluster. out of these  <dig> were annotated,  <dig> were not classified, most of them , fell into a group "secondary metabolism" as expected. second largest group  was associated with the cell envelope. the remaining genes were associated with the metabolism of small molecules, regulation and transport/binding processes.

huang et al.  <cit>  using the same dataset identified, using gabriel software  <cit> , so called ecr genes i.e genes correlated with red gene expression cluster. they were . our algorithm identified none of them. in order to find the reason for such difference, we plotted the expression profiles of the red cluster genes together with the expression profiles of the genes found by huang et al. . figure  <dig> shows that the ecr genes follow the red gene profiles only in the early and late phases therefore our algorithm could not identify them.

using the coelicheline gene cluster as a training set, a total of  <dig> genes were identified and annotated, of which  <dig> were not classified or were classified as "others". out of the remaining  <dig> genes,  <dig>  were classified as "secondary metabolism" genes. the second largest group was formed with  <dig> genes  associated with membrane function and building, similar to the previous case. as the secondary metabolites have to be exported from the cell, most of the gene clusters coding for their pathways include also genes coding for membrane proteins. therefore identification of genes involved in cell wall function is in good agreement with previous findings.

the remaining individual genes similar to the templates were associated with transport, regulation and other different particular functions . the association of the genes of the transport mechanism can also be expected as the secondary metabolites have to be exported out of the cell. this diversity can be caused by true similarity of the regulation of different processes by different regulators without any connection among the corresponding networks. in individual cases, the similarity to the given template can also be caused by experimental inaccuracies or noise which are both known to be rather high in microarray experiments. such cases have to be assessed individually and where appropriately verified by independent methods such as qpcr. more detailed biological interpretation of the results is out of scope of this paper.

CONCLUSIONS
the presented algorithm falls into a class of single-class problems which has gained increasing attention in bioinformatics over the last few years . for the single-class problem, we want a given dataset to estimate a subset such that the probability that a test point drawn from the dataset lying outside of the subset equals some a priori specified value between  <dig> and  <dig>  the goal is to find a function which is positive on the desired subset and zero or negative on the complement. in this paper, we provide evidence that the identification of a hyperplane using a ga is quite suitable for this task, allowing for the identification of user-defined gene expression time series templates in a large set of profiles.

the demand for the identification of user-defined templates of gene expression profiles increases with the availability of large-scale gene expression data when microarray or proteomic experiments cover whole cell cycles or other time evolving processes. the typical genome size, and thus the number of genes immobilized on a microarray, exceed tens of thousands. the number of time series in an experiment also exceeds this number. to search through such a database is a nontrivial task. with the increasing knowledge about the regulation of gene expression such datasets can be approached with existing knowledge of the system. therefore the initial classification of the profiles into disjoint clusters can now be replaced by targeted searches for genes which have kinetics similar to the gene with already known function. such genes can be under the control of the same promoter, or they can participate in the same regulatory process, or the processes in which they are involved can be parallel to the process represented by the genes of the training set. their identification is essential for elucidating both their control and their role in the studied process. in such cases approaching the problem as a single-class problem is appropriate.

here we demonstrate that application of the algorithm presented here, trained on one known gene cluster, can be used in the search of other gene clusters of a similar type even when the variability of the correlation between the members of the training set is quite high . such variability makes identification based on correlation or other distance metrics impossible. compared to other classifiers, our algorithm displays better accuracy.

besides the identification of known gene clusters in gene expression data of a model organism s. coelicolor, which confirm the capability of the method to identify known patterns, new genes similar to the template gene clusters were identified. as expected, most of them fall into a group of genes of secondary metabolism located on different parts of the chromosome. their function can be deduced from sequence similarity but it can not be proven that the genes are controlled in the same way as the known gene clusters. the method presented here provides such evidence. in contrast with the genome annotation methods which can identify potential gene clusters, this method is capable of identifying pathways associated with the searched function which are active. the algorithms not only identify the genes of the main pathway, in this case antibiotic biosynthesis, but also genes which are associated with it. here, the genes are those of the transport mechanism or cell wall function. therefore this method allows the identification of whole active networks participating in the expression of genes of interest. results showed that the method presented here is more powerful in identification of associated pathways than other pattern recognition algorithms and/or frequently used correlation analysis. also the application of this algorithm to a less studied organism can lead to the identification of unknown gene clusters and associated pathways.

in general the disadvantage of evolutionary methods is the high computational requirement. we bypassed this problem by the introduction of a parallel computational scheme which greatly increases the speed of computation. moreover, the parallel scheme suggested here improves the performance of the algorithm. nowadays, multiprocessor machines or computer clusters are easily available and the parallel programming is no longer only in the domain of large computers. therefore, implementation of the parallel algorithm is feasible. in closing, the algorithm presented here is very fast, and the execution of one run is counted in seconds or fractions of seconds on an ordinary pc.

