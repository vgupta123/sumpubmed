BACKGROUND
with the continuous growth of genome sequencing capabilities, phylogenetic inference is increasingly based on large collections of genomic regions, if not entire genomes . we have entered the era of phylogenomics — the study of evolution at a genomic scale.

new methodological challenges arise in this field. clearly, the large amount of data — sequences from several taxa and large collections of genes — makes computational efficiency essential. besides quantity, the nature of the data is also a concern, and it is extremely important to correctly account for the distinctive features of a typical phylogenomic data set: for example the heterogeneity in the evolution of genomic regions , and the fact that each region is typically sequenced in a subset of the taxa under analysis, with only partial overlap between different subsets  <cit> .

in this paper, we focus on the problem of how to efficiently and accurately estimate the branch lengths of a tree in a phylogenomic context, a problem for which, to date, only computationally-intensive techniques appear to be available. yet, evolutionary distance information is essential to answer several important biological questions, from molecular dating  <cit>  of events such as speciations, to the reconciliation of gene trees with a species tree  <cit> , or to the measure of biodiversity in conservation biology  <cit> . another goal here is the efficient estimation of the relative rates of evolution of different genomic regions. this information – strictly linked to branch lengths – is also very useful, for example to recognize the diverse selective pressures acting on different parts of the genome  <cit> . tree inferences in a phylogenomic context fall roughly into three frameworks: the supertree, the superalignment and the medium-level framework. we consider them in relation to our goals of branch length and gene rate estimation.

supertree approaches  <cit>  combine the information from several phylogenetic trees into a larger phylogeny. a strength of these methods is that the source trees can come from different types of data, such as dna or protein sequences, or even morphological data. in a phylogenomic context, each source phylogeny is inferred from a different locus, with standard methods such as maximum likelihood, maximum parsimony or distance-based approaches. within this category, mrp   <cit>  and its derived methods  are to date the most widely used approaches. in its standard form, mrp does not use branch length information in the source trees , a limitation that is shared by most supertree methods — with very few exceptions, such as bwd   <cit> , acs   <cit>  and sdm   <cit> . as a consequence, virtually all supertree approaches are unable to provide meaningful estimates for branch lengths , or any estimate at all for gene rates.

superalignment methods are the other classical approach for phylogenomic tree inference. they concatenate all available genomic sequence alignments into a unique alignment , which is then analyzed with standard or specially-tailored phylogenetic reconstruction algorithms  <cit> . these methods — whose accuracy relies on the use of state-of-the-art statistical inference techniques  — naturally model branch lengths and across-site rate heterogeneity. however they are computationally demanding, and may become impractical if computing time or memory are limited, or when the concatenated alignment is very large. moreover, heterogeneity in the evolutionary processes at different genomic regions — which is readily handled in a supertree context — may require the use of models such as partition models  <cit>  or mixture models  <cit> . these models, however, further increase the number of parameters to estimate, and consequently computational costs.

lastly, the medium-level  <cit>  framework combines the information originating from the different loci at a level that is intermediate between sequence alignments and complete gene trees. for example, this intermediate level may consist of partial trees — such as quartets  <cit>  — or pairwise distances between gene sequences  <cit> . specifically, distance-based methods naturally account for and can estimate branch lengths, and in some cases they can even estimate gene rates  <cit> . moreover, they are relatively light computationally. the method we present here, erable , falls within this category. unlike other phylogenomic methods, however, its goal is not tree estimation, and erable should be used to complement existing approaches that do not estimate branch lengths and/or gene rates. alternatively, it can be used on its own when the evolutionary relationships among the species under consideration are largely known.

note that distance-based phylogenomic methods such as erable, acs  <cit>  and sdm  <cit>  can be used both in the medium-level framework – when the input distances are directly estimated from genomic alignments – but also in the supertree framework – when the input distances require prior inference of a collection of gene trees. we will see examples of this in our experiments .

the methodology we propose here can be seen as a generalization of classical weighted least squares  branch length estimation, to the case where multiple distance matrices are estimated from different genomic regions. in fact if only one matrix is given, erable behaves exactly like wls. wls fits the branch lengths of a tree t so as to make the distances between its leaves as close as possible to the input distances. formally, it minimises the criterion ∑i<jwijδij−dijt <dig>  where the δij denote the input distances, the dijt are the distances between the leaves of t , and the weights wij> <dig> express the confidence in the estimate δij. when multiple distance matrices are provided, we face the problem that, due to rate heterogeneity among the alignments, their distances cannot readily be compared to dijt. erable thus applies a rescaling of the input distances, in order to use them for branch length estimation. compared to wls, this entails surprisingly little computational overhead.

in the following, we first describe our new method and the data sets on which we compared its performance to that of other possible approaches for the same task . then, we present the results of our experiments on these data sets .

methods
in this paper, we assume that the analysis focuses on a collection of orthologous genomic regions, or genes, g <dig> g <dig> …,gm, whose evolution mostly differs because of rate heterogeneity. in other words, the trees describing their evolution are topologically compatible  <cit> . this is an optimal scenario for the methods we describe here, but it does not preclude their application to real-world datasets where this assumption will be necessarily violated to some degree. gene tree topological incompatibilities may in fact arise due to incomplete lineage sorting  <cit> , gene duplication and loss  <cit> , or even lateral gene transfer . an even stronger assumption, which is useful to clarify the meaning of branch lengths and rates at a genomic level, is that of the proportional model  <cit> , which we describe further below.

defining phylogenomic branch lengths
the length of branch e in the gene tree for gk, denoted here be, generally represents the average  number of substitutions per site, occurred between the endpoints of e. if we let x and y denote these endpoints, we can rewrite this as: 
  be=sxynk, 

where sxy is the  number of substitutions in gk occurred between x and y, and nk is the sequence length of gene gk.

we wish to give the same meaning to the branch lengths of the phylogenomic  tree representing the evolution of genes g <dig> g <dig> …,gm. if we define the length of branch e in this tree as the average  number of substitutions per site between its endpoints x and y, we then have: 
  be=∑k=1msxy∑k=1mnk. 

this definition determines the relationship between the branch lengths in the species tree and those in the gene trees. if we let n=∑k=1mnk, and use eq. , then eq.  can be rewritten as: 
  be=1n∑k=1mnkbe 

in other words, branch length be in the species tree is equal to an average of the corresponding branch lengths be in the gene trees, weighted by the lengths of the gene sequences.

note that in this paper we assume that genes are sampled in different, partially overlapping sets of taxa, meaning that a branch in a gene tree will in general correspond to a path in the species tree. thus, in eq. , and in the equations that follow, it is more accurate to interpret be and be as lengths of paths connecting the same nodes across all trees, depending on the taxa sampled for each gene.

the proportional model
in order to provide a stronger link among branch lengths in gene trees and in the species tree, and to set a meaningful scale for the gene rate estimates, we now introduce the proportional model  <cit> , an implicit assumption of many phylogenomics methods  <cit> , including ours. this model assumes that each gene gk induces the same tree up to a multiplicative constant for branch lengths, rk, representing its evolutionary rate . in other words, if we let be denote the length of a branch e  in the gene tree for gk, then 
  berkis constant for allk= <dig> …,m. 

this model is a rough approximation of biological reality, as typically the relative values of the gene rates r <dig> r <dig> …,rm may vary over time — a phenomenon known as heterotachy  <cit> . nevertheless, this simple model greatly restricts the number of parameters to estimate and leads to robust analyses.

the proportional model, as specified by eq. , defines relative rates, that is, it determines rk up to a multiplicative constant. here, we take rk as the rate of gk, relative to the “phylogenomic rate”, that is, we require rk=be/be. equation  then implies that the weighted average of gene rates must be  <dig>  in fact, by substituting be with rkbe into eq. , and dividing both sides by be, we obtain: 
  1n∑k=1mnkrk= <dig>  

we will use this equation later on, to set a meaningful scale for the gene rates output by our method . the same rescaling will be applied to the returned branch lengths, as they are strictly linked to the rates.

the erable method
the new method presented here, erable , simultaneously estimates gene rates and the branch lengths of a phylogenomic tree of given topology, using a collection of distance matrices — one distance matrix per gene gk. as we illustrate in our experiments , these distance matrices can either be directly estimated from pairwise alignments of the gene sequences, or they can be calculated from gene trees inferred for each gk. a c++ implementation of erable is available on the web at http://www.atgc-montpellier.fr/erable/.

let lk designate the set of taxa for which the sequence of gk is available. for i,j∈lk, let then δij denote the input distance for gene gk between taxa i and j. given a tree topology t with leaves labelled by the taxa in l=⋃k=1mlk, the goal is to estimate the branch lengths of t and the evolutionary rates of the m genes under consideration. t can either reflect a well-known phylogeny for the taxa in l, or it can be inferred prior to erable’s execution, for example using mrp or other supertree methods. we do not make any assumption on the degree of overlap between the taxon sets lk. extremely sparse data sets may not determine a unique optimal solution to our estimation problem, but this does not prevent the application of erable.

now let b^e denote the estimated length for branch e. this determines the additive distanced^ij between any two taxa i and j, simply defined as the sum of the b^e for all e in the path between i and j in t. for mathematical convenience, we choose to estimate the inverses of gene rates: we refer to α^k, the estimate for 1/rk, as the scale factor of gene gk. erable thus seeks the values of b^e, for all branches in t, and of α^k, for k= <dig> ,…,m, that solve the following optimization problem: 
  minimizeq=∑k=1m∑{i,j}⊂lkwijα^kδij−d^ij <dig> subject to∑k=1mzkα^k=∑k=1mzk. 

erable can efficiently solve this problem for any choice of positive values for wij and zk. below, we explain the rationale behind the objective function q and the constraint in problem , and provide practical choices for wij and zk. then, we briefly describe the algorithm that allows erable to efficiently solve problem . details are provided in additional file  <dig>  lastly, we show how to rescale the optimal values for b^e and α^k, so that they comply with their definitions in eqs.  and .

the objective function. as predicted by the proportional model, we would like the distances in the phylogenomic tree to be approximately equal to the gene-specific distances, up to the multiplicative factor rk. thus, we would like to set the b^e and α^k, so that: 
 d^ij≈δijrk≈α^kδijfor allk∈{ <dig> ,…,m}andi,j∈lk.  the optimisation criterion q provides a score for the discrepancy between the d^ij and the scaled distances α^kδij. it is a wls criterion, where wij is a strictly positive weight indicating the confidence given to the distance estimate δij, and which ideally is inversely proportional to its variance. in our experiments, we have chosen the simple approach of setting wij=nk , but erable is capable of using more sophisticated weightings .

wls is a special case of gls, a class of criteria that account for the covariances between the δij. however, gls criteria are rarely used for phylogenetic inference, because of the computational complexity of optimizing them, and because of the difficulty of evaluating the covariances. wls is a good compromise, and it is notably used in the well-known algorithm of fitch and margoliash  <cit>  and in fastme  <cit> .

criterion q is similar to those by bevan et al.  <cit>  and criscuolo et al.  <cit> . the optimisation problems in these papers, however, seek optimal values for d^ij directly, without assuming any relationship between these distances and a tree . erable, instead, assumes a particular topology t, and constrains the distances d^ij to be additive with respect to t, meaning that its problem unknowns are the branch lengths in t.

the constraint.q is trivially minimized by setting all α^k= <dig>  and all b^e= <dig>  in order to obtain more meaningful solutions, while ensuring mathematical tractability, we adopt a linear constraint over the α^k: the constraint in  is in fact the most general form for such a linear constraint. in additional file  <dig>  we show that the right-hand side in this constraint is irrelevant to the end results, as it only determines their scale, which is subsequently reset by the step described in rescaling the outputs below.

as to the choice for zk, the two simplest approaches are to set zk= <dig>  <cit>  or zk=nk. the latter results in a constraint that is similar in spirit to eq.  above, as it constrains more strongly the rates  of long genes. however, our experiments have shown that both these approaches can incur in significant over-estimation of the scale factors α^k for genes appearing in a small subset lk of closely related taxa. in additional file  <dig>  we show a small example where the reasons for this are evident. in order to deal with this problem, we have chosen to set zk=nk∑i,j∈lkδij in all the experiments below, an approach that at the same time puts a stronger constraint on the scale factors of long genes – like  above – and that we have experimentally verified to largely fix the over-estimation problem for the α^k.

solving the problem. the one in  is a classic quadratic programming problem, which can be solved using lagrange multipliers  <cit> . as we show in additional file  <dig>  this yields a system of o linear equations in o unknowns , where n is the number of taxa in l, and m is the number of genes. calculating naïvely the coefficients of this system and solving it would require omn4+ <dig> time and o <dig> auxiliary memory , but careful adaptation of techniques for wls branch length calculation  <cit>  leads to a reduction of the algorithm’s complexity to omn2+n <dig> time and omn+n <dig> auxiliary memory. in additional file  <dig>  we describe this algorithm in detail.

given that problem  can be seen as a generalization, for several distance matrices, of standard wls branch length estimation, it is interesting to note that, for m=o, their computational complexities coincide — as standard wls requires on <dig> time and on <dig> memory  <cit> . if instead m>>n, which is the most common scenario in phylogenomics, an attractive aspect of erable is that its complexity grows linearly in m, which makes it particularly suited to analyze phylogenomic data sets from large collections of genes  sampled across a moderate number of taxa . this is indeed the scenario that we have tested in the experiments in the “results and discussion” section, where m varies from  <dig> to about  <dig>  and n= <dig> 

finally, we remark that for some data sets the optimal solution of problem  may not be unique. this can happen when some pairs of taxa do not co-occur in any input distance matrix . all such cases are recognized by erable, and the user is notified of the existence of multiple alternative solutions beyond the one returned.

rescaling the outputs. equation  shows that, as a consequence of their definition, the gene rates should have a weighted average of  <dig>  we thus require that the estimated rates also satisfy this property, meaning that we need to rescale the α^k so that the inverses of the new scale factors satisfy eq. . in other words, we multiply the α^k obtained by solving problem  by a correction factorc such that 
 1n∑k=1mnkc·α^k= <dig>  by solving this equation for c, we obtain: 
  c=1n∑k=1mnkα^k 

moreover, note that in order for d^ij≈c·α^kδij to still hold, the same rescaling by c must be applied to the estimated branch lengths. in conclusion, erable returns: 
 1c·α^kandc·b^e  as estimates of rk and be — the rate of gene gk and the phylogenomic length of branch e, respectively.

other phylogenomic distance-based methods
in our experiments, we have compared erable to a number of other approaches that bioinformaticians and evolutionary biologists may adopt in order to estimate gene rates and the branch lengths of a species tree in a phylogenomic context. these approaches are implemented as analysis pipelines, and described in detail in the “results and discussion” section. while some of these pipelines implement standard techniques such as maximum-likelihood or distance-based analysis of a concatenated alignment, most pipelines are based on two phylogenomic distance-based methods that we now describe.

sdm  has the objective to construct a distance matrix summarizing the topological signal in a collection of gene-specific distance matrices  <cit> . this “average” matrix can then be used to infer a phylogenomic tree, using distance-based methods based on a single matrix. sdm applies two transformations to the input matrices — it multiplies each of them by a scale factor, and adds a scalar to each column and row  — with the goal of bringing them as close as possible to each other. the matrices thus obtained are then averaged to obtain a matrix that can then be analyzed with other distance-based methods. our experiments use sdm*, a variant of sdm that only applies the scale factor transformation to the input matrices, which avoids altering the ratio between the lengths of internal and external branches in the reconstructed tree. we note that the implementation of sdm* includes a preprocessing step that corrects the input matrices to make them satisfy the triangle inequality. since this step, as expected, affected negatively the estimation of branch lengths , we removed it from the original code. in our experiments, the average matrix produced by sdm* is used to estimate the branch lengths of a fixed topology t using standard ols, and gene rate estimates are obtained by taking the inverses of the scale factors returned by sdm*. average distances and scale factors are rescaled as described for erable, that is, multiplied by the correction factor c in eq.  above.

distr  <cit>  was conceived to estimate gene rates from a collection of distance matrices, and from the alignments used to calculate the distances. distr uses the alignments to approximate the variances of the input distances, with the classical formulae by bulmer  <cit> . these variances are then used in a distance-based optimization problem akin to that solved by sdm* — the main difference being the constraint on the scale of the results. distr returns estimates for the gene rates, and, as a byproduct, a distance matrix that we use to estimate the branch lengths of a fixed topology t using standard ols, as done for sdm*. no rescaling of the outputs was conducted for distr, as it automatically produces rates and distances at a meaningful scale.

data sets
in this section, we describe the data sets that we have used in our experiments to evaluate the performance of erable and competing methods. the first data set consists of  <dig> simulated replicates: for each replicate, we take a random tree over  <dig> taxa, and for each tree we simulate sequence data for  <dig> genes, which are only present in a random subset of taxa, and evolve at different rates. the second data set consists of the  <dig>  exon alignments for  <dig> mammals in orthomam v <dig>  <cit> . detailed descriptions follow.

simulated data. each of the  <dig> replicates is obtained as follows. 
gene trees. a tree t <dig> is taken randomly  from the  <dig>  trees on n= <dig> taxa in the original test data set for phyml  <cit> . this tree is then rescaled to a total branch length of  <dig>  by dividing all branch lengths by their sum. call the resulting tree t <dig>  we then construct m= <dig> gene trees t <dig> …,tm by multiplying the lengths of all the branches in t <dig> by factors t <dig> …,tm randomly drawn from a continuous uniform distribution on the interval . this interval gives biologically realistic branch lengths  <cit> .

sequence generation. for each gene tree tk, we generate a dna alignment consisting of n= <dig> sequences of length nk, where nk is an integer drawn uniformly from the interval  <cit> . we chose relatively short sequences to avoid making the simulated data sets too informative, so as to be able to discriminate among the estimation accuracies of the methods tested. each alignment is generated with seq-gen  <cit> , using tk and the model k2p +Γ, with ratio between transition and transversion rates r= <dig> ) and with a continuous gamma distribution with shape parameter  <dig>  to model rate heterogeneity across sites.

missing data. to simulate the partial overlap in the gene presence/absence patterns typical of real data sets, for each alignment we randomly remove a number of sequences. more precisely, for each of the m alignments generated in the previous step, we draw a parameter p uniformly between  <dig> and  <dig>  and then we suppress each sequence with probability p. if the number of remaining sequences in lk is less than  <dig>  then we leave  <dig> sequences chosen randomly out of the  <dig>  so as to guarantee a minimum amount of data to estimate the rate for that gene.

model tree definition. we call the tree that we wish to reconstruct the “model tree”, and we denote it by t. clearly, t must be the same as t <dig> and t <dig>  up to their scale, and up to the removal of the taxa missing from all the simulated alignments. in order to define the correct scale of the model tree, we define tree t <dig>  with the same topology as t <dig> and t <dig>  and branch lengths defined by be=1n∑k=1mnkbe, where be denotes the length of e in tk, and n=∑k=1mnk. note that this is the same as eq. , whose justification is amply given above. finally, we obtain the model tree t by taking the restriction of t <dig> on the set of taxa l=⋃k=1mlk.

model rates definition. similarly to the model tree, the “model gene rates” must be the same as t <dig> …,tm up to their scale. the absolute values of t <dig> …,tm are in fact unrecoverable from the data. by imposing eq.  to the rescaled rates, we must have: 
 rk=tkf, wheref=1n∑k=1mnktk. 



orthomam data set. orthomam   <cit>  consists of a collection of single-copy orthologous phylogenetic markers, selected among the genomes of the  <dig> mammals in the ensembl v <dig> database  <cit> . we downloaded the entire set of the  <dig>  nucleotide exon alignments in orthomam v <dig>  filtered with trimal  <cit> . alignment lengths nk range from  <dig> to  <dig>  , and each alignment contains a variable subset lk of taxa, with 4≤|lk|≤ <dig> .

RESULTS
in order to compare the performance of erable to that of other approaches, we have conducted a number of experiments on the data sets described in the “methods” section. for each of the  <dig> simulated replicates and for the orthomam data set, we compare the branch length and gene rate estimates obtained by a number of competing approaches, including erable. for the orthomam data set , which is an order of magnitude larger than the simulated replicates , we also compare their running times and memory usage.

since, to the best of our knowledge, no tool is readily available for the simultaneous estimation of branch lengths and gene rates in a phylogenomic context, for our comparisons we have assembled a number of pipelines from existing methods. besides erable, these methods include sdm*  <cit>  and distr  <cit> , which however were conceived for other tasks than ours. we refer to the “methods” for a brief description of how we adapted these tools to our goals. we describe the pipelines below.

analysis protocol
the orthomam data set and each replicate in the simulated data set have the same structure: they consist of m gene alignments a <dig> a <dig> …,am over the taxon sets l <dig> l <dig> …,lm . in addition to these inputs, the tested methods are also provided with a reference topology t, over the set of taxa l=⋃k=1mlk, to which they aim to assign branch lengths. for simulated data, t is the topology of the model tree t, whereas for orthomam t is the mammalian tree topology in additional file  <dig>  the outputs are a tree estimate t^ with topology t, and gene rate estimates r^ <dig> …,r^m.

the tested methods are classified in the three frameworks described in the “background” section: supertree, superalignment and medium-level. note that for distance estimation, as well as for maximum likelihood  tree reconstruction, we use the model tn93+ Γ, as it is the most complex nucleotide substitution model for which an analytic formula for pairwise distance estimation is available. in the following, we denote by Γc the continuous gamma distribution used for pairwise distance estimation, and by Γ <dig> the discrete gamma distribution based on  <dig> categories, which we adopt for ml tree inference. also note that for pairwise distance estimation, the shape parameter for the gamma distribution cannot be estimated from the data, and thus must be set to a realistic value by the user  <cit>  . all tested methods are depicted schematically in fig.  <dig> and their names together with short descriptions can be found in table  <dig>  a detailed description follows.
fig.  <dig> pipelines of the analyses applied to both data sets, represented as flowcharts. we refer to the “analysis protocol” subsection for a detailed description of each analysis method

sdm*


supertree methods. for each alignment ak we infer a gene tree t^k with phyml  <cit> , using the model tn93+ Γ <dig>  the shape parameter for the gamma distribution is set to  <dig> for the simulated data sets , and left free to estimate for the orthomam data set. unless otherwise stated, in the following experiments phyml is free to estimate the topology of t^k, which is realistic when gene trees are inferred as part of a separate analysis, for example to provide the input for supertree topology reconstruction. in other experiments, we have constrained phyml to reconstruct gene trees of topology agreeing with t, an approach that significantly reduces running times.  this is the correct way to proceed when the only goal is the estimation of branch lengths in a reference tree. we will come back on this second approach when comparing the computational efficiencies of the methods tested.

standard supertree methods, such as mrp  <cit> , would then only consider the topologies of the inferred gene trees t^ <dig> t^ <dig> …,t^m, but this makes it impossible to estimate branch lengths for the phylogenomic tree. in order to conserve branch length information, we construct the additive distance matrices d <dig> d <dig> …,dm corresponding to these gene trees — that is, the distance between taxa i and j in dk equals the sum of the lengths of the branches between i and j in t^k. note that, as additive distances uniquely determine a tree  <cit> , dk can just be interpreted as a different representation for t^k. we test three methods based on these additive matrices . 
sdm*add. we run sdm* on d <dig> d <dig> …,dm, with dk weighted by the alignment length nk. the average matrix and scale factors thus obtained are then multiplied by the scaling factor c in eq. , thus giving a scaled average matrix d¯sdm∗, and gene rate estimates . finally, on the basis of d¯sdm∗ we assign ols branch lengths to the reference topology t, using fastme  <cit> .

distradd. we run distr on d <dig> d <dig> …,dm, thus obtaining gene rate estimates and an average matrix d¯distr. the latter is then used to assign ols branch lengths to t, with fastme.

erableadd. we run erable on d <dig> d <dig> …,dm and t, with the weighings for wij and zk described in the “methods” section. erable directly provides gene rate estimates and branch length estimates for t.



note that it is problematic to evaluate the variances of the distances computed by sdm* and distr . this is why we used ols branch length estimation for the last step in sdm*add and distradd.

medium-level methods. from each alignment ak, we estimate a distance matrix Δk, using fastme  <cit>  with the model tn93+ Γc. note that estimation of the shape parameter for the gamma distribution would require joint comparison of multiple sequences  <cit> , but here we only use pairwise comparisons. thus, we set the shape parameter to  <dig> for the simulated data sets , and to  <dig>  for the orthomam data set, as we consider this as a realistic estimate for mammals.  we test three methods identical to those described above for supertree methods, except that they use the estimated matrices Δ <dig> Δ <dig> …,Δm instead of the additive matrices deriving from the ml gene trees. we call these methods sdm*, distr and erable. 

superalignment methods. let asup denote the alignment obtained by concatenating a <dig> …,am. we test two methods based on asup. 
concat+ml. we assign branch lengths to the reference topology t by running topology-constrained phyml on asup, with the model tn93+ Γ <dig>  we call the resulting tree t^concat+ml. here the shape parameter for the gamma distribution is left free to estimate. in fact, even though for each gene alignment ak taken separately we may set this parameter to  <dig> for the simulated data, or to  <dig>  for orthomam, these values cannot be used on the concatenation asup. this is because the alignments a <dig> a <dig> …,am derive from trees at different scales, meaning that rate variation in asup will be larger than that on a single ak, and the shape parameters smaller . as to gene rate estimates, r^k is then obtained as the ratio between the total length of the ml gene tree t^k  and the total length of the tree that is obtained from t^concat+ml by taking its restriction to lk. for orthomam, which, unlike the simulated data set, does not have model gene rates and a model tree, we take the outputs of this method as reference. the choice of phyml over more computationally efficient alternatives is due to its greater availability of models, which may entail better accuracy. 

concat+dist. from asup, we estimate a distance matrix Δsup, using fastme with the model tn93+ Γc. the shape parameter for the gamma distribution is set to the value estimated above by phyml on asup. then, on the basis of Δsup, we assign ols branch lengths to the reference topology t, using fastme. call the resulting tree t^concat+dist. finally, in order to estimate gene rates, we use the same procedure as that for concat+ml, but in a distance-based context: r^k is obtained as the ratio between the total length of a distance-based gene tree t^kd and the length of the restriction of t^concat+dist to lk. distance-based gene trees t^1d,…,t^md are obtained from the estimated distance matrices Δ <dig> …,Δm using fastme with default options.



results and discussion for the simulated data
given the large number of replicates, the simulated data set is especially useful to compare the estimation accuracy of the methods tested. for each method we have plotted estimation errors against the correct values of the parameters to estimate , which are known for the simulated data. figures  <dig> and  <dig> show the accuracies of all tested methods in the estimation of branch lengths and gene rates, respectively. for gene rates, the scatterplots are logarithmic, as rates are inherently ratios .
fig.  <dig> accuracy of branch length estimates in the simulated data set. for each method, model branch lengths b
e  are plotted against estimation errors b^e−be  for all branches in all  <dig> model trees . colors  indicate increased density of points. the horizontal red line corresponds to no estimation error. method names are shown at the top of each plot, followed by the mean  of the fraction of variance unexplained of  relative to  

fig.  <dig> estimation accuracy for gene rates in the simulated data set. log-log scatterplots showing model gene rates r
k  against error ratios r^k/rk  for all genes in all  <dig> replicates . note that errors are measured with ratios, instead of differences. colors  indicate increased density of points. the horizontal red line corresponds to no estimation error. method names are shown at the top of each plot, followed by the mean absolute log-ratio between estimated and model gene rates 



branch length estimation. the most accurate estimates of branch lengths are produced by concat+ml and erableadd . then, intermediate results are obtained by sdm*add, erable and sdm*, where some biases are observed: sdm*add seems to underestimate branch lengths, whereas erable appears to overestimate them, proportionally to the branch length. currently, we do not have an explanation for these biases, which however are small  relative to the length of a branch . finally, distradd, distr and concat+dist are all affected by relatively strong estimation problems for branch lengths: consider, for example, the mean fraction of variance unexplained, which for these methods is tens of times that of concat+ml and erableadd. for distr this is not surprising, as this method was only conceived to estimate gene rates   <cit> . as for concat+dist, it is clear that the construction of a distance matrix from the superalignment entails a significant loss of information.

gene rate estimation. with the exception of sdm-based methods , all methods are approximately equally accurate in the estimation of gene rates , the best method being, as expected, concat+ml. as apparent in the two scatterplots at the top of fig.  <dig>  sdm-based methods often strongly underestimate  the rates of some genes. typically these are genes that are only present in a small subset of closely related taxa. moreover, for the other genes where this problem is not present, rate estimates tend to be slightly overestimated . the reasons for this issue lie in the constraint used in the optimization problem solved by sdm*, which causes the same phenomena as those described in additional file  <dig>  the constraint used by erable avoids these issues.

discussion. a common feature of the experiments on branch length and gene rate estimation above is that medium-level methods are generally less accurate than their supertree counterparts . again, this is not surprising, as supertree methods are based on additive distance matrices , which are expected to be more accurate estimates of the correct distances than the distances estimated directly from the alignments . however, inferring additive distance matrices comes at a  cost, as we shall show on the experiments on the orthomam data set in the next section.

we conclude noting that the only methods that do not incur in any major accuracy problem on the simulated data set are erable, erableadd and concat+ml. however, their running times and memory requirements are very different: on this data set, concat+ml is five hundred times slower than erable  and requires far more memory . in this case the computational effort to analyse the simulated data sets is clearly not problematic for concat+ml. this is because a simulated replicate data set is relatively small . we look in more detail at running times and memory usage in the experiments in the next section, which are on a computationally more challenging data set.

results and discussion for the orthomam data set
assessing estimation accuracy on the orthomam data set is more problematic than on the simulated data set, first, because the correct values for the branch lengths and gene rates are not known and, second, because statistical noise may play an important role here, as no replicates are available. we address the former issue by adopting the estimates obtained by concat+ml as reference values. this is justified by the observation that concat+ml provides the most accurate branch length and gene rate estimates on the simulated data set.

on the other hand, the orthomam data set allows us to observe the robustness of the methods tested to violations of the proportional model, whose assumptions are not expected to hold in real data sets. moreover, given the relatively large number of genes, this phylogenomic data set is particularly appropriate to assess the computational feasibility of the approaches we implemented.

computational efficiencies. running times and memory usages of the tested methods are reported in table  <dig>  we decomposed running times in two parts: first , we look at the times necessary for preprocessing steps ; second , we show the remaining running times, to actually produce branch length and gene rate estimates.

t
1

t
2

m

note.— the first row gives  the running time to obtain the data on which subsequent computations are based: the superalignment and the distance-based gene trees for concat+dist, the superalignment and ml gene trees for concat+ml, the ml gene trees and resulting additive distances for the three supertree methods, and the estimated distances for the three medium-level methods. when ml gene trees are used , two alternative approaches are possible and therefore two running times are provided: first that to infer trees with fixed topology , and then that to infer trees where the topology is also estimated . the second row gives  the remaining running time to obtain estimates for branch lengths and gene rates. the third row  gives the maximum amount of memory allocated. all the experiments were conducted on a pc with  <dig> gb ram and a  <dig>  ghz cpu, except branch length estimation  for concat+ml, which, because of the large memory requirements, was run on a cluster machine with  <dig> gb ram and a  <dig>  ghz cpu



preprocessing times  show an advantage of medium-level methods , over supertree methods and concat+ml, and the advantage of constraining phyml to only optimize branch lengths and model parameters , rather than also seeking an ml topology . note however that running times in preprocessing steps is highly and easily parallelizable, meaning that waiting times on parallel architectures will be much lower than the running times indicated here.

actual processing times  and memory requirements  in table  <dig> illustrate the main strength of the new methods we propose here: while for most methods the running times are in the order of the hours  and memory usage in the order of the gigabytes, erable and erableadd only require a few seconds and a few hundred megabytes on the orthomam data set. particularly heavy are the memory requirements for concat+ml: only users with access to large memory machines may use this method on a large data set  such as orthomam. as for the difference between erable and the other distance-based methods , this is consistent with the differences in computational complexities of these methods, which only for erable is linear in m. the only method with computational costs comparable to those of erable is concat+dist, which however on the simulated data leads to inaccurate branch length estimates.

branch length estimation. figure  <dig> shows the accuracy of all tested methods in the estimation of branch lengths. these experiments confirm that, not surprisingly, distr-based methods are inaccurate at this task — as already observed in the simulated data set. moreover, it is clear that the tested methods provide branch length estimates at slightly different scales, as their scatterplots tend to be distributed along non-horizontal lines. sdm-based and erable-based methods produce branches that are on average 5– <dig> % longer than those estimated by concat+ml , whereas concat+dist tends to produce shorter branches.
fig.  <dig> accuracy of branch length estimates in the orthomam data set. for each method, the  <dig> branch lengths b^eml estimated by concat+ml  are plotted against the differences b^e−b^eml  . the horizontal red line corresponds to no difference between the two estimates. method names are shown at the top of each plot, followed by the fraction of variance unexplained of  relative to  



the main reason for these discrepancies is the presence in orthomam of an inverse correlation between the rate of a gene and the depth of its alignment: whereas superalignment methods are sensitive to gene alignment depths – with branch lengths estimates more influenced by genes with many aligned sequences, and thus evolving less rapidly – this is not true for the other tested methods. this observation explains the scale differences observed, as we explain in more detail in additional file  <dig> 

gene rate estimation. figure  <dig> shows the accuracy of all tested methods in the estimation of gene rates. two observations can be made:  the main difference in accuracy is now between supertree methods and all other methods ;  again estimates are at slightly different scales, with supertree and medium-level methods having a tendency to estimate lower rates than concat+ml.
fig.  <dig> estimation accuracy for gene rates in the orthomam data set. logarithmic scatterplots showing the  <dig>  “reference” gene rates r^kml estimated by concat+ml , against ratios r^k/r^kml . note that errors relative to the reference gene rates are measured with ratios, instead of differences. colors  indicate increased density of points. the horizontal red line corresponds to no difference between the two estimates. method names are shown at the top of each plot, followed by the mean absolute log-ratio between estimated and reference gene rates 



observation  is due to the use of a unique gamma shape parameter , common to all genes, to estimate all matrices Δ <dig> Δ <dig> …,Δm. although this is common practice in distance-based analyses, for many genes this is far from the biological reality, as the shape parameters are themselves very different from gene to gene . because distance estimates are monotonically decreasing functions of the shape parameter  <cit> , underestimating  the shape parameter for gene gk results in overestimating  all the distances in Δk, and therefore the rate rk. this explains the poor accuracy in gene rate estimation for all methods that use Δ <dig> Δ <dig> …,Δm .

it is possible to confirm this explanation by inspecting the genes corresponding to dots that significantly deviate from the red line in fig.  <dig>  which as expected tend to have ml gamma shape parameters strongly deviating from  <dig>  . alternatively, fig.  <dig> bis in additional file  <dig> shows that if we use gene-specific gamma shape parameters in the estimation of Δ <dig> Δ <dig> …,Δm, then rate estimates become much more accurate for all methods that use these matrices. . figure  <dig> bis also shows that, once the effect described above is taken away, sdm-based methods become again the least accurate — consistent with our results for the simulated data set.

as for observation  — the fact that gene rate estimates tend to be lower than those of concat+ml for all methods except concat+dist  — it is easy to understand that this is strictly linked to the fact that the estimated branches tend to be longer than those of concat+ml for all methods except concat+dist .

discussion. one of the main differences with the results on the simulated data is the difficulty of setting a scale for branch lengths and gene rates. we expect this observation to extend to most real data sets, where inferring absolute estimates, rather than relative, may be very challenging.

apart from this scaling issue, the results on the orthomam data set are largely in line with those obtained on the simulated data set: distr-based methods  lead to inaccurate branch length estimates, and sdm-based methods  lead to inaccurate gene rate estimates — which is not surprising, given that neither of these methods was originally designed for both these tasks . as for concat+dist, the high variance in branch length estimates observed on the simulated data seems to not be present for orthomam. this is surprising, but we recall that it is hard to draw firm conclusions on estimation accuracy from this data set, for the reasons explained above.

that leaves us with erable-based methods and concat+ml. it would seem that the choice among erable, erableadd and concat+ml should largely be done based on their tradeoff between accuracy and computational cost . one important lesson that the experiments on orthomam highlight, however, is that unless we adopt gene-specific parameters modelling rates-across-sites heterogeneity , medium-level methods such as erable may produce inaccurate gene rate estimates.

CONCLUSIONS
in this paper we have examined the notions of branch lengths in a species tree and of gene rates in a phylogenomic context. we have presented erable, a novel and efficient method for the estimation of these quantities, which are often overlooked in phylogenomic analyses – for example by classical supertree methods – or whose estimation requires computationally-demanding methodologies – usually likelihood-based analysis of a concatenated superalignment. note that for large phylogenomic data sets such as orthomam – where the concatenated alignment consists of more than  <dig> million sites – the application of likelihood is very onerous, especially in terms of memory requirements, which may be problematic for some users. recall that in our experiments we have constrained the tree topology; a full likelihood analysis would further increase computational costs. moreover, in additional file  <dig>  we show that ml methods more efficient than phyml – namely examl  <cit>  and fasttree  <dig>  <cit>  – are still very inefficient relative to erable.

methodologically, erable represents the fastest available method to estimate the branch lengths of a given topology from a collection of distance matrices – one matrix per gene under consideration. it generalises and reduces to  classical wls branch length estimation. the most important difference with single-gene wls is that erable also estimates gene rate parameters, modelling the different “speeds” of evolution of different genes — with little computational overhead.

erable’s limitations are its reliance on a tree topology – either a well-accepted phylogeny or a tree reconstructed prior to its execution – and its seemingly strong assumptions about the data . however, we stress that these hypotheses represent an ideal scenario. as shown by the experiments on the orthomam data set, erable can perform well on real-world data sets where these assumptions will probably be violated to some degree, namely because of phenomena such as heterotachy  <cit>  or limited topological incompatibilities due to incomplete lineage sorting , gene duplication and/or lateral gene transfer  <cit> . in order to investigate the robustness of erable and competing methods to these violations, it would be interesting to simulate data following more realistic assumptions, for example those of the multispecies coalescent  <cit>  to study the effects of ils. furthermore, it would be useful to model alignment errors which are undoubtedly present in real data.

erable can be used in two ways, which differ in the way the input distance matrices are obtained: they can either be directly estimated from gene alignments, or they can be based on phylogenetic trees inferred for each gene. our experiments  show that both these approaches provide valid alternatives to existing methodologies: the alternative methods are either only accurate for one of the two tasks that erable carries out — sdm-based methods provide branch lengths estimates comparable to those of erable, while distr-based methods provides marginally better gene rates estimates — or computationally very demanding — as in the case of ml analysis of a concatenated superalignment.

a possible use of erable is as a complement to classical supertree methods , which often disregard branch length information, yet present in the input trees. in this context, erable would allow to rapidly assign meaningful branch lengths to the tree topologies reconstructed by these methods.

alternatively, when  the evolutionary relationships between the species under consideration are relatively well-known, erable can be used as a standalone, using a reference topology as input. this is the scenario that we have assumed in our experiments on the orthomam data set. an interesting question for future research is the robustness of erable’s estimates to errors in the reference topology.

furthermore, it would be interesting to investigate the possibility of combining the assignment of branch lengths made by erable with a criterion for topological inference, allowing to score different tree topologies for their fit with the data. this is analogous to what is done in classical distance-based phylogenetics, where least squares branch lengths can be used in combination with criteria such as minimum evolution  <cit> . however, this would probably need more methodological advances, first, to reduce further the time needed to evaluate a topology — if possible, by extending the approaches shown for particular cases of wls in recent studies  <cit>  — and, second, to avoid issues of statistical inconsistency, which are known to affect single-matrix wls in combination with minimum evolution  <cit> .

availability of supporting data
the simulated data set and the orthomam data set supporting the results of this article can be found online at: http://www.atgc-montpellier.fr/erable.

additional files
additional file  <dig> 
erable, in detail. 



additional file  <dig> 
the choice of
z
k
 in the constraint. 



additional file  <dig> 
estimation accuracy measures. 



additional file  <dig> 
the scales of branch lengths for the orthomam data set. 



additional file  <dig> 
reference topology for the orthomam data set. 



additional file  <dig> 
usefulness of gene-specific gamma shape parameters. 



additional file  <dig> 
alternative ml methods for concat+ml. 



abbreviations
acsaverage consensus supertree

bwdbuild with distances

erableevolutionary rates and branch length estimation

mlmaximum likelihood

mrpmatrix representation with parsimony

sdmsuper distance matrix

olsordinary least squares

wlsweighted least squares

glsgeneralized least square

competing interests

the authors declare that they have no competing interests.

authors’ contributions

fp and mb designed the algorithm. mb implemented it and performed the analyses. mb, ejpd, fp, og and cs participated in the design of the experiments and in the interpretation of the results. mb and fp wrote the manuscript. all authors read and approved the final manuscript.

