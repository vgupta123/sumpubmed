BACKGROUND
much of present day biology is dependent on sequence-structure-function relationships in protein molecules, insights obtained for one protein heavily influencing understanding of other proteins in the family. recognizing similarities and deriving relationships therefore is a fundamental objective in bioinformatics. some of these similarities are obvious at the sequence level while some are detected at the structure level  <cit> . it is in fact well established now that the conservation at the structure level of related proteins can be higher and hence much more detectable than at the sequence level  <cit> . in this context, there are a number of examples in the literature, which illustrate that structures often convey the 'meaning', more efficiently than sequences, here 'meaning' referring to the 'function' of the protein. on the other hand, there are also a number of instances, which illustrate that a particular 'function' is achieved by proteins whose sequences and structures are dis-similar. for example, at least three different proteins with different folds and architectures recognize mannose and exhibit mannose-mediated physiology  <cit> . in other words, structures also fail to convey the 'meaning' in many cases. we do not yet know if this failure is because of our inability to recognize any similarities in such seemingly dis-similar proteins or it is simply because no similarities actually exist among them. what ultimately matters for a protein molecule however, is its function and not what means it uses to achieve it  <cit> . a given function could be conserved simply by having similarities in some elements of the structure, such as the binding site residues  <cit> . a classic example is the large family of serine proteases which are classified into different sequence and structural families, but all come under the functional class of serine proteases due to the presence of the catalytic triad  <cit> . comparison of binding sites differ from comparison of whole structures for two main reasons  the binding sites are small containing only a few residues and  these residues are often not contiguous in sequence. alignment of two sites containing discrete sets of atoms involves evaluation of a huge number of mappings. this makes it important to have efficient algorithms with low time and space complexities that are capable of identifying and ranking different extents of similarities appropriately. with several structural genomics projects as well as advances in computational methods for structure prediction, the structural databases are growing at a rapid pace, providing experimental structures of thousands and confident homology models of millions of protein molecules  <cit> . algorithms for identification of binding pockets with reasonable confidence have also been developed  <cit> . the need for large scale comparisons of binding sites is hence accentuated. some methods are already available for such a purpose based on ideas well established in the field of image processing. for example sitesbase  <cit>  that uses 'geometric hashing' involves selection of triads of points representing atomic types and positions in each site and comparing the triangles formed by triads; pints  <cit>  uses a depth first traversal strategy, adopted to find common set of nodes between a pair of graphs connected by similar pattern of edges; spherical harmonics based algorithm  <cit> , captures distribution of points representing the site in terms of coefficients of a square integrable function on a unit sphere; cavbase  <cit>  identifies maximal common sub-graphs between pairs of sites; spasm and rigor  <cit>  compares distribution of residues from the centroid of the binding sites. each of the methods have their own merits and demerits, warranting exploration of newer methods for site comparison. here we present a new algorithm called pocketmatch for representing a binding site in a frame invariant manner and comparison of pairs of sites based on alignment of sorted sequences of distances between pairs of points representing sites.

RESULTS
a new efficient and accurate algorithm pocketmatch has been developed for comparing binding sites in protein structures. a comparison between a pair of sites of an average size of  <dig> atoms takes only 1/250th of a second on a single processor. the algorithm has been used for large scale database searches and all-vs-all comparisons. a typical database search of a query site against those from a large dataset comprising about  <dig> sites takes in the order of  <dig> minutes to complete on the same machine with mpi-c version using  <dig> processors.

algorithm
comparison of a pair of binding sites involves three aspects,  representation of each site as sorted lists of distances between chosen points,  alignment of two sets of distance lists and  choosing a scoring scheme for arriving at a final score. our representation scheme for the site is based on capturing the geometry of a 3d object in a 1d representation by a set of all pairs of distances between points. such a set of distances would become a frame-invariant representation, a highly desirable scheme for any general shape comparison method. two sets of distances can be compared for similarity by considering a suitable mapping between distances whose dissimilarity is bounded by a small amount. as the number of such mappings of distances from one set to the other would be huge, we represent them as sorted sequences in ascending order. an alignment strategy for comparison of two sequences of distances is also presented. the different steps involved are described.

representation of binding site
step- <dig> a set of residues whose one or more atoms surround a given crystallographic ligand within a specified distance  from each atom of the ligand is taken as the binding site. we chose to consider atoms of the complete residues corresponding to each of these atoms for shape-representation. for any 3d object represented by a set of points, the set of all pairs of distances between the points encodes the shape of the object. these points can then be flagged with specific chemical properties.  <dig> amino acids were considered in  <dig> groups – group-0:; group-1:; group-2:; group-3:; group-4:.

grouping is implemented as a user defined parameter enabling use of other types of grouping.

step- <dig> represent each complete residue of the site by  <dig> types of points – cα, cβ and ccentroid corresponding to c-alpha, c-beta and centroid of atoms of the side chain of the residue. centroid is computed as

 x¯=∑i=1nx¯i 

where x¯i indicates coordinates of the ith atom of the side chain and n is the number of atoms in the side chain.

step- <dig> binning of distances and representation format.

 compute distances between all pairs of points and bin the distances into  <dig> sets corresponding to group-type-pair and point-type-pairs.

 there are  <dig> types of residue-groups. therefore  <dig> * / <dig> +  <dig> →  <dig> pairs of groups are possible.

 there are  <dig> types of points. therefore  <dig> * / <dig> +  <dig> →  <dig> pairs of point types are possible.

 considering both residue-group and point-type information, total number of possible sets of distances would be  <dig> *  <dig> ⇒  <dig> 

 write the above representation in the following format to a file.

 ngpntp{nd1d <dig> d <dig> ⋯dj,⋯}{nd2d <dig> d <dig> ⋯dj⋯}⋮{nd90d <dig> d <dig> ⋯dj⋯} 

where, ngp: number of pairs of group-types, ntp: number of pairs to point-types, ndi: number of distances in the ith bin, dj: distance between jth pair of points.

step- <dig> the distances in each list were sorted in ascending order.

alignment of a pair of distance-sets
to compute similarity score between two binding sites, each of the  <dig> sets of one site has to be compared with its corresponding set of the other site. in the next step, similarity between sets was computed using a greedy strategy for alignment of sorted distance-sequences.

step-5: let the given pair of sorted distance lists be s <dig> and s <dig> where each element is indexed by s for the list, s. let the threshold for alignment of two distances be τ i.e., |s <dig> - s2| ≤ τ. let m = |s1| and n = |s2| denote the cardinalities of the sets s <dig> and s <dig> respectively. let the variable counter hold the number of matched distances between two sequences. then alignment strategy is as indicated in the  below.

sub-routine  <dig> alignment of a pair of sorted distance sequences

i = 0; j = 0; counter = 0;

while  ∧  do

   if |s <dig> - s2| ≤ τ then

      i ← i + 1; j ← j + 1

      counter ← counter + 1

   else

      if s <dig> <s <dig> then

         i ← i + 1;

      else

         j ← j + 1;

      end if

   end if

end while

scoring for similarity between sites
step-6: scoring of the alignment: an alignment score between a pair of sites is the net average of the number of matching distance elements in the  <dig> lists as a fraction of total number of distance elements in the bigger set, for a chosen threshold τ, as shown

 pmscore=∑i=190countimaximum 

where |s| indicates cardinality of the set.

this measure of similarity, referred to as pmscore is used as the default scoring scheme in this study. a variant of this scoring scheme pmscoremin, in which the denominator was taken as the minimum , was also explored, since it emphasises local structural similarity ignoring the relative size mismatch between the two sites being compared. however we observed that the comparison was too insensitive with such a scheme and did not use it further. τ is an important parameter that governs the alignment, which decides when a given pair of distances constitute a match. different values of τ  were tried and a default of  <dig> Å was used in this study.

testing
pocketmatch has been validated for two aspects,  first to validate how well known similarities are being reproduced and  how sensitive is the algorithm with respect to minor perturbations in geometry and residue types at the site. comparison with known binding sites that are similar to each other is achieved by three ways  by considering proteins belonging to the same scop classification up to the family level, since such proteins are likely to have similar binding sites, given high similarity in their overall folds and their inferred homology within a family  by comparing sites for the same ligand of multiple subunits in the same protein in a dataset of tetrameric proteins and finally  by performing an all-vs-all comparison in a curated set of  <dig> sites for  <dig> ligand types corresponding to  <dig> proteins described in table  <dig> and testing if the sites for each of the ligands cluster separately.

based on scop classification
 <dig> all-pair-site comparisons in pdbbind  was carried out. two matrices m <dig> and m <dig> were constructed as described in the methods section. the first matrix shows similarities among the  <dig> proteins in the dataset used in the study based on the pocketmatch scores while the second matrix shows similarities in the same dataset based on similarities in the scop families they belong to. the first matrix thus estimates similarities in the binding sites of the proteins, while the second considers similarities in the overall fold, as illustrated in figures  <dig> and  <dig>  two proteins that have sites scoring 50% or higher with pocketmatch are indicated by red dots, while those that do not have that level of similarity are again left as blank spaces. those proteins which belong to the same scop family are indicated by blue dots, while blank spaces correspond to those that have different scop families, as shown in figure  <dig>  given two matrices m <dig> and m <dig> – one for pmscores and one for scop respectively, the dis-similarity between them has been calculated as xor,

 xor=∑∀m1ij!=m2ijn <dig> 

where n is the dimension of the matrix.

pocketmatch matrices can be constructed at different thresholds, and the above excerise of superposition and computing xor repeated for each threshold. figure  <dig> illustrates xor between the pmscore and the scop matrices as a function of pmscore threshold. as expected the xor values start at a value close to  <dig> when the threshold is very low  and inch towards  <dig> when the thresholds are increased to 100%. a sharp decline in xor can be seen at around a threshold of 40%. this means that when a pair of sites match with a score of 40% or higher, they exhibit the same scop classification. at lower thresholds, for example at 20%, i.e., when two sites are considered similar to each other even when they match to only 20%, the correspondence of such a metric with the scop matrix is poor. this analysis serves to validate two points,  that higher pmscores are reflective of true-positives in the context of the family level scop classification and  that lower pmscores are reflective of true-negatives by the same logic. the graph also shows that a score of 40% is discriminatory enough to identify a true-positive.

similarities in tetramers
next, we tested the pocketmatch algorithm by comparing multiple binding sites of the same ligand in the same protein. the ligand sites in the different subunits in the tetramer dataset  were compared. in all  <dig>   <dig> comparisons were carried out for the  <dig> sites in  <dig> tetramers. in most subunits, binding sites match with sites of other subunits of the same protein with a score of 90% to 100% . the two validation tests demonstrate high prediction accuracies, both in terms of assigning high scores to similar sites and low scores to dis-similar sites.

using a curated dataset of known similarities
a dataset of  <dig> proteins containing  <dig> sites for ligand types cit, mtx, mk <dig> and pga  was curated and all vs all comparisons were carried out. the sites were then clustered based on their extent of dissimilarities. as evident from figure  <dig> illustrating the cluster tree, sites corresponding to each ligand type cluster separately forming distinct groups among them. this serves to demonstrate that similarities among sites for a given ligand type are high in different proteins and the similarity scores are also sufficient to discriminate between sites for other ligand types.

sensitivity analysis
sensitivity with respect to random perturbation of positions of site points
the basic idea behind this validation is to understand the sensitivity of our algorithm, with respect to minor perturbations in the positions of binding site residues. this would encompass scenarios where the proteins being analyzed  have a minor error in the crystallographically determined coordinates, or  where the given site residue is flexible or  where the structure in hand is a homology model with minor changes in the site, such as due to mutations or binding of slightly different ligands. in all these cases the nature of the binding sites of the corresponding proteins is essentially the same and should be identified as similar by any site comparison algorithm. we chose two ligands of different sizes: phyenylpropanoic acid methyl ester consisting of  <dig> atoms and methotrexate consisting of  <dig> atoms. we perturbed the sites to varying extents within bounds of  <dig> to 5Å about  <dig> times for each site individually. we then computed pmscores for the original and the perturbed pair in each instance. a plot of pmscore vs rmsd between the sites is shown in figures  <dig>   <dig> for the two ligands. four different scoring schemes were used which differed in the τ parameter. while testing for sensitivity, this analysis also tests for an appropriate definition of similarity.

for a small perturbation of say <  <dig> Å the pmscores between the original and the perturbed site was seen to be very high with all scoring schemes for both the ligands. this indicates that the algorithm is robust enough to recognize two sites as similar even when minor perturbations to the extent of 2Å are present. when the perturbation was increased to 5Å the pmscores showed lower values as expected. with scoring scheme- <dig> which was most liberal in terms of its similarity definition, the pmscores varied very little even with high perturbation where as when scheme- <dig> was used, pmscores moved to near zero even for small perturbations of about  <dig> Å. the 2nd, 3rd and 4th scoring schemes corresponding to τ of  <dig> ,  <dig>  and  <dig>  respectively, showed in-between trends with a reasonable balance between sensitivity and robustness. the figure shows that the trend followed by the various schemes is consistent for different sizes of ligands. given that the average coordinate error in crystal structures is in the order  <dig> Å we have used the scoring scheme- <dig> as the default scheme for large scale analysis. τ is however implemented as a user defined parameter. this analysis indicates that the scores obtained are  reflective of the extent of similarities,  resistant to minor perturbations in the site,  scoring schemes are self consistent validating the basic logic used in the algorithm and  perturbed sites where some atoms have moved even up to 5Å are recognizable as similar to their original sites, albeit with lower pmscores, because of retaining the overall nature of the site and high similarities with respect to remaining atoms in the site.

sensitivity with respect to random perturbation of residue types of site points
given that spatial arrangement of specific amino acid residues at a given binding site dictates its recognition properties, we felt it was important to test the sensitivity of our algorithm to perturbations in the nature of the residues in the binding site without disturbing their spatial arrangement. we carried out this analysis on a pair of sites which were known to be similar to each other and another pair of sites which were known to be dissimilar to each other. to minimize site-specific biases that may arise during comparison, we chose one protein to be common between the two sites and all three to be nucleotide binding sites. one of the sites was kept constant while the other was perturbed. of a possible 5n perturbations for a site a site of n residues,  <dig> random perturbations were carried out and computed the pmscore of each of the perturbed sites with respect to the original site. the pmscores for the unperturbed sites of the two chosen pairs  and  were  <dig> % and  <dig> % respectively whose superpositions are shown in figures  <dig> and  <dig>  the distribution of new pmscores over the set of perturbed sites with respect to the original site is shown in figure  <dig> for the first pair and figure  <dig> for the second pair. figure  <dig> shows that when perturbed, the similarity between two sites disappears and the scores get poorer. figure  <dig> shows a similar trend indicating no high similarities were seen during random perturbations. both these suggest that the arrangement of the site is specific and has been derived for a purpose and not just by chance. our algorithm is sufficiently sensitive to detect changes in the nature of residues at the binding site. our current implementation considers  <dig> amino acids classified into  <dig> groups and any change within the same group will obviously not be detected here. however the classification type is also implemented as a user defined parameter so as to consider each amino acid as a separate group to overcome this loss of sensitivity where more stringent analysis is required.

comparison of pocketmatch with other site matching methods
a benchmarking exercise of pocketmatch vis-a-vis the established binding site matching algorithms. sitesbase  <cit> , sumo  <cit> , profunc  <cit>  and a spherical harmonics method  <cit> , was carried out, to place pocketmatch in context of other methods previously reported in literature.

sitesbase utilizes geometric hashing that works by evaluating many superpositions of triads of atoms between two sites. all atoms within  <dig> Å are considered to constitute a binding site. an atom-atom score is computed based on number of matching atoms in the sense of least rmsd. empirically determined low and high scores are  <dig> and  <dig> respectively. each score is flagged by poisson-index  a measure of indicating the possibility of reaching that score by chance. the reported time for comparison of 82-atom pocket against a database of  <dig> sites is  <dig> minute  <cit> . sitesbase is available on the web  <cit>  as a database search engine with pre-defined proteins and sites, but not available for comparing user-defined structures. hence some randomly chosen examples that were already available in the pre-computed database of sitesbase were considered for comparison with pocketmatch. the binding site search utility in profunc  <cit> , a web service  for comprehensive analysis of proteins, employs the algorithm – jess  <cit> . jess uses a backtracking and depth first search method that works by determining appropriate correspondence between atoms in the pair of sites based on distance constraints. ligand binding site templates are generated as triads of residues within 5Å each and having at least one non-hydrophobic residue flanking the location of a ligand in a pdb structure. two sites are evaluated for similarity based on superposition  and number of matches. a pure shape based method by  <cit>  is based on representation of distribution of points from the centre of binding site by real spherical harmonic expansion coefficients. binding sites are determined by surfnet  <cit>  as a collection of spheres filling the cavity. a ball of  <dig> Å is then rotated around the collection to generate surface points. it is the shape of these points as a whole that is captured by the spherical harmonic coefficients and compared against other sets of points and hence other sites. the algorithm is not automatically available on the web or for local installation. hence a dataset of  <dig> proteins reported by the authors was considered for comparison with pocketmatch. sumo  <cit>  is based on identification of common subgraphs between pairs of sites by greedy algorithmic strategy which may not lead to maximal common subgraph always. the nodes in the graphs are triangles where each triangle corresponds to a functional group in the binding site. between a pair of sites, the triangles are matched followed by actual superposition of atoms of the sites by least squares optimization. the software is available at . the implementation of this method on the web allows comparison only with their pre-computed database of proteins and sites, but not available for comparing user-defined structures. in addition to these the align module of pymol has also been used as another method of matching sites. pymol considers sequence similarity and uses a least squares fit of the two sites, and reports number of residues matched and an rmsd for the matched residues.

as evident from the above descriptions of the various methods, the binding sites are represented in different ways by different methods. the matching algorithms also vary significantly among them. table  <dig> indicates the scores identified by the different methods for several protein-pairs belonging the same scop superfamily. while the obvious matches with high similarities are detected well by all methods, detection of matches with medium similarity is not so consistent. for example, the sialic acid binding site in 1a4g and 1nsc, both influenza virus neuraminidases bound to different ligands are identified by all methods with high scores. on the other hand, different methods fare differently with a hydrolase involved in blood clotting bound to different ligands. the ligands 2--1h-benzoimidazole-5-carboxamidine as in 1gjc, 2–5--1h-benzimidazol-2-yl-6-benzenolate as in 1o3p, 2-aminocarbonyl)-6-methoxypyridin-3-yl]-5- carbonylbenzoic acid as in 2ayw and methyl n-glycyl-3--d-phenylalaninate  as in 1v2q. the different ligands bind to the same protein and essentially at the same binding site but with different orientations involving many common residues but some different amino acid residues. pocketmatch identifies all these pairs as significant matches with a pmscore of  <dig> to 88%, as shown in table  <dig> and figure  <dig> . some pairs were not detected by other methods whereas some were not available in their pre-computed lists. some examples of protein pairs containing different folds but similar binding sites, reported in the literature were also chosen as shown in table  <dig>  pocketmatch was successful in detecting similarities in these pairs. to reflect part similarities that exist in them, pmscoremin is also listed for these. scores obtained from other methods are also listed. the performance as expected, is not consistent across all algorithms. for example, pymol failed to align heme sites in cytochrome c <dig>  and lignin peroxidase , although pocketmatch found a significant similarity of more than 63% between them. none of the other methods detected this pair. sitesbase detected some of these pairs, but sumo and profunc did not list them as possible matches.

pmscore and pmscoremin refer to pocketmatch scores with the two metrics described in the text. scores for profunc, sumo and sitesbase are as obtained individually from their respective web servers. significance values where available are also indicated. sitesbase scores refer to number of matches /maximum number of matches possible  = percentage of atoms matched. pymol  refers to number of residues matched, number of residues in site <dig>  number of residues in site <dig>  x refers to cases where similarities are not detected with default settings of the algorithm, while na indicates non availability that pdb entry in that dataset.

isoniazid, a front-line drug used in the treatment of tuberculosis, is a pro-drug after activation, has been well known to target the inha-encoded enoyl-acp reductase , thus inhibiting mycolic acid biosynthesis in mycobacterium tuberculosis. recently, a surprising observation of binding of isoniazid-adduct to dihydrofolate reductase has been reported  <cit>  . pocketmatch identified the isoniazid-adduct pockets in the two sites to be similar with a score of 56%, while the other methods failed to identify significant similarities between the two proteins.

it is no surprise that methods vary in their performance especially when the two sites are not highly similar, since different representations capture different aspects of the binding site. pocketmatch using a frame invariant sorted string of distances between point pairs captures the site by utilizing all available points in the site and hence reflects the shape and size of the site efficiently at the same time also reflecting the nature of amino acids, leading it to perform with higher sensitivity in detecting binding site similarities when some elements in the sites are different.

a comparison of pocketmatch with the spherical harmonics based algorithm was also carried out, by using the dataset of  <dig> proteins reported by the authors. these proteins contained four different ligand types which are steroid , atp, nad and heme . thornton and co-workers  <cit>  reported a dendrogram of these  <dig> proteins based on their site comparison algorithm. using the same dataset, we carried out an all-vs-all comparison of the sites and obtained pmscores. we then clustered the proteins based on similarities in pmscore values. we observe that the cluster tree obtained by us is largely similar to that reported by  <cit> , with major clusters correlating with individual ligand types figure  <dig>   <dig> of the  <dig> structures with a steroid site, cluster together while the atp sites cluster into two neat branches. the heme and the nad sites too largely form separate clusters. pocketmatch in fact appears to have fared better in clusters of atp, nad and heme. for example atp_1b38a and heme_1arp appear in one group by the spherical harmonics method but have grouped separately into clusters of atp and heme respectively by pocketmatch . the proper grouping of atp_1e8x and nad_1ahh are other examples where pocketmatch has fared better. although pocketmatch uses an entirely different, simpler representation scheme and matching algorithm as compared to that of  <cit> , it is able to detect similar sites and discriminate against dis-similar sites in an efficient manner.

the benchmarking exercises have been useful in validating pocketmatch against those already available in the literature. besides detecting obvious similarities, such comparison studies reveal interesting differences in the performance of different methods. two major issues that feature in the comparisons are the sensitivity of similarity detection and speed. pocketmatch has an advantage in both these factors. the performance of pocketmatch was found to be good with different datasets used in this study. an added advantage with our method compared to others is that, scores reflecting local similarities pmscoremin as well as global site similarities pmscore can both be obtained at the same time, thus readily yielding information about part similarities as well. this can be attributed in part to the fact that changes between two sites such as correlated mutations that maintain the same chemistry and distance in that pair are scored high by pocketmatch but not by some other methods. similarly, amino acids at a binding site superposing well in structure but formed by dis-similar polypeptide segments also score high in pocketmatch.

all vs all comparison – site geometry vs residue types
in order to estimate the sensitivity of our algorithm in terms of finding similarities for a given site in a large dataset, we performed an all vs all comparison in the pdbbind dataset table 1-ii. the distribution of pmscores across all pairs is shown in figure  <dig>  as evident from the histogram, majority of the pairwise scores are in the range of  <dig> to 40%. this means that any randomly chosen pair of two different sites will only have a score less than 40%. the histogram shows that only a small percentage of  <dig> % of all possible pairs have scores higher than 50% which are indicative of true positives. examination of  <dig> such pairs indeed shows that they are true positives and in fact belong to the same scop class indicating that they are similar not only in their binding site architectures but also in their overall folds. this also shows that there are no false positives. it must be noted that this analysis was carried out with the scoring scheme, which we recommend as default that uses amino acid group information apart from the sorted distances. the same analysis was then repeated with another scoring scheme that differed from the previous one by not differentiating among amino acid types. such a scoring scheme would identify similarities purely based on geometric features of the binding sites without considering their chemical nature explicitly. the distribution of pmscores by this scheme is shown in figure  <dig>  surprisingly, the same dataset showed a very different distribution of scores as compared to the previous analysis in figure  <dig>  here a majority of pairs exhibited high scores indicating that many of the sites appear similar, obviously leading to a large number of false positives. however, when their chemical group information is added, differences between types of sites emerge. this analysis shows that shapes by themselves without considering chemical information is not sufficient to discriminate between different types of sites.

CONCLUSIONS
a new algorithm has been developed to compare binding sites in accurate, efficient and high-throughput manner, where sites are represented as  <dig> lists of sorted distances flagged with residue type information. this representation therefore captures both the shape and chemical nature of amino acid types at the site. extensive validation has been performed using different datasets. sensitivity analysis has also been performed to analyze the performance of the algorithm with respect to perturbations of two types –  in the actual atomic positions of atoms of the site and  in the amino acid type at the site. several scoring schemes have been analyzed by virtue of which a scoring function with a good balance between sensitivity and ability to detect similarities has been identified and recommended as the default scoring scheme. perturbation studies where the geometry of a given site was retained but the residue types were changed randomly, indicated that chance similarities were virtually non-existent. our analysis also suggests that shape information alone is insufficient to discriminate between diverse binding sites. however, combining shape information with chemical grouping of amino acids at the site enables discrimination between different types of sites.

