BACKGROUND
protein-protein interactions  play major roles in the cell: transient protein interactions are often involved in post-translational control of protein activity; enzymatic complexes ensure substrate channeling which drastically increases fluxes through metabolic pathways; large protein complexes play essential roles in basal cellular mechanisms such as dna packaging , transcription , replication , translation , protein degradation  ...

various methods have been used to detect ppi. co-immunoprecipitation, co-sedimentation, and two-hybrid systems have traditionally been used to characterize interactions at the level of a single protein complex. more recently, high-throughput methods have been developed for large-scale detection of pairwise interactions   <cit>  or multi-protein complexes   <cit> .

in  <dig>  von mering et al. estimated that data resulting from combined experimental and computational approaches provide clues in favor of approximately  <dig>  ppi in the yeast saccharomyces cerevisiae  <cit> . clearly, however, this information should be considered with caution, since all methods are known to yield a non-negligible amount of noise  and to miss a fraction of existing interactions . the error rate depends strongly on the method, high-throughput and computational methods being less reliable than traditional methods  <cit> .

the network of interactions between proteins is generally represented as an interaction graph, where nodes represent proteins and edges represent pairwise interactions. graph theory approaches have been applied to describe the topological properties of the network: distribution of node degree , network diameter , clustering coefficient . these analyses have led to the observation of some apparently recurrent properties of biological networks: power-law degree distribution, small world, high clustering coefficients, and modularity  <cit> .

beyond these descriptive statistics, an important challenge for modern biology is to understand the relationship between the organization of a network and its function. in particular, it is essential to extract functional modules such as protein complexes  <cit>  or regulatory pathways  <cit>  from global interaction networks.

to achieve this goal, several clustering methods have been applied to the protein interactome graph in order to detect highly connected subgraphs . these algorithms rely on very different approaches. each of them requires specifying several parameters, some of which may drastically affect the results. to our knowledge, no systematic study has yet been performed to evaluate and compare these programs. it is thus very difficult for a biologist to estimate the reliability of hypotheses emerging from computer-based analyses of interaction networks.

in this paper we present a systematic quantitative evaluation of the capability of four clustering methods for inferring protein complexes from a network of pairwise protein interactions. the four methods tested here are markov clustering , restricted neighborhood search clustering , molecular complex detection , and super paramagnetic clustering . for each program, we sample the parameter space and select optimal parameters. we evaluate the robustness of the programs to false positives and false negatives. the algorithms are then applied to six data sets from high-throughput experiments.

RESULTS
algorithms
the four algorithms tested here rely on distinct approaches for extracting clusters from the graph . we give hereafter a short conceptual description. more information can be found in the supplementary material  and original publications.

the markov cluster algorithm   <cit>  simulates a flow on the graph by calculating successive powers of the associated adjacency matrix. at each iteration, an inflation step is applied to enhance the contrast between regions of strong or weak flow in the graph. the process converges towards a partition of the graph, with a set of high-flow regions  separated by boundaries with no flow. the value of the inflation parameter strongly influences the number of clusters.

the second algorithm, restricted neighborhood search clustering   <cit> ), is a cost-based local search algorithm that explores the solution space to minimize a cost function, calculated according to the numbers of intra-cluster and inter-cluster edges. starting from an initial random solution, rnsc iteratively moves a vertex from one cluster to another if this move reduces the general cost. when a  number of moves has been reached without decreasing the cost function, the program ends up.

the third algorithm, super paramagnetic clustering   <cit>  is a hierarchical clustering algorithm inspired from an analogy with the physical properties of a ferromagnetic model subject to fluctuation at nonzero temperature. at first, spc associates a spin with each node of the graph. spins belonging to a highly connected region fluctuate in a correlated fashion and nodes with correlated spins are placed in the same cluster. when the temperature increases, the system becomes less stable and the clusters become smaller.

the fourth method, molecular complex detection   <cit> , detects densely connected regions. first it assigns a weight to each vertex, corresponding to its local neighborhood density. then, starting from the top-weighted vertex , it recursively moves outward, including in the cluster vertices whose weight is above a given threshold. this threshold corresponds to a user-defined percentage of the weight of the seed vertex.

interaction graphs
from the collection of protein complexes annotated in the mips database  <cit> , we constructed an interaction graph by instantiating a node for each protein, and linking by an edge any two proteins that belong to the same complex. this graph is hereafter referred to as the test graph. as depicted in figure 1a, the structure of the original test graph is almost trivial: most complexes correspond to isolated components. in this test graph each complex is represented as a clique . this generally does not reflect the actual complex structure, where each protein is linked to specific partners. consequently, this original graph is of poor value for evaluating the performances of clustering algorithms on real data sets. this applies particularly to high-throughput data sets, which are generally fragmentary , and noisy .

in order to evaluate the robustness of the algorithms to missing and false interactions, we generated  <dig> altered graphs from the original test graph, by combining addition and removal of edges in various proportions. we refer to altered graphs as aadd,del, where add and del indicate respectively the percentage of added and deleted edges .

we also built  <dig> altered random graphs from the random graph, by randomly adding and removing random edges in the same proportions as for the original test graph.

to each of these  <dig> graphs , we applied the four algorithms described above, with varying parameter values. as a second way to estimate the random expectation, each clustering result was also randomized so as to obtain a set of permuted clusters of the same sizes as those obtained from the test graph or altered graphs.

parameter optimization
the quality of a clustering result was evaluated by comparing each cluster with each annotated complex. the complex-wise sensitivity  represents the coverage of a complex by its best-matching cluster . reciprocally, the cluster-wise positive predictive value  measures how well a given cluster predicts its best-matching complex .

to estimate the overall correspondence between a clustering result  and the collection of annotated complexes, we computed the weighted means of all ppv values  and sn values . the resulting statistics, clustering-wise ppv and clustering-wise sn, provide complementary and somewhat contradictory information: when the number of clusters decreases, the sn increases and, in the trivial case where all proteins are grouped in a single cluster, the calculated sn reaches  <dig>  reciprocally, the ppv increases with the number of clusters, reaching  <dig> in the trivial case where each protein is assigned to one separate cluster. in order to integrate the two statistics, we computed a geometrical accuracy , defined as the geometrical mean of the averaged sn and ppv values.

each algorithm has one or more parameters that influence properties such as number of clusters, cluster size, and cluster density . for each algorithm we measured the impact of the main parameters on sn, ppv and acc and selected the combination of parameters giving maximal accuracy. this analysis revealed that some parameters have a drastic impact on accuracy, whereas others have a limited effect.

let us illustrate in more detail the procedure of parameter selection with the inflation parameter of the mcl algorithm. with the original test graph, interestingly, the effect of this parameter is barely detectable . yet this apparent robustness is an artifact due to the trivial structure of the graph. in the mips data set used as a reference, most proteins  are members of a single complex, so that most complexes correspond to isolated components in the test graph  on which the clustering is performed. consequently, the clustering algorithm tends to define one cluster per connected component, irrespectively of the inflation parameter. consistently with this interpretation, the number of clusters is almost constant whatever the inflation parameter value . in contrast, when the same algorithm is applied to a randomized graph, the number of clusters increases with the inflation parameter .

the crucial impact of the inflation parameter becomes obvious when mcl is applied to highly altered graphs. for example, for the altered graph a <dig>  , the increase in inflation causes a decrease in sn  and an increase in ppv . these effects are explained by the fact that the number of clusters increases with the inflation parameter . the optimal tradeoff between sn and ppv is obtained for an inflation value of  <dig> , and yields an acc of 66% .

we performed the same analysis and selected the optimal parameter values for each one of the  <dig> graphs , as summarized in table  <dig> for the mcl algorithm. since the optimal parameter values depend on the level of alteration, we cannot view one value as systematically optimal. we chose as a general optimum the most frequent value in this table. this criterion ensures a good robustness to graph alteration .

note that in the case of the inflation parameter, the most frequent value  is especially well suited for graphs with a high level of alteration, such as those resulting from high-throughput data. in addition, for the less altered graphs, the accuracy is generally more robust to fluctuations of the inflation .

for the rnsc algorithm, we tested the impact of  <dig> parameters on the quality of the clustering. this represents a total of  <dig>  combinations of parameter values. figure  <dig> displays the sn  and ppv  obtained with the same altered graph as in figure 1b . each dot corresponds to one particular combination of parameter values. this figure shows that the rnsc algorithm is remarkably robust to the choice of parameter values: all the results are grouped in a cloud, with an almost constant ppv  and a restricted range of sn .

the same analysis was carried out for each parameter of each algorithm. the complete tables of optimal values for the  <dig> graphs using both accuracy and separation  are available as supplementary material . table  <dig> synthesizes the optimal values obtained for the four tested algorithms. these optimal values were systematically used for the robustness analysis in the next section.

robustness analysis
in this analysis, we chose fixed parameter values for each algorithm  and analyzed the robustness of the different algorithms to various levels of graph alteration .

to estimate the random expectation, we performed for each clustering result a permutation test, by shuffling the proteins between clusters. the number of clusters and their respective sizes thus remained unchanged. the geometric accuracy of the permuted clusters is displayed with dotted lines in figure 4a. for mcl, rnsc and mcode, the accuracy is relatively stable . for spc, surprisingly, the accuracy of the permuted clusters progressively increases with the addition of edges, reaching 38% when more than 80% egdes are added. this value almost equals that obtained with the non-random altered graph a <dig> . this illustrates the importance of the permutation test: the test makes it possible to estimate the performance of an algorithm in terms of gains relative to the random expectation. we inspected the clustering result in more detail in order to understand why the program can yield high accuracy values even when clusters are permuted. this effect comes from the fact that, under the chosen conditions, spc yields a huge cluster of  <dig> proteins, plus a multitude of very small clusters of  <dig> or  <dig> proteins. the effect of the huge cluster is to artificially increase the sn, since a good fraction of each complex is covered by this cluster. each of the very small clusters yields a high ppv : single-element clusters have by definition a ppv of  <dig>  and 2-member clusters have a minimal ppv of  <dig> . this particular distribution of cluster sizes thus creates an artefactual situation by reaching, for two separate reasons, reasonably high scores for both criteria .

in order to circumvent this problem, we defined an additional statistic, which we call separation, as the product of the proportion of complex elements found in the cluster by the proportion of cluster elements found in the complex . high separation values indicate a bidirectional correspondence between a cluster and a complex: a maximal value of  <dig> is reached when a cluster corresponds perfectly with a complex, i.e. when it comprises all of its proteins and nothing more.

the complex-wise separation indicates how well a given complex is isolated from the other complexes. the maximal value for complex-wise separation is  <dig>  the simplest way to obtain sepcoi
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwglbqzcqwgwbacdawgaawcbagaem4yammaem4ba82aasbaawqaaiabdmgapbqabaaaleqaaaaa@350c@ =  <dig> is the perfect match, i.e. when all the proteins in the complex are contained in a single cluster, and this cluster does not contain any other protein . yet the value of  <dig> can also be reached if the complex is split into two or more clusters, if each of these clusters contains only members of the complex . in other words, sepcoi
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwglbqzcqwgwbacdawgaawcbagaem4yammaem4ba82aasbaawqaaiabdmgapbqabaaaleqaaaaa@350c@ =  <dig> indicates that the clustering algorithm separates this complex perfectly from all other complexes .

clustering-wise sensitivity  <dig> 

clustering-wise ppv  <dig> 

accuracy  <dig> 

average cluster-wise separation  <dig> 

average complex-wise separation  <dig> 

clustering-wise separation  <dig> 

similarly, we defined a cluster-wise separation, which indicates how well a given cluster isolates one or several complexes from the other clusters. the maximal value, sepclj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwglbqzcqwgwbacdawgaawcbagaem4yammaemibaw2aasbaawqaaiabdqgaqbqabaaaleqaaaaa@3508@ =  <dig>  indicates that a cluster fully and exclusively comprises all the elements of one or several complexes, i.e. it contains all the proteins of the considered complex, and no other cluster contains any of these proteins.

the clustering-wise separation statistic integrates separation values over all complexes and clusters, and indicates the general correspondence between a clustering result and the set of annotated complexes. separation is particularly relevant to assessing clustering algorithms like mcode, which permit assigning a protein to multiple clusters. under some particular parameter combinations, this program tends to yield highly redundant clusters. table  <dig> shows a fragment of the contingency table indicating the number mutual intersections between the  <dig> clusters obtained from the unaltered test graph. for example, the  <dig> first rows/columns show a series of imbricated clusters, each resulting from the addition of one node to the preceding cluster. such strongly overlapping clusters artificially increase the performance, since a set of clusters representing the same complex will be taken into account multiple times in the average ppv.

cluster-wise separation penalizes this effect by using the marginal sums rather than the cluster size. thus, if a method generates many redundant clusters, each one intersecting with a given complex, the marginal sum will increase drastically, and sepcl will be reduced accordingly. note that the result of table  <dig> is not representative of all mcode conditions: when appropriate parameters are chosen, the level of mutual overlap between clusters is reasonable.

in figure 4c and 4d, increasing proportions  of edges are randomly removed from the test graph. the general trend is for rnsc and mcl to outperform the other two algorithms under most conditions. rnsc, however, shows a higher sensitivity to edge removal, and its performance strongly decreases when more than 40% of the edges are removed. spc is quite robust to edge removal, but its performance remains lower than that of mcl under all conditions. note that this removal experiment is not very indicative of algorithm capability under realistic conditions, because the partitioning of the test graph corresponds almost with complex composition . thus, when edges are simply removed, this partitioning is mostly maintained: given the high level of intra-complex connectivity, most complexes remain linked, and no new inter-complex link is created.

in order to obtain a realistic estimate of algorithm robustness, we thus need to combine edge addition and removal. figure 4e and 4f shows the robustness to edge removal, starting from a graph with 100% edge addition. the performances of all programs are of course reduced as compared to figures 4c and 4d. in terms of accuracy , rnsc and mcl show grossly similar behaviours: the accuracy shows a good robustness in the low range of removal percentages  but strongly decreases at higher percentages . yet in terms of separation , rnsc shows a better performance than mcl at low rates of removal. the separation values of all algorithms drop to their respective levels of the random expectation when 80% of the edges are removed. mcode and spc show generally low performance, and are drastically affected by the combination of addition and removal. the performance of spc is similar to that obtained by selecting random clusters, in terms of both accuracy  and separation .

figures 4g and 4h show the effect of edge addition on graphs from which 40% of the edges had previously been removed. these curves confirm the trends observed in figures 4a and 4b: mcl and rnsc are weakly affected by edge addition, but as little as 20% edge addition suffices to prevent spc from identifying the complexes . mcode is relatively robust to edge addition, but shows a weaker performance than mcl and rnsc over the whole range of conditions.

analysis of data sets obtained in high-throughput experiments
in the previous chapters our evaluations were based on artificial graphs obtained by adding and removing various proportions of edges to a reference network . the next step was to evaluate the capability of these algorithms to extract relevant information from high-throughput data sets. to this end, we downloaded from the grid database  <cit>  six data sets representing the network of protein interactions in the yeast saccharomyces cerevisiae. two of these data sets consist of pairs of interacting proteins detected by the two-hybrid technique published respectively by uetz et al.  <cit>  and ito et al.  <cit> . the four other data sets contain protein complexes characterized by mass spectrometry, published respectively by gavin et al.  <cit> , ho et al.  <cit> , and krogan et al.  <cit>  . for each of these data sets we built a graph with one node per protein, and one edge per interaction.

we then ran the four clustering algorithms on these graphs, with the optimal parameters determined in the first part of this study. the clusters obtained from these high-throughput networks were compared with the complexes annotated in the mips database by computing the same statistics as described above . in each case, a negative control was done by calculating the same statistics on permuted clusters .

some precautions should be taken before interpreting these results. in particular, it is not trivial to interpret the "positive predictive value", as our reference set is the mips collection, filtered to discard any high-throughput result. this collection should by no means be considered exhaustive, since the complexes detected by previous studies represent only a fraction of all existing complexes. high-throughput methods are thus expected to yield many complexes that have not previously been characterized by other methods. thus, interactions detected by high-throughput methods that are not annotated in mips cannot be considered "false positives". the same holds true for cluster-wise separation. thus, the ppv and cluster-wise separation values should be interpreted as an indication of the fraction of high-throughput results which are also detected by other methods and have been annotated in the mips so far. in contrast, the sensitivity is likely to yield more directly relevant information, by indicating the fraction of annotated complexes recovered in the clusters obtained from high-throughput data. bearing in mind these limitations, we may now analyse the data presented in table  <dig> and figure  <dig> 

an important criterion for this analysis is the contrast between the scores reached with the real clustering results and the random expectation estimated with permuted clusters. a look at this contrast already reveals some general characteristics of the data sets. whatever the clustering method used, the sep values obtained were similar for the real and pemuted clusters in the case of the data sets resulting from two-hybrid experiments  <cit> . this confirms the conclusions of von mering et al., who compared the positive predictive value  and sensitivity  of the interaction graphs obtained by various high-throughput methods  <cit> , and who also observed very poor values for the two-hybrid data sets. the hms-pci data set  <cit>  shows a better contrast between real and permuted clusters, but the best results are clearly obtained with the three other mass-spectrometry data sets  <cit> . we will thus focus on these three data sets in our comparison of the algorithms.

compared to the other algorithms, mcode yields a lower number of clusters, with a higher number of proteins per cluster. it generally yields a moderate sensitivity, a low ppv. it is characterized by very weak cluster-wise separation , contrasting with a very high complex-wise separation . the resulting clustering-wise separation values  are lower than for the other algorithms. despite its relatively weak general performance, mcode interestingly shows the best performances for the negative control . this reflects the fact that this algorithm has the capability to discard nodes from the clustering result . apparently, this property enables the program to discard most nodes when a random graph is submitted, but this seems to be at the expense of sensitivity with real interaction graphs.

spc is characterized by a high sensitivity and a low ppv. yet the high sensitivity is an artifact due to the presence of one mega-cluster, generally accompanied by a multitude of mini-clusters. the asymmetry between cluster sizes is revealed by the differences between the mean and median numbers of proteins per cluster. for gavin , for example, spc yields  <dig> clusters with a mean size of  <dig>  but with a median of only  <dig> proteins per cluster. the mega-cluster includes no less than  <dig> proteins and thus comprises most complexes, raising the sensitivity to sn =  <dig> %. the artificial aspect is indicated by the fact that the permuted clusters also reach a very high score sn =  <dig> %. as discussed above, this bias is avoided by the separation statistics, which yield relatively low values for spc. similar figures are obtained with the other data sets.

for all the data sets, rnsc yields a large number of mini-clusters , plus a few clusters of reasonable size . it shows a relatively high cluster-wise separation value  but a lower complex-wise separation value , resulting in a reasonable tradeoff in terms of clustering-wise separation . the contrast between real and permuted clusters is low, however, even for the mass-spectrometry data with which other algorithms reach a good contrast.

finally, mcl clearly outperforms the other algorithms in terms of general performance  and also as regards the contrast between real and permuted clusters . this general performance results from a good balance between cluster-wise  and clustering-wise  separation.

CONCLUSIONS
we have evaluated the capability of four graph-based clustering algorithms to extract protein complexes from networks of protein-protein interactions. this evaluation has led us to elaborate a testing procedure for the selection of optimal parameters and the analysis of robustness to noise. we have defined new matching statistics called separation to circumvent some pitfalls of classical estimators . the methodology proposed here could be used as well to assess the capabilities of other clustering algorithms with other data sets.

to study the ability of the tested algorithms to extract protein complexes from an interaction network, we built a test graph from the complexes annotated in the mips database.

in a first step we assessed the impact of the parameters of each algorithm, and determined the optimal values for extracting complexes from an interaction network. this analysis shows that under most conditions, rnsc and mcl outperform mcode and spc. rnsc is remarkably robust to variations in the choice of parameters, whereas the other algorithms require appropriate tuning in order to yield relevant results. secondly we assessed the robustness of these programs to noise and to missing information in the data, by randomly adding and removing edges from the test graph. this analysis clearly revealed differences between the algorithms, highlighting the robustness of mcl, and to a lesser extent rnsc, to graph alterations.

we then applied the same four algorithms to interaction networks obtained from six high-throughput studies. this analysis revealed that whatever the algorithm used, some data sets provide insufficient information for extracting the correct protein complexes. an analysis of the more informative data sets confirmed the general superiority of mcl over the three other algorithms tested here.

an important limitation of the present evaluation is that it was performed by naive users. any algorithm is likely to work better in the hands of its own developer than in those of external users. as we did not participate in the development of any of the tested algorithms, our evaluation may underestimate the capabilities of some of the algorithms tested here. an advantage of such an external evaluation, however, is that the evaluators are not biased by better knowledge of one particular algorithm. consequently, our evaluation might be biased in favour of algorithms which are more user-friendly, or easier to configure. it thus reflects a compromise between algorithm user-friendliness and efficiency.

another limitation is that all of our analyses were performed on unweighted graphs, because our reference graph  does not contain any information that would enable us to assign reliability values  to the edges. it should be mentioned that mcl and spc can deal with weighted graphs and are likely to give better performances if the weights reflect the reliability of the links between proteins  <cit> .

