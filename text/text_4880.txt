BACKGROUND
functional elements in a genome accumulate inter-specific substitutions more slowly than neutral dna throughout evolution  <cit> . therefore, comparing orthologous genomic sequences from related species is useful for the identification of elements that play important roles in the biology of an organism  <cit> . while the statistical and computational methods for extracting comparative information are variable, the types of data involved are generally quite similar. first, a multiple sequence alignment is necessary. second, a vector of quantitative scores is produced that describes the similarity of the nucleotides observed in small windows, or individual columns, of the alignment; percent identity is the metric used by the popular program vista  <cit> , while a variety of other scoring methods also exist  <cit> . third, annotations are generated that highlight regions of the alignment that are under constraint or meet some other quantitative threshold. fourth, annotations of features like transcripts, promoters, coding exons, and repeats provide functional context. finally, the phylogenetic tree that relates the aligned sequences is important for both performing comparative analyses and for interpreting their results.

simultaneous visualization of complex data such as these is of utmost importance both for experimentalists and for computational biologists. several options currently exist for such visualization, but there are a variety of characteristics that distinguish the abc from them. vista, for example, generates a static image that is not interactive  <cit> . other popular browsers such as phylo-vista  <cit>  and pipmaker  <cit>  require the use of a particular alignment program and scoring scheme. also, the abc is not suited for genome-wide visualization. other tools exist for this and are quite useful for the browsing of very large genomic intervals and major evolutionary events such as genomic rearrangements  <cit> . however, these programs are generally part of larger, more complex interfaces that are not necessarily ideal for targeted analysis of an individual alignment or genomic locus. finally, we note that the abc allows many annotation types and colors, is not web-based and can be used on a local machine as intensively as necessary, and the source code is open and freely available allowing users to modify and add features if desired.

implementation
the abc requires java  <dig>  or later and has been successfully tested on windows, linux, and os x. there is no specific upper limit in the size of potential data sets, but system memory usage can be high on large alignments. the abc can efficiently handle a  <dig> mb alignment of  <dig> sequences on a machine with a  <dig> ghz processor and  <dig> gb of ram. details about file formats and instructions for use are available in the documentation that is available along with the source code . the file formats used by the abc are quite similar, with only minor modifications, to other standard formats, such as fasta-formatted sequence files and standard parenthesis notation for phylogenetic tree descriptions. a sample data set is available, and is the source of the screenshot depicted in figure  <dig>  the sequence data are derived from a previously published analysis  <cit> ; it includes ~ <dig> kb of sequence from  <dig> mammals, centered around the st <dig> gene in the human genome, near the cftr gene. repeats were identified in the human sequence using repeatmasker  <cit>  and genes identified using refseq annotations from the ucsc genome browser  <cit> . the alignment was generated using mlagan  <cit> , and has been compressed so that the human sequence is ungapped; annotation of human sequence features is thus identical to the alignment annotations shown in figure  <dig>  a description of the method used to score the alignment columns and identify constrained elements, along with perl scripts that facilitate this method, including export of results in abc-ready formats, will be described elsewhere . please note that the abc will not translate coordinates from alignment to sequence coordinates ; the annotations that the user supplies must be appropriate to the alignment being analyzed.

RESULTS
by default, the abc displays graphical summaries of the quantitative information associated with the alignment. scores are summarized regionally in consecutive non-overlapping windows. the size of these windows depends on the resolution, defined as the number of alignment columns summarized per pixel. the abc has three distinct display modes, chosen automatically depending on the density of the information. at very low resolution, a histogram is displayed that plots the number of data points in each window that are at or below a specified value; note that regions containing many low scores will stand out as peaks in the histogram, as demonstrated by the clear association of peaks and the location of exons . at intermediate resolutions, a 'wiggly plot' is displayed, in which the average score for each regional window is plotted; in this case, regions containing many low scores will appear as valleys in the plot . finally, at very high resolution, the user may view the sequence data directly, along with the sequence names and a tree relating the sequences .

a mobile and scalable zoom window allows for exploration of the summary views . the user may drag and resize this rectangle, and when a desired region is selected a more detailed view can be obtained. this region will be expanded immediately below the parent display, with the resolution, score plot, and annotation adjusted accordingly . at all resolutions, annotation tracks are displayed immediately above the score/sequence display . an arbitrary number of tracks may be displayed, but the bottom two tracks are reserved for displaying information about transcripts with exons and introns. colors for features can be specified individually using standard rgb notation. other key features of the abc include:

• mouse-over highlighting to reveal annotations, scores, coordinates, etc

• exporting of sequence, score, and annotation data

• searching sequence data for particular nucleotide strings

• goto feature to quickly bring up a desired region

the abc is flexible in that is has the ability to visualize diverse quantitative information and it has the capacity to display an arbitrary number of annotation types. it does not have a built-in scoring function; all data needs to be generated and formatted prior to being displayed in the abc. while this may seem to be a drawback, it is in fact the intended function for an interface that has no preconceptions about the methodology that generated the data. finally, the abc is interactive, allowing the user to zoom in quickly from summary views of the comparative data to individual alignment columns. zoom levels remain in the display, allowing the user to keep a birds-eye view of a large genomic region while focusing at much higher resolution on a small section within it.

CONCLUSIONS
the abc is stand-alone alignment browsing software that is relatively easy to use and customize. while it was not designed as a genome-wide browser, it is well-suited for tasks associated with comparative sequence analysis: exploration of alignments of individual genomic loci; analyzing the relationship between known biological features and quantitative comparative data; visualizing results for researchers who develop and test methods for comparative sequence analysis; isolating sequence elements in a genomic locus for downstream applications like motif-discovery or primer design; generating graphics that characterize a multiple sequence alignment or region of an alignment; and potentially more applications that we have not yet considered. in our own research, for example, we have used it to display snps between different mouse strains in the context of a comparative alignment . this flexibility should be beneficial to researchers whose primary interest is comparative sequence analysis, but should also be valuable to those who use comparative analyses in support of other types of projects, such as experimental characterization of constrained elements. we also note that this flexibility distinguishes the abc from other browsers that require built-in or specific types of score data and/or the use of a particular alignment program. the software is written in java for cross-platform support, and the source code is freely available under the general public license .

availability and requirements
project name: application for browsing constraints 

project home page: 

operating system: platform independent

programming language: java

other requirements: java  <dig>  or later

license: gpl

abbrevations
abc: application for browsing constraints

gui: graphical user interface

gpl: general public license

snp: single nucleotide polymorphism

ucsc: university of california, santa cruz

rgb: red-green-blue

authors' contributions
gmc and as conceived of the project, organized the feel and design of the browser, generated the underlying data, and wrote the manuscript. sags wrote the java code and provided comments on the manuscript. all authors read and approved the final manuscript.

acknowledgments
gmc is a howard hughes medical institute pre-doctoral fellow. as acknowledges support from nih/nhgri. we thank two anonymous reviewers for their comments.

figures and tables
