BACKGROUND
biological databases use ontologies to connect common elements between disparate data sets to facilitate searching and analysis. these ontologies are structured hierarchies of logically connected classes intended to represent biological entities and their relationships to each other. these ontologies are often conceived of as graph-theoretic structures, with classes as nodes and relationships as edges. biological ontologies must evolve to capture the ever-increasing complexity of data being generated by the life sciences community. the widely used gene ontology , for instance, has grown from about  <dig>  classes at its inception to its current form that encompasses nearly  <dig>  classes and over  <dig>  relationships  <cit> . maintenance and development of such a large ontology is burdensome, a problem that is compounded by the creation of other ontologies with overlapping domains. in response to these concerns, the open biological and biomedical ontologies  foundry was created to provide a set of principles to help standardize and coordinate a collection of ontologies to cover the biomedical domain  <cit> . one of these principles is that an obo foundry candidate ontology must have clearly specified and delineated content that is orthogonal to other obo ontologies. within the obo foundry, the cell ontology  is the designated reference ontology for the representation of in vivo cell types from all biology  <cit> .

first developed in  <dig>  <cit> , the cl is composed of about  <dig> classes connected via is_a and develops_from relationships. the cl classifies cell types according to multiple criteria, including function, histology, lineage and taxonomy. these different modes of classification are vital for the users of the cl; however, the initial classification was done manually and not in accordance with commonly accepted ontology engineering principles such as normalization and modularity  <cit> . the resulting ontology contained numerous mistakes and omissions, and proved difficult to maintain and extend.

we have revised and extended the hematopoietic cell branch of the cl following a normalized approach in which computable definitions  for classes are constructed in a modular fashion, using relationships to classes from other ontologies. these computable definitions can be expressed in ontology formats and languages such as obo or owl  <cit> , and are treated as equivalence relationships between the defined class and some conjunction of classes. for example, the class "nucleate erythrocyte" can be defined as equivalent to the class of things that are both erythrocytes and that have a nucleus as a part. in owl this can be written as:

"nucleate erythrocyte" equivalentto erythrocyte and has_part some nucleus where "erythrocyte" is declared in the cell ontology and nucleus is declared in the go cell component ontology.

these computable definitions not only provide an integration point between ontologies, but they also allow tools called reasoners to automatically construct the ontology hierarchy . our computable definitions all follow a genus-differentia structure, in which a class is defined by refining an existing more general class  and one or more differentiating characteristics   <cit> . by adding disjointness constraints between classes in the ontology, reasoners can also detect errors in the graph structure. two classes are disjoint if they cannot share any members. if during ontology construction a disjointness constraint is violated, the reasoner will flag the error. we also supply textual definitions that mirror the computable definitions, but are intended for human readers.

other complex biomedical ontologies have employed computable definitions to support reasoning and help maintain the logical soundness of their structure including the systematized nomenclature of medicine-clinical terms , the gene ontology next generation project , and the ontology for biomedical investigations   <cit> . the ontological structure of the go has been improved in a similar manner by parsing class names into computable definitions; this approach originally added  <dig> missing relationships and is now routinely used in ongoing development  <cit> . masci et al confirmed this process is well suited for cell types by using computable definitions in the design of a dendritic cell ontology consisting of  <dig> classes  <cit> . they defined dendritic cell types using cell surface expression of proteins as a major axis of differentia. thus, a "cd8_alpha-negative, cd11b-negative dendritic cell" is a "conventional dendritic cell"  that "lacks_plasma_membrane_part cd8_alpha and cd11b" . masci et al found significant benefits in the amount and accuracy of information contained in the ontology compared to the information about dendritic cells available in the original implementation of the cl.

by integrating masci et al.'s approach with our recent reorganization of the hematopoietic branch of the cl  <cit> , we have created a new sub-ontology called "hemo_cl". this ontology consists of over  <dig> hematopoietic cell classes  that have computable definitions generated using classes exclusively from ontologies in the obo library. we demonstrate that computable definitions allow the use of automated reasoners to find mistakes in the ontology and to infer new relationships between classes. this approach also enriches other obo ontologies by illuminating the need for new classes, and by highlighting ambiguous definitions of cell types in the scientific literature. finally, an unexpected association between two classes highlights the potential use of computable definitions to generate new hypotheses regarding the nature of cell types.

RESULTS
linking to obo library ontologies by computable definitions
our primary goal was to provide both computable definitions and human-oriented textual definitions for classes representing a wide range of hematopoietic cell types. in order to carry out this work independently of day-to-day editing of the cell ontology, we created a sub-ontology of hematopoietic cell types called hemo_cl by taking the is_a descendants of the class "hematopoietic cell" and creating a new ontology. in this ontology, we manually specified computable definitions for  <dig> cell type classes . we assigned computable definitions using obo-edit  <cit> , which allows the construction of simple genus-differentia definitions in the "cross-product" tab. by having computable definitions for the vast majority of classes, new relationships can be inferred between classes by the use of automated reasoners. the relations and obo foundry candidate ontologies used in these computable definitions are indicated in figure 1a.

we make frequent use of the has_plasma_membrane_part relation as defined by masci et al, in conjunction with classes from the protein ontology  <cit> . for example, a "cd4-positive, alpha-beta t cell " is defined as " a mature alpha-beta t cell that has_plasma_membrane_part cd <dig> .  <dig> cell type classes defined according to this template have been generated, reflecting the common use of flow cytometry to distinguish hematopoietic cells based on cell surface markers. in some cases, cell types are distinguished not by the expression of single protein on the surface but rather by a protein complex, in which case we use classes from the go-cellular component ontology . for example, a "gamma-delta t cell " is defined as "a t cell that has_plasma_membrane_part gamma-delta t cell receptor complex ". certain cell types are defined by the absence of a cell surface protein, or by difference in the quantity of cell surface protein relative to other cell types  <cit> . in figure 1b, the cd56-bright natural killer cell is partially defined as "mature natural killer" that lacks expression of one cell surface marker while expressing two other cell surface markers. one of these cell surface markers is expressed at higher levels than the geometric mean expression found for other leukocyte cell types and thus has a computable definition that uses the "has_high_plasma_membrane_amount" "has_low_plasma_membrane_amount" relationships as defined in masci  <cit> . this example also illustrates how using computable definitions with curated ontologies eliminates the confusion that may result from the use of a synonym  in the common name of a cell type class.

some of our definitions also made use of negative criteria - for example, an alveolar macrophage is partially defined as a tissue-resident macrophage that lacks chemokine receptor cx3cr <dig> on its plasma membrane. in owl this can be represented using a class-complement construct - however, there is no equivalent construct in the more limited obo format or the obo-edit tool. we circumvented this limitation by using owl macros to expand lacks_part and lacks_plasma_membrane_part relationships to the semantically correct owl expression   <cit> . in this way we can use owl reasoners such as fact++ in combination with the obo-edit environment to detect a wider range of errors. for example, in an earlier version of the ontology several myelocyte classes were described as "lacks_part tertiary granule ". three levels up the is_a hierarchy, the ancestor class "granulocyte" had ten computable definitions including "has_part tertiary granule". macro expansion found this and other violations of logic that are difficult to find manually because of the large number of computable definitions involved in ancestor terms.

several of the obo relationships used in hemo-cl were translated into an owl format. the left hand column contains the obo-formatted relationships, the middle column contains relationships converted to a simple owl format, and the right hand column contains expanded owl-formatted relationships that employ negation and nested expressions. details are in the methods.

other obo ontologies used in computable definitions are the go-biological processes   <cit> , uberon  <cit> , and pato  <cit> . the majority of computable definitions that contain go-bp classes have the structure "d = capable_of a go-bp". in the example presented in figure 1b, the natural killer cell type is partially defined from its parent cell type by being capable of interferon gamma production. here, the capable _of relationship states that instances of this cell type have the potential to produce interferon gamma given the right biological context, but it does not necessitate that all instances at all times are producing interferon gamma. in the cases of those few cell types that are characterized by having all instances at all times actively engaged in a biological process, the participates_in relationship is used. pro-b cells, for example, are described as being in the "early stages of recombination of b cell receptor genes", so a computable definition using "participates_in immunoglobulin vj recombination " is appropriate. other cell types are characterized as having executed a process that changed their cell type. in these cases, the has_completed relationship is used as in a "mature alpha-beta t cell" is an "alpha-beta t cell that has_completed t cell selection ". the part_of relationship is used with the species-neutral uberon anatomy ontology when anatomical location is critical to defining a cell  <cit> . for example, a "kupffer cell" is "a tissue-resident macrophage that is part_of hepatic sinusoid ".

clinical laboratories routinely identify granulocyte cell types both by flow cytometry and by staining characteristics. as we wanted to maximize the utility of the ontology, we decided to include both axes of differentia in our computable definitions. in the cases of granulocytes where cell types are differentiated based on nucleus or cytoplasm morphology, computable definitions are first generated between go-cc and pato  <cit>  classes to create new cellular component classes. for example, "reniform nucleus" is defined as "nucleus  that has_quality reniform ". then basophilic metamyelocyte is defined as an "immature basophil that has_part reniform nucleus". the classes generated in this manner were given a separate namespace  and the prefix  to distinguish them from the cl and are stored as part of the cl file. these classes may be incorporated into the go or a phenotype ontology at a future date.

addition of species-specific cell types
computable definitions for hematopoietic cell types highlighted the need for new classes to reflect species-specific differences. this was true for hematopoietic stem cell types  where there is little overlap of the cell surface markers between species. for example, the only similarity in cell surface markers between mouse and human hsc is that neither express cell surface proteins associated with fully differentiated immune cells , a characteristic researchers call lineage-negative . human hsc express cd <dig> and lack expression of cd <dig> on their cell surface whereas mouse hsc express other proteins, kit and spa- <dig>  on their cell surface. to capture this in hemo_cl, the species-neutral cell type "hematopoietic stem cell" is given computable definitions that define the lin- characteristic. depending on the research group and organism being studied, the number of lineage markers used differed from  <dig> to  <dig>  in this case we chose a list of  <dig> markers that are used in both mouse and human stem cells to establish the lin- phenotype . from the species neutral hsc class, two is_a child classes are created for the hsc found in mouse and human. these classes are named for their distinctive cell markers as opposed to species names as it is probable that the human cell markers are the same for many primate species, as are mouse markers for rodents. computable definitions to the specific markers are then made using the appropriate pro classes and relationships. the transitive nature of the is_a relation means that properties used to define parent classes disseminate down through the child classes. as most of these computable definitions capture the expression of cell surface markers, this ontology should facilitate identification of these cell types by flow cytometry.

new cell types have been added to represent hematopoietic progenitor cell types that are currently an intense focus of research . for hemo_cl, progenitor cell classes are organized under multipotent progenitor, oligopotent progenitor, and lineage restricted progenitor cell types in a commonly used schema  <cit> . multipotent progenitors develop from stem cells and have the ability to develop into any hematopoietic cell type but have limited self-renewal capability. oligopotent progenitors develop from multipotent progenitors, are unable to self renew, and are classified by which hematopoietic cell types they can differentiate into. as with stem cells, there are species-specific differences in the surface markers that necessitate the use of more granular cell type classes. these species-specific cell types are placed under species neutral cell types but are connected to each other through develops_from relationships .

ontology construction aided by computable definitions
using the approach described here, classes are defined by refining a single parent class . we then use automated reasoners to build the full is_a polyhierarchy. this means that the asserted hierarchy follows the single inheritance principle, but the inferred hierarchy has multiple inheritance reflecting all the biological relationships between cell types. in figure 3a, the cell class "helper t cell " has no is_a children in the asserted hierarchy. the computable definition for helper t cell is an "effector t cell that is capable_of cytokine production ". when the ontology is reasoned over, four cell types are inferred to be is_a children to "helper t cell" because these cell types have computable definitions that meet the criteria of both effector t cell  and helper t cell . the inferred links involving the gamma-delta t cell types were made because their computable definitions describe synthesis of specific cytokines such as "capable_of interleukin  <dig> production ". because these go classes are is_a children to the go class "cytokine production", the reasoner uses the logic of the go to infer new relationships in the cl.

the use of reasoners aided the analysis and editing of the hemo_cl ontology. the transitive nature of the develops_from relationship allowed the reasoner to infer develops_from relationships between classes that are separated by multiple levels in the asserted is_a hierarchy . mature basophils and eosinophils develop from a granulocyte monocyte progenitor cell type through seven distinct cell types that is convoluted to trace back in the asserted ontology . an automated reasoner infers the develops_from relationship over the hidden cell-classes displaying the association in a more succinct and useful manner . this ability is important in editing the ontology as it grows more complex. we also used automated reasoners to check for other errors in the ontology structure such as making two assertions between the same node pair using different relations. while not always logically inconsistent, this usually means some mistake has been made during construction of the ontology.

errors that contradict biological knowledge were checked by using disjointness constraints. a reasoner will determine that a class is unsatisfiable if it is the is_a descendant of two disjoint classes. an example drawn from an earlier version of the ontology is shown in figure 5a. the reasoner inferred that "gamma delta t cell" is_a type of "alpha beta t cell" based on their computable definition. however, these two classes are declared mutually disjoint and this combination of conditions gives rise to an inconsistency. this inconsistency resulted from the use of a too general differentia in the computable definition of alpha-beta t cell, "alpha beta t cell is_a t cell that has_plasma_membrane_part t lymphocyte receptor complex ". because the go class "gamma-delta t cell receptor complex" is_a child to "t cell receptor complex" in the go ontology, the reasoner inferred a gamma-delta t cell is a type of alpha beta t cell. changing the differentia of the definition to "has_plasma_membrane_part alpha-beta t lymphocyte receptor complex " causes the reasoner to infer the two classes as separate and not violate the disjointness constraint . in total,  <dig> disjoint_from constraints have been added to the ontology to ensure the computable cohesiveness of the structure. this approach also takes advantage of using the computable structure of a well-developed ontology  in the development of a less mature ontology.

commonality between classes discovered by automated reasoners
computable definitions can reveal ambiguities in how a cell type is defined by a curator. one example is the cell types "natural t regulatory cell"  and "induced regulatory cell" . because the cell types have the same is_a parent and share two cell surface markers, the reasoner inferred the former to be a subtype of the latter in an earlier version of the ontology, violating a disjointness constraint existing between the two classes . further investigation revealed that the only clear difference between the two cell types is that ntregs develop directly from double-positive thymocytes while itregs develop from activated cd <dig> t cells  <cit> . because activated cd <dig> t cells indirectly develop from double-positive thymocytes , the reasoner infers both regulatory t cell types are in the same developmental pathway and declares the develops_from relationship between the ntreg class and the dp thymocyte class to be redundant . to distinguish regulatory t cells based on the cell type they directly originate from, the develops_from relationship is removed from the asserted hierarchy and is instead used in the computable definitions. by declaring "induced regulatory t cell is_a regulatory t cell type that develops_from activated cd <dig> t cell", the reasoner logically infers that the two regulatory t cell types are separate sub-types .

some ambiguities resulted from how a cell type is defined in the scientific literature. the automated reasoning for the "mature nk t cell" provided an interesting example. reasoning over the ontology failed to infer an is_a relationship between "nk t cell" and the "natural killer cell" despite "nk t cell" having the synonym "natural killer t cell" . investigation of the literature revealed that the name "natural killer t cell" is controversial; the origin of the name "nk t" cell refers to cell surface expression of the nk <dig>  protein and was not intended to imply a direct link to natural killer cells  <cit> . however some researchers feel there is enough functional overlap between "nk-" and "nk t-" cell types to justify the "natural killer t cell" moniker  <cit> . in hemo_cl, the synonym is left in place as it reflects common usage, but nk t cell types and natural killer cell types are kept in separate branches of the ontology as inferred by the reasoner.

one relationship the reasoner does infer for mature "nk t cell" is that it is a sub-type of "mucosal associated invariant t cells"  . this result comes from both classes being alpha-beta t cell types that are capable_of interacting with mhc-ib protein complexes through invariant t cell receptors. investigating whether these two cell types should be grouped together, we hypothesized that other commonalities might exist between the two cell types. upon review of the literature, we discovered some researchers have renamed the mait cells as "mucosal-nkt" cells based on the expression of nk <dig>  by mait cells, in addition to their association with mhc-ib family members  <cit> . recently, two different research groups have demonstrated across species that mait cells are quickly activated and respond to bacterial antigens in a manner similar to nk t cells  <cit> . following from these findings, we created an "innate effector t cell" class defined as "effector t cell capable_of innate immune response " . the computable definitions for nk t cells and mait were refined to reflect their capability of participating in an innate immune response. when the ontology is reasoned over, nk t cells and mait t cells are grouped under this term . this serves as an example of how a well-structured ontology that has computable definitions and is updated to represent the most current research can be used to generate hypotheses.

discussion
this work examines the advantages of using computable definitions to define cell type classes. we demonstrate that the use of automated reasoners coupled with computable definitions assist curators by automatically inferring the ontology hierarchy and detecting inconsistent statements. computable definitions also highlight areas that do not represent the current state of knowledge, leading in this case to the addition of  <dig> new cell classes. describing hematopoietic cell types with computable definitions using multiple ontologies strengthens the central role that cl has among the other obo ontologies. biological processes, protein expression, anatomical location, and phenotypic qualities are all integrated with the cl through computable definitions. this approach enriches other obo ontologies by suggesting new classes for other ontologies when a sufficiently granular class needed for a computable definition is lacking. creation of more granular cl classes also provides points of reference for generating more specificity in other obo foundry ontologies. as part of the generation of computable definitions, class requests were made of several of the obo ontologies including the go, pro, and pato. such interactions increase the interoperability of the obo foundry ontologies.

computable definitions for hematopoietic cell types have importance beyond ontology maintenance and integration for the wider scientific community. sophisticated queries that incorporate cell types, protein expression, anatomical location, and biological processes are now possible. from hemo_cl a user can inquire, for example, which hematopoietic cell types express a foxp <dig> protein family member and are capable of regulating the immune system. another type of query that hemo_cl is particularly suited for is flow cytometry as cell markers is one of the major axes of differentia used to distinguish cells. we are currently setting up several collaborations to develop this use of the ontology further.

one potential benefit of logically defining cell types is the unexpected association of cell types generally not considered to be in the same grouping. we noted, in this regard, that mature nk t cells were inferred by the reasoner to be associated with mucosal invariant t cells, a view held by some  <cit>  although not part of our initial representation. from this inference, we hypothesize that mait and nk t cells would have similarities in biological function. similar hypotheses about the two cell types were developed by experts in the field, recently tested, and found to be true  <cit> . we believe hypothesis-generation represents a future use of well-structured biomedical ontologies that have computable definitions.

our next focus for the cl is to examine and extend the representation of neuronal cell types including adding computable definitions. while the nervous system and the hematopoietic system are generally thought of as unrelated or even disjoint from each other   <cit> , there are intriguing commonalities among their cell types. the cell-to-cell contact that occurs between lymphocytes and antigen presenting cells has cellular structures similar to those in neuronal synapses   <cit>  and there is also expression of numerous immune proteins by neurons including mhc-i protein complexes that are important in neuronal plasticity  <cit> . by having computable definitions for these two branches, associations between cell types based upon biological function or protein expression may generate new hypotheses for testing neural-immune interactions.

CONCLUSIONS
we generated new hematopoietic cell types to represent entities described in current research and added computable definitions for all hematopoietic cell types using classes from other obo library ontologies. these computable definitions allow the use of automated reasoners to infer relationships between the classes based on the inherent logic. unexpected inferred relationships are found upon investigation to result from mistaken or incomplete computable definitions of classes, and in at least one case reflect the ambiguous use of the term in the biomedical literature. the inferred relationships also permit placement of cell classes into functional groups without the problems associated with multiple inheritance in an asserted hierarchy. requesting new classes needed for a computable definition also enriched other ontologies. finally, we believe inferred relationships between branches of the cl will lead to unexpected associations between disparate areas of biology and help in the generation of new hypotheses.

