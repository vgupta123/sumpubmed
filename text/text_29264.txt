BACKGROUND
taxonomic, systematic, and biodiversity studies  are data-intense sciences that draw information from many disciplines in order to build a coherent picture of the extent and trajectory of life on earth  <cit> . these data are essential to our discovery, understanding, and responsible use of the natural world  <cit> . natural historians have traditionally relied on manual systems and techniques to gather, organise, and publish this information. this is collectively enshrined in scientific papers that form an archive spanning more than  <dig> years of published research. but as ever more synthetic and integrated accounts of the natural world are required to understand and mitigate threats to the environment, the failings of traditional publication methods for disseminating and using natural history research have become ever more apparent.

traditional papers struggle to accommodate the high volume of data supporting accounts of natural history. in recent years this has been exacerbated by the rapid growth of semi-automated data gathering techniques producing large-scale datasets such as those incorporating genomic, phylogenetic, and image based components. the size and diversity of these datasets mean that they are at best marginalised to an electronic ghetto on publishers' websites. but all too often natural history data are simply never published  <cit> . the low impact of most natural history research, coupled with the high transaction costs associated with publication and access, mean that much  natural history data only exists tacitly and informally within expert networks of specialists . such data are imperilled by a decline in the number of professional specialists engaged in these networks, such as that reported amongst biological taxonomists. indeed, this had lead some to question the long-term viability of natural history as a professional scientific discipline  <cit> . arguably natural history's salvation lies in better use  of the underlying data.

meaningful forecasting and sustainable use of biotic resources requires large volumes of primary biodiversity data. however, this leaves informaticians with the challenge of integrating data from numerous, disparate natural history data providers, each with their own specific user communities, and diverse data types and sources, including taxonomic names and concepts, specimens in museum collections, scientific publications, genomic and phenotypic data, and images  <cit> . one approach is to data-mine existing publications in an attempt to reverse engineer scholarly publications into a database  <cit> . this approach is arguably the only option for legacy natural history data. but for new information, or that which has never been formally published, such reverse engineering should not be required so long as a technical, social and policy framework for data publication can be found. this paper is about the creation of a data-publishing framework for natural history.

data publication is a new sort of scholarship that involves construction of large-scale datasets whose governance, organisation and use can be implemented using the web as a platform for generating, repurposing, and using data  <cit> . these systems offer the possibility of radical new ways of conducting scholarship and challenge some established ideas of how particular disciplines operate. to facilitate reuse and repurposing of data, these systems embrace 'open science' - the proposition of a model of communication inspired by the free/open source software and creative commons movement  <cit> . a central theme of open science is to make clear accounts of the methodology, along with data and results extracted therein, freely available via the web. this permits a massively distributed collaboration.

design concerns relevant to data publication frameworks include the successful management of large scale distributed research programmes, how to support networks of independent researchers, the management of individual research careers, the development of new inter-disciplinary collaborations, and engagement with non-scholarly communities as both producers and consumers of research. these concerns are highly relevant to the challenges facing natural history scientists  <cit> . from a technical perspective these systems involve the development of tools for sharing natural history data, building and maintaining collaborations both formally and informally, and managing workflow and outputs.

a defining feature of data publication frameworks is that they primarily rely on social information flows, motivations and relations to organise the group. individuals self-identify, mostly, for tasks, and through a variety of peer-review mechanisms contributions are recognised by the group and incorporated into what emerges as the collaborative output. a feature critical to their success is the ability of the framework to be broken down into discrete modules, capable of independent completion in relatively fine-grained increments. because of this, people can contribute a little or a lot depending upon their motivations, such that some combination of 'true believers', occasional contributors, and people paid to participate can sustain a project.

in this paper we describe the system architecture and template design of "scratchpads", a data-publishing framework for groups of people to create their own social networks supporting natural history science. this infrastructure is a combination of databases, network protocols and computational services that brings people, information and computational tools together to perform and publish natural history. our goal was to build a system that could motivate individual researchers in the generation, management and dissemination of their own data for their own needs, while empowering a wider constituent of potential users who are free to repurpose this information for other uses.

implementation
design considerations and related work
standard tools can be designed for the codification and dissemination of data and knowledge for communities with standard practices. but in cutting-edge disciplines, those spanning multiple specialities, or where standards are nascent and cannot be well defined, developing a common approach can be extremely difficult. natural history science has all these challenging criteria. natural history scientists work in fragmented, highly distributed and parochial communities, each with domain specific requirements and methodologies  <cit> . their output is heterogeneous, high volume and typically of low impact, but with a citation half-life that may run into centuries. this output  broadly conform to a power law  distribution where the least regularly accessed content accounts for more than half of the total and is proportionally more important than the smaller fraction of more regularly accessed  content. consequently a high level and flexible approach to developing the software and workflow is needed, covering broad subjects and themes in order to encourage adoption by a range of natural history scientists.

fundamental to the design was the need to build a truly scalable and flexible data publishing framework accessible through a web browser that supports 1) large numbers of users as passive readers and active contributors; 2) editorial hierarchies serving individual and community needs; 3) the epistemological richness and diversity of all contributors; 4) flexible data models that can be modified or added by contributors; 5) automated integration of third party content; 6) automated semantic enrichment of contributed and third party content; 7) content workflows and curation tools; 8) content archival and citation; 9) content licensing and a conditions of use framework; 10) web services; and 11) ease of use.

within the context of natural history science, some websites and services meet many of these needs across specific data types , or most of these data needs across narrow taxonomic domains . arguably, though, none of these systems scale to the breadth of all taxonomic diversity for all natural history data types. indeed most limit their scope in order to place some practical boundary on their development, and to simplify the process of establishing credibility within their chosen domain. further, these systems all struggle to accommodate conflicting or alternative hypotheses about data. natural history science is well known for its epistemological richness and diversity  <cit> . it is difficult, if not impossible, to find researchers completely agreeing with each other within and between domains . electronic systems that force contributors to adopt a single representation of a particular data set  risk disenfranchising potential contributors, often to the exclusion of their data and interpretations.

to address these design requirements and social challenges the scratchpads consist of a loosely coupled platform for publishing natural history research that enables contributors to build, share, and manage data with minimal barriers beyond our highly generic design constraints. we accommodate epistemological diversity and the problem of establishing trust within natural history domains by enabling contributors to create independent sites whose purpose, destiny and brand rest in the hands of the contributing community. these communities are often well established and have a strong sense of purpose. nevertheless, our software platform "scratchpads" needed to establish credibility and trust across natural history science domains. this was achieved by basing the project at the natural history museum , london, and managing the project through the european distributed institute of taxonomy . the nhm has a well-established brand as a world leader in natural history research, while edit is a network of  <dig> leading european, north american and russian institutions specialising in natural history. this structure was intended to minimise individual and institutional rivalries that might jeopardise the long-term sustainability of the project. thus supporting our goal of creating an open community resource for natural history.

the unusual nature of this project demands agile development methodologies to promote frequent inspection and adaptation of the software in response to user needs  <cit> . throughout this ongoing process we are mindful that our approach must be generic enough to scale to the widest constituent of possible users. short development cycles and informal project management, sometimes spanning hours to generate several iterations of a feature in reciprocal response to user feedback, makes traditional documentation and planning difficult. however, our experience suggests this leads to software that better meets user needs, and fosters a community of developers and users that arguably builds a path toward long-term sustainability.

architecture and workflow
rather than expand the taxonomic or content scope of an existing system supporting natural history science, we decided that a more generic solution would be required that could be tailored in a sustainable way toward the bespoke needs of natural history scientists. content management describes the set of processes and technologies that support the evolutionary life cycle of digital information. content management systems  can provide generic informatics solutions for web publication of content created by individuals acting alone, or within organisations and research communities of almost any size. these tools aid in managing the development of software, collaborations, documents and websites. they are highly extensible and can be developed to support other research-specific activities such as handling large distributed datasets, data visualisation and analytical tools  <cit> . the emphasis of cms tools on instant  publication and content maintenance, allows contributors to focus on content development, instead of administration.

our decision to adapt an existing cms for managing biodiversity data is a significant departure from the conventional approach employed within the biodiversity informatics community. traditionally this involves developing customised database models, usually after extensive mapping and observation of the target user community, followed by the development of a bespoke software application that formalizes workflows and processes. a current high profile example of this approach is the common data model   <cit> , which is in development by edit workpackage  <dig>  <cit> . this is intended to provide a generic data model and service framework for bespoke biodiversity applications that are collectively referred to as the "cyberplatform"  <cit> . another high profile example is cate   <cit> , which augments the cdm library and server with additional logic to present the data as web pages and in a workflow geared toward revisionary taxonomy. in our experience the challenge with these and similar bespoke biodiversity applications is threefold:

 <dig>  the data types, structures and workflows modelled within these systems typically do not capture the full gamut of data and practices engaged in by the wider user community. consequently, take up amongst the potential pool of candidate users may be low beyond those surveyed, because the transaction costs for users engaging with systems that do not meet the full spectrum of their needs is too high. for example, biodiversity informatics applications often assume data held by users is more structured, and therefore more readily modelled within a database, or structured differently than it typically is. the effort  required by users to sufficiently structure  their data is too high, relative to their perceived benefit from using the system.

 <dig>  the relationship between content  and context  is crucial to understanding how and why users engage with information technology systems. this textography  is crucial to scholarly discourse, but is challenging to accommodate in biodiversity informatics systems that usually disarticulate the process of capturing content  from content presentation .

 <dig>  the heterogeneity of biodiversity data, coupled with multiple small, niche user communities, often with distinct needs and different audiences, requires highly bespoke informatics solutions. these are expensive and challenging to sustain, and usually lack a clear business model beyond intermittent cycles of grant funding.

our reason for adopting a cms as a platform rather than building a bespoke application was to directly address these challenges. the 'content' in cms is typically loosely defined and can be accommodated in various ways, from highly unstructured 'pages' or nodes, through to highly structured normalized datasets. this provides the flexibility necessary to accommodate use cases that were not originally envisaged at the outset of the project. cms minimize the distinction between the organization of content and its final presentation. this helps the content provider visualise how content will be presented to their audience without having to second-guess how an informatician will re-present content on their behalf. finally, generic cms systems are used extensively in many scholarly and non-scholarly settings and support a range of generic functionality that is required by all web-based applications regardless of the size or purpose of the userbase. developer communities writing the underlying cms software are completely independent and several orders of magnitude larger than the niche informatics communities working to support taxonomy and systematics. this gives generic cms software much greater sustainability than bespoke biodiversity applications written by very small number of developers, which are supported by intermittent research grants. building on top of a cms removes the burden of having to develop generic functionality common to all applications  allowing developers to focus on specialised functionality that directly meets the needs of the target user community.

cms are usually built on top of content management frameworks  and open source programming languages. many cms tools exist  <cit>  but the top four based on a recent study  <cit>  include one written in python, plone  <cit> , founded on the zope cmf; and three written in php: wordpress  <cit> , a commonly used blogging platform; joomla  <cit> , widely recognised for its ease of use; and drupal  <cit> , commonly used in multi-user collaborative sites. for the scratchpad project we selected drupal because it offers a good balance between the sophistication and ease of use required for managing large and distributed user communities. crucially drupal met  <dig> of the  <dig> design criteria that were identified in the previous section. the variety of contributed drupal modules , size of the userbase , and ready supply of developers thanks to the popularity of php, were all contributing factors in our decision. in principle the scratchpad project could however, be replicated in any of the top four cms.

the scratchpad project was founded on drupal version  <dig> in march  <dig>  although an ongoing transition to drupal  <dig> means that as of june  <dig> sites are being upgraded. the scratchpad server's operating system is red hat enterprise linux  running apache  <dig>  with php  <dig> . <dig> and the database backend is mysql  <dig> . <dig>  the scratchpad project can, however, be run on any operating system, web server and database that supports php and drupal. we are running a single apache virtual host for all scratchpad instances with drupal handling domain names in a standard drupal multisite configuration. this means that all sites share a common codebase but have their own database and database user, controlling data access on a site-by-site basis. user uploads are also segregated to independent folders to improve site security and facilitate site-by-site mobility, archival and backup. drupal provides the foundations for basic web publication including the ability to register and maintain individual user accounts, administration menus, rss-feeds, customisable layout, flexible account privileges, logging, a blogging system, and an internet forum. the scratchpads build on this through a combination of  <dig> modules provided by the drupal community and  <dig> modules developed within the scratchpad project . the latter provide a suite of specifically adapted tools to support natural history scientists and their data.

new sites are initiated at the behest of a potential user, who registers interest and accepts responsibility for the new site, through a form on the scratchpad website . users supply their biographic details and information on their proposed use of the site, in addition to a google map api  key that activates the scratchpad geolocative features. upon submission of the completed form, the site approval and creation process is initiated. currently the scratchpad project accepts all sites within the domain of natural history, even if their proposed subject overlaps that of a current site. site creation is semi-automated and is controlled through a drupal installation profile that specifies standardised scratchpad settings, administrative users, modules, permissions, and establishes the site so that it is immediately accessible to the registrant. registrants receive e-mail notification of their new site and are assigned the role of site maintainer, granting them administrative permissions that include the ability to assign new users as additional maintainers, editors or contributors. these roles control user actions through a cascading hierarchy of permissions. contributors are restricted to authoring and editing their own content, editors can author and edit any content, while maintainers also have certain administrative privileges. scratchpad project administrators have full administrative control from an account hidden to other users. a click through agreement ensures that each user agrees to a set of terms and conditions that outline their rights and responsibilities through use of the site . these terms are ultimately arbitrated by the scratchpad administrators who reserve the right to review, refuse, monitor, edit or remove any content.

content is added to a scratchpad through a flexible workflow  that is optimised if one or more ontologies  are imported into the site first. these ontologies provide a structure around which content can automatically be tagged , and facilitate search and browse functionality. scratchpad users do not have to follow this workflow when publishing content, although the absence of matching terms  in an uploaded ontology will disable features that dynamically aggregate tagged content , making this information harder to navigate.

vocabularies
drupal supports the use of multiple restricted vocabularies as flat lists of terms, single hierarchies, or multiple hierarchies. we have adapted this system to support the import, export and management of biological classifications through a series of modules. they allow drupal to support very large hierarchies of a potentially unlimited number of terms; improve the term editing and management interface; and provide the means to store additional term metadata. by default all hierarchical classifications are stored as parent-child relations within the site database. however, performance issues make this very inefficient for classifications with large numbers of terms. in instances where classifications contain more than one thousand terms, the hierarchy is additionally stored using a nested set algorithm  <cit> . this is implemented in a module  that has been tested with classifications exceeding two million terms without encountering notable performance degradation.

drupal allows users to create multiple vocabularies that must be linked with appropriate content types before they can be used. this permits users to associate content with multiple, and potentially competing, classifications. terms can be added to a vocabulary within a scratchpad on a term-by-term basis through an editing interface, or en masse, either via a tab delimited text file that has been exported from a spreadsheet template , or through a web service provided by the encyclopedia of life  project  <cit> . the latter enables users to import all child terms within a hierarchy from one of a selection of published biological classifications. this service supplies terms and associated metadata  in an rdf representation of the taxonomic concept schema  <cit> .

hierarchy management and term  modification is supported for biological classification through an editor that enables intuitive  manipulation of terms and sections of hierarchies. this was developed in partnership with the encyclopedia of life project  <cit>  and allows users to build new classifications using sections of classifications that have been previously created . the tool also allows users to associate term names with their protologue, i.e. the bibliographic reference of the original taxon description.

content types
drupal stores content in nodes which are instances of content types, each of which may have bespoke workflows for data import, export, editing and visualization. certain generic content types  are defined within the core of drupal. more specialized content types are defined through modules that are tailored to the particular demands of different data. the scratchpads use a combination of contributed modules  and modules written by members of the scratchpad developers group. when a module developed within the scratchpad project is sufficiently robust and of generic use to other drupal users, it is released to the drupal community via the drupal website under an open source licence.

bibliography
a contributed module  that allows users to manage and display lists of scholarly publications. as part of the scratchpad project we use this as a stand alone content type in addition to integrating this into the workflow for managing bibliographic metadata associated with taxonomic names and specimens records. features of the bibliography module include the ability to import reference lists in bibtex, ris, marc, endnote tagged and xml formats, and export lists in bibtex, endnote tagged and xml formats. the module allows users to format references in multiple styles and supports in-line citation of references. this function is currently one of the most popular features within the scratchpads, supporting  <dig>  nodes across  <dig> sites. users can upload pdf files of articles to create discipline specific bibliographies relevant to natural history. current scratchpad bibliographies include examples on fossil insects  and fungus gnats .

blog entry
a blog entry is a single post to an online diary or journal. this is a core content type within drupal. users can create multiple blogs within a site that are linked to terms within a restricted vocabulary. a good example containing multi-authored blog entries can be found on the wallace fund website .

character project
this node type allows users to build and manage a matrix of controlled, text or numeric characters associated with selected taxa. this matrix has the appearance of a spreadsheet, and can be used to build morphological or molecular datasets for phylogenetic analysis, identification keys and printed character lists or descriptions. on initiating a character project, users select taxa from one of any vocabulary present within their site using a hierarchical select list. taxa may be hierarchically arranged within the matrix according to their classification, with an option for parent taxa to inherit the properties  of their children, or arranged as a simple flat list. new characters are added to the character project at the behest of the user, who can choose between three character types. these are controlled characters, which limit character state choices to a restricted list provided by the user, e.g. molecular dna bases; text characters which allow unrestricted textual input such as a verbose description of a particular morphological feature; and numeric characters, which allow whole integer or decimal input e.g. measurements. characters can be added to character groups and can be reordered in a drag and drop fashion to facilitate the rapid creation and collection of character data. users enter character states directly into the character grid, which are validated according to the type and controls specified when the character was created. character projects use the slickgrid jquery plugin  <cit>  that is incorporated into our character editor  module to provide the grid interface.

countries map
this node type is used for displaying maps of the world highlighting selected countries. it is intended for use in displaying the presence or absence of taxa from particular countries, when more precise geolocative data is unavailable. users select geographic regions from a list hierarchically organised around the tdwg geographic region ontology   <cit>  to produce distribution maps of taxa. this module uses polygons corresponding to country outlines generated though a service provided by edit  <cit> , which are overlayed onto a world base map presented in the mercator projection.

custom content types
users can customise content types to their bespoke needs using the contributed content construction kit  . the module is not a content type in itself, but allows users to create content types. cck provides an intuitive interface for users to augment predefined content types  or create new content types. users first define a set of fields that become part of a table within the scratchpad site database. data can then be selectively imported into the table from a tab-delimited spreadsheet. this is done with the aid of an intuitive interface that guides users through the process of matching column headers from the spreadsheet with fields in the content type. data can then be imported en masse, and visualised in user-defined presentations with the views and taxon page interface . to date scratchpad users have created custom content types for diverse data sets that could not have been anticipated by the scratchpad development team, or supported because of its niche relevance to a particular subject domain. in many cases predefined standards for these obscure natural history data types do not exist. examples include a checklist of cockroach cultures currently being held in captivity by members of the blattoidea culture group  and descriptions of mosquito morphology .

forum topic
a forum topic is the initial post to a new discussion thread within a forum and is a core content type within drupal. the default profile of each scratchpad includes a forum that users can customise. all users with login authentication can initiate and contribute to a forum. fora can be linked to an e-mail account into which user can receive posted messages. an example of an active forum within the scratchpads can be found on the araceae network scratchpad .

group
groups enable users to manage and control access to collections of content by adding content or other users to a group. this enables sub-communities to exist within a scratchpad site, allowing site members to self-organise around public or private topics of interest, such as the production of scientific content for a research project. a group is created by a single group owner that has special permissions, including the ability to delete the group. group subscribers communicate amongst themselves using the group home page as a focal point. users can establish private groups that will not be displayed in the groups list, and groups may be selective, requiring users to be approved by the group administrator before becoming a member. groups are defined through the organic groups contributed module .

image
the upload and display of images is defined through a contributed module  that we have incorporated into a workflow through a second module . this supports the mass upload and display of images. users can drag and drop collections of images in most formats including bmp, jpeg, tiff, and png files, on to an open source applet  <cit>  that will upload the pictures. image thumbnails are dynamically created on upload. users can select images on to which they can apply annotations en masse via the matrix editor . all annotations are optional, and by default users can specify a title and gallery name from where the images will be accessible. users can also apply keywords and details of preparation and imaging techniques. these are drawn from a restricted vocabulary defined within the scratchpad that can be augmented by the user. for images of biological specimens users can optionally apply specimen and location information as defined by the darwin core standard  <cit> . images can also be associated with publications through integration of this workflow with the bibliographic module. licences specifying how images can be used can be applied through the creative commons module . once uploaded, images and their annotations can be browsed through in an image gallery. this is a contributed module that allows users to group and organise collections of uploaded images. galleries can be hierarchically arranged and include a weighting feature to control their placement on a page. thumbnails of the first image within a gallery are dynamically created when an image is uploaded.

ispecies cache
this is an administrative content type that holds copies of third party content drawn from external services. it is used as part of the taxon page display where content is dynamically created around terms held in a site vocabulary  and is hidden to non-administrative users. many third party web services serving natural history data are fragile or slow to load. caching this content reduces load time for users. the module is named in homage to roderic d.m. page's ispecies website  <cit>  that generates "on the fly" pages of species information.

location 
a location record conforms to darwin core  <dig> . <dig> fields  <cit>  and can be used independently or in association with the specimen record content type. this is integrated within the workflow for annotating specimen records. examples of scratchpads that use this content type include sites on macrostomorph flatworms  and flies . the module allows users to specify a point location by clicking on a google map and dragging the location marker. the interface also supports the textual input of geolocative data matching the darwin core  <dig> . <dig> standard, including information on elevation and depth.

newsletter issue
this contributed module  publishes and sends newsletters to lists of subscribers. newsletter issues are essentially e-mail messages that are stored within the site and associated with different newsletters through a list held by the taxonomy module. users can edit this list to create new newsletters and users can subscribe to a newsletter within their user account page.

page
a page is the simplest content type for creating and displaying information. pages contain no predefined structure and are most appropriately used for content  that rarely change, such as an "about us" section of a website. the main field of the page can be optionally used with a wysiwyg editor provided through the contributed wysiwyg module . this provides an api that supports third party editors as plugins, simplifying the administrative process of adding and changing the editor. currently we use the tinymce editor  <cit>  across the scratchpads.

phylogenetic tree
this module is based on roderic d.m. page's tree viewing widget  that displays very large phylogenetic trees to a constrained and predefined size. the widget  <cit>  has been wrapped within a drupal module called tree and allows users to paste or upload a newick tree description or nexus file containing a newick formatted phylogeny. the module creates a page that displays the widget. examples of very large phylogenies displayed in scratchpads through this module include trees on dung beetles  and termites .

poll
polls are questions with a set of limited responses. authorised users can create a poll and invite other users to vote on the responses. once created, polls automatically provide a running count of the number of votes received for each response. this is a drupal core content type.

specimen 
specimen records are based on the darwin core version  <dig> . <dig> fields  <cit> . this content type allows users to record biological specimens through a tabbed workflow and is linked with the location darwin core content type. an example of a site that uses this facility is a scratchpad on freeloader flies .

nodes
all content is stored in drupal nodes which minimally have a unique url, title, creator and last edited/created times, in addition to any supplementary fields defined by the content type. each node is given a numeric identifier that is addressable within the database and forms part of the url. this identifier always links to the most recent version of a node if its content is modified. however, all previous versions of content are stored and can be accessed through a permanent url. a url alias is created from the title of the node that is supplied by the author. this alphanumeric alias is usually more intuitive than the numeric node identifier and can be customised by authorised users. however, the numeric node identifier cannot be changed and is persistent and unique within a site. when appended to the sites domain name this acts as a globally unique identifier  that addresses node content. optionally, each node can be tagged with one or more terms from a vocabulary allowing content to be searched and aggregated through these terms. at the base of every node a range of options are presented to the user that include menu settings , publishing options , comment settings  and file attachments .

all drupal nodes can be translated through the contributed internationalisation package. this consists of a collection of modules that provide a translation interface for the creation of comprehensive multilingual sites including node content, taxonomies and menu items. working in conjunction with browser language detection this will redirect users to content displayed in their preferred translation and includes a block for language selection. at present only one site on stick insects - the phasmid study group  has made use of this facility.

semantic enrichment 
new or modified nodes are automatically searched upon submission to identify terms that match those present in any vocabularies associated with the node content type. if one or more terms match, the user is presented with an interface that enables them to select which term/s to associate with the node. these features are provided by the autotag module  that supports terms from multiple independent vocabularies, even if the term name is common to two or more vocabularies. terms located in a node are pre-selected in the interface to enable fast and efficient tagging. the interface also facilitates tagging with terms that are not present within the node. term name auto-completion, which includes references to the source vocabulary , speeds up the input of additional term name tags.

blocks and views
blocks and views are a means to create boxes of related/grouped data that can be built to create aggregations of content from multiple node types. blocks are normally used in the left and/or right sidebar of a site and are a core feature of the drupal cms. views is a contributed module that acts as a powerful query builder. this allows users to fetch and present highly customised lists, tables and other visualisations. detailed descriptions of blocks and views can be found in the drupal handbook . here we focus on how we have used these features within the scratchpad project.

the scratchpad profile specifies a series of blocks for the left and right sidebars including a clustrmap  <cit>  that shows the location of site visitors; a tabbed search block that allows users to switch between free text searches of the entire site, and filtered searches based on an auto completed list of taxon names stored within the site vocabulary; an 'about this site' block providing brief background information supplied during the scratchpad signup process; and a user log-on block. once logged in the log-on block is replaced with an administrative menu and a 'create content' block providing direct links to major site features.

the default data views created by the scratchpad profile on creation of a site include views for each content type including data from third party sources. these are customised to the particular needs of each data source. for example, bibliographic data are displayed in a table that can be sorted by author, year and publication title; images are displayed as a list of thumbnails; wikipedia content is displayed as the first block of text before the first header; and gbif occurrence maps are simply embedded within the view. users can also create google map views displaying geolocative data with the gmaps module. this allows nodes containing georeferenced data to be filtered and plotted on a google map. by default google maps are created for all nodes with geolocative information, and all users who have specified their location in their user profile.

a view of nodes and their associated fields is dynamically created for each content type  and works in conjunction with a grid matrix editor we have created for spreadsheet-like data entry. this allows users to edit data en masse, where each row represents a node  and each column represents a field in the content type. data in each field is validated according to the same controls that would be present if it were being edited within a single node. the matrix editor allows users to rapidly edit large datasets in an intuitive spreadsheet like environment.

taxon pages
taxonomic names provide a central link between diverse items of information about an organism. given an organism's scientific name a wide range of data can be drawn together, including content from third party databases that have a suitable api. scratchpad taxon pages are our attempt to allow users to dynamically construct and curate pages of information  about any taxon regardless of the physical location of the source data. these pages can include information contained within a scratchpad and data drawn from selected third party resources.

taxon pages are built around the biological classifications that users have created within their sites, and can be intuitively navigated through the taxon hierarchy block, created with the tinytax module . because content may be inappropriately tagged with a taxon name, especially if it is drawn from a third party source, taxon pages include curation tools allowing users to select which content to display, and how this is arranged on a page. this is achieved through an intuitive drag-and-drop interface that supports the curation of the major categories of information to be displayed, and the detailed content within these categories. by default, content is dynamically aggregated on a taxon page in an order that represents the most recent information for any given category. users can fix content on a taxon page using simple view controls that hide inappropriate content and force the display of particularly pertinent information that is likely to remain relevant. for example, users may select holotype and paratype specimen records to be displayed first, followed by a list of the most recently collected specimens. these controls operate on data regardless of whether content is drawn locally or sourced from a third party, allowing taxon pages to display a combination of fixed and recent information as selected by the curator.

an 'on-demand' citation feature allows users to create permanent snapshots of an entire taxon page, whose content will never change and will reside at a permanent url. buttons to request the creation of a citable version are placed at the bottom of each taxon page. when pressed these display a copy of the citation information including the url and a chicago style bibliographic reference to the archived taxon page. an option to send the citation data to the user as an e-mail is also presented. this citation feature is available to users as a drupal block, making on-demand citation possible for all scratchpad content on any node.

taxon pages are built through a combination of blocks and views that are predefined by scratchpad modules. users can create new blocks and views of data that are available to the taxon pages, allowing users to customise this feature to their bespoke needs. programmatically, taxon pages are defined through a series of modules that facilitate the sorting, caching and citation of content. in drupal  <dig> sites these are brought together through the "mado" module  that integrates the required modules and lays out the taxon page. this replaces our implementation of the panels module  used in drupal  <dig> sites.

third-party content
the international scope and interdisciplinary content of natural history means that most natural history data are presently distributed in thousands of public and private databases worldwide. given a shared identifier and a suitable api, information from these databases can be integrated into taxon pages within a scratchpad. these pages rely on taxon names as a shared identifier. however, the instability of taxon names  coupled with the fact that they are not globally unique  mean that taxon names do not always refer to the same entity. we rely on the taxon page curation tools available to users to address this problem.

there is no sustainable way of addressing the lack of an api for most natural history databases. consequently we focus our efforts on the major data providers that, because of their size, scope and/or quality, have well specified api's and have become part of the scholarly communication process for natural history scientists. a list of current third party data providers accessible to scratchpad users is given in table  <dig>  adding new services requires an api that takes a taxon name as the search term. the return is processed and put into a list of results that is passed to the ispecies module. the latter displays the results within a drupal view which is processed within a bespoke module for each service. new services can be quickly and easily added given a data source with an appropriate api.

services
we provide a limited range of services on scratchpad data. at present these are restricted to specimen and bibliographic data. however, scratchpad users can create bespoke views of their data in xml format that can be accessed by others. this is achieved with the views module by specifying xml output and can be created by any user with appropriate permissions .

a service on specimen data is provided by tapirlink software  <cit>  external to the scratchpads. tapirlink uses each set of scratchpad database specimen records as a data source. these data fit the darwincore v <dig> . <dig> standard  <cit>  allowing tapirlink to serve denormalized specimen data to interested partied including gbif  <cit> . at present users have the option of having this service switched on.

bibliographic data are currently available from the scratchpads in bibtex or endnote format. bibtex data is currently harvested by falx  <cit> , a bibliographic data harvester that is part of vital , that aggregates bibliographic data from various sources including the scratchpads to provide an integrated search interface for taxonomic literature of relevance to natural history research scientists . we also expose bibliographic data using the oai-pmh  module  <cit> . this provides an oai-pmh version  <dig> interface to bibliographic data held by the bibliography module within any scratchpad. we plan to evaluate the use of oai-pmh as a more generic solution for serving all data from the scratchpads in due course.

support
the scratchpad project is constantly evolving in response to users needs, under the programming mantra "release early, release often". through regular user feedback, features undergo several revisions in a very short space of time. this pace of change makes traditional documentation  difficult. the energy involved in producing traditional documentation often exceeds the likely benefit to users, since a described feature is often out of date before the majority of users realised the feature was present. to address this challenge we needed a modular user guide that could be quickly revised to reflect recent development. this was done using an e-book within the scratchpad website that contains a series of help screencasts outlining the functions and day-to-day operation of the site. these screencasts can be constructed quickly and slotted into the existing e-book structure. to date almost  <dig> screencasts amounting to more than  <dig> hours worth of video are available to users . in addition, we have constructed a support forum , faq list  and sandbox  that rebuilds itself every hour, allowing users to explore the functionality of the scratchpad project. if all else fails, users can e-mail us for assistance at support@scratchpads.eu.

administration
administrative tasks within the scratchpad can be accessed through the drupal administration page. by default users are presented with a simplified version of this page that hides most of the advanced or less well used administrative functions. the majority of scratchpad users do not need access to the administrative components of the site, and many of these features are restricted to site maintainers. here we will only consider drupal administrative features that we have customised for the scratchpads.

drupal supports openid  <cit>  and we have created our own openid identity provider  that allows us to provide users with openid identities. our use of openid enables users to logon to multiple scratchpads and other openid enabled websites with a single username and password. users can specify openids from any identity providers in their user profile. from our implementation of drupal version  <dig> we have customised the scratchpad user profile to include a default set of fields that include the user's academic affiliation and domain of taxonomic expertise. these fields can be further customised by site maintainers to include additional fields relevant to the bespoke needs of the site.

natural history researchers generally rely on social, and not financial motivations to contribute content. consequently customised branding to establish group identity is important to the success of many sites. drupal's core features support branding, allowing authorized users to customise the site title, slogan and mission statement, in addition to uploading a logo and adjusting the theme that controls the sites colour scheme and page layout. drupal themes are usually implemented with cascading style sheets  and a wide range of themes can be downloaded from the drupal website . within the scratchpad project these functions are restricted to site maintainers, and accessed through the site information and theme pages within the advanced administration section of a site. by default, new scratchpads are created with the multi-column, fluid width garland theme that can be re-coloured using an intuitive colour picker. maintainers can switch between a selection of compatible themes with a range of layouts and styles we have pre-selected for the scratchpads. however, users cannot upload additional themes to their site. in practice most scratchpad users accept the default layout settings and prioritise content creation over refined issues of site design and navigation. consequently non-members may consider that many scratchpads look inelegant or are difficult to navigate. these design and content-building aspects are part of the process by which members establish their sense of identity and community: a similar phenomena can be seen on many social networking websites e.g. myspace <cit> .

customised themes and workflows could be developed to promote good design and site navigation, while retaining the high level of flexibility needed by users to establish a sense of community identity. at present the only design restriction that is pragmatically enforced is the presence of a small footer, forced at the base of every scratchpad page. this contains logos for edit, the scratchpads, creative commons, and the drupal cms, each of which link to their respective projects with the exception of the creative commons logo. the latter currently links through to version three of an unported  creative commons license  <cit>  that defines how content on the node can be used. by default this license permits non-commercial use by attribution, with the proviso that subsequent use of the content is covered by the same creative commons license.

the scratchpad server is backed up using ibm's tivoli storage manager  <cit> , which archives the last seven versions of any file contained within the system. these archives are stored on tape, and are collected during weekdays and stored off site outside london. site maintainers can individually backup their database and site content on demand through a backup module we have created. this could be used to re-establish the scratchpad on another server or extract and repurpose the data.

RESULTS
the scratchpads currently  support  <dig>  registered users who have created  <dig>  nodes of content across  <dig> different sites. of these users, approximately 5% log in every week across one third of all sites. this rises to 13% of users per month across 50% of sites. a breakdown of statistics on registered scratchpad users is available at . this list is dynamically updated every day. the biographic profiles submitted by registered users does not oblige them to identify their country of origin, but a crude analysis of domains from registered users' e-mail addresses suggests they reside in more than  <dig> countries worldwide.

site visitors are recorded on our servers and through a google analytics account  <cit> . scratchpad sites  breakdown into five major categories based on taxa, regions, societies, e-journals/books, and services. however, many sites have overlapping purposes or change in scope over time, making a precise site classification difficult. the majority of sites are taxon focused, serving communities of natural history researchers specialising in particular taxonomic groups. some of these communities are very large. nanotax for example  is a well-developed site with  <dig> registered users working on calcareous nannofossils. similar examples include sites on fungus gnats  and aroid plants . modest numbers of users  are more typical, such as a site on freeloader flies . in other cases a well-developed site may have a single active registered user . geographically defined scratchpads includes sites on the spermacoce from australia  and the malesian moss handbook . a scratchpad also hosts the journal of the european mosquito control association  and the journal phasmid studies . service sites provide facilities and tools that are not usually taxon-specific but are needed by natural historians. an example is the world catalogue of common names  that aims to serve as a repository for common  for any species or species group in any language. while most sites keep the majority of content public, some like the howard and moore checklist of the birds of the world  keep almost all content private. often there is little correlation between the size of a site and the quality of its content. some sites with the most nodes have only a handful of registered users, while some high member sites have relatively little content.

on the scratchpad homepage we use a basic set of site statistics to encourage and motivate contribution. sites with the greatest number of nodes, users and views are placed more prominently on the scratchpad sites list, encouraging competition between site maintainers that are keen to promote their work. within the scratchpads a predefined block allow maintainers to place a badge containing basic usage statistic  on their site. some site users take a keen interest in their site usage statistics, to the point of using personal google analytics accounts  <cit> .

current and future developments
the path to sustaining the scratchpads lies in distributing the hosting and software development activities across multiple institutions, and in embedding the software into the work practices of researchers. our future development plans are focused on these goals. specifically we are developing partnerships with other institutions and organisations that have the technical capacity to host and mirror instances of the scratchpad server. we have an agreement with the encyclopedia of life "lifedesk" project  <cit> , which uses the same underlying software and approach as the scratchpads, in an effort to share development activities. experimental scratchpad servers have been established at new york botanic gardens and chicago field museum. several european institutions have expressed an interest in hosting and developing sites. our aim is to establish a foundation of partner institutions and organizations that will cover the costs of mirroring and hosting scratchpads worldwide, and establish a social framework needed to coordinate and manage the project. these benefits will be largely invisible to users, except in the context of providing a more stable and reliable service. to more directly address user needs we also plan a suite of functional developments focusing on data capture, visualization and analytical tools that enable the scratchpads to better fit within the work processes of taxonomists, systematists and the users of these data. coupled with these are enhancements to facilitate greater mobilization of data held within scratchpad sites. space precludes elaboration of these tasks, however they are broadly outlined in figure  <dig> 

discussion
the scratchpads as they currently stand act like an archipelago of islands, each representing a natural history domain that is internally consistent but largely isolated from the others. services built into the scratchpads achieve some limited level of interoperability, drawing categories of data in from various third parties and serving data on a handful of common data types. scratchpads are also helping to deliver an enhanced level of social cohesion amongst natural history scientists, acting as a nexus for communities. but to achieve a future in which information from different disciplines is truly interoperable, something more is required.

natural history scientists might coordinate their efforts more tightly, perhaps through a top down management approach. international organisations like gbif  <cit> , tdwg  <cit> , and the consortium for the barcode of life  <cit>  are helping to deliver this. however, in a science noted for its epistemological diversity, top down efforts are hard to deliver to hands-on scientists. technologies that are tolerant of diverse data models and can accommodate the ontological richness of natural history are more likely to succeed. semantic web activity  <cit>  offers this prospect, although the low uptake of semantic software suggests semantic web technologies are too nascent to deliver on this promise just yet  <cit> .

arguably in the short term, a third path to a more effective cyber infrastructure for natural history is more attainable. using current technologies to build systems that encourage the deposition of datasets and facilitate community annotation and collaboration, we can gain many of the benefits envisioned for more sophisticated systems. this approach leverages the human capacity to make sense of noisy and contradictory natural history data, while accommodating machine methods like the automated tagging of content. tools like the scratchpads are not a definitive solution to the problem integrating natural history data. rather, as an enabler of digital data capture and collaborative working, usage of the scratchpads is a step toward a less fragmented and more integrated global natural history.

CONCLUSIONS
the ordering of data across natural history disciplines is not simply a question of finding a commonly accepted database model or standard for representing biodiversity data. a more generic solution that supports the ontological richness and diversity of natural history is required. scratchpad software is our attempt to meet this need for communities of natural history scientists where geographic constraints or limited access to data would otherwise impede progress. scratchpads blend social, technical and policy developments into a common platform supporting natural history researchers in the creation and reuse of data. this data publishing framework makes it easy for groups of natural historians to self assemble around a common interest, and for individuals to contribute to group effort without formal management. in a biodiverse world we need to be able to manipulate and annotate ontologically diverse data. scratchpads provide a framework to support this data diversity, and encourage metadata practices that support global efforts towards a more integrated approach to natural history.

availability and requirements
project name: scratchpads

project home page: 

operating system: platform independent 

programming language: php

other requirements: none

license: web application is freely accessible for all users. source code is available under gnu general public license version  <dig> 

any restrictions to use by non-academics: none

competing interests
the authors declare that they have no competing interests.

authors' contributions
vss designs and leads the project, and provides the biological and sociological insight that defines the scratchpad program of work. this includes designing and testing the human-computer-interaction  aspects of component modules and authoring most of the text and multimedia content on the scratchpad project website and within project modules. sdr leads all aspects of the technical development, writing and integrating the package of software and providing the system administration. sdr also manages the additional technical developers including bs who developed the initial version of the scratchpad taxon pages, and kth who provides selected testing and user support. dr provides overall coordination of the scratchpad activities within the edit program of work and handles project administration. dr also tests modules and is the maintainer for a scratchpad on ciliated protozoa . vss wrote the manuscript with contributions from sdr and dr. other authors provided editorial comments and approved the final draft.

supplementary material
additional file 1
contributed  and scratchpad written  modules used within the scratchpad project. the classification module  has been developed with the encyclopedia of life's "lifedesk" project. contributed modules can be found at  . the scratchpad modules and the eol classification module can be found at  . selected scratchpad modules have also been published on the drupal project website when we consider them to be of use to the broader drupal community.

click here for file

 acknowledgements
the scratchpad project is financially supported by edit - a european union framework  <dig> funded network of excellence project. the nhm, london and the global biodiversity information facility  have provided additional grants supporting contract developers. thanks are due to the  <dig> + members of the scratchpad user community for their patience and support throughout the development of the scratchpads. in particular we would like to thank edward baker, vladimir blagoderov and irina brake and who provide regular user feedback to the development team. we are grateful to the anonymous reviewer's who provided valuable feedback on our manuscript. vss would also like to thank roderic d.m. page, whose work provided much of the inspiration for the scratchpads, in addition to malcolm scoble and chris lyal for their support to vss at the nhm, london.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2009: biodiversity informatics. the full contents of the supplement are available online at .
