BACKGROUND
as the volume of biomedical data and knowledge presented in scientific papers increases, there is an increasing need to support formal analyses of these data and to pre-process knowledge for further use in solving problems and developing and testing hypotheses. the precise capture of biological data and knowledge and their correct and consistent representation in computational form is a basic pre-requisite for achieving these goals. ontologies may provide a basis for integrating, processing and applying biomedical data. their integration into a common ontological framework is an indispensible step towards the development of expressive knowledge bases. interoperability between these ontologies would facilitate the consistent use of biomedical data in the form of annotations, allow for queries over multiple ontologies and form a rich knowledge resource for biomedicine that could be further used in solving problems and stating hypotheses. different ontologies have been developed by different groups with different intentions. as a result, translating a statement or transferring an annotation from one ontology to another may not always yield the correct results. the absence of clear principles for achieving interoperability between different ontologies hinders the development of advanced applications and analysis tools based on these ontologies. a number of biomedical ontologies exist, which cover domains such as anatomy  <cit> , cell structure, biological processes, functions  <cit> , diseases  <cit> , development  <cit> , experimental conditions, phenotypes, qualities  <cit>  and relationships  <cit> . a subset of these are unified under the umbrella of the open biomedical ontologies  foundry  <cit> . the obo relationship ontology  <cit> , together with the principles set forth in the obo foundry  <cit>  have contributed to better interoperability between a large number of these ontologies. we address here several remaining problems.

one particular difficulty in making these ontologies interoperable results from the existence of two particular types of biomedical ontologies. the first group describes a canonical or idealized view on a domain, such as an ontology of canonical anatomy. the other group describes phenotypes, properties or phenomena, that – when exemplified by individuals – may contradict knowledge represented in the first group. we call the former group canonical ontologies and the latter phenotype ontologies. an example of a canonical ontology is the foundational model of anatomy  <cit>  , which describes an idealized domain, i.e., it describes a prototypical, idealized human anatomy. many ontologies describing structure, such as cell structure, histology or anatomy, are canonical in this sense. on the other hand, a phenotype ontology describes phenomena whose exemplification by individuals may lead to deviations from this idealized structure. for example, the mammalian phenotype ontology  <cit>  contains the term "absent tail" as a specific type of "abnormal tail morphology". when a researcher would like to refer to an individual mouse with an "absent tail", this mouse does not comply with the canonical, idealized mouse anatomy that excludes such abnormalities.

the integration of ontologies of these different types cannot be achieved using methods developed hitherto, and a new set of methods transcending the framework of classical logic must be introduced to avoid inconsistencies while preserving the specificity of both types of knowledge. we present an approach that uses nonmonotonic reasoning to integrate canonical and phenotype ontologies.

methods and 
RESULTS
gfo-bio
integrating ontologies is a powerful means for achieving interoperability. we adopt john sowa's definition of ontology integration , which he characterized as the process of finding commonalities between different ontologies a and b and deriving a new, integrated ontology c that facilitates interoperability between information systems based on ontologies a and b. there are several approaches to achieving such an integration  <cit> , but there is no generally accepted solution.

our approach to integration is based on top-level ontologies  <cit> . for our study, we use the top-level ontology general formal ontology   <cit> . gfo has several features that distinguish it from other top-level ontologies such as bfo  <cit>  and dolce  <cit> . among the relevant features are the inclusion of a theory of levels of reality  <cit> , and the explicit incorporation of an ontological theory of higher-order categories . we have developed gfo-bio  <cit> , a core ontology  <cit>  for biology. it is formalized in the web ontology language  <cit>   and includes aspects of faceted classification  <cit>  combined with gfo's theory of ontological levels of reality  <cit> .

gfo-bio comprises an ontology of individuals, similar to other established upper biomedical ontologies. "biological individual" is introduced as a subclass of gfo's "individual" category. the classes are defined or restricted using description logic statements. for example, a "molecule" is a subclass of "material object", which has as part at least two atoms. in addition, gfo-bio contains another branch, in which categories themselves are further described and defined. this is an ontology of categories within the biomedical domain. it is this part of gfo-bio that can directly represent directed acyclic graphs, which are commonly used for many biomedical ontologies. for an overview of the modules of gfo-bio, see figure  <dig>  in the remainder of this section, the basic ontology used can be considered to contain only two categories, "individual" and "category". we prefix relationships between categories with cc and relationships between individuals with ii. relationships between categories and individuals are prefixed with ci or ic respectively. for example, the relationship ic-instance-of is the instantiation relation, and the relation cc-isa is the is-a relation.

default rules and default logic
using gfo-bio as a framework for integrating biomedical ontologies, we address the problem of accurately representing canonical and phenotype ontologies. a canonical anatomy ontology such as the foundational model of anatomy  <cit>   establishes rules such as:

 every instance of a human body has as part an appendix. 

this does not necessarily apply to every real human body: an individual human body may lack an appendix as part. however, the rule describes an idealized or canonical human. phenotype ontologies describe phenomena, whose exemplification by individuals can be deviations from these idealizations. for example, an individual may be both an instance of a prototypical human body as described in the fma  and an instance of the category "human body with absent appendix". in a classical logical framework, such as those commonly used in biomedical knowledge representation, e.g. in the form of owl  <cit> , a formalization of the conjunction of these two statements would lead to an inconsistency. a human body in the former case has an appendix as a part, while in the latter case it does not. instantiating both categories creates the inconsistency. a logical inconsistency in the formal sense can only arise when the logical functor of negation is used. this functor is hidden in concepts such as "absent x", as used in the mammalian phenotype ontology  <cit> . the formal detection of logical inconsistencies by inferences needs an explication of negation.

in order to avoid terms such as "absent x" and make the negation explicit, we adopt a modified form of the lacks relation  <cit> , which we explicitly define as:

individual p lacks category c with respect to relation r, if and only if there does not exist an x such that: prx and x is an instance of c.

we use binary relations of the kind x lacks-r c instead of x lacks c with respect to r. for example, the fact that some individual x lacks a category c with respect to the relation has-part will be denoted as x lacks-part c.

using the lacks relation may cause an inconsistency when a canonical ontology and a corresponding phenotype ontology are used in a classical logic formalism, such as first order logic  <cit>  or description logic  <cit> . the reason is that classical formalisms enforce very strict interpretations, e.g. of quantifications like "every human", which results in monotonicity of these formalisms: the inferences drawn from a classical logical theory t remain true in every extension of t with additional facts.

in order to prevent inconsistencies, while at the same time preserving the intuition behind statements such as "a human has an appendix as part", the interpretation of such statements in the canonical ontology must be modified. we propose to use a nonmonotonic logic that treats the statements provided in a canonical ontology as true by default. adding further knowledge, e.g. by referring to a phenotype ontology or using a statement involving the lacks relation , may invalidate previously drawn conclusions.

several ways of treating default rules and exceptions in logics have been proposed. the most popular among these proposals are default logic  <cit> , circumscription  <cit>  and autoepistemic logic  <cit> . we use default logic for our application, because it admits a transparent representation, and allows a semantically correct translation to a form of nonmonotonic, declarative logic programs called answer set programs  <cit> .

in default logic, a default rule has the following form:

 a:bc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadawcaaqaaiabdgeabjabcicaoiqbdiha4zaaragaeiykakiaeiooaojaemoqaikaeiikagiafmieagnbaebacqggpaqkaeaacqwgdbwqcqggoaakcuwg4baegaqeaiabcmcapaaaaaa@3aa8@ 

this means that if a is true , and it is consistent to assume that b, then c can be derived. intuitively, a is a prerequisite, and assuming b adds justification for deriving c from a. thus, as long as b can be assumed, default logic concludes c. in order to formalize our example of humans normally having an appendix as part, we would use the following default rule:

 human:x ic-has-part appendixx ic-has-part appendix
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadawcaaqaaiabdieaijabdwha1jabd2gatjabdggahjabd6gaujabcicaoiabdiha4jabcmcapiabcqda6iabdiha4jabbccaggqabiab=leajjab=neadjabb2catiab=hgaojab=fgahjab=nhazjabb2catiab=bhawjab=fgahjab=jhayjab=rha0jabbccagiabdgeabjabdchawjabdchawjabdwgaljabd6gaujabdsgakjabdmgapjabdiha4bqaaiabdiha4jabbccagiab=leajjab=neadjabb2catiab=hgaojab=fgahjab=nhazjabb2catiab=bhawjab=fgahjab=jhayjab=rha0jabbccagiabdgeabjabdchawjabdchawjabdwgaljabd6gaujabdsgakjabdmgapjabdiha4baaaaa@6de8@ 

here, the precondition is human, the fact that x is a human. then, if it is consistent to assume that x has as part an instance of appendix, it is concluded that x has as part an instance of appendix. the definition of the relation ic-has-part follows the schema in table  <dig> 

for each relation used in a biomedical ontology, a number of relations between categories, individuals and between individuals and categories can be created. the cc-canonical-r relationship is a default relation that is accompanied by axioms in an answer set program to describe its semantics as a default.

nonmonotonicity arises from "it is consistent to assume that x ic-has-part appendix", which means that if x ic-has-part appendix cannot be proven false from the given facts, its addition to the knowledge base does not lead to a contradiction. adding the statement that x does not have an appendix as part  would lead to an inconsistency with x ic-has-part appendix; therefore, this rule could no longer be used to derive that x has an appendix as part.

answer-set programming, the formalism we use for our implementation, can mimic default rules. it uses two kinds of negation, called strong and weak negation. strong negation is the classical  negation, as used in the definition of the lacks relation. weak negation, often denoted as not a, corresponds to the above statements "it cannot be proven that a is true", or "it is consistent to assume that a is false".

formalizing defaults in biomedical ontologies
in a canonical ontology, relationships between its categories can be interpreted as default relations. by default, a human has some appendix as part. however, an instance of a human, such as john, may lack an appendix as a part; therefore, john is an instance of both "human" and "human without an appendix" . in order to include canonical relationships between two categories, new relations must be introduced, such as cc-canonical-has-part. then, the relationship between "human" and "appendix" becomes "human cc-canonical-has-part appendix". further, this relationship corresponds to a default rule:

 forall x,c <dig> c2:if c1 cc-canonical-has-part c2 and x ic-instance-of c <dig> thenby default:there exists a y:y ic-instance-of c2 and x ii-has-party
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakegabqacbuaabaqaeeaaaaqaaiabbagamjabb+gavjabbkhayjabbggahjabbygasjabbygasjabbccagiabdiha4jabcycasiabdoeadnaabaaaleaacqaixaqmaeqaaogaeiilawiaem4qam0aasbaasqaaiabikdayaqabagccqgg6agoaegacmadbmasdiaaxmaacqqgpbqacqqgmbgzcqqggaaicqwgdbwqdawgaawcbagaegymaedabeaakiabbccaggqabiab=neadjab=neadjabb2catiab=ngajjab=fgahjab=5gaujab=9gavjab=5gaujab=lgapjab=ngajjab=fgahjab=xgasjabb2catiab=hgaojab=fgahjab=nhazjabb2catiab=bhawjab=fgahjab=jhayjab=rha0jabbccagiabdoeadnaabaaaleaacqaiyagmaeqaaogaeeiiaaiaeeyyaemaeeoba4maeeizaqmaeeiiaaiaemieagnaeeiiaaiae8xsakkae83qamkaeeyla0iae8xaakmae8nba4mae83camnae8hdaqnae8xyaemae8nba4mae83yammae8xzaumaeeyla0iae83ba8mae8nzaymaeeiiaaiaem4qam0aasbaasqaaiabigdaxaqabagccqggsaalcqqg0badcqqgobaacqqglbqzcqqgubgbaegafiafhiauhia+hiadjiasjiaaxmaacqqgibgycqqg5bqecqqggaaicqqgkbazcqqglbqzcqqgmbgzcqqghbqycqqg1bqdcqqgsbabcqqg0badcqgg6agoaegabqajbiaaxmaacqqg0badcqqgobaacqqglbqzcqqgybgccqqglbqzcqqggaaicqqglbqzcqqg4baecqqgpbqacqqgzbwccqqg0badcqqgzbwccqqggaaicqqghbqycqqggaaicqwg5bqecqgg6agocqwg5bqecqqggaaicqwfjbqscqwfdbwqcqqgtaqlcqwfpbqacqwfubgbcqwfzbwccqwf0badcqwfhbqycqwfubgbcqwfjbwycqwflbqzcqqgtaqlcqwfvbwbcqwfmbgzcqqggaaicqwgdbwqdawgaawcbagaegomaidabeaakiabbccagiabbggahjabb6gaujabbsgakjabbccagiabdiha4jabbccagiab=leajjab=leajjabb2catiab=hgaojab=fgahjab=nhazjabb2catiab=bhawjab=fgahjab=jhayjab=rha0jab=bcaggqaciab+lha5baaaaa@db4f@ 

using a class of lacks relationships as introduced by  <cit> , we formalize the default operator in the rule above as:

 forall x,c <dig> c2:if c1 cc-canonical-has-part c2 and x ic-instance-of c1 andit cannot be proven that x ic-lacks-part c <dig> thenthere exists a y:y ic-instance-of c2 and x ii-has-part y
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaeabbaaaaeaacqqgmbgzcqqgvbwbcqqgybgccqqghbqycqqgsbabcqqgsbabcqqggaaicqwg4baecqggsaalcqwgdbwqdawgaawcbagaegymaedabeaakiabcycasiabdoeadnaabaaaleaacqaiyagmaeqaaogaeiooaodabiqaaayacawljagaeeyaakmaeeozaymaeeiiaaiaem4qam0aasbaasqaaiabigdaxaqabagccqqggaaiieqacqwfdbwqcqwfdbwqcqqgtaqlcqwfjbwycqwfhbqycqwfubgbcqwfvbwbcqwfubgbcqwfpbqacqwfjbwycqwfhbqycqwfsbabcqqgtaqlcqwfobaacqwfhbqycqwfzbwccqqgtaqlcqwfwbaccqwfhbqycqwfybgccqwf0badcqqggaaicqwgdbwqdawgaawcbagaegomaidabeaakiabbccagiabbggahjabb6gaujabbsgakjabbccagiabdiha4jabbccagiab=leajjab=neadjabb2catiab=lgapjab=5gaujab=nhazjab=rha0jab=fgahjab=5gaujab=ngajjab=vgaljabb2catiab=9gavjab=zgamjabbccagiabdoeadnaabaaaleaacqaixaqmaeqaaogaeeiiaaiaeeyyaemaeeoba4maeeizaqgabiqaagoacawljagaeeyaakmaeeidaqnaeeiiaaiaee4yammaeeyyaemaeeoba4maeeoba4maee4ba8maeeidaqnaeeiiaaiaeeoyaimaeeyzaumaeeiiaaiaeeicaanaeeocainaee4ba8maeeodaynaeeyzaumaeeoba4maeeiiaaiaeeidaqnaeeiaagmaeeyyaemaeeidaqnaeeiiaaiaemieagnaeeiiaaiae8xsakkae83qamkaeeyla0iae8hbawmae8xyaemae83yammae83aasmae83camnaeeyla0iae8hcaanae8xyaemae8ncainae8hdaqnaeeiiaaiaem4qam0aasbaasqaaiabikdayaqabagccqggsaalcqqg0badcqqgobaacqqglbqzcqqgubgbaegabaapbiaaxmaacqqg0badcqqgobaacqqglbqzcqqgybgccqqglbqzcqqggaaicqqglbqzcqqg4baecqqgpbqacqqgzbwccqqg0badcqqgzbwccqqggaaicqqghbqycqqggaaicqwg5bqecqgg6agocqwg5bqecqqggaaicqwfjbqscqwfdbwqcqqgtaqlcqwfpbqacqwfubgbcqwfzbwccqwf0badcqwfhbqycqwfubgbcqwfjbwycqwflbqzcqqgtaqlcqwfvbwbcqwfmbgzcqqggaaicqwgdbwqdawgaawcbagaegomaidabeaakiabbccagiabbggahjabb6gaujabbsgakjabbccagiabdiha4jabbccagiab=leajjab=leajjabb2catiab=hgaojab=fgahjab=nhazjabb2catiab=bhawjab=fgahjab=jhayjab=rha0jabbccagiabdmha5baaaaa@051a@ 

in general, for each relation r between the categories in an ontology, we create several new relations: cc-r for the monotonic relationship between the categories, cc-canonical-r for the nonmonotonic default relationship between categories, ic-r for the monotonic relationship between an individual and a category, such as "john ic-has-part appendix", meaning that john has some appendix as part, and ii-r for the monotonic relationship between individuals. in addition, we introduce a class of lacks relationships. a schematic view of the new relationships introduced is shown in table  <dig>  the schema is somewhat incomplete, because the introduction of canonical relations can be extended to the class of lacks relation, in the sense that some category may canonically lack some other category with respect to a relation r. in this case, the relation r must be replaced by lacks-r. this allows the treatment of exceptions between categories. for example, the category "mouse with absent tail" can be defined as a mouse which lacks a tail as part.

implementation
we have used a technique known as dl-programs  <cit>  to implement rules together with the owl version of gfo-bio. the system dlvhex allows for a bidirectional flow of information between an answer-set program and a description logic knowledge base or ontology; thus, it is well suited for our purposes. dlvhex is based on the well-established datalog system dlv  <cit> .

relationships that are used in gfo-bio are made available in the dlvhex system. it then becomes possible to express the necessary axioms for relations of the kind cc-canonical-r. for example, for the relationship cc-canonical-has-part, the following axiom is added, corresponding to formula  in dlvhex:

ic-has-part :- ind,class,class,inst,

   cc-canonical-has-part,

   not ic-lacks-part.

this means that if two categories z and y stand in the relation cc-canonical-has-part, and it cannot be proven that x ic-lacks-part y ), then it is concluded that an individual x, which is an instance of z, stands in the relation ic-has-part to the category y. a simple example illustrating this reasoning is shown in figure  <dig> 

a plot showing the performance of our implementation for a common type of query on a mid-sized ontology is shown in figure  <dig>  the sample test indicates that queries can be answered, but require several minutes. while this may be insufficient in practice for some applications, we believe that it shows that our implementation works, but needs further improvement. an extensive performance evaluation of the proposed method after some improvements on the implementation is subject to future work.

ontology integration with gfo-bio
integrating biological ontologies using gfo-bio involves several steps. first, an owl-dl version of each ontology must be aquired or produced. owl-dl is a sufficiently expressive language because negation is available and logical inconsistencies can be formally detected in the owl-dl framework. for the purpose of this conversion, we provide a tool  <cit>  that converts obo format files  <cit>  into owl-dl. this conversion yields correct results for ontologies that are built according to the obo foundry principles, but may provide incorrect conversions for other ontologies available in the obo format. the generated owl-dl file must then be imported by gfo-bio. each top-level class of the imported ontology is then defined, at least partially, using categories from gfo-bio's individual tree. for example, the "cell" category of the celltype ontology  <cit>  must be declared a subclass of  gfo-bio's "cell" category. further, a second owl-dl file can be produced for each integrated ontology containing the ontology's categories as instances of gfo-bio's category branch. we also provide a tool for performing this conversion for obo files. this file must be imported by gfo-bio as well. in this file, relationships between categories, as directly expressed in the obo-style directed acyclic graphs , are modelled as relationships between owl instances.

for example, the relationship expressed in the dag of the gene ontology's cellular component ontology, "membrane part-of cell", is represented twice in gfo-bio: first, "membrane" and "cell" are created as classes in owl, and the following restriction created :

subclassof))

in addition, the gene ontology's "cell" category is declared equivalent to gfo-bio's "cell" category. second, "membrane" and "cell" are treated as instances of gfo-bio's "category" class, and a relation cc-part-of  between "membrane" and "cell" is asserted:

individual)

while neither the first nor the second step alone require more than the description logic fragment of owl, in conjunction they result in an owl-full  <cit>  ontology.

for an adequate integration of canonical and phenotype ontologies, nonmonotonically treated formulas must be added. this requires the addition of an answer set program for each relation cc-canonical-r and the corresponding relations ic-r and ic-lacks-r:

ic-r :- ind,class,class,inst,

   cc-canonical-r,

   not ic-lacks-r.

additions to the obo relationship ontology
the obo relationship ontology  <cit>  requires several additions for our proposal to succeed. first, the classes of lacks relations, as described in table  <dig>  must be added. this will allow lacking body parts to be defined in ontologies such as the mammalian phenotype ontology  <cit> .

in the description logic variant of the web ontology language  <cit>  , lacks relations can be expressed using negated statements. however, lacks relations are reduced to relations between individuals in a different way compared to what is done for most other relations in the obo relationship ontology . ontologies developed directly in owl-dl could use negation to avoid reference to lacks relations at all.

second, canonical-r relations must be included as relations between categories, using the semantics introduced here. in particular, the canonical-r relations require a nonmonotonic knowledge representation formalism, and cannot be formalized using any form of classical logic. we presented one possible implementation using answer set semantics, but there are other alternatives. at its core, however, the definition of the canonical-r relations remains the same in all possible formalisms dealing with defaults: if it is consistent to assume that some relation holds, this relation holds.

use case: integration of mouse anatomy and mammalian phenotype ontology
the method we propose can be used in conjunction with existing tools and ontologies. little effort is required to modify current ontologies to fit within our proposed methodology. below, we demonstrate how to re-interpret the adult mouse anatomy ontology  <cit>   and the mammalian phenotype ontology  <cit>   to fit within our proposed framework, and discuss problems with the current formalization in the mp.

mouse anatomy
the adult mouse anatomy ontology  uses two relationships, is-a and part-of. we introduce one new relationship to the ma, which we call canonical-has-part, and automatically add for each statement of the type

x part-of y 

the new statement

y canonical-has-part x. 

we believe that this will result in most cases in correctly interpreted default rules, but this method will generate some inadequate statements. therefore, manual verification will be necessary. in addition, some of the generated statements may not contain default rules, but are universally true, while some of the currently present statements involving part-of may not be universally true, but represent default rules. therefore, automatically generating default rules from existing statements can only be the first step, and in the continued development of the ma, a distinction must be made between default rules and universally true statements. this may make it necessary to include additional relationships between categories in the ma, e.g. canonical-part-of and has-part.

mammalian phenotype ontology
the mammalian phenotype ontology  defines, among others, categories labelled by terms such as absent-x. in these terms, the hidden negation must be made explicit. the mp is available in two versions, one containing only is-a relations, and another experimental version that attempts to define terms using relationships such as inheres-in  <cit>  and categories from pato  <cit>  , ma and others. the mp provides property concepts such as absent_tail, although we believe that it would be more adequate to term this property absence of a tail, because absent_tail suggests a reading as an object concept, namely as a tail which is absent. these properties can be composed with object concepts, e.g. adult mouse, in order to refer to more specific object concepts like an adult mouse without a tail . formally, the category absent_tail is defined as the intersection of pato:lacking physical parts, inheres-in ma:adult mouse, and towards ma:tail. the translation to owl  <cit>  yields

equivalentclasses)

      restriction)))

such formalization has the problem that a reduction of absent_tail to relationships between individuals is inappropriate. it becomes manifest in restriction), which enforces the existence of an instance of ma:tail in the owl model  <cit>  – yet, ontologically, there is no instance of tail if the mouse does not have a tail. if "absent tail" is taken literally, i.e., a "virtual" tail with a property of "absence" is accepted in the owl model, the immediate objection is weakened. however, this would either imply that the towards link points to an arbitrary tail of some other entity, or that the mouse with the absent tail does have a tail . this causes at the very least some inconveniences, e.g. when querying such a model for tails, one must pay attention to exclude all virtual tails. we expect that a general application of this approach to many object classes cannot be controlled with reasonable effort. the underlying problem here is a different kind of concept composition compared to that which is commonly employed in description logics and the semantics of the obo file format  <cit> . for composing the concept absent_tail with recourse to tail, a direct link from absent_tail to the owl class ma:tail would be required instead of a link to instances of the class ma:tail. however, links on the class level are not available if the formalization is supposed to adhere to the decidable description logic variant of owl.

other problems occur if the lack of a certain part is considered with respect to parts of it. for example, a caudal vertebra is a part of a tail. the logical definition for absent caudal vertebra can be formulated similarly to the one for the absent_tail. then the question arises to which entity the pato property inheres-in should link. if tail is chosen, this definition cannot be applied to mice lacking a tail, because then there is nothing to inhere in. another option is to link to mouse instead. in both cases, whenever a mouse lacks a tail as part, it also lacks all parts of the tail as part. since each instance of caudal vertebra which is a part of a mouse is part of its tail, a mouse without tail lacks a caudal vertebra. this conclusion cannot be drawn in the approach currently taken by the mp. moreover, we do not want to conclude that a mouse has a caudal vertebra as part when it lacks a tail.

therefore, our suggestion is to introduce the relationship lacks-part and to define terms of the type absent_x as standing in the lacks-part relationship to x. then, absent_x terms refer to categories of objects instead of properties, and those categories can be viewed as a reification of the binary lacks-part relation. for example, absent_tail would be defined as



id: mp:0003456

name: absent tail

relationship: lacks_part ma: <dig> ! tail

by design, this use of lacks-part does not have the problem of non-existent instances. it also does not permit the conclusion that a mouse has a caudal vertebra as part when a mouse lacks a tail.

discussion
meaningful integration of the numerous biomedical ontologies is a major task with many challenges. currently, the infrastructure for such integration is developed in the form of top-level ontologies, biomedical core ontologies and logic-based inference systems.

concept conversion
the formalism we introduced requires reformulating the definitions for the categories expressed in phenotype ontologies. categories in the form "absent-x" should be defined by, e.g., cc-lacks-part x, where x is a category in some canonical ontology. in some cases, this conversion can be done automatically using simple pattern matches. the mammalian phenotype ontology  <cit>  contains  <dig> categories of the type "absent-x", which indicate a cc-lacks-part relationship. however, it is likely that an amount of manual curation will be required to convert relevant concepts into the required form. we believe that the advantages gained by having a common framework for integrating a large number of biomedical ontologies justifies this effort, in particular since it also allows for a semantically richer definition of terms.

defaults and canonical knowledge
we introduce the notion of "default knowledge" as a technical term within the formalism we propose. we do not discuss what a "default" is, or when a piece of knowledge becomes a default, in contrast to merely contingent knowledge. developers of domain ontologies must decide this. widespread acceptance of some fact, its sanction by scientific discourse, or its implicit use in scientific writing may provide starting points for finding defaults. these principles have been used to construct the foundational model of anatomy  <cit>  . the mammalian phenotype ontology classifies categories almost exclusively under categories named "abnormal-x". the ontology of phenotypic properties  contains the property of being "abnormal". each of the corresponding categories and annotations can be investigated and the corresponding default rule identified. not all pieces of information contained in ontologies such as the fma will be default knowledge, but we expect that a significant number of facts can be translated to the formalisms we propose, thereby making the nature of the fact as a default explicit.

there is a difference between canonical and default knowledge, in particular in the context of anatomy. canonical human anatomy, for example, describes an idealized, prototypical human being. this does not necessarily coincide with a normal human being, i.e. in the sense of statistically averaged values. defaults, on the other hand, tend to capture in their commonsense usage the normal cases of a category. we believe that the framework of default logic, compared with other systems, provides the most adequate interpretation for canonical knowledge. however, while certainly needed, a precise distinction between normal, default and canonical knowledge is out of the scope of this study.

comparison with other approaches
the important role of accommodating exceptions and defaults in biomedical knowledge representation has been recognized previously  <cit> , where patterns to deal with a variety of cases were introduced and discussed. these cases are based on the description logic fragment of owl  <cit> , and therefore monotonic logic. in  <cit> , three types of exceptions that occur in biomedical knowledge bases are distinguished:

 <dig>  single exceptions: "arteries carry oxygenated blood" except for the pulmonary artery. in  <cit> , it is proposed to reformulate this statement to "arteries except the pulmonary artery carry oxygenated blood".

 <dig>  exceptions due to context: "the normal human manus has five digits", with "human" and "normal" being treated as explicit contexts.

 <dig>  unpredictable number of exceptions, exceptions from exceptions, etc., such as drug uses, contraindications and interactions.

we offer a method for representing these types of exceptions using a nonmonotonic knowledge representation formalism. we use answer set programs to provide the semantics for treating knowledge in owl as default knowledge with additional exceptions. this does not exclude the possibility to treat these types of exceptions exclusively in a monotonic logic such as owl where appropriate, for which  <cit>  provides a solution. the solution in  <cit>  to the example of arteries carrying oxygenated blood, except the pulmonary artery, has the problem that it must be explicitly known that some artery is not the pulmonary artery, in order to conclude that this artery carries oxygenated blood. there may be cases where this is not wanted, especially if the exception occurs very rarely. in particular, if there is only one rare exception to a rule and some statement influencing the property which changes with this exception is asserted, then the knowledge engineer will usually make this exception explicit, and ignore it otherwise. then, a question whether an artery carries oxygenated blood evaluates to true, except when it is proven that this artery is the pulmonary artery. on the other hand, the solution proposed by  <cit>  is guaranteed to provide the correct inference in every case. depending on the users and uses of a knowledge base or ontology, different representations for this case may be selected, and in many cases the treatment in  <cit>  is adequate.

case two is solved by explicitly introducing a context argument, in the form of additional properties, e.g., by introducing some relation hasanatomicalstatus which maps to "normal". then, a mouse that has an anatomical status "normal" could have, e.g., a tail and a head as part. if a mouse had no tail, it can be concluded that it is an anatomically abnormal mouse. however, then it would be impossible to conclude that it still has a head. an extension to the solution in  <cit>  would be to make the context more fine-grained, by specifying mouse with anatomically normal tails, heads, and so on. this comes down to specifying an enormous number of exceptions in a monotonic logic, and in order to obtain a correct answer to a query for all the parts of some individual mouse, all these exceptions must be explicitly excluded. it would not be possible to simply state that some entity is a mouse in order to obtain its parts. instead it is required to specify explicitly which parts are normal and abnormal, which means in essence to add the answers to the query asked.

the third case in  <cit>  is closest in spirit to our work, as one of the proposals is to use a hybrid reasoning system in order to deal with it. we have extended this idea by giving a formal account of our treatment of exceptions, which is based on a well-studied nonmonotonic logic, and is implemented in a computationally tractable framework. it can also be used in conjunction with appropriate upper ontologies. further, we have shown how to use this formalism to achieve interoperability between canonical and phenotype ontologies in biology. and finally, we give an implementation of our ontology and support for reasoning over exceptions. this could be achieved because recent years have seen an increasing effort in developing reasoners for the semantic web and extending them in various ways, among them the implementation we are using, dlvhex.

we believe that our solution to the problem of exceptions and deviations from a canonical ontology is more general than the proposal in  <cit> . in our opinion, the knowledge contained in a canonical ontology is inherently default knowledge. there is no adequate solution for representing this type of knowledge in a monotonic knowledge representation formalism. representation in monotonic logic requires exceptions to be encoded in the ontology either as a list of exceptions to an axiom, or using a general "abnormality" predicate. for example, the fact that mice usually have some tail as part can be represented as "mouse has-part tail except when ..." followed by a complete list of exceptions. alternatively, "mouse" can be replaced by "normal mouse" in the rule, and a mouse without a tail is not normal. the first solution requires complete knowledge of all known exceptions. these must additionally be explicitly excluded in every query for parts of the mouse. the second way does not require this knowledge of exceptions, but allows for no further inferences once a mouse is known to be not normal. defaults and exceptions cannot be dealt with in a monotonic logic without substantially modifying the canonical ontology, and limiting the ability to query the ontology.

limitations
a major drawback of the system we are using, dlvhex, is its use of racer  <cit>  as a description logic reasoner and of dlv  <cit>  as a datalog system. racer and dlv are proprietary software. in order to be of general use and high quality, an implementation entirely based on free software is beneficial, if not necessary  <cit> .

a number of formalisms have been proposed as a solution to handling defaults in semantic web representation languages or other knowledge representation formalisms. many require modifying the language, and therefore changing tools that are used to develop ontologies. many biomedical ontologies are developed using tools such as obo-edit  <cit>  by biology experts, but not necessarily experts in logic or formal ontology. the solution we propose requires no changes to existing tools, since we are using a hybrid reasoning mechanism. tools that are currently in use can be used further by the ontology developers. the additional semantic features that allow for the treatment of canonical relations as defaults are maintained separately from the ontologies in which they are used.

CONCLUSIONS
in this paper we tackle the problem of integrating biomedical ontologies to facilitate interoperability among them and thus among information systems based on them. we particularly focus on adequately treating two kinds of ontologies, namely canonical and phenotype ontologies, e.g., the mouse anatomy ontology and the mammalian phenotype ontology. given this distinction, we have argued that canonical ontologies represent default knowledge. their integration with ontologies covering phenotypes may thus lead to inconsistencies if used within a classical logic framework, because some phenotypic descriptions are exceptions to defaults. we have shown how existing techniques from knowledge representation can be used to resolve these problems. moreover, our solution uses the biological core ontology gfo-bio as an ontological foundation, which provides support for our solution through higher order categories and relations. integrating canonical and phenotype ontologies, however, requires both an appropriate ontological basis as well as a nonmonotonic representation formalism.

our work primarily extends the obo relationship ontology  <cit> , and requires few changes to domain ontologies. in particular, our proposal does not require modifications in the tools that domain ontology developers use for curating ontologies, or changes in the way these ontologies are developed and stored. our solution remains fully compatible with the obo representation format, and addresses all logical, formal and computational requirements in our proposed extension to the obo relationship ontology. it is there that nonmonotonic semantics must be made available to users. in its current form, based on a classical, monotonic logic, the obo relationship ontology cannot support interoperability between all ontologies that will become part of the obo foundry, in particular between anatomy and phenotype ontologies. our proposal aims to bring about effective interoperability and integration between the ontologies in the obo foundry without the need to modify the representation formalism or the tools used in ontology curation and analysis.

availability and requirements
project name: gfo-bio/nmr

project homepage: 

operating systems: gfo-bio and axiomatization are platform independent, reasoning using dlvhex requires gnu/linux or mac os x.

programming languages: owl, semantic web rule langue , datalog, java other requirements: parts of our implementation require dlvhex, dlv and racer.

license: modified bsd license. dlvhex requires racer and dlv. both are proprietary software.

competing interests
the authors declare that there are no competing interests.

authors' contributions
hh conceived the initial idea on using nonmonotonic reasoning for integrating ontologies, rh the relevance for anatomy and phenotype ontologies. hh, fl, jk and rh designed the framework for consistent integration of anatomy and phenotype ontologies. rh implemented the framework and performed the tests. all authors contributed to writing the paper, have read and approved the final version of this manuscript.

