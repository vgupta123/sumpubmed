BACKGROUND
although sequence similarity search has proven useful in many cases, it has fundamental limitations. first, only a fraction of newly discovered sequences have identifiable homologous genes in current databases. second, the most prominent vertebrate organisms in genbank have only a fraction of their genomes present in finished sequences. new bioinformatics methods allow inference of protein function using "associative analysis" of functional properties to complement traditional sequence homology-based methods. associative properties that have been used to infer function not evident from sequence homology include: co-occurrence of proteins in operons or genome context  <cit> ; proteins sharing common domains in fusion proteins  <cit> ; proteins with similar phylogenetic profiles  <cit> ; proteins with correlated gene expression patterns  <cit> ; and so on. many approaches have also been proposed for utilizing protein-protein interaction data for functional inference  <cit> . a simple but effective approach is to assign a protein with the function that occurs most frequently in its interaction partners  <cit> . this is further improved in  <cit> , which predicts function based on chi-square statistics instead of frequency. some approaches apply machine-learning methods such as clustering and support vector machines  <cit> . others apply global optimization techniques, such as markov random fields  <cit>  and simulated annealing  <cit> , to propagate predictions so that the function of proteins without characterized neighbors can be predicted. most of these approaches use the observation that a protein often shares functions with proteins that interact with it . however, proteins that interact with the same proteins  may also have a greater likelihood of sharing similar physical or biochemical characteristics with the target protein. in a previous study  <cit> , we investigated interactions between proteins from the saccharomyces cerevisiae  genome from the general repository of interaction datasets   <cit> . we observed that there are proteins that do not share any function with their immediate interaction partners  and yet share some function similarity with the interaction partners of their immediate partners . out of  <dig>  annotated yeast proteins, only  <dig> , or  <dig> %, share some function with its level- <dig> neighbors. of the remaining proteins,  <dig>  or  <dig> % of the annotated proteins, share some similarity with at least one of its level- <dig> neighbors. less than 2% of the annotated proteins share functions exclusively with level- <dig> neighbors.

with the assumption that there is no unobserved interaction or annotation, we proposed indirect functional association as a reasonable explanation for this observation  <cit> . such an indirect functional association can be considered as an instance of the "guilt by association" principle â€“ the common "property" between the level- <dig> neighbors and the target protein that is used for deriving the "association" is precisely the set of proteins that they both interact with, namely the level- <dig> neighbors. it is plausible that two proteins that interact with a common set of proteins have a good likelihood of sharing similar physical or biochemical characteristics, and thus exhibit a common function.

while level- <dig> neighbors may be used to provide greater coverage during function inference, they contain too many false positives to be useful. in order to reduce the impact of these false positives, we devised a topological weighting measure, functional similarity weight , which can be used to identify both direct and indirect  neighbors that are more likely to share functions. fs-weight improves the precision of function inference, while the inclusion of fs-weighted level- <dig> neighbors improves both sensitivity and precision. a new method, fs-weighted averaging, which incorporates indirect interactions and fs-weight, was shown to perform better than existing approaches in predicting protein functions for s. cerevisiae from protein interactions  <cit> .

here we study how fs-weighted averaging performs in predicting protein functions from the protein-protein interaction maps of seven genomes. we also study how the approach performs on noisy interaction data and on predicted interactions. finally, we show some examples of novel functions predicted for uncharacterized proteins in the s. cerevisiae genome and study the predictions that are biologically significant.

RESULTS
coverage of protein-protein interactions
to appreciate the feasibility of protein-protein interactions for function discovery, we want to find out whether protein-protein interactions provide any additional coverage over sequence homology. we look at two well-studied genomes, s. cerevisiae and d. melanogaster, and examine: 1) how many known functions can be inferred from other proteins with sequence similarity in the genome; 2) how many more functions can be suggested from interaction partners on top of ; and 3) how many more functions can be suggested from indirect interaction partners on top of  and .

each protein sequence is searched against all protein sequences in the gene ontology database  <cit>  using the basic local alignment search tool   <cit>  using a range of varying e-value thresholds between 1e- <dig> to  <dig>  a higher e-value will translate to less significant sequence similarity and vice versa. hence, a higher e-value threshold will provide better coverage at the expense of lower precision. proteins with close homologs  from the homology search are excluded from the analysis. the protein interaction network is then examined to find out the number of additional known annotations that can be suggested from direct and indirect interactions. figure  <dig> summarizes the findings of this analysis. we find that protein-protein interactions can provide substantial coverage over annotations that cannot be inferred from sequence homology, especially for biological process and cellular component. we also observe that indirect interactions can provide significant additional coverage over annotations that cannot be inferred from both sequence homology and direct interactions.

effectiveness of fs-weight
the effectiveness of fs-weighted averaging for function prediction depends upon the capability of fs-weight in assigning higher weights to direct and indirect interactions that involve function sharing. here we study how well fs-weight scores reflect function similarity. all direct and indirect interactions are first weighted using fs-weight. for each unique score, we compute the fraction of interactions with weights higher than or equal to this score that share at least one level- <dig> go term. the pearson's correlation coefficient between fs-weight score and this computed fraction is then computed. this coefficient indicates how well the fs-weight score of an interaction correlates to the likelihood of function being shared between the proteins involved. table  <dig> summarizes the corresponding pearson's coefficient for each of the seven genomes and each of the three go categories. we can see that the coefficient values are significant  for most cases, indicating that fs-weight correlates strongly with the likelihood of function sharing. the correlation is lower for molecular function in the m. musculus and r. norvegicus genomes, but the value is still positive, indicating weaker correlation. no results are available for the molecular function and the cellular component of c. elegans due to limited annotation information.

function prediction using fs-weighted averaging
using neighbor counting and chi-square as a benchmark, we want to study the prediction performance of fs-weighted averaging over a variety of different genomes. these genomes vary greatly in the availability of annotations and interaction data, which provides a good setup to study the strengths and limitations of the technique. ten-fold cross validation is performed on each genome using neighbor counting, chi-square, and fs-weighted averaging. proteins with known functions are randomly divided into  <dig> groups. in each run, the annotations for one group of proteins will be hidden, and their functions predicted based on the annotations for the remaining groups and the interaction data. the hidden annotations are not available to any preprocessing steps, including reliability estimation and the weighting of interactions. the predictions from the three methods are validated and compared using the two criteria, precision-recall analysis and receiver operating characteristics, as outlined in the methods section. only informative go terms  are used for validation.

precision-recall analysis
the precision versus recall graphs for the prediction of informative go terms for each of the seven genomes are presented in figure  <dig>  only graphs for the biological process category are presented to maintain clarity. graphs from the molecular function and cellular component categories are provided in the supplementary data . we can see from figure  <dig> that fs-weighted averaging makes predictions with better precision and recall compared to the two other methods for most of the seven genomes. the precision of fs-weighted averaging for r. norvegicus is less consistent. however, note that due to the lack of annotation information, the informative terms chosen for three genomes, including r. norvegicus, may not provide for statistically strong comparisons . for the prediction of informative go terms from the molecular function and cellular component categories, fs-weighted averaging also yields better recall and precision over the two other . for these categories, no result is available for c. elegans as insufficient annotation information is available. we also observe that the superiority of fs-weighted averaging over the two other methods is more significant in the genomes with denser interaction networks .

receiver operating characteristics
to compare the receiver operating characteristics   <cit>  of predictions from the three methods, we compute the number of informative go terms that can be predicted with an roc â‰¥ k,  <dig>  â‰¥ k â‰¥  <dig>  the number of go terms that can be predicted with roc â‰¥ k is plotted against k in figure  <dig> using the three methods for the seven genomes. again, only graphs for go terms from biological process are shown here. we can see that for most of the genomes, fs-weighted averaging makes predictions for more go terms at each roc threshold. we again observe that the superiority of fs-weighted averaging over the two other methods is more significant in the genomes with denser interaction networks. graphs for the two other go categories show similar results.

function prediction with predicted protein-protein interactions
one of the main limitations in using protein-protein interactions for function prediction is the availability of interaction data. if we can harness predicted interactions, such as those from the string database  <cit> , the use of protein-protein interactions for functional inference becomes potentially more useful. the string database contains physical interactions as well as interactions predicted from genomic context, coexpression, and previous knowledge. here we include the interactions for s. cerevisiae from string into the existing interaction data from biogrid to study if any improvement can be made from the use of these predicted interactions. figure  <dig> shows the precision-recall and roc analysis of the predictions made by the three methods using 1) only interactions from biogrid ; and 2) a combination of biogrid interactions and predicted interactions from string  for informative go terms from the biological process category. we find that neighbor counting and chi-square achieved significant improvement in both precision-recall and roc analysis with the combined interactions, while the performance of fs-weighted averaging remains relatively unchanged. this is due to the fact that the predicted interactions from string in fact already include many indirect interactions. the average number of annotated neighbors per annotated protein is nearly  <dig> , which is much higher than the average direct interaction partner per protein of  <dig> estimated in  <cit> . nonetheless, fs-weighted averaging is still able to achieve greater roc for more informative go terms with the combined interaction data. one interesting point to note is that fs-weighted averaging can already achieve outstanding recall and precision as well as roc performance using the much smaller biogrid, which is less than one-third the size of the combined interactions!

robustness of fs-weighted averaging against noise and missing data
fs-weighted averaging is designed to take into account the fact that interaction data can be rather noisy  <cit> . as mentioned in the methods section, the fs-weight measure incorporates two forms of countermeasure against noisy interaction data â€“ estimation of the reliability of experimental sources and topological weight. here we want to study how well the method can perform against noisy data. to simulate noise in interactions, we take the current interaction data and contaminate it with different forms of synthetic noise. we perform this analysis on the s. cerevisiae genome since it has a denser interaction data and more complete functional annotations. to differentiate the effects of different types of noise, we modify the interaction data by 1) adding random interactions and 2) randomly removing interactions. random additions reflect false positives in experimental sources, while random deletions reflect missing data or detection failures. real protein-protein interactions are likely to include both forms of noise.

fs-weighted averaging is used to predict functions from the biological process category using interactions with noise varying from 10% to 50% of the existing interactions applied. as a comparison, we repeated the predictions using neighbor counting. figure  <dig> presents graphs that show the number of informative go terms that can be predicted above various roc thresholds using the two methods on the various perturbed interaction networks. we find that the performances of both methods are less significantly affected by random additions than by random deletions. interestingly, we also find that the prediction performance of fs-weighted averaging actually improves with random additions, while the performance of neighbor counting deteriorates with added noise. however, with random deletions, the performance of fs-weighted averaging deteriorates slightly faster than that of neighbor counting. nonetheless, fs-weighted averaging performs better than neighbour counting in all the experiments. these observations indicate that fs-weighted averaging is robust to false positives in the interaction data but is less effective in sparser interaction networks.

identifying functions better predicted with indirect neighbors
we want to identify functions that can be better predicted with fs-weighted averaging. we compute the roc scores of predictions made by 1) neighbor counting  and 2) fs-weighted averaging  for each level- <dig> go term annotated by at least  <dig> proteins. due to limited annotation and interaction data, we study only  <dig> genomes: s. cerevisiae, d. melanogaster, h. sapiens, and m. musculus. figure  <dig> shows a 2d plot of roc scores of predictions made by neighbor counting versus predictions made by fs-weighted averaging for biological process go terms. each point on the graph represents a level- <dig> go term. a point above the diagonal line indicates that wa yields a better roc score, while a point below the diagonal line indicates that nc yields a better roc score.

for all the four genomes in figure  <dig>  most points on the graph lie above the diagonal line, indicating that fs-weighted averaging performed better than neighbor counting for most of these go terms.

to identify go terms on which fs-weighted averaging can achieve the best relative performance over neighbor counting, we first select only level- <dig> go terms that appear in at least two of the four genomes. for each term, we define a score that reflects the relative roc score of fs-weighted averaging against neighbor counting as follows:

fl2=rocwarocnc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwggbgrdawgaawcbagaemitawkaegomaidabeaakmaabmaabagaemieaghacagloagaayzkaagaeyypa0zaasaaaeaacqwgsbgucqwgpbwtcqwgdbwqdawgaawcbagaem4vaclaemyqaeeabeaakmaabmaabagaemieaghacagloagaayzkaaaabagaemouailaem4ta8kaem4qam0aasbaasqaaiabd6eaojabdoeadbqabagcdaqadaqaaiabdiha4bgaayjkaiaawmcaaaaaaaa@45ce@

where rocwa is the roc score of the predictions made by fs-weighted averaging; and rocnc is the roc score of the predictions made by neighbor counting.

we select the top five terms from each go category based on their average fl <dig> in the genomes in which they appear and present them in table  <dig> 

discussion
we have shown that fs-weighted averaging consistently outperforms neighbor counting and chi-square in function prediction for the various genomes. by incorporating interaction reliability, topological weight, and indirect interactions, the method can predict more functions with higher precision in all three categories of the gene ontology. it is also reasonably resilient against interaction noise, maintaining consistent prediction performance even when a large number of interactions are randomly added to the interaction data. however, we have also seen that the performance edge of fs-weighted averaging is less significant in the genomes with sparse interaction networks and also less significant when the interaction network is made sparser by random deletions. this is due to two factors. first, the number of indirect interactions is much lower for sparser networks due to limited connectivity. indirect interactions can only involve proteins that interact with at least one other protein, i.e., the proteins in the interaction network. second, the performance of fs-weighted averaging is dependent on the effectiveness of the fs-weight measure, which is limited when the network is sparse.

limitations of fs-weight
we have seen from table  <dig> that fs-weight remains effective even for the sparser networks. however, while fs-weight can still identify function-sharing interactions for sparser networks, it will miss more interactions that do share function. the topological weight is computed based on the common interaction neighbors of the network. when the interaction network is very sparse, there is often insufficient information in the local topology for fs-weight to get a confident estimate on functional similarity between proteins. in such cases, fs-weight assigns a low weight to the interaction. as such, it may limit the contribution of some function-sharing interactions to the function prediction mechanism in fs-weighted averaging. nonetheless, we can see this as a feature rather than a limitation. when a protein interacts with very few proteins, any form of measure that would assign a high reliability score or high confidence in sharing function without additional evidence would be very susceptible to noise and will not give consistent performance over different datasets.

examples of indirect functional association
here we take a look at two examples that illustrate how indirect interactions can provide functional association that cannot be captured through direct interactions.

indirect functional association of biological process
indirect functional association of molecular function
in the second example, we look at the local interaction neighbourhood of another protein, ybr264c, which is shown in figure  <dig>  ybr264c, shown as a red node in the figure, is a gtp binding protein. as there are too many level- <dig> neighbors, we only show those with fs-weight >=  <dig> . while ybr264c interacts with nine proteins, none of these shares its molecular function, gtpase activity. on the other hand, a number of level- <dig> neighbors have this function .

interestingly, the level- <dig> neighbors and ybr264c form a bipartite graph with four proteins: ygl198w, ynl263c, ynl044w, and yer136w. ygl198w is a ypt-interacting protein that interacts with rab gtpases. ynl263c and ynl044w have no known molecular function but are known to be involved in er to golgi transport.

yer136w is a gdp dissociation inhibitor that regulates vesicle traffic in secretory pathways by regulating the dissociation of gdp from gtp binding proteins. two of the four proteins have molecular functions that require interaction with gtpases, while the other two have no known molecular function. it is likely that ynl263c and ynl044w, which have no known molecular function, would have molecular functions that involve interaction with gtpases.

we also notice that ygr172c is the only member on its side of the bipartite graph that does not have the molecular function gtpase activity. ygr172c is known to be an integral membrane protein required for the biogenesis of er-derived copii transport vesicles and has no known molecular function. it is likely that ygr172c would share the molecular function gtpase activity with ybr264c.

novel predictions for s. cerevisiae
using fs-weighted averaging, we predict go functions for uncharacterized proteins in the interaction network of s. cerevisiae. from these predictions, we select predictions with higher confidence by:

 <dig>  excluding go terms that are associated with fewer than  <dig> annotated proteins;

 <dig>  excluding go terms that have an roc of less than  <dig>  during cross validation;

 <dig>  for each remaining go term, retaining only novel predictions that have a score greater than or equal to at least 70% of annotated proteins with the term.

 <dig>  propagating predictions to include ancestor terms for consistency.

these predictions are publicly available at  <cit> . we welcome collaborations with experimentalists interested in verifying some of these predictions.

CONCLUSIONS
we have investigated the protein-protein interactions from seven genomes and shown that by incorporating topological weighting and indirect neighbors, fs-weighted averaging can predict protein function effectively for all three categories of the gene ontology. this result is consistent across the seven genomes, indicating that the approach is robust and likely to be generally applicable. we have also studied the impact of noisy interaction data on the performance of fs-weighted averaging and find that it is very robust against random perturbations in the interaction network. the study also reveals that fs-weighted averaging displays greater effectiveness for sufficiently dense interaction networks as its weighting mechanism requires sufficient local network information.

