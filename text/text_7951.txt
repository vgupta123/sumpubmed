BACKGROUND
automatic functional annotation is essential for high-throughput sequencing projects. typically, large datasets undergo annotation by means of "annotation jamborees", where groups of experts are assigned to manually annotate a designated portion of an organism's genome. more recently, various tools have become available to streamline this process  <cit> . however, limitations encountered with these tools are that many require web-submission of data  <cit> , need substantial manual intervention  <cit> , supply only a single output format, are part of a large sequence analysis package  <cit>  and most importantly, do not combine a broad range of information resources. to address these shortcomings, we developed a new annotation pipeline, which we term "autofact".

unique to autofact, is its hierarchal filtering system for determining the most informative functional annotation. this paper describes autofact's functional assignment capabilities, outlining the procedure for annotating unknown nucleotide or protein sequence data. we assess the validity of autofact by comparing annotations to four previously annotated and phylogenetically diverse organisms, including human, yeast and both eukaryotic and bacterial pathogens. autofact has been applied to the est sequencing project of acanthamoeba castellanii, a free-living soil amoeba and opportunistic human pathogen. this example highlights autofact's performance, which yields a ~50% increase in functional annotations over a top-blast-hit approach against ncbi's non-redundant database or against uniprot's expert-annotated uniref <dig> database.

implementation
autofact is a command-line-driven program written in perl for linux/unix operating systems. it uses bioperl  <cit>  modules to parse and analyze blast  <cit>  reports. average annotation time is  <dig>  hours for  <dig> sequences of approximately  <dig> bp in length on a desktop workstation . a web version of autofact is available where users can submit up to  <dig> sequences at a time for annotation. for large sequencing projects, it is recommended that the user download and install the local version of autofact.

RESULTS
methodology
autofact takes a single fasta-formatted sequence file as input, automatically recognizes the sequence type as nucleotide or protein and proceeds to ask the user for preferences regarding which databases to use, the order of database importance and bit score cutoff. the bit score is a measure of sequence similarity independent of the size of the database used . it is derived from the raw alignment score in which the statistical properties of the scoring system used have been taken into account. bit scores are normalized with respect to the scoring system and hence can be used to compare alignment scores from different searches  <cit> . each sequence in the fasta-formatted file is then assigned to one of six annotation classes:  ribosomal rna ,   protein,  unassigned protein,  -containing protein,  unknown est  or  unclassified .

autofact assigns classification information, based on a hierarchal system, from a collection of specialized resources, currently nine databases , using blast comparison  <cit> . since not all descriptions from top blast hits are genuinely informative, autofact adopts the "uninformative rule"  <cit> , by which the highest scoring blast hit with a biologically informative description is considered informative.

we prefer to use uniref <dig> as the first database in the order of importance for two reasons. first, as a member of uniprot it is one of the better annotated and curated of the available databases. second, because uniprot entries with 90% sequence similarity are combined into a single record, the description lines are species-independent and tend to be more general in their descriptions. on the other hand, description lines from ncbi's nr database are often several lines long and contain repetitive information. testing showed that using various database combinations does not significantly change the annotation results. a user's choice of db order is therefore dependent on the format of the description line one would prefer to assign to the sequence in question .

autofact proceeds to step  <dig> when there are no common informative terms between any of the databases, or when only uninformative hits are found. in this step, a sequence with significant similarity to one or more sequences in the pfam or smart databases is classified as a ' -containing' protein or a 'multi-domain-containing protein'. a sequence containing no domains is simply classified as an 'unassigned protein'.

a sequence is also classified as a ' -containing protein' when the only significant hit is to a domain database. it is considered 'unclassified' when no hits are found to any of the specified databases. when est sequences are being annotated, the last step in the annotation pipeline is to check the sequence against ncbi's est_others database. if a significant match is found, the sequence is classified as an 'unknown est'; otherwise it remains 'unclassified'.

in step  <dig>  functionally annotated sequences are then classified according to kegg pathways, cog functional groups, enzyme commission  numbers, geneontology  terms and locus names. putative kegg pathways are assigned if an informative term from the automatically assigned description line matches a term in the informative kegg hit. the same reasoning is used to assign putative cog functional categories. ec numbers  <cit>  are assigned in one of two ways, either from parsing the kegg description line or by mapping the accession number of the informative uniref hit to an enzyme via expasy's enzyme.dat file  <cit> . go terms are assigned by mapping the uniref accession number of the informative hit via the gene_association.goa_uniprot file  <cit> .

three different output formats are generated by autofact: html web pages  for easy viewing and browsing, a general feature format  file  <cit>  to facilitate data transfer to the user's private database and a simple tab-delimited text file for easy data extraction and manipulation. a log file is also generated to document all decision-making steps in the annotation process.

validation
to assess the validity of autofact annotations, we compared results for  <dig> randomly chosen cdna sequences across four previously annotated and phylogenetically diverse organisms: i) homo sapiens, annotated by the ensembl annotation pipeline  <cit> ; ii) saccharomyces cerevisiae, annotated by mips/pedant  <cit> ; iii) plasmodium falciparum, annotated by the institute for genomic research   <cit> ; and iv) rickettsia prowazekii, previously annotated by genequiz  <cit> . we used autofact's default values and considered hits to genes from the same species as uninformative. figure  <dig> compares the annotation results of  <dig> randomly chosen sequences for each species/pipeline.

homo sapiens 
comparison of human ensembl annotations to autofact revealed no significant differences in annotation assignments. there were 2/ <dig>  sequences that autofact annotated as 'unassigned protein', either because the only blast hits were to other human sequences or because the informative terms could not be matched across database sources. had we been less strict in our annotation criteria and considered hits to the same species as informative, autofact would then have assigned the same annotations as ensembl to these two sequences. the high similarity between annotation results is primarily due to the fact that the source of most of the ensembl annotations is uniprot/swissprot, which autofact also uses via uniref <dig>  the database of highest importance in the autofact database order.

saccharomyces cerevisiae 
autofact and pedant annotations for a set of  <dig> cdnas differed by 5% . we examined the original annotations for these  <dig> sequences in the expertly curated saccharomyces genome database . because autofact considered hits to saccharomyces cerevisiae as 'uninformative', 6/ <dig> sequences were classified as ' -containing proteins'. we do not consider these annotations to be false positives, merely less specific annotations. in 1/ <dig> of the assignments, autofact was better than pedant . the remaining 3/ <dig> annotations are considered to be false positives, suggesting an overall error rate of  <dig> % .

annotations in bold are the same as the original annotations found in the saccharomyces genome database. autofact annotations marked with an asterisk  are considered false positives.

plasmodium falciparum 
we compared tigr's preliminary annotations for a set of  <dig> plasmodium falciparum cdnas to annotations generated by autofact. tigr's preliminary annotations are automatically assigned by searching nucleotide and protein databases for "good" matches. at this preliminary stage, none of the annotations are examined or verified by human annotators. we found that between the two fully automatic pipelines, 4%  of the annotations differed, half of which were annotated by autofact as ' -containing proteins' . because tigr's preliminary annotations have not been examined by human annotators, we cannot estimate the % false positives in this instance.

rickettsia prowazekii 
autofact annotations for rickettsia prowazekii  <cit>  were compared to annotations previously assigned by genequiz . autofact differed from genequiz annotations at  <dig> %  of the sequences, yet differed only by 1%  from the more accurate original annotations  <cit> , which are based on human inspection and include phylogenetic information. genequiz estimates an overall error rate of  <dig> â€“5%, which is confirmed in our comparison here . based on these automatic annotation results, autofact is the more accurate of the two pipelines, with an error rate of only 1%.

annotations in bold are the same as the original annotations by andersson et al. .

autofact annotations marked with an asterisk  are considered false positives.

case study: acanthamoeba castellanii
autofact is currently used by the protist est program   <cit> , a pan-canadian genomics initiative involving investigators at six canadian universities. the objective of pep is to survey, through est sequencing, the expressed portions of the genomes of a phylogenetically comprehensive selection of protists .

under the pep initiative,  <dig>  individual est reads yielding  <dig>  clusters  have been obtained to date for a. castellanii. we compared autofact annotations for these clusters to annotations taken from top blastx hits against ncbi's nr database and from top blastx hits against uniprot's well-annotated uniref <dig> database. autofact compared the a. castellanii sequences against a total of seven databases. uniref <dig>  kegg, cog and ncbi's nr were searched using blastx ; pfam and smart were searched using rps-blast; and ncbi's est_others database was searched using tblastx. in each instance, a bit score cutoff of  <dig> was used and the top  <dig> blast hits were filtered for uninformative terms. the database order of importance was uniref <dig>  kegg, cog, ncbi's nr. figure  <dig> shows an ~50% increase in functionally informative annotations with autofact  compared to the quick and easy top-blast-hit approach . scanning the top  <dig> hits for informative terms in autofact's uniref <dig> source alone results in a 10% increase in informative annotations over the top-blast-hit approach against both nr and uniref <dig>  this result demonstrates the power of the "uninformative rule" alone. as such there is a significant decrease  in 'uninformative' hits when using autofact. by searching against the domain databases pfam and smart, autofact reduces the number of 'no hits found' by approximately 10% in comparison to the datasets annotated by the top-blast-hit approach.

autofact annotations for each organism mentioned above can be viewed at 

CONCLUSIONS
to efficiently and fully exploit the wealth of sequence data currently available, thorough and informative functional annotations are paramount. considering the ever-growing number of est sequencing projects, it becomes increasingly important to fully automate the annotation process and to make optimal use of the various available annotation resources and databases. because no two annotation systems are exactly alike, choice of system is very much dependent on the user's end goal.

autofact uses a hierarchal filtering system for determining the most informative functional annotation. it provides a means of classification by identifying ec numbers, kegg pathways, cog functional classes and geneontology terms. autofact supplies three different output formats and a log file, which are versatile and adaptable to user requirements. importantly, it allows users to maintain data locally, whereas many other systems require sequence submission elsewhere for annotation. by combining multiple resources, autofact associates sequences with a broad range of biological classifications and has proven to be very powerful for annotating both est and protein sequence data. the a. castellanii case study shows that in comparison to the 'quick and easy' top-blast-hit approach against either ncbi's nr or uniprot's uniref databases, autofact substantially improves functional annotations of sequence data. comparisons to other well-established annotation pipelines show that autofact performs equally well and in some cases better than the alternative. we have also demonstrated that autofact exhibits an equivalent level of performance  when it is used to annotate sequences across different domains of life.

finally, we caution that over-prediction is common when using sequence similarity to infer protein function. examples of similar sequences that do not share the same or even related functions have been documented  <cit> . automatic annotations therefore may require further validation in certain cases.

availability and requirements
project name: autofact

project homepage: 

operating system: linux/unix

programming language: perl

other requirements: bioperl and blast

license: gnu general public license 

any restrictions to use by non-academics: none

authors' contributions
lbk designed, developed and implemented autofact. mwg provided the acanthamoeba castellanii data used to test and validate autofact. gb and bfl supervised the study, making significant design contributions. all authors read and approved the final manuscript.

