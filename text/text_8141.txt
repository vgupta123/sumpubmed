BACKGROUND
transposable elements  are mobile genetic elements that account for an important fraction of both plant and animal genomes. far from being simply selfish elements, tes contribute extensively to genomes’ function. the complex enzymatic machinery tes encode, as well as their regulatory elements and even dna sequence attributes have been repeatedly co-opted by their host genome during evolution  <cit> . a paradigmatic example are the rag proteins responsible for the vj recombination system in immunoglobulin, whose dna-binding and nuclease functions derive from domesticated transposases  <cit> . similarly, several transcription factors in both plants and animals derive from tes  <cit> , as well as promoters  <cit>  and transcription factor binding sites  <cit> . however, the most obvious impact of tes is due to their mobility, and the polymorphisms they generate are a rich source of genetic variants that can be selected during evolution. indeed, transposon-related polymorphisms are at the origin of an important fraction of variability relevant to plant genome evolution both in the wild and for breeding  <cit> , and have strongly affected human evolution  <cit> . moreover, at a much shorter timescale, somatic insertions can have an important impact on the phenotype of an individual organism. in plants, somatic mutations induced by transposable element insertions  are at the origin of agriculturally relevant traits such as variations in grape color  <cit>  or cluster shape  <cit> . in humans, the l <dig> retrotransposon is highly active during neuronal development, and l <dig> insertions may modify the expression pattern of nearby genes, contributing to neuron diversification  <cit> . however, te movement may also lead to disease in humans. for example, increased te activity in neurons may lead to diseases such as schizophrenia  <cit>  and teis have been associated to other human diseases such as hepatocellular carcinoma  <cit> , lung squamous, head and neck, colorectal and endometrial carcinomas  <cit> , as well as to other cancer types  <cit> . therefore, the analysis of te insertion polymorphisms is an important component in studying the evolution of plant and animal genomes and is also highly relevant in the context of elucidating the genetic basis of disease, including cancers. indeed, tumor development is an evolutionary process in which mutations beneficial to the cancer  are selected for. new mutations are acquired over time, and if selected for form a new proliferating sub-clone. thus, the identification of somatic teis in cancer is highly relevant to the study of disease evolution, and remains a challenge as it requires highly sensitive methods able to identify teis in a minor fraction of cells .

the question of identifying the locus of new te insertions has been addressed in many different ways, including molecular biology techniques , hemi-specific pcr) in specific individuals or plant varieties, but this is not feasible for a large number of elements or samples. assembly-based approaches have been used comparing bacs  <cit>  or whole genomes  <cit> , which have the advantage of yielding the sequence of the element that is present  in either genome, and thus enabling sequence comparisons between elements. however these are limited by the amount and quality of assembled genomes available, making this approach less feasible for large numbers of samples, or for highly repetitive genomes. array-based methods are notoriously blind to the “difficult”, repetitive regions of the genome  <cit> , and the two latter methods preclude the identification of heterozygosity. while mapping of single-end or concordant paired-end sequences can be useful for determining copy number variation  of genes using depth of coverage, the large copy number of most te families excludes this approach, as the variations in copy number would be insignificant with respect to the total number of copies. discordantly mapped paired-end reads have been used to map polymorphic te sites in human populations  or human cancer lines , in the hominid lineage  <cit>  and in plants  <cit> .

the number of studies highlighting the impact of recent te insertions in evolution and disease supports the importance of including te-related variant detection among the usual suspects of genome-wide variant studies, such as single nucleotide polymorphisms , short indels and cnvs. the proliferation of large datasets of ngs-based paired-end sequencing data provides a goldmine for addressing the genetic basis of trait evolution and disease. to date, there exists a handful of software tools that aim to identify teis using paired-end sequencing data, each with their particularities and limitations. for example tea  <cit> , retroseq  <cit>  and variationhunter  <cit>  all focus on human non-ltr tes such as alus, l <dig> and sva, and none predict the zygosity of the called insertion. most available tools  do not accept out-of-the-box bam alignment files as produced by widely applied alignment tools like bwa, bwa-mem and bowtie1/ <dig>  variationhunter and tea require alignment of reads against a library of transposon sequences in addition to the genome, which is impractical when the sequencing data is supplied already aligned. recently, transposeq has been used to identify teis in cancer cell lines, and is the only tool to predict the zygosity of the insertions. however, it is designed specifically for, and is limited to, paired tumor-normal datasets in human and requires an lsf cluster environment  <cit> . temp  <cit>  is designed to detect teis in pooled samples for population studies, and requires a curated set of te consensus sequences. thus the development of a bioinformatics tool to detect teis based on mapping signatures of ngs reads, indiscriminately of the type of te and genome, which operates on standard bam files, predicts allelic frequency and optionally processes tumor-normal pairs would represent a significant technical advance in the field of structural variant analysis. these characteristics imply relevant applications from the study of plant and animal evolution to human disease, with specific advantages in large scale, storage-heavy projects as the pancancer analysis of whole-genomes  project , which are limited to a single alignment format due to high storage and computational demands.

here we present jitterbug, a tool that identifies novel transposable element insertions in a sequenced sample with respect to a reference genome, based solely on the mapped reads in bam format and the annotation of tes in the reference. jitterbug can be used in any genome for which a reference sequence and te annotation is available, and detects teis of all te classes. in addition, it predicts the allelic frequency  of the insertion as well as optionally compares tumor-normal sample pairs to call somatic insertions even at a low  cancer cell fraction.

RESULTS
an algorithm for identification of transposon insertion sites using paired-end and clipped reads
jitterbug has been designed to identify te insertions present in samples sequenced with a paired-end approach that are not present in the corresponding reference genome. the algorithm relies on the presence of read pairs that span the te insertion  site on either side of the inserted sequence. such read pairs have one read coming from the sequence near the insertion site and the other from the te sequence itself. as tes are usually found in multiple similar copies throughout the genome, the newly inserted te will likely be similar to another annotated te in the reference. therefore such read pairs will map at a discordant distance, with one read  mapping to a unique genomic location near the insertion site, and the other  mapping to a te similar to the one inserted but found elsewhere in the reference . each of these discordant reads potentially predicts an insertion within an interval  downstream of the anchor read . sets of overlapping anchor reads are clustered together on either strand, and a pair of forward and reverse clusters which overlap in their prediction interval are considered to predict a putative te insertion. mapping software such as bwa  <cit>  will truncate or “soft-clip” reads that consist of two segments mapping to distinct locations, retaining the mapping position of the longer fragment. reads that overlap the borders of the inserted te are thus “soft-clipped”  and are used to narrow down the prediction interval, the clipped site indicating the exact insertion breakpoint . properly mapped reads that overlap the predicted insertion breakpoint indicate the absence of a tei, i.e. the reference allele, while the clipped reads indicate the “presence”  allele. the ratio of clipped to properly mapped reads at the insertion site represent the allelic frequency  of the insertion, a ratio of  <dig> indicating homozygosity for the te insertion, and a ratio around  <dig>  a heterozygous state. jitterbug allows for identification of teis with an af substantially below  <dig> , such as the case of somatic mutations occurring in subclones of a tumor and therefore present in cancer cell fractions below 100 %.fig.  <dig> principal elements of jitterbug algorithm. a) discordantly mapping read-pairs of which one read maps to an annotated te predict an insertion event. b) clipped reads are used to narrow down the breakpoint, and properly mapped reads spanning that breakpoint  indicate the presence of a reference allele. the predicted insertion interval lies between the innermost anchor reads of the forward and reverse clusters



jitterbug uses as input the read alignment in bam format of paired-end reads from the sample to the corresponding reference genome and the annotation of transposable elements in that reference genome in gff format. we have assessed jitterbug using simulated and real datasets and in genomes of varying complexity to benchmark different aspects of its performance. when possible we compared jitterbug to retroseq, the only tei detection software that also uses standard bam format, and according to its authors performs better than its predecessors  <cit> .

identification of homozygous teis in arabidopsis using real reads and a simulated reference
in order to evaluate the performance of jitterbug for identification of homozygous teis, we designed an experiment in which we should detect as insertions in a sample elements deleted from the corresponding reference. we wished to use real reads  in order to more closely emulate the complexity of sequencing data and the noise in mapping signatures. for this, it is necessary to have re-sequencing data of an assembled reference genome. this is the case for the model plant arabidopsis thaliana, which has a high-quality assembled genome  and publicly available re-sequencing data for the reference line, col- <dig>  <cit> . in this experiment we mapped the col- <dig> paired-end sequencing data to a modified reference in which  <dig> annotated tes of different sizes and belonging to the different te classes were deleted, and should thus be detected as insertions in the sample.

the raw, unfiltered results based solely on clusters of discordant reads contained a high number of false positive  predictions. we evaluated the effect of mapping quality  on the accuracy of predictions and found that poorly mapped reads  are only found in fp , so a quality filter was implemented to exclude these reads from subsequent analyses. even so, while sensitivity of the predictions was high at 89 %  the positive predictive value  was still low at 37 % . we therefore established a set of metrics aimed to discriminate true and false positives  including cluster size, length of insertion interval, the span of upstream and downstream cluster and number of supporting clipped reads. as true positives and fp show different distributions , we determined a set of cutoffs for each of these metrics that eliminated a large portion of the fp without excessive cost to sensitivity .table  <dig> positive predictive value  and sensitivity of jitterbug and retroseq predictions in arabidopsis thaliana semi-simulated dataset . in the case of retroseq, basepair resolution loci were extended and merged, then filtered according to the criteria recommended by the authors. for jitterbug, the filtering was according to generated default parameters 



these values are a function of the characteristics of the sequencing library, and their estimation is included as a feature in jitterbug: reasonable default parameters with which to filter the results are generated on the fly, although the user can modify them subsequently for specific purposes. by applying the described filtering criteria the resulting ppv was raised to 92 % without a substantial decrease in sensitivity .

retroseq outputs single-nucleotide breakpoint positions, which tend to be found in clusters in the same vicinity, and taken as is show very poor sensitivity and specificity . we therefore extended the predicted breakpoints to 200 bp intervals  and merged the resulting overlaps, then filtered them according to the author’s recommendations. the resulting sensitivity is 88 % and ppv 87 %. retroseq’s sensitivity is slightly better than jitterbug’s but has lower ppv . since the ultimate goal is to be able to make inferences as to the impact of these polymorphisms, we prioritized optimization of ppv over sensitivity, although this depends on the goal of each study and in jitterbug can be adjusted by the user. 93 % of the elements detected by retroseq were also detected by jitterbug, which means that there is not a significant difference in the type of elements that either can detect.

additionally, we tested whether the length of the elements was a factor in their detection by jitterbug, and found an increase in long tes in the false negative set  . we also evaluated the coverage and repetitiveness at the sites of tp and fn insertions. approximately 60 % of the false negatives can be explained by either a lack of coverage at that site, or repetitiveness of the sequence in which the insertion occurred  meaning that false negatives are mostly due to characteristics of the genome itself or the sequencing run, rather than algorithmic efficiency. since most predictions are common to both jitterbug and retroseq, this holds true for both tools.

prediction of tei polymorphisms in ecotypes of arabidopsis thaliana and validation with pacbio data
one of the potential uses of jitterbug is the identification of polymorphic teis within a species, for example in plant varieties different from the one for which an assembled reference is available. to assess the performance of jitterbug in this context we have used it to identify teis in the arabidopsis thaliana ecotype landsberg erecta  compared to the reference arabidopsis thaliana ecotype columbia . we mapped paired-end reads  from ler- <dig>  <cit>  to the col- <dig> reference sequence . jitterbug predicted  <dig> putative tei, of these, 53 % were dna tes and 47 % retrotransposons.

we used publicly available pacific biosciences smrt pre-assembled long reads ) for the arabidopsis thaliana ler- <dig> ecotype  to validate the predicted teis. we aligned the flanking regions  of predicted insertions to the pacbio pre-assembled reads in order to evaluate both the ppv of the tei predictions and the accuracy of the predicted breakpoints . indeed, a gap in the alignment of the col- <dig> sequence to the ler- <dig> pacbio read confirms the presence of an inserted sequence, as well as yields information as to the length and sequence of the inserted element itself. theoretically, the size of detectable insertions depends on the size of the pacbio reads: for an insertion to be validated, there needs to exist a read that spans the inserted sequence and flanking regions. the length distribution of pacbio reads  shows that  <dig>  % of the reads are longer than  <dig>  bp, which taken together correspond to a genome coverage of 3x. this, combined with the fact that  <dig>  % of the annotated tes in the arabidopsis thaliana genome are less than  <dig>  bp long indicates that there is no technical limitation to the length of detectable insertions and that each of these elements should be covered by an average of  <dig> pacbio reads long enough to detect the longest elements. of the  <dig> predicted insertions, the anchoring regions of  <dig>  sites could be aligned to at least one pacbio read, while the remaining  <dig> sites without coverage were excluded from further analysis. of the  <dig> accessible sites  <dig>  presented a median gap of more than 200 bp and for which the inserted sequence shows significant similarity  to a known te sequence  . the length distribution of the inserted sequence for validated tei  shows that mean size of the inserted sequences is 2800 bp, the largest inserted te being ~14000 bp long and the smallest 216 bp.table  <dig> a) summary of insertion sites independently validated with pacbio long reads for predictions generated by jitterbug and retroseq. b) comparison of validated tei loci predicted by jitterbug and retroseq



upon analyzing the inserted sequences, we determined that jitterbug correctly predicted the te family of the inserted element in 96 % of the cases, and of these,  <dig>  % were the most similar copy within that family, as identified by blast .table  <dig> the inserted sequences recovered from the alignments with pacbio reads were aligned with blast to the sequences of annotated tes and the best hit taken as the annotated element most similar to that inserted. table  <dig> describes the percentage of tei which call the family and/or name of that best hit te



the gap position in the alignment allows us to assess the accuracy of the predicted insertion site. transposases and integrases of dna transposons and retrotransposons usually cleave the two dna strands at different positions, generating a staggered cut at the target site. after insertion, the repair of the single-stranded overhang on either side of the insertion will generate a target site duplication . therefore, depending on which strand is taken as reference, either the 5′ or the 3′ end of the target site, or even the whole target site sequence, could be considered as the insertion site from a biological perspective. in the case of a tsd, both alignment methods  generate an overlapped alignment . indeed, the sample contains the target site twice and reads aligning to the forward strand will clip at the 3′ end of the tsd, whereas reads aligned to the reverse strand will clip at the 5′ end of the tsd. jitterbug reports the position with the highest softclipped support as the breakpoint, which could be either the 5′ or 3′ side, while alignment of the pacbio reads with blat consistently reports the 3′ end of the tsd as the breakpoint . hence, in the case of a correctly called tei, the discrepancy between the two positions is expected to be either  <dig> or the length of the tsd. we assessed the distance between the breakpoint predicted by jitterbug and that predicted by the alignment  and found that  <dig> of the  <dig> alignments  gap exactly at the predicted breakpoint, and additional  <dig> are within 6 bp , while only  <dig> alignments gap more than 100 bp from the predicted site. overall, the breakpoints predicted by jitterbug were highly accurate with a median of 1 bp difference with the breakpoint predicted by the alignments. these observations are consistent with the expected distance being either  <dig> or the length of the tsd. in the case that there are several pacbio reads overlapping the insertion site one would expect all of the alignments to concord in the insertion site and length of the inserted element . we evaluated the consistency of breakpoints over the set of pacbio reads corresponding to each tei locus by measuring the distance between breakpoints over the set of alignments and their standard deviation . of the  <dig> tei  <dig> could be aligned to  <dig> or more reads and most of the alignments are highly consistent in their breakpoint position, with variation close to null. predicted tei sites greatly differing from the pacbio breakpoint tend to show a high variation between pacbio reads as well, indicating that these sites allow for multiple correct  alignment possibilities due for example to tandem or simple sequence repeats at the insertion site.

for comparison, we used retroseq to predict teis in the same dataset and validated these predictions using ler- <dig> pacbio reads as described above. retroseq predicted  <dig> tei, which we padded by 100 bp up-and downstream and merged, resulting in  <dig> non-redundant predicted tei. of these,  <dig>  sites align to at least one pacbio read. however, pacbio reads can be aligned without gap across the majority of the predicted tei sites, and only  <dig>  of the predicted teis spanned by pacbio reads were validated using the same criteria used for jitterbug . of these,  <dig> reside in an annotated te sequence, and therefore their interpretation is ambiguous. tes can indeed transpose as nested insertions, but from a technical point of view it is not clear to discern whether this gapped alignment is due to an inserted sequence, a mis-assembly of the reference or an ambiguous alignment to the pacbio reads , nonetheless, we counted these as correct. in order to evaluate breakpoint accuracy, we used the non-padded tei predictions, which align to  <dig> or more pacbio reads  . only  <dig> correspond exactly to the breakpoint predicted by the alignments and 20 % were found to be within 6 bp, the median distance to the alignment gap position being 25 bp. the predicted tei sites greatly differing from the pacbio breakpoint tend to show a high variation between the alignments of the pacbio reads as well . the larger proportion of predictions showing high variation between alignments is consistent with the fact that many reside in repeats. there was little overlap between the tei predicted by the two tools , and most of the tei unique to retroseq were nested in annotated tes. we used repeatmasker  to assess the repetitiveness of the sequences surrounding the tei loci predicted by the two tools and found that within a 2000 bp window around the tei locus, 80 % of bases were masked for tei predicted by retroseq, compared to 10 % for jitterbug .

this experiment conclusively demonstrates, without resorting to a simulation, that jitterbug is able to identify tei with very high ppv and that the breakpoint positions are highly accurate. jitterbug is substantially more precise than retroseq in all regions  that can be ascertained by pacbio long read technology, i.e. that pacbio reads can be reliably aligned to.

we have made the design decision that jitterbug only predicts teis in non-repetitive regions, and this restriction is partially responsible for the discrepancy between the predictions of jitterbug and retroseq. this is a choice made to ensure specificity, and does not present a limitation when searching for tei affecting phenotype as the impact of a nested te insertion is likely minor compared to that of the already present te. moreover, given the currently available sequencing methods, the sensitivity and specificity in highly repetitive and centromeric regions can not be ascertained, even when using the technology providing the longest reads to date.

identification of heterozygous teis in human genomes using simulated reads
one of the key features of jitterbug is the capacity to determine the zygosity of teis. this is useful in determining the prevalence of a tei in population studies and in identifying somatic mutations in plants and animals. it is also useful in analyzing inheritance patterns in parent–child trios , and estimating the clonality  of mosaic te insertions in cancer samples.

in order to test the ability of jitterbug to detect heterozygous teis and the accuracy of the allelic frequency prediction in the human genome, we designed a simulated dataset by generating simulated reads from a modified hg <dig> reference sequence. this choice was made since a simulation using real re-sequencing data similar to the one described above for arabidopsis thaliana was not feasible. indeed, the simulation of heterozygous insertions requires, in addition to the assembled reference and the re-sequencing reads, an independent re-sequencing dataset from the same genotype to ensure that false positive predictions are not actually a true but un-assembled allele of the reference genome. as this combination of datasets is currently not available for human we generated a modified reference sequence from the human reference genome hg <dig>  by inserting a representative set of te sequences at random locations, excluding already annotated tes and regions of ns.

approximately half of the insertions were simulated as homozygous, and the other as heterozygous. we then simulated reads from the modified reference using dnemulator  <cit> , which takes care to mimic the expected distribution of sequencing errors . reads were generated at 10x, 20x and 40x coverage depths, and mapped to the original reference sequence using bwa. though sequencing errors were taken into account, simulated reads are different from reads produced by real sequencing runs as local coverage variations, bias due to gc content and other genome-specific biases are typically not perfectly simulated. therefore the results of this benchmark are potentially better than what is expected for real data.

as in the other analyses, we ran retroseq as well as jitterbug in order to compare their performance, and the predicted insertions were compared to the simulated ones in order to evaluate ppv and sensitivity . jitterbug shows a ppv of >99 % at all coverage levels, and sensitivity increasing with coverage from 82 % to 89 %. retroseq’s sensitivity also increases with coverage, from 39 % to 84 %, however the ppv decreases with increased coverage, from 98 % to 91 %. the sensitivity estimates for both tools on simulated human data are comparable to the estimates for arabidopsis thaliana col- <dig> using real reads, while the ppv is markedly better, an effect we attribute to the inability of simulations to reflect difficult rearrangement constellations and sequencing data biases. jitterbug’s breakpoints are accurate within 20 bp, while retroseq breakpoints are accurate within 400 bp . this is consistent with the previously determined breakpoint accuracy based on alignments of predicted tei sites to pacbio reads . on the 40x coverage dataset and an 8cpu, 16g ram system, jitterbug runs in 7 min, and retroseq in 3 h 40 min .table  <dig> accuracy of jitterbug and retroseq at detecting homozygous  and heterozygous  tei, and predicting their zygosity, in simulated human dataset 

fig.  <dig> accuracy of breakpoints predicted by jitterbug  and retroseq  at 10x, 20x and 40x coverages in hg <dig> nd simulation. jitterbug reaches maximum sensitivity by padding breakpoint positions by 20bp, retroseq reaches maximum sensitivity with 200bp padding



this simulation includes both heterozygous and homozygous insertions, and jitterbug predicts the correct zygosity in nearly all cases   with the predicted allelic frequency of heterozygous insertions following a distribution centered around  <dig> , which narrows with increasing coverage . retroseq is expected to estimate the zygosity of insertions in a later version, however personal communication with the author confirmed that this option is not yet implemented. therefore we were not able to compare the performance of zygozity estimation in this context. we conclude that, for jitterbug, genome size and complexity has no measurable effect on tei prediction accuracy in unique regions of the genome, that heterozygous teis can be readily detected and zygosity of teis can be accurately predicted given adequate coverage.fig.  <dig> distribution of predicted zygosity for heterozygous  and homozygous  insertions, at 10x, 20x and 40x coverage in hg <dig> nd simulation. homozygous insertions are consistently  predicted as such . the zygosity of heterozygous insertions is a distribution centered around  <dig> , the correct frequency, which narrows with increasing coverage



prediction and experimental validation of teis in a  <dig> genomes project trio
testing the performance of ngs-based variant predictions in real human data is hampered by the availability of a gold standard dataset. however, experimental validation of predictions is available for some individuals from the  <dig> genome project  that have been studied by deep sequencing. here we compare the results of jitterbug with pcr-validated teis that were previously predicted in various 1000gp samples.

hormozdiari and collaborators  <cit>  predicted teis in  <dig> individuals from the 1000gp dataset using variationhunter, specifically looking for alu insertions. these consisted of one trio from yoruba , one individual from the ceu population , one from korea , one han chinese  and two from khoisan . amongst these individuals  <dig> sites  were chosen for experimental verification by pcr amplification, totaling  <dig> experimentally determined insertions. this allowed us to determine both fp  and fn  for both jitterbug and variationhunter. jitterbug outperforms variationhunter in both ppv and sensitivity over the  <dig> experimentally validated insertions . furthermore,  <dig> sites, corresponding to  <dig> insertions, were selected in the yri trio to assess zygosity by pcr using allele-specific primer pairs to detect both the insertion and the reference allele. jitterbug correctly predicts the zygosity in all cases, showing that the high accuracy jitterbug achieved on simulated human data is preserved with real data.table  <dig> comparison of positive predictive value  and sensitivity of pcr-validated tei for jitterbug and variationhunter in  <dig> gp samples analyzed in hormozdiari et al. 2011



identification of tei in subclonal fractions of tumors using simulated reads
identifying somatic teis as those found in cancer samples holds specific challenges, which we have addressed with jitterbug. the first challenge being that tumor samples are often collected from heterogeneous tissues, and therefore teis might be found in low frequency in the sample. as these events have weak alignment signatures , they can be more difficult to identify and to distinguish from background noise. the second challenge is properly exploiting pairs of matched tumor and normal sequenced samples  to correctly distinguish true somatic insertions in the tumor sample from germline teis that have been missed by the tei prediction in nd, by assessing the likelihood that the tei exists in the normal tissue.

we generated a simulated tumor-normal dataset using the simulation in the human genome described above  as nd. the td sample was then simulated by adding  <dig> insertions at 25 % allelic frequency to the same modified reference to simulate the case of low cell fraction tei . reads were generated at 10x, 20x and 40x for the simulated td sample as described above. we identified tei in the simulated td sample with jitterbug, as well as with retroseq for comparison. both jitterbug and retroseq were able to recover around 90 % of lcf-teis at 20x and higher coverage, however only jitterbug was able to recover a fraction  of these at low  coverage . jitterbug predicts the allelic frequency of these insertions as a distribution centered around  <dig> , the expected frequency .table  <dig> percentage of low-frequency tei  detected by jitterbug and retroseq at various coverages

fig.  <dig> distribution of predicted zygosity for germline heterezygous  and somatic low cell frequency  insertions in simulated td sample at 40x coverage. these distributions are centered around the correct frequencies:  <dig>  and  <dig> , respectively



distinguishing somatic and germline teis using simulated matched tumor-normal pairs
the majority of teis called in a patient td sample are expected to already be present in the matched normal  genome, therefore true tumor somatic teis can only be called by comparison to the nd sample results. furthermore, there is an overlap between the allelic frequency distributions of the somatic lcf-tei and the heterozygous germline tei  , thus low frequency tei cannot be called as somatic simply based on their low allelic frequency.

the commonly applied strategy for identification of tumor-specific structural variations is based on comparing the set of predictions in a td and its matched nd sample, retaining as putative tumor-specific variations those that are unique to the td sample. however, these might be falsely called as tumor-specific if the corresponding insertion in the nd sample was a false negative  due to, for example, local low coverage. to correctly call somatic tei and discard germline tei, one must exploit the alignment information supplied by the matched normal analysis, even in regions where a tei has been called in td but not in nd, in order to avoid that a false negative in nd leads to a false positive somatic tei prediction. as discordant reads are indicative of a te insertion, the presence of such reads in the normal sample at the locus where a tei was predicted in the td sample might enable us to discern fn from true negatives , thus enabling to classify insertions unique to the td sample as germline or somatic, respectively. similarly, low coverage in the nd sample could indicate a fn at that locus. we have implemented a module that performs this comparison and examines the genomic location of the putative tumor-specific insertions for coverage and presence of discordant reads in the nd sample.

we have tested this module on the simulated nd/td pair described above. of the insertions unique to the td sample, some are truly somatic and others are germline insertions, but were not identified in nd, corresponding to fn. consistent with previous results the number of fn decreases with coverage, as does the number of incorrectly called tumor-specific somatic insertions. we plotted the percentage of discordant reads found in a 400 bp window around the insertion site in the nd sample, for both the true somatic insertions  and the germline tei falsely called as somatic  . the fraction of discordant reads is consistently higher in the germline insertions falsely called as somatic than in the true somatic ones. using a cutoff of minimum 2 % discordant reads to call an fn in nd, one can discard 100 % of the germline predictions at 40x without losing any true somatic ones . this criterion is useful at all coverage levels, e.g. discarding 90 % of germline predictions at 10x. most cancer genomes are sequenced at greater than 30x coverage, meaning that the discriminative power of combined tumor/normal comparison followed by fn identification and filtering according to discordant read percentage at the corresponding nd locus is highly reliable. retroseq does not provide the functionality of distinguishing somatic and germline teis based on td/nd pairs and could thus not be compared for this purpose.fig.  <dig> boxplots representing the percentage of discordant reads found in a 200bp window around the insertion site of putative somatic insertions . at 40x coverage, it is possible to discriminate between the truly somatic ones  and the germline ones , at lower coverage it is possible to distinguish s and g to a large extent



CONCLUSIONS
jitterbug addresses the increasingly evident need of including transposable element analysis into standard structural variation studies based on ngs. jitterbug is an accurate, fast and user-friendly tool to predict tei using mapping signatures of paired-end sequences and clipped reads, requiring only a bam file and a gff annotation of tes in the reference genome. jitterbug can be run either on a cluster or a local workstation, and is parallelizable according to the computational resources available. it has been designed to call either germline tei in a single sample or exploit tumor/normal paired datasets to identify somatic insertions. it is able to detect low-frequency insertions as those found in heterogeneous tissue or tumor samples and predicts the zygosity and/or variant allele frequency of the insertion. finally, the fact that jitterbug uses genome annotations to define potentially mobile sequences makes it adaptable to other analyses such as searching for insertions of viruses, reporter constructs or other types of sequences.

we have extensively tested jitterbug on both simulated and real datasets with independent validations based on pacbio sequencing as well as pcr, and conclude that we can predict tei with high sensitivity and ppv, accurately determine their allelic frequency and are able to correctly call somatic insertions in paired tumor/normal datasets at low cancer cell fraction. we benchmarked it against retroseq, chosen as it also runs in the standard bam format. jitterbug does outperform retroseq in all the experiments, and offers additional features such as exploiting clipped-reads, zygosity prediction and processing matched tumor/normal pairs. however it is worth noting that their performance was most similar on fully simulated datasets  and diverged most when using real data validated by pacbio. this highlights the fact that simulated datasets cannot fully represent the constellation of noise and variants present in a true biological sample, and that independent validation is necessary to correctly assess the sensitivity and ppv of an algorithm. we suggest the need to develop an independently validated, gold-standard dataset for benchmarking as a necessary resource for the development of sv detection algorithms, and consider the pacbio-based evaluation for arabidopsis thaliana ler- <dig> teis developed in this study as a first step in this direction. looking forward, we are actively developing jitterbug to utilize split-read signatures such as those generated by bwa-mem, thus improving performance at low coverage or for inserted elements that are smaller than the read length .

