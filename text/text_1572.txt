BACKGROUND
advances in the genome sequencing technology have created a vast amount of sequence data and completed genomic sequences. identification of all genes is one of the major objectives of a genome sequencing project. in eukaryotic genomes, the detection of a coding region also depends on the precise identification of the exon-intron structures. however, the vast length and structural complexity of sequence data makes it a very challenging task. recent genome analysis shows that the human genome contains approximately  <dig> billion base pairs and  <dig> â€“ <dig>  protein-coding genes  <cit> . however, it was statistically estimated that the number of genes in human genome should be around  <dig>   <cit> . this difference shows that either a large number of genes are yet to be identified or there are many alternative splicing events yet to be detected  <cit> . various computational methods have been proposed in the last decade for the identification of eukaryotic genes. most of those methods perform well to a certain extent and have their own limitations. so despite of many years of intensive research in this area, the overall performance of the gene prediction algorithms is still not satisfactory  <cit> .

most of the eukaryotic protein coding genes consist of introns and exons. the exons are the protein coding region of a gene and they are interspersed with intervening sequences of introns. introns are termed as protein non coding regions as their biological significance is not well known yet. the borders between introns and exons are termed as splice sites. the splice site in the upstream part of an intron is called the donor splice site  and the downstream part is termed as the acceptor splice site . the acceptor and donor splice sites with consensus ag  and gt  respectively are known as canonical splice sites as shown in figure  <dig>  these canonical acceptor and donor splice sites are recognized by the major class, or u2-type spliceosome, which is universal to eukaryotes  <cit> . the non canonical splice sites are those with minor consensus such as gc and ac and are recognized by the minor class or u12-type spliceosome, which may not be present in some organisms  <cit> . approximately 99% of the splice sites are canonical ag/gt splice sites  <cit> . as ag and gt represent possible acceptor and donor splice sites, every ag and gt of a dna sequence is a candidate acceptor or donor splice site and they need to be classified as either a real  splice site or a pseudo  splice site.

in eukaryotes, introns are removed from gene transcripts  in a biological process known as pre-mrna splicing. this is an enzymatic reaction that involves a large multi component ribonucleoprotein catalytic complex known as spliceosome. mass spectrometry analysis is a technique to identify the spliceosome and splicing factors that participate in the pre-mrna splicing. in  <dig>  around  <dig> splicing factors were identified  <cit> . however, recent improved and more sensitive mass spectrometers and sample preparation techniques found more than  <dig> polypeptide that participate in the splicing which may include some more complex mechanism beyond our current knowledge of pre-mrna splicing mechanism  <cit> .

various computational methods have been developed for splice site detection, and they can be grouped into several categories including the probabilistic approaches  <cit> , the neural network and support vector machine approaches  <cit> , the methods based on discriminant analysis  <cit>  and the information theoretic approaches  <cit> . these methods are based on seeking the consensus patterns or features and try to identify the underlying relationships among nucleotides in a splice site and the surrounding region. neural networks and support vector machines  learn the complex features of neighbourhoods surrounding the consensus di-nucleotides ag/gt by a complex non-linear transformation. probabilistic models estimate position specific probabilities of splice sites by computing likelihoods of candidate signal sequences. the discriminant analysis uses several statistical measures to evaluate the presence of specific nucleotides, recognizing the splice sites without explicitly determining the probability distributions.

in the past, researchers also attempted to identify splice sites using the weight matrix method  inspired by the presence of apparent consensus ag and gt in the splicing junctions  <cit> . wmm was also adopted in methods netplantgene  <cit>  and nnsplice  <cit> . later, salzberg et al. and zhang et al.  <cit>  achieved a good splice site prediction accuracy using a linear first order markov model . however, mm <dig> alone cannot model the complex higher-order dependencies that exist among the nucleotides in both acceptor and donor splice sites. the unavailability of high quality training data encourages researchers to design models which can learn the complex nucleotide dependencies efficiently from the limited available training data. to overcome the limitations of mm <dig> without a high quality and large training dataset, burge et al. proposed the genscan  <cit>  method. genscan is a computational method based on the maximal dependence decomposition  algorithm, which is a decision tree process that captures dependencies among nucleotides. the mdd is designed to capture the most significant dependencies between adjacent and non-adjacent nucleotides. even though the bayes network model  <cit>  and mdd are complex splice site detection methods, they do not produce a dramatic improvement in splice site detection with respect to simpler models that assume dependencies only between adjacent positions. it has been suggested that a significant improvement in the detection of splice sites is possible if one of the base statistical models, such as wmm, mm <dig>  mdd etc., is combined with other signal/content methods  <cit> . genesplicer is a method of this category  <cit> , where second order markov models  are combined with mdd. similarly, rajapakse and ho et al. <cit>  introduced a more complex splice site prediction system which combines mostly mm <dig> and backpropagation neural networks . this approach shows better prediction accuracy than genesplicer but requires longer sequence windows for the training. however, the use of backpropagation neural network is already computationally expensive and with the inclusion of second order markov models for data pre-processing, the computational complexity increases even more.

wmm, mm <dig>  mm <dig>  and mdd are the most popular methods employed for splice site detection and they require the manual selection of information source. in contrast, machine learning technique such as svm has the advantage of inferring an optimal classifier from the training data. svm has been used to classify splice site data as reported in  <cit>  with limited success. mostly, these approaches employ svm to compute a classification boundary between true and false  splice sites. for this, a candidate splice site sequence is represented as a feature vector, with each feature containing some information about the candidate splice site and its context in the sequence.

markov models are being used for extracting sequential relationships that enables the inclusion of biological knowledge to differentiate compositional differences of nucleotides in a splice site and it's surrounding regions  <cit> . in this work, it is shown that a simple mm <dig> can be effectively combined with a classifier such as svm, to extract sequential information with a reduced computational complexity. several simulations have been performed with well-known and publicly available splice site data sets. results show that our proposed mm1-svm method produces a better classification performance and identifies acceptor and donor splice sites more efficiently than other existing methods.

RESULTS
best pre-processing model selection
we used several pre-processing methods including mm <dig>  mm <dig>  wmm <dig>  and wmm <dig> with svm classifiers for the identification of splice site. the goal is to identify the best pre-processing method that enhances the classification accuracy of the svm. we used nn <dig> acceptor and donor dataset to compare the prediction accuracies of mm0-svm, mm1-svm, wmm0-svm, and wmm1-svm methods. as mm <dig> and wmm <dig> imply the same model, we refer the integration of these two models with svm as wmm0/mm0-svm.

classification performance comparison
to further verify the prediction accuracies of the mm1-svm method we used a larger dgsplicer dataset, and compared the performance with mdd method  <cit>  as shown in figures  <dig> and  <dig>  both mdd as well as mm1-svm perform well for acceptor splice sites; however, in the identification of donor splice sites, mm1-svm shows a superior performance.

discussion
in this study, we presented a new splice site detection method that can identify acceptor and donor splice sites in dna sequences. our proposed mm1-svm method shows a better prediction accuracy in all cases when tested with two large and well curated dataset.

markov models, wmms, and classifiers such as svms are well studied methods and have been successfully applied not only in the areas of splice site detection but also in other areas in bioinformatics. we observed that the performance of these methods as standalone applications is not satisfactory. however, their performance may be improved when they are integrated with each other. even though svm is a well established algorithm and it is popular in classification and regression tasks, its performance in genome signal identifications  is not as good as expected. this is largely due to the way genome sequence data is presented to them. mostly, sequence data are presented directly to a classifier using a binary encoding technique  <cit> . it was observed in our study that classifiers cannot properly discriminate true and false signals based on the plain sequence data. this suggets that classifiers such as svm require more information than plain sequence data to make a satisfactory classification. we showed that a probabilistic encoding scheme of genome sequence data can help svm to achieve better performance due to the added nucleotide dependency information. three different probabilistic pre-processing schemes are presented in this paper namely, mm <dig>  wmm0/mm <dig>  and wmm <dig>  all the pre-processing models help to improve the performance of the svm due to the added nucleotide dependency and positional information. among all the pre-processing models, mm <dig> is observed as most useful for svm. a mm <dig> models the first order sequential relatioships of nucleotides in terms of probabilistic parameters and a svm takes these parameters as its input. through its highly complex non-linear transformation, a svm transforms the lower order sequential relationships into a higher order one and produces the prediction. wmm <dig> preprocessing also improves the performance of a svm. however, the performance of wmm1-svm is not as good as mm1-svm because wmm <dig> only takes into account the observed frequencies of pair of nucleotides and do not necessarily model the dependencies between nucleotides. even though it has been suggested that a method which is able to capture higher order sequential relationships would perform better, its successful implementation is largely dependent on the availibility of large dataset as as they require the estimation of a large number of parameters. moreover, the modeling of higher order dependency is also computationally expensive as the computational cost increases exponentially with the increase of the order of a markov model. in this paper we showed that the integration of low order markov models such as a mm <dig> with the classifiers such as a svm can in effect produce a higher order markov model. however, the tuning of svm parameters is still a challenge if the size of training dataset is not balanced between true and false data and there is a chance that a svm would overfit the data. we have ensured that the svm is not overfitted in this study by using the cross validation technique. in this study, we mainly used svm with a polynomial kernel. however, svm with linear and rbf kernels are also implemented for performance comparison. this comparison can be found in the additional file:  <dig> 

our proposed method is faster than the loi-rajapakse  <cit>  method as it requires calculation of fewer markovian parameters . also, from our simulations  with radial basis functions network , standalone svm , and standalone backpropagation network , we concluded that the proposed method is the fastest.

in this paper we only studied the identification of canonical splice sites which forms around 99% of all splice sites in eukaryotes. however this method can also be adjusted to identify the remaining and less frequent 1% non-canonical splice sites as well. the accuracy of splice site prediction of our proposed method suggests that this method can be useful in identifying genes in genomic sequences. the proposed method can be applied to genome sequence data for the identification of regulatory elements such as gene translation initiation sites  <cit> . however, the size of the data may need the use of training data reduction algorithms  <cit>  unless large scale computing resources are used. if the svm involves a rbf kernel, it is also possible to interpret the trained classifier as a rule based system  <cit> .

methods
overview of the proposed method
the proposed method consists of two stages: a first order markov model  pre-processing and a support vector machine  with polynomial kernel. in this study, a mm <dig> aims to learn the conserved sequence pattern at upstream and downstream regions surrounding the splice site motifs . firstly the mm <dig> processes the input sequence data and generates some position specific probabilistic parameters . these probabilistic parameters are then fed into a svm with polynomial kernel, whose outputs are used to make prediction as illustrated in figure  <dig> 

markov model pre processing of splice site data
first order markov model
each nucleotide in a dna sequence corresponds to a state in the markov chain used, whose observed state variables are drawn from the alphabet Î©dna = {a, c, g, t}. let us define an arbitrary sequence of length l :{s <dig>  s <dig> ...., sl}, where {si âˆˆ {a, c, g, t}, âˆ€iâˆˆ{ <dig> ....,l}, then the nucleotide si is a realization of the i th state variable of a markov chain, and state transition is only allowed from state i to its adjacent state i +  <dig>  hence, the model consists of states ordered in a series. it evolves from state si to si+ <dig> and emits symbols from the alphabet Î©dna, where each state is characterized by a position-specific probabilistic parameter. assuming a markov chain of order k, the likelihood of a sequence given the model is:



where the markovian probability pi = p denotes the conditional probability of a nucleotide at location i given the k predecessors. such a model is characterized by a set of parameters:

{p: si,si- <dig> ....,si-k âˆˆ Î©dna,i =  <dig> ,...,l}.

in the proposed method, a mm <dig> is used to model a set of nucleotides in a sequence. the markovian parameters are expressed interms of position-specific first order conditional probabilities :

pi=p. Â Â Â  

the model is then characterized by the set of parameters: {p:si, si- <dig> âˆˆ Î©dna,i =  <dig> ,...l}.

higher order markov model
it is generally accepted that higher order markov models are more efficient in capturing possible interactions among nucleotides surrounding the splice sites  <cit> . however, a larger set of training sequences is required for higher order markov models. for a k th-order markov model, the training set must provide coverage of all possible subsequences of nucleotides of length k + <dig> at every sequence position for the estimation of 4k+ <dig> markovian parameters. the required number of training samples increases exponentially with the order of a markov model. with the limited amount of training data available and the high computational complexity, it often makes the implementation of such models practically impossible.

loi-rajapakse  <cit>  suggested that the sequence should be divided into upstream, signal, and downstream segments. the signal segment is modelled by a mm <dig>  whereas, the downstream and upstream segments are modelled by two mm <dig> models. if the lengths of the signal, upstream, and downstream segments are s, u, and d respectively, then the corresponding conditional probabilities are given by:







if the length of a sequence is l = u + s + d, then the proposed mm1-svm method is required to estimate l4k+ <dig> markovian parameters, where k =  <dig>  on the other hand, loi-rajapakse  <cit>  is required to estimate,  markovian parameters, where k <dig>  k <dig> are the order of the markov models having k <dig> =  <dig>  and k <dig> =  <dig>  it is shown that the output of a multilayer perception  is a polynomial of higher degree over the input variables  <cit> . it is also shown that the likelihood of a sequence given a model m can be approximated by a polynomial of conditional probabilities  <cit> :



classification of mm <dig> output
we applied svm with polynomial kernel to classify mm <dig> encoded splice site data. based on the training, a svm can classify whether a query sequence contains an acceptor site or donor site. the splice site detection problem can be simplified into two binary-classification problems, one for acceptor sites and one for donor sites.

support vector machines
the svm is a canonical machine learning algorithm initially proposed by vapnik  <cit> . it uses a hypothetical space of linear functions in a high dimensional feature space trained with a learning algorithm based on optimization theory. svm classification is an optimization problem given by:





 <dig> â‰¤ Î± i â‰¤ c, i =  <dig> ...,l, Â Â Â  

where, l is the number of training examples, k is the kernel function, x is the input vectors, y is either - <dig> or + <dig> representing two different classes, Î± is the variable to be optimized and c is a trade-off parameter for generalization performance  <cit> . each Î± corresponds to one particular training example and after the training process, only a subgroup of Î± will have non-zero values. this subgroup of Î± and their corresponding training examples are called the support vectors. in this study, two separate svm classifiers are required, one for acceptor and one for donor. the class labels y in the two classifiers would then indicate true  or false sites  for acceptor and donor accordingly. input x would always be a vector of mm <dig> probabilities.

given a query dna segment z, the trained svm classifies based on the decision function:



where v is the set of support vectors.

the kernel function in our classifiers is a second order polynomial:

k =  <dig>  Â Â Â  

where âŒ©Â·âŒª indicates a dot product.

expanding , we obtain



where n is the number of dimensions in vectors x and z, and xi and zi are the i-th element in vectors x and z respectively. substituting  into , the output o becomes a second-order polynomial over z, with the polynomial constants determined by Î± and x of the set of support vectors. since z is a vector of conditional probabilities of a sequence of length l:

z = , 

the output o in its polynomial form resembles equation . such a polynomial of first order conditional probabilities suggests that a svm classifier with the kernel function in  can approximate a higher order markov model. higher order polynomial kernels may also be used considering the trade-off of more complex decision function and larger training time. however, numerical instability often arises when higher order polynomial kernels are used.

dataset
we have conducted several simulations to evaluate the performance of the proposed algorithm using two standard and publicly available splice site datasets.

the first dataset is known as nn <dig>  <cit> , which consists of  <dig> confirmed true acceptor sites,  <dig> confirmed true donor sites,  <dig> false acceptor sites and  <dig> false donor sites collected from  <dig> human genes. each of the pseudo acceptor/donor sites also has ag/gt in the splicing junction but is not a real splice site according to the annotation. the window size for an acceptor is  <dig> nucleotides {- <dig> to +20} with consensus ag at positions - <dig> and - <dig>  this includes the last  <dig> nucleotides of the intron and first  <dig> nucleotides of the succeeding exon. the donor splice sites have a window of  <dig> nucleotides {- <dig> to +8} with consensus gt at positions + <dig> and + <dig>  this includes the last  <dig> bases of the exon and first  <dig> bases of the succeeding intron. the dataset is available at  <cit> . this data set is split into a training set and a testing set. the training data set contains  <dig> true acceptor,  <dig> true donor,  <dig> false acceptor, and  <dig> false donor sites. the test data set contains  <dig> true acceptor sites,  <dig> true donor sites,  <dig> false acceptor sites, and  <dig> false donor sites. figure  <dig> and  <dig> show the two sample logo  <cit>  of nn <dig> acceptor and donor sites. they represent the residues enriched and depleted in the sample. in nn <dig> acceptor dataset, ag is conserved in position  <dig> and  <dig> of the sequences, and for donor splice sites, gt is conserved in position  <dig> and  <dig> of the sequences.

we also used a second dataset named dgsplicer  <cit> . the dgsplicer true dataset is created by extracting a collection of  <dig> real acceptor sites and  <dig> real donor sites from  <dig> annotated multiple-exon human genes from  <cit> . two of the donor splice sites and one acceptor splice site were excluded from the collection to form a set of  <dig> real acceptor sites and  <dig> real donor sites as those three splice sites contained symbols other than a, c, g, and t. also a large collection of  <dig> pseudo acceptor sites and  <dig> pseudo donor sites were collected from  <dig> annotated human genes and used as the false dataset  <cit> . the window size for the acceptor is  <dig> nucleotides {- <dig> to +9} with consensus ag at positions - <dig> and - <dig>  which includes the last  <dig> nucleotides of the intron and first  <dig> nucleotides of the succeeding exon. the donor splice sites have a window of  <dig> nucleotides {- <dig> to +9} with consensus gt at positions + <dig> and + <dig>  which includes the last  <dig> bases of the exon and first  <dig> bases of the succeeding intron. the dataset is available at  <cit> .

model design
the splice site detection problem is divided into two sub problems, namely the acceptor splice site identification and the donor splice site identification. two separate models are created for the identification of acceptor and donor splice sites. for example, for nn <dig> acceptor dataset, one mm1-svm model is created and trained with nn <dig> acceptor training dataset . to evaluate the classification performance of this model, the nn <dig> acceptor test dataset is used. similarly a separate mm1-svm model is trained and tested with nn <dig> donor training and donor test dataset.

model learning
the training of a model was conducted in two stages: the mm <dig> parameters estimation and the svm with second order polynomial kernel training. the training sequences were aligned with respect to the consensus dinucleotides prior to stage one. the estimates of the mm <dig> are the ratios of the frequencies of each dinucleotide in each sequence position as shown in . only the true splice site training sequences were used to create the markov model. the desired output level is set to + <dig> or - <dig> depending on the true or false splice site class label.



we used the libsvm  <cit>  implementation of the support vector machine, which is freely available at  <cit> .

model extension and comparison
to verify the usefulness of our proposed mm1-svm method and to compare its performance with others, we also implemented several other methods that are closely related to the proposed method. we used different pre-processing scheme with a svm and compare their performances. for instance, we combined a svm with the zero order markov model , which is also well known as wmm model. wmm assumes that the probability of observing a certain nucleotide at any position does not depend on the occurrence of any other nucleotides in any position of that sequence. a zero order wmm  is obtained by counting the frequency of each nucleotide in each position. similarly, higher order wmms can be created by counting dinucleotides, trinucleotides etc. literally mm <dig> and wmm <dig> are the same in terms of their working principle. in this study we have created several models including mm0-svm, wmm0-svm, mm1-svm, and wmm1-svm and we applied all the models in splice site identification.

predictive accuracy measures
the classification performance is defined by the sensitivity , specificity , false positive ratio , and false negative ratio  of the model. the sensitivity, also known as true positive rate , is the percentage of correct prediction of true sites and specificity is the percentage of correct prediction of false sites. specificity is the correct prediction of the false sites as defined below:



where, tp, tn, fp, and fn denote the number of true positives, true negatives, false positives, and false negatives   <cit> . all the results in this paper refer to the canonical  splice sites leaving detection of the much less frequent  non-canonical splice sites as a feature to be implemented in the future.

roc analysis
receiver operator curve  analysis is an effective and widely used method of assessing the performance of models  <cit> . it is a graphical representation of sensitivity and specificity of a classification model. roc may also be created from the fpr and fnr of models  <cit> . when a roc is created from the sensitivity  and specificity  of a model, the closer a curve follows the left-hand border and then the top of the border of the roc plot, the more accurate the model  <cit>  . when the roc is created from the fpr  and fnr  of the model, the closer a curve approaches the  point, the more accurate the model .

leave one out cross validation
a five fold cross validation technique is applied to determine the mm1-svm splice site prediction accuracy and to compare the predictive accuracy with other standard published methods. the cross validation is performed by randomly partitioning the data into five independent subsets. each of the subsets does not share any repeating sequences. each model was trained by selecting four of the subsets  and was tested on the fifth unused subset. finally, we took the average of the five prediction accuracies as the final prediction measure of the model.

proper window selection
chen et al.,  <cit>  have conducted an extensive study for selecting a proper window size for the acceptor and donor splice site sequence. based on the compositional characteristics of nucleotides and the presence of consensus in the sequence, they suggested an optimal length for the donor and acceptor splice site for the dgsplicer dataset. the study suggests a window from  <dig> bases upstream to  <dig> bases downstream  for exon/intron boundary best represents the donor splice site, and a window from  <dig> bases upstream to  <dig> bases downstream of the intron/exon  best represents the acceptor splice site . for the dgsplicer dataset, we used the same acceptor and donor window length as suggested by  <cit> .

CONCLUSIONS
in this paper we presented a new method for the identification of eukaryotic gene splice sites. unlike many existing methods, our proposed method is simple and effective. this method can be applied to identify splice sites in a large scale in newly sequenced genomes. moreover this scheme can also be employed in the identification of other regulatory motifs in dna sequences.

availability
codes used in implementing the present method is freely available for academic use at  <cit> 

authors' contributions
a. b. provided the conception and design of this study, implementation of the method as well as its analysis. b. c., s. k. h., and j. l. contributed to the design of the study and the interpretation of the results. all the authors contributed to the writing and critically revising the manuscript.

supplementary material
additional file 1
additional file contains two figures showing the performance comparison of svm with polynomial, linear and rbf kernels in terms of nn <dig> acceptor and donor dataset. it also contains two tables showing the sensitivity and specificity values of different methods.

click here for file

 acknowledgements
we thank the anonymous reviewers for their comments and suggestions. we acknowledge dr. chih wei hsu for his valuable comments regarding svm and also for providing the libsvm implementation. we thank professor chung-chin for providing the dgsplicer dataset, dr. hsu for proofreading of this manuscript and dr. sen ling tan for his valuable discussions. this research is partially supported by australian research council .

this article has been published as part of bmc bioinformatics volume  <dig>  supplement  <dig>  2006: apbionet â€“ fifth international conference on bioinformatics . the full contents of the supplement are available online at .

figures and tables
