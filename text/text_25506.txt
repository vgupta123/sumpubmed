BACKGROUND
increasing number of newly discovered non-coding rnas  with huge functional variety has revealed the substantial role that rnas play in living organisms  <cit> . the function of ncrnas is largely ascribed to their folding structure, which is often better conserved than their primary sequence. therefore, it is important to consider this structural aspect in the comparative analysis of rnas, and an accurate structural alignment algorithm can be helpful in decoding the function of ncrnas and discovering novel ncrna candidates.

to accurately align rna sequences, one should take their secondary structure similarities into account, in addition to their sequence homologies. simultaneous inference of both the consensus secondary structure and the alignment of rna sequences is a computationally demanding task. sankoff  <cit>  proposed an algorithm for structural alignment of a set of unaligned rna sequences. however, the high complexity of o in time and o in memory for n sequences of length l makes this algorithm impractical even for a small number of sequences. hence, several studies have proposed various approximations to the sankoff algorithm  <cit> . algorithms such as foldalign  <cit> , dynalign  <cit> , and stemloc  <cit>  employ several heuristics to impose constraints on the size or shape of substructures, thereby, reducing the search space. murlet  <cit> , raf  <cit> , parts  <cit> , stral  <cit> , locarna  <cit> , centroidalign  <cit> , and pmcomp  <cit>  exploit probabilistic approaches by implementing base-pairing probabilities in a restricted sankoff-style framework or employing the needleman-wunsch algorithm with structural scores. although these variants of sankoff’s algorithm significantly reduce the time and memory complexities, they still cannot directly find the structural alignment of multiple sequences. instead, these algorithms build up the multiple sequence alignment  by progressively combining pairwise structural alignments along a guide tree.

in addition to these sankoff-style algorithms, several studies have recently investigated fast techniques to find the common structure of long rna sequences. for example, mxscarna  <cit>  progressively computes the pairwise structural alignment of a pair of stem candidates obtained from the base-pairing probability matrices. r-coffee  <cit>  uses a library of input alignments to progressively compute the alignment by incorporating secondary structure information. lara  <cit>  and marna  <cit>  employ two different heuristic approaches to compute all pairwise structure alignments and pass this information, as a primary library, to t-coffee  <cit> , a progressive alignment technique. mafft-xinsi  <cit>  uses a four-way consistency objective function to progressively build a structural alignment by combining pairwise alignments predicted by an external program.

despite its computational efficiency, the progressive structural alignment approach tends to propagate the errors made in the early stages throughout the entire process, which may significantly degrade the quality of the final alignment. even with the incorporation of additional heuristics, such as iterative refinement and consistency transformation, the fundamental shortcoming of progressive technique remains. a number of non-progressive structural alignment schemes have been proposed to address this problem  <cit> .

rnasampler  <cit>  predicts the common structure of multiple rna sequences by probabilistically sampling aligned stems based on the stem conservation score. master  <cit> , another sampling approach, iteratively improves both sequence alignment and structure prediction by making small local changes using simulated annealing. stemloc-ama  <cit>  employs sequence annealing to construct the multiple rna alignment using the base alignment probabilities estimated by the sankoff algorithm with structural considerations.

recently, several studies have highlighted the effectiveness of the maximum expected accuracy  approach for aligning biological sequences  <cit>  and for predicting the consensus secondary structure of rnas  <cit> . mea tries to maximize the expected number of correctly aligned bases. this is especially useful for handling sequence analysis problems when the probability of the optimal alignment is low.

in this paper, we introduce picxaa-r , a novel non-progressive algorithm that efficiently finds the maximum expected accuracy structural alignment of multiple rna sequences. picxaa-r greedily builds up the structural alignment from sequence regions with high local similarities and high base-pairing probabilities. to simultaneously consider both the local similarities among sequences and their conserved secondary structural information, we incorporate three types of probabilistic consistency transformations. these transformations modify both the inter-sequence pairwise base alignment probabilities and the intra-sequence base-pairing probabilities using the information from other sequences in the alignment. for a fast and accurate construction of the alignment, we propose an efficient two-step graph-based alignment scheme. in the first step, we greedily insert the most probable alignments of base-pairs with high base-pairing probability. in this way, we build up the skeleton of the alignment using the structure information of the rna sequences. next, we successively insert the most probable pairwise base alignments into the multiple structural alignment, as in picxaa  <cit> , a multiple protein sequence alignment algorithm that we have recently proposed. this step can effectively grasp the local sequence similarities among the rnas. finally, we use a discriminative refinement step to improve the overall alignment quality in sequence regions with low alignment probability. extensive experiments on several local alignment benchmarks clearly show that picxaa-r is one of the fastest algorithms for structural alignment of multiple rnas and it consistently yields accurate results in comparison with several well-known structural rna alignment algorithms.

methods
picxaa-r extends the idea of picxaa, the multiple sequence alignment algorithm that maximizes the expected number of correctly aligned bases, to the structural alignment of rna sequences. picxaa-r uses a greedy approach that builds up the alignment from sequence regions with high local similarities and high base-pairing probabilities. thus, it avoids the propagation of early stage alignment errors, usually observed in progressive techniques. the algorithm employs a probabilistic framework by utilizing both the inter-sequence base alignment probabilities and the intra-sequence base-pairing probabilities. the following subsections provide an overview of the proposed algorithm.

preliminary
to align m rna sequences in a set s = {s <dig>  ⋯ , sm}, we need to compute the following probabilities.

• pa: for each pair sequence x, y ∈ s, pa is the probability that bases xi ∈ x and yj ∈ y are matched in the true  alignment. we can compute the posterior pairwise alignment probabilities using the pair hidden markov model   <cit> .

• pb: for each sequence x ∈ s, pb is the probability that two bases xi, xj ∈ x form a base-pair. we can exploit different approaches, such as the mccaskill algorithm  <cit>  or the contrafold model  <cit> , to compute the base-pairing probabilities.

we use these probabilities in the following probabilistic structural alignment scheme.

consistency transformation
here, we use three types of probabilistic consistency transformations to modify the pairwise base alignment probabilities and base-pairing probabilities using the information from other sequences in the alignment. this modification makes these posterior probabilities suitable for constructing a consistent and accurate structural alignment.

inter-sequence probabilistic consistency transformation for base alignment probabilities
in the first consistency transformation, we incorporate the information from other sequences in the alignment to improve the estimation of pairwise base alignment probabilities. the motivation of this transformation is that all the pairwise alignments induced from a given msa should be consistent with each other. this means that if position xi  aligns with position zk  in the x – z alignment, and if zk aligns with position yj  in the z – y alignment, then xi must align with yj in the x – y alignment. we can thus utilize the “intermediate” sequence z to improve the x – y alignment by making it consistent with the alignments x – z and z – y.

based on this motivation, we introduced an enhanced probabilistic consistency transformation in picxaa  <cit> , which improves the original transformation proposed by do et al. <cit> . the enhanced transformation modifies the alignment probability for a base-pair xi ~ yj, by incorporating the alignment probability between xi and zk and that between zk and yj. this transformation can be written as:  

where p represents the probability that x and z are homologous, defined as:  

where ā is the optimal pairwise alignment of x and z.

this transformation improves the consistency of the x – y alignment with other pairwise alignments in the msa, by incorporating information only from homologous sequences. in this way, we can obtain more probabilistically consistent estimate of the posterior alignment probabilities, which helps enhance the quality of the final msa.

intra-sequence probabilistic consistency transformation for base-pairing probabilities
in the second transformation, we incorporate the pairwise alignment information to the structural formation of the sequences. this transformation exploits this observation that the base-pairings in each sequence should be consistent with the pairwise base alignments induced from a given structural alignment. this means that if positions yj ~ yj′ form a base-pair in y, where xi  aligns with yj  and xi′,  aligns with yj′ , then xi ~ xi′ must form a base-pair in x. thus, we can utilize the base alignment information to improve the estimation of the xi ~ xi′ base-pairing probability.

based on this observation, kiryu et al. <cit>  introduced a transformation for base-pairing probabilities, which was modified later in  <cit>  as:  

where α ∈  <cit>  is a weight parameter between the target sequence x and rest of sequences. this transformation assumes that all sequences y ∈ s – {x} are homologous to the given sequence x. however, when we have a set of distantly related sequences in s, this assumption does not necessarily hold. to address this problem, here, we modify this transformation by improving the base-pairing probability using the information just from the closely related sequences to the given sequence x. therefore, like the inter-sequence consistency transformation, we explicitly consider the relative significance of each sequence y ∈ s – {x} in improving the base-pairing probabilities in x.

let z = {y ∈ s – {x}|x ◊ y} be the set of sequences in s – {x} that are homologous to x. the notation x ◊ y means x and y are homologous and functionally related to each other. using only the relevant sequences, which are included in the set z, we define this transformation as:  

the second term in the right hand side of the above equation can be also written as:  

using the identity function i{·}, where i{x ◊ y} =  <dig> if y is homologous to x, and i{x ◊ y} =  <dig> otherwise. in practice, we cannot judge with certainty whether two sequences are homologous or not. thus, we describe this relationship probabilistically, using the expectation as: e  = p, where p is the homology probability and can be estimated as described in the previous subsection. by replacing the identity functions with their expected values in the previous equation, we propose the following enhanced intra-sequence probabilistic consistency transformation as:  

probabilistic four-way consistency transformation for base alignment probabilities
in the third consistency transformation, we incorporate the structural information to the pairwise alignments. this transformation is based on the same observation that motivated the intra-sequence consistency transformation; that is, the pairwise base alignments induced from a given structural alignment should be consistent with the base-pairings in the corresponding pair sequence. however, this time, we utilize the base-pairing information to improve the x – y alignment.

based on this motivation, katoh and toh introduced the four-way consistency transformation in  <cit>  which was also latter implemented in  <cit> . we use this idea in a probabilistic fashion by incorporating the base alignment and the base-pairing probabilities as in  <cit> . this transformation is defined as:  

where β ∈  <cit>  is a weight parameter.

using the sparsity of alignment and pairing probability matrices, we can efficiently implement these three transformations successively. the inter-sequence consistency transformation has a complexity of o, the intra-sequence transformation has a complexity of o, and the four-way consistency transformation has a computational complexity of o, where µ is the average number of non-zero elements per row , m is the number of sequences, and l is the length of each sequence.

constructing the structural alignment
to find a valid structural alignment of a set of rna sequences, we propose a two-step greedy approach that builds up the alignment starting from those regions with higher base-pairing and base alignment probabilities. the proposed greedy scheme extends the idea of picxaa  <cit>  to multiple rna alignments. in picxaa, we construct the multiple protein sequence alignment by successively inserting the most probable pairwise residue alignment into the final alignment. in the proposed algorithm, we add another step before the greedy graph construction step of picxaa to better incorporate the secondary structure information in rnas. this two-step alignment construction approach, along with intra-sequence consistency transformation and four-way consistency transformation, described in the previous subsection, helps picxaa-r to effectively integrate both sequence and structural similarities to construct the final alignment. the proposed structural alignment approach is described in the following.

the greedy alignment approach we proposed in picxaa  <cit>  is conceptually similar to the one used in sequence annealing algorithms  <cit> . however, it should be noted that unlike sequence annealing, which greedily merges pairs of columns, we always add a single pairwise base alignment at a time, based on the consistency-transformed posterior alignment probabilities.

we represent the structural alignment as a directed acyclic graph g =  where, v is the set of vertices and e is the set of directed edges. each vertex c ∈ v corresponds to a column in the final alignment, and each directed edge e = , c) ∈ e implies that column c precedes column c in the given alignment. each column c ∈ v consists of positions from different sequences that will appear in the same column in the final alignment.

when inserting a new pairwise base alignment, we should consider the following requirements to obtain a legitimate multiple rna alignment:

•  the alignment graph g should remain acyclic.

•  in the first greedy step where we use structural information, we should consider left-right compatibility. that is, for any paired columns , if column c appears in the left part of the stem in the final structure, then for each base xi ∈ c that pairs with some xi′ ∈ c′ of the same sequence x, we should have i <i′.

thus, while we build up the alignment graph, we satisfy the structural constraints and alignment constraints by verifying whether the new inserted pairwise base alignment keeps the graph acyclic and left-right compatible.

the two-step alignment construction approach is as follows:

step 1-structural skeleton construction
in the first alignment construction step, we greedily insert the most probable alignments of base-pairs with high base-pairing probability. to this aim, we define the ordered set b as  

here, b is the ordered set of base-pairs whose transformed base-pairing probability is larger than a threshold tb . the base-pairs in b are sorted in descending order according to their transformed base-pairing probability, . we successively pick the most confident base-pair  from b. for a selected base-pair, we look for the best match among the members of b. that is, we seek for a pair  ∈ b which belongs to another sequence y and satisfies the two compatibility conditions above in g while maximizing the following probability:  

for this pair , we insert two pairwise alignments  and  into the alignment graph g. figure 1a illustrates this process.

upon inserting a new pair p* =  to g, three scenarios may occur:  new column addition;  extension of an existing column; or  merging of two columns. the detailed description of the procedures needed for each case can be found in  <cit> . later in this section, we provide a summary of those procedures. by successively inserting the most probable alignment for confident base-pairs, we construct the skeleton of the alignment enriched by structural information. next, we complete this skeleton by greedily inserting highly probable base alignments.

step 2-inserting highly probable local alignments
in this step, we update the skeleton alignment obtained in the previous step by successively inserting the most probable pairwise base alignments into the multiple structural alignment, as in picxaa  <cit> . thus, we sort all remaining pairwise alignments  according to their transformed alignment probability  in an ordered set a. we greedily build up g by repeatedly picking the most probable pair in a, which is not processed yet, provided that it is compatible with the current alignment. again, insertion of any pair p* =  to g will result in one of the scenarios of new column addition, extension of an existing column, or merging of two columns.

here, we briefly discuss these three cases :

 <dig>  new column addition: we insert a new compatible vertex c* = {xi, yj} in g if neither xi nor yj belongs to some existing column in g. figure 1b illustrates this process.

 <dig>  extending an existing column: if only one of the bases in p*, let say xi, belongs to some vertex c ∈ v, we should add the other base yj to the same vertex c. figure 1c illustrates this process.

 <dig>  merging two vertices: when xi ∈ c <dig> and yj ∈ c <dig> belong to two different vertices c <dig>  c <dig> ∈ v, we merge the vertices c <dig> and c <dig>  figure 1d illustrates this process.

after updating the graph as described above, we prune g to avoid redundant edges, thereby improving the computational efficiency of the construction process.

upon finishing the two-step graph construction, we use the obtained alignment graph g to find the multiple alignment. we use the depth-first search algorithm to order the vertices in v in an ordered set a =  such that there is no path from vi to vj in g for any i > j. in the resulted ordered set a, each member corresponds to a column in the alignment, and putting them together gives the alignment. further details of the graph construction and alignment process can be found in  <cit> . an illustrative example for the graph construction process using picxaa-r can be found in figure  <dig> 

discriminative refinement
as the final step, we apply a refinement step to improve the alignment quality in sequence regions with low alignment probability. we employ the iterative refinement strategy based on the discriminative-split-and-realignment technique that was introduced in picxaa  <cit> . we repeat the following steps successively for each sequence x ∈ s:

 <dig>  find sx ⊂ s, the set of similar sequences to x using the k-means clustering.

 <dig>  align x with the profile of sequences in sx.

 <dig>  perform the profile-profile alignment of  and s – sx.

this refinement strategy takes advantage of both the intra-family similarity as well as the inter-family similarity, thereby improving the alignment quality in low similarity regions without breaking the confidently aligned bases.

RESULTS
we use four different benchmark datasets: bralibase  <dig>   <cit> , murlet  <cit> , bralisub  <cit> , and localextr  <cit>  to assess the performance of picxaa-r on different alignment conditions. the first two are general datasets not specially designed for local rna alignment testing while the last two datasets are designed to verify the alignment accuracy for locally similar rnas.

we compared picxaa-r with several well-known rna sequence alignment algorithms:

probconsrna  <dig>   <cit> , mxscarna  <dig>   <cit> , centroidalign  <cit> , and mafft-xinsi  <dig>   <cit> . among these techniques, probconsrna uses only the sequence level information while the others take advantage of structural information. we picked these methods as they are among the fastest structural rna aligners which yield high accuracy. there exists several other aligners such as raf  <dig>   <cit> , murlet  <cit> , stemloc-ama  <cit> , lara  <dig> . <dig>  <cit> , m-locarna  <cit> , and r-coffee  <cit> , which have much higher complexity than mafft-xinsi  while their accuracy is usually worse or at least comparable to mafft-xinsi. thus, the most complex algorithm that we compare our algorithm with will be the state-of-the-art technique, mafft-xinsi.

all the experiments have been performed on a  <dig> ghz intel core2duo system with 4gb memory. on all datasets we use two measurements to evaluate the performance of each alignment scheme:  sum-of-pairs score , which represents the percentage of correctly aligned bases;  structure conservation index   <cit>  that measures the degree of conservation of the consensus secondary structure for a multiple alignment. the sci score is defined as  where ea is the minimum free energy of the consensus msa as computed by rnaalifod  <cit>  and Ē is the average minimum free energy of all single sequences in the alignment as computed by rnafold  <cit> .

on murlet dataset, in addition to the sps and sci scores, we measure sensitivity sen = tp/, positive predictive value ppv = tp/, and matthews correlation coefficient :  

where true positive  indicates the number of correctly predicted base-pairs, true negative  is the number of base-pairs correctly predicted as unpaired, false negative  is the number of not predicted true base-pairs, and false positive  is the number of incorrectly predicted base-pairs.

in each table the total computational time for each algorithm is also reported in seconds.

throughout the experiment we use the parameter setting of α =  <dig> , β =  <dig> , and tb =  <dig> . these parameters are optimized manually using small datasets. besides, we use mccaskill algorithm  <cit>  to compute the base-pairing probabilities and rnaalifold  <cit>  to find the induced consensus structure of the computed alignment.

results on bralibase  <dig> 
first, we evaluated the accuracy of picxaa-r using the bralibase  <dig>  alignment benchmark. wilm et al. <cit>  has developed bralibase  <dig>  based on hand-curated seed alignments of  <dig> rna families taken from rfam  <dig>  database  <cit> . bralibase  <dig>  contains in total  <dig>  aligned sets of sequences each consists of  <dig>   <dig>   <dig>   <dig>   <dig>  or  <dig> sequences  with average pairwise sequence identities ranging from 20% to 95%.

to more clearly compare these techniques, we provide the average sps and sci scores as a function of the average percent identity on k <dig>  k <dig>  k <dig>  and k <dig> reference sets in figure  <dig>  as shown in this figure, for sequence identities less than 60% picxaa-r outperform all the other schemes in terms of both scores except for mafft-xinsi which is two times slower than picxaa-r. this observation shows that the proposed greedy approach can efficiently and effectively construct the alignment for low identity sequence sets. this was expected as in lower sequence identities the proposed greedy alignment construction approach can effectively detect local structural similarities.

results on bralisub and locextr
the bralibase  <dig>  benchmark is not designed for local alignment testing and has reference alignments with just up to  <dig> sequences. thus, wang et al. <cit>  designed two types of datasets to verify the potential of rna sequence aligners in dealing with local similarities in the alignment set:  bralisub, the subsets of bralibase  <dig>  with high variability ;  localextr, an extension of bralibase  <dig>  consisting total of  <dig> large-scale reference alignments categorized into k <dig>  k <dig>  k <dig>  and k <dig> reference sets receptively with  <dig>   <dig>   <dig>  and  <dig> sequences in each alignment.

tables  <dig> and  <dig> summarize the performance measures on these datasets. as we can see, mafft-xinsi has the best accuracy but it is  <dig>  times slower than picxaa-r in bralisub dataset and four times slower than picxaa-r in locextr dataset. besides, picxaa-r outperforms mxscarna with average 6-7% in terms of sps and sci scores. it also outperforms centroidalign by average 1-2% in both scores.

these results confirm that picxaa-r can efficiently yield an accurate structural alignment for a set of large number of locally similar rnas.

results on murlet dataset
murlet dataset  <cit>  consists of  <dig> alignments of  <dig> sequences obtained from the rfam  <dig>  database  <cit> . this dataset includes  <dig> families and there are five alignments for each family. the mean pairwise sequence identity varies from 40% to 94%. table  <dig> shows the results on this dataset. we observe that picxaa-r yields comparable accuracy with mafft-xinsi while picxaa-r has much less complexity. in comparison with centroidalign, we have similar sps and better sci scores, while we are 3% better in terms of sen score and 2% worse in terms of ppv score. however, for mcc score which compromises between sensitivity and specificity picxaa-r outperforms centroidalign by  <dig> %.

computational complexity analysis
CONCLUSIONS
in this paper, we proposed picxaa-r, a probabilistic structural rna alignment technique based on a greedy algorithm. using a set of probabilistic consistency transformations, including a novel intra-sequence consistency transformation, we incorporate the folding and alignment information of all sequences to enhance both the posterior base-pairing and base alignment probabilities. we utilize these enhanced probabilities as the building blocks of the two-step greedy scheme which builds up the alignment starting from sequence regions with high local similarity and high base-pairing probability. as shown in several experiments, picxaa-r can efficiently yield highly accurate structural alignment of ncrnas. this performance is more vivid for datasets consisting sequences with local similarities and low pairwise identities. to the best of our knowledge, picxaa-r is the fastest structural alignment algorithm after mxscarna among all the current rna aligners while it significantly outperforms mxscarna on local datasets like bralisub and locextr. high speed implementation of picxaa-r as well as its accuracy makes it a practical tool for structural alignment of large number of ncrnas with low sequence identity which is very helpful for novel ncrna prediction.

authors' contributions
conceived the algorithm: smes, bjy. implemented the algorithm and performed the experiments: smes. analyzed the results: smes, bjy. wrote the paper: smes, bjy.

competing interests
the authors declare that they have no competing interests.

