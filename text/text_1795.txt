BACKGROUND
trying to find the orthologs of a given protein or dna sequence has co-evolved with sequencing itself. fitch defined the terms orthology and paralogy as early as  <dig>  when only very few protein sequences were known  <cit> . with the advent of fully sequenced genomes, the computational study of orthologous protein relationships in evolution, comparative genomics, but also for substantiating the evolutionary conservation of fundamental cellular processes increased exponentially. it is widely accepted and has been proven in many cases that orthologs typically have equivalent functions across organisms  <cit> . transferring the functional annotation of a protein to its orthologs in other species is therefore routine in genome annotation. virtually all genome centres provide information on orthologous protein families .

two proteins that are each others best hit  or symmetrical best hit) in a pair-wise genome comparison are considered orthologous. protein families are in practice more complicated, as genomes have evolved substantially, leading amongst others to gene duplications and losses  <cit> . yet, reciprocal sequence similarity is thus far one of the main established methods for defining orthology computationally and is ubiquitously used on a small- as well as a large-scale. other orthology search methods combine sequence-based searches with phylogenetic methods or graph-clustering algorithms to circumvent computationally intense phylogenetic calculations. these include berkeley phog  <cit> , fat-cat  <cit> , treefam  <cit> , phylomedb  <cit> , ensemblecompara  <cit> , and orthomcl  <cit> .

due to high sequence divergence, many true orthologs are only discovered using more sophisticated techniques like profile-based database searches , profile-profile comparisons  or drastically relaxed e-value thresholds. all those approaches exploit the fact that members of orthologous protein families, even if they are strongly diverged, still share a common sequence pattern. though powerful in finding more remotely conserved orthologs, profile-based methods are prone to profile drift . manual comparison of sequence alignments is oftentimes used to detect remotely conserved orthologs in the twilight zone. virtually all above-mentioned approaches are hard to run in an unsupervised manner. szklarczyk and colleagues  <cit>  have introduced an iterative orthology prediction pipeline based on reciprocal best-hit assessment, ortho-profile, that performs sequence-to-sequence, profile-to-sequence and hmm-to-hmm comparisons in a step-wise process to uncover remotely conserved orthologs. though very powerful in detecting remotely conserved orthologs, there is to date no ready-to-use script or web-interface of ortho-profile available. this makes using ortho-profile for non-experts difficult, representing a true drawback of the software.

with morfeus, we introduce the first, web-based approach to assign remotely conserved orthologs in an unsupervised manner. to explore a substantial part of sequence space, morfeus uses blast with relaxed e-value thresholds. it exploits the conserved sequence pattern of orthologs by clustering the alignments of hits to the query. bona fide orthologs serve to verify potential orthologs by the rbh-rule in iterative reciprocal blast searches. finally, a score independent of the blast e-value, which is based on the network of orthology, is introduced to describe orthologous relationships. we have determined the accuracy and precision of morfeus by testing its performance against a subset of the homologene database  <cit> , as well as inparanoid  <cit> . we demonstrate the sensitivity of morfeus using a set of remotely conserved, mitochondrial protein families that were first uncovered using ortho-profile, as well as an example of a remotely conserved, orthologous family, whose members were shown to have identical functions in their respective organisms  <cit> . morfeus is freely available as a web server at http://bio.biochem.mpg.de/morfeus/. we have submitted its source-code  to sourceforge.net  and its virtual machine can be requested from the authors.

morfeus web server implementation
the morfeus web server
the workflow of the software is shown in figure  <dig>  a full description of the methods and algorithms used in morfeus can be found in additional file  <dig> figure  <dig> 
workflow of a morfeus search. morfeus starts with a blast search using relaxed e-value settings, clusters all resulting alignments based on their similarity to each other, carries out reciprocal blast searches for selected orthology candidates in an iterative manner and after classification of candidates, calculates a network score based on the connectivity of each protein in a network of orthology.



relaxed blast
a morfeus search starts with a blast search   <cit> , against a protein sequence database using relaxed parameters . we recommend an e-value cut-off of at least  <dig> for sequences without any apparent homolog in distant species, as it covers a reasonably large sequence space. for sequences with clear homologs in distant species, the e-value can be reduced . currently, the user can choose to search against the entire refseq protein database of the ncbi or subsets thereof . the choice of e-value cut-off and database will influence the run-time of morfeus .

distance-based clustering of alignments
all pair-wise alignments of the query blast search are clustered based on their similarity to each other. each alignment is transformed into binary format representing the matches  and mismatches  of the query with the subject. to strengthen the contribution of rare amino acids, we use the weights of the optima substitution matrix  <cit>  for the amino acid sequence of the query to calculate the similarity score  of two alignments  and  treating identical and conserved positions as equal.  is further used for distance-based hierarchical clustering with a modified average linkage approach. the conserved positions between a new alignment and the alignments in a cluster are not considered by the classical average linkage approach, as it only calculates the distance between  of the new alignment and the average of all  of an established cluster. we therefore calculate the distance score based on the conserved consensus of the alignments within one cluster and a new alignment .

cluster cutting
the resulting hierarchical tree is analysed with respect to its structure for subsequent cluster splitting. in brief, each hierarchical tree is cut based on its distribution of distances. based on the analysis of  <dig>  randomly chosen protein families, we determined that an exponential function is the best-suited mathematical model to describe the majority of datasets . the climbing rate of the exponential function is used to identify cluster boundaries and to cut the tree into individual clusters. a small climbing rate describes highly similar alignments; the steeper the climbing rate, the more dissimilar the alignments will be. we therefore cut the tree at the position where the climbing rate accelerates from a flat to a steep curve. at this point, two more distantly related clusters are linked. a detailed description of the clustering approach, as well as the definition of clusters of the distance tree can be found in additional file  <dig> 

iterative reciprocal blast
each orthology candidate is submitted to a reciprocal blast search and evaluated for its fitness to become a bona fide ortholog. in order to maximize the benefit from the rbh hypothesis, several additional features have been implemented in morfeus’ reciprocal blast searches: 1) morfeus does several cycles of reciprocal blasts, taking the output of the previous rounds into account for selecting orthology candidates and deciding on orthology relationships; hence, morfeus considers not only the query but also all bona fide orthologs when deciding on the orthology of novel candidates; 2) if a protein is selected for reciprocal blast, morfeus includes all proteins present in its respective candidate cluster for reciprocal blast searches; 3) all sequences that are found as rbh by more than two verified orthologs are likewise selected for reciprocal blasts. to start iterative reciprocal blasts, all sequences with more than 80% identity to the query are selected, as are all sequences that are located within the query cluster. in the first round, only the query is taken to decide on the orthologous relationship of a candidate. for all candidates with an e-value < 10– <dig>  we strictly apply the rbh-rule. however, for sequence relationships with a statistically less reliable e-value , it cannot be excluded that the second or even the third hit in a species is the true ortholog  <cit> . an orthology candidate is only excluded from further analysis when it is rejected by more than 33% of bona fide orthologs as a rbh. reciprocal blast searches stop once no new orthology candidates are found.

orthology network construction and centrality scoring
once relationships between orthologs based on reciprocal blasts have been established, morfeus constructs a network of orthology, which reflects the binary relationships between the included sequences. in the orthology network, we discriminate between best-best , best-acceptable , acceptable-acceptable  relationships, as well as one-sided relationships of the type best  and acceptable . the latter reflect situations, where only one of the two proteins finds the other by blast. the type of relationships  between the proteins  enables us to score the individual candidates using centrality scoring. more precisely, we apply eigenvector centrality  <cit>  as implemented in networkx  <cit>  to score each individual node in the orthology network. to assign initial scores, we use the type of connection between the nodes with descending values: bb =  <dig>  ba =  <dig> , aa =  <dig> , b =  <dig> , a =  <dig> . we use the centrality score as the network score for each node, as it represents a measure of similarity of a node to the group of collected orthologs that is independent of the blast e-value.

RESULTS
morfeus output
description of web output
the output of a morfeus search is a list of putative orthologs, which have passed the orthology test of the morfeus pipeline  apc <dig> , and figure  <dig> and additional file 2: figure s <dig> a for its web-based output). next to the ncbi identifier and the species of the hit, its network score and e-value are shown. the user can retrieve the original blast search of each hit, as well as the individual blast alignments of identified orthologs to the query. the network of orthology is displayed using d <dig> js  and can be downloaded as a network file  along with an attribute file that includes information on e-value, score and species for each hit. both can be imported into cytoscape for further analysis .figure  <dig> 
output of a morfeus search.  the first couple of hits in the results section of a morfeus search. identified orthologs of the input query  are displayed on the web-site. parameters describing the hits include the network score, as well as the e-value. the blast-output of the reciprocal blast search, as well as the alignment of the hit to the query are linked from the hit-list. the full list is shown in additional file 2: figure s <dig>   the network of the hits is displayed on the network link of the morfeus output pages. nodes are coloured by e-value  and the size of the nodes corresponds to their network score. in the figure shown, the network has been sorted according to phylum. mouse-over of the nodes displays the species name, the refseq id, class and phylum, as well as the e-value and network score of the node as exemplified by the hit from anopheles gambiae.

alignment and network of orthology of the apc <dig> family.  multiple sequence alignment of some apc <dig> orthologs, including those from candida glabrata and oryza sativa. conserved positions across all shown species are highlighted in bright yellow, those that are conserved in five out of the seven sequences are highlighted in dark yellow. species abbreviations and accession numbers are listed in additional file 2: table s <dig>   the network of orthology for the apc <dig> family displayed in cytoscape. there are three tightly connected clusters representing the metazoan and two fungal groups. the false positive predictions are clearly separated from the interconnected clusters . nodes are scaled according to e-value with low e-values having large circles and high e-values having small ones. an edge-weighted spring-embedded layout was chosen.



morfeus results for the protein family apc13
as an example of a highly diverged protein family, we chose s. pombe apc <dig> as a query, a subunit of the anaphase promoting complex that is remotely conserved from yeast to man  <cit> . there is no homologene group assigned to fission yeast apc <dig>  the anapc <dig> homologene group from eukaryotes only includes vertebrates. likewise, inparanoid failed to detect any orthologs in metazoans for this fission yeast protein. of the phylogeny software mentioned above, none could complete this protein family from fungi to mammals.

morfeus found  <dig> hits for sp apc <dig> with our settings  and after  <dig> reciprocal blast searches, it identified  <dig> orthologs from fungi, nematodes, arthropods, vertebrates and mammals . morfeus readily discovered orthologs based on the similarity of their alignments  and was able to discriminate between false positive and true positive hits solely based on a family-specific conservation pattern: although mouse apc <dig> is only the 3rd blast-hit from mus musculus, morfeus distinguished its sequence as the orthologous one . morfeus is thus able to effectively distinguish true positive orthologs from a large number of hits in relaxed blast searches .  <dig> of the initial  <dig> hits are identified by morfeus as orthologs.  <dig> hits in the initial blast are true positive apc <dig> orthologs. only one of the orthologs is not found by morfeus: strongylocentrotus purpuratus apc13-like protein  is rejected, because a second, nearly identical sequence exists in the refseq database . the two sequences exclude themselves due to the rbh-rule. while morfeus did not find apc <dig> orthologs from all species, the identified sequences from different phyla can retrieve most missing family members from their respective phylum with a standard blast search. four of the identified  <dig> sequences are false positives . this amounts to a precision of 93% for the remotely conserved apc <dig> protein family. note that recall, precision and accuracy of morfeus will differ for each protein family. additional file 3: table s <dig> lists precision values for other, remotely conserved protein families found by morfeus. morfeus results currently exclude all hits that are found as a rbh by the query alone. with this setting, we most likely miss some true positives. none of the saccharomycetae orthologs have been found, even though they are known . yet, the number of false positives rises when the query alone is sufficient to include a potential orthologous sequence.

s. japonicus apc <dig> identifies more vertebrate and mammalian apc <dig> members than s. pombe and also produces no false positive hits , when submitted to morfeus . we have observed this in other protein families as well. this is not surprising, as each query will find a slightly different set of hits in a blast search. the more divergent two input queries from the same protein family, the more sequence space can consequently be covered. we therefore recommend using more than one member of a protein family as morfeus queries.

performance in detecting orthologs of conserved protein families
we tested whether morfeus could find well-conserved orthologs that are annotated in public resources. we therefore submitted a subset of  <dig> protein families from the homologene database  <cit> , which we hereafter refer to as the homologene test set, to morfeus and inparanoid. we focused on proteins with no or a maximum of one conserved domain to mimic sequence orphans. we used the sequences from s. pombe as queries and searched against the refseq protein database . results are shown in table  <dig>  original data can be found in additional file 3: tables s5-s <dig> table  <dig> 
performance of morfeus, homologene and inparanoid




morfeus reached a recall of 86% and a precision of 94% when compared against the homologene database, resulting in an f1-score of 89%. due to the high number of blast hits – and therefore true negatives, morfeus’ accuracy amounted to 99%.

next, we compared morfeus results of the homologene test set against inparanoid orthology searches. results were very similar, with 85% recall, 94% precision, an f1-score of 88% and an accuracy of 98%. finally, we compared the results from homologene and inparanoid with each other. when we took homologene as a basis, inparanoid reached a recall of 83% and a precision of 91%, giving an f1-score of 85% and an accuracy of 99% . homologene, when compared to inparanoid only had a recall of 66%. this is mostly due to the fact that in conflicting protein family situations, homologene does not assign an ortholog, while inparanoid does. the precision was comparable to the other test situations with 90%, resulting in an f1-score of 73% and an accuracy of 98%.

based on our data we conclude that morfeus is an accurate and efficient method to detect conserved orthologs and is in its overall performance comparable to the homologene resource, as well as the orthology search engine inparanoid. we could not observe a high number of false positives. morfeus could indeed complete further  <dig>  families that were annotated only in fungi and/or plants with orthologs from nematodes, arthropods and vertebrates. in total, morfeus found additional  <dig> orthologs for the homologene test set .

comparison of morfeus with ortho-profile: detecting remotely conserved, mitochondrial proteins in higher eukaryotes
recently the remote orthology search engine ortho-profile was published  <cit>  and applied to the set of mitochondrial proteins from budding and fission yeast. the authors could assign a human ortholog to ~ <dig> proteins from s. cerevisiae and/or s. pombe. mitochondrial localization in human cells was experimentally verified for  <dig> of those proteins. we took the  <dig> candidate cox assembly factors from s. cerevisiae described in  <cit>  and submitted them to morfeus to determine, whether our method is equally successful in finding their human orthologs . for six of the  <dig> proteins, morfeus readily found the human  ortholog with the yeast protein . in all cases, morfeus found the same human/vertebrate ortholog as ortho-profile, except for pet <dig>  where it identified the mitochondrial pentatricopeptide repeat-containing protein lrpprc instead of ptcd <dig>  as the ortholog in metazoans. in four of the cases, coa <dig>  coa <dig>  mss <dig> and pet <dig>  morfeus identified the human ortholog via an intermediate species. s. pombe was chosen for coa <dig> and coa3; branchiostoma floridae was chosen as the chordate hit for mss <dig> and schizophyllum commune for pet <dig>  morfeus faced a challenge with cox <dig> and cox <dig>  as the similarity in both cases is limited to a very short region even between closely related orthologs from ascomycota. with the s. cerevisiae proteins, we did not succeed to find any ortholog outside of ascomycota and in case of cox <dig>  we only found the human ortholog that ortho-profile predicts, aurkaip <dig>  when using the ortholog  from schizosaccharomyces japonicus. we have calculated the precision for all searches performed for the candidate cox assembly factors . except for cox <dig>  for which morfeus failed to detect orthologs in higher organisms, all proteins reached a precision of close to 100% . we also searched for predicted orthologous groups of those  <dig> proteins by other algorithms . fat-cat and ortho-mcl performed best and both correctly identified the families for four of the cox assembly factors . the cog database  <cit>  contains the mammalian orthologs only for cox <dig> and coa <dig> and at least discovered the invertebrate orthologs for pet <dig>  the families of cox <dig>  pet <dig> and coa <dig> were also correctly recognized by eggnog  <cit> . finally, berkley phog only found fungal orthologs for cox <dig>  cox <dig>  cox <dig>  mss <dig> and coa <dig>  next to ortho-profile, morfeus is thus the only search engine to identify remotely conserved members for most of the cox assembly factors.table  <dig> 
identification of remotely conserved, experimentally verified mitochondrial proteins using morfeus


s. pombe
s. pombe
b. floridae
s. commune
precision values in brackets are those of the intermediate species.



we next took all  <dig> proteins that contained assigned human orthologs from  <cit>  to further test the performance of morfeus on large-scale . we eliminated all proteins that already had bona fide orthologs in higher eukaryotes assigned by homologene and searched with those  <dig> proteins that did not contain any orthologs from opisthokonta .  <dig> searches were stopped, as more than  <dig> hits were found, suggesting a multi-branching family with sufficient sequence similarity for phylogenetic methods. for  <dig>  of the remaining  <dig> proteins, morfeus readily discovered the fission yeast , as well as vertebrate/mammalian ortholog. in  <dig> cases , an identified ortholog from the morfeus search with the budding yeast protein was used to retrieve orthologs in higher eukaryotes in a subsequent morfeus run. the use of intermediate species is one of the recommended procedures to discover very distantly related orthologs in other species. five of the  <dig> proteins were members of multi-branching families with at least one gene duplication in s. cerevisiae. in all those cases, the yeast paralog was the putative sequence ortholog assigned by ortho-profile. it is for this reason that no ortholog was detected using morfeus. taken together, we conclude that morfeus is as efficient as ortho-profile in discovering remotely conserved orthologs with the advantage of a ready-to-use web interface.

discussion
morfeus is a new, web-based method to assign remotely conserved orthologs. based on sampling of a large part of the sequence space due to relaxed e-value settings, the comparison of pair-wise sequence alignments and iteratively establishing reciprocal similarity relationships, our software is able to efficiently identify orthologs with high sequence divergence. we introduce a measure of orthology independent of the e-value, which is based on the connectivity of sequences in a network of orthology. morfeus searches a large part of sequence space and can detect more divergent family members. this is demonstrated with the help of the remotely conserved, mitochondrial protein families introduced by  <cit> , as well as the example we chose . morfeus is so far the first web-based, ready-to-use software that can reliably detect remotely conserved orthologs of a protein in an unsupervised manner.

ortho-profile is in our view the most similar search engine to morfeus. it is designed to detect remotely conserved orthologs by a step-wise procedure to identify them based on the similarity of either their sequences, their sequence profiles or their hmms. unlike morfeus, ortho-profile does not have a ready-to-use web-interface. it is therefore difficult to use for non-experts, which is one of the main target groups for morfeus. as ortho-profile partly relies on sequence profiles and hmms, respectively, it is also not clear, how specific the pipeline is in multi-branching – and also multi-domain families.

though we consider morfeus very powerful in finding remote orthologs, we acknowledge its limitations: first, morfeus relies fully on blast results. if an orthologous sequence is not present in the sampled sequence space or if blast fails to detect the sequence with the chosen settings, morfeus will not list it as an ortholog, as is the case in the apc <dig> family. though the ortholog of s. cerevisiae apc <dig> is known, sp apc <dig> does not find it in its initial blast search; thus, morfeus fails equally to report this sequence as an apc <dig> ortholog. this limitation may be overcome in many cases by using psi-blast instead of blast for the initial sequence search, a feature we are planning to implement in future releases of morfeus. we furthermore observed that the success of a morfeus search depends partly on the chosen query sequence. we generally recommend using more than one of the bona fide orthologs as a query for a morfeus search to detect more and also more divergent members of an orthologous family. second, the eigenvector centrality scores that are calculated for nodes are not discriminative at low values. this is not unexpected as true positives have in some cases a best-best  relationship to only two or a few members of an orthologous family. it is for this reason that we do not exclude putative orthologs based on a low network score. morfeus’ network score is however discriminative at large values and can be used as an independent measure to ascertain an orthologous relationship. third, morfeus might not be able to distinguish between orthologs and paralogs in all cases. this is a result of our procedure to include or exclude orthology candidates based on their relationship to bona fide orthologs. we only exclude candidates that are rejected by more than 33% of bona fide orthologs as a rbh. by raising this exclusion cut-off, we lose many true positive hits. for the intended use cases of morfeus, where virtually no ortholog is found in more divergent species, finding two potential co-orthologs is better than finding none. further analysis of the identified sequences using for instance phylogenetic analysis can bring final clarity to the sequence relationships. one possibility to overcome this in our software would be to perform orthology assignment based on the reciprocal smallest distance algorithm , which employs phylogenetics to distinguish between orthologs and paralogs. though it would be technically possible to implement rsd in morfeus, this procedure is extremely time-consuming, as many sequences needed to be tested by rsd.

when should morfeus be used? morfeus is at its best, when a user searches the orthologs of a sequence with no close homologs in divergent species and therefore standard similarity search methods fail. if a sequence is a member of a larger protein family, for instance the kinase family, nuclear hormone receptors or zinc fingers just to name a few, morfeus will not be the method of choice and phylogenetic approaches are better suited to identify orthologs. morfeus is however the method of choice when dealing with sequence orphans or sequences, where classical search methods only detect orthologs in closely related species.

CONCLUSIONS
morfeus is the first web-based, fully automated method to detect remotely conserved orthologs of sequence orphans. we have realized this by 1) relaxing search parameters of blast to cover more sequence space of potential orthologs; 2) clustering resulting blast-alignments according to their similarity in order to identify conserved sequence patterns; 3) performing iterative reciprocal blast-searches to not only include orthology candidates that are picked up by more than one verified ortholog in previous rounds, but also to allow already confirmed orthologs, which fulfil the reciprocal best hit  relationship with the query to serve as rbh-recipients for further candidates; 4) and finally, by introducing a measure of orthology that is independent of the blast e-value and is based on the connectivity of a protein in its network of orthology. our method is equally specific in the detection of well-conserved orthologs and more sensitive in finding remotely conserved orthologs than other web-based software suites available in the field to date.

availability and requirements
project name: morfeus

project web-page: http://bio.biochem.mpg.de/morfeus/; https://sourceforge.net/p/morfeus/.

operating system: source code: linux/unix; web-server: platform-independent;

programming language: python, php and java

license: gnu gpl.

electronic supplementary material
additional file 1:
morfeus.tar.gz contains the source code as submitted to sourceforge.net.


 additional file 2:
additional information provides a detailed description of the algorithms used in the following steps of morfeus: 1) distance-based clustering of alignments; 2) cluster cutting; 3) reciprocal blast candidate selection and orthology verification by rbh. it furthermore contains information on the web-server implementation, the choice of e-value and database and the formulas used for calculating recall, precision, accuracy and f1-score. additional information also contains the formulas of all functions tested for cluster cutting, additional file 2: figures s1-s <dig> plus figure legends, as well as additional file 2: tables s <dig>  s <dig>  s <dig> and s <dig>  

 additional file 3: table s1: randomly chosen datasets from morfeus that were used for testing different functions  for fitting clusters levels. table s <dig>  all hits identified in the initial blast search with s. pombe apc <dig>  positively identified orthologs are color-coded in bright red, the false negative hit from s. purpuratus is highlighted in dark red, false positive hits are highlighted in dark green. table s <dig>  recall, precision, accuracy and f1-score of morfeus, homologene and inparanoid in comparison to each other. table s <dig>  original data of the comparison of morfeus to homologene. table s <dig>  original data of the comparison of morfeus to inparanoid. table s <dig>  original data of the comparison of homologene to inparanoid. table s <dig>  original data of the comparison of inparanoid to homologene. table s <dig>  additional annotation of orthologs by morfeus for homologene groups; tp = true positive ortholog identification by morfeus; fp = false positive ortholog identification by morfeus. table s <dig>  original data from morfeus searches of remotely conserved cox assembly factors. the precision was calculated for each morfeus search. table s <dig>  original data of the comparison of morfeus and ortho-profile on  <dig> remotely conserved, mitochondrial proteins from fission and budding yeast  <cit> . 

 competing interests

the authors declare that no competing interests exist.

authors’ contributions

iw implemented the algorithms of the morfeus pipeline, developed the command-line program and assisted in manuscript preparation; mv helped in algorithm and pipeline implementation and set up the web-server for morfeus; ms helped in optimization of the morfeus pipeline and in statistical analysis; jmv implemented web-based network visualization of orthologous families; fo implemented the network scoring; vs assisted in supervision and implementation of the morfeus algorithm development and helped in realization of the network scoring; bhh conceived and supervised the study, helped in optimization of the morfeus pipeline, performed statistical analysis and wrote the manuscript. all authors read and approved the final manuscript.

