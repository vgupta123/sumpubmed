BACKGROUND
genome-scale gene transcription analyses obtained from microarrays and est studies generate large datasets that must be adequately processed to extract valuable functional information. this can be best achieved by detecting a particular pattern or behavior in the properties of the genes in term of sequence, transcription profile and chromosomal location to unravel functional relationships which otherwise would pass unnoticed. gene clustering is a statistical process aimed at collecting genes into logical groups , based on the observed similarity of one or more elements or properties that can be ascribed to such genes. in particular, positional clustering aims at identifying groups of genes characterized by positional proximity within a chromosome. the rationale for investigating positional clustering in expression dataset is twofold: first it facilitates the organization of large amount of information into higher-level structures which could shed new light on less visible properties of the dataset; second it allows the identification of co-expressed and co-localized genes that could be functionally and/or evolutionary linked. in several eukaryotic organisms non-homologue but functionally linked and co-transcribed genes have been reported to cluster together in physical proximity unraveling a gene organization with operon-like features, i.e. co-regulation of neighboring genes  <cit> . in particular, several lines of evidence have demonstrated that proximity of co-expressed genes does not occur at random, but rather underlies a selection process involving genes working together in signaling and metabolic pathways  <cit> . non-random organization and gene clustering have clearly emerged from genome-wide analysis as biological relevant phenomena  <cit> . the importance of gene positional clustering analysis is also widely recognized, but only few informatics tools are available to support the analysis of large-scale gene datasets  <cit> . furthermore, discrepancies between approaches and interpretations of results have been observed  <cit>  as well as lack of cross-references to prior results  <cit> . widespread methodologies and bioinformatics tools of general applicability are increasingly needed to support this type of analysis.

in this work, a method of general applicability implemented by a suite of software applications  is presented, that performs positional clustering analyses of genes automatically preselected based on expression data obtained from microarray, est, qrt-pcr and pcr experiments. large amounts of information can be easily processed and clustering results can be visualized and or further processed with different types of quantitative analysis. gepoclu is also capable to take into account multiple expression values associated to the same gene to support comparative analysis scenarios where the same gene may be expressed multiple times as for example in different developmental stages of an organism, during aging, in distinct organs/cell types, unhealthy and disease conditions, in infected and non-infected, and so forth.

implementation
gepoclu software architecture
gepoclu is essentially a collection of matlab functions  that can be embedded in user applications that address gene positional clustering problems. furthermore, gepoclu provides a suite of interactive software applications, based on the same functions, which can be launched from within the matlab programming environment, and allow non-programmer users to make use of the same functionalities through a console-based textual interaction mechanism. twelve interactive applications are currently available for immediate use, all designed to read/write data from/to specially formatted, user-readable text files; mostly suitable to be used in any order, depending on user needs. by directly accessing the gepoclu library of functions, it is possible to create additional applications that automate specific analysis processes and/or fulfill more specific analysis needs. a standard analysis methodology that is based on already available applications has been documented in the results section, and in figure  <dig>  further details of the entire analysis process and functionality of the suite of applications are provided in the additional material . the entire gepoclu library of interactive and non-interactive functions is provided in the additional file  <dig>  the contents include a fully automated script and all the data needed to replicate the most relevant results of the example application  <dig> 

portability and interoperability
gepoclu operates on any operating system and hardware platform that supports matlab, including ms windows, apple os, the main flavors of linux and unix. no additional matlab libraries or toolboxes are required for gepoclu to work. all the interactive applications provided by gepoclu accept input data from text files and provide output as text files. the file formats used by gepoclu  are user-readable/writable and can be easily shared with third-party applications through the implementation of simple read/write filters. for implementing a specific functionality , ms excel files are currently required as input; however, support for plain text input for this phase is planned as part of future development. vector-graphics images generated through gepoclu  are provided as matlab figures, and therefore rely on matlab to be converted into any of the supported raster or vector-graphics formats .

testing
we have used and tested gepoclu on typical windows and mac osx pcs . a clustering analysis performed on an eukaryotic genome such as anopheles, and containing thousands of genes, and with a high cluster density  takes a little less than one minute, simpler data sets can be analyzed in a few seconds . the visual representation of about  <dig> clusters on chromosomes with activated labeling mode for cluster id and base pair positioning within chromosomes, takes less than  <dig> seconds. gepoclu has been applied to variety of data sets from different sources concerning both genomes and expression data.

interactive gepoclu applications
in this section, the twelve main interactive applications provided by gepoclu are listed. as stated earlier, these applications provide a simple console-based interactive user interface and encapsulate the functionality provided by the complete gepoclu library of functions. interactive applications can be recognized as their names start with "i". an example of using gepoclu through non-interactive functions  is also provided in additional file  <dig> 

igdfcreator
this application merges the two excel files containing gene positional and expression information. during merging, duplicate genes are identified  and removed, while warning messages are generated. in duplicate removal, only the first encountered instance of a gene is kept. the resulting information is formatted as a text-based, gene data file ; the names of the duplicate genes are written to a separate text file.

the duplicate-removal functionality has been designed into gepoclu mainly for handling replicates, which may have been unintentionally left by the operators in the input files. gepoclu does not directly handle the problem of deciding how to manage multiple probes of a gene. this was a precise design choice as there may be several different approaches to handling duplicates depending on peculiar aspects of each application: sometimes an average should be computed, other times subsets may be recognized as outliers and discarded accordingly, other times measurements should be discarded altogether and entirely repeated due to excessive dispersion of data. to avoid unnecessary risks involved in automating decisions related to duplicate handling, gepoclu is limited to generating appropriate warnings and to providing a minimal solution  to ensure the entire analysis process could be completed anyways in case the operator may decide against taking corrective actions.

the two excel files must be formatted so that they conform to the following requirements:

expression file 

genename expr <dig> expr <dig> expr <dig> expr <dig> .....

genename expr <dig> expr <dig> expr <dig> expr <dig> .....

.......

position file 

genename chrom start end strand

genename chrom start end strand

...

if positional clustering is to be done regardless of gene expression data information, an expression file with expression values set to zero must be created. names in the expression and position files must correspond to the same genes. the expression file supports multiple gene expressions, missing expression values are replaced by nan  strings at merging. expression values may be provided as ratios, normalized, logarithmic values, depending on the experiment  or in any other user-defined format, as long as all the values are defined in the same reference so that they can be compared. the position file must contain all the required information for each gene: chromosome name, start and end in base pairs, and strand . the required format for the position file is consistent with the output format provided by the biomart database. merged gene information is written to a text file in the gdf  format. the format is defined as follows:

gene data file 

dset genename chrom start end strand expr <dig> expr <dig> expr <dig> expr <dig> .....

dset genename chrom start end strand expr <dig> expr <dig> expr <dig> expr <dig> .....

.....

where the only additional information is a reference name for the dataset , provided by the user during the interactive merging session, and which is useful when multiple gdf files must be used in iterative clustering investigation processes . genes listed in the gdf files are listed in properly sorted order, according to position on each chromosome.

igdfnanfixer
this application amends a gdf file by replacing nan expression values with a value provided by the user. the fixed file is saved as a new text file, in the gdf format.

igdffilter
this application is used to discard/keep genes based on a threshold defined on expression values. the input is a gdf file and the output is another gdf file containing only the genes that passed the threshold criterion. to allow for testing multiple expression values against the same given threshold, expression indices can be provided to determine what expressions will undergo testing; this way, either one, many or all expression values can be considered when filtering genes.

iclucreator
this is the main function for creating positional clusters from a set of genes, which must be provided as a gdf file.

each chromosome is processed separately. clusters are formed according to the following rule: the gene currently under consideration belongs to the same cluster of the previous one if the distance between the two gene starting points is smaller or equal than a given distance threshold, defined as a multiple of one base-pair , regardless of the strand. if the distance is larger than the threshold, the current gene becomes the first one of a new cluster. as clusters are formed, they are tagged with a progressive, numeric identifier. clusters formed by only one gene are eliminated during chromosome traversal. the distance threshold is provided  by the user during the interactive analysis session.

no expression information is used during clustering. it is assumed that any expression-based filtering has already been done in the previous steps.

cluster information is stored in a text file written in the clu  format, which is structured as follows:

cluster file 

nclusters n

1

begincluster

dset genename chrom strand start stop exp <dig> exp <dig> ...

dset genename chrom strand start stop exp <dig> exp <dig> ...

dset genename chrom strand start stop exp <dig> exp <dig> ...

......

endcluster

2

begincluster

dset genename chrom strand start stop exp <dig> exp <dig> ...

dset genename chrom strand start stop exp <dig> exp <dig> ...

........

the total number of clusters  is written at the beginning of the file, the clusters are listed in order, preceded by their numeric identifier and delimited by a set of begin-end statements. within each cluster, the list of contained genes is reported, with complete positional and expression information.

icluadder
this application offers the possibility to update current clusters with new gene datasets. it is used to identify the behavior of a set of genes when added to existing clusters. the new genes may be incorporated into existing clusters, or they may form new independent clusters. the rules for creating clusters are the same used in iclucreator and it is recommended that the same distance threshold parameter is used.

the application operates with input data coming from an existing clu file and a new gdf file containing the additional genes to be processed, the updated clusters are stored into a new clu file. to be able to distinguish between the "original" genes and the newly added genes in the new clu file it is convenient to tag the additional genes with a different dataset name in the new gdf file: a typical cluster containing added genes will look as follows in the updated clu file:

begincluster

dset genename chrom strand start stop exp <dig> exp <dig> ...

dset genename chrom strand start stop exp <dig> exp <dig> ...

dset genename chrom strand start stop exp <dig> exp <dig> ...

dset <dig> genename chrom strand start stop exp <dig> exp <dig> ...

dset <dig> genename chrom strand start stop exp <dig> exp <dig> ...

......

endcluster

iclutogdf
this application allows for extracting a single cluster from a clu file and saving its contents  as a gdf file.

iclusterdisp
this is a utility application that displays on screen the contents of a user-selected cluster located within a clu file.

igenefind
this is an utility application that searches for the gene in the clusters, and returns the numerical identifier of the cluster containing the gene .

iclusterview
this application allows for selecting a single cluster from a clu file and generates a vector-graphics representation that is visualized in a matlab figure. the representation of the cluster is known as single-cluster view, as it was illustrated in the results section .

iallclustersview
this application allows for visualizing all the clusters contained in a clu file in a proper vector-graphics format. the format was referred to as multiple-clusters view and was illustrated in the results section .

irndclucreator
this application runs the positional clustering analysis onto sets of randomly selected genes. it is useful for generating data to be used in statistical tests aimed at evaluating the statistical significance of the clustering results obtained for the set of genes being scrutinized.

to produce random clustering data to be used for comparison with actual clustering results for a given set of n selected genes, a gdf file must be prepared containing a larger set of genes . the application reads n genes randomly from the gdf file and runs the clustering analysis. the entire process  is repeated automatically a number of times defined by the user, in order to collect sufficient information for the random sample. once the process is finished, final clustering data are aggregated and provided as a text file, for being processed, along with the "real" clustering results in third-party statistics software applications, or within matlab itself.

the text file  is formatted as in the following example:

to read the file, consider for example the fourth row, which refers to the third run . three clusters were generated , a total of  <dig> genes were associated to clusters  and each cluster contained exactly  <dig> genes .

iallclustersanalyze
this is a simple utility function that provides quantitative information concerning the contents of a clu file. more specifically, it returns the probability distribution of cluster sizes, written as a text file.

methods applied in the example applications for anopheles gambiae
microarray expression data for the example application n. <dig>  was taken from previous literature work  <cit> . non-quantitative pcr data for the example application n. <dig>  was also taken from previous literature work  <cit> . microarray expression data for the example application n. <dig>  was taken from unpublished material . in all three example studies, anopheles gambiae gene positional data was extracted from biomart, using gene identifiers to retrieve chromosome names, start and end positions  and strand. for some genes it was not possible to extract coordinates from biomart: those genes were excluded from the computations. the positional information for the

drosophila melanogaster acp genes  was retrieved from biomart as well.

positional distance thresholds used to create clusters were computed from mean gene density information retrieved from the literature  <cit>  and from online resources .

for assessing the significance of any clustering result obtained with the selected genes, with respect to the clustering of a random set of genes, gepoclu was used to randomly extract sets of genes and generate clusters, and a third-party statistical software application  was used to run the appropriate statistical tests .

RESULTS
software functionality
gepoclu is a collection of software tools that functions in two ways: either as an interactive console-based applications run from within the matlab programming environment  <cit> , or as a set of matlab programmable functions that can be embedded in a wide array of user-defined software applications. gepoclu has been designed to be operated according to a predefined analysis protocol, that can be summarized into three main steps: basic cluster generation, iterative cluster generation and quantitative/visual cluster analysis ; the protocol includes a preliminary activity that must be carried out manually by the operator, limited to initial data acquisition; the remaining activities defined in the protocol are computer-assisted, meaning that they are designed to be carried out with the support of dedicated gepoclu data analysis functions. the main steps of the protocol, and related gepoclu functionality are described in the following.

assembly gene information 
gepoclu accepts gene position data information from online resources, such as biomart http://www.biomart.org that include chromosome or contig, gene start/end points  and strand information. the software also accepts gene expression information  from experiments involving microarray, est, qrt-pcr or pcr analysis, or from online data collected from previous research activities. gene positional information is essential for clustering analysis, while gene expression data can be omitted; in such a case cluster analysis will be performed taking into account only positional data. gepoclu is capable of processing different expression values for large sets of genes, originated from different developmental stages, cell differentiation, or obtained under different experimental conditions. as a general rule, expression data should be formatted in numerical values in the same reference scale. in case of multiple expression data, it should be also ensured that the same number of expression values is available for each gene. following the protocol, positional and expression data must be manually collected into two properly formatted excel files . the format of the excel file containing positional information has been designed to allow for the insertion of biomart-formatted data with the minimum conversion effort.

integrating positional and expression information 
gepoclu integrates expression and position information into a single, coherent data structure, properly formatted for downstream data processing analyses. in this step, gene duplicates  are identified and removed, together with inconsistencies in the input data sets . furthermore - if required by the specific analysis process - genes may undergo a filtering process based on expression levels, which may mean either to exclude genes with missing expression information , or to exclude genes with expression levels below a user-defined threshold. since the software supports also clustering based on positional information alone, expression information can also be omitted altogether. the integration of positional and expression data is carried out by gepoclu in a fully automated manner, though some parameters may be set out by the user to investigate the effect of different variables  thereby facilitating the processing large amounts of gene data with ease. the output of this step of the procedure is a single file containing merged information  for all the genes of the analysis; genes are ordered according to their position in the chromosome they belong to. notice that at this point the list of genes may differ from the initial one, as some genes may have been discarded because of missing information, or because of not fulfilling the threshold requirements. the merged information is saved as a text-based file known as the gene data file : the file is formatted so that it is compatible with gepoclu, however, the format is readable by the operators and may be also imported into third-party data processing applications.

generation of positional clusters 
this step is carried out with full support of gepoclu, functionalities starting from the gene data file  and analyzing one chromosome at a time. within the same chromosome, genes are processed sequentially in the order they are defined in the file. this is because the genes were initially sorted according to their position in the chromosome. at this stage, all genes in the gdf are analyzed irrespectively of their expression values since they had already been filtered through the expression threshold level . clusters are generated according to the following rule: if two genes have start sites whose distance - measured in base-pairs  - is smaller or equal than a given distance threshold, regardless of the strand, then they belong to the same cluster. distance threshold is the only parameter that must be decided by the operator depending on the application, and is generally related to mean gene density of the analyzed genomes. isolated genes  are discarded, since single-gene clusters are not allowed. the output, at this stage, is a list of clusters for each chromosome: each cluster is labeled with a numeric identifier and contains a list of genes. cluster information is stored in a text file written in proprietary format, known as the cluster file .

a few notes on the rationale behind this step. first of all, in gepoclu, clustering is done by defining a distance metric based on gene position alone. therefore, in a strict sense, expression values are not used at clustering. gene expression values are used for selecting what genes to include in the clustering process. the main advantage offered by gepoclu with respect to other clustering packages is to provide both expression-based filtering, and position-based clustering functionalities as parts of the same fully integrated, and interactive, environment. this means rapid iterations while exploring for emergent behavior, and full programmability of the filtering and clustering steps.

a second consideration relates to, strand information not being used when forming clusters. this comes from previous literature findings confirming that genes in adjacent or nearby positions along the chromosome influence the transcription of each other, regardless of their orientation, i.e. of the strand  they are located into  <cit> . for this reason, gepoclu uses only the positional information  as obtained by major databases, such as biomart.

in any case, it is still possible to take into account the strand when running analyses with gepoclu, by preparing lists of genes that specifically belong to one strand only. in this case, a proper query must be made in the genomic database to filter out genes not belonging to the strand under investigation.

a third note is related to the choice of adopting a single distance threshold value. in real-life applications average gene length and density are often genome-specific, and can also vary within the same chromosome, therefore the use of a single threshold value, constant throughout the entire length of the chromosome region being analyzed, may appear as a limiting choice. however, a single distance metric, measured either in bp or kbp, was believed as being more understandable by end-users and easier to relate to when setting the goals of clustering analysis in specific application domains. in particular, setting the distance threshold depending on mean gene density was found as a sound choice in most cases. conversely, if application-specific analysis goals make adopting a single threshold value insufficient, multiple additional clustering analyses can be run with different thresholds: this in particular allows for investigating how regions at different densities react in terms of clustering propensity.

visual representation of clustering results 
gepoclu provides functions for the visual display of the clustering results in original graphical forms, to facilitate the identification of the most relevant aspects of cluster distribution and composition, and ultimately, with the aim of inferring novel information from available data. clustering results, rendered in graph-based forms, can be visualized directly within the matlab programming environment, edited and saved into any of the most common raster and vector-graphics image formats. several examples of data display generated using gepoclu are shown in this work : albeit most of the visual result has been generated automatically in such figures, a few colors and caption positions have been manually edited to enhance clarity. we have properly indicated manual edits in the figure legends, to clearly highlight the actual output capabilities of gepoclu. the software provides two main visualization modes: one, referred to as "multiple-cluster view", that shows the relative position and the size of individual clusters along the chromosome; the other, referred to as "single-cluster view", that shows the contents of single clusters. the multiple-cluster view is designed to display in visual form information concerning the number of clusters on each chromosome, their reciprocal position and how populated they are . as an example of multiple-cluster view  we have analyzed the positional clustering of a set of genes that were selected on the basis of their temporal and spatial transcription profile in adult anopheles gambiae male mosquitoes, through microarray analysis . each chromosome is represented as a horizontal line; there are as many horizontal lines as many chromosomes were listed in the original gene data file . each chromosome is not drawn for its entire length: only the region going from the first  cluster to the last  cluster is plotted. all chromosomes are left-aligned in the figure with reference to their relative lengths. chromosome lines are labeled with the actual chromosome names, as reported in the gdf. each cluster is represented as a colored circle. diameter is proportional to how populated is the cluster, thus larger circles indicate larger clusters. clusters are labeled with a number, which is the identifier assigned to the cluster at creation . the identifier allows also for the recognition of the cluster in the clu file. each cluster is also flagged with a label that indicates the position  of the first gene of the cluster. for large data sets, this kind of visualization can generate quite a complex display. however, the figure is entirely generated by gepoclu in vector-graphics format, therefore the position of the drawing primitives can be manually adjusted at any time from within the figure to reach to a more effective visualization of the result. most of the figures illustrated in this work have undergone this manual adjusting process, as indicated in their captions. an example of the second main visualization mode, referred to as "single-cluster view" is also illustrated . the figure shows one of the clusters identified in figure  <dig> . the aim of the single-cluster view is to visualize the contents of an individual cluster. gepoclu is capable of handling multiple expression values for the same set of genes. the information about multiple expression data associated to a cluster is visualized by showing the same portion of the chromosome where the cluster is located as a series of lines, each referring to a specific experimental conditions examined. each line works as a placeholder for a single set of expression data values, called stage in the figure, and for each set, the expression value associated to each gene affects the diameter of the corresponding circle. diamonds can be used instead of circles to visualize expression levels, to avoid any potential confusion with the circles, which are also used in the multiple-cluster view. in figure  <dig> there are five expression patterns corresponding to five developmental stages of a. gambiae; it is clearly evident that most of the genes contained in the cluster are mainly expressed at the adult stage, as they are represented with circles of larger diameters. in the special case that no expression values are provided , the single-cluster view will show the gene contents of the cluster with circles reduced to single points . finally, if the data utilized to generate the clustering analysis originate from different data sets, the single-cluster view will use a different color for each data set.

quantitative analysis of clusters 
gepoclu is designed to provide support to perform statistical analyses on clustering data. the first type of analysis is dedicated to computing quantitative indicators of clustering behavior. examples of such indicators may be: total number of clusters, number of clusters per chromosome, average number of genes per cluster, probability distribution of the number of genes per cluster, probability distribution of the distances between clusters, etc. functions are provided to extract the contents of each cluster, including number of genes, and names and attributes  of each gene. retrieved information is saved in text format, and can be imported into any statistics or math software package for computing the desired descriptors. the second type of analysis is dedicated to assessing statistical significance of the clustering result. following the approach illustrated by boutanaev et al.  <cit> , the aim is to evaluate whether the positional clustering result obtained with the selected n genes is to be considered statistically different from a positional clustering result obtained with another set of n genes randomly selected from the same chromosomes. to this purpose, gepoclu provides functions for randomly selecting genes from a gdf, while clustering of such genes can be done with the same functions illustrated before. gepoclu provides the functions for exporting relevant quantitative information pertaining clusters in text format, all the data can be transferred to any statistics package  for running additional statistics tests: an example test worth mentioning is illustrated in the work by li et al.  <cit> : in this case, the significance of each single cluster can be assessed in relation to local gene density.

iterative investigation of gene clustering tendencies 
at any moment of the analysis, new genes can be added to the initial set, to investigate whether they merge with existing clusters or form new independent ones. updated results can be visually displayed and compared with previous results, or again subjected to quantitative analyses as illustrated previously. gepoclu provides all the needed functions to implement this type of investigation, which implies an iterative trial-and-error approach aimed at identifying emergent clustering behavior. the very same nature of the entire suite of matlab functions, designed as standalone interactive modules operating with input/output text files, supports an analysis process which may not necessarily be strictly sequential, allowing for a more free approach to positional clustering investigation.

role of gepoclu in current clustering research
as stated earlier in the background section and discussed in previous work  <cit> , discrepancies between studies regarding the sizes and locations of clusters of co-expressed genes in the same species do exist. different experimental and computational approaches are being adopted, and there is a paucity of literature work that systematically compares the available alternatives. while future research may greatly benefit from the development of a more uniform framework for positional clustering, for now gepoclu provides just one more possible viewpoint to approach the problem. like any other viewpoint, our solution to positional clustering highlights specific aspects of the datasets it is applied to, and such aspects may add up to other properties, which may be highlighted by different approaches. in the end, we believe that further insight into gene expression analysis problems may be gained by applying the analysis method proposed by gepoclu, as illustrated for the following example applications.

example applications of gepoclu for gene positional clustering of co-regulated a. gambiae genes
to illustrate the proposed methodology and gepoclu capabilities we have used this software to identify co-expressed and co-localized a. gambiae genes involved in key behavioral processes such as feeding and mating. we have analyzed a large amount of experimental data and gene expression profiles including:  the genome-wide analysis of gene expression of adult a. gambiae mosquito  <cit> ;  a genome-wide analysis of male accessory gland genes, possible modulators of female behavior  <cit> ; and  the microarray analysis of sex biased genes expressed during early developmental stages . we ran several positional clustering analyses on such data, with the intent of investigating the existence and variation of hot-spots of co-expressed and co-localized genes depending onto feeding conditions, mating, tissue specificities, and different developmental stages. these analyses provided suitable examples to demonstrate the investigation power of the proposed approach and gepoclu software.

example application 1: positional clustering behavior of genes differentially transcribed in blood-fed female adult mosquitoes, at different time points - microarray data
we used gepoclu to analyze the clustering of female mosquito genes transcribed in blood-fed female mosquitoes . microarray data was retrieved from previous literature work  <cit>  ; microarray data was formatted as a lists of up-regulated  and down-regulated  genes for pbf mosquitoes, obtained at different time points. for the example application, the binary expression-based classification  was deemed sufficient for the analysis, and no further specific threshold were applied on gene expressions. clustering analyses were performed separately for the up and down genes . positional distance threshold for cluster formation was set to  <dig> kbp, on the basis of the mean gene density values reported from previous investigations  <cit> . our analysis showed that clustering behavior varied as a function of time elapsed from feeding. the clusters that were identified in the data sets were also analyzed with the statistical functions available in the software . the table lists the percentages of clusters populated by different numbers of genes, starting from two-gene clusters. as control for each clustering analysis performed using microarray data, a total of  <dig> clustering attempts where done using randomly selected genes from a list of  <dig> anopheles coding sequences retrieved from biomart; results were compared with the one sample student's t-test, in spss  <cit>  . first, we used the clustering capabilities of gepoclu to identify the time-frame subset  and gene subset  where to focus the analysis for the identification of populated hot-spots of co-localized and co-expressed genes to be used as indicators of feeding. in the analysis of the data we did not take into account two-gene clusters as transcriptional hot-spots, on the assumption that many of them could be due to local duplication events  <cit> , hence we concluded that conditions where two-gene clusters would coexist with larger clusters in approximately the same amounts would be less interesting for the analysis. this led us to identify the time-frame comprised between  <dig> hrs. and  <dig> hrs. after feeding of the up-regulated genes as the most interesting window of analysis, in terms of significance of the clustering result; clusters identified for the 3- <dig> hrs. time frame for up-regulated genes are shown in figure  <dig> a.

clustering applied to females, up-regulated and down-regulated genes. gene expression data from microarray.

nbf: non-blood fed female mosquitoes

then, we analyzed those pbf clusters  that contained at least four genes, but we focused only on clusters, which were still preserved at the subsequent time frame . as a rule we set that at least three of the genes initially present in the cluster would be maintained, and also that the cluster would never become smaller than three genes in total. this analysis yielded a total of  <dig> clusters , which deserve to be further investigated as they appear to be the only clusters continuously up-regulated within the first  <dig> hrs.

example application 2: analysis of clustering behavior of male accessory gland genes - non quantitative pcr data
the dataset is comprised of a total of  <dig> genes and putative alleles from an alternative haplotype  related to the male accessory gland  proteins, relevant in mating, and identified through a genome-wide analysis approach in previous work by some of the authors  <cit> . in this work a number of genes were classified in five groups on the basis of their tissue transcription specificity, as deduced from non-quantitative pcr data:  mag only;  mag and testis;  mag, testis and females;  mag, rest of the body and females;  mag and ubiquitous. each gene data set was separately processed for clustering. the results obtained through gepoclu  showed a clustering behavior significantly different from what achievable from a random set of genes ; in particular, the observed cluster distribution for these genes indicated a highly significant bias towards localization on particular regions of chromosome 3r . we also investigated whether the homologue mag genes in d. melanogaster had a biased distribution. we analyzed a total of  <dig> annotated genes  <cit>   for which we could retrieve the localization co-ordinates using biomart. this analysis showed that the drosophila mag genes would not generate any cluster when processed using gepoclu. on the contrary, testes-specific genes in d. melanogaster are known to cluster together  <cit>  but their homologues  in a. gambiae are rather dispersed along the chromosome , thus suggesting that mag and testis specific genes are under different selection pressure in anopheles and drosophila, possibly as consequence of monogamous versus polygamous mating behavior respectively. we also investigated mag clustering behavior by exploiting the functionality of gepoclu to create clusters through an iterative process, when new genes were added to existing clusters: genes would either form independent clusters or merge into existing ones. we started by merging the mag and ubiquitous classes  <cit>  and then we sequentially added the other tissue-specific groups using different positional distance thresholds. at a threshold value of  <dig> kbp genes coming from different datasets  formed a single large cluster on chromosome 3r . the contents of such cluster are visible in figure  <dig> b.

CONCLUSIONS
gene positional clustering analysis is widely recognized as a fundamental tool towards a deeper comprehension of the mechanisms that lie underneath gene transcription regulation; widespread methodologies and bioinformatics tools of general applicability are increasingly needed to support this type of analysis. the problem is of growing importance, as an increasingly larger amount of gene-related information data is being accumulated thanks for large-scale gene analysis techniques such as microarray, est and pcr. in particular, the investigation of positional clustering in conjunction with gene expression values seems promising towards the identification of hot spots of co-expressed and co-localized genes.

we have developed a software tool gepoclu  that automatically selects genes based on expression values from multiple sources, including microarray, est and qrt-pcr, and performs positional clustering. gepoclu provides expression-based gene selection from multiple experimental sources, position-based gene clustering and cluster visualization functionalities, all as parts of the same fully integrated, and interactive, package. this means rapid iterations while exploring for emergent behavior, and full programmability of the filtering and clustering steps.

gepoclu is a useful data mining tool for exploring relationships among transcriptional data deriving form different sources. it can be operated by non-programmers with ease, by means of the suite of provided interactive applications, which can be run from the matlab command line. moreover, the whole set of functionalities provided by gepoclu is fully programmable and can be configured to support specific application needs as well as novel analysis scenarios.

three transcription data sets have been processed using gepoclu to illustrate how the functional capabilities of this software may bring novel and useful results to the table, possibly by highlighting previously hidden relationships between data. the results of this analysis highlight both the advantages and the versatility of performing positional clustering with gepoclu. the software disclosed hidden differences in the distribution of anopheles and drosophila sex biased genes and allowed the identification of a very large transcriptional hot-spot , which could be targeted in the attempt to control mating behavior in anopheles. the analysis of gene expression data in conjunction with co-localization information, as deduced by the proposed methodology introduces a paradigm shift, from more traditional approaches aimed at analyzing a single gene and its role in complex transcriptional phenomena.

availability and requirements
• project name: gepoclu 

• project home page: http://gepoclu.sourceforge.net/

• operating system: any operating system supporting matlab

• programming language: matlab 

• other requirements: none

• licenses: no license required

abbreviations
bp: base pairs; est: expressed sequence tags;

authors' contributions
td, ns and ac developed the concept. td and ns wrote the software. td and gm performed data analysis. km provided the unpublished data set. td and ac wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
gepoclu flowcharts. detailed flowcharts documenting the entire analysis process supported by gepoclu.

click here for file

 additional file 2
gepoclu software. matlab source code of the gepoclu software.

click here for file

 additional file 3
microarray expressions for example application  <dig>  excel spreadsheet containing the microarray expression data for example application  <dig> 

click here for file

 additional file 4
testis-specific genes for example application  <dig>  excel spreadsheet containing the list of testis-specific genes as found by rt-pcr for example application  <dig> 

click here for file

 additional file 5
results for example application  <dig>  tables reporting clustering results and their statistical significance for example application  <dig> 

click here for file

 additional file 6
results for example application  <dig>  tables reporting clustering results and their statistical significance for example application  <dig> 

click here for file

 additional file 7
results for example application  <dig>  tables reporting clustering results and their statistical significance for example application  <dig> 

click here for file

 additional file 8
drosophila acp genes for example application  <dig>  table listing the drosophila acp genes used in the example application  <dig> 

click here for file

 acknowledgements
this work was supported by the italian minister of education  and european union . we thank ilaria napoli for initial efforts on this project.
