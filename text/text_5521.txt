BACKGROUND
with the development of next generation sequencing techniques, there has been a massive increase in the number of sequences available. analyzing such a large volume of sequence data presents a major computational challenge, especially since it often involves finding an optimal alignment between the sequences as a first step. multiple sequence analysis , which is most commonly used for aligning a set of sequences, is computationally very expensive. in many bioinformatics applications , sequence alignment and msa play a critical role. finding the optimal alignment for a large set of sequences that may be related by function, evolution, or structure is a computationally complex task and often involves use of high performance computing servers and resources.

alternative approaches involve creating statistical signatures from nucleotide composition frequencies. these so-called alignment-free methods  <cit>  are more efficient both in terms of processing time and storage requirements as they work with compact signatures and not the entire set of sequences. these methods also scale well for whole genome phylogenetic analysis  <cit>  which is an improvement over existing methods. however, these methods do not retain any of the important local information, such as the gc content in particular areas of the sequences. several other methods have tried to characterize sequences based on the repeated presence of certain shorter patterns  <cit> . these methods are mostly used as heuristics for identification of smaller set of sequences.

it is well known that different regions of dna sequences have different roles. for example, some regions are responsible for protein coding and are known as coding regions  <cit>  while others are conserved across related species and can be an indication of evolutionary similarity. thus, a flexible approach to sequence analysis is needed that can take advantage of computational efficiency of alignment-free techniques while still taking into account the unique properties of different regions of sequences.

in this work, we propose a novel method for discovering conserved regions across multiple sequences. our method is based on position-sensitive word frequency analysis and uses high efficiency data stream clustering to find regions with similar word frequency distributions across multiple sequences. we refer to clusters as quasi-alignments, since a similar word frequency distribution in a cluster also means that the underlying segments are likely to be very similar. for the found clusters, we also retain important metadata such as the position of the clustered segments in the original sequences and the gc-content. this approach has previously been used for phylogenetic classification  <cit> . this paper expands our preliminary investigation into discovering similar segments  <cit>  by developing a more rigorous theory of quasi-alignment, improved visualization and an expansion to the species level. we show how quasi-alignment can be used to quickly and efficiently discover conserved regions across multiple sequences. finding stretches of identical sequences at the species level is useful for various applications including sequence identification and dna barcoding  <cit> .

quasi-alignment via position-sensitive p-mer clustering
constructing position-sensitive frequency vectors
in this section, we present the foundation for the analysis and clustering framework. the basic unit of analysis for our case is a word inside a segment of a sequence. in the case of global frequency analysis used by alignment-free methods  <cit> , a word of length p is referred to as an oligomer or p-mer. in case of dna sequences, the words are formed from the set of alphabet {a, c, t, g}. in our analysis, we are interested in the distribution of words within specific regions  of a sequence.

definition  <dig>  given a dna sequence × of length l, a segment si,l is defined as a subsequence starting at position i and having length l, where l < l − .

next, we define the distribution of words within a segment.

definition  <dig>  given a segment si,l, we define nsvi,l = 〈f <dig>  f <dig>  . . . , f4p〉 as a vector of length 4p where each element fi, i = { <dig>   <dig>  . . . , 4p}, represents the count of a possible p-mer in the segment. this vector represents the word frequency distribution in si,l and is referred to the segment's numerical summarization vectors .

the set of nsvs for an entire sequence can be created by partitioning it into equal sized segments that may or may not overlap. for example, a sequence of length  <dig> base pairs  can be divided into  <dig> segments each of length  <dig> without any overlap between them. the word frequency distribution will later be used to find similar segments. thus, the word size parameter p controls how well the similarity between segments is approximated with larger values leading to better approximation while smaller values lead to faster computation. we find that p =  <dig>  i.e. we count the occurrence of tri-mers within a segment, produces good results while creating nsvs of length  <dig> or  <dig>  cutting a sequence into segments and then creating nsvs is illustrated in figure  <dig>  we currently do not take into account any unknown characters, such as "n" that may be present due to sequencing errors or ambiguous sequencing.

data stream clustering
after constructing nsvs for the entire set of sequences to be examined, we use high-throughput data stream techniques  <cit>  to cluster similar segments. we consider each nsv as a data point in a stream of consecutive nsvs. the clustering algorithm then adds one nsv after the other to the cluster model by adding it to an existing cluster if it is within a user defined clustering threshold from its center or otherwise creating a new cluster with the nsv as its first member. this idea is illustrated in figure  <dig>  in addition to the clusters we also retain order information in the form of a directed graph . the exact clustering procedure is discussed in  <cit> .

definition  <dig>  a genmodel m is defined as a directed graph g=c,ewhere the vertices are the set of clusters c={c <dig> c <dig> ...,cm}of nsvs and the edges e represent the ordering of the nsvs in the sequences. each cluster contains metadata such as location in the original sequence and the sequence ids.

we can now reframe the problem of alignment as the problem of finding similar subsequences  via clustering.

definition  <dig>  each cluster c in a genmodel m represents a set of similar segments and is referred to as a quasi-alignment and the segments are said to be quasi-aligned.

by using clustering, we avoid the expensive alignment process and yet obtain information about local similarity between multiple sequences. the data stream clustering algorithm makes just one single pass through the segments and thus it has a linear time complexity in terms of the length and number of sequences. also, new sequences can be added very efficiently to an existing model.

similarity measures for clustering
clustering algorithms use similarity measures for comparing individual data points. in our case, the sequence data is converted into fixed dimension nsvs representing the word frequency distribution within segments. nsvs can be compared using standard measures for vectors such as manhattan distance, euclidean distance, squared euclidean distance, kullback-leibler discrepancy and mahalanobis distance  <cit> . they can also be compared using other measures such as the number of shared words between two segments. for example, simrank  <cit>  compares the number of matching p-mers  for fast sequence search.

the distance between nsvs can be related back to the difference between the original sequence strings also. the difference between two sequences is measured in terms of edit distance  <cit> , which is the minimum number of point mutations required to change one sequence into another. a point mutation can be an insertion, deletion, or substitution. ukkonen  <cit>  has proposed that the edit distance between two strings can be approximated by the manhattan distance between their q-gram profiles . the manhattan distance between two frequency vectors x and y obtained from the segments sx and sy is defined as:

  dmanhattan= ∑i=14pxi-yi 

the manhattan distance simply computes the number of p-mers that are different between the two sequences. it can be shown that the manhattan distance gives a lower bound for the edit distance between the two segments.

  dedit≥dmanhattan2p 

the reasoning behind the bound above is that any insertion, deletion, or substitution in the segment will create at most p new p-mers and destroy p existing p-mers. note that in theory it is possible to create two completely different sequences with the same q-gram profile , however, this is very unlikely if we deal with biological sequences which are expected to have a certain degree of similarity .

the relationship in equation  <dig> can be used to determine a reasonable clustering threshold for the data stream clustering algorithm in  <cit>  for a given word size p. for example, we often use a segment size of  <dig> bases with 3-mers and a manhattan clustering threshold of  <dig>  equation  <dig> shows that this threshold means that the edit distance between two segments needs to be at least 30/ <dig> =  <dig> to put them into two separate clusters. note also that position specific p-mer frequency clustering is not restricted to using manhattan distance, it can be used with any proximity measure defined on the frequency counts in nsvs.

discovery of conserved regions from genmodels
genmodels provide vital information about the similarity between segments in the form of quasi-alignments. this allows us to identify regions that are highly similar across multiple sequences. for sequences related by evolution, such as those from the same taxonomic unit, these segments are known as conserved regions.they are likely to be responsible for a particular function or provide a needed structural characteristic.

as an illustration, figure  <dig> shows a genmodel created from the 16s rrna sequences belonging to the phylum gn <dig>  we used the unaligned version of the sequences from the greengenes database  <cit> . the available  <dig> sequences range in length between  <dig> and  <dig> bases. for building the model, these sequences were broken down into non-overlapping segments of size l =  <dig> bases each, which were then aggregated with 3-mers  and clustered using manhattan distance and a clustering threshold of  <dig>  the resulting genmodel contains  <dig> clusters or quasi-alignments. the plot shows each of the quasi-alignment as circles uniquely identified by an id. the circle size is proportional to the size of the clusters  and arrows represent the direction of the transitions between them. a stronger arrow indicates that the transition occurs with a higher probability. for example, figure  <dig> shows that one of the common transition paths is the quasi-alignment sequence  <dig> →  <dig> →  <dig> →  <dig> → . . . →  <dig> →  <dig> →  <dig> indicating that a large fraction of the sequences share some common sequence segments. in addition the plot shows that almost all sequences go through a few quasi-alignments  which represent candidates for regions that may be highly conserved in the set of analyzed sequences. the sequences share a common higher level taxonomy  and thus we expect relatively stronger quasi-alignments as compared to random sequences. interesting in figure  <dig> is the almost completely separate path of smaller clusters starting with quasi-alignment number  <dig>  this indicates that a single or a few sequences are significantly different from the majority of the sequences in the set. this might be due to several reasons, such as mis-classification of the sequence, or a sequencing error whereby some of the initial bases may have been removed.

in figure  <dig>  we visualize the largest quasi-alignments found in the genmodel along the approximately  <dig> bases . the top part of figure  <dig> shows the segments grouped into the  <dig> most popular quasi-alignments as red horizontal lines. in this model, all red horizontal lines are exactly  <dig> bases long because a segment length of  <dig> was used. the segments that are part of the same quasi-alignment are joined by vertical dotted lines and the cluster id from figure  <dig> is shown on top. we see that the well preserved segments are found in quasi-alignment  <dig>   <dig>   <dig>   <dig> and  <dig> which correspond to the largest clusters in the model where almost all sequences converge in figure  <dig>  the lower part of figure  <dig> shows a measure of consensus for each segment i.e. proportion of sequences clustered into the most popular quasi-alignment. for example, it shows that all of the sequences in the nucleotide region 900- <dig> converge in quasi-alignment  <dig>  similarly, all except one sequence converge in quasi-alignment  <dig>   <dig> and  <dig> for the nucleotide regions 300- <dig>  500- <dig> and 1300- <dig>  respectively. this is an indication that these segments are highly similar and could be conserved regions of the sequences.

to validate our claim that the segments that are clustered together into a quasi-alignment are indeed highly similar, we performed traditional multiple sequence alignment  on the segments that are part of quasi-alignment  <dig>  we used clustal  <cit>  available through the software jalview  <cit>  to perform msa and visualize the alignment in figure  <dig>  the results show that the segments have an average pairwise alignment score of  <dig>   with a large majority of segments being almost identical and having 100% pairwise alignment. figure  <dig> and the msa results indicate that the segments in quasi-alignment  <dig> are indeed very similar. we have performed a similar analysis on the other quasi-alignment shown in figure  <dig> and verified that the segments have a high degree of base-wise identity.

it is interesting to note that in figure  <dig> some sequences have bases that are "shifted" by a certain amount. for example, the first sequence shown with id  <dig>  has its bases shifted to the right by  <dig> bases. this can be the result of insertions/deletions  in the sequences due to evolutionary processes. if this offset becomes too large, then it can interfere with clustering segments. this problem can be removed by using overlapping segments, i.e., considering many or all possible offsets. this increases the time complexity in the worst case by a fixed factor of l . it also makes makes visualizing quasi-alignments more complicated and therefore we will restrict the discussion in this paper to non-overlapping segment.

further validation of the location of the found conserved regions can be obtained by looking at biological evidence available in the literature. studies have reported that 16s rrna contains regions that are highly conserved within each species, but variable between species. these regions are known as hypervariable regions  <cit> , which are characteristic for each species, and have applications such as pcr amplification using universal primers  <cit> . it has also been reported that hypervariable regions are flanked on both sides by regions that are highly conserved across multiple species  <cit> . these flanking regions are conserved even for sequences exhibiting wide genomic diversity such as environmental or biological samples.

nine identified hypervariable regions in 16s rrna consist of nucleotides number 69- <dig>  137- <dig>  433- <dig>  576- <dig>  822- <dig>  986- <dig>  1117- <dig>  1243- <dig> and 1435- <dig>  and are denoted by v <dig> through v <dig>  respectively  <cit> . the sequence data of the phylum gn <dig> contains  <dig> sequences potentially from multiple species, which in the data have not been identified and hence are coded as unknown in the greengenes database. since the data contains several species, we would expect greater variations in the hypervariable regions than in the flanking, preserved regions. the top part of figure  <dig> shows the  <dig> largest quasi-alignments  found for the genmodel for the sequences from gn <dig>  the positions of the hypervariable regions are shown as blue lines labeled v <dig> through v <dig> at the top of the plot. it is very clear that our algorithm identifies regions that flank the hypervariable regions. for example, quasi-alignment  <dig> covers the nucleotide bases between the hypervariable regions v <dig> and v <dig>  similarly, quasi-alignment  <dig>   <dig>   <dig>  and  <dig> cover the bases between hypervariable regions v <dig>  v <dig>  v <dig>  v <dig>  v <dig>  v <dig> and v <dig>  the plot in the lower part of figure  <dig> also confirms this finding. the peaks of the plots indicate those segments that have a high consensus i.e. a strong quasi-alignment. the region between bases  <dig> and  <dig> share a perfect consensus, i.e., all the segments belong to the same quasi-alignment. as discussed earlier, this area lies between hypervariable regions and is thus is expected to be more conserved for a sample containing multiple species.

implementation details
we have implemented an open source software package using the r framework called quasialign which can be downloaded from http://r-forge.r-project.org/projects/mmsa/. this package has methods to quickly load a large set of sequence files, that can be in fasta format with greengenes  <cit>  annotations, into a relational database and can be used to easily filter sequences belonging to any taxonomic rank. this package is built on top of a number of other packages including biostrings  <cit>  for handling sequences, and the data stream clustering package remm  <cit> . it provides a complete interface for managing sequences, creating word frequencies distributions  and creating and analyzing genmodels. several other useful functions, such as those for metagenomic classification, are also available. more details can be obtained from the package documentation  <cit> .

for the analysis in this paper, we have used the default parameters for creating nsvs and genmodels. the parameters for nsvs are a segment length of l =  <dig> bases with no overlap between and segments and a word size of p =  <dig>  for creating genmodels, the default is manhattan distance with a clustering threshold distance of  <dig> which requires a minimum edit distance of  <dig> between two segments to place the into separate clusters .

large scale experiments
position sensitive p-mer clustering can work with a set of dna/rna sequences or even fragments of sequences from any source. this is a valuable asset for metagenomic analysis and also fits in nicely with the requirements of next generation sequencing methods. all experiments in this paper can be reproduced using the quasialign  <cit>  package.

dataset used
the method presented here for discovering conserved regions is general enough to be applied to any set of sequences. for this analysis, we used the more than  <dig>  16s rrna sequences obtained from the greengenes project  <cit> . the 16s gene is widely used for phylogenetic analysis as it is highly conserved for different species of bacteria and archaea. the sequences of this gene have remained more or less constant over time and evolutionary cycles. further, it contains several distinct regions, known as hypervariable regions, that are very specific and unique for each individual species  <cit>  and are widespread used for sequence identification and classification. the package quasialign allows us to directly import fasta sequences with greengenes annotations into a relational database for further analysis.

RESULTS
we processed the entire greengenes 16s rrna database using the default settings for creating nsvs and genmodels and then analyzed the models for interesting patterns and clusters to search for highly similar or conserved regions across multiple sequences that may be related by taxonomy.

as an example, we present an analysis of the species leptotrichia buccalis that belongs to the phylum fusobacteria and genus leptotrichia. the database contains  <dig> sequences of this species having lengths between  <dig> and  <dig> bases. we ran the position sensitive p-mer clustering algorithm on these sequences. the plot of the genmodel is shown in figure  <dig> and the plot of the segments belonging to the  <dig> largest quasi-alignment is shown in figure  <dig>  it is easy to see that most sequences follow a similar path with the exception of one sequence that starts a totally different path starting from quasi-alignment  <dig> and ending at quasi-alignment  <dig>  this outlier sequence may have its bases shifted by a certain amount due to insertions or deletions giving it somewhat of a different frequency profile. since the sequences belong to the same species, the hypervariable regions are expected to be highly conserved. the top  <dig> quasi-alignments contain segments that belong to hypervariable regions v <dig>  v <dig>  and v <dig>  the bottom part of figure  <dig> shows that the consensus of quasi-alignments peaks at the hypervariable regions. to check these results, we also performed msa using clustal  <cit>  on the segments belonging to quasi-alignments  <dig> and  <dig>  the average pairwise alignment score is  <dig> , and many sequences being perfectly aligned with a pairwise alignment score of  <dig> . the results are shown graphically in figure  <dig> for a section of the  <dig> bases that are perfectly aligned.

a second example comes for the species cetobacterium somerae that belongs to the phylum fusobacteria and genus cetobacterium. there are  <dig> sequences in the dataset for this species having lengths between  <dig> and  <dig> bases. we created the genmodel shown in figure  <dig>  since there are about  <dig> times more sequences than for the earlier, the model is more complex and has many more clusters and related transitions. still, we can see that there are certain clusters and transitions that are more pronounced and the most common path is  <dig> →  <dig> →  <dig> → . . .  <dig> →  <dig> →  <dig>  the plot of the segments belonging to the top  <dig> quasi-alignments are shown in figure  <dig> at the top and the consensus for the quasi-alignments is shown at the bottom. it is easy to see that the consensus mostly peaks at the location of the hypervariable regions, implying that these segments are similar and cluster together in the same quasi-alignment. we have also performed msa on the segments belonging to the largest clusters and they have very high nucleotide similarity with several sub-regions having perfect matches.

applications
there are several possible applications of our method. the first is to discover regions of very high sequence alignment by limiting the search space to regions of strong quasi-alignment. for the case of the species leptotrichia buccalis, we have identified in the sequences that the region between nucleotides  <dig> and  <dig> has a highly similar word frequency distribution. while this does not necessarily mean that all bases in this region will be perfectly aligned, it does indicate that this region is a good candidate for alignment. therefore, the search space for the best alignment can be reduced from the entire sequence length to just the strongly quasi-aligned segments. this can result in substantial savings in computational resources and time and produce results more efficiently.

another application is in the area of dna barcoding  <cit> , which seeks to identify species based on sequence segments that are standardized and well-conserved across sequences belonging to the same species. by using our methods, we can limit the search for dna barcodes to those regions that are strongly quasi-aligned. for example, in case of the species leptotrichia buccalis, we discovered the region between nucleotide base positions 100- <dig> contain highly similar sequences. further analysis of msa results reveals that in this region the nucleotide positions 122- <dig> and 183- <dig> are exactly identical. these regions can form the basis of a more thorough dna barcoding analysis.

run time analysis
the existing methods for analyzing a group of sequences for similarity rely mostly on multiple sequence alignment . finding the optimal msa is known to be np hard and thus computationally challenging  <cit> . various heuristics are currently used for msa based analysis. progressive alignment is a heuristic method that first constructs a guide tree based on relationships between the sequences and then builds the msa by iteratively adding sequences from the guide tree to the alignment. the time complexity of progressive alignment is o where n the number of sequences having average length l  <cit> .

in contrast to the above methods, position sensitive p-mer clustering makes just one pass through each of the sequences to create the nsvs and construct the genmodels. thus, the time complexity of our method is o for n sequences of average length l. in addition, adding new sequences to an existing model is very easy since the use data stream clustering allows us to add new nsvs at any time.

the above advantages allow us to analyze a large set of sequences for similarity and allow easy discovery of conserved regions. our algorithm can easily analyze the entire data set from the greengenes  <cit>  using a simple personal computer. performing such an analysis using traditional msa would require extensive server resources and computing time.

to compare run times of our method against msa, we incrementally sampled between  <dig> and  <dig> sequences from the phylum fusobacteria and ran quasi-alignment and the clustal  <cit>  implementation of msa on them and noted the run times. the plot is shown in figure  <dig>  it is clear that the run time for quasi-alignment increases linearly with the number of sequences while for clustal it grows polynomially. because of this, quasi-alignment scales well for larger number of sequences and can provide accurate results quickly and efficiently.

CONCLUSIONS
in this work, we have presented the foundation for quasi-alignment based on position sensitive p-mer clustering, a technique which applies high-throughput data stream clustering to produce genmodels, where strong clusters represent potential areas of high sequence similarity. in contrast to msa heuristics, the runtime of quasi-alignment scales linearly in the number of sequences and the average sequence length. this allows us to process larger number of sequences efficiently. we carried out experiments for sequences consisting of single and multiple species and verified the accuracy of our results by comparing them to traditional msa and using biological evidence from the hypervariable regions.

there are many possible applications such as identification of identical dna fragments and their positions within multiple sequences for dna barcoding studies. our methods can reduce the search space from the entire length of dna sequences to just those regions that are part of stronger quasi-alignments. other applications might include identification of sequences from their quasi-alignment models and finding interesting regions within sequences, such as those with high gc content.

in this paper we have restricted our discussion to creating non-overlapping segments. for dealing with sequences which contain a larger amount of insertions and deletions or for classification of shorter fragments sampled randomly from the sequence, it is necessary to use overlapping segments while constructing genmodels. the runtime complexity increases only by the constant factor l, the segment length. we are currently working on expanding the quasialign package to support use of overlapping segments.

competing interests
the authors declare that they have no competing interests.

authors' contributions
both authors contributed equally to this paper. all authors read and approved the final manuscript.

