BACKGROUND
the amount of available sequence data is growing explosively. annotation of those sequences at the protein residue level, which includes prediction of functional sites, binding sites and connections between sites, is essential in understanding structure and function of those sequences. methods that associate specific parts of protein sequences with certain properties either use existing signatures or predict functional properties of the sequence de novo. among the former, domain or motif based approaches compare sequences with databases of for example regular expressions, rule based motifs  <cit> , or hidden markov models  <cit> . such signatures are inferred using sequence alignments, or information such as protein interaction data in combination with protein sequences  <cit> .

among methods that predict functional sites without using existing signatures, conservation of amino acids in sequence alignments is a well-known indicator of functional properties. in addition to conservation of columns, protein multiple sequence alignments often display correlations between columns. such correlation contains information about which residues are located close to each other in 3d space and about functional sites  <cit> . although several approaches to obtain such signals from sequence alignments exist  <cit> , almost all of these are limited towards analysis of pairwise relationships between columns in the alignment. however, co-evolving contacts can be thought of as chains that percolate through the protein structure, inducing indirect dependencies  <cit> : when m and n are correlated, and n and p are correlated, m and p are likely to be detected as correlated as well, although in reality they do not directly influence each other. hence, observed correlation does not necessarily imply that residues are located close to each other.

several years ago it was proposed that graphical models, which take into account the network nature of dependencies, could be used to model protein structures  <cit> . at that time, the graphical model structure was learned with help from a protein structure and not from sequence data only. only recently methods have appeared which, using sequence data only, analyze correlated mutations within the framework of graphical models  <cit> .

we use recent advances in structure learning of graphical models  and learn a network structure where nodes describe columns in the multiple sequence alignment. this method can overcome the problem of indirect dependencies. in addition, because for every column in a multiple sequence alignment we predict  a number of other columns that are directly correlated with it, we find 'higher-order' multi-body contacts. this is relevant because it is known, based on contact statistics in protein structures, that multi-body contact frequencies are poorly predicted from pairwise contact potentials  <cit> . however, in the current study, the validation of our algorithm is focused on pairwise contacts because their assessment can be done in a straightforward way using protein structure data.

our main contribution is a novel algorithm for correlated mutation analysis, regularized multinomial regression based correlated mutations . we demonstrate its performance in network reconstruction using simulated datasets. the method was applied to analyze proteins and protein-protein interactions, and validated by comparing predicted residue connections with contacts observed in protein structures. we demonstrate the applicability of our approach by analyzing various types of datasets, and by predicting protein-peptide interactions.

methods
definition of the problem
our objective was to identify correlations between columns in a protein multiple sequence alignment . these links contain information about which residues influence each other and can be used to predict which residues are located close to each other in 3d space. to achieve that, we defined a multinomial regression setup and fitted regression models where each column is regressed with all other columns in the msa to find links between the columns. our method rmrcm  was implemented in r and is available via http://www.ab.wur.nl/rmrcm.

multinomial regression setup
in our method, an input msa  is first converted to numerical form by mapping the sequences to factors with  <dig> levels . subsequently, it is expanded to a matrix m with  <dig> times the number of columns of a by replacing each column by a binary matrix of  <dig> columns with a  <dig> representing the occurrence of each particular aminoacid . this matrix contains the starting data for rmrcm.

consider the usual regression setup: we have a response variable y and a predictor matrix x, and we approximate the regression function by e = xβ where β are the regression coefficients. our aim is to fit a regression model for each column of the msa, and hence, the factor representing column i from a is taken as y. as x, we take the matrix m-i, with m-i the matrix m after deleting the  <dig> columns that refer to column i in a. hence, in our regression problem for column i of the msa, y equals ai and we find a model which explains as much as possible variation in ai using the independent variables in x = m-i. this is repeated for each column i in a separately. as y is a factor with  <dig> classes, the regression model is generalized to that of multinomial regression, in which we take the symmetric form proposed by ref.  <cit> . after each fit, the coefficients β describe the relationships between columns in m-i with the ith column in a. these are then projected back to describe relationships of columns in a with each other. for this we use the sum of the absolute values of the regression coefficients. this results in links being predicted between various columns of the msa.

because the problem contains many parameters and a relatively small number of datapoints, regression would in general result in many links being predicted. lasso  <cit>  is a popular method for regression that uses an l <dig> penalty to achieve a sparse solution, ridge regression similarly uses l <dig>  and the elastic net regression method is a compromise between lasso and ridge regression  <cit> . we fit the multinomial regression models with elastic-net penalties using the algorithm implemented in the r-package glmnet version  <dig>   <cit> .

the elastic net solves the following problem :

  argmaxβ 

with l the log-likelihood of the multinomial regression model  <cit>  which depends on the data y, the predictor matrix x and the coefficients β. pα is the elastic-net penalty, which is a compromise between the ridge regression penalty  and the lasso penalty :

  pα= ∑j=1p12βj2+α∣βj∣ 

with p the number of coefficients in β. non-zero values for β indicate predicted links between the y-column and a subset of the x-columns. the regularization parameter λ determines the strength of the elastic net penalty and the higher value it has, the less coefficients will be non-zero. note that the coefficient for the i-j pair of columns in a can be different from that of j-i; hence, the coefficients were symmetrized by taking the average.

selecting the tuning parameters
after some preliminary testing, α was set to  <dig>  in all experiments presented in this paper. the links are computed for an entire path of solutions of the regularization parameter λ. the default sequence of  <dig> values of λ was used, and for selecting the best λ, we tested using the bayesian information criterion   <cit> . bic is computed as bic = - <dig> l + k ln where l is the log-likelihood with β the solution to eq.  for given λ, k is the number of parameters and n is the number of data points. we chose the predicted links with minimum bic for each column separately, i.e. the regularization parameter was chosen independently for each column. in addition to the bic-based selection of an optimal value of λ, we also tested using the sum of the coefficients β obtained over all values of λ. because this gave always at least comparable and often somewhat better results than using the bic-based selection, unless otherwise mentioned reported results were obtained using the sum-of-coefficients approach.

artificial datasets
to test rmrcm, we used sequence alignments derived from artificial networks. these networks were generated as follows. using  <dig> nodes, an edge density of  <dig> ,  <dig>  or  <dig>  was used and interactions between nodes were randomly chosen with this probability. here, edge density was defined as the fraction of edges out of the total possible number of edges ; hence, the networks contained approximately  <dig>   <dig> or  <dig> edges, respectively. for each edge density value, three different replicate networks were generated. for each network, different alignments were generated using markov random field potentials  <cit>  which determine a probability for each amino acid  at each node of the network, generating an alignment with  <dig> columns. these potentials consisted of node and edge terms to encode preferences for specific amino acids at positions in the alignment, and interactions between positions, respectively. for each node, randomly one amino acid was selected as most preferred, with associated node potential value pprefnode ; all the other amino acids at this node had a similar potential of / <dig> . in this way, preference for a certain amino acid at each position was encoded, whereas the probability for all other amino acids is equal. for the edge potentials, sets of preferred amino acid pairs were generated for each edge separately. for each of the amino acids, two amino acids were chosen randomly as the preferred partners of that amino acid. preferred associations had edge potential value pprefedge ; others had potential value of / . with these edge potentials, preference for certain amino acid combinations at certain pairs of positions was encoded.

subsequently, gibbs sampling was used to generate samples, i.e. sequences in the alignment. the number of iterations was set to  <dig> , and every 50th iteration the node labels were recorded. three different sequence alignments were generated from this, using the last  <dig> samples, the last  <dig> samples or the last  <dig>  samples, with  <dig> iterations in between. here each sample constitutes one labelling of the network, i.e. it represents one sequence in the sequence alignment. hence, nseq, the number of sequences in the samples, was  <dig>   <dig> or  <dig> . in total,  <dig> sequence alignments were generated with the combination of three edge densities, two levels of pprefnode, two levels of pprefedge, three values of the number of sequences in the sample and each combination replicated three times.

the values of the node and edge potentials as defined above were chosen after some initial tests such as to generate a range of different sequence similarities within alignments, as well as a range of interaction strengths, comparable to what was observed in biological alignments . in those alignments, the average sequence pairwise sequence identity was  <dig>  +/-  <dig> . in our case, the sequences generated using the highest values for preferred node and edge potentials also obtained a pairwise sequence identity of  <dig>  ; those with lower values for the potentials obtained somewhat lower values . in order to calculate and compare interaction strengths between the artificial aligments and biological alignments, we used mutual information  calculated for all pairs of columns in the sequence alignment. in the biological alignments, the average value of mi was  <dig>  +/-  <dig> . in the artificial alignments, the set with pprefnode =  <dig>  and pprefedge =  <dig>  obtain a quite comparable value of mi:  <dig>  +/-  <dig> . the cases with other values for pprefnode and pprefedge obtained somewhat lower values of mi .

to analyze the influence of correlations between the samples, instead of sampling every  <dig> iterations we also tested sampling every  <dig> iterations, as well as sampling every iteration. the latter might correspond to the biological situation of having sequences that are relatively closely related phylogenetically. to simulate the situation of having even more closely related sequences in part of the dataset, we tested adding additional copies of a given sequence to the data in order to analyze the impact of these on the performance of the method.

in addition, two different datasets of alignments with noise were generated. in the first set , a certain percentage  of all positions in the sequence alignment were randomly changed into another amino acid. this type of noise is a crude way to simulate misalignment. in the second set  new sets of sequences were generated using only node potentials and without edge potentials . next, these sequences were combined with the original sequence alignments, such that 10% or 25% of the original sequences were replaced by these newly generated sequences. this second type of noise simulates the situation that sequences which are included in an alignment do not originate from proteins with the same set of interactions between residues; this might in particular happen in the case of analysis of interacting proteins where ortholog pairs from various species are added to the alignment, and where a priori it is unclear if all of these do indeed interact as is the case for the 'seed' pair of proteins.

validation of the predicted links on simulated datasets
to assess the performance of rmrcm on the above-mentioned simulated datasets, we calculated the area under the receiver operator characteristic  curve for our predictions, using the r-package rocr  <cit> . as a first approach, we selected the predicted links corresponding to the minimum bic value , and for computation of auc we used the absolute values of the coefficients  as quantitative score. as a second approach, we used the sum of the absolute values of the coefficients summed over the whole regularization path as a score. as a third approach, we also tested using the number of models  in which a particular link is present. because this approach gave very similar results to using the sum over the whole regularization path we do not report these results here. because using the minimum bic resulted in lower auc values than using the sum of the coefficients over the whole regularization path, only results for the latter approach are reported for the artificial datasets. as a standard method to compare the results of our method for the simulated datasets mutual information  was used to predict links  <cit> . mi was calculated including the correction using mutual entropy proposed previously  <cit> . we tested that this indeed gives better performance compared to uncorrected mi but we show only results for corrected mi.

biological datasets
as a standard benchmark for contact prediction we analyzed the contact prediction cases from the most recent casp experiment , for which both target sequences as well as predictions submitted by casp participants were obtained via http://www.predictioncenter.org. sequences to generate a multiple sequence alignment for each target sequence were obtained with blastp against the nr dataset with an e-value cutoff of  <dig> . because casp <dig> results have not been published yet, we calculated the prediction performance of casp <dig> cases using the raw predictions that we obtained via http://www.predictioncenter.org. we checked they are consistent with results described in http://predictioncenter.org/casp9/doc/presentations/casp9_rr.pdf. as described in the casp <dig> contact prediction assessment paper  <cit>  evaluation was performed on fm and tbm/fm domains , which in casp <dig> constituted in total  <dig> domains. residues were considered to be in contact if their cβ atoms  were within a distance of  <dig> Å. for target domains of length l, the top ranked l/ <dig> and l/ <dig> predictions according to the predictor scores were evaluated, and only contacts for residues separated at least  <dig> residues along the sequence were taken into account. predictions were evaluated using two different scores, accuracy , and xd, which measures how the distribution of distances for predicted contact pairs differs from the distribution of all pairs of residues in the target domain structure  <cit> .

as a larger benchmark, we obtained a set of sequence alignments related to pfam entries  <cit> . in order to limit the computational requirements for this analysis, we restricted this analysis to pfam entries having exactly one match of at least length  <dig> residues to a representative pdb structure. we separately analzyed cases with 200- <dig> sequences in the alignment, 500- <dig>  1000- <dig> or 2000- <dig> sequences. the number of cases in those four categories were  <dig>   <dig>   <dig>  and  <dig>  respectively. the performance of rmrcm on these cases was analyzed using the casp criteria.

in addition to these two benchmarks, we analyzed various biological datasets , including both intra- and intermolecular analyses, which were previously analyzed using various methods. in order to compare our results, we used validation criteria as described in the original publications; this means that the exact setup varies somewhat between the different cases. in particular, for the response regulator and the sk-rr datasets, a cutoff value of  <dig> Å was used to define short distances, for the mads domain proteins  <dig> Å, and for the cdd and pdz-peptide sets both  <dig> Å and  <dig> Å.

a nsets, number of separate multiple sequence alignments. four datasets consists of several multiple sequence alignments, each of which is analyzed separately. for these, the number of proteins and the number of columns mentioned are the minimum and maximum found in these sets.

b nprot, number of proteins; ncol, number of columns in the multiple sequence alignment.

c pdb identifier of structure used to compare predicted residue contacts.

d obtained via pfam.

e obtained via www.predictioncenter.org.

f see ref.  <cit> .

to align the sequences, muscle  <cit>  was used. to compare residue-residue contacts predicted by rmrcm, structure data were used . although we treat gaps in our approach on equal footing with amino acids, biologically it does not make sense to analyze columns with many gaps. for that reason, we used a cutoff on the number of gaps in a column, which was set to 50%; columns with more gaps than the cutoff were excluded from all analyses.

the pdz-peptide dataset consists of human and c. elegans pdz domains with associated binding peptide sequences for each of them. for this dataset, in addition to predicting contacts between the protein and the peptide, the model learned by rmrcm based on the human data was also used to predict interactions between c. elegans pdz-peptide pairs. for all c. elegans pdz-peptide sequences, after aligning with the human sequences, the log likelihood was calculated by summing the log likelihood for each position , using the rmrcm model selected based on minimum bic . in this way, the c. elegans interacting pdz-peptide pairs obtain a score based on the model trained with human data only. in order to compare the scores for interacting pairs with those for non-interacting pairs, a set of non-interacting pdz-peptide pairs was generated. to do so, the data for c. elegans were randomized such that peptides were randomly assigned to pdz domains for which no interaction was observed with that peptide; note that this means that our non-binding dataset might contain a subset of pdz-peptide pairs that do interact and hence the reported performance might underestimate the real performance. in total, in addition to the  <dig> experimentally observed interacting pdz-peptide pairs,  <dig> non-interacting pairs were assembled. to assess the dependence of the interaction prediction on the similarity between c. elegans and human pdz sequences, we calculated binding site identity as described previously  <cit> .

RESULTS
indirect dependencies between columns in a multiple sequence alignment  cannot easily be distinguished from direct dependencies by currently available pairwise methods for correlated mutation detection. this limits the applicability of such methods for the prediction of binding sites or residue-residue contacts. to deal with this, we use recently developed methods in structure learning of graphical models which apply regularization in order to learn sparse network structures, i.e. filter out indirect dependencies. to do so, we frame the problem of finding correlated mutations between columns in a protein multiple sequence alignment in a multinomial regression setup. we convert each column in the msa into  <dig> different columns  with  <dig>  in each column indicating presence  of that amino acid in each particular sequence . subsequently, the resulting binary matrix is used as independent variables  and each column in the original msa on its turn is used as dependent variable  in a regression approach; in doing so, we find a model for each column in the original msa which explains as much as possible of its variation using the information from all other columns in the binary matrix. regularized regression allows fitting models to such large datasets and comprises a penalty parameter to get a balance between a good fit and a small number of coefficients. these coefficients describe the resulting predicted links between columns in the msa. to select the optimal penalty parameter, we apply the bayesian information criterium , or a sum of coefficients found at different values of the penalty parameter. the resulting approach is named regularized multinomial regression based correlated mutations ; more details are presented in the methods section. in principle, our method finds 'multi-body' contacts between each residue which is used as dependent variable and all residues for which non-zero coefficients are found with that residue. however, we simply use the non-zero coefficients here as predictors for pair-wise interactions between residues.

to obtain insight into the performance of our algorithm, as well as the influence of factors such as noise or sequence similarity, we analyzed several simulated datasets. we compared the performance of our approach with the often used mutual information  approach for correlated mutations. next, a number of protein sequence alignments were analyzed for which the predicted contacts were validated with protein structure data and where the performance of rmrcm was compared with mi as well as some other approaches. in this step of validation and application to biological datasets we used both standard benchmark sets  as well as a number of datasets which have been previously analysed.

validation: artificial datasets
artificial sequence datasets were generated based on various artificial networks with different interaction densities, using gibbs sampling with a potential function defined over nodes and over edges between interacting nodes, where interactions could be either weak or strong. in addition to the generated sequences, datasets with added noise were also analyzed .

the performance of mi and rmrcm was assessed by comparing the predicted interaction strengths between pairs of columns in the msa with the known network structure using the area under the curve  value. we first discuss the results for mi. for the datasets without noise, on the alignments with only  <dig> sequences, or from networks with edge density  <dig> , mi resulted in performance very close to random performance. for datasets with  <dig> or  <dig>  sequences, the performance of mi mainly depended on the edge potential  and on the interaction density . in addition, increasing the number of sequences from  <dig> to  <dig>  improved the performance .

for the datasets with 10% "position-noise", the performance of mi as predictor seemed hardly affected, but with 25% noise there was in most cases a clear effect. for the datasets with "sequence-noise", the noise had clear impact on the performance of mi predictions at 10% noise added.

in almost all cases, rmrcm resulted in higher auc  than mi . this held true in particular at the intermediate edge density of  <dig> , where mi predictions deteriorated compared to edge density of  <dig>  whereas our approach suffered much less. for example, when using  <dig> sequences at edge density  <dig> , the auc value for mi was  <dig>  +/-  <dig>  for the case of weak node potential values and strong interactions between columns; rmrcm obtained an auc of  <dig>  +/-  <dig> . the datasets resulting from sampling using weak edge potential still obtained random auc scores using rmrcm, probably indicating the absence of any detectable signal in these cases. for the datasets with noise added, again rmrcm results were better than mi results .

a general issue in correlated mutation analysis is that when sequence similarity is high , it can be difficult to disentangle correlation and conservation  <cit> . to investigate this, we analyzed the effect of sampling frequency when generating the datasets. when using  <dig> iterations instead of  <dig> as used above as interval for writing output during the gibbs sampling , the performance only slightly improved . however, when using highly correlated samples  there was a clear impact on performance, which dropped considerably. for example, for the same networks with density  <dig>  mentioned above, auc for mi was  <dig>  +/-  <dig>  and that for rmrcm was  <dig>  +/-  <dig> .

as the most extreme limit of high correlation between a number of sequences in the alignment, we tested the influence of adding additional copies of a given sequence to the alignment . for mi, there was a clear effect; for example, for networks with density  <dig> , strong edge preferences and weak node preferences, the auc for mi with  <dig> added copies was  <dig>  +/-  <dig> , with  <dig> copies  <dig>  +/-  <dig>  and with  <dig> copies  <dig>  +/-  <dig> . however, for rmrcm, there was hardly any change in performance  meaning that also in this respect it performed better than mi.

protein datasets: intramolecular analysis
to test our method on biological datasets and demonstrate its applicability, we first tested two standard benchmarks, viz. casp contact prediction cases and a large set of pfam entries. in addition, we chose to analyse various datasets that have been analyzed previously and where prediction performance was assessed using available crystal structures. in order to be able to compare with those previously obtained results, we used validation criteria as described in the original publications. this means that the exact setup varies somewhat between the different cases, but it has the important advantage of allowing comparison with results obtained by developers of various methods, who are experts on those methods and would be expected to obtain the best result possible with their respective methods.

casp <dig> contact prediction
contact prediction target cases were obtained from the latest casp round. we observed a clear dependence of rmrcm performance for contact prediction on the number of sequences in the alignment . we also provide the average casp performance in figure  <dig> as additional comparison. in fact, for two of the four alignments with more than  <dig> sequences , the performance of rmrcm was better than that of any of the casp <dig> participants, based on accuracy, i.e. the fraction of predicted contacts that are indeed contacts in the crystal structure. when based on xd, which measures how the distribution of distances for predicted contact pairs differs from the distribution of all pairs of residues in the target domain structure, this was only the case for t0604-d <dig>  the one with the highest number of sequences . for all four of these alignments rmrcm performance was better than the average casp performance. for many of the cases for which only a small number of sequences was available, rmrcm performance was not good, even not in comparison to the average performance of casp participants. note however that various machine learning algorithms are used in casp, which incorporate various features and as such the performance of rmrcm as a contact predictor could be boosted by combining the correlated mutation search with such approaches. this could include for example specialized beta-sheet contact prediction algorithms such as applied by nncon  <cit> .

the dependence of rmrcm performance on the number of sequences in the input alignment as observed with the casp datasets, was similar to what was observed for the artificial datasets . another observation from the artificial datasets, as mentioned above, was that the contact density had a large influence. however, we did not find such influence for the casp cases although there is indeed quite some variation in contact density for the casp cases .

pfam
we selected a subset of pfam entries , which we subdivided according to the number of sequences in the alignment. a clear dependence for the contact prediction performance was observed on the number of sequences in the alignment, such that going from less than  <dig> sequences via less than  <dig>  sequences to between  <dig>  and  <dig>  sequences the performance clearly improved . increasing the number of sequences even further  did not give any additional improvement in performance. although direct comparison with performance on the casp cases is obviously not possible, it is reassuring that the average performance measures observed with the cases with at least  <dig>  sequences would place rmrcm among the best performing approaches when compared with available casp prediction results. performance of mutual information on all those datasets was clearly worse; for example, for the sets with between  <dig>  and  <dig>  sequences, the accuracy for the l/ <dig> best scoring contacts with mi was only  <dig>  +/-  <dig>  compared with  <dig>  +/-  <dig>  for rmrcm.

a nprot, number of protein sequences in the alignment.

baccuracy, fraction of predicted contacts that is correct according to the crystal structure. contacts are defined according to the casp criteria  within a distance of  <dig> Å; only contacts for residues separated at least  <dig> residues along the sequence were taken into account).

c xd, measures how the distribution of distances for predicted contact pairs differs from the distribution of all pairs of residues in the target domain structure.

d highest ranked predicted contacts were assessed, using either l/ <dig> or l/ <dig> contacts. here l refers to the length of the target sequence. values for accuracy and xd are averages .

because these datasets represent a typical setting in which rmrcm could be applied, we also analyzed the running time. on average, for the sets with  <dig> -  <dig> sequences rmrcm needed approximately  <dig> hours on a single cpu for a single dataset, meaning that using any reasonable sized compute cluster one can analyze fairly large amounts of data. for the smaller sets the running time was much smaller, for example for the sets with 500- <dig> sequences it was on average less than  <dig> hours. running time showed a positive pearson correlation coefficient of ~ <dig>   with both number of columns in the alignment and number of sequences in the alignment.

mads domain proteins
the mads domain protein dataset consists of  <dig> arabidopsis mads domain proteins with homologous sequences from various plant genomes which we previously analysed using caps, an algorithm which uses blosum and calculates pearson correlation coefficients between the transition probability scores  observed in one column and each other column  <cit> . for these proteins, the rmrcm predictions in almost all cases had a significant overrepresentation of short distances compared to the crystal structure: using a χ2-test, all but two out of twelve mads datasets had p-values below  <dig> , and in most cases the p-value was much smaller; the average for the ten cases with p <  <dig>  was  <dig>  +/-  <dig> . although the distance enrichment of the results previously obtained with caps was in some cases slightly better than for rmrcm, the number of predicted links was much higher with our new approach . to make a proper comparison, we calculated the f-scores  <cit>  for the predicted links. with  <dig>  +/-  <dig>  this was much higher for rmrcm than what was previously obtained with caps . we also used mi on those datasets, and found that the distance enrichment of mi-predicted links was much worse than what was obtained with caps or rmrcm .

note that there is quite some variation in the performance for the various mads domain proteins, which is mainly related to the different amount of sequences in the multiple sequence alignments for those proteins, as observed already when using caps  and in line with results mentioned above.

response regulator proteins
for the response regulator proteins, we calculated the accuracy vs. rank percentile for predicting contacts  as was previously done by weigt et al.  <cit> . here, the predicted contacts were sorted based on the score assigned by rmrcm, and the accuracy of the top n% predicted contacts, i.e. the fraction of predicted pairings which indeed were in contact in the structure, was calculated, for various values of n . figure 4b can be directly compared with supporting information figure s <dig> in weigt et al. the performance of our procedure is quite comparable to their performance, which is remarkable because our approach is computationally much less expensive. weigt et al. had to restrict their analysis to a subset of only  <dig> positions in order for the problem to be computationally tractable whereas we can easily analyze more columns .

cdd
as a final set of protein msas for intramolecular analysis we used data previously analyzed using mi  <cit> , assembled using the conserved domain database . here, combining results for all different datasets, in the crystal structures 6% of the residue pairs had distance below  <dig> Å and 35% below  <dig> Å. for the bic-based predictions, these percentages were 25% and 67%, respectively; this increased to 41% and 73% when restricting to the ten highest scoring pairs for each dataset. the performance when using the sum of the coefficients along the whole regularization path was quite comparable although slightly worse than when using bic. when restricting to the pairs that had overlap with the top  <dig> mutual information-based pairs, these percentages were somewhat higher . the top  <dig> mutual information based pairs had somewhat lower enrichment with 24% and 66% within  <dig> Å and  <dig> Å, respectively.

comparison with the results obtained by martin et al., who analyzed only pairs of residues that have no additional partners , indicated that in our case the distance enrichment was slightly lower, but again the number of predicted links was much higher. for example, for the alignments with at least  <dig> sequences, using the top  <dig> predictions for each dataset, we obtained a fraction of predicted residue pairs within  <dig> Å of  <dig>  compared to  <dig>  for martin et al.; however, in their case, only  <dig> pairs were predicted, compared to  <dig> in our case.

protein datasets: intermolecular analysis
sk-rr
for the sk - rr interacting proteins, we tested allowing either only intermolecular contacts, or both inter- and intramolecular contacts . based on comparison with intermolecular contacts from the available crystal structure, the exact setup did not influence much the results. weigt et al. previously predicted  <dig> links which indeed all had a short distance in the crystal structure. when taking the  <dig> links with the highest sum of coefficients based on minimum bic or using the sum of all coefficients along the regularization path, in most cases we also predicted only pairs that were indeed in contact . most of the predicted links were the same as found by weigt et al.

pdz-peptide
the pdz-peptide dataset consists of a set of human pdz domains and associated binding peptides for each pdz, and a similar set of c. elegans pdz domains and interacting peptides. for this dataset, we used rmrcm to predict residue contacts between the pdz domain and the peptides, but in addition we tested using rmrcm for predicting which pdz domain interacts with which peptide. first, we predicted pdz-peptide residue connections. here, using only intermolecular contacts resulted in much worse intermolecular contact prediction than using both intra- and intermolecular contacts. we compared the top  <dig> predicted intermolecular links obtained with the model using both inter- and intramolecular contacts for rmrcm with those predicted by mi. both had about an equal number of predicted contacts which were found in the crystal structure within  <dig> Å . however, the number of predicted contacts found within  <dig> Å in the crystal structure was much higher for rmrcm  compared to mi ; the value found for mi is equal to the overall percentage of pairs of residues found within  <dig> Å of each other in the crystal structure. hence, although mi does not improve over a random prediction, rmrcm clearly does.

indeed, the majority of the residues predicted using rmrcm on the pdz protein are in close proximity of the ligand peptide . in some cases, the residues on the pdz protein also contact with the residue on the ligand with which a connection is predicted whereas in other cases the residues found on the pdz domain just are near the binding site but do not directly contact the peptide residue with which a connection is predicted .

in addition, we used the model trained with human data to predict interactions for c. elegans data based on the likelihood score. when using a model trained using both intra- and intermolecular links, this resulted in poor differentiation between interacting and non-interacting c. elegans pdz-peptide pairs. however, when using a model trained using only intermolecular links, there was a clear differentiation; for example, among the top  <dig> pdz-peptide pairs with the highest score,  <dig> were indeed interacting, whereas among the lowest  <dig> scores,  <dig> were indeed non-interacting.

previously, a simple method was proposed using binding site similarity between pdz domains to predict interactions with peptides  <cit> . in line with the results of that method, we observed a relationship between the maximum binding site identity of a c. elegans pdz with the human pdz sequences, and the auc we obtained for prediction of interactions of that c. elegans pdz sequence . interestingly, only below a binding site identity of  <dig>  the interaction prediction became less reliable. this is an improvement over the previously observed binding site identity which was needed to reliably transfer interaction information between pdz domains   <cit> . hence, at least for this particular dataset, rmrcm is able to push the limit of cross-species sequence-based interaction prediction towards lower similarity levels. note however that we provide here just one example of using rmrcm as a way to predict interactions, because our focus is on predicting residue-residue connections. further work would be needed to assess the performance of rmrcm as a general protein-protein  interaction predictor.

discussion
we present rmrcm, a method for correlated mutation analysis using regularized multinomial regression, and demonstrate its performance and applicability with various datasets. even though correlations between columns in a multiple sequence alignment can arise due to various factors, we focus here on using our algorithm to predict residue-residue contacts. our algorithm explicitly takes into account the occurrence of direct vs indirect dependencies by using all columns in the multiple sequence alignment simultaneously as independent variables to predict the variation in a given column. existing methods use various approaches such as applying cutoffs based on randomized alignments to distinguish direct from indirect dependencies but rmrcm uses a more principled approach here.

in comparison with mi, we found on simulated datasets that our approach has a better performance in predicting network edges. note that our simulation model might be somewhat limited in its ability to reflect biological reality but we used it here as an initial test for our method. analysis of casp and pfam cases indicates a very good performance of our algorithm in cases where enough sequences were available. when analyzing additional biological datasets, we found in most of these a comparable or better distance enrichment for rmrcm compared to existing algorithms, in combination with much higher numbers of predicted links by rmrcm. also, a combination of mi and our new approach seems particular powerful. a clear dependence of rmrcm contact prediction performance on the number of sequences in the alignment was observed, such that until at least ~ <dig>  sequences performance increases when adding more sequences. nevertheless, also with sequence alignments with less sequences rmrcm predictions can be competitive compared to existing algorithms for correlated mutation analysis. although currently the requirement of ~ <dig>  homologous sequences for a given protein of interest is still somewhat restrictive, one would expect that for proteins that are present in a large enough range of species quite soon the current explosion in sequence data due to the ongoing revolution in sequencing technology will alleviate that restraint. of particular relevance here are ongoing projects to sequence hundreds or even thousands of different species  for alignments with too few sequences, rmrcm would probably not be the method of choice for predicting residue contacts based on sequence data only.

one additional feature that we plan to add to rmrcm is to take amino acid similarity  into account, by using a prior and/or penalty term that forces amino acids in a given response-column that are similar to each other  to obtain links with amino acids in each predictor-column that are similar to each other , or that promote contacts between "complementary" amino acids . we expect that this might further boost performance. also, currently we do not correct for the effect of phylogenetic relationships in the sequence alignment that we use as input  <cit> ; doing so might further improve rmrcm.

during the preparation of this manuscript, a novel method, gremlin, appeared which also uses regularization to learn a graphical model structure based on sequence data  <cit> . in several computational aspects, including the exact formulation of the regularization, rmrcm is different from gremlin. more important, however, is that the focus of that study was on validating the approach by calculating the imputation error, i.e. the probability of not being able to generate a complete sequence given an incomplete one. as such, that study, and the current study where we focus on residue contact prediction and interaction prediction, are complementary.

an interesting and useful aspect of rmrcm is that it is possible to choose subsets of residue interactions to be taken into account. in particular, we tested using either only intermolecular contacts or both intra- and intermolecular contacts; note that existing pairwise correlated mutation approaches per se analyze intermolecular contacts separately from intramolecular contacts in the sense that they analyze pairs of columns, where each pair is either intramolecular or intermolecular. hence, predictions for intramolecular contacts do not influence predictions for intermolecular contacts, or the other way around. in rmrcm this is different, because we can choose to use either all positions in the alignment as explanatory variables or just a subset. for the prediction of residue contacts, although we did not find much difference for the sk-rr dataset, for the pdz-peptide dataset the use of both intra- and intermolecular links in the model gave much better results for intermolecular contact prediction compared to using only intermolecular links in the model. for the prediction of c. elegans pdz-peptide interactions based on human interaction data, the situation was reverse: a model trained using only intermolecular links performed better. this might be because the c. elegans pdz sequence similarity to human pdz sequences overwhelms any intermolecular contribution to the scoring of a c. elegans pdz - peptide pair when including intramolecular links.

CONCLUSIONS
to conclude, the validation using simulated data as well as biological data, demonstrates the usefulness of rmrcm. we believe rmrcm is a versatile framework which will prove quite useful in the annotation of protein sequences.

authors' contributions
js implemented the algorithm, carried out part of the validation and application studies, and drafted the manuscript. cjftb participated in the design of the study and the implementation of the algorithm. rchjvh participated in the design of the study and helped drafting the manuscript. adjvd conceived of the study, participated in its design and coordination, carried out part of the validation and application studies, and helped to draft the manuscript. all authors read and approved the final manuscript.

