BACKGROUND
event extraction from biomedical literature has been the major focus of recent efforts in biomedical text mining. events are key to understanding biological processes, and their automatic extraction facilitates the development of several domain specific applications, such as semantic search, pathway construction and database curation support  <cit> . events are normally represented as n-ary associations of entities and other events, where participants are identified as playing specific roles  in the event. each event is typically further associated with a trigger expression that denotes its occurrence in text, and may be assigned modifiers , marking it as being, e.g., negated . established benchmark datasets and recent competitive results from multiple systems that have emerged from two shared tasks, i.e., the bionlp shared task   <dig>  <cit>  and  <dig>  <cit> , have stimulated interest in the development of event extraction systems.

manually created annotations are required as training material for state-of-the-art statistical systems. manual annotation is time-consuming and expensive, and annotation efforts become increasingly demanding as more types of entities, relations and events are included in the scope of annotation. it is infeasible to deal with all potentially interesting semantic types in any single annotation effort due to cost and time restrictions and the difficulty of maintaining annotation consistency and quality while taking large numbers of semantic types into consideration. each annotation effort thus tends to focus on a limited number of semantic types relevant to its immediate aims, which in turn results in the proliferation of corpora that overlap only partially in semantic scope, if at all  <cit> .

such partially overlapping semantic annotations represent significant challenges for statistical extraction systems. the combination of corpora whose annotation scopes are different causes difficulties in training, even in cases where semantic types shared between the corpora have been annotated using the same criteria  <cit> .

as an example of the issues involved, consider figure  <dig>  which illustrates two example sentences arising from a hypothetical naïve combination of corpora annotated with different scopes. given these two sentences as examples of correct annotation, a learner – whether human or machine – would have evidence that methylation and binding should be marked in some cases, but not in others , and would be likely to fail to learn to mark both types of events consistently.

due to these challenges, each system is typically trained on a single corpus that is fully annotated with a uniform set of semantic types. for multiple corpora, this results in multiple models, each of which covers only a small slice of the semantic space. in contrast to this standard setup, there has been little focus on training event extraction systems on multiple corpora. this holds also for the bionlp sts, even though they are open challenges that explicitly allow external resources to be used in addition to the given training data.

several previous studies have combined multiple corpora for domain-specific information extraction tasks, such as named entity  recognition for ne normalisation  <cit>  and protein-protein interaction  extraction  <cit> . however, the corpora combined in these studies contain differences not only in their annotation scopes but also in the definitions of particular semantic types. to explore the reasons for the incompatibility that exists between the semantic types in the different corpora, detailed analyses have been performed on the differences among gene and protein annotations in three common corpora  <cit> , and on the differences among ppi annotations in five ppi corpora  <cit> . despite such manual efforts to identify incompatibilities, no general automatic methods for resolving them have been introduced. consequently, practical efforts to combine these resources rarely involve methods beyond direct corpus merging, which can show reduced performance compared to training on a single corpus.

there are also many studies on aspects of learning with domain adaptation  <cit> , multi-task learning  <cit>  and transfer learning  <cit> . as these methods make no assumptions regarding the compatibility of annotations, they can also be applied in our setting of multiple corpora with partial overlap. these types of approaches have been employed by several event extraction systems, and they have been demonstrated to improve system performance  <cit> . however, whilst assuring applicability to a wide range of problems, the lack of assumptions regarding the compatibility of annotations between different corpora also prevents them from benefiting from direct combinations of data for training. these methods also limit the scope of the resulting systems to the semantic types annotated within a single target corpus, rather than allowing the extraction of the union of types annotated in the applied corpora.

this paper focusses on the construction of a wide-coverage event extraction system by leveraging multiple corpora with partially overlapping semantic annotations as training data. in contrast to established approaches such as stacking  <cit>  and simple domain adaptation  <cit> , we introduce a general method that allows a single model to be trained through the merging of multiple corpora. the single model has a wide-coverage, i.e., it covers all the semantic types that appear in the multiple corpora. the method has the advantage of directly combining annotations of semantic types that are shared across different corpora, whilst also explicitly addressing the potentially negative effect of inconsistent annotation in the merged set of types that are specific only to certain corpora. our approach is straightforward to implement and can be applied to various machine learning and information extraction tasks.

to evaluate the proposed method, we implement various approaches to corpus combination, integrate these with our existing event extraction system, eventmine  <cit> , and perform experiments using each approach on seven biomedical event extraction corpora. our results demonstrate that the combination of partially overlapping corpora can improve extraction performance, and that the best combination strategies can be used to train a general, wide-coverage event extraction system that outperforms systems trained on single corpora. we additionally show that using our approach, eventmine can outperform all previously proposed methods on two benchmark tasks established by the bionlp st  <dig>  the epigenetics and post-translational modifications  and infectious diseases  tasks  <cit> . detailed evaluation indicates that the system can benefit from the availability of multiple corpora, not only due to a greater number of instances of shared semantic types, but also by using instances of non-shared types, which can serve as constraints in learning. the ability to learn from multiple corpora also suggests that the use of existing resources can reduce the need for the manual annotation of existing semantic types in new corpora and thus allow more efficient division of labour in annotation tasks.

methods
our focus here is on the construction of a wide-coverage extraction system from multiple corpora that partially overlap in their annotation scopes, most sharing only a small number of annotated types with the other corpora in the set. in this study, we follow the bionlp st task setup, in which named entity annotations  are provided to the extraction system as part of its input, and the system aims to extract event structures that involve these named entities from text.

event annotated corpora
we focus on the three largest event corpora introduced in the bionlp st, and consider also four other corpora annotated using similar criteria. table  <dig> shows the statistics of the training and development portions of the corpora.ge consists of texts drawn from abstracts and full texts in the transcription factors in human blood cells domain, annotated for nine event types involving proteins  <cit> . the corpus was created for the bionlp st  <dig> and is based primarily on the genia event corpus  <cit> . id consists of full-text publications on the molecular mechanisms of infectious disease, annotated for the same event types as ge plus a type for high-level processes, as well as multiple entity types . the corpus was created specifically for the bionlp st  <dig>  <cit> . epi consists of abstracts relating primarily to protein modifications, drawn from pubmed without other subdomain restrictions and annotated for  <dig> protein entity modification event types and their catalysis  <cit> . similarly to the id corpus, epi was created for the bionlp st  <dig> dna methylation  consists of abstracts relevant to dna methylation and demethylation events and their regulation, and is annotated for the corresponding event types.  <cit> . exhaustive ptm  consists of abstracts selected by relevance to a diverse set different of protein modification types, and is annotated for protein entities and a comprehensive set of protein modification events.  <cit> . mtor consists of abstracts referenced as evidence for reactions curated in the mtor signalling pathway  <cit> , annotated for entities and events relevant to the pathway model formalism  <cit> . multi-level event extraction  consists of abstracts in the blood vessel development subdomain that have been annotated using a comprehensive set of entity and event types encompassing levels of biological organisation from molecule to organism  <cit> .

the partial overlap of semantic annotations bet- ween corpora is key to our approach. we build on the assumption that types sharing the same label  in two corpora denote the same semantic type and are annotated in a broadly compatible manner. for these and several other biomedical domain resources, this assumption is expected to hold due to the success of efforts such as the gene ontology   <cit>  in establishing shared ontological foundations for biomedical science: all of the corpora considered in this effort draw their event types from go and are annotated with broadly compatible criteria. this is different from corpora in many other nlp tasks, e.g.,  <cit> , which do not share ontologies, types, or annotation criteria. it should be noted that differences in scope due to entity annotation can occur even when an event type is otherwise identically annotated in two different corpora. for example, the event type localization involves only protein annotations in ge, but other entity types are also possible for the same event type in mtor and mlee. table  <dig> shows the numbers of events that are transferable from one corpus to another due to the appearance of the types in both corpora.

this table shows how many event instances in each row corpus can be transferred to each column corpus. sum shows the sum of event instances in other corpora transferable to each column corpus, ratio shows the ratio of the number of transferable event instances to the number of event instances in each column corpus. for the number of event instances in each row corpus, please refer to table  <dig> 

event extraction system: eventmine
before introducing the approach for learning from multiple corpora, we briefly introduce the baseline state-of-the-art, pipeline-based event extraction system, eventmine  <cit> . the system consists of four modules: trigger/entity detector, argument detector, multiple argument detector and hedge detector. figure  <dig> shows an example analysis using the eventmine pipeline. each module employs svm classifiers with a one-vs-rest scheme, using rich features derived from a full syntactic analysis of the input text, represented using dependency-type relations.

the classifiers of each module are constructed as follows.

the trigger/entity detector
constructs a trigger/entity word dictionary from the training data and optional external dictionaries, selects trigger/entity candidate words from all the words in texts using dictionary matching, and builds classifiers using the word candidates as instances and their types  as labels. note that this dictionary matching is used both in the training and prediction to reduce the computational cost, and this is separated from our filtering method which will be presented in the next section. features for word candidates include character n-grams, context word n-grams and the shortest dependency paths between word candidates and named entities.

the argument detector
identifies relations between trigger words detected by the trigger detector and their candidate role arguments, and builds classifiers with relations as instances, and role types and none as labels. features include character n-grams in candidate participant text spans , context word n-grams around the candidate participants, shortest paths between the participants, and shortest paths between the participants and other triggers or entities.

the multiple argument detector
constructs candidate event structures by enumerating all possible combinations of the detected relations, and builds classifiers with candidate structures as instances, and event types and none as labels. features are derived from the participant relations of the candidate event and other relations that include the same participants.

the hedge detector
builds a hedge classifier with events as instances and their hedge types  as labels. features include dependency paths containing the event trigger and relation features derived from participant relations.

candidate construction is performed identically in training and prediction. for further details on eventmine, please see  <cit> .

we note that despite substantial differences in implementation details, this general architecture and approach to the integration of machine learning-based classifiers is fairly common in state-of-the-art event extraction systems . our approach is thus directly applicable to systems other than eventmine, and similarly it is expected that our results can be generalised to a number of other systems.

learning from multiple partially overlapping corpora
in conventional applications of statistical classification-based systems such as eventmine, candidate instances not annotated in the source corpus generate negative examples for training . direct application of a system developed for training on a single corpus to multiple, partially overlapping corpora can thus lead to the creation of spurious negative instances from one corpus for cases that correspond to positive instances in terms of the scope of another corpus.

as an example, consider the case of two corpora in which the semantic types protein and complex are marked in one , whilst protein and organism are marked in the other  . here, nf-kappa b is only annotated as complex in corpus a and human is only annotated as organism in corpus b. if the corpora are directly merged and a system is trained on the merged corpus under the closed-world assumption, mentions of human from corpus a and and mentions of nf-kappa b from corpus b will be incorrectly treated as negative examples.

to avoid such negative effects from the inconsistent annotation of types that are not shared across corpora, whilst also benefiting from the annotation of shared types, it is necessary to generate from each corpus only those training instances that are relevant to types annotated in that corpus. in the setting considered here, this is straightforward – in effect automatic – for positive instances, since positive instances are always explicitly annotated. by contrast, the generation of negative examples must be restricted in a way that differentiates between valid and spurious negatives.

if there were a method to reliably determine whether a candidate instance in one corpus would have been annotated as positive under the criteria of another corpus, we could restrict the generation of negative instances in precisely the correct cases. although there is no such general, precise, automatic method, we can automatically construct reasonably reliable filtering heuristics in the following way. for text span classification tasks , we can limit the generation of candidate negative instances in each corpus of the merged data set to only those cases in which the surface expression  matches at least one positive instance of an annotated type in any corpus that shares the type. for example, it is reasonable to assume that human never appears among the positive instances in the corpus a of the above example, and so none of the instances of the word human that appear in this corpus will be treated as negative instances. analogously, for relation/event extraction, we can restrict generation to those negatives where the combination of the semantic types of the participants appears labelled as a positive instance of a type in scope of the corpus. for example, corpus a would not contain any protein-organism relations, and so no negative instances of this relation type would be generated for the corpus a. in cases where there are no semantic types for the participants, their surface expressions can be used instead, although this restriction may not work well when the surface expressions are diverse.

when applying a filtering approach of this type, adding new, partially overlapping corpora to the set used for training has the benefit of increasing both the positive examples of overlapping semantic types, as well as increasing the set of negative instances for these types.

we present an algorithmic description of the filtering approach in training below. 

 <dig>  extract a set of positive  instances pj from all the corpora for each type tj.

 <dig>  construct a filter fj  for each type tj using the set of positive instances pj.

 <dig>  construct a filter fi for each corpus ci from the filters for all the types annotated in ci

 <dig>  extract a set of negative instances ni for each corpus ci

 extract negative instances ni′ for each corpus ci

 select ni by filtering out  spurious negative instances from ni′ using the filter fi .

 <dig>  train a binary classifier for each type tj

 merge ni for all tj-annotated corpora and all remaining positive instances for other types, i.e., pm for all types tm , as negative instances nj

 train a binary classifier on the positive instances pj and the negative instances nj

 <dig>  train a binary classifier for a negative type 

 merge ni for all corpora as positive instances pneg

 merge pj for all types as negative instances nneg

 train a binary classifier on the positive instances pneg and the negative instances nneg

training must be performed in a one-vs-rest setting separately for each type  as the creation of negative instances varies by type. prediction is then performed without any filtering so that the model can extract all the semantic types in all the target corpora.

event extraction from multiple partially overlapping corpora
we implement the approach to filtering negative instances introduced above in the context of event extraction by modifying existing eventmine modules. figure  <dig> shows an illustrative example contrasting the proposed filtering approach to a naïve corpus merge for a case that would be annotated differently for ge and epi. the figure shows the instances that would be identified by the trigger/entity and argument detection classifiers according to the two different task descriptions . note that the sentences in the figure are prepared for illustrative purposes only; the applied corpora do not have multiple sets of annotations for any single sentence. for the trigger/entity detector, we first create for each type a merged dictionary of all the expressions  annotated with the type in any of the corpora, and then apply this to filter the candidates generated from each corpus to avoid erroneous negative instances. in figure  <dig>  bind is not generated as a negative instance  since bind does not appear amongst the positive instances for epi. similarly, methylation is not amongst the negative instances. for the argument and multiple argument detectors, we determine the set of annotated semantic type combinations  as the filter in each corpus, and we similarly restrict the generation of negative instances to those combinations that are associated at least once with an annotated semantic type combination in the set. for example, methylated →histone h <dig> in figure  <dig> is not included amongst the negative instances, since its semantic type combination, methylation-protein, never appears in the set of annotated semantic type combinations of ge. the filter applies similarly to other negative instances that would be erroneously created if a naïve corpus merge were used. for the hedge detector, all the instances are used without filtering, since all events are annotated with hedges. figure  <dig> also shows that the positive examples are merged without filtering and that the number of shared positive instances, e.g., lysine 4:entity, is increased. we note that this filtering approach is not perfect, and some correct negative examples are removed in figure  <dig> 

in training the eventmine models using multiple corpora with the filtering approach, we train separate one-versus-rest models for each type, as the set of negative examples that can be applied  varies depending on the type under consideration, as mentioned previously. in addition to the outlined benefits of our approach in isolated classification settings, we note that in pipeline architectures such as eventmine, the use of merged sets of corpora is also expected to have cumulative benefits in terms of the ability to make use of additional features from instances predicted by preceding modules.

evaluation settings
corpora
we employed the seven corpora introduced above. we used the standard train/development/test data splits provided for the ge, epi, id, and mlee corpora. the dnam and eptm corpora only define train/evaluation splits, which were applied in all experiments on these corpora. as the mtor corpus is not provided with a specific way to divide the data, we split the corpus into random train and evaluation sets on the document level.

we unified certain aspects of the corpus annotation that did not feature explicit direct overlap so that we can evaluate the results with the same criteria applied in the bionlp st  <dig>  the catalysis event type in mtor was replaced with the positive regulation type, as the positive regulation type in the other corpora is compatible with the combination of those event types in mtor  <cit> . we also replaced dna domain or region or protein domain or region in mlee with the genetic entity type applied in the other resources  <cit> . we unified minor, semantically non-significant differences in role type names  among the corpora. we also filtered out rare role types  since they do not appear in all corpora and the arguments of the role types are not protein.

finally, we removed event structures appearing only once in the training data  to reduce computational cost.

compared methods
we compare the following methods to training given multiple corpora: single: consider each corpus separately, and learn separate models. merge: merge the corpora with no modification, and learn a single model. stacking: consider each corpus separately, using outputs of models trained on the other corpora as additional features, as done in e.g.,  <cit> , producing separate models for each corpus. easyadapt: apply the feature-based domain adaptation method of  <cit> . this method employs two kinds of features, corpus-dependent and corpus-independent features, and learns a single model from all the corpora. the set of features is duplicated for each instance, and one set is used as corpus-dependent and the other is used as corpus-independent features. although this method produces a single model, the application of the model is corpus-dependent due to the corpus-dependent features. here, we additionally treat the abstract and full-text portions of ge separately, following  <cit> . multiple: learn a single model from all the corpora using the filtering approach proposed in this study. table  <dig> summarises the differences among the methods.

event extraction settings
we follow the settings used by  <cit>  for eventmine, with the following four exceptions. firstly, we do not employ the protein-specific coreference resolver to avoid negative effects on named entities other than protein. the extension of the coreference resolver to other named entity types is left as future work.

secondly, we do not employ cross validation in training, to avoid negative effects that cross validation tends to ignore rare event types with small numbers of training instances.

thirdly, we treat all post-translational modification  types as a single type in modules other than the trigger detector, which assigns the final type. this is a straightforward extension of the previously proposed epi setting. finally, in addition to several lexical and semantic resources, we use meta-knowledge cues from the genia meta-knowledge corpus  <cit>  in the hedge detector. for brevity, we do not explain the details of the settings; we refer the reader instead to  <cit> .

evaluation on each corpus is performed after removing from the system output all the events involving event types not within the annotation scope of that corpus. we evaluate the results with the official evaluation tools and servers of the bionlp st  <dig>  and we mainly report results for the primary  evaluation criteria, which evaluate both whole event structures and their hedge types.

RESULTS
performance on annotated events
tables  <dig> and  <dig> show the results of evaluation on the development sets of the various corpora. with regard to the overall performance on all the corpora , the proposed approach, multiple, achieves the best performance for both the event extraction and the hedge detection tasks. the performance for the multiple setting is statistically significantly better than for the single, merge, and stacking settings , using the approximate randomisation test  <cit> . the multiple setting produced high recall results, which is arguably preferable for many applications, such as semantic search. in contrast, the f-score for event extraction with the merge setting is slightly lower than for the single setting, and the overall f-score with the merge setting is effectively identical to that for the single setting. this shows that the spuriously created negative examples cancel out the benefit of the increased training instances in the merge setting. easyadapt appears to perform slightly worse than multiple, although the difference is not statistically significant .

the full task evaluation criteria are employed. event, hedge and their total results are shown. the highest results are shown in bold, and the lowest results are underlined.

the full task evaluation criteria are employed. the highest results are shown in bold, and the lowest results are underlined.

in the detailed results separated by corpus , we find that the performance on ge and mlee using the naïvely merged corpora  shows a significant degradation compared to the single corpus results, although an improvement was observed for some of the other corpora. this indicates that the negative effect of simple corpus merging depends on the specific case considered. our new method  and stacking are the only approaches that consistently improve performance over the single setting. the stable improvement of stacking is expected, as stacking trains a model on each target corpus and only adds new information compared to single. the stable improvement of multiple shows that the proposed filtering approach was effective in reducing the detrimental effects of spuriously created negative examples. furthermore, the multiple setting performed better than stacking on  <dig> out of  <dig> corpora, which shows that direct instance addition in multiple is usually better than the indirect use of information through stacking. easyadapt achieved good performance on id and mlee and showed comparable performance to multiple on most of the corpora. in summary, the multiple setting achieved the best results on ge, epi, dnam and mtor, the easyadapt setting performed best on id and mlee, and the merge setting performed best on eptm. taken together, the results in tables  <dig> and  <dig> also show that the number of shared events does not necessarily correlate with the improvement achieved by the multiple setting, even if the ratio of the number of increased events to the number of original events is quite large, such as for mtor . this effect is not unexpected, considering the various challenges of extracting each event type and the diverse distribution of the shared event types.

as shown in figure  <dig>  there are several event types that are isolated – that is, occur in only one corpus – as well as several event types that overlap between multiple corpora. to determine the effect of the various approaches to corpus combination for isolated vs. overlapping event types, we evaluated performance on these two sets of events separately. the results are summarised in table  <dig>  here, we also show the results on isolated types excluding the ptm types, i.e., types in epi and eptm, since all ptm types share the same event structures and are thus not completely isolated. the results show that the multiple setting not only improves the performance on the overlapping event types but also slightly improves the performance on the isolated event types. the approach is shown to be particularly effective for isolated non-ptm types, for which approaches other than multiple resulted in decreased performance compared to single. this shows that the instances introduced by the multiple setting worked at least to some extent as useful negative instances for those isolated types.

the full task evaluation criteria are employed. isolated types excluding ptm, all isolated types and overlapping types are shown. the highest results are shown in bold, and the lowest results are underlined.

the full task evaluation criteria are employed. we report the subtask task  <dig>  result for ge. the highest results are shown in bold, and the lowest results are underlined.

although the performance differences between easyadapt and multiple are not significant, there is a very important difference between the systems resulting from training using these two approaches. the multiple setting produces a single system that operates on all the corpora, while the other most successful settings, i.e., stacking and easyadapt, are corpus dependent . stacking produces multiple models, each specialised to a target corpus. easyadapt produces a single model, but the features for each instance depend on the target corpus. the consistent improvement demonstrated by our new approach is particularly notable considering that it results in a single, coherent system. the ability to produce such a system is important for practical applications, since it means that the simple application of one system can produce coherent analyses over a large part of the semantic space and avoids the need to combine system outputs for further processing.

we have shown here that the multiple setting can produce a single, coherent system with highly competitive performance, but the approach still has some limitations. the approach is not as general as methods such as stacking, since it requires task-dependent filters. to further reduce the requirements to apply the method, we can consider ways to easily define filters appropriate for specific tasks, e.g., by providing templates. the setting can filter out correct negative examples, as shown in figure  <dig>  but we could further incorporate thesauri and dictionaries to extend the filtering dictionaries and relax the filtering. we have treated event types as mutually-exclusive, but event types in different corpora could also overlap or be hierarchically related. these cases would need to be treated separately. to further improve the approach, we thus need to consider ways to extend our method to be able to treat relations among types. for example, we could remove positive examples of overlapping types from negative examples, and merge more specific  positive instances to more general  positive instances in a type hierarchy.

comparison with other event extraction systems
the results achieved on the three corpora of the bionlp st  <dig> using our new method  are summarised in table  <dig>  where the performance is compared to the two top performing systems in the shared task, i.e., faust  <cit>  and the turku event extraction system   <cit> , as well as to the version of eventmine incorporating coreference resolution and domain adaptation   <cit> . faust combines two event extraction systems, a dual decomposition-based event extraction system  <cit>  and a dependency parsing based event extraction system  <cit> . faust also merges genia and id, using two copies of id and one of genia for training a model for id, corresponding to the merge setting with the addition of different weights for instances from the two corpora. tees is a pipeline-based event extraction system using svms with a similar overall architecture to eventmine. em-cr performs better than the system with the multiple setting on ge, since it employs the coreference resolution system to protein entities, which was not employed in this paper . we also include the performance of easyadapt in the table as easyadapt achieved the best result on id, as mentioned in the previous section.

the official scores of the  <dig> top performing systems, faust and the turku event extraction system , as well as eventmine with coreference resolution and domain adaptation , are shown for reference. we report the subtask task  <dig>  result for ge. the highest scores are shown in bold.

we also note that other systems use three corpora at most, while our system uses seven corpora. nevertheless, the results shown in table  <dig> are encouraging, especially since our system with the multiple setting is a single system, while other systems are separately tuned to each target corpus. the results further show that the single system built with the multiple setting performs better than the highest published results on both of two established benchmark tasks id and epi.

analysis on additional event types
finally, to evaluate performance on event types that can be extracted by the single system built with the multiple setting, but are not annotated in the shared task corpora, we have manually evaluated  <dig> event instances extracted using the multiple setting on the development portions of three corpora:  <dig> events for ge,  <dig> for epi, and  <dig> for id . table  <dig> shows the evaluation results. we find that the instances judged correct or acceptable give an estimated precision of  <dig> % . this result is higher than for evaluation against the gold standard using full evaluation criteria. whilst this result may in part reflect the looser matching criteria  applied during the manual evaluation, this high precision nevertheless lends further support to the broad applicability of the single system.

CONCLUSIONS
this paper has presented an approach to the construction of a wide coverage information extraction system through training on multiple corpora with partially overlapping annotation scopes. the approach heuristically detects and filters out unannotated parts from each corpus in an automated manner, so as to reduce the generation of spurious negative instances of types that are specific to particular corpora. the remaining instances are directly combined to make full use of the available annotated information. the approach was implemented in the eventmine system and evaluated on seven corpora, including three established bionlp shared task  resources. for all seven corpora, our approach improved the performance of the system sufficiently to achieve results better than those of systems trained on individual corpora. our approach overcomes the problem of inconsistent annotation scopes in different corpora, and achieves comparable or higher performance than domain adaptation methods that produce separate models for each corpus. training using the approach proposed in this paper produces a single system, and thus eliminates the need to combine results produced by multiple systems, each trained on a single corpus. evaluation on bionlp st  <dig> data showed that our system outperforms previously published systems on two out of three considered tasks. the wide-coverage event extraction system is made available as both a demo and a restful web service  <cit> . in future work, we will apply this system to the entire set of pubmed articles to enrich domain applications that make use of event extraction results, such as semantic search engines. this task is comparatively straightforward as the resulting system is not restricted to any individual corpus but can identify all targeted events in a single application. we will also extend and apply the method to other statistical nlp tasks such as named entity recognition.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
all authors contributed to the production of the manuscript. sp, to and sa supervised all steps of the work. mm built the system and carried out the experiments, and to performed the manual evaluation. all authors read and approved the final manuscript.

