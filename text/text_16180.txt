BACKGROUND
cancer is one of the most widespread and heterogeneous diseases imposing a huge toll on patients, relatives, friends, and society. however, at its most basic, it is a genetic disease that is caused by the accumulation of somatic mutations in oncogenes and tumor suppressors  <cit> . while mutations in tumor suppressors tend to down-regulate the activity of genes that prevent cancer, mutations in proto-oncongenes either up-regulate or deregulate the activities of the resulting proteins. so far, pharmacological intervention has shown to be more successful at inhibiting activating oncogenes than restoring tumor suppressing gene function. coupled with the idea of “oncogene addiction”, that many cancers rely on mutations in a small subset of key genes to be able to continue their uncontrolled growth while the remainder of the mutations constitute passenger mutations  <cit> , the problem of identifying activating oncogenic mutations has received great attention in cancer research.

recently, several studies have shown support for the hypothesis that activating somatic mutations tend to cluster in protein kinases  <cit> . further, as observed by  <cit> , mutational clusters might provide further information regarding where to look for activating mutations, reducing the driver mutation search space needed to be analyzed. moreover, mutational clusters that lead to either beneficial or detrimental phenotypic changes may point to regions that are under positive or directional selection as well as regions that are functionally significant and thus can be targeted by protein engineering  <cit> .

so far, several methods based upon the number of mutations in a specific region have been developed to detect potential driver oncogenic mutations as well as naturally selected regions. one common method hypothesizes that driver mutations have a higher non-synonymous mutation rate as compared to the background mutation rate  <cit> . further, one can look at the ratio of nonsynonymous  to synonymous  changes per site, kaks <cit> . a criterion for selection is then to check if kaks> <dig>  based on the hypothesis that the benchmark neutral rate of nucleotide substitution is exceeded when positive selection also contributes to the substitution process. similarly,  <cit>  proposes a hypothesis that driver mutations have a larger mutational rate than the background mutational rate after gene length normalization.

while the approaches mentioned above have had some success in detecting positive selection and/or identifying driver mutations, they nevertheless have several shortcomings. first, many of them are dependent on calculating the disparity in non-synonymous versus synonymous mutations but do not recognize that selection often occurs on very small sections of the gene and thus might fail when averaged over the entirety of the gene length. second, the methods described above  <cit>  do not make any attempt to distinguish between activating and non-activating non-synonymous mutations.

in addition to the approaches described above, some researchers have focused on creating classifiers in order to determine mutation status. as described in  <cit> , these algorithms employ a variety of machine learning techniques, such as random forests  <cit>  and support vector machines  <cit> , to calculate a score for each mutation. these scores are typically calculated using a variety of information such as measures of evolutionary conservation as well as physico-chemical properties such as size and polarity of substituted and original residues as well as surface accessibility. these scores are then used to classify the mutation. for example, polyphen- <dig> <cit>  predicts whether a missense mutation is damaging while chasm <cit>  attempts to discriminate between driver and passenger mutations. while several of these models have had significant success in classifying the mutation, they all require large and well annotated data sets in order to first train the machine learning classifier and then apply the resulting rule set.

recently,  <cit>  developed non-random mutational clustering  to identify potential activating mutations by hypothesizing that, in the absence of heretofore known mutational hotspots, a mutational cluster is indicative of selection for an activating driver mutation since only a small number of precise mutations can activate a protein  <cit> . by looking at the order statistics and assuming that the locations of amino acid mutations follow a uniform distribution when the protein is considered in linear form under the null hypothesis, they identify clusters by calculating whether any two pair-wise mutations are closer together on the line than expected by chance alone. despite its success, one limitation of the nmc method is that the proteins are treated as a linear sequence without considering the three dimensional structures of the proteins.

in this work, we extend the nmc methodology to account for tertiary protein structure. this enables the identification of mutational clusters that are relatively far away in linear space but relatively close together in 3d space. we proceed to show that our methodology is effective in identifying novel mutational clusters that are missed by nmc in key cancer proteins such as kras and pik3c α. unlike nmc, ipac is also able to identify the egfr and eif2ak <dig> proteins as containing mutational clustering as well. we also show that many of the clusters identified by ipac are predicted to be deleterious by well known machine learning algorithms such as polyphen- <dig>  <cit> . however, ipac has the distinct advantage of requiring only the mutational positions and tertiary structure which allows its application to novel mutations and structures for which extensive information and literature is not yet available. finally, we also show that for a large percentage of protein structures, the tertiary structure leads to a net reduction in mutational clusters found, thus presenting a simplified clustering mutational landscape. ultimately, by providing a refined picture of the mutational clustering, we are are able to provide a more accurate representation of where potential activating mutations may reside within the protein.

methods
our method, named ipac, uses a  <dig> step approach to finding mutational clusters. first, mutational and positional data are obtained from the cosmic  <cit>  and pdb  <cit>  databases . the mutational and positional information is then reconciled to allow a single numerical reference to identify the same physical amino acid in both databases . next, multidimensional scaling   <cit>  is used to map the protein structure from 3d to 1d space while preserving, as best as possible, all pairwise three dimensional distances between amino acids for a given protein . the nmc algorithm is then run on the remapped amino acids to find mutational clusters . finally, the clusters are mapped back into the original protein space and reported back to the user. in the following subsections we discuss each of these steps in detail.

obtaining mutational data
mutational data were obtained from the cosmic database  via http://ftp.sanger.ac.uk/pub/cgp/cosmic and implemented using oracle. in order to justify the assumption that amino acids follow a uniform distribution of mutation, only mutations that were found through whole gene screens were included. further, we only used missense mutations that belonged to two categories: 1) “confirmed somatic variant” or 2) “reported in another cancer sample as somatic”. all nonsense and synonymous mutations as well as mutations that had different somatic status categories were excluded. further, as multiple studies can report mutational data from the same cell line, mutational redundancies were removed to avoid double counting. see “additional file 1: cosmic query” for the sql code and schema used to generate the data. finally, in order to match mutational data with structural data, only the proteins for which a uniprot accession number  <cit>  was available were kept. this resulted in  <dig> unique proteins.

obtaining the 3d structural data
the protein structural data were obtained from the pdb database via http://www.pdb.org. as one protein can have several structures, for each of the  <dig> proteins described above, all the structures with a matching uniprot accession number were obtained. if a specific structure had more than one polypeptide chain with a matching amino acid sequence in uniprot, the first matching chain listed was used . for proteins where the resolution was sufficiently high enough to provide more than one alternative conformation for a specific amino acid side chain, only the first conformation listed in the file was used. once the appropriate side chain and conformation was selected, the  coordinates of all the α-carbon atoms were extracted and used to represent the 3d backbone structure of the protein. in all, this process resulted in  <dig>  structures. see “additional file 2: structure files” for a full listing of the structures and side chains used for each protein considered.

reconciling the structural and mutational data
due to a different numbering system of the amino acids employed by the pdb and cosmic databases, an alignment needed to be performed in order to reference the same residue numerically in both databases. two methods in the ipac package were designed to reconcile these differences, one based on pairwise alignment  <cit>  and the other based on a numerical reconstruction from the structural data obtained from the pdb. as there are often significant technical difficulties for such a reconstruction, for the rest of this paper, unless specifically noted, pairwise alignment was used to reconcile these elements. please see the documentation in the ipac package for a full description of these two methods. successful alignment of mutational and positional data occurred on  <dig> proteins which corresponded to  <dig> unique structure/side-chain combinations and  <dig> unique residue positions containing  <dig>  total mutations. we note that for any given structure/side-chain combination, if there is no positional data for a specific residue, the mutational data for that residue is not used. please see “additional file 2: structure files” for a full description.

multidimensional scaling
as the underlying clustering algorithm is dependent upon the construction of order statistics, we used mds  <cit>  to remap the amino acids into one dimensional space while preserving  the pairwise distances between them in 3d space. specifically, given an n×n dissimilarity matrix, 

 Δn,n=δ <dig> δ <dig> ⋯δ <dig> nδ <dig> δ <dig> ⋯δ <dig> n⋮⋮⋱⋮δn,1δn,2⋯δn,n 

 the mds algorithm maps each δi,j into a corresponding distance di,j on a new m-dimensional metric space x. formally, for a specific representation function, f:δi,j→di,j, we have that the original dissimilarities are preserved in x, specifically, f=di,j. here, f can be either fully defined or chosen from a specified class of functions and is employed to handle the case when the proximity measures come from a space that is not necessarily a true metric space. further, as it is not always possible to preserve the exact distance , rather than insist on f=di,j, the mds framework is typically set up such that f≈di,j. thus, by minimizing a badness-of-fit measure called raw stress = σr=∑i,j <dig>  we identify the x <dig> ...,xn, that preserve our distances in the new metric space x. however, raw stress by itself is not always informative as it is subject to distortion by the choice of units used. for instance, if the scale used to measure changes by a factor of  <dig>  the raw stress will change as well but by a factor of  <dig>  thus, stress- <dig>  which is defined as: 

  σ1=∑i,j2∑i,jdi,j <dig> 

and is not subject to unit distortion, will be minimized instead.

for the purposes of this paper, the dissimilarity matrix is simply equal to pair-wise distance between any two amino acids in the protein. specifically, the distance between residues i and j, denoted δi,j, is taken to be the euclidean distance between their respective α-carbon atoms. as euclidean space is a proper metric space, from now on we assume that f is the identity function. further, as we require units along the line in order to calculate order statistics, the mds algorithm will be applied such that we find x <dig> ...,xn∈ℝ <dig>  thus, the mds algorithm finds scalars x <dig> ...,xn such that |xi−xj|≈δi,j, for any two pairwise amino acids i and j in the protein. we present an example when mds is applied to the 3gft structure of kras  <cit>  in figures  <dig> and  <dig> below.

nmc
we employed the nmc algorithm  <cit>  to find the mutational clusters in one dimensional space. specifically, consider a protein with n amino acids and that each amino acid has a uniform probability of 1n of mutation. given m samples and n mutations, we are able to calculate the order statistics for every mutation . two mutations x and x are then defined to be clustered if, pr−x)≤α. this probability is then calculated for every pair of mutations and adjusted for multiple comparisons using either the benjamini-hochberg  adjustment  <cit>  or the bonferroni adjustment  <cit> . for the analyses performed in this paper, the more conservative bonferroni adjustment was used. finally, it is important to note that the structural information obtained for each protein often does not include positional information on every amino acid within the protein. we removed these “missing” amino acids from the protein before running the nmc clustering algorithm so that we can compare ipac and nmc on an equal basis.

 <cit>  derive closed form solutions to calculate the pr for c∈{ <dig> ,...,n−1}. however, as this becomes computationally inefficient, they suggest dividing cki by n and assuming a continuous uniform distribution on . they then show that in the limit, the cdf becomes as follows: 

  pr−xn≤c)=∫0cn!!!yk−i−1i+n−kdy=pr≤c) 

thus, via equation , we can directly calculate if two mutations are closer together than by chance alone quickly and efficiently. for a given structure, a cluster was considered to be significant using an α-level of  <dig>  and the bonferroni adjustment. specifically, the p-value of the cluster must be ≤ <dig> n/ <dig>  where n/ <dig> are all the pairwise mutations considered.

multiple comparison adjustment for structures
in addition to the bonferroni multiple comparison adjustment done by the nmc method, an adjustment is also required to account for testing multiple structures per protein. since the structures for a given protein could be quite similar and thus lead to similar clustering results, a second bonferroni adjustment would be too conservative. instead, a combined bonferroni-fdr approach was performed as follows. first, for a given protein, the nmc reported p-value for a given cluster was multiplied by n <dig>  to calculate p∗. thus, on a per-protein level, p∗ represents the inverse bonferroni adjustment performed by the nmc algorithm and thus allowed us to compare each cluster’s p∗ to an α-level of  <dig>  to determine significance. to account for all the structures analyzed, we computed a rough fdr   <cit>  which approximates the standard fdr method for a large number of positively correlated or independent tests. under this approach, we estimate the expected value of α over all k tests and then use that as the significance threshold. the expected value α can be approximated by: 

 rfdr=α∗k+12k 

 where k is the total number of structures. in the case of the  <dig> structures analyzed in this study, rfdr≈ <dig> . finally, any clusters for which p∗≤ <dig>  was deemed to be significant. for the rest of this paper, with the exception of table  <dig>  we only report the p-value to avoid confusion. nevertheless, each cluster presented in section “results and discussion” is in fact significant after adjusting for structural multiple comparisons.

p* is calculated as described in section “multiple comparison adjustment for structures”.

RESULTS
using the ipac package,  <dig> of the total  <dig> structures analyzed were found to have significant clustering. when comparing ipac with the original nmc method, out of the  <dig> proteins analyzed, both ipac and nmc identified  <dig> proteins that contained significant clusters. however, ipac also identified  <dig> new proteins as well, specifically egfr, eif2ak <dig> and hao <dig>  these  <dig> new proteins correspond to  <dig> of the  <dig> structures found to have clustering. ipac also found structure 2enq for the protein pik3ca to contain a significant cluster while nmc did not. the  <dig> proteins identified by both algorithms correspond to the remaining  <dig> structures. there were no proteins that were identified by nmc but were subsequently missed by the ipac algorithm. please see “additional file 3: results summary” for a full listing of which structures and which proteins were found to be significant.

as can be seen from figure  <dig>  approximately 70% of all the structures found to have significant clustering differed in the amount of clusters identified when comparing ipac vs nmc. this leads one to believe that in some cases, consideration of the tertiary structure identifies additional clusters while in other cases, clusters are able to be removed, offering a simplified view of the mutational information. while it is outside the scope of this paper to consider every one of the  <dig> structures with clustering, we present three representative cases where integration of the tertiary protein structure into the analysis had a significant effect: 1) identification of mutation clustering in a protein that would otherwise be missed, 2) identification of new mutation clusters in a protein that was detected using the nmc methodology, and 3) reduction of the total mutational clusters in a protein that was detected using the nmc methodology. we also note, as can be seen in table  <dig>  that the p-value found for the most significant cluster is similar on the protein level. proteins that had very significant clustering, such as kras and tp <dig>  remain very significant when the tertiary structure is incorporated. proteins that were less significant, such as ide and akt <dig>  remain so as well.

we note that  <dig> out of the  <dig> proteins that were found significant by ipac had their most significant cluster overlap a binding site, proton acceptor site or kinase domain. of the remaining  <dig> proteins, the most significant cluster for pik3ca overlapped amino acid  <dig>  which has been shown to ease the entrance of substrates and hence potentially increase the substrate turnover rate, a typical oncogenic behavior  <cit> . for a detailed per protein description, please see “additional file 4: relevant sites”.

finally, we validated the performance of ipac using two popular machine learning algorithms, polyphen- <dig> <cit>  and chasm <cit> . first, this validation must be considered in light of the fact that these algorithms require a much more extensive set of information than ipac. nevertheless, over 98% of the amino acids that occurred in significant mutation clusters were also identified as significant  by polyphen- <dig> and chasm. for full details, please see “additional file 5: performance validation”.

ipac finds novel proteins
as discussed section “results and discussion”, three new proteins were identified by ipac that were missed when tertiary structures are not accounted for. the egfr protein, a cell-surface receptor for epidermal growth factor family ligands  <cit> , is perhaps the most well known and has been found in a wide array of cancers such as lung  <cit> , anal  <cit>  and glioblastoma multiforme  <cit> . although seven egfr structures were identified by ipac to contain significant clustering, we will concentrate on the 2gs <dig> structure  <cit>  as it showed the most significant clustering. as seen in table  <dig>  three significant clusters were found with cluster  <dig> being being a sub-cluster of cluster  <dig>  figure  <dig>  shows the orientation of these clusters in three dimensional space.

overall, all the statistically significant clusters found deal with lung cancer pathology and an increase in kinase activity. the two mutations in cluster  <dig>  g719s and t751i are both found in lung cancer with the first mutation responsible for strongly increased kinase activity  <cit>  and the second found in erlotinib responsive non small cell lung cancer patients   <cit> , respectively. cluster  <dig> contains two mutations, t790m and l858r, both of which have been found in lung cancer and are known for increased kinase activity as well  <cit> . finally, cluster  <dig> is comprised of clusters  <dig> and  <dig>  with an additional mutation s768i which potentially shows a positive clinical response to getfinib in nsclc patients  <cit> . it is interesting to note that both clusters  <dig> and  <dig>  that are identified via statistical analysis, contain mutations that have been found to benefit from pharmacological intervention. had the tertiary structure of egfr not been taken into account, these clusters would not have been identified by the nmc algorithm. when the protein is viewed linearly, the mutations occur too far away from each other to result in statistically significant p-values.

ipac finds additional clusters
one example where ipac finds additional clusters is in the kras protein when analyzing the 3gft structurea <cit> . kras, part of the ras set of of proteins which are involved in a large number of signaling cascades, is one of the most studied cancer oncogenes with activating mutations in approximately 17-25% of all human cancers  <cit> . while both nmc and ipac identified many of the same clusters such as amino acids 12- <dig>  12- <dig> and 12- <dig>  ipac identified several novel clusters as well, specifically amino acids 61- <dig> and 117- <dig>  we note that both algorithms specifically identify a cluster between residues  <dig> and  <dig>  and given that we only have positional data for  <dig> residues, this signifies that there is one large cluster that covers ≈80% of all the available amino acids. however, combined with the two novel clusters identified by ipac, we are able to partition the protein into three distinct regions 1) 12- <dig>  2) 61- <dig> and 3) 117- <dig> that cover 30%, 34% and 18% of the protein respectively .

a “-” signifies that the region was not found to be significant.

we also ran nmc and ipac on each region separately to consider how the clustering results would be affected. as can be seen from table  <dig>  failure to account for the tertiary protein structure resulted in region  <dig> no longer being detected and region  <dig> losing significance by over ninety orders of magnitude.

further, while somatic mutations in region 12- <dig> have been found in many cancers such as colorectal, lung, pancreatic and bladder  <cit> , somatic mutations at amino acids  <dig>   <dig> and  <dig> have primarily been found in lung and colorectal carcinomas. even more specifically, mutations at amino acids  <dig> and  <dig>  deal mostly with colorectal cancer  <cit> . thus, by taking into account the tertiary structure, the clusters identified by ipac subdivide the protein along pathological lines.

ipac finds fewer clusters than nmc
of the  <dig> structures found to contain significant clustering,  <dig> structures were identified where ipac found fewer structures than nmc. three of these structures correspond to braf,  <dig> correspond to hras and  <dig> correspond to tp <dig>  here, we consider structure 3tv <dig>  <cit>  for the braf protein as it contains the most significant cluster found by both ipac and nmc. for this protein, it is well known that amino acid  <dig> is one of the most highly mutated residues. in our dataset,  <dig> of the  <dig> total mutations that fulfilled the requirements described in section “obtaining mutational data” occurred on amino acid  <dig>  as expected, the most significant “cluster” is located solely on that amino acid, with an ipac p-value of  <dig> ×10− <dig> and an nmc p-value of  <dig> ×10− <dig>  however, in total, ipac identifies  <dig> clusters for this structure while nmc identifies  <dig>  with the differences shown in tables  <dig> and  <dig> 

while it is outside the scope of this paper to consider all the differences between table  <dig> and  <dig>  we would like to point out that, contrary to ipac, the nmc algorithm reports the two longest clusters: 1) 464- <dig>  and 2) 469- <dig> . after alignment of the structure as described in section “obtaining the 3d structural data”, we only have structural information on amino acids  <dig> -  <dig>  thus, the largest cluster detected by nmc covers ≈75% of all the amino acids that we are considering. however, by taking into account the 3d structure of the protein, these ultra-long clusters are dropped and the clusters where ipac and nmc overlap show  <dig> distinct areas of the protein, amino acids 464- <dig> and 600- <dig>  as expected, as the majority of mutations occur on amino acid  <dig>  both nmc and ipac declare that the “cluster” located at amino acid  <dig> is highly significant.

further, as described below, by considering only the clusters when taking into account the 3d structure , the results again tend to fall along pathological function. after applying the methodology described in section “obtaining mutational data”, the mutations that were found to be in significant clusters included g464v, g466v, g469v, g469a, n581s, g596r, l597v, lv597r, v600e, v600k, k601n and r671q. as r671q was found in only one sample within the cosmic database and does not have extensive literature, we will not include it in further discussion. taking into account the  <dig> most significant clusters picked up by ipac and nmc, we now consider the protein in  <dig> parts: a) residues  <dig> -  <dig>  b) residue  <dig> and c) residue  <dig> . the mutations listed that fall with region a, correspond primarily to lung and colorectal cancer  <cit> . region b, which is comprised of only amino acid  <dig> is by far the most common mutation with braf. this mutation results in constitutive and elevated kinase activity and has been found in a large range of cancers including colorectal carcinoma, ovarian serous carcinoma, metastatic melanoma and pilocytic astrocytoma. further, supporting the hypothesis that somatic clusters might provide pharmacological targets, it has already been shown that suppression of this cluster in melanoma causes tumor growth arrest and helps promote apoptosis  <cit> . finally, the k601n mutation in region c has been found in multiple myeloma patients who also may benefit from braf inhibitors  <cit> .

CONCLUSIONS
in this paper, we extended the existing methodology available to find somatic mutation clustering by utilizing the information provided in the protein tertiary structure. in doing so, we showed that we are able to find both new proteins with clustering as well as new clusters in previously found proteins. we have also shown that by taking into account 3d structure, we are able to remove clusters that do not have biological meaning. the method is fast and robust, with the vast majority of proteins analyzed within 5- <dig> minutes when executed on a desktop with  <dig> gb of ddr <dig> ram and an intel i <dig> 3600k processor running at a frequency of  <dig>  ghz. further, as the underlying calculation relies upon the nmc algorithm, a preset fixed window size is not required which allows for the detection of clusters of various lengths  <cit> . we have also shown that by employing a completely statistical methodology, we are able to identify mutations that, when suppressed via pharmacological intervention, may stop further tumor growth.

this methodology, while an improvement on the nmc method, still suffers from some limitations. first, the mutation status of all the amino acids must be determined although with the advent of high-throughput sequencing, this will become less of an issue as time progresses. also, both hypermutability of genomic locations and unequal rates of mutagenesis might violate the assumption that each amino acid has a uniform mutation probability. for instance, it is well known that hypermutable positions for both somatic and germline mutations exist. insertions and deletions that are typically sequence dependent have been removed from the analysis and only missense substitutions of single amino acids have been kept in this study to help reduce such uniformity violations. similarly, cpg dinucleotides can have mutational frequency that is ten times or more that of other dinucleotides  <cit> . however, less than 13% of the mutations used to find clustering in sections “ipac finds novel proteins”, “ipac finds additional clusters finds addi-tional clusters”, and “ipac finds fewer clusters than nmc” were in cpg sites. further, as described by  <cit> , tobacco smoking preferentially causes transversions in lung cancer while the mutational landscape for colorectal cancer has more transitions  <cit> . nevertheless, in the context of kras, the vast majority of mutations occur on amino acids  <dig>   <dig> and  <dig> for both lung and colorectal cancer. this suggests that while the mutational spectrum may be different, it does not have a large effect on the position of mutations and thus the uniformity assumption. as with previous studies, while this analysis is influenced by nonrandom factors, it nonetheless appears that selection of a cancer phenotype is the primary cause of clustering.

it should also be noted that while ipac is designed to take tertiary structure into account, it is only able to do so by appealing to the mds methodology. future research is required in order to relax this restriction to potentially identify additional clustering results. next, as we obtained our mutational data from cosmic, some tissues types are over or under-represented. however, such situations would make our analysis more conservative and the clusters we find even more significant. if different tissue types host mutations in different parts of the protein, aggregating over all tissue types will result in a larger value of n while the value of k and i for two specific mutations  would remain the same. this results in a higher p-value, implying that clusters that are found to be significant after collapsing over tissue type would be even more so if only a specific tissue type was analyzed.

finally, as shown in section ‘results and discussion”, ipac finds fewer clusters for a significant percentage of the structures analyzed. this reduction in total clusters can come from two sources: the removal of some amino acids due to lack of tertiary position information or that the cluster is no longer found to be significant when 3d structure is taken into account. the first source, while already rare will become even more so in the future as more detailed structural information becomes available. as for the second source, when a cluster is not identified under ipac when compared to nmc, an overlapping or nearby cluster is typically found . for braf specifically, there was a total of  <dig> structures where ipac found fewer clusters than nmc. further, every “possibly” or “probably damaging” mutation, as categorized by polyphen- <dig>  <cit> , was still represented in at least one cluster in each structure. thus, in the case of braf, none of the damaging mutations identified by polyphen- <dig> were lost. for a more detailed analysis, please see “additional file 6: potential driver loss”. ultimately, further research is required to further reduce the possibility of losing driver mutations while taking into account tertiary structure.

in conclusion, we present an approach that extends current methodology to identify mutation clustering by taking into account protein tertiary structure. we further show that by taking into account tertiary structure we are able to detect clusters that would otherwise be missed. next, we demonstrate that for some of the clusters found, pharmacological intervention has already been successfully applied, further confirming the hypothesis that mutational clustering might point to activating driver mutations. as additional protein structures continue to be solved, ipac would be able to rapidly perform a statistical analysis to identify such potential mutations. finally, as we gain a better understanding of the tertiary structure of dna, this method might also have applications to finding mutational clustering on the dna level.

endnotes
a for this analysis, we included included mutational and positional data only on residues 1- <dig>  no 3d positional information was available in the 3gft structure on residues 168- <dig>  and these residues were removed before the analysis. further, the structural information has amino acid  <dig> as a histidine  while the cosmic database has a glutamine in that position. however, as the substitution of one amino acid in the structure for another would not have a significant affect on its spatial orientation and as amino acid  <dig> has a large number of somatic mutations, it was kept in the analysis.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
gr and hz developed the ipac methology. kc and yc were responsible for obtaining the cosmic database mutations. gr drafted the manuscript. kc, ym and hz were responsible for revisions. hz finalized the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
cosmic query. the sql query used to extract the mutations from cosmic.

click here for file

 additional file 2
structure files. a detailed list of which protein-structure combinations were used and what side-chains were selected.

click here for file

 additional file 3
results summary. a summary of each structure’s most significant p-value for both ipac and nmc.

click here for file

 additional file 4
relevant sites. a review showing which of the ipac clusters fall within structurally relevant sites.

click here for file

 additional file 5
performance validation. in-depth results validating the ipac results using polyphen- <dig> and chasm.

click here for file

 additional file 6
potential driver loss. an analysis of whether any potential driver mutations are lost when ipac finds fewer clusters than nmc.

click here for file

 acknowledgements
we thank drs. francesca chairomonte and catherine siena grasso for their time and discussions regarding the development of this methodology.

this work was supported in part by nsf grant dms  <dig> , nih grant gm <dig> , p <dig> ca <dig>  and the china scholarship council .
