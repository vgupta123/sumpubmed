BACKGROUND
the interaction reference index  consolidates protein interaction data from ten databases including bind  <cit> , biogrid  <cit> ,corum  <cit> , dip  <cit> , intact  <cit> , hprd  <cit> , mint  <cit> , mpact  <cit> , mppi  <cit>  and ophid  <cit> . the irefindex  <cit>  uses a unique consolidation process: each interactor's amino acid sequence and taxonomy identifier are used to assign a universally accessible hash-key to each distinct interactor and interaction. this facilitates identification of redundant interaction records  at search time regardless of the protein accession system used to construct a query. the resulting index is available as a tab-delimited file in mitab format  and more recently, we have described a web-interface  <cit>  to this resource that allows retrieval of data using a rich set of interaction record features. in this paper, we describe the irefscape plug-in for cytoscape  <cit>  that facilitates retrieval, visualization and navigation of this data set in a graphical environment  <cit> .

the universal identifier system for proteins and interactions is central to understanding the plug-in. each protein interactor is assigned a "redundant object group identifier" or rogid using its primary amino acid sequence, ncbi taxonomy identifier and the sha- <dig> digest algorithm  <cit> . rogids for interactors are, in turn, used to construct an sha- <dig> hash key for the interaction record itself - a "redundant interaction group identifier" or rigid. these keys are global  and they serve to group related interaction information. figure  <dig> shows two interactor nodes joined by multiple edges in the irefscape view; each edge represents a distinct interaction record but all these edges share the same rigid - each record represents some experimental result that supports the idea of some kind of relationship between the same two proteins.

using interaction data can be difficult due to a number of challenges that are distinct to this data type: multiple accession systems for protein data, high redundancy between interaction databases, multiple methods for complex representation, the scale-free nature of interaction networks and the resulting impact on visualization. some of these issues have been discussed at length in our previous papers  <cit> . here, we focus on the solutions employed by the irefscape plug-in to help the user deal with these challenges. these solutions are grouped under four major headings: data content and delivery, data retrieval, data presentation and data mining and navigation. critical and distinctive features of the plug-in are listed in table  <dig> 

advanced filter function.
RESULTS
 <dig>  data content and delivery
 <dig>  consolidation and normalization of data
version  <dig>  of the irefindex accompanies the release of irefscape  described in this paper . the final data set is based on  <dig> , <dig> source interaction records but is only composed of  <dig>  distinct interactions  involving  <dig>  distinct protein interactors . version  <dig> includes  <dig>  updates for protein database accessions,  <dig>  corrections to malformed accessions,  <dig>  corrections to taxonomy identifiers and more than  <dig>  resolutions of ambiguous identifiers. terms describing interaction type, interaction detection method and interactor detection method were normalized to psi-mi ontology terms. full statistics for each release are provided at http://irefindex.uio.no. corrections made to source data were essential for legacy databases  that are no longer updated.

the highly redundant nature of protein interaction data from multiple sources has been described previously  <cit> . central to irefscape is the use of universal identifiers to group together related interaction records. in the irefscape view, each node represents a distinct interactor having a unique sequence and taxon identifier. multiple edges may exist between the same two nodes where each edge represents an individual source record from some database and provides some experimental observation  that supports some kind of relationship between the two adjacent nodes. each of these edges  will share the same rigid . figure  <dig> shows an example.

 <dig>  the irefscape plug-in operates on a local dataset
installation of the irefscape plug-in is a two step process. first, the plug-in itself is installed using the cytoscape "plug-in manager". second, the plug-in queries the user for a permissible location to store data and then retrieves the entire irefindex dataset via file transfer protocol . an "installation and index handler" module executes these functions with a minimum of user intervention.

all irefscape operations are performed on this local dataset. we chose this local approach  for a number of reasons. data retrieval is independent of connectivity over a network and it is not subject to communication overhead or server outages; therefore, it is fast and reliable. local search is also private; a concern among commercial users. a local dataset, being static, ensures that results can be reliably reproduced and compared over the course of a study where multiple search strategies may be examined. finally, a local dataset also affords the possibility for the plug-in's functions to operate over an entire interactome and a large set of attributes: something that would be impractical if the data were not already available locally. in addition, the user can include and search on a private set of attributes for any node or edge in the irefindex data set.

we found that this approach was a feasible option for data delivery in terms of both required disk space and search times. download and indexing of the  <dig> mb package for release  <dig>  of irefindex required less than  <dig> minutes using a remote,  <dig> mbps internet connection. the data package is compressed on arrival and is dynamically uncompressed as required by user searches . thus, a search will take less time to return results after it has been performed once. for example, it takes  <dig> seconds to retrieve interactions involving uniprot:q <dig> and uniprot:q9znv <dig> for the first time while the same operation subsequently takes only  <dig> seconds.

 <dig>  search
 <dig>  irefscape search supports multiple accession types
an identifier for a protein  may be entered via a query box or from a file. multiple accession-types are supported including those from refseq and uniprot. entrez gene ids and official gene symbols are converted to accessions for their corresponding protein products. this functionality is driven by lookup tables where the user's query retrieves a pre-computed redundant object group identifier   <cit> . since all interactors from all interaction records are mapped to rogids, the user's query is guaranteed to return all protein interactors with identical sequences regardless of the accession system used to describe the interactor in the original interaction record. example searches are provided with the irefscape documentation. a user's choice of accession type  can have an impact on their search results because there is no single protein identifier type that is available for all protein interactors in irefindex. the reachability graph in figure  <dig> shows that 82% of all distinct interactors have a uniprot accession. twelve percent do not have a uniprot accession but do have a refseq or pdb chain accession. all other interactors  can be retrieved using a catchall "xref" search type or by searching directly for rogids generated by the user from a protein's amino acid sequence. a wizard utility allows the user to generate a rogid for an entered amino acid sequence. protein accessions found in source databases are updated to their latest versions if they have been retired. however, many of these retired accessions can still be searched for using the originalreference search type.

 <dig>  canonicalization and searching
the canonicalization process groups together multiple proteins that are all products of the same or related genes and then chooses one of these proteins to be the canonical representative for the whole group . figure  <dig> illustrates how search results differ if the user chooses to expand their query to include all sequences belonging to the canonical groups in their initial query. nodes belonging to the same canonical group can be identified and manually grouped together using the i.canonical_rogid node feature. different nodes belonging to the same canonical group may indicate interaction data that is specific to different splice isoforms or simply that the source publication was ambiguous with respect to the splice isoform involved  <cit> . sixty-four percent of all interactors can be retrieved using an entrez gene id .

 <dig>  neighbourhood completion
a query for a protein will return its nearest neighbours. however, interactions between these first order neighbours will not be returned by default unless the user opts to complete the neighbourhood once the first order neighbours have been returned. figure  <dig> illustrates the effect of using this feature. the underlying search is effectively a search for all interactions that are known to occur between interactors in the current view. this expanded-search operation can be expensive and further justifies the need to operate on a local data set.

 <dig>  visualization
 <dig>  search result provenance - differentiating between query and neighbour nodes
a common difficulty working with graphical data is distinguishing between nodes matching search parameters from their interactors. we have addressed this issue using a number of visual cues and node/edge features.

nodes that match search parameters are coloured blue while direct interactors are green . colours are mapped by the cytoscape vizmapper using the i.order node feature and can be customized by users. as new nodes are added to the view by subsequent queries, they are assigned incremental i.order values and new colours corresponding to new results from that search set. in addition, the search terms responsible for returning a node in the current view are listed under the node feature i.query .

the "grid" layout was selected as the default arrangement for all new search results. this algorithm was the fastest amongst those investigated for reasonably sized networks . users are likely to alter the layout while viewing search results so these alterations are preserved as subsequent search results are drawn; only newly introduced nodes are arranged in a distinctive grid layout making them easier to locate in a graphical view.

 <dig>  a multigraph view shows multiple supporting pieces of evidence
search results are presented as a multi-graph . each node represents a distinct protein sequence from some organism . each edge joining the same two nodes will have the same rigid  because each represents an experimental observation supporting the same interaction. however, the experimental type and interaction type for each edge in this group may be different. each edge is listed in the edge attribute browser along with source database and supporting publication details allowing easy linking to the original data. the edge attribute browser may also be used to sort and select  edges with specific attributes. for example, the only source of predicted interaction data in irefscape is ophid - these edges may be located and high-lighted using the edge attribute for source database . as a special precaution, ophid edges are drawn using dashed lines so they are visually distinguishable from other data. all other data in irefscape is based on experimental observation. again, edge attributes corresponding to experimental method  may be used to sort, select and high-light specific edges.

this multi-graph representation can become visually cluttered. we therefore included the ability to collapse multiple edges, leaving only a single  edge in the view panel . the edge-toggle operates using the edge attribute "i.flag" so the user can manually alter the edges that are retained in the toggled view. collapsed edges can be re-expanded by selecting the same edge-toggle function again.

multiple edges between nodes represent a mixture of records that are either duplications within or between databases or that are multiple evidences for relations between the same two proteins. these two cases are easily distinguished in irefscape by examination of edge attributes . the observed two-fold redundancy in interaction data underscores the need for visual tools that allow the user to visually manage related data.

 <dig>  a bi-partite graph representation highlights n-ary data
the term "n-ary data"  is used to refer to interaction records that contain more than two protein participants. this term distinguishes such records from binary interaction records where only two interactors are listed. multi-protein interaction records are used by some databases to capture the results of certain types of experiments where a physical association is detected between a number of proteins but where the presence or absence of a direct physical interaction between any given pair of proteins in the set cannot be determined . as such, n-ary data is fundamentally different from binary data and we have preserved this difference in irefscape. n-ary records are represented by hexagonal pseudonodes. protein nodes  adjacent to this node represent members of the record . pseudonodes in a view can be selected and sorted using the node attribute called i.pseudonode.

of the  <dig>  distinct interactions  in irefindex, only  <dig>   have greater than two participants. however, these records involve  <dig>  distinct proteins  or 24% of the dataset. the bi-partite representation described here clearly distinguishes involvement of these proteins in "n-ary" interactions from involvement in binary interactions that include evidence for direct physical interactions.

users should be cautious in reading meaning into the labels "binary" and "n-ary" data. n-ary data does not necessarily constitute evidence for a biological complex: only that a group of proteins were observed together in some experimental result. likewise, binary data does not necessarily constitute evidence for a direct physical interaction and in some rare cases may even be a spoke representation of a complex . in all cases, it is important to examine the experimental type and/or the original publication before drawing such conclusions. links to abstracts are provided in the interface as an edge attribute .

 <dig>  node and edge features
a large number of node and edge attributes are included with search results to facilitate further filtering and visualization of data. a complete list of these features can be found on the irefscape wiki site  <cit> . node attributes include accessions from different databases, taxonomy identifier, and overall degree in the consolidated irefindex data set as well as in the present view . edge attributes include interaction type, interaction detection method, publication identifier, source interaction database and accession, and directionality . controlled-vocabulary terms and identifiers are provided where possible and many of the attributes allow linking out to external databases. bibliometric scores  help the user to identify edges supported by multiple citations and distinguish edges supported only by high-throughput studies respectively.

users can create filters for search results using cytoscape's in-built edge and attribute filters. in addition, a complementary, advanced filter utility is included that allows the user to build up and visualize more complicated queries . instructions are provided in the plug-in.

nodes matching filter criteria reset an attribute called i.alive to true. another node attribute  is updated to reflect the degree of a node with respect to neighbours with i.alive set to true. this feature is useful for identifying nodes in the view that are highly connected to a user-defined set of nodes. as a short-cut, the user may simply select a set of nodes and then select "irefscape menu/view tools/select between nodes" to do the same thing. nodes that are highly connected to the original selection can be selected and sorted on the i.alive_degree node feature.

 <dig>  data discovery and navigation
 <dig>  identification of spoke-represented complexes
n-ary data is sometimes represented using a spoke model where a series of binary interactions between one member chosen to represent the hub and each of the other members are created  <cit> . this is commonly used in cases where the experimental method used to support the complex was a bait-prey, immunoprecipitation system: the bait is conventionally chosen as the central "hub" node. this spoke-representation makes it difficult to identify data that supports the idea of a protein complex . irefscape allows these cases to be identified in the current view using the "show spoke-represented complexes" function in the irefscape/view tools menu. an example is shown in figure  <dig> 

irefindex  <dig>  contains more than  <dig>  distinct binary interactions  that may belong to spoke-represented complexes: these are sets of two or more binary interactions originating from the same database that all share the same publication reference, the same experimental method  and a common interactor . these binary interactions can be used to identify  <dig>  cases in version  <dig>  of irefindex where a source database may be using a spoke representation of a complex. the "show spoke-represented complexes" tool draws a grey hexagon with dashed lines to each member of the potential complex. the user must still review the source publication to confirm that they contain evidence for a protein complex .

 <dig>  disease group browsing
genes that are associated with phenotypically related diseases are quite often associated in an interaction network  <cit> . we have constructed our own grouping of diseases and their related genes found in the omim  <cit>  by grouping together omim record titles using regular expressions  <cit> .

irefscape supports searching for omim identifiers corresponding to gene-disease associations. our disease group identifiers may also be searched in order to retrieve all proteins related to the same disease group as some omim identifier. partial match searching of omim titles is also supported. figure  <dig> shows the search results for digid  <dig> .

approximately  <dig> disease groups were constructed that contain two or more related human genes. these groups cover just fewer than  <dig> genes, the majority of which have relevant interaction data in irefindex. a systematic survey of all statistically significant overlaps between disease groups and interaction data is being prepared

 <dig>  synchronized adjacency-matrix viewer
due to the complexity of the protein interactome, it is difficult for the user to arrive at inferences by visual inspection of a graphical representation alone. we have implemented an adjacency matrix view to provide a very simple overview of the connectivity between two, user-selected groups of nodes. this adjacency matrix view is synchronized with cytoscape's graphical view allowing users to move back and forth between the two representation types. in this view, members of group a and b appear as column and row headings respectively. if a node was found in both groups it will appear as a column and row heading. a cell at the intersection of a particular column and row contains information about the relationship between the two proteins appearing in the column and row headers. there are various possibilities:

a) when only direct interactions between a row protein and a column protein exist, a "¤" symbol appears in the intersection cell and the cell will be coloured red.

b) when only indirect interactions or co-complexes involving the row protein and column protein exist, the cell will be coloured blue. these are interactions involving an intermediate protein or both proteins found together in an n-ary record. the intermediate protein or the complex-node will be listed in the intersection cell.

c) when there are both direct and indirect interactions, the intersection cell will be coloured green. a "¤" symbol and all intermediate proteins or complex nodes will be listed in the intersecting cell.

d) when there are no direct or indirect interactions involving the row and column proteins, the cell colour is black. entire columns or rows with only black cells will be hidden by default.

e) as a special case, when the row and column protein are the same , proteins directly interacting with this protein will be listed in the intersecting cell.

clicking on column/row headings or intersection cells will select and highlight nodes and/or relevant edges in the graphical view. figure  <dig> shows an example comparing proteins related to heart disease  and obesity  taken from  <cit> .

 <dig>  export and interoperability
irefscape uses an internal integer identifier  as the main node identifier . other plug-ins may require that a specific identifier type  is used as the primary node identifier . as a solution to this interoperability problem, we have included an export feature which exports the irefscape network using many popular identifier types. when performing the export, nodes which do not have the target identifier will be dropped. the export feature should be used with caution as the irogid has a one-to-many relation with some identifier types . for instance, when the irefscape network is exported with entrez gene identifiers as the node identifier, several nodes represented by multiple irogids  may map to a single entrez gene identifier. in these situations, several nodes will be collapsed to a single node and that node will have cumulative attributes from all of its constituent nodes.

 <dig>  user help
help buttons  are distributed throughout the plug-in interface to provide context-relevant help. these buttons open the irefscape info window. help pages include macros  that perform pre-recorded operations to help step users through the interface. likewise, a "wizard" button can be used to walk first-time users through simple searches. the irefscape wiki provides additional details  <cit> .

 <dig>  availability and updates
the cytoscape plug-in manager  can be used to install and update the plug-in. installation instructions  are available from the irefscape wiki  <cit> . users can check for updates to the plug-in data and help content using the irefscape plug-in wizard. code is available upon request under a gnu-gpl license.

discussion
we have presented an interface that facilitates visualization, navigation and data mining on a consolidated protein interaction data set. working with consolidated interaction data comes with distinct challenges that were identified in earlier studies. the features incorporated in the plug-in address many of these issues.

the irefscape plug-in operates on a locally downloaded dataset organized around a uniform naming space for interactions and interactors. this approach handles redundancy in the underlying data set and supports searching on multiple accession types. searches can be expanded to retrieve data relevant to all splice isoforms of a queried protein. visual representation of the graph distinguishes between n-ary and binary interactions. a tool is provided to help identify spoke-represented complexes. multiple sources of evidence for a protein-protein relationship can be individually visualized, examined and filtered on. advanced filters are provided to identify nodes that are highly connected to a user-defined set of nodes. an adjacency-matrix viewer helps users pick out and explore links between two groups of user-defined nodes. coupled together with direct-support for disease group searching, we imagine that these functions will be useful for exploring relationships within and between complex diseases.

CONCLUSIONS
we have quantified different aspects of the data as justification for the features included in the plug-in and as a guide to expectations for the user as well as other developers of plug-in software. we hope this effort will benefit users not only as a search interface for consolidated interaction data but also as a tool for knowledge discovery.

