BACKGROUND
since its launch in  <dig>  the google search engine has all but monopolized page searches on the world-wide web  <cit> . the basis of this astonishing success is the pagerank algorithm developed by google founders larry page and sergey brin  <cit> , which allows efficient and stable prioritization of search results. here we show how the basic idea of pagerank can be transferred quite intuitively to the analysis of gene expression datasets in molecular biology. we modify pagerank appropriately to produce a new algorithm, generank, and explore its limits and potential for the analysis of both synthetic and real-world data.

just as the original pagerank is stable against the artificial inflation of a web page's rank by web designers, we hope that generank may obtain a more robust ranking of genes in  microarray experiments. while pagerank uses hyperlinks between web pages to achieve this end, we combine the expression measurements with external information, such as functional annotations, protein interaction data or previous experimental results.

data sharing techniques have been successfully implemented previously using, for example, go annotations  <cit>  or protein-protein interactions  <cit>  to define the network connectivity. justification for this is given by the observation that connected genes are more likely to be co-expressed  <cit> . additional advantages include the possibility for go terms to provide insight into the process of co-expression  <cit>  and for functional classification to be made for previously unannotated genes  <cit> . these examples serve to demonstrate the value and feasibility of combining data from different sources. not only is the analysis of a microarray experiment likely to be more robust when prior information is included, but networks rather than single genes can be identified as important, and further biological inferences can be drawn about the data with the aid of this added information.

our aim in this work is to use connectivity data to produce a prioritization of the genes in a microarray experiment that is less susceptible to variation caused by experimental noise than one based on expression levels alone. this is achieved using generank, a customised version of the pagerank algorithm.

RESULTS
the algorithm
the algorithm on which we base our method of microarray experiment analysis was originally devised for assessing the importance of web pages in search engine results. we show here that its formulation allows for a simple and intuitive extension for our application. the pagerank algorithm, used by the successful search engine google  <cit> , is based on the premise that a web page should be highly ranked if other highly ranked pages contain hyperlinks to it. this idea naturally extends to analysing the results of a microarray experiment, where we would like a gene to be highly ranked if it is linked to other highly ranked genes, even if its own position is lower, e.g., due to measurement variability. we can think of this as the "vote of confidence" principle . here we would hope that the relative ranking of the gene with little or no differential expression will be boosted by the pageranking process. in some cases there may be an even stronger biological interpretation. for example, suppose the gene with low differential expression is a transcription factor that controls the expression of all genes connected to it. the transcription factor itself may be "activated" by the experimental treatment but not change its expression â€“ but its target genes will. hence, generank should be able to highlight the transcription factor among the results.

the original pagerank algorithm also has a random walk interpretation where the ranks correspond to the invariant measure of a teleporting random walk on the web. this is equivalent to saying that the rank of a web page is proportional to the time spent at the web page whilst surfing the web. this idea can also be intuitively extended to ranking genes, where the rank of a gene is proportional to the amount of time a biologist should spend looking at a gene whilst analysing the experimental results.

as with the original algorithm, we require a network or graph to allow us to calculate a rank for each entity in the network. with the original algorithm, nodes represent web pages and a link exists between two nodes if one page contains a hyperlink to the other. this results in a directed graph. in our case, we define an undirected graph where a node represents a gene and the edges can be defined by some other "previous knowledge". for our purpose, we use either gene ontology annotations  <cit>  or expression profile correlation coefficients. in addition to the network structure, we require a vector of expression changes, experimentally observed in a microarray experiment, as input for the algorithm. other measures of differential expression could also be used, e.g. p-values, which are suitably transformed to ensure genes which are highly changed have a large input value. we shall only consider the use of expression changes.

for each gene, the expression level vector contains the value for its expression change in the experiment under consideration. the algorithm, generank, also uses a free parameter, d, in the range  that controls the weighting of expression change to connectivity used in the calculations. if d =  <dig>  the ranking returned is based solely on the absolute value of the expression fold-change for that gene. for d =  <dig> we return the ranking based on connectivity. by setting d in the range  we interpolate between these two extremes. one advantage of our approach is that we apply the algorithm to the entire network, i.e. we do not require a pre-defined threshold of important genes. we simply require an experimentally determined expression change and some connectivity information for each gene, and based on this generank will provide a re-ordering of genes in terms of their apparent importance. while "importance" may seem a rather vague concept in a biological context, we will show how it can be assessed objectively in the testing the algorithm section below. for full details of the algorithm and the random walk interpretation, the reader is referred to the methods section.

data
in addition to the gene expression data, generank uses a network or graph as input. we use the absolute value  of the gene expression data as a weight for each node in the graph and define the network connectivity by some other criterion. we use either gene ontology annotations or correlation coefficients, but there are many other possibilities, e.g., metabolic networks, transcription factor networks, or protein-protein interactions. we also used synthetic networks with controlled topological features for evaluation purposes. the three types of network were constructed as follows.

go networks
genes are connected if they share an annotation defined by the gene ontology. this defines three networks, one for each of the go sections; biological process, cellular component and molecular function. we do not use the acyclic directed graph associated with the gene ontology, but assign leaf nodes as the annotations for each gene. a yeast diauxic shift experiment  <cit>  was used to define the expression change vector. data was chosen from the  <dig>  hour time point when expression changes were largest. the mean degree, , and the clustering coefficient c  <cit> , are given in table  <dig> for each of the three networks. these are global graph properties which can be used to compare network topologies.

correlation coefficient networks
a yeast stress data set consisting of  <dig> microarray experiments under a wide range of stress conditions was used to construct these networks. this data set is discussed in  <cit> . we randomly removed  <dig> experiments from the data set and each was used as the expression change vector. the correlation coefficient  <cit>  was calculated for each gene pair using the reported expression changes for the remaining  <dig> experiments. edges were defined in the network for pairs of genes with correlation r >  <dig> . this data was taken from the stanford microarray database  <cit> . values for  and c are given in table  <dig> 

synthetic networks
to allow control over the network structure, synthetic networks were defined with  <dig> genes. the genes were split into two sets, a and b, where the genes in set a  were allocated an expression change drawn from a n distribution and the expression of the set b genes  were drawn from a n distribution. unless otherwise stated, |a| =  <dig> and |b| =  <dig> . edges were randomly assigned between genes with probabilities pa, pab and pb, where these are the probabilities of two set a genes being connected, a set a gene being connected to a set b gene and two set b genes being connected, respectively. the clustering coefficient and the mean degree of the nodes depend on the values of pa, pab and pb. representative examples are listed in table  <dig> 

synthetic network  <dig> is the standard case with equal expected degree across both sets and |a| =  <dig>  synthetic network  <dig> is the case where edega =  <dig> edegb. also the relative connectivity () in both cases is  <dig> since this is where optimal results are observed . synthetic network  <dig> is the case where |a| =  <dig> and again we have an equal expected degree across boths sets. here the relative connectivity is  <dig> , again where optimal results are observed for this network . the expected degree of a node in a is edeg = pa + |b|pab and for set b is edeg = |a|pab + pb.

to justify drawing the expression levels for sets a and b from n and n distributions, respectively, we compare the expression changes in a sample synthetic network to those in a yeast diauxic shift data set  <cit> . by measuring the mean and variance of the expression changes for every possible size of set a and b in both networks, we see that our method of assigning synthetic expression produces a distribution of values very similar to that observed in the diauxic shift experiment .

testing the algorithm
synthetic networks
since we are trying to improve the ranking of genes produced in microarray experiment, we need to quantify the quality of the ranking produced by the algorithm. in the case of synthetic data, we know that all genes in set a should be ranked above the genes in set b, which gives us a basis for comparing the ranking from experimentally observed fold-changes with the re-ordered ranking produced by generank. to quantify generank results, we used the area under the receiver operating characteristic curve   <cit> . this value describes how well the ranked list discriminates between genes in set a and set b. it will have a value of  <dig>  if sets a and b are randomly mixed and a value of  <dig> if they are perfectly separated, i.e. if all the genes of set a  appear at the very top of the list. we emphasise that with d =  <dig> the algorithm is equivalent to ranking on pure fold-change.

the construction of synthetic networks allows us to obtain full control over the network structure. we experimented with various network parameters.

relative connectivity and expression-connectivity weighting
we measure the relative connectivity as  since this is the expected number of connections in a divided by the expected number of connections between sets a and b. the expression-connectivity weighting parameter d is tested at  <dig>  intervals in the range . we vary both relative connectivity and expression-connectivity weighting in all tests along with one other variable. all results shown are averaged over  <dig> runs of the experiment and the auc is calculated for each combination in the parameter space.

relative expected degree
we carried out a number of tests where edeg = Î±edeg, for  <dig> â‰¤ Î± â‰¤  <dig> . here edeg and edeg denote the expected degree of a gene in sets a and b, respectively. results are given in figure  <dig>  in all cases we see an improvement achieved by the algorithm compared to pure fold-change ranking. the effect is only slight when the expected degree of every node is equal throughout the network , and increases for larger values of Î±. in addition, we never dramatically decrease the quality of the results for low values of d . also, the range of d for which we see an approximately constant high auc increases as the relative connectivity increases.

a number of observations can be made from the experimental results where edeg > edeg:

â€¢ the maximum auc achieved by the algorithm increases as the difference between edeg and edeg increases. for the case where Î± =  <dig> , we come particularly close to the maximum value of  <dig>  .

â€¢ as the difference between edeg and edeg increases, we see less distortion of results even for unsuitably high values of d. this is consistent with the fact that increasing d gives connectivity a greater influence in the ranking.

â€¢ the maximum auc achieved in each case occurs at larger values of d as the difference between the expected degrees increases. again this is consistent with a high value of d corresponding to a greater weighting of connectivity on the algorithm.

â€¢ the improvement by the algorithm over expression change ranking is greater when the difference between the expected degree of both sets is greater.

to summarise these findings, a higher expected degree of set a genes compared with set b results in the algorithm producing a higher auc, and hence more accurate results.

relative set size
four cases were investigated, where |a| =  <dig> ,  <dig> and  <dig>  in each case |b| =  <dig> - |a|, i.e. between  <dig> and 50% of the genes were defined as "differentially expressed". networks were constructed to have equal expected degree across all nodes. results are given in figure  <dig>  we see that the performance of the algorithm varies with |a|. the best results  are achieved at |a| =  <dig>  in addition, an improvement over expression change ranking is observed for |a| =  <dig> and |a| =  <dig>  as expected, with |a| =  <dig>  where half of the total network is in set a, the algorithm performs most poorly and generally fails to give an improvement.

these results on synthetic networks suggest that for certain network structures generank can achieve a significant improvement over ranking based on pure differential expression. the relative expected degree of sets a and b has a considerable effect on performance. in cases where the algorithm performs well  > edeg), the optimal results occur when  <dig>  â‰¤ d â‰¤  <dig> . it is curious, but probably pure coincidence, that the value d =  <dig>  is reportedly used by google  <cit> . at such a high value of d, the algorithm is giving significant weight to connectivity information, as is appropriate considering the high level of experimental noise in the simulated expression data.

however, in our tests the quality of the results generally decreases for values of d beyond â‰ˆ  <dig> , showing that we do require some expression change information to make the best possible interpretation. it appears that although optimal results arise when there is some expression considered in the ranking, a major contributory factor to the success of the algorithm is the high relative degree of the genes that are differentially expressed. this structure is certainly not present in all biological networks. in the next section we explore whether suitable real networks can be identified.

go networks
as described earlier, we construct the go networks by defining an edge between two genes if they share an annotation allocated by the gene ontology consortium. this allows us to construct three networks, one for each section defined by the gene ontology: biological process, cellular component and molecular function.

an initial test combined the real network connectivity with synthetic expression changes. we ordered the genes based on expression change in the yeast diauxic shift experiment and allocated the top  <dig> down-regulated genes to set a. we know from the synthetic network testing that it is preferable for the algorithm to have a higher expected degree of set a compared to set b. this is the case with each of the three networks where the set a genes were chosen in this way. synthetic expression was assigned as before to the genes in sets a and b. this allowed us to quantify the results produced by the algorithm. we used the algorithm to find the auc for  <dig>  â‰¤ d â‰¤  <dig> . results for the three networks are shown in figure  <dig>  and in each case we see that the algorithm is able to improve on expression change ranking. in particular, with values of  <dig>  â‰¤ d â‰¤  <dig>  we increase the auc for all cases, and for general use of the algorithm we would therefore suggest d =  <dig>  would be an appropriate choice for d. this increase of auc is only slight in the case of the molecular function network, but is more dramatic for the cellular component network. also, on average, the auc is high for the cellular component network, and is higher for all values of d than is obtained for the other networks.

to check if generank produces a gene ranking which is robust to noise we conducted a further experiment using the go networks. real experimental data were used throughout. the cellular component network was used in this experiment. for each of the top  <dig> genes sorted by differential expression, we set its expression change to  <dig> in turn  and determined if the generank algorithm was able to pick up this anomaly and consequently move the gene towards its original place in the ranked list. the premise here is that its connections to other highly changed genes will boost the artificially altered gene in the ranking. the same experiment was done for  <dig> randomly selected genes. the results are given in figure  <dig> 

to quantify the results we calculated the quality index b as



where alt_pr is the generanked position after the expression of the gene has been artificially altered, orig_exp_rank is the original expression-based position in the list, and alt_exp_rank is the expression-based position after the differential expression has been set to  <dig> 

in the case where we are altering a gene in the top  <dig>  a 'boosting' effect is observed and the ranked position after the fold-change has been moved towards the original ranked position. we can observe groups of genes which are boosted to the same level . it is likely that these genes are a completely connected subgraph, which results in all genes being given the same ranking. altering genes which were originally ranked in the top  <dig>  we achieve b =  <dig> . this effect is not observed for a random set of genes .

correlation coefficient networks
using the correlation coefficient network defined by the stress data set  <cit>  we carried out the same experiment to check the robustness of the ranking produced by the algorithm. here we have one network with different expression change vectors to be used as input to the algorithm. each of the  <dig> experiments in the data set, which were not used in the network construction, was used as the input expression vector in turn. results for six representative experiments are shown in figure  <dig>  the expression change of each gene was set to  <dig> in turn, i.e. defining it as "only slightly changed".

again we calculate a value of our quality index b as described above. as a result of the high degree of the top  <dig> genes, we see that a high level of 'boosting' is achieved, as demonstrated by the high values of b. in other words, we are able to significantly raise the position of the altered gene in comparison with the ranked position that would have been observed had the standard expression change ranking been used.

CONCLUSIONS
the purpose of this work was to explore the possibility of adapting the pagerank algorithm, used by google in assessing the importance of web pages, for the task of prioritizing the 'importance' of genes in a microarray experiment. our new algorithm, generank, allows connectivity and expression data to be combined to produce a more robust and informed summary of an experiment, compared to the standard procedure of basing the importance of a gene on its measured expression change. although we use expression change values as expression data, this is not restricted, and some other means of capturing the expression information may also be used. generank can be justified theoretically and has been tested on synthetic data, experimental data and a combination of both. the algorithm has a single parameter, d, that controls the relative weighting of expression and connectivity information. a value d =  <dig> ranks genes based on pure expression information and a value d =  <dig> ranks on pure connectivity degree. the optimal value of d is data-dependent, but based on our results we suggest d =  <dig>  for general use. with d =  <dig>  we observed no deterioration and generally an improvement over ranking based on pure expression change in the case where we combined real connectivity information with synthetic expression changes. generank is simple to implement, gives a principled approach to combining different data types, and is a novel instance of applying search engine technology to this important task. we note that generank results are not designed to replace the actual expression measurements, but should be used alongside the results with additional biological knowledge, to draw attention to unusual structures within the data. for example, a gene which is not viewed as important from the microarray results alone but is highly ranked in the generank results, should be given further biological consideration.

while the improvement of gene rankings upon application of generank is already significant in the examples presented, it may become even more so once comprehensive high-quality biological network information becomes available. of particular interest in that respect will be transcriptional regulatory networks, such as are now being generated by technologies like chip-chip . as discussed above, the information encoded in such regulatory networks will be intuitively amenable to generank analysis. it will also re-introduce an element of directedness into the network, moving it even closer to the original pagerank application.

