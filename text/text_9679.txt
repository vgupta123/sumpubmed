BACKGROUND
dna-binding proteins, called transcription factors , are involved in transcription regulation. these factors bind to specific positions in promoter regions for modulating the expression of genes. the common pattern of the recognition sites of a tf is called a motif. we use the term transcription factor binding site or motif instance to mean the occurrence of the motif with some mutations in promoter regions.

identifying transcription factor binding sites  in promoter regions is a difficult problem in molecular biology. the main reason for this difficulty is that a single transcription factor might bind to regions which vary greatly in their sequences. although the binding sites for a particular transcription factor share short similar subsequences, sometimes they are highly degenerated. such short sequences are expected to randomly occur every few hundred base pairs, and thus finding them is a difficult task. since experimental procedures to determine the exact binding sites are too expensive and time-consuming, computational methods have been developed in the past two decades for discovering novel motifs and tfbss in a set of promoter sequences  <cit> .

there are two main classes of algorithms for finding regulatory motifs. first, the methods that search for known transcription factor binding sites in a new sequence . example tools include consite  <cit> , match  <cit> , mapper  <cit> , patser  <cit>  and rvista  <cit> . second, the methods that try to detect new motifs within a set on dna sequences based on sequence homology . example tools include gibbs sampler  <cit> , alignace  <cit> , meme  <cit>  and yeast motif finder  <cit> . generally, motif finding algorithms in both of above methods have three important elements: a motif model that can capture the similarities of a diverse set of binding sites for the same transcription factor, an objective function defining the ranking of known motif  or potential motifs , and a search strategy for parameterizations of the motif model. the first two elements can be given an abstract representation or modeling, but should probably be designed to utilize and enhance biologically relevant information.

until now, the most common way for binding sites modeling is to assume that any base in each site occurs independent of others. in this modeling, a motif is represented based on consensus sequences  <cit> , position weight matrices   <cit> , matrix profiles  <cit> , sequence logos  <cit> , mismatch strings   <cit>   and iupac strings   <cit>  . methods based on the assumption of independency between positions are simple with small number of parameters that make them easy to implement. these methods are widely used and often considered as acceptable models for binding-site predictions  <cit> . however, recent experimental evidence  <cit>  has promoted the development of models which incorporate position dependencies. the related methods include bayesian networks  <cit> , permuted markov models  <cit> , markov chain optimization  <cit> , hidden markov models  <cit> , non-parametric models  <cit>  and generalized weight matrix models  <cit> . based on the above discussion, another method for modeling binding sites is presented by tomovic and oakeley  <cit> . in this method, for a given tfbs, dependent and independent positions are considered and in searching for a motif the scoring is calculated based on them. the dependency between positions of a given tfbs are predicted by statistical approach which may be explained by structure of tf-dna complexes. methods based on position dependencies usually have better binding site prediction accuracy with lower false positive rates. but these methods require more complicated mathematical tools, with more parameters to estimate, and require more experimental data than typically available ones  <cit> . on one hand, a more comprehensive model may allow for a better fit to the data. on the other hand, the more complex model may over-fit the data and result in an inferior predictive power.

in this paper, we focus on tfbs modelings and search methods for known motif prediction which find known transcription factor binding sites in a given sequence, and investigate known motif ranking . we study whether tfs show position dependencies in their binding sites or not. we also investigate the use of joint information content and mutual information as a measure of dependency between positions in tfbs. we suggest a statistical approach for testing dependencies, and present a new scoring schema that can be used in search methods for finding known transcription factor binding sites. our method for modeling dependencies is simply an extension of position independencies methods. this method is formulated by simple mathematical calculations, and as will be shown, the proposed algorithm is very simple and substantially efficient, and can be easily implemented on any data sets. we test our new scoring schema on the real data sets and compare the obtained results with two other well known independent and dependent scoring schemas. using this comparison we can demonstrate the effectiveness of our proposed method against the independent scoring schema, and our scoring function performs better than methods that do not consider dependencies. it is shown that the joint information content and mutual information provide a better and more general criterion to investigate the relationships between positions in the tfbs. also by using these two measurements, we can obtain results compatible to the results obtained by dependent scoring schema.

methods
as mentioned in previous section, one of the important problems in motif discovery area is finding the known tfbss in a given dna sequence or promoter region . in this section we focus on this problem and at first, some definitions and notations further used in this paper are introduced. let n = {a, c, g, t} be the four nucleotide letters' of which dna sequences are composed. we have the dna sequence d = d <dig> ..., dn  on n, and let us suppose that we have t known tfbss of the length ℓ which are represented by a matrix bt × ℓ for a given tf, and we intend to investigate by b, where d possess a motif instance or transcription factor binding site corresponding to the given tf. for finding the position of this motif instance in d, we first create a position weight matrix w of b, and then we scan all subsequences r = di,..., di+ℓ- <dig> for i =  <dig> ..., n - ℓ +  <dig> of d, and align position weight matrix w with each r. all the subsequences which their score are greater than a cutoff are reported as motif instances. the creation of position weight matrix w from tfbss and calculating the score of alignment w with a subsequence are called scoring schema.

the accuracy of the solution in this search problem depends on how we design the scoring schema, and how the position weight matrix is constructed. in this section we first discuss two existing scoring schemas which are employed for ranking known motifs and predicting tfbss  <cit> , later a new scoring schema is presented.

independent scoring schema
the first scoring schema is a conventional method and is employed in many papers  <cit> . in this scoring schema, it is assumed that all positions in a given motif are completely independent. this scoring schema is defined as follows.

suppose we have a promoter region d and a tfbs matrix b of some known motifs. assume that f  shows the occurrences of nucleotide b in column j of the matrix b. employing this function, a probability p is made as follows:

  

where a is the smoothing parameter  =  <dig> ). later, a position weight matrix w <dig> × ℓ is made as follows:

  

where each p shows the occurrence probability of nucleotide b  in a random sequence  =  <dig>  for every b ∈ n).

now, let r be a dna subsequence with the length ℓ of a promoter region d . for computing the score of r, we align position weight matrix w with r and calculate score <dig> as follows:

  

this score can be normalized as follows:

  

where maxscore <dig> and minscore <dig> are calculated as follows:

  

dependent scoring schema
the second scoring schema was first introduced in  <cit> . in this scoring schema, dependency between some positions in a given tfbs is assumed. this method uses a statistical approach to find dependent positions in a set of known tfbss. therefore, if the dependent positions of a set of tfbss are available, then this scoring schema is defined as follows.

similar to the previous definition, we have a promoter region d and t binding sites of the length ℓ which are represented by a matrix bt × ℓ for a given tf. also, assume that f  shows the occurrences of bases b <dig> ..., bm  in dependent positions j <dig> ..., jm in the matrix b . as an example, f represents the number of occurrences of a, c, a, and t in the positions  <dig>   <dig>   <dig>  and  <dig> in a given matrix b. it should be noted that the positions j <dig> ..., jm are dependent and not necessarily consecutive.

the corrected probability for the bases b <dig> ..., bm in positions j <dig> ..., jm is defined as:

  

where a is a smoothing parameter and can be calculated as follows:

 a = a × ... × a. 

now, the position weight matrix w corresponding to the binding sites is calculated as:

  

finally, for a given subsequence r = r <dig> ..., rℓ  of d, we align position weight matrix w with r and calculate score <dig> as follows:

  

where k <dig> is the number of independent positions, k <dig> is the number of dependent positions order  <dig>  and km the number of dependent positions order m .

the normalized version of score <dig> can be defined as:

  

where maxscore <dig> and minscore <dig> can be calculated as follows:

  

new scoring schema
in the previous subsections we presented two scoring schemas. in the first, nucleotides in all positions in a given tfbs are considered as independent, but this may not be true in all cases because it is shown that dependency between some positions are important  <cit> . in the second, dependency between some positions in a tfbs are considered, but this model has also two problems: first, calculation of dependency between positions is sophisticated, and second, final score is obtained by summation of all the scorings obtained by each order dependent positions, which are not in the same range.

as mentioned, all positions in tfbss may be dependent, because the length of tfbss are short, therefore all positions in tfbs may be involved in the interaction with a factor and dependency between all positions are important. tfbss are short regions in promoter region that tfs can be bonded to them to provide initial conditions for gene transcription. by mutual comparison of tfbs corresponding to a specific tf, we see that some positions in tfbs are mutated and some other ones are conserved. since the length of a tfbs is short, therefore it seems that both mutated and conserved positions play an important role in binding of tf and tfbs. during a transcription process, tfbs region constructs structure by hydrogen bonds and this causes the attraction of tf to this region. thus, with respect to the above feature of this process, it seems that the conserved positions and mutated positions cause this attraction. also, with respect to that, the average specific free energy of binding to all binding sites play an important role in this attraction, and by considering that this energy is directly related to the information content of the preferred binding sites  <cit> , we use the information content for tfbs scoring.

similar to the previous subsection, suppose that we have a promoter region d and binding site matrix bt × ℓ for a given tf. employing information theory, we compute the information content  of a set of tfbss which are represented by the matrix b with position independency as follows.

  

where f and p are computed similar to independent scoring schema. from this formula, we have  <dig> ≤ ic ≤ 2ℓ. now, we assume that positions are mutually dependent, and f shows the number of the occurrence of nucleotides b <dig> and b <dig> in positions j <dig> and j <dig> in the given matrix b. as an example p represents the probability of the occurrence of the pair a and t in the positions  <dig> and  <dig> in a given matrix b. clearly, the number of all two combinations of four nucleotides is equal to  <dig>  and the number of all two combinations of ℓ tuples is equal to ℓ / <dig>  in this case, the joint information content  is computed as:

  

and for this formula we have  <dig> ≤ jic ≤ 4ℓ.

obviously, we get more information from jic when the positions are more conserved. now, the problem is to add up the information of the mutated positions to jic which have not been considered yet. for this reason, we compute the mutual information  as follows:

  

and from this formula we have  <dig> ≤ mi ≤ 2ℓ. the relation of mi and jic for each position pairs is as follows. if mi =  <dig> then jic =  <dig> and consequently mi + jic =  <dig>  if mi =  <dig> then jic =  <dig> and consequently mi + jic =  <dig>  this condition implies that jic does show less information and by adding up mi we can get more information. actually mi carries meaningful information that can not be discarded. on the other hand, ic =  <dig> means, conservation is low but dependency between positions is high.

with regard to the above discussion, the probability of the bases b <dig> and b <dig> in positions j <dig> and j <dig> can be defined as:

  

where a is a smoothing parameter and can be calculated as:

 a = a × a. 

now, for our scoring schema, we make a position weight matrix w <dig> × /2) whose each entry shows the number of occurrences of a pair of nucleotides in a pair of positions. this matrix is defined as:

  

where  ∈ ,  <dig> ≤ j <dig>  j <dig> ≤ ℓ, and j <dig> ≠ j <dig> 

finally, for a given subsequence r = r <dig> ..., rℓ  of d, we align position weight matrix w with r and evaluate score <dig> as follows:

  

the normalized version of score <dig> can be defined as:

  

where maxscore <dig> and minscore <dig> are formulated as follows:

  

RESULTS
in order to determine the distribution of tfs with dependent positions and verify that our scoring schema indeed improves the specificity of known motif discovery, we extract some tfs from two public databases jaspar  <cit>  and transfac  <cit> . for extracting the tfs from jaspar, we select all tfs from jaspar database and implant tfbss from these tfs in some random sequences which are generated by the similar way to  <cit> . for extracting the motifs from transfac, we use the benchmark data sets that generated by sandve et al.  <cit>  and tompa et al.  <cit> . sandve generated three data set versions from transfac based on the collections of binding site fragments that are ranked according to the optimal level of discrimination. these data sets are called 'algorithm-markov', 'algorithm-real', and 'model-real'. tompa also generated three data set versions from transfac based on the employed background sequences. these data sets are called 'generic', 'mchain', and 'real'. therefore, we have seven data sets  that each of them contains some tfs  where each tf contains some tfbss .

we compare our new scoring schema with the two scoring schemas that were introduced in section  <dig> on the above data sets for finding known motif instances. the comparisons are proceeded in two levels: comparison of sites  and comparison of nucleotides  regarding the position of motifs in the main sequences. for this reason, we first introduce the following criteria for comparison  <cit> .

 <dig> ntp is the number of nucleotide positions in both known sites and the predicted sites.

 <dig>  nfp is the number of nucleotide positions not in the known sites but in the predicted sites.

 <dig>  nfn is the number of nucleotide positions in known sites but not in the predicted sites.

 <dig>  ntn is the number of nucleotide positions in neither known sites nor the predicted sites.

 <dig>  stp is the number of known sites overlapped by the predicted sites.

 <dig>  sfp is the number of predicted sites not overlapped by the known sites.

 <dig>  sfn is the number of known sites not overlapped by the predicted sites.

a predicted site overlaps a known site if it overlaps by at least 25% of the length of the known site. clearly, the first four criteria are in the nucleotide level and the last three criteria are in the site level. regarding the above criteria, eight different measurements for the evaluation of the algorithm are introduced.

 <dig>  nucleotide performance coefficient : following pevzner and sze  <cit> , npc is defined in the nucleotide level of the predicted sites and is equal to

  

as we can see npc ≤  <dig> and the higher value of npc shows that the known sites and the predicted sites are more similar. obviously, if the predicted sites were equal to the known sites then npc is equal to one.

 <dig>  nucleotide correlation coefficient : following burset and guigo  <cit> , ncc is defined in the nucleotide level as

  

the value of ncc varies from - <dig>  to + <dig> .

 <dig>  nucleotide specificity : a statistical measure for the correctness prediction of positions of a non-motif sequence and is equal to

  

this measure is called true negative rate in the nucleotide level. the complement of this value is recognized as nucleotide selectivity  or false positive rate, i.e. nsl =  <dig> - nsp.

 <dig>  nucleotide sensitivity : is the fraction of the known site nucleotides that are predicted as motifs and is defined by

  

this measure is called true positive rate in the nucleotide level.

 <dig>  site sensitivity : is the fraction of predicted sites that are known as

  

this measure is also called true positive rate in site level.

 <dig>  nucleotide positive prediction : is the fraction of the number of nucleotides in the predicted site similar with the number of nucleotides in the known site and is equal to

  

 <dig>  site positive prediction : is the fraction of the number of predicted sites similar with the known sites as

  

 <dig>  site average performance : is the average of site sensitivity and site positive prediction and is defined by

  

none of the above measurements, can capture the correlation of the motif prediction algorithms perfectly by themselves. therefore, in any case, we need a way of summarizing the performance of a given motif finding program over all data sets. for each program, each measurement m , over all data sets, is obtained and the performance of each program on all data sets are compared by the similar methods given in  <cit> , which is defined as follows.

 <dig>  average: for each program, the measurement m is calculated on each data set and then the usual arithmetic mean of the measurement m is evaluated for each program.

 <dig>  combined: adding up ntp, nfp, nfn, ntn, stp, sfp and sfn over all data sets, the measurement m is computed for all data sets which are considered as a large data set.

 <dig>  normalized: for each motif, the measurement m is normalized by subtracting the mean and dividing by the standard deviation over all the programs on that motif, and the average of these normalized scores over all motifs are obtained. this method puts easy and hard motifs on the same scale.

for finding tfbss in the generated data sets from the above mentioned data bases, we use three test methods. in the first test method, for each tf, we have t known tfbss of the length ℓ which are implanted in t sequences of the length n. initially we calculate the motif matrix b and corresponding pwm. now we scan t sequences with pwm and calculate the score of all subsequences of these t sequences based on three mentioned scoring schemas  and then report subsequences with the score above a predefined cutoff  as motif instances or predicted tfbss. the above process is repeated for all tfs in each of the data sets. the value of cutoff is chosen based on best ncc for each tf. roughly, one method for computing the cutoff is to fix an initial value for cutoff  and then select all subsequences of the length ℓ from t sequences with a score above this cutoff, as motif instances.

with regard to the known actual positions of binding sites each tf, the ncc value of this tfbss is computed. then we decrease the value of cutoff and we again predict tfbss and calculate its corresponding ncc. if the value of ncc increases we repeat the whole process for smaller value of the cutoff, until we get to a cutoff whose ncc value decreases. the previous cutoff before this last decrease, is selected as the final cutoff. it should be noticed that, if cutoff is small, so tp and fp are large and tn and fn are small, and if cutoff is large then tp and fp are small and tn and fn are large. therefore we choose cutoff such that the calculated ncc be maximum. in the second test method we use jackknife method, again for each tf, we have t known tfbss with the length ℓ which are implanted in t sequences with length n. first we ignore j-th tfbs of this set, then calculate the motif matrix b for t -  <dig> remaining tfbss, and the corresponding pwm. then based on the mentioned scoring schema, we consider j-th sequence and scan this sequence with pwm for finding a subsequence with maximum score as a predicted tfbs or motif instance. for each j  we repeat this process. finally, accuracy of methods are investigated on all tfs in each data set. in the third test method, we use the method which is introduced in  <cit> . we have m = t + q sequences of the length n and t tfbss of the length ℓ for each tf which are implanted into t sequences of m sequences. therefore q sequences have no motif. now by using the value of cutoff which is calculated in the first test method for each tf, we try to find motif instances in m sequences by pwm of t known tfbss. the accuracy of known motif prediction is investigated in all the above test methods for the predicted motifs.

finally, we perform statistical analysis on ncc measurement of motifs in each data set . in following we describe our statistical analysis. let pi, j, k be the set of ncc values obtained from the jth test method  by the kth scoring schema  on the ith data set . clearly k =  <dig>  k =  <dig> and k =  <dig> stand for the independent, dependent and our scoring schema, respectively. also μi, j, k shows the average of the values given in the set pi, j, k. now we intend to see whether the distribution of these values in the set pi, j, k follows a normal distribution or not. this is done by using the k-s  test. actually, this test represents whether the data shows a significant deviation from normality or not. now if p-value is more than  <dig>  thus the null hypothesis , stating the data have come from normal distribution, is not rejected. we also compare the ncc values of our scoring schema with the two other scoring schemas . for this reason, we compare the above mentioned mean values corresponding to each schemas. mutually we compare  and  for each  <dig> ≤ i ≤  <dig> and  <dig> ≤ j ≤  <dig>  for comparing μi, j,  <dig> and μi, j, k , we use the paired t-test, if pi, j,  <dig> and pi, j, k have normal distribution, otherwise the wilcoxon signed-ranks test is applied. this statistical analysis estimate significant deviation of two averages. the results of our statistical analysis are shown in the next subsections.

jaspar database
as mentioned, for extracting the data from jaspar, all  <dig> tfs are selected from this database. let us denote the number of tfbss of the ith tf by ti,  <dig> ≤ i ≤  <dig>  we implant tfbss of each tf in some of random sequences that are extracted from the supplementary no.  <dig> enclosed in  <cit> . the number of these random sequences is  <dig> and these sequences are of the length  <dig> to  <dig> and are sampled from a third-order markov model background distribution. so we generate our data set as follows. assume the ith tf in jaspar, consists of ti tfbss. we select randomly, ti sequences from  <dig> background sequences and implant all these tfbss in ti sequences in random position. we repeat this process for all tfs in jaspar database. finally  <dig> sets are obtained. let si be the set of ti sequences in which ti known tfbss are implanted. the position dependency in this paper for evaluating dependent scoring schema is similar to the values given in  <cit> , which are obtained by statistical approach with respect to their structures. now, the performance of the above three test methods on generated data set are as follows. in the first test method, we use an ordinary search method. first, for the ith tf, the corresponding position weight matrix is constructed from its known tfbss. later, each subsequence r  of si is aligned to the constructed pwm and the scorej and nscorej  are computed. finally, the subsequences with the score above the cutoff are considered as motif instances or predicted tfbss.

we again repeat the above process for all  <dig> tfs. finally all previously mentioned measurements are evaluated. so for each measurement we obtain  <dig> values. for the obtained results the average, combined and normalized results of each measurement  are shown in figure  <dig>  although, our scoring schema is similar to dependent scoring schema but as seen in the figures our scoring schema can detect the motifs better. in following, we confirm this matter.

we have also performed some statistical analysis for  <dig> ncc values. for all the sets p <dig>   <dig>  k,  <dig> ≤ k ≤  <dig>  which do not follow a normal distribution, we use the wilcoxon signed-ranks test on  and . the calculated p-values indicate that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig>  and μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> .

in the second test method, we use jackknife method. let us, assume that the k-th tf has tk tfbss of the length ℓ, and sk be the set of sequences in which these tk tfbss are implanted. also, suppose that j-th tfbs is not known and tk -  <dig> tfbs are known. so by using the pwm of tk -  <dig> known tfbss and the scoring schema, unknown j-th tfbs is predicted from j-th sequence in si. for prediction, each subsequence r  of the jth sequence is aligned with the constructed pwm and the scorei and nscorei  are computed. the subsequences with maximum score are considered as motif instances. the above process is repeated for j =  <dig>   <dig> ..., t, and k =  <dig>   <dig> ...,  <dig>  and all tfbss with three scoring schemas are predicted. for these values the average, combined and normalized results of each measurement are shown in figure  <dig>  in this case our scoring schema is similar to the independent scoring schema and is performed better than dependent scoring schema. in following, we again perform statistical analysis for confirming this result. we use the wilcoxon signed-ranks test on  and . the calculated p-values indicate that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig>  and μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> .

in the third test method, the previous  <dig> true negative  sequences  are added to each  <dig> tfs. so the set sk of the kth tf has  <dig> + tk sequences. then the ability of each scoring schema for finding motifs for each tf is investigated. the employed search method is similar to the first test method. the average, combined and normalized results of each measurement in this test are shown in figure  <dig>  in this case our scoring schema and dependent scoring schema perform similarly. by notice that none of the sets p <dig>   <dig>  k,  <dig> ≤ k ≤  <dig>  follow a normal distribution, we use the wilcoxon signed-ranks test on  and . the calculated p-values indicate that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig>  and μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> . we can see that our scoring schema is not case sensitive, but the performance of the other two scoring schemas are depend on test methods.

sandve's benchmark
as mentioned, the data sets used for testing and comparing the three mentioned scoring schemas on transfac database, are the 'algorithm-markov', 'algorithm-real', and 'model-real' bench mark data sets which are generated by sandve et al.  <cit> . as mentioned in  <cit> , these data sets are created by extracting the sets of binding site fragments with the same length for  <dig> different tf matrices. a binding site fragment is the binding site region that is used in the construction of a matrix in the transfac alignment. all three data set versions 'algorithm-markov', 'algorithm-real', and 'model-real' are constructed from the same fragment sets and the selection of data sets is based on ncc. for the 'algorithm-real' version, binding sites are kept in their original genomic sequence, which is truncated to a maximum length of  <dig> bp. to make the data sets more coherent, the binding site fragments that contained degenerate bases are removed. this binding sites have gaps in the transfac alignment, not located within the  <dig> bp upstream of transcription start site in the sequence linked to by transfac. additionally the selected motifs have ncc value higher than  <dig> . for the 'algorithm-markov' version, binding sites are implanted in the sequences generated from a third order markov model inferred from all sequences of the corresponding real data set. in addition the selected motifs have ncc value higher than  <dig> . both the lengths of the 'algorithm-markov' version sequences and the positions of the implanted binding sites are kept equal to the corresponding real sequences. motifs with fewer than five binding sites are removed, and  <dig> motifs  for 'algorithm-real' and  <dig> motifs for 'algorithm-markov' are kept. for creating 'model-real' version,  <dig> motifs with ncc below  <dig>  are selected. each of these motifs have at least  <dig> motif instances  and are kept in their original genomic sequences. it should be noted that in each motif, motif instances are similar to the background sequences .

we have run the benchmark data sets with both independent position scoring and our scoring schema, but not with dependent scoring schema; since dependency between the positions of motifs are not available for these data sets, therefore the dependent scoring schema can not be tested on these data sets. for each data set in this benchmark, the test have been done by the first and second test methods discussed in above and the average and combined results of each measurement are obtained. the third testing method is not implemented, because this benchmark has no information about tn sequences  and we would like to keep the originality of this benchmark. the figures  <dig> and  <dig> show the results of first and second test methods on 'algorithm-markov' data sets respectively .

we have also perform statistical analysis on  <dig> ncc values on the first and second test methods. since p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> which do not follow normal distribution, we use the wilcoxon signed-ranks test on  do not follow p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> do not follow distribution. the calculated p-values indicate that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig>  and μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> .

also, the figures  <dig> and  <dig> show the results first and second test methods on 'algorithm-real' data sets respectively. we have also done statistical analysis on  <dig> ncc values on the first and second test methods. since p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> which do not follow normal distribution, we use the wilcoxon signed-ranks test on  but p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> follow normal distribution therefore we use the t-test on . the calculated p-values indicate that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig>  and μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> .

the figures  <dig> and  <dig> show the results of first and second test methods on 'model-real' data sets respectively. we have also perform statistical analysis on  <dig> ncc values on the first and second test methods. since p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> which follow normal distribution, we use the t-test on  and so p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> are normal distribution. the calculated p-values indicate that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig>  and μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> .

as we can see, in jackknife testing method, our scoring schema and independent scoring schema are similar, but our scoring schema performs better when the motif instances are planted in the data sets and the search method is based on cutoff.

tompa's benchmark
as mentioned, other data sets used for testing and comparing the two mentioned scoring schemas on transfac data base, are the 'generic', 'mchain', and 'real' data sets which are generated by tompa et al.  <cit> . recall from  <cit> , the data set 'real' is created by implanting the selected tfbss of transfac into real promoter sequences as a background, the data sets 'generic' are created by implanting the selected tfbss of transfac into randomly chosen promoter sequences from the same genome, and the data set 'mchain' is created by implanting the selected tfbss of transfac into sequences generated by a markov chain of order  <dig>  the implanted tfbss do not have the same length in all three data set types. the tfbss are selected from transfac by the following process. initially, only tfs are selected for which transfac also lists a binding site consensus sequences. for each factor, duplicate instances of the same binding site, binding sites missing sequence or position information, binding sites whose position is annotated as start site, binding sites whose position is less than - <dig> or greater than  <dig>  and sequences with two reported binding sites contradicting each other in the sequence are removed. the remaining binding sites are implanted into three type of background sequences. in addition in each data set some sequences without motifs are also inserted and consequently  <dig> motifs of each type are obtained. since each data set contains some motif with non-similar length, and some sequences in each data sets do not have any motif, we omit some sequences in the data sets and finally, for each data set types, we have chosen  <dig> motifs that at least have  <dig> motif instances with the same length. it should be noted that the pwm is made from this data but the test is done on all member of these data set.

similar to the sandve's benchmark data sets we have run this benchmark with independent position scoring and our scoring schemas, but not with dependent scoring schema; since dependency between the positions of motifs are not available for these data sets, therefore the dependent scoring schema can not be tested on these data sets. for each samples in this benchmark, third test method have been done. first, the pwm corresponding to motifs in each data set are constructed, and then we suppose these motif are known and we try to predict motifs in all data set background sequences. the average and combined obtained results of each measurement on this benchmark based on 'generic', 'markov', and 'real' data sets are shown in figures  <dig>   <dig>  and  <dig> respectively. we have also done statistical analysis on  <dig> ncc values on the first and second test methods. p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> which follow normal distribution so we use t-test on . the calculated p-values indicate that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> . p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> which do not follow normal distribution, we use the wilcoxon signed-ranks on . the calculated p-value indicates that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> . p <dig>   <dig>   <dig> and p <dig>   <dig>   <dig> which follow normal distribution so we use the t-test on . the calculated p-value indicates that μ <dig>   <dig>   <dig> ≥ μ <dig>   <dig>   <dig> . in this case we can also see that our scoring schema is performed better than independent scoring schema in each data set.

CONCLUSIONS
in this work, we investigate the dependencies within transcription factor binding sites, and present a simple way for modeling these dependencies. we have developed a new scoring schema for known binding site perdition. in this scoring schema the joint information content and mutual information are used as a measure of dependency between position in tfbs. we have evaluated different aspects of the scoring schema and this method is implemented and tested on real data sets. the results are compared with two well known scoring schemas. for comparison some statistical measurements are considered which show our scoring schema can improve motif prediction.

for investigating the improvement of our scoring schema on stp, we calculated stp of three scoring schema on all seven tested data sets and we observed that, on all the tested data sets our scoring schema show an average % <dig> improvement comparing to the independent scoring schema and also % <dig> improvement comparing to the dependent scoring schema on stp.

for indicating the predicting power of our approach against the independent scoring schema, we have performed a gene wide search on yeast genome which consists of  <dig> chromosomes, for reb <dig> tf with  <dig> tfbss, rox <dig> tf with  <dig> tfbss, uash tf with  <dig> tfbss and urs <dig> tf with  <dig> tfbss  <cit> . for each tf, a profile is created based on its tfbss, and each tfbs is scored by its profile based on our scoring schema. the minimum obtained score is considered as a cutoff for this tf for our scoring schema. with respect to this cutoff value, the yeast genome is searched for detecting these tfbss with our scoring schema, and all subsequences with a score above the cutoff are reported as motif instances. finally the ntp, nfn, and nfp criteria are calculated for these motifs. the above process is also repeated for independent scoring schema and the ntp, nfn, and nfp criteria for motif instances which found by this scoring schema, are also calculated. the table  <dig> show the ntp, nfn, and nfp values obtained by our scoring schema and independent scoring schema for detecting tfbss of reb <dig>  rox <dig>  uash and urs <dig>  as we can see, in this table values of these criteria of our scoring schema are higher, which show a better prediction.

in general, the obtained results on the biological data sets demonstrated that the joint information content and mutual information provide a better and more general criterion to investigate the relationship between positions in the tfbs, and motif detection can be improved with the scoring schema that considers dependency in tfbss.

authors' contributions
initial idea of the research was from fzm and ms. all authors participated in designing the structure and organization of the manuscript. fzm designed and implemented the scoring schema and tested on different data sets. all authors contributed to read and approved the final manuscript.

