BACKGROUND
protein surfaces attract numerous studies as they are the site of molecular binding and enzymatic reactivity. to date these studies use three levels of protein surface representations. the oldest represents surfaces as sets of exposed atoms  <cit> . a common alternative is to represent surfaces by sets of mesh points  <cit>  that smooth the exposed atom surfaces. finally, sets of mesh points may be coarse grained by descriptor-based methods  <cit>  that allow rapid comparisons of surfaces and surface patches. these representations have served as an infrastructure for numerous studies that analyze surface electrostatics  <cit> , predict catalytic residues and active sites  <cit> , and characterize binding sites for small ligands as well as other proteins . while these studies mark a major trend in the annotation and prediction of protein function, surfaces are practically ignored in protein structure prediction. specifically, we are not aware of any study that tried to assess the surfaces of models generated by prediction methods. this is somewhat surprising as one of the ultimate goals of structure prediction is to allow functional annotation of the target proteins and to support structure-based design of ligands and mutations  <cit> . the current study suggests a plausible approach to the assessment of model surfaces and compares surface accuracy with standard backbone-based measures such as root mean square deviation   <cit>  or global distance test - total score  <cit> .

notwithstanding the importance of the fine-grained representations of protein surfaces, their complexity calls for coarse graining, or abstraction; a coarser perspective can reveal new insights about the surface architecture that are otherwise masked by the plethora of fine details. two previous lines of study,  <cit> , and  <cit> , suggested coarse-grained representation of protein surfaces using the notion of surface patches. their approaches to the problem were remarkably different, reflecting the different aims of these studies. jones and thornton  <cit>  and later albou et al.  <cit>  defined surface patches as overlapping sets of proximate surface residues, and compared binding site patches with non-binding ones to characterize and predict protein-protein interaction sites  <cit> . baldacci et al.  <cit>  defined surface patches as non-overlapping sets of homogeneous and connected surface points and classified them to twelve predefined types. they employed data mining techniques on these patches to identify structural similarity and plausible evolutionary connection between proteins. since both applications of the surface patch concept are so tightly tailored to their specific aim, it is hard to see how they can be used in a different context.

here we present a more general representation of surface patches, which is inspired by the central role of clustering in the study of protein fragments   <cit> . representative fragments, extracted by clustering large data sets of protein structure fragments, have been used for a wide range of applications including: studies of sequence/structure relationships  <cit> , sequence alignment  <cit> , structural comparison and classification  <cit> , large scale mapping of the fold space of proteins  <cit> , and for protein structure prediction  <cit> . here, we use the k-means++  <cit>  clustering algorithm to generate a library of representative protein surface-patches that commonly occur in the protein data bank . to demonstrate the utility of our approach, we quantify the differences between the surfaces of native protein structures and those of decoys generated by state-of-the-art structure prediction methods. we also suggest a variety of other applications for future research.

briefly, a surface patch in this study is a set of surface atoms within a certain radius around a surface β-carbon, denoted the pivot . the distance between two patches is the root mean square deviation  between their atoms under a mapping that preserves chemical identity. pairs of patches of different chemical compositions are considered infinitely distant. the k-means++ algorithm uses this distance to break a large data set of patches into k =  <dig> structurally homogeneous clusters. the centroids of these clusters constitute our library , which captures genuine features of native structures surfaces .

RESULTS
we extracted  <dig>  surface patches from the training set domains, calculated all vs. all distances, and weeded out  <dig> outlier patches that were too far from most other patches. then, using the k-means++ algorithm  <cit>  we divided the patches to k =  <dig> clusters. the algorithm associates each cluster with a representative centroid. the set of  <dig> centroids constitutes a library of surface patches . given this library, any surface patch may be associated with the closest library element, and the surface of any protein structure may be described by a list of the associated library elements.

below, we compare the library-compatibility of the training-set proteins to the compatibilities of the test-set native structures and their decoys. we further compare the compatibilities of the decoys themselves, attempting to correlate it with the decoy quality.

distribution of native and decoy patch distances from cluster centroids
given a library of surface patches, any surface patch may be marked with its distance to the closest library element . the essence of the k-means algorithm is optimization of the average dcle within the clusters. thus, one may expect a low average of dcle values for training set patches and higher values for unrelated patches. figure  <dig> compares the distribution of training set dcle values with six test set distributions: that of the native structures and those of the first, most confident, models submitted by five state-of-the-art casp <dig> structure prediction servers. the dcle distribution of patches extracted from native test set structures is almost indistinguishable from the training set distribution, which indicates that the library is not over-fitted. on the other hand, the dcle distributions of the decoy patches, are significantly wider , with larger averages. this difference is large enough to distinguish native structures from a set of five decoy structures in 68% of the test set proteins . the random expectation is 1/ <dig>  i.e.,  <dig> % .

a best fitting structure to the patch library is ranked first

b the random expected value is  <dig> %

while compatibility with the surface patch library discriminates between native structures and decoys, it provides a weaker clue regarding the quality of the decoys themselves. the best decoys , are only slightly enriched within the most compatible decoys , probably because on average the decoys are more similar to one another than to the native structure. decoy quality assessment by gdt_ts resulted in similar results .

a best fitting model to the patch library is ranked first

b the random expected value is 20%

a best fitting model to the patch library is ranked first

b the random expected value is 20%

the relative size of clusters
cluster preference is another property that distinguishes between the patches of native and decoy structures. formally, for a set of patches q  this preference is a vector f = { f .... f }, where f is the fraction of q elements that are closest to the centroid of cluster c, and k is the number of clusters. figure  <dig> presents a cumulative distribution of Δi = | f- f|, per each data set q, where q <dig> is the set of training patches. the Δ values of the test set native structures are significantly lower than those of the decoys , indicating that the native structure preferences are far more similar to those of the training set than the preferences of the decoys. curiously, not only do the native structures differ significantly from the decoys, the server structures differ considerably among themselves.

discussion and 
CONCLUSIONS
this work presents a new library of surface patches analogous to the fragment libraries that had a considerable impact on computational structural biology over the last twenty years  <cit> . here, to demonstrate the significance of our library, we use it to compare patches taken from native structures and from decoys generated by state-of-the-art protein structure prediction servers. our results show that the clusters are meaningful, and capture genuine aspects of native protein surfaces. specifically, patches of decoys generated by servers are significantly different from patches of native proteins. furthermore, this difference has a predictive power allowing us to identify native protein structures within a set of server models.

this phenomenon can be only partially attributed to the qualities of the models as measured by the standard rmsd and gdt_ts scores. patch-derived measures  are not correlated with rmsd or gdt_ts , good models  are as prone to non-native surface patches as bad ones. thus, we cannot use it to reliably rank decoys. on the other hand, we hope that our library will shed light on inherent limitations of the current modeling techniques. such limitations in the representation of surfaces may be overlooked by the current model assessment procedures. however, they may drastically reduce the applicability of models for real life problems that often involve surface interactions. the characterization of these discrepancies between model surfaces and the surfaces of native structures is an obvious direction to continue this study. we hope that it would lead to some insight about the limitations of current modeling procedures and eventually to better model building techniques. a few other future applications are listed below.

our approach to surface patch sampling requires quite a few parameters, such as the patch radius and the number of clusters. due to the exploratory nature of the current study, we have decided to avoid a time consuming systematic search for the optimal values of these parameters. some of them were assigned arbitrary values, and for others we sparsely sampled a wide range of values . although some values generated better results than others, the results were qualitatively similar, suggesting that the approach presented here is stable and viable.

protein structures are extremely complex entities and no single perspective exposes all their properties. in the past, new protein representations  opened the way to diverse lines of study. one may speculate a similar trend here. possible directions include functional inference from patch content, evolutionary conservation, and diversification of patch content and graphical representation of protein surfaces with patches as nodes and patch overlap as edges. the latter suggests new directions for structure-based comparison, search, and classification.

