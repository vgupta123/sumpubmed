BACKGROUND
vj recombinations. vj recombinations in lymphocytes are essential for immunological diversity because they influence the production of antibodies and antigen receptors  <cit> . vdj recombinations occur in b-cell heavy chains  and t-cell β and δ chains , whereas vj recombinations occur in b-cell light chains κ  and λ , and t-cell α and γ chains .

the total repertoire of immunoglobulin  and t-cell receptor  molecules is estimated to include nearly  <dig> molecules, resulting from combinatorics of vj recombinations, somatic mutations, deletions at junction sites, and the addition of n-diversity regions between the rearranged genes  <cit>  . a study found at least one million recombinations among the t cells in a single blood sample from one patient  <cit> .figure  <dig> 
an vj recombination in a lymphocyte derives from two  germline v, , and j genes that may have been truncated or mutated. the n-diversity regions correspond to random nucleotides inserted between the rearranged genes. typical v genes are between  <dig> and  <dig> bp, d genes between  <dig> and  <dig> bp, and j genes between  <dig> and  <dig> bp.



acute lymphoblastic leukemia . acute lymphoblastic leukemia is a lymphoid malignancy mainly affecting children. in more than 90% of cases, a recombined ig or tr junction fingerprint of the blastic cells can be identified easily at diagnosis. this clonality marker is used during patient follow-up to quantify the minimal residual disease  <cit> .

the survival rate of all patients has improved in recent decades thanks to its accurate diagnosis and better therapeutic stratification according to prognostic factors. these prognostic factors can be determined at the time of diagnosis, but also throughout the follow-up period when the minimal residual disease is monitored after therapy. monitoring requires the analysis of both lymphoid cells  and normal lymphocytes in the peripheral blood, and these cells are counted according to their vj recombinations. for better follow-up efficacy, clonal recombinations must be detected at lower concentrations than are possible with current techniques . more importantly, current techniques are not adapted to follow populations of various clones  <cit> . consequently, they are unable to detect a relapse attributable to a clone other than the one identified at diagnosis.

software for vj recombination analysis. the international immunogenetics information system  has developed several tools for the in-depth analysis of vj recombinations . many software focuses on vj segmentation, identifying the v, d, and j regions in a sequence. the available vj segmenters perform sequence alignments against full germline databases , possibly with some alignment heuristic , models such as hidden markov models  , or maximum-likelihood-based techniques . a short benchmark of some of these tools has been published  <cit> , but there is the need for more complete and independent evaluation.

vj analysis of high-throughput sequencing data. since  <dig>  several studies have investigated vj repertoires with high-throughput sequencing, in animals  and humans, to explore repertoire diversity  <cit>  or in leukemia patients at follow-up .

several of those studies used  <dig> pyrosequencers, which produce long reads but with a lower throughput than some other sequencers. recently, the study  <cit>  estimated clonal diversity with a pipeline involving imgt/highv-quest  <cit> , gathering into a “imgt clonotype ” sequences following a unique vj rearrangement and a unique junction sequence.

studies that have taken advantage of the higher throughputs available with some illumina sequencers, such as  <cit> , had to deal with incomplete short reads that did not contain the whole recombination. several short reads had to be assembled to obtain longer reads covering the whole recombination, requiring that the reads were sufficiently redundant. one recent study that used illumina sequencing  <cit>  focused on leukemia follow-up on the human immunoglobulin heavy chain. the study  <cit>  accommodated the short reads by sequencing  <dig> bp from j to v and then  <dig> bp inside the v region. it is unclear whether such a strategy can be extended to all igs or trs. moreover, these researchers did not provide any software. wu et al focused on t cells to assess the minimal residual disease in leukemia patients, using an illumina hi-seq  <cit> .

advances in high-throughput sequencing will allow the detection of clones at lower concentrations than is possible with conventional techniques in the study of vj repertoires. more importantly, it will allow multiclone follow-up and the detection of emerging subclones at diagnostic concentrations far below that of the main clone identified at diagnosis, as well as full repertoire analysis . however, these advances in “repertoire sequencing”  make the development of algorithms and software that can accommodate gigabytes of data imperative  <cit> . the need for dedicated software is all the more necessary because standard hts read mapping tools are useless in this context. they cannot deal with reads containing recombinations, somatic mutations, or large insertions, and therefore a large amount of data — the most useful! — is lost. finally, the results expected of such an analysis are not the raw vj segmentations of millions of reads; these sequences must be clustered for clone quantification. again, generic clustering tools cannot be used, because sequences with very small differences can be derived from different clones, especially if these differences occur in n-diversity regions.

a solution is to cluster sequences taking advantage of the vj segmentation. on immunoglobulin heavy chains, chen et al proposed a clustering based on the results of ihmmune-align, implemented in the clonalrelate software  <cit> . the clustering is based on a levenshtein distance between cdr <dig> sequences that further takes into account the vj assignation produced by ihmmune-align. the complete method has a quadratic time complexity in the input size. in another study, laserson et al followed the dynamics of the immune response after vaccination, by partitioning the reads on the vj recombinations , and by using a sequence-based clustering  <cit> .

our contribution. the tools cited above were primarily designed to study a few vj sequences, and some of them take several hours to process millions of reads. we argue that full vj segmentation on these quantities of reads is unnecessary, and that a better strategy for clonality studies is to first cluster the reads derived from the same clone before the time-consuming vj segmentation.

therefore, we propose a two-stage strategy. we first use an ultra-fast window prediction, where a heuristic analysis outputs a window overlapping the third complementarity-determining region  with the vj junction. we then produce a clustering of the clones, based on the similarity of their windows, and then compute a representative sequence for each clone. this sequence can be further processed, possibly with existing analysis software, to obtain its full vj segmentation and other noteworthy information.

this strategy is implemented in an open-source software called vidjil. not computing the complete segmentation on each read allows huge time gains. vidjil processes datasets with  <dig>  reads in less than  <dig> minute on a laptop computer, including the de novo quantification of all the main clones. we also show that the predicted windows are specific enough for individual vj recombinations to be safely clustered. they ensure a high-quality multiclonal analysis: we provide evidence for this quality on tr γ chains. we further test simulated data with additional mutations. indeed, extracting such windows corresponds to what is done with conventional pcr primers specifically designed for one recombination. the method is independent of the number of reads, but the more reads that are sequenced, the lower the detection threshold will be.

note also that the read length from a high-throughput sequencer with sufficient throughput for studying vj diversity does not always cover the full vj rearrangement . this problem might be circumvented by randomly fragmenting full-length dna segments. our method allows us to analyze randomly fragmented pcr products by focusing on windows rather than on the full read length.

methods
dataset preparation and sequencing
bone-marrow samples taken from a patient at diagnosis and after treatment were obtained from the tissue bank “tumorothèque du centre de référence régional en cancérologie de lille ” which certified cell cryopreservation quality. approval for this study was obtained from the institutional review board of chru of lille  and was in accordance with the declaration of helsinki regarding the informed consent of patients. a written informed consent was obtained from the patient.

dna extraction and pcr
we sequenced the bone-marrow samples taken from a patient with b-cell acute lymphoblastic leukemia  showing a tr γ rearrangement. the samples were taken at diagnosis and at three different points during the therapeutic follow-up: fu- <dig> , fu- <dig>  and fu- <dig> . mononuclear cells were isolated from the bone marrow with a ficoll system, and the genomic dna was extracted from the lymphoblastic cells with the qiaamp®; mini kit. dna was quantified with the nanodrop  <dig> system®;. we also constructed a dilution scale, starting with the sample taken at diagnosis and serially diluting it 10-fold five times. the pcr used was based on the biomed- <dig> guidelines  <cit> . the igh, ig κ, and tr γ and δ recombinations were explored with multiplex pcr . because the tr γ pcr vg1- <dig> was positive at diagnosis, we used the primer set {vg <dig>  vg <dig>  j1j <dig>  jp1/2} for this study .  <dig> ng of dna was used for the amplification of each target in a 96-well geneamp®; pcr system  <dig> thermocycler controlled by agarose gel electrophoresis. the pcr products ranged in size from  <dig> bp to  <dig> bp.

library preparation
the amplicons were first purified with qiagen pcr minelute. we then applied the amplicon concatenation protocol 03/ <dig> from life technologies included with the solid fragment library construction kit. we end-repaired  <dig> ng of each amplicon, and then purified them with the solid library column purification kit. the amplicons were then ligated with t <dig> ligase and purified with the solid library column purification kit. the concatenated amplicons  were then sonicated with the covaris system . the fragmented dna was then processed with the ion xpress plus gdna and amplicon library , with slight modifications. the sizeselect gel  was cut at  <dig> bp and the amplification step was performed with eight cycles. independent samples were pooled in different amounts to achieve different sensitivities and then processed with pcr on the onetouch system from life technologies. the libraries were sequenced on a ion personal genome machine  system with 200-bp kit chemistry.

primary analysis
the raw ion torrent flow was transformed to demultiplexed sequences with the torrent server from life technologies. as pcr biomed- <dig> pcr fragments were concatenated by ligation, each sequence was then split into subfragments based on the identification of a known multiplex pcr primer.

algorithm overview
to quantify the clonotype abundances starting from a set of reads, the method proceeds through the following two stages:

the ultrafast prediction of short zones called w-windows, which are regions of length w overlapping the third complementarity-determining region ; this prediction is based on substrings ;

the identification and clusterization of the clones , followed by a refined vj segmentation on a representative read inside each clone.



note that the “sequence assignment” of  <cit>  also used a step based on substrings. however, in that study, the authors eventually computed a full alignment of each gene to the corresponding germline database.

ultrafast cdr <dig> prediction
the purpose of this heuristic analysis is to extract from a read a sequence of length w, called the w-window, that overlaps the actual cdr <dig>  our goal is to center the w-window as much as possible on the junction region, predicting a window that also contains the 3’ extremity of the v region and the 5’ extremity of the j region.

this analysis is performed in two steps. the first consists of indexing the germline v and j gene databases, and the second is performed on each read and extracts the w-window using the information stored in the index. this analysis is very fast and scalable, because no alignment with germline sequences is required.

indexing step
this index is built once at runtime. it could be precomputed and loaded from disk when necessary. because the germline databases are very small , it is not difficult to recompute them, and takes only a few seconds.

the index is built on subsequences of length k, called “k-words”. every k-word from the germline genes is indexed with a specific label: either v , when the k-word is unique to the v  germline , or ambiguous when the k-word is common to both v and j germline genes. the value of k is chosen so that such ambiguous words are very rare; by default, k is between  <dig> and  <dig>  depending on the germline. for these small values of k, the index can be stored as a flat table of size 4k. therefore, the index creation runs in time o, where r is the total size of the germline database. for larger values of k, the index is stored as a hash table.

prediction step
during the second step, each read is considered separately . we start with the first k-word from the read and using the index, we retrieve the value corresponding to that k-word and to its reverse complement. we do so for each k-word in the read, determining whether the k-word is in the v germline, in the j germline, in both, or in neither of them, and on which strand.figure  <dig> 
heuristic finding a
w
-window on the forward strand from a scan of
k
-words in vj recombinations. detection on the reverse strand is done in a similar way, and detection in vdj recombinations is also based on the v and j genes. the labels v and j indicate the beginning of matching k-words in the index. . the window is correctly centered on the n region . there is one mutation , denoted by ×, far from the 3’ end of the v region. . a mutation or an error in the k rightmost base pairs from the v region leads to a small error in the w-window prediction. however, the end of the v region is predicted with an error that is less than or equal to k. because we use large values of w, parts of the v and j regions are still contained within the extracted w-window. . when there are too many errors compared with the size of the germline gene, the heuristic is unable to predict a w-window. this may happen particularly with the j gene, which is shorter than the v gene. for this to occur, mutations must be separated from each other by less than k bp. . spaced seeds improve the sensitivity of the heuristic. the spaced 10-word #####-##### leads to the recognition of k-words as soon as the mutations are separated by at least k/ <dig> bp.



at this point, we discard any reads that show an ambiguity, namely reads containing many k-words from forward and reverse strands, or reads whose k-words are on the forward strand but where vk-words appear after jk-words . to work properly, this rule requires that the v and j germline genes do not share any k-words. hence this constraints the choice of k. we must also discard reads for which we have insufficient information: reads that do not have k-words found in both the v and j germline genes .

finally, the w-window must lie between the last vk-word and the first jk-word . therefore, we extract a w-length region centered on that position. the length of the extracted region is a parameter that can be modified by the user. it is set at  <dig> by default for vj recombinations. altogether, the w-window prediction step extracts a window in a time that is proportional to the size of the read.

spaced seeds
a further optimization strategy involves using spaced k-words, which improve the sensitivity for a fixed specificity  <cit> . for example, in the spaced 10-word #####-#####, the dash corresponds to a don’t-care symbol. when extracting a subsequence of length k+1= <dig>  the middle letter is ignored to form a sequence of length k= <dig>  this spaced 10-word minimizes the prediction error in the center of the window when there is one substitution .

read clusterization using w-windows
clonal windows clusterization
the prediction step extracts one w-window per read, at most. if there is no sequencing error, all the extracted w-windows for the same clone are strictly identical . however, they may not be exactly centered on the actual vj recombination if there are some variants compared with the germline database.

the extracted w-windows are then sorted and counted. the relative abundance of each clonotype is then estimated using the number of reads with the same w-window. the most abundant clones are kept for detailed analysis.

additional clusterization
sequencing errors may lead to different w-windows that should be gathered in a unique clone . we recommend the manual inspection of the most abundant clones, because it is then possible to specify in the software pairs of similar windows that must be gathered for analysis. we also provide, as an option, automatic clustering, where two junctions are considered similar if their edit distance is bounded by some parameters.

computation of representative sequences
the previous steps identified clones as a set of reads sharing the same w-window . we then select one representative sequence per clone, and thus compute only one vj segmentation per clone. because this segmentation will be used to label all the reads of the clone, we must select the representative sequence carefully.

to do so, we start by counting all the k-mers of reads belonging to a given clone. this is done using a hash table. we call any subsequence of a read whose k-mers are present above a relative threshold  a representative region. reads are considered one by one, and we output the longest representative region among all the clone’s reads. obviously, this representative region must overlap the w-window that has been formerly detected. this computation is linear time in the number of nucleotides in the sequences belonging to that clone. therefore the bigger the clone, the more time it will take. computing this region further allows us to check the consistency of the reads assigned to the same clone.

refined vj segmentation
the representative sequence identified for each clone can be segmented into vj regions using any available segmenter . to give a first hint on the vj segmentation, we also implemented a basic segmenter using dynamic programming against a database of germline genes. this segmentation runs, for each representative sequence of length ℓ, in o time, where r is the size of the database of the germline gene. this segmentation is not at the core of the read clusterization and is provided only for convenience.

time complexity
the prediction of junctions is in linear time, so the whole algorithm is very scalable because there are often very few w-windows of interest that are left to the most time consuming steps – the computation of the representative sequence and the full vj segmentation.

software
the algorithms were implemented in c++ in an open-source software called vidjil. the software can be downloaded from http://www.vidjil.org. the software takes as the input a set of reads and a database of germline genes. in all our experiments, we used the imgt/gene-db database  <cit>  downloaded from http://www.imgt.org.

vidjil outputs the list of w-windows detected and the most frequent clones. as explained above, the detection of w-windows is based on spaced k-mers extracted with seeds. by default the seed used for tr γ germline is #####-##### of weight  <dig>  on this germline, there is no spaced k-word with this seed common to both v and j genes: there is thus very few chances to falsely discard reads. depending on the receptor, there can be more overlap between k-mers of v and j genes. in this case, or when there are more mutations or errors in the dataset, longer seeds should be used to improve the ratio of w-windows detected. by default, vidjil uses a seed of weight  <dig> for tr β and igh and a seed of weight  <dig> for tr α. the user can also specify his own seed, or any value of k for a contiguous seed.

vidjil will output the  <dig> most abundant clones with their representative sequence and their refined vj segmentation. it will not process clones with less than  <dig> reads. these parameters can be changed by the user. the user can also follow other clones, even if they are not among the most frequent ones, by specifying their w-window.

the user can define the maximum number of substitutions, indels, and homopolymer errors that can be accepted between two similar windows. by default, we tolerate none. these parameters should be set depending on the sequencer used and should be very conservative to prevent any false clustering of different clones.
running times of the different programs on a test set of  <dig>  reads


vidjil  and igblast  were launched on a laptop with a  <dig> ghz processor  and  <dig> gb of memory. imgt/highv-quest  was launched on the imgt web server. the web server of imgt/highv-quest is limited to  <dig>  sequences.



RESULTS
dataset
the bone-marrow samples were obtained from a patient with b-all showing a tr γ rearrangement. the samples were taken at diagnosis  and at three follow-up points . a standard curve was established from serial dilutions of the diagnosis samples in a peripheral blood lymphocyte  solution mixed from five healthy donors, producing samples scale- 10- <dig>  scale- 10- <dig>  scale- 10- <dig>  and scale- 10- <dig> 

those eight samples were sequenced as described in methods and can be accessed at http://www.vidjil.org/data. in additional file 1: table s <dig>  we provide statistics on these samples. we recall that on the tr γ chain, recombinations are in the vj form. the number of reads differed for each dataset because the same coverage was not required for each of them for validation purpose. for instance, we need better coverage for the 10- <dig> dilution than for the diagnosis sample, where the majority of the sequences are expected to correspond to one clone. the dna fragments were previously concatenated and randomly fragmented. note that the goal of this sequencing is to assess the speed and robustness of vidjil and not to achieve the lowest possible detection threshold, which depends on the number of reads and the sequencing protocol used.

evaluation of the window prediction
the window prediction phase is a heuristic that does not rely on dynamic programming and may therefore be less accurate than a more time-consuming algorithm. we assess the accuracy of the vidjil heuristic on our datasets by comparing the location of the detected w-window with the ones predicted by imgt/highv-quest  <cit>  and igblast  <cit> . our goal is not to assess the imgt/highv-quest and igblast software, but to verify that the vidjil’s heuristic is sufficiently accurate. even if clonalrelate  <cit>  is of interest we could not compare to it since it builds upon results provided by ihmmunealign, that is specifically dedicated to immunoglobulin heavy chain analysis.

we selected two datasets for this comparison: diag, which contains high redundancy and a lower number of reads; and scale- 10- <dig>  which is supposed to have much greater diversity.

igblast  was launched in its stand-alone version. we launched igblast using the tr γ germline database downloaded from imgt/gene-db  <cit> . the other parameters were left at the default settings. only the “top segmentation” returned by igblast was kept, consisting of the top v and j gene matches. imgt/highv-quest was launched by specifying the organism  and the locus ; by specifying that the sequences originate from a single individual; and by allowing indels. the other parameters were left at the default settings.

what was compared among these three tools was the position of the center of the window. imgt/highv-quest and igblast do not give this position, but it can be computed easily from the 3’ position of the v region and the 5’ position of the j region, which are given.figure  <dig> 
comparison of the predictions of the center of the window made with igblast, imgt/highv-quest, and the heuristic of vidjil, on the  <dig>  first reads of a diagnosis sample  of a patient with all and on a dilution . for each pair of programs, the number shows the distance between the predictions of the center of the window overlapping the cdr <dig>  these values show that vidjil successfully predicted the center of the windows. note that the two other tools provided much more information, with alignments to the germline databases, and in the case of imgt/highv-quest, further analysis of the junction sequence.



the results for the actually sequenced dataset  show that the center of the window predicted by vidjil differed from those predicted by imgt/highv-quest and igblast by less than  <dig> positions in more than 97% of cases, and by less than  <dig> positions in about 99% of cases. vidjil shows a greater concordance with igblast than with imgt/highv-quest. the reason may be that imgt/highv-quest is conceived for longer sequences. our dataset may contain short sequences that vidjil is also able to process.

as b cells are subject to somatic hypermutations, it is more difficult to segment their sequences. we can assess the robustness of the method against mutations by adding substitutions to our sequenced dataset. in the literature, estimates of the rate of sequence substitutions arising from somatic hypermutation are around 2%  <cit> . arnaout et al empirically estimated hypermutations in humans to be about 5% to 8%  <cit> . we generated datasets with 2%, 4%, 6% and 9% random substitutions along each read. those datasets can be accessed at http://www.vidjil.org/data. note that those substitutions are added to the errors that may have been produced by the sequencers. the results for the mutated datasets  show that on reads with 6% additional mutations, the center of the window predicted by vidjil differed from that predicted by the other programs by less than  <dig> positions in about  <dig> % of the cases. vidjil shows again a greater concordance with igblast than with imgt/highv-quest.
comparison of the predictions of the center of the window overlapping the cdr <dig> made with igblast, imgt/highv-quest, and the heuristic of vidjil, on the  <dig>  first reads on a dilution . additional mutations  are added by simulation. even with 6% mutations, the heuristic of vidjil locates almost all the junction centers within  <dig> bp of the center found by other programs .



for vj recombinations, such as in tr γ, a positional inaccuracy of up to  <dig> bp is not a problem because we are using  <dig> bp w-windows. the predicted window will still contain the n-diversity region, allowing the correct identification of the clones. however, a window lying only in a v region or a j region would be problematic. in that case, the window would be overrepresented and would lead to the detection of false clones. for vdj recombinations, vidjil predicts  <dig> bp windows to ensure that the complete n-diversity regions are included in the detected w-window.

therefore, the window prediction accuracy of vidjil is such that just a small fraction of sequences may have a wrong window. it is noteworthy that when imgt/highv-quest and igblast are compared, the difference between them is similar to the difference between them and the prediction heuristic of vidjil.

evaluation of vidjil sensitivity
note that the detection threshold depends directly on the number of reads actually sequenced. a recent study, using a higher-throughput sequencer, reported a detection threshold of 10- <dig> <cit> . our goal is not to achieve the lowest possible threshold, but to show that vidjil can correctly estimate the relative concentrations of the clones.
evolution of the main tr
γ
clones from a patient with all, starting at diagnosis and diluted to decreasing concentrations of 10
-2
, 10
-3
, 10
-4
, and 10
-5
; and when the patient is followed at three time points . clones # <dig> and # <dig> are the two most abundant clones detected at diagnosis, and the other clones are among the five most abundant clones, for at least one sample. clones d- <dig> to d- <dig> are found in at least two of the dilutions, but are never found in any sample that is not a dilution. the black and gray boxes below each point indicate the maximum resolution, depending on the number of reads of each sample . a sequencing with more reads will improve these thresholds.



clones at diagnosis. table  <dig> details the two most abundant clones at diagnosis . the most abundant clone, labeled # <dig>  is the one with recombination trgv5* <dig> -5/cc/ <dig> trgj1* <dig>  this clone is exactly the one that was followed in this patient with standard techniques, and was observed by fluorescent multiplex pcr analysis . as expected, this clone is most abundant.table  <dig> 
two most abundant tr
γ
clones detected in  <dig>  sequences from diagnosis sample  of a patient with all


in this sample,  <dig>  <dig> reads have been segmented by vidjil,  <dig>  <dig> by imgt/highv-quest  and  <dig>  <dig> by igblast. for each method, the number of associated reads is given. the vj segmentation proposed by vidjil was manually checked against the analysis provided by imgt/v-quest and igblast. clone # <dig> has the recombination trgv5* <dig> -5/cc/ <dig> trgj1* <dig>  which means that the v gene is trgv5* <dig>  according to the imgt nomenclature, and its last five nucleotides have been deleted. the n-diversity region is composed of two inserted cs, and the j gene is trgj1* <dig>  which has no deletion.
fluorescent pcr of the diagnosis sample  of a patient with all.  a 208-bp peak is detected with multiplex pcr of tr γ vg1- <dig>  corresponding to the main # <dig> clone trgv5* <dig> -5/cc/ <dig> trgj1* <dig>   a vg10-jp1/2-specific pcr shows a  <dig> bp peak, similar in size to clone # <dig>  detected by vidjil on the high-throughput sequencing data.



the second most abundant clone , at approximately  <dig> %, was identified as trgv10* <dig> -5/agac/- <dig> trgjp1* <dig>  it was not initially detected at diagnosis with standard procedures, and was consequently not followed in this patient. a further fluorescent simplex pcr analysis with specific primers showed several peaks, including a major peak at  <dig> bp , similar in size to that of clone # <dig> detected with vidjil .

the table  <dig> also shows that the predictions made by vidjil are coherent with the ones made by imgt/highv-quest or igblast. note that vidjil process slightly less sequences that igblast: the main reason is that igblast can provide j gene affectation with very few nucleotides in the j gene, while vidjil needs at least k conserved nucleotides. concerning quantification estimation, imgt/highv-quest and igblast do not provide the raw result of clone quantification but it can be easily computed by gathering sequences with the same junction. we emphasize on the fact that imgt/highv-quest works better when processing longer sequences . the two main clones are found at the same level by the three softwares even if the number of segmented sequences differ among them. vidjil’s quick heuristic does not prevent it from correctly clustering reads coming from a same clone.

dilution clones. the dilution samples  are composed from 99% to  <dig> % of the same pbl solution. it is thus meaningful that in these samples, the concentration ratios of the most abundant clones remain remarkably stable throughout the dilutions. these clones should be specific to the pbl, and not to the patient.

generally, vidjil can distinguish clones that are different with great accuracy by focusing on the w-windows. when there is no further window clusterization, the reads reported to belong to the same clone share exactly the same w-window. however, some clones were found at similar concentration ratios in both the pbl and patient samples, such as clone # <dig>  identified as trgv10* <dig> -4// <dig> trgjp1* <dig>  this clone could be either what was called a “public sequence” by  <cit> , that is a recombination being shared by different people or a random recombination. there may be also some pcr artifacts. note that tr γ does not show great diversity  and this clone has no inserted n-diversity region.

follow-up points. the concentration of clone # <dig>  measured with standard procedures , was 94% for diag,  <dig> % for fu- <dig>   <dig> % for fu- <dig>  and ≤  <dig> % for fu- <dig>  the ratios of the rearranged tr γ sequences show a similar evolution, even if there is some bias, which could be corrected with a better calibration of the wet-lab protocol.

discussion
high-throughput sequencers will eventually raise the detection threshold, as already reported by several studies. they will also provide full insight into the whole population of lymphocytes, with multiclonal analyses of such populations. we believe that these analyses will bring a better understanding of lymphoid malignancies, and more generally, of immunology. however, they require specifically adapted mapping and clustering tools.

we have proposed new algorithms designed for data from high-throughput sequencers. we have not focused on the analysis of individual reads, but have instead based the method on the ultrafast detection of windows containing the actual recombination junctions. as a consequence, the vidjil program can process large datasets in a few minutes, outperforming other methods that are more adapted to the full analysis of individual sequences. the method applies to any number of reads: the more reads that are sequenced, the lower the detection threshold will be.

our window definition, used to define a clone, differs from what can be found elsewhere in the literature  <cit>  in that we do not rely on the vj gene names and we focus on the dna sequence at the junction  without allowing any mismatch by default . hence we think that our definition appears to be more stringent. our belief is that we should avoid putting together sequences that should not be together. on the other hand our definition may split sequences that should be together but if one wants to allow more errors the sequences can be further clustered.

our results for sequenced and artificially mutated data show that the window prediction, clusterization, and representative sequence selection are accurate enough for clone tracking. this was confirmed both for raw tr γ data and for mutated data, showing that the method can gather clones with a dissimilarity of up to 6%, arising from random mutations mimicking hypermutations. we tested vidjil on tr γ which is less diverse than other loci. hence if vidjil had a lack of reliability, we would have been able to identify it. on the contrary we observed that the results are consistent both with conventional methods and with software focusing on a more in-depth analysis.

as the vidjil heuristic is fast and reliable, it could be used as a pre-processing for other programs. indeed the purpose of vidjil is not to provide detailed information on a given sequence. several software are designed for that purpose: for example, one may launch imgt/v-quest, igblast, or, for igh clones, ihmmune-align for an in-depth analysis of the clones identified by vidjil. starting from vidjil strict definition of clones, one could also use software such as clonalrelate  <cit>  to further gather these clones and to study their relationship.

note that all the ratios were computed by taking the number of segmented reads as a reference, which ideally corresponds to the number of rearranged t or b cells in the studied system. this differs from the proportion of the total cells used in current protocols, which also include other mononucleic cells, such as precursor cells. the inclusion of a standard of known concentration could be used to calibrate these different ratios.

CONCLUSIONS
when used to monitor minimal residual disease, vidjil can successfully follow the variations in the main clone. it also identifies other stable clones that could be investigated to determine whether they are pathological or physiological. given samples taken at different times, the method enables to track the evolution of a population of clones and to check the emergence of new clones. the method could also be used for other immunological studies to quantify more precisely the adaptive immune response and the long-term immunological memory.

electronic supplementary material
additional file 1: additional information regarding sequencing data. 

 competing interests

the authors declare that they have no competing interests.

authors’ contributions

mg, ms, ac, ng, cp and mf conceived the study. ac, ng, cr and cp selected the patients and extracted the samples. cv, sq and mf designed the sequencing protocol and performed the sequencing. mg and ms designed the bioinformatics algorithm. mg, ms and md implemented the algorithm. mg, ms, ac, ng, cp and mf analyzed the data. mg and ms drafted the paper. all authors corrected the manuscript and approved the final manuscript.

this research was supported by siric oncolille  and by région nord-pas-de-calais . the authors also thank Éric delabesse  for his fruitful discussions.
