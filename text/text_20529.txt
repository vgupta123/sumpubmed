BACKGROUND
the breadth of knowledge of microbial diversity continues to rapidly expand as 16s rrna genes are sequenced from environmental samples and comparisons to existing data are drawn. culture-independent methods have enabled the application of a molecular-phylogenetic approach to discover that the environmental microbes constitute the majority of evolutionary diversity  <cit> . phylogenetic studies have further recognized that over 99% of all prokaryotes are uncultivated  <cit> . therefore, in attempts to continue to explore the evolution and composition of microbial communities it is now standard practice to sequence the 16s rrna gene  <cit> .

these dna sequences are being added to public databases rapidly since they have become the most cost effective, if not the only method available to identify and quantify the uncultivated microbes. deriving meaningful knowledge from the inundation of sequences, then, necessitates methods to judge which sequences are of particular interest to the study. a common method in screening dna sequences derived in a study is to assign each sequence to a taxonomic group by comparing it to the closest relative in publically available databases, such as greengene’s simrank  <cit>  and ncbi’s blastn  <cit> . although this method is rapid, it has been recognized that neither the top ranking hits nor the most similar sequences are always the most closely related phylotype  <cit> . 

phylotypes may also be determined to be closely related by examining the network of sequence relationships based on their similarities  <cit> . a network is established using the following principle: if sequences a, b, and c each return sequence a as a blastn hit , sequence a is considered to be “associated” with the three sequences. in the context of screening the sequences derived from environmental samples, analyzing the associations between the blastn hits of a collection will unveil sequences of great phylogenetic interest despite the possibility of having scored low in the blastn ranking system  <cit> . recognizing these associations before aligning large collections of sequences reduces both the computational expense and the obfuscation that many sequences will inherently contribute to its analysis.

here we introduce a web application, phylometrics, which automates many key tasks for dna sequence analysis in a high-throughput method. instead of single blastn inquiries, phylometrics automatically analyzes multiple blastn results, cross-comparing each blastn result against others within seconds. a graphical tool for mining these sequence relationships is also provided and includes them in a multiple sequence alignment process according to user-defined parameters. this approach can discover sequences of great interest for further phylogenetic examination which would otherwise be missed without significant human involvement. finally, the application generates phylogenetic trees according to numerous methods of tree inference which may be selected and configured using a wizard-style form. as the results are being generated, the user may continue to interact and queue additional analyses without interrupting the ongoing processes.

phylometrics offers a number of key advantages: simplicity in the user interface, powerful analytics to examine sequence relationships, the ability to install the application locally and the ability to queue batch jobs. the code is also released as open source allowing it to be extended and integrated into workflows as desired.  finally, due to the architectural decision to make the application driven by job queues , cloud computing services may be integrated and directed by the queue to perform the more cpu-intensive processes such as multiple sequence alignments.

implementation
design aims
many popular tools available for sequence analysis  require command-line syntax and cryptic parameter settings that are foreign to biologists without programming experience. we identified four design aims for the system:

 <dig>  implement a simple, widely usable interface that does not involve user programming, by implementing a wizard-styled approach.

 <dig>  provide rich, interactive visual representations of the data generated by the pipeline.

 <dig>  allow for the import of sequences in multiple formats and the export of data at every stage of the pipeline so as to give the user the flexibility to use alternative software solutions for those steps. furthermore, the system must maintain a record of the parameters the user set for each step in the pipeline.

 <dig>  allow batch jobs to be queued and/or running while being able to simultaneously create new jobs or able to access completed reports.

these goals were met by architecting phylometrics with three main components: the web browser, a script-processing engine running on a web server and a database server . a flash-enabled web browser, without any other plugin requirements, acts as the user interface and offers the unique advantage of not requiring a high-performance device and also allows the system to be accessed remotely. the back end is coded in php using a model-view-controller object-oriented programming paradigm, making it an extendable application. phylometrics uses the open source mysql database server to store sequence collections and reports. 

user interface and pipeline wizard
a common web browser serves as the user interface. it is advantageous due to the low learning curve and accessibility from a number of devices. it also incorporates simple yet useful features such as printing and searching from within the browser experience. 

phylometrics implements a wizard-style pipeline which prompts the user for parameters necessitated at each pipeline stage . the first step in the process is creating a new “collection” by importing sequences for analysis. on importing, a sequence record is created for each sequence and associated with a collection record which is then pushed through the pipeline.

the second step of the wizard is “blast setup.” the software queries ncbi’s live database by default; this may be modified, however, to search a local blastn database instead. after entering blastn parameter options, the user has the ability to “generate a screening report,” or to continue with the pipeline. both processes are queued and allow the user to continue to use the system, while the option to generate the screening report will halt the pipeline at this second step before continuing the progression through the pipeline. a screening report will be generated irrespective of the choice the user makes at this point, allowing one to revisit this report to create any number of alignments and trees based on their filters.

the following step is “alignment” with the options to select parameters based on clustalw  <cit> , a multiple sequence alignment program. once the screening report is generated, users may choose to create alignments using various filters which set thresholds, gate and also specifically toggle individual sequences. in fact, one can use the same dataset to create many alignments using different parameters and compare the results in the generated trees.

the final step of the wizard is “build tree”, where one can choose between various methods of tree inferences based on the phylip  <cit>  and phyml <cit>  software packages. the newick file format outputs of these packages are then rendered into images using treevector  <cit> . similar to the many-to-one relationship of alignments to collections, many trees can be generated from one alignment. 

interactive visual analytics
an interactive analytical tool developed in adobe flex and utilizing the flare library is used to represent sequence relationship networks . the user is prompted to select a number of filtering criteria from which a report is generated, including the minimum number of associations a blastn hit must have with individual supplied sequences. the report itself is interactive; scrolling over a sequence name with the mouse will reveal the sequence accession identification and description. clicking a sequence name will highlight the relationship associations with other sequences based on the results obtained in blastn reports.

data usability
sequences are initially imported by the user into a “collection” from the wizard in fasta, genbank or raw format. on wizard completion, the user is be able to download the blastn report in xml format, the multiple sequence alignments in phylip format, and the tree inferences in newick, svg and png file formats. the user may also click on the generated results to review the parameters that were used to generate the reports within the wizard process.

asynchronous job queues
the pipeline processing and job queues are managed by perl scripts which utilize the bioperl library  <cit> . these scripts are decoupled from the system in such a way so as to allow them to be run on a completely separate hardware platform, receiving job instructions from the database layer. this setup allows the user to continue to access and analyze generated reports while jobs are processing, in addition to being able to queue an unlimited number of jobs. as the tasks progress through the pipeline an unobtrusive panel displays the progress of each submitted job. furthermore, this setup can be exploited to process jobs which are computationally expensive on other servers simultaneously or even utilize cloud computing services such as amazon ec <dig> 

RESULTS
we have compared the features of phylometrics to a number of tools that are commonly used for small-subunit rna analyses that offer differing advantages . many phylogenetic tools  utilize standard programs such as clustalw and phyml to perform common tasks. phylometrics utilizes these and other standard packages , and therefore does not differ from other pipelines or packages in these core functions. thus, the performance on identical hardware will be similar. for instance, a representative collection of  <dig> sequences pushed through the full pipeline with default settings required  <dig>  minutes on a windows server with a modest  <dig>  ghz single-core processor and 1gb ram. phylometrics differentiates itself from these tools by providing a novel method for discovering sequences that are ranked low yet may be phylogenetically significant in a high-throughput manner. 

phylometrics makes it possible to explore sequence relationships within a collection in order to quickly build phylogenetically meaningful trees. using a visual and interactive interface, sequences that may provide key insights into functional or evolutionary relatedness are identified much faster than the current standard manual approach. furthermore, the identification of homologous sequences previous to multiple sequence alignments and tree building significantly reduces computational costs and time by minimizing the inclusion of unrelated sequences.

once a dataset has been refined and pertinent sequences have been identified, phylometrics enables one to explore the differences between alignments and each method of tree inference to determine which set of methods and parameters may suit the data best. the parameters used in each of the processes are also permanently stored, allowing one to replicate the results manually. 

results can be exported from any stage in the pipeline for personal collection databases or to be further analyzed in other popular sequence analysis packages, such as arb  <cit> . the formats of the output include: phylip for alignments, newick for tree inferences and jpg and svg formats for tree visualizations. the multiple sequence alignments are especially useful for export, as manually aligning sequences may be necessary to improve the quality of the resulting tree. the visual representations are also printable from within the flash movie by accessing the menu with a right-click.

CONCLUSIONS
phylometrics offers an automated, high-throughput pipeline for phylogenetic inferences in a simple wizard-style web interface, requiring basic computer skills and no user programming experience. it incorporates novel analytical tools to mine sequence collections for biologically significant associations generating trees that provide insights into their respective functional or evolutionary implications.

availability and requirements
project name: phylometrics

project home page: http://www.phylometrics.com

operating system: platform independent

programming language: php, perl, javascript

license: gpl

authors' contributions
sas developed the application, and drafted the manuscript. cco contributed to the conception of the project and manuscript.

competing interests
the authors declare that they have no competing interests.

