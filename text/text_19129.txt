BACKGROUND
most phylogenetic inference approaches are based on an alignment of homologous sequences . the alignment of sequences aims at highlighting the substitutions that have occurred during the evolutionary process from their common ancestral sequence. the quality of a multiple sequence alignment can have a strong impact on the accuracy of the inferred phylogenetic tree, whatever the inference criterion used  <cit> . in spite of constant improvements of the multiple sequence alignment heuristics  <cit> , an alignment can contain regions  where homology is ambiguous. moreover, too divergent regions  may induce a mutational saturation effect, which is an important source of bias for many phylogenetic reconstruction methods. in order to minimize the bias introduced by these problematic regions, a frequent approach is to detect and remove them from the multiple sequence alignment prior to phylogenetic analysis . indeed, it has been observed that the removal of such regions allows more accurate trees to be inferred  <cit> .

a current trend consists in reconstructing phylogenetic trees by using a large number of datasets of aligned sequences from many complete genomes. phylogenetic trees are then reconstructed from these datasets in many contexts, such as the construction of gene tree databases  <cit> , the inference of species trees based on a core-gene set  <cit>  or the estimation of amino acid substitution matrices  <cit> . these different phylogenetic explorations are often based on automated processes , requiring a software solution for each step of these computer pipelines. given the importance of dataset quality, the use of practical and accurate software dedicated to alignment trimming task has become a real need.

in this paper, we present a novel software, named bmge , that identifies regions inside multiple sequence alignments that are suited for phylogenetic inference. bmge computes a score for each character , mainly determined by the entropy induced by the proportion of character states. to estimate realistic scores that take into account biologically relevant substitution processes , bmge weights the entropy estimation with standard substitution matrices . averaging score values across the characters of the multiple sequence alignment allows identifying conserved  and highly variable/uncertain regions . by removing such high entropy regions, bmge returns trimmed datasets that allow the reconstruction of more accurate phylogenetic trees than the initial alignment, as shown by simulation studies.

in addition, bmge also provides simple solutions to alleviate systematic artefacts caused by compositional heterogeneity. most probabilistic phylogenetic inference methods make the assumption  that the studied sequences arose from a common ancestral sequence following a stationary evolutionary process, i.e. the marginal probabilities of the character states remained constant over all sequences . consequently, when phylogenetic trees are inferred from sequences with heterogeneous composition of character states, the violation of the stationary assumption may cause systematic errors  <cit> . bmge is therefore able to perform ry-coding from a dna sequence alignment  <cit> , and to convert amino acid sequences into their corresponding degenerated codons according to the universal genetic code. these two recoding strategies may prove useful to minimize some biases when dealing with datasets with known heterogeneous composition across sequences. as these two recoding approaches use only the standard one-letter nucleotide alphabet  <cit>  , the resulting datasets can be given to all phylogeny inference programs, in contrast to alternative recoding techniques based on non-standard alphabet cardinality such as the "dayhoff classes" 6-residue alphabet  <cit>  . moreover, the use of degenerated codons allow fast inference of trees, in particular with maximum likelihood  methods which are faster with nucleotide sequences than with amino acid ones. bmge also implements a novel stationary-based trimming method that allows compositionally heterogeneous characters to be identified and removed. to do so, bmge uses the stuart's χ <dig> matched-pairs test of marginal symmetry  <cit>  that allows assessing the null hypothesis that two sequences are compositionally homogeneous  <cit> , and iteratively performs character removal/addition steps until the stuart's test assesses that each pair of sequences presents homogeneous composition. as shown by computer simulations with heterogeneous gc-content dna sequences, this stationary-based trimming leads to unbiased phylogenetic trees.

implementation
input/output files and sequence coding conversions
the input file for bmge is a multiple sequence alignment in fasta  format. the user must indicate whether the sequences are amino acids or dna . it is also possible to consider dna sequences as codons, which allows the multiple sequence alignment to be handled with amino acid substitution matrices. selected  regions are written in an output file in several formats . html output is also available to display selected sites as well as graphical representation of both entropy values and gap proportions.

several sequence conversion options are also available: from dna or codons to ry-coding  <cit> , and from codons to translated amino acids . bmge also allows converting an amino acid alignment into a nucleotide alignment by considering the corresponding degenerated codons . in practice, given an amino acid and its set of corresponding synonymous codons , the degenerated codon is simply obtained, for each of the three codon positions p, by considering the nucleotides corresponding to the set of possible codons at position p. for example, isoleucine  can be encoded by the three codons ata, atc and att; therefore, the degenerated codon corresponding to this set of codons is ath, knowing that the degenerated nucleotide h  represents the possible nucleotides at the third threefold degenerate position.

entropy-based character trimming
given a multiple sequence alignment of m character length, bmge computes, for each character c =  <dig> ,...,m , the frequency g of gaps, as well as the diagonal matrix ∏  where each diagonal entry is the relative frequency of each of the r possible character states . so, bmge computes the value h for each character c, which is closely related to the von neumann entropy  <cit>  and is given by the following formula  <cit> :

  h=−trace, 

where s is a similarity matrix  and μ = - <dig> is a normalizing factor so that trace  s) =  <dig>  to compute formula , bmge uses the simpler equation

  h=−∑s=1…rλslogrλs, 

where the λs parameters are the eigenvalues of the matrix μ∏s estimated via the jama package  <cit> . it should be stressed that the entropy normalization condition ∑s=1…rλs= <dig> is verified with the normalizing factor μ.

knowing that h =  <dig> indicates that character c is constant and that h is as close to  <dig> as character c is unexpectedly variable , bmge looks for conserved regions of the multiple sequence alignment by smoothing the different h values by using a sliding window of length 2w+ <dig> . for each c =  <dig>   <dig> ...,m , the smooth  value is estimated by the weighted average

  h˜=∑i=startendh∑i=startend, 

with start = max and end = min, in order to give more weight to characters with few gaps, i.e. g ≅  <dig>  after this smoothing operation, bmge defines as conserved those characters c that have  value lower than a fixed threshold . a conserved region is then defined as a set of contiguous conserved characters.

then, the multiple sequence alignment is partitioned into successive conserved  and variable  regions, these being either a single character or a set of contiguous ones. let vi be the ith non-conserved region. by definition, vi is flanked by the two conserved regions ci and ci+ <dig>  in order to distinguish variable regions due to ambiguous alignment from those due to natural variation, the average h˜ value is computed for the region ci ∪ vi∪ ci+ <dig> by formula  with parameters 'start' and 'end' set as the first character of ci and the last character of ci+ <dig>  respectively. the consecutive regions ci , vi , ci+ <dig> with less than 30% of gaps and with h˜ value lower than the fixed  <dig>  threshold are then merged into a unique conserved region. finally, bmge iteratively performs these merging operations until no more variable region vi can be merged with its two flanking ci and ci+ <dig> ones.

on the use of similarity matrix
if the similarity matrix s in formula  is the identity matrix ir , then h is closely related to the well-known shannon entropy  <cit> , given by formula  where each λs=Πss is simply the proportion of the character state s for character c. if the character c is constant, then h =  <dig>  on the other hand, if the character c is highly variable, then each of the r character states is present with a relatively high proportion ≈1/r), implying that h is close to  <dig>  its maximal value. therefore, h allows the level of variability of a character to be quantified  <cit> . unfortunately, using h with the identity matrix ir  suffers from biases. for example, when considering amino acid sequences, if a given character c <dig> is only made of the four residues i, l, m and v, each with 25% proportion, and a second character c <dig> is made of the four residues c, q, w and y, also with identical proportions, then formula  with matrix ir returns h = h = -4×  <dig>  log <dig>  <dig>  ≈  <dig> , and then indicates the same level of variability for both characters c <dig> and c <dig>  while residues in character c <dig> are much more likely to be substituted than those in character c <dig>  <cit> . in contrast, using dedicated similarity matrices s ≠ i allows relevant substitution processes to be taken into account. as suggested in  <cit> , when using the henikoff and henikoff's  <cit>  blosum <dig> target frequency matrix in formula , one obtains h ≈  <dig>  and h ≈  <dig> . therefore, the function h with appropriate similarity matrix s computes score values that allow distinguishing among expected  and ambiguous  variability.

for practical use with amino acid sequences, bmge provides the complete range of blosum target frequency matrices  in order to estimate pertinent h values depending on the level of divergence between sequences. as shown in simulation results , our entropy-based character trimming method performs better when using stringent matrices  for closely related sequences, and, reciprocally, when using more relaxed matrices  for distantly related sequences. by default, bmge uses the popular blosum <dig> matrix  <cit> .

for dna sequences, pam matrices are first computed. bmge uses a transition/transversion ratio κ  to compute the pam- <dig>  <dig> ×  <dig> matrix: the four diagonal elements are all  <dig> , and the off diagonal elements are  <dig>  κ - <dig> for transition and  <dig> - <dig> for transversion . given a prefixed integer η , bmge then computes the pam-η matrix , which is finally used by bmge as similarity matrix s in formula . in a similar way as the previously described amino acid framework, our character trimming method is more accurate when using a stringent matrix  with closely related dna sequences, and when using a relaxed matrix  with distantly related ones.

stationary-based character trimming
given two aligned sequences , one can use a r×r divergence matrix f to represent the relative proportion of each of the possible character state pairs in the pairwise comparison of these two sequences  in  <cit> ). if these two sequences have similar character state composition, then, for each character state s =  <dig>   <dig> ...,r , this sequence pair verifies the null hypothesis fs. = f.s , named the marginal homogeneity  or marginal symmetry . a not-too-low p-value returned by the stuart's χ <dig> test  <cit>  on f allows the marginal homogeneity/symmetry to be assessed; then, one can assess that two homologous sequences arise from a nonstationary evolutionary process if the stuart's test returns a p-value close to zero . this test being essentially based on numerical linear algebra operations , bmge implements it with, on the one hand, matrix operations available in the jama package  <cit> , and, on the other hand, with fast and accurate numerical algorithms for estimating χ <dig> cumulative distribution functions .

if a multiple sequence alignment seems to be compositionally heterogeneous, bmge implements a stationary-based character trimming in order to obtain a compositionally homogeneous alignment. given a multiple alignment of n sequences, for each possible pair of distinct sequences i, j , bmge computes the stuart's test p-value, denoted pij. if there is at least one pair of sequences for which pij <  <dig> , then bmge progressively removes the characters c ranked in function of their decreasing entropy-like h values --as estimated by formula -- until pij >  <dig>  for every pairs of sequences i, j. this first crude character removal approach leads to a set c of compositionally homogeneous characters. then, bmge aims at integrating the set c with some of the previously removed characters, in order to obtain a set of compositionally homogeneous characters of maximal size.

to do so, bmge uses an iterative add-and-remove approach of characters. defining pij as the stuart's test p-value for the sequence pair i, j after adding the character c inside the set c, bmge computes the following score for each character c ∉ c :

 σ=∑1≤i<j≤nlog/pij). 

if σ  >  <dig>  then adding character c inside c leads to an increase for most of the n/ <dig> p-values; reciprocally, adding characters c with σ <  <dig> leads to a  overall decrease of the p-values. bmge then progressively removes the characters c ∉ c from the initial multiple sequence alignment following the increasing order of their respective σ value, i.e. from the smaller  to the larger  σ score value. after each character removal, every pij are re-estimated. when all pij >  <dig> , bmge stops removing characters from the initial alignment and considers the remaining  characters as the new set c. finally, bmge iteratively performs these add-and-remove operations until the set c of compositionally homogeneous characters cannot be increased further.

RESULTS
in order to assess the utility of multiple alignment character trimming to infer more accurate phylogenetic trees and to compare the respective performances of bmge  with other available character trimming methods , we carried out computer simulations and real case studies. protocol and results are described below.

simulation results with entropy-based character trimming
the  <dig> first 40-taxon trees available in  <cit>  were selected as model trees to generate artificial amino acid sequence datasets. on the one hand, in order to simulate phylogenetically informative characters,  <dig> clusters of  <dig> sequences each were generated using seq-gen  <cit>  under the jtt model  <cit>  from each of the  <dig> model trees. sequence lengths for each of these  <dig> sequence clusters were randomly drawn from  <dig> to  <dig> amino acids. on the other hand, in order to simulate uninformative/variable characters, amino acid sequences were generated in the same way from a 40-taxon star tree .

following these two steps, for each of the  <dig> initial model trees, we generated  <dig> clusters of  <dig> amino acid sequences of lengths  <dig> ±  <dig>  ten containing informative phylogenetic signal, and ten containing uninformative/variable signal. finally, from each of these  <dig> sets of  <dig> sequence clusters,  <dig> clusters were randomly drawn and concatenated, in order to produce a dataset composed of  <dig> clusters of  <dig> sequences of 500-amino acid length on average, each containing an equal mixture of phylogenetically informative and uninformative regions.

this simulation procedure to generate  <dig> clusters of sequences containing 50%  of uninformative/variable characters was repeated three times, each with initial model tree branch lengths  multiplied by a divergence factor of  <dig>   <dig> and  <dig>  respectively, in order to mimic from closely- to distantly-related sequence clusters. each of these  <dig> clusters of simulated amino acid sequences were aligned with muscle  <cit> . the average lengths of these multiple sequence alignments are  <dig>   <dig>  and  <dig> for the levels of divergence × <dig>  × <dig>  and × <dig>  respectively.

the software bmge was applied on these multiple sequence alignments with three similarity matrices: blosum <dig>  blosum <dig> and blosum <dig>  as a comparison, character trimming was also performed by using three available softwares.

gblocks  was used with 'strict' and 'relaxed' parameter sets . however, the 'strict' conditions  are indeed very stringent , and phylogenetic trees inferred from the remaining blocks  were always less accurate than those inferred from the blocks returned by the 'relaxed' conditions . worse results than those obtained with the 'relaxed' conditions were also observed with alternative parameter sets . then, results from gblocks presented below are only those obtained with the 'relaxed' conditions.

the software noisy was used with the --nogap options. several other options were tested  but the noisy default options allows better results to be observed with our simulated datasets.

the software trimal  allows three trimming methods  to be used: 'gappyout', 'strictplus' and 'automated1'. since the 'gappyout' method mainly focuses on highly gapped regions, this approach removed too few characters in our poorly gapped simulated datasets. consequently, the 'gappyout' results are not shown since they are very close to those observed with the initial  multiple sequence alignments.

as expected in regard to the sequence simulation protocol , initial multiple sequence alignments returned by muscle are composed of approximately 50% phylogenetically informative characters . for each trimming method, the character set of an initial multiple sequence alignment is then partitioned into four subsets: true positives and false negatives , false positives , and true negatives . denoting tp and tn , the number of true positive and negative characters, respectively, and fp  and fn , the number of false positive and negative characters, respectively, the true positive rate tpr = tp/ and false positive rate fpr = fp/ were computed. for each trimming method and each of the three levels of divergence , a roc graph  depicting the plot of the true  and false  positive rates for each of the  <dig> datasets is represented in figure  <dig> 

all initial  multiple sequence alignments  correspond to the  point ; reciprocally, the removal of all characters  corresponds to the  point . a cloud close to the  point in the roc graph then indicates that the corresponding trimming method is liberal . conversely, conservative trimming methods  correspond to clouds close to the  point. ideally, the best method selects only those characters that are phylogenetically informative , and then corresponds to the  point inside the roc graph . for each case in figure  <dig>  the l <dig> distance between each point and the  point  was computed, averaged and written under its roc graph. for each of the three levels of divergence , a sign test  <cit>  was performed to assess the statistical significance between the best average l <dig> distance measure  and the other ones. for each level of divergence in figure  <dig>  an average l <dig> distance measure is considered as non-significantly different to the best one if the p-value returned by the sign test is > 5%.

simulation results on phylogenetic tree accuracy
for each of the three levels of divergence and from each multiple sequence alignment , phylogenetic trees were inferred with several approaches. maximum likelihood  trees were inferred by phyml  <cit>  with model jtt-Γ <dig>  bionj  <cit>  trees were also inferred by phyml with jtt distances. maximum parsimony  trees were inferred by tnt  <cit>  with tbr branch swapping and parsimony ratchet  <cit> . bayesian inference was not performed because of the huge running time required by this approach. moreover, bayesian trees are expected to be very close to ml trees when inferred from our simulated datasets  <cit> .

for each of the three levels of divergence, topological accuracy of the ml, bionj and mp trees inferred from the initial and the trimmed multiple sequence alignments was measured by the quartet distance  <cit>  between each inferred tree and its corresponding model tree. all these distance measures are reported in tables  <dig>   <dig> and  <dig> for ml, bionj and mp trees, respectively, normalized in order to restrict these values to the interval  <cit> , then averaged. for each of the three levels of divergence  and each of the three tree reconstruction methods , a sign test was performed to assess the statistical significance between the best average distance measure  and the other ones. in each column of the tables  <dig>   <dig> and  <dig>  an entry is considered as non-significantly different to the best one if the p-value returned by the sign test is > 5%.

for each column, the best  distance is written in boldface characters. average quartet distances that are not significantly different to this best value  are underscored.

for each column, the best  distance is written in boldface characters. average quartet distances that are not significantly different to this best value  are underscored.

for each column, the best  distance is written in boldface characters. average quartet distances that are not significantly different to this best value  are underscored.

variable/uncertain characters contained in the initial multiple sequence alignments cause strong artefacts in the resulting phylogenetic trees, especially for bionj and mp trees . when character trimming softwares are used, almost all reconstructed phylogenetic trees are closer to their model tree , showing that character trimming is a useful step prior any phylogenetic inference. however, it should be stressed that the ml approach is very robust to the noise introduced by uninformative/variable characters in our simulated datasets, mainly thanks to the Γ parameter. even if our datasets were generated with equal rates across characters , estimation of a Γ parameter was included in ml inference because preliminary tries without Γ parameter led to less accurate trees, especially those inferred from noisy and trimal outputs . the Γ parameter then helps to compensate part of the phylogenetic noise contained in our datasets. however, when considering distantly-related sequences , the ml approach  needs a preliminary trimming step to infer significantly accurate trees, in agreement with results from previous simulation-based studies .

in general, bmge  allows reconstructing among the most accurate trees for each of the three levels of divergence and every tree reconstruction method used . trimal and noisy infer the worst bionj and mp trees, whereas gblocks with relaxed conditions produces good results as long as sequences are not too divergent. to the minor exception of noisy with ml trees, bmge trimming with the  blosum <dig> matrix allows reconstructing the significantly best trees with level of divergence × <dig> 

simulation results on phylogenetic tree branch support
in order to observe the impact of character trimming methods on branch supports inside phylogenetic trees, we have focused on two different approaches to estimate confidence values on the internal branches of a phylogenetic tree: the bootstrap-based support  <cit>  with bionj trees, and the approximate likelihood ratio test  as implemented by default in phyml  <dig>   <cit> .

for each of the three levels of divergence  and from each multiple sequence alignment ,  <dig> bootstrap-based replicates were generated, and  <dig> bionj trees were inferred from these multiple sequence alignment replicates. from these  <dig> bionj bootstrap-based trees, bootstrap proportions were assessed on the internal branches of the corresponding  model tree. for each character trimming method and each level of divergence, we computed the distribution of the so-obtained bootstrap-based confidence values, as well as its average value . similarly, we also computed the distributions of alrt branch support estimated on the  branches of the model trees from the different multiple sequence alignments, as well as their average values . for each way to estimate confidence values  and each level of divergence , a χ <dig> test was performed to assess whether distributions are significantly different. in figures  <dig> and  <dig>  a distribution is considered as non-significantly different to the best one  if the p-value returned by the χ <dig> test is > 5%.

for each of the three levels of divergence and from each multiple sequence alignment, bionj-based bootstrap proportions were also estimated on the branches of the phylogenetic trees inferred by bionj . a bootstrap-based confidence value is then expected to be high when the corresponding branch is true , and is expected to be low for false branches. given a threshold τ, all branches of an inferred tree can be partitioned into four subsets: true positives or false negatives , false positives or true negatives . as a consequence, there exists a point in the roc space  that is associated to a threshold value τ, and plotting these points for a large number of possible threshold values τ results in a so-called roc curve . roc curves obtained by varying τ from  <dig> to  <dig> with  <dig> -increment are displayed in figure  <dig>  where up-right head of each roc curve corresponds to lowest τ values, whereas down-left tail corresponds to highest τ values. figure  <dig> represents roc curves built in the same way from alrt-based confidence values on the branches of the inferred ml trees . figure  <dig> and  <dig> also display the area under each roc curve  that corresponds to the probability that a confidence value will be higher for a true branch than for a false branch . for each of the three levels of divergence, a z test  was performed to assess the statistical significance between the best auc  and the other ones. in figures  <dig> and  <dig>  an auc is considered as non-significantly different to the best one if the p-value returned by the z test is > 5%.

broadly, figure  <dig> shows that the estimate of bionj bootstrap proportions from the initial  multiple sequence alignments leads to very biased values, with a proportion of true branches with bootstrap-based confidence values ≤  <dig>  varying from 31% to 47%, and those >  <dig>  varying from 18% to 20%. figure  <dig> also shows that the highest average bootstrap-based confidence values are obtained from the character-trimming methods that best optimize both tpr and fpr criteria . the same conclusions hold for alrt with level of divergence × <dig> , with  best average alrt values observed with bmge and gblocks. surprisingly, for level of divergence × <dig>  the best average alrt values are obtained from the characters selected by the most liberal character trimming methods, i.e. initial alignments and trimal .

auc values in figures  <dig> and  <dig> show that initial  multiple sequence alignments lead to more incorrect confidence values than those estimated from characters selected by trimming methods. interestingly, figures  <dig> and  <dig> show that alrt-based roc curves induce highest auc values on average that bootstrap-based ones . this shows that alrt-based confidence values are more able to discreminate true and false branches than bionj bootstrap-based ones. roc curve shapes also show that trimming methods lead to more precise confidence values. indeed, in figure  <dig>  the down-left tail point of each roc curve  always has highest tpr  for trimmed alignments than for initial ones; this shows that a larger proportion of true branches with bionj bootstrap-based confidence values > <dig>  is observed with trimmed alignments than with initial alignments. for initial multiple sequence alignments and for level of divergence × <dig> and × <dig> in figure  <dig>  the up-right head points of these two roc curves  have tpr < 1; this means that there exists some true branches with bionj bootstrap-based confidence value <  <dig> . notably, this is not the case when using character trimming methods. these two tendencies on tpr values for both extremities of the roc curves are in agreement with the distributions in figure  <dig>  nevertheless, when observing the fpr ranges  of the roc curves in figure  <dig>  trimmed multiple sequence alignments all induce larger fpr values than initial ones; this shows that when using character trimming methods instead of initial multiple sequence alignments, there is an increase in the proportion of false branches in bionj trees with high confidence value  and a decrease of the proportion of false branches with low confidence values . this last tendency is clearly obvious with level of divergence × <dig> . however, shapes of roc curves constructed by thresholding alrt-based confidence values on ml trees do not seems to be strongly modified by trimming methods . more precisely, for levels of divergence × <dig> and × <dig>  gblocks and bmge  present always among the best results. for level of divergence × <dig>  noisy and bmge with blosum <dig> present the significantly best auc values for alrt-based confidence values.

to sum up, these simulation results show that, by selecting among variable characters those with biologically-relevant expected variability thanks to the use of similarity matrices, bmge often presents results that are among the  best  and leads to a less biased phylogenetic signal.

entropy-based character trimming in a phylogenomics context
in order to illustrate the benefit of using character trimming approaches, we have re-analysed the multi-gene dataset used by castresana  to describe the usefulness of gblocks  <cit>  in selecting suited characters. this amino-acid dataset is composed by ten genes  gathered from the complete mitochondrial genome of  <dig> eukaryotes , and from paracoccus denitrificans, an α-proteobacterium used as outgroup .

protein sequences were aligned with muscle, and each of the  <dig> multiple sequence alignments were trimmed by bmge, gblocks, trimal and noisy with the same parameters used in the previous simulations. for each of these seven character trimming approaches as well as the initial  multiple sequence alignment, the ten so-obtained character matrices were concatenated into a single character supermatrix with the software concatenate  <cit> . table  <dig> shows the different number of characters of these eight supermatrices. ml trees were inferred with phyml from each character supermatrix with the mtrev model of amino acid substitution  <cit> . parameters defining the shape of the Γ distribution  and the proportion of invariable characters were both left as free. the different log-likelihood  estimated for each inferred ml trees were normalized by the total number of characters for better comparison and are shown in table  <dig>  ml bootstrap-based  and alrt confidence values were assessed on the branches of the different inferred trees.

it should be stressed that our initial character supermatrix  is slightly larger than the number of characters inside the original character supermatrix in  <cit>  ; this is due to the use of different multiple sequence alignment softwares. it should also be stressed that the log-lk per character estimated from our initial character supermatrix  is higher than those provided in  <cit>  ; this can be explained by the different number of characters but also by our use of the amino acid model mtrev+Γ8+i instead of just mtrev in  <cit> . however, the ml tree inferred from our initial character supermatrix has the same topology  as the ml tree inferred by castresana . the use of bmge , gblocks , trimal  and noisy lead to the same phylogenetic tree . however, bmge with the stringent blosum <dig> similarity matrix leads to a different ml phylogenetic tree . these two trees agree on the monophyly of unikonts , but differ in the placement of the jacobid reclinomonas americana, which is inside the archaeplastida subtree in the left-hand tree of figure  <dig>  knowing that archaeplastida and unikonts are each likely monophyletic, and that jacobids are phylogenetically distinct from archaeplastida , the bmge  tree at the right-hand side in figure  <dig> seems more accurate. moreover, blosum95-based character trimming in bmge gives among the best confidence values for the monophyly of unikonts whereas gblocks and trimal both weakly support this subtree . the monophyly of archaeplastida is weakly supported by all approaches, suggesting that this dataset does not induces sufficient phylogenetic signal for this particular node. however, bmge with blosum <dig> seems to provide a character trimming that leads to both accurate phylogenetic tree and confidence values, probably due to its ability to best minimize the number of false positive characters .

nodes , ,  and  are indicated on the phylogenetic trees in figure  <dig>  nodes  and  correspond to the monophyly of unikonts. paraphyly and monophyly of archaeplastida correspond to nodes  and , respectively. for each column, the best  confidence value is written in boldface characters.

this re-analysis of a known phylogenomic dataset shows that it is quite difficult to choose an appropriate similarity matrix with bmge, knowing that, in the one hand, these mitochondrial amino acid sequences are distantly related , and that, in the other hand, a less unrealistic tree is inferred when bmge is used with the stringent blosum <dig> similarity matrix. to deal with amino acid sequences and blosum matrices, a trivial approach would be to use the sequence clustering rule defined by henikoff and henikoff  <cit> : to compute the blosumη similarity matrix, they grouped amino acid sequences into clusters in such a way that each sequence in any cluster has at least η% identity to at least one other sequence in this cluster. given an alignment with n amino acid sequences, a systematic procedure to choose the blosum η similarity matrix is then to apply the following formula:

  η=mini= <dig> ,…,n maxj= <dig> ,…,i− <dig> i+ <dig> …,n{%  identity between sequences i and j} 

unfortunately, this formula underestimates the value of η that best minimizes both the number of false positive and negative characters in our simulated datasets, e.g. η, as estimated by , varies from  <dig> to  <dig> with an average of  <dig> with level of divergence × <dig>  and varies from  <dig> to  <dig> with an average of  <dig> with level of divergence × <dig>  whereas simulation shows that best results are obtained with η =  <dig> and  <dig> for levels of divergence × <dig> and × <dig>  respectively. indeed, formula  on the castresana  phylogenomic dataset gives η values varying from  <dig>  to  <dig> , which shows that the amino acid sequences constituting these ten alignments are not closely related, whereas we have shown that the conservative blosum <dig> similarity matrix is best adapted than blosum <dig> and blosum <dig> ones. moreover, when estimated by  from the eight considered character supermatrices, η varies from  <dig>  to  <dig> . a similar underestimation of η was also observed by averaging the n max values in formula , or by considering only characters with no gaps. finally, even if formula  or related could give a suited approximate of the η value by using the building rules of blosum matrices, it will be even more difficult to provide a similar formula for the pam-η similarity matrices when dealing with dna sequences.

therefore, as maintained by ewens and grant  for blast queries, we believe that "one often has prior knowledge about the evolutionary distance between the sequences of interest that helps one choose which blosum matrix to use" . in practice, when inferring a particular gene tree, our opinion is to carefully examine the original multiple sequence alignment and those obtained by bmge trimming with several similarity matrices . on the contrary, when building a phylogenomic dataset, we believe, as talavera and castresana , that "there is enough information from the concatenation of several genes" and then that "stringent conditions tend to give rise to the best phylogenetic trees" : the use of bmge with stringent similarity matrices  can strongly increase the number of false negatives  but systematic biases due to this conservative approach are often compensated by a sufficiently large number of genes used. finally and in every case, we think that it is more relevant to deal with well-defined similarity matrices in order to choose among stringent to relaxed character trimming as in bmge, rather than having to set several  numerical parameters.

simulation results with stationary-based character trimming
we illustrate the impact of compositional heterogeneity and stationary-based character trimming on the accuracy of phylogenetic tree inference with a simple computer simulation. given the quartet tree in figure  <dig>  the evolution of a dna sequence of length  <dig>  with 25%-proportion of each nucleotide was simulated by seq-gen from the root to the four leaves u, v, x and y. to infer the evolution of this dna sequence, the evolutionary model f <dig>  <cit>  was chosen. on the one hand, seq-gen was used with equal relative character state frequencies to generate a compositionally homogeneous region . on the other hand, to generate a compositionally heterogeneous region , dna evolution was simulated with 80% gc-content for the external branches corresponding to the taxa u and x, and 20% gc-content for the two other external branches . for each proportion of characters with heterogeneous composition ,  <dig> four-sequence alignments were generated following this procedure.

ml trees were inferred with phyml  from all these simulated alignments. stationary-based character trimming was applied with bmge, and ml trees were inferred from the resulting compositionally homogeneous alignments. for each of the five proportions  of unequal gc-content characters, the number of times that the model tree  was correctly inferred from both initial and trimmed alignments is graphically represented in figure  <dig>  the average proportions of characters removed by the stationary-based trimming are also reported. as expected  <cit> , the model tree is often recovered with the initial alignments when these contain no or a small proportion of compositionally heterogeneous characters , whereas the model tree is much less or not recovered when there is a high overall gc-content in taxa u and x, causing a biased attraction between them  <cit> . thanks to the stationary-based character trimming, bmge detects and removes regions that are compositionally heterogeneous; then, as shown in figure  <dig>  the model tree is very often recovered , even when the proportion of unequal gc-content characters across sequences is high .

there exist many alternative statistical solutions to compare the character state composition of two  sequences. each of these has its own strengths and weaknesses . however, matched-pairs tests  are comparatively efficient, particularly because of their ability to consider aligned sequences on a site-by-site basis  <cit> . albeit the stationary-based character trimming may be extended by the use of overall tests for marginal symmetry , we think that using pairwise p-values allows more precise sorting of the characters c according to their σ score value . moreover, such overall tests are more time consuming. it should also be stressed that the bowker's  <cit>  test  was tried instead of the stuart's test in the stationary-based trimming, but it led to worse results in the simulation analysis . finally, as stressed in  <cit> , stuart's test is based on ordinary χ <dig> approximation and is not appropriate for small samples, particularly when the number of categories  is not small. it is then strongly recommended to use the stationary-based character trimming on a large number of characters , especially when dealing with amino acid sequences.

real case study with stationary-based character trimming
in order to illustrate the performance of the stationary-based character trimming, we applied it on the multi-gene dataset described in  <cit>  , which is known to suffer from a gc-content bias. this phylogenomic dataset was built by concatenating  <dig> alignments of dna sequences gathered from  <dig> saccharomyces species and candida albicans as outgroup . the so-obtained supermatrix contains  <dig>  nucleotide characters.

by using on this character supermatrix the same methods and software as phillips, delsuc and penny , we retrieved the same phylogenetic tree  by minimizing the minimum evolution  criterion with both gtr  <cit>  and logdet  <cit>  distance estimates. we also retrieved the same me bootstrap-based confidence values as in  <cit> , i.e. 100% bootstrap proportion at all branches. nevertheless, as shown by numerous phylogenetic analyses of the same dataset , this tree is incorrect: the real evolutionary history of these  <dig> yeast taxa is in fact the right-hand tree in figure  <dig>  with no monophyletic relationship between s. kudriavzevii and s. bayanus. it was shown in  <cit>  that this systematic bias is due to a gc-content compositional heterogeneity across sequences that is sufficiently important to mislead the me criterion.

a subset of  <dig>  characters was selected by stationary-based character trimming implemented in bmge. these so-selected characters were used to infer me trees following the same methods as described previously. as expected, the right-hand tree in figure  <dig> was inferred from both gtr and logdet distance estimates with 100% bootstrap-based confidence value at each branch. more precisely, pairwise stuart's test p-values are all ≈  <dig> in the initial character supermatrix . after the stationary-based trimming performed by bmge, all saccharomyces sequences induce pairwise stuart's test p-values >  <dig> , the lowest p-values being induced by the outgroup species . this shows that by removing ≈10% characters, the stationary-based trimming is able to select a subset of compositionally homogeneous characters  that leads to unbiased me phylogenetic inference.

CONCLUSIONS
there exists a real need for accurate bioinformatic tools to extract at best the phylogenetic information contained in the ever-growing amount of available genomic sequence data. bmge allows accurate character trimming of multiple alignments of dna, codon, or amino acid sequences based on entropy-like scores weighted with blosum or pam matrices. thus, bmge is able to identify and extract unambiguously aligned blocks of characters that contain biologically expected variability and are therefore suitable for phylogenetic analysis. simulation studies show that the trimmed datasets returned by bmge lead to inference of accurate trees, in particular when in presence of multiple alignments including distantly-related sequences. bmge also allows a number of useful recoding and trimming aimed at minimizing compositional heterogeneity in the alignment dataset and therefore the risk of phylogenetic artefacts.

in conclusion, bmge is an accurate tool that can have several applications in phylogenomics analyses. the software bmge is freely available , and can also be used online through the mobyle web portal  <cit>  at http://mobyle.pasteur.fr/cgi-bin/portal.py.

availability and requirements
• project name: block mapping and gathering with entropy 

• project home page: ftp://ftp.pasteur.fr/pub/gensoft/projects/bmge/

• operating systems: platform independent

• programming language: java

• other requirements: java  <dig>  or higher

• license: gnu general public license 

• any restrictions to use by non-academics: none

authors' contributions
ac initiated the project, designed and implemented the different methods inside the software, performed the computer simulations, and wrote the manuscript. sg supervised the project, and participated in designing the entropy-based character trimming method and in writing the manuscript. all authors read and approved the final manuscript.

