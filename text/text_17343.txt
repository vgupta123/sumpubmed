BACKGROUND
precision medicine shows the promise of additional efficacy by bringing more information into the diagnosis process. it is, however, highly dependent on rapid advances in science and technology as data analysis and knowledge discovery techniques are indeed struggling to keep pace with the challenges related to what computer scientists have called big data  <cit> . in this regard, dealing with the high-dimensionality of patients’ data represents a largely unsolved problem, especially when the number of features or covariates involved, such as related to molecular data , greatly outnumbers the observations . this fact severely hampers the modeling task, usually leading to a degradation in the classifier accuracy and a greater difficulty in extracting knowledge from data  <cit> . furthermore, datasets suffering from this curse of dimensionality often lead to over-fitted models which, although they represent the training data, exhibit a significant decrease in their accuracy on new observations  <cit> . this problem may persist even when feature selection and validation schemes are used. one possible solution to tackle this problem is to impose further constraints on the solution space. this can be accomplished through regularization methods, that penalize more complex structures of the solution space. the goal is to penalize the cost function  with additional functions in order to impose a structure on the parameter space.

for linear regression, a regularization method that is widely used is lasso - least absolute shrinkage and selection operator  <cit> , which penalizes the error function with the l <dig> norm of the regression parameters, leading to a sparse solution. other possible regularizers include feature or group sparsity, smoothness of the features’ coefficients, or a graph representing how the features are connected .

these techniques have led to models that are partially capable of dealing with the dimensionality problem and, additionally, are able to improve model interpretability .

in this context, survival analysis in oncology research represents one of the most challenging areas of application, with the recent development of public databases such as tcga - the cancer genome atlas  <cit> . survival analysis involves modeling the time to an event of interest, by uncovering relationships between the given covariates and time distributions  <cit> , and allowing for censored observations . the cox proportional hazard model  <cit>  is used to model these relationships and has been widely applied in this context. however, it also exhibits problems for datasets with more covariates than observations. for example, using genomic data to determine the relationship of the expression levels of thousands of genes to a death event leads to an under-determined problem that can have multiple solutions.

recent efforts to combine cox modeling with regularization techniques have already shown promising results  <cit> . in particular, sparse models have been developed to identify a small set of gene signatures related to high or low risk patients. furthermore, the predictability of the model was tested with datasets from five geographically distant populations  <cit> . cox regularized models have also been used to predict a patient’s risk of conversion from a mild cognitive impairment to alzheimer’s disease  <cit> .

besides these sparsity methods, other techniques tried to embed network-based regularizers, following work on group sparsity  <cit> . when the features can be connected through a graph, one can further explore this structure in order to improve the models. one example is to impose smoothness on the parameters associated with connected features . this technique provided good results for modeling survival of ovarian cancer patients where the features correspond to gene expression data  <cit> . since there is an underlying structure on the gene feature space given by the patterns of co-expression, these correlations can be applied as constraints to the cox proportional hazards model. although the results are promising, there are still few studies that fully explore the network properties of the feature space beyond this connectivity.

in this context, we propose and explore a novel network-degree-constraint cox proportional hazard model, that we called degreecox, which uses a priori knowledge to leverage the correlation or functional information present in gene expression data. in this survival model, a graph degree constraint is introduced that expresses the importance of a gene by how highly connected it is in the overall network.

we applied degreecox to identify gene expression signatures associated with survival of ovarian carcinoma patients. this type of cancer is the fifth-leading cause of cancer death in us women  <cit> . degreecox was applied to three large-scale ovarian cancer gene expression datasets  to predict a patient’s risk and to identify genes associated to death events. we compared degreecox with similar methods such as net-cox  <cit>  and elastic net  <cit> . our results show that using vertex degree can improve the model in terms of its generalization capability.

the code to reproduce the results is available at http://sels.tecnico.ulisboa.pt/gitlab/averissimo/degree-cox.

methods
the proposed method degreecox is based on applying network-based regularizers in cox proportional hazards model estimation. this section will overview several regularizers based on centrality measures of a network and will briefly describe which networks can be applied in the context of gene expression data. survival models and regularization in the context of cox regression are then overviewed.

network centrality metrics
a biological network is represented as a graph g:=, with v denoting the set of vertices, or nodes, and e the set of edges. in the present context of gene networks, g represents the co-expression or functional map network where the vertices are p genes, with p:=|v|, and edges represent a weighted relation between two genes. the graph g may also be represented by a p×p positively weighted adjacency matrix that we denote by w.

the matrix w is further normalized, leading to the matrix s with sij=wij·∑n=1pwin−1/2·∑n=1pwnj−1/ <dig>  i.e., each normalized value in s is obtained by dividing the weights by the square root of the sum over all rows and columns.

network centrality measures characterize each vertex in a network, creating a ranking of the most relevant ones  <cit> . research on this topic emerged in the 1950s on the role of central vertices in social networks . different metrics have been proposed in the literature. these typically use network topology to define a function that determines a measure for vertex y
i. among the proposed methods to classify important vertices are degree, betweenness and closeness centrality, briefly described below and illustrated in fig.  <dig>  where the size and color of a vertex reflect the importance of the vertex for each method.
fig.  <dig> centrality measures




in the section, all these measures will be tested on real datasets in order to choose the best ones to be integrated in the proposed regularizer.

degree centrality
the degree of a vertex is the number of its adjacent vertices. vertices with a high degree are called hubs and may bridge the path between other low degree vertices in the network keeping the network diameter low. the simplest description of network centrality based on the degree of a vertex was first presented by nieminem  <cit>  and counts the adjacent edges of vertex y
i: 
  <dig> di=∑j=1paij, 


where a
ij= <dig> if vertices y
i and y
j are connected and a
ij= <dig> otherwise.

extensions of this definition to include weighted networks have been proposed, where the values s
ij represent the normalized weight of the connecting edge instead of a binary value  <cit> : 
  <dig> di=∑j=1psij. 


methods to determine the centrality of a vertex are local, since they are functions of the neighborhood of y
i, therefore not taking into account global properties. for a comparison of multiple networks, this value should be normalized by the total number of vertices  <cit> .

betweenness centrality
the betweenness centrality b
i is equal to the frequency of the presence of vertex y
i in the shortest paths between every two vertices  in the network, i≠j≠k. this will rank vertices by their importance on the communication flow of the network. it may be used to identify possible bottlenecks or relevant regulators of the network. it is defined by: 
  <dig> bi=∑j=1p∑k:k>jpgjkgjk, 


where g
jk is the number of shortest paths between y
j and y
k and g
jk is the number of shortest paths that include vertex y
i. computation of this metric for dense graphs can be done in Θ time and for sparse graphs in o+|v|·|e|) time.

closeness centrality
the idea that the centrality of a vertex is related to its connectivity in the network was suggested by  <cit> . this measure, denoted by c, is based on calculating, for each vertex y
i, its distance g
ji to every vertex y
j, j≠i, in the network, defined as the length of the corresponding shortest path, summing all these distances and taking the inverse: 
  <dig> ci−1=∑j≠ipgji. 


the rationale is that the more central vertices have lower total distances from all other vertices. this measure requires that the graph is connected, as two disconnected vertices are at an infinite distance from one another.

gene networks
in order to apply a network-based regularizer, two types of gene networks will be used: 1) gene co-expression networks ; and 2) gene functional maps . both networks consider genes as vertices and the weight of each edge corresponds to the association between the connected genes, which can be the correlation between gene expression or functional annotation.

a gene co-expression network  is specific for each dataset and is generated using the ranking of pearson’s correlation coefficients between gene g
i and g
j, for all genes in the dataset  <cit> . the resulting matrix m, is given by mij−1=rij·rji, where r
ij is the position of gene g
j in the correlation ranking of gene g
i.

a gene functional map  describes the functional activity and corresponds to an interaction network that includes information from ∼ <dig>  genome-scale experiments and ∼ <dig>  human genes. it was built using a regularized bayesian integration system proposed by huttenhower and colleagues  <cit>  and is available at http://giant.princeton.edu/. each edge between two genes is probabilistically weighted based on experimental evidence which integrates many different datasets. the functional map used in the present work includes  <dig> genes inferred from experiments using ovarian cells.

cox proportional hazards model
given d=,⋯,), where x
i, i= <dig> …,n is the gene expression profile of n patients over p genes, xi′=, y is the response variable that indicates the survival time for patient i and δ
i is an indicator of whether patient i has observed the event  or not . the hazard function for a patient given his expression profile is given by: 
  <dig> h=h0exp, 


where β= is a vector of regression coefficients and h
 <dig> is the baseline hazard function. the regression coefficients are estimated by maximizing the cox’s partial log-likelihood: 
  <dig> l=∑i=1nδixi′β−log∑j:yj≥yinexpxj′β. 


one of the most used estimators for the baseline hazard is the breslow estimator  <cit>  given by: 
  <dig> ĥ0=1∑j:yj≥tinexp. 


the partial likelihood and the breslow estimator are induced by the total log-likelihood: 
  <dig> l=∑i=1n−exph0+δilog)+xi′β, 


with 
  <dig> h0=∑tk≤tih <dig>  


the inference of the optimal coefficients β^ is done by maximizing the total log-likelihood in two steps, alternating between maximizing with respect to β and updating the h
 <dig> estimation .

regularized cox regression
when the number of gene features p is much larger than the observations n , the estimation procedure exhibits identifiability problems. in fact, applying the standard cox proportional hazard model to infer parameters will lead to multiple possible solutions with a large number of non-zero parameters, which severely hampers the classification of new observations.

lasso and ridge regression
strategies that can be used to minimize this problem include the application of l
 <dig> and l
 <dig> norms, in order to restrict the solution space, in particular imposing sparsity and small coefficients for the parameters  <cit> . this can be done by penalizing the total log-likelihood with a weighted sum of the l <dig> and l <dig> norms, a method called elastic net  <cit> : 
  <dig> ll1l2=∑i=1n−exph0+δilog)+xi′β−12λα|β|1+|β| <dig>  


where λ is the parameter controlling the penalizing weight and α the balance between the two norms. in particular, α= <dig> leads to the ridge regression and when α= <dig>  lasso regression is obtained.

the r package “glmnet”  <cit>  was used to estimate the coefficients with this type of regularizer.

net-cox regression
in the net-cox model previously proposed  <cit> , a laplacian matrix constraint is introduced as a smoothness operator among adjacent coefficients in the network. this operator adds a cost, for every pair of genes connected by an edge, which is proportional to the edge weight and the difference between their coefficients. this hypothesis determines that genes that are connected should be correlated. this implies that the coefficients of the features related to the genes should be similar, i.e., vary smoothly through the network.

the laplacian is then given by: 
  <dig> Ψ=12∑i,j=1psijβi−βj2=β′β=β′lβ, 


where l is a positive semidefinite matrix derived from the network. the the full model of net-cox is based on: 
  <dig> lnetcox=∑i=1n−exph0+δilog)+xi′β−12λβ′1−αl+αiβ, 


where λ is a parameter that controls the penalizing weight of the regularizer and α is the parameter that weights the two penalizations.

degreecox regression
the function proposed in degreecox combines the total log-likelihood of cox regression with degree regularization. as previously, the total log-likelihood is calcuted using the breslow estimator . the novelty is the introduction of a penalizing term that conveys a vertex centrality information of the subjacent network. to this purpose, both gene co-expression networks  and gene functional maps  are used in order to extract the corresponding vertex centrality information. more specifically, each of the different network centrality measures is tested for each of the two networks.

more formally, we introduce a network degree-based constraint to the cox model that uses the function Υ as additional cost function: 
  <dig> Υ=∑i=1pβi2dii=β′dβ. 


where d is a diagonal matrix with dii−1=∑j=1psij, i.e., the inverse of the vertex weighted degree.
fig.  <dig> 
degreecox network regularizer




when adding the constraint to the cox model, we get the full likelihood as follows: 
  <dig> ldegreecox=∑i=1n−exph0+δilog)+xi′β−12λβ′dβ. 


this model adds a cost for each gene/vertex that increases as its coefficient β
i increases, but is also inversely proportional to how well connected that vertex is in the graph, given by its degree. thus, the objective function drives the assignment of larger coefficients to genes that are highly connected in the network. the rationale behind the application of this regularizer is then to identify a set of genes that not only predicts the survival, but that also has a relevant role in the underlying network.

RESULTS
in the following experiments, the degreecox, net-cox, lasso and ridge models were applied to ovarian cancer gene expression datasets. the experiments ran with multiple parameter values, which were selected using the same cross-validation technique as described in  <cit> . the selected models were then evaluated by comparing the prognostic risk of each patient in the sample, the obtained clustering in high and low risk groups based on kaplan-meier estimators  <cit>  and log-rank tests. analysis of the deviance residues  <cit>  and the concordance c-index of the selected models  <cit>  is also presented for all combinations of datasets and methods.

datasets and networks
the three datasets used in these experiments, hereafter named bonome, tcga and tothill, are publicly available from three independent ovarian cancer studies . all three contain gene expression data and survival follow-up times for each patient in the study. the datasets were obtained from the hg-u133a platform and the raw files were normalized using the robust multichip average  preprocessing methodology.

the bonome dataset comprises the follow-up time, survival status and microarray gene expressions for  <dig> patients. the microarray data contain  <dig>  gene expression levels  <cit> . the tcga dataset comprises the follow-up time, survival status and microarray gene expression of  <dig> patients and the microarray data contain  <dig>  gene expression levels  <cit> . the tothill dataset also comprises the follow-up time, survival status and microarray gene expression of  <dig> patients and  <dig>  gene expression levels  <cit> . these three datasets have  <dig>  genes in common that were therefore adopted for all the experiments using the gene co-expression network. the same number of genes are present in the gene functional network, which will be considered the benchmark to determine and confirm the weighted degree as the best centrality measure to be used in degreecox.

high edge weights imply a strong connection between the corresponding genes/vertices. this is desirable for centrality measures such as the weighted degree. however, for the betweenness and closeness centrality measures, this would lead to more highly connected vertices having lower betweenness, since they will not be present in the shortest paths. in order to include these strongly connected vertices, the following transformation is applied in these cases: 
  <dig> sij′=log1sij. 


centrality measures evaluation
in order to choose the most adequate centrality measure for the regularization, several tests where performed regarding the topological and connectivity properties of each network. the gene co-expression networks and gene functional networks have an edge between any pair of genes and, as a consequence, the diameter of the networks is  <dig>  making the centrality metrics based on shortest paths or unweighted degree uninformative. in order to tackle this problem, the original networks were split into sub-networks by ranking the edges on their weight and removing them if s
ij was below a given threshold. by working with both the full network and smaller sub-networks, we can attempt to better understand their structure.

the full network had  <dig> , <dig> edges and was progressively reduced using this method, by applying a threshold that varied between  <dig>  and  <dig> . each sub-network was then studied in terms of its diameter, power law distribution and, for a ranking of the vertices, according to their degree, weighted degree, betweenness and closeness centrality measures.

in fig.  <dig>  we show how varying this threshold affects the top ranking genes for the centrality measures described and the total number of edges kept.
fig.  <dig> comparison of the fraction of top-ranked genes calculated for starting networks for the centrality metrics analized: a weighted degree, b betweenness and c closeness. sub-network properties obtained by removing edges from the starting network




two criteria for selecting the best centrality measure are evaluated: 1) observing which metric better overlaps the top ranking genes across metrics can help identify a good candidate to test the proposed regularization method; and 2) looking into how rankings change for each metric as the number of edges is reduced should also give insight into the best candidate.

for the first criterion, we take the  <dig>  top-ranking genes over the studied metrics and analyse their overlap. while the weighted degree and closeness have  <dig> % of common genes, the betweenness overlaps with less than  <dig> % of either the closeness or weighted degree. we can assess that the weighted degree and closeness hold similar information as they value vertices that are well connected in the network, locally for the first one and globally for the latter. it is interesting how a local measure such as the degree of a vertex gives similar results as when using a global measure as is the closeness.

the second criterion is studied in fig.  <dig>  which denotes the percentage of top-ranking genes that are kept with different measures as edges are being removed. a ranking of the top  <dig> genes was calculated for all sub-networks . each line denotes a different starting network and shows the fraction of the top-ranked genes that are kept as edges are removed. the data shown in fig.  <dig> indicate that the betweenness centrality does not perform well with the full graph or big sub-networks as the overlap deteriorates quite fast. on the other hand, weighted degree and closeness show that the top-ranking genes are mostly kept while removing edges, until reaching a critical point near the sub-network with  <dig>  edges.

combining all information, we decided to choose weighted degree as the network-based regularizer to be used . it combines local and global information on the network due to its similarity with the closeness measure. the degree is more robust and predictable on the impact of edge removal as well as it is cheaper to compute.

performance evaluation of the cox models
with the best candidate metric selected, experiments were carried out with degreecox using the weighted degree of the network and compared against three existing models: net-cox, lasso and ridge. the latter two are sub-cases of the elastic net with regularization parameters α= <dig> and α= <dig>  respectively. the other parameters for the models were selected using five-fold cross-validation, following the same procedure previously used  <cit> .

in the cross-validation procedure, the dataset is partitioned in  <dig> different folds, where four of them are used in model training to find the model’s coefficients ) and the i-th set is left out. this procedure is performed  <dig> times for each  parameter combination, or , depending on the model. the test itself will determine the parameters that best fit the training data and perform best to new unseen data. this is done by maximizing the partial likelihood  between the full dataset  and the pl of the test set ). 
  <dig> cv=∑i=15plx,β^λα−plx,β^λα. 


three different analytical methods were used to evaluate the models: the root mean squared error ; the concordance index ; and the kaplan-meier estimator.

the residuals used to calculate the rmse were the deviance residuals  <cit> , that calculate the difference between the log-likelihood  for each individual in the dataset using the global inferred model  and a saturated, or full model, . the saturated model is a perfect fit for the data, as the β coefficients are allowed to be different for each individual. this residual is centered in zero and can be regarded as the generalization of the residual sum of squares  <cit> : 
  <dig> resdeviance=−2log)−log). 


the concordance c-index  <cit>  is a relative measure that will assess all permissible pairs of individuals in the sample and compare if their survival time is in line with the hazard relative risk. pairs where both individuals are censored or when only one is censored and has a shorter time than the uncensored are not considered valid. the algorithm increases a concordance count by  <dig> with every pair that is in one of three cases:  individual with higher risk has shorter survival time;  hazard risks and survival time are the same;  one individual is censored and has a lower risk. otherwise the count is increased by  <dig> . the c-index is calculated by dividing the count by the number of permissible pairs  <cit> .

the kaplan-meier estimator  <cit>  is a non-parametric method that estimates the survival function, providing information, at any time point in the data, about the fraction of individuals where the event did not occur. it allows for right censored data and, when calculated for two different groups, we use the log-rank test  <cit>  to compare survival distributions.

in order to test the predictability of the models the following procedure was used: find the best parameters for a training dataset using 5-fold cross validation and then test on the same dataset and  <dig> others. for example train a model with bonome to test with the tcga and tothill dataset.

the results obtained are summarized in tables  <dig> and  <dig> to assess the generalization capability of the methods with new data and how it fits with the training set.

train
test
network
degreecox
0
.
5
5
8
1
0
.
7
7
2
4
1
.
2
3
6
7
1
.
0
5
7
3
0
.
5
1
1
6
net-cox
1
.
1
2
8
5
1
.
0
8
8
6
1
.
3
0
4
5
1
.
0
8
0
2
1
.
2
9
1
7
1
.
2
5
9
1
1
.
1
6
1
2
1
.
1
4
0
3
ridge
1
.
1
4
1
3
1
.
0
9
8
6
0
.
7
2
1
5
0
.
5
4
3
2
lasso
degreecox
0
.
9
7
9
5
0
.
6
7
1
1
0
.
9
8
3
4
net-cox
0
.
6
7
0
5
0
.
6
1
5
2
0
.
6
1
0
6
0
.
6
2
4
4
0
.
6
2
5
0
ridge
0
.
9
4
1
0
0
.
6
1
7
7
0
.
6
5
6
9
0
.
6
4
9
2
0
.
9
3
9
4
0
.
9
8
2
9
lasso
values in bold represent the best performing method for the dataset/network combination 

p-values for log-rank test results for models chosen by 5-fold cross-validation and tested on all  <dig> datasets . the log-rank tests the separation in two categories of patients, high and low risk based on the expression dataset, using the top and lower  <dig> % pi groups and the top and lower  <dig> % pi groups. the lasso and ridge methods do not use network information so the values for gcn and gfm are the same, they are only shown in both networks when they are better than degreecox and net-cox. the p-values when the model is tested on the same dataset used in training are always  <dig> and are ommited from the table

train
test
network
degreecox
6
.
5
4
7
e
−
6
9
.
8
3
3
e-5
1
.
7
5
7
e-4
net-cox
1
.
5
1
4
e-4
1
.
4
3
2
e-6
7
.
7
1
7
e-9
4
.
5
0
3
e-9
ridge
1
.
5
9
4
e-6
2
.
5
3
7
e-4
lasso
7
.
4
3
6
e-5
degreecox
5
.
7
8
1
e-5
1
.
3
0
9
e-4
4
.
3
0
2
e-4
net-cox
0
.
0
0
2
6
1
.
1
0
5
e-8
1
.
6
3
2
e-7
ridge
1
.
7
9
5
e-5
0
.
0
0
1
3
3
.
1
9
3
e-4
lasso
values in bold represent the best method for the dataset/network combination 




we observe that degreecox, net-cox and ridge regression perform very similarly across all three evaluation measurements. regarding the deviances, as measured by rsme, we can conclude that network information improves the results in all the datasets except for tcga tested on tcga, where ridge achieves lower deviances. for the bonome and tothill datasets, degreecox has the best results. when using cross-testing, net-cox has the best results for the bonome and tothill datasets and degreecox for the tcga dataset. net-cox determines a very good model using the tothill dataset as training, but then alternates with ridge and degreecox on the other datasets. such similar results are expected, as both net-cox and degreecox use the same additional information, namely the gcn and gfm networks. the small difference in the results could be explained by how the networks are being used. while net-cox takes the weighted edges of every two genes, degreecox takes the sum for every vertex losing some detail in the process. however, this does not seem relevant as the difference in the deviance is not significant.

to further evaluate how these accuracy measures vary, we assessed the distribution of the residuals for the different methods. in fig.  <dig>  we show a typical result obtained when applying the four studied models on the tcga/bonome example. this illustrates that all the residuals exhibit a bimodal distribution. however degreecox leads to a smaller variance and lasso presents the highest dispersion of rmse values.
fig.  <dig> residuals when models are trained with the correlation network and tcga dataset and tested with the bonome dataset




the results are slightly different when observing the concordance c-index. the results of ridge are consistently better than those of both net-cox and degreecox. although the difference is small, at most of  <dig> %, between the models. lasso continues to perform worse than the other models with this evaluation measure.

finally, the comparison between the methods involved the evaluation of their potential to correctly classify patients accordingly to their survival risks. this was performed by dividing the samples into two groups, high and low risk individuals, based on each individuals’ estimated hazard function and using a given  threshold. this value, called prognostic index , is estimated, for each model, by choosing the threshold for pin=∑i=1pxi,n·βi that leads to the lowest p-value, as assessed by the log-rank test.

we stratified the patients as in the net-cox proposal , by assigning those with the lowest  <dig> % pi to the low-risk group, and the top  <dig> % pi to the high-risk group. the results obtained by using a  <dig> %-  <dig> % stratification are also reported since they correspond to a less favorable partition of the patients, by including those with intermediate risks. then, the kaplan-meier curves are estimated  and log-rank tests performed, all available as additional file  <dig> 
fig.  <dig> kaplan-meier curves for high vs. low risk groups with the model learnt from the tcga dataset and tested on bonome  and tothill . when a death event occurs for an individual, the cumulative survival decreases




the analysis was done for each model and shows that when testing with the bonome and tcga datasets, there is a statistically significant difference between the survival functions of the two groups across all models. the dataset that had the worst separation was the tothill one, as lasso and ridge perform in a similar way to the other methods up until month  <dig>  which can be seen in fig. 5
c and d. afterwards, both curves start to converge to each other. this observation is coherent with the p-value results of the log-rank test in table  <dig>  this result in particular shows that enriching the models with network-based information can lead to better predictive models.

when measuring the separation between two groups by assessing the p-value of the log-rank test, there is a slight improvement in the results of degreecox for the  <dig> %-  <dig> % partition over the top  <dig> %-lower  <dig> % case , which might indicate a better performance in the presence of noisy information. this will be further explored in the future. for the  <dig> %-  <dig> % partition and considering the log-rank tests, ridge regression achieves the lowest p-values in half of the tests. comparing the methods that use network information in this experimental setting, degreecox achieves better results than net-cox for the majority of the combinations .

the separation of high and low risk patients is statistically significant although it could be improved by adding as variables to the model physiological characteristics, such as tumour stage, age groups, ethnicities or gender. these are not currently included, as proposing a new classifier is out of the scope of the present work, that instead, introduces a new regularization model that requires further research.

the results obtained in this study for the net-cox model are comparable with those of the original paper  <cit>  using all the genes . the obtained p-value results are of the same order of magnitude between both experiments, with the small differences being explained by differences in the pre-processing.

although none of the methods seems to perform better in all situations, we can conclude that including network information does not deteriorate the accuracy and can provide better interpretability of the obtained cox survival models, which will be further explored in future work.

CONCLUSIONS
we proposed degreecox, a novel method to estimate survival models using network-based regularization. the results show that degreecox consistently performs as well as net-cox and ridge in all scenarios and with better results against lasso. the evaluation was performed using deviance residuals and the log-rank test of the kaplan-meier estimator for two different groups, high risk and low risk individuals, and this is somewhat expected as all three methods are based on the same norm.

these methods show promising results, and possible extensions can include more topological and network measures. other models beyond cox can also be easily integrated in this framework. the analysis of different types of network properties can also be tested further, and combining different regularizers may lead to an improvement of the classification accuracy.

additional file

additional file  <dig> kaplan meier curves and log-rank tests. a pdf file that includes figures of kaplan-meier curves and log-rank tests obtained for all the combinations of the three datasets  that are described in the manuscript. 




from the 10th international workshop on machine learing in systems biology den haag, the netherlands. 3- <dig> september 2016

declarations
this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2016: proceedings of the tenth international workshop on machine learning in systems biology . the full contents of the supplement are available online at http://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement- <dig> 

funding
this work was partially supported by the european union’s horizon  <dig> research and innovation program under grant agreement no.  <dig> , and fct, through idmec, under laeta, projects uid/ems/ 50022/ <dig> and perseids . sv acknowledges support by program investigador fct  from fct, co-funded by the european social fund  through the operational program human potential . av acknowledges support from fct .

availability of data and materials
the code to reproduce the results is available at http://sels.tecnico.ulisboa.pt/gitlab/averissimo/degree-cox. the dataset used is available at http://sels.tecnico.ulisboa.pt/software-archive/degree-cox-data.zip.

authors’ contributions
av and sv designed the study, av implemented and performed the testings, av, alo, mfs, sv analysed the results and wrote the manuscript. all authors read and approved the manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
