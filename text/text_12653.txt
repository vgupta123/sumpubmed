BACKGROUND
proteins are recognized as the most important players in cell homeostasis. due to their importance and relatively straightforward characterization, it is expected that the main focus of transcriptome projects will be transcripts that code for proteins. to meet this demand, several specific computational tools have been created, both for absolute characterization and comparative analysis of these molecules. only recently has attention begun to turn to those transcripts ignored or rejected by protein-oriented software packages: the so-called non-coding rnas . classical, textbook examples of ncrnas include ribosomal and transfer rnas. more recently, other classes have been unveiled, such as micrornas, sirnas, pirnas, asrnas and the long, mrna-like ncrnas, widespread among all domains, with evidence of ubiquitous tissue expression in plants and animals  <cit> .

demand is now arising for specific tools for working with these molecules. a combination of new computational tools and advances in biological knowledge allowed for development of specific software for this purpose  <cit> . currently, it is not difficult to find software designed for the identification and characterization of individual ncrna classes . however, the task is still considered complex and remains an open topic in bioinformatics.

machine learning algorithms represent a solution for highly accurate detection and characterization of ncrna patterns, and more improvements are expected as ncrna biological properties are determined by biochemical and molecular experiments. successful implementations have been reported for sirna  <cit>  and mirna  <cit> . the mrna-like ncrna, on the other hand, is arguably a class which is harder to identify due to its resemblance to mrna molecules: they may be capped, may undergo splicing, and even harbor polyadenylation and orf signals  <cit> . screening of mrna-like ncrna is possible on prokaryotic genomes using rnagenie  <cit> . for transcriptome contexts, there are two notable implementations: conc  <cit>  and cpc  <cit> . both algorithms – conc and cpc – can distinguish mrna from ncrna with high accuracy. conc showed that putative proteins from ncrna are distinguishable from those translated from mrna, and cpc improved this idea by heavily focusing on homology information. however, their high accuracy relies on the quality of homology information , and both expect full-length sequences given the orf translation schemes employed . these two assumptions hinder the use of these programs for analysis of transcriptomes from poorly characterized organisms because many of their sequences lack known protein homologs and are commonly built from low-quality, single-pass reads. such drawbacks require special procedures to be employed for accurate analysis because canonical translation signals are often missing. the result is a bias toward false negatives when the input consists of low quality sequences because most transcripts code for unusual or truncated  proteins. moreover, despite advances reported on cpc, the required computational processing power and running time remain prohibitive for labs with limited budgets.

in summary, these programs may be inappropriate for transcriptomes from neglected species. we propose new support vector machine-based software to overcome these obstacles. est sequencing errors, frameshifts and truncations are taken into account and corrected by a specially designed program, and a shunt is imposed on sequences without a predicted orf, which are then analyzed separately. database representation bias is eliminated by avoiding homology information and using only ab initio features. also, only computationally light programs were chosen for calculation of features so as to allow pipelining from transcriptome sequencing projects with less demands on computational processing power.

implementation
putative est translation
the angle software package  <cit>  was chosen for translation of ests because it focuses on sequencing errors of the input sequences and has superior performance when dealing with small sequences. angle implements a hybrid method composed of a sliding window cds classifier using a weak learner, a hidden markov model coupled to dynamic programming for determining optimal orf path and a frameshift detector. the dynamic programming  algorithm evaluates and punctuates putative proteins translated from the six frames; among all alternatives, the putative orf with highest dp score is taken as the protein product coded by the transcript. transcripts are separated into two groups: those with translated proteins and those that lack any putative orf. a user-friendly interface for angle was developed in perl and is available from the authors upon request.

support vector machines settings
support vector machines  is a state-of-the-art machine learning algorithm developed from a solid statistical basis  <cit> . svms have been shown to be successful and useful in bioinformatics  <cit>  and several other fields  <cit> .

we used the libsvm v <dig>  implementation  <cit>  with radial basis function kernel, which was shown to be the best kernel to deal with this task , set as c-svm and binary classification problem, with the two classes being coding  and non-coding  rna. optimization of parameters  occurred in two runs using the accompanying grid.py script with  <dig>  randomly selected instances from the main training set. two models were induced separately: a protein-dependent one induced with dbtr_op as training data, and a nucleotide-only using dbtr_oa for training .

compared programs settings
portrait was benchmarked against two other classification programs: naïve bayes and cpc. naïve bayes  is a machine learning algorithm used when a wealth of examples  of a random variable is available, and it is desired to induce a model that is able to explain the distribution of this data. this induced model may be used to classify data yet unseen by the classifier. although very simplistic, nb is also known to be fast and reliable, sometimes even surpassing more sophisticated machine learning algorithms  <cit> .

bayesian models were induced using the software package bc  <cit>  with default parameters. training was done with the same sets, features and normalization schemes used for svm.

cpc  <cit>  was installed locally and always executed with default parameters. cpc comes pre-installed with a classification model developed by its authors, which was developed using the database created by the authors of conc  <cit> .

efficiency measures
efficiency formulas, points for plotting roc curves and area under roc curves were calculated both by using perl scripts and the perf software  <cit> .

cross-validation is a traditional machine learning technique for estimating classifier performance by splitting the training set into n equally-sized datasets, without element repositioning. afterwards, each subset is trained once and the model is evaluated on the n- <dig> remaining subsets. this process is repeated n times so that each subset is used for training exactly once. we used ten-fold cross-validation, which was carried out using libsvm for svm, and a custom perl script for naïve bayes.

fungal sequences
est sequences of organisms phylogenetically related to p. brasiliensis  were downloaded from the entrez nucleotide database  <cit>  and stored as fasta-formatted files. after filtering transcripts shorter than  <dig> and longer than  <dig>  letters, these sequences composed the dbfg set, comprising  <dig>  entries.

RESULTS
training set construction
seeking to discriminate between ncrna and mrna, we used support vector machines  for induction of a classification model. svm is a supervised machine learning method, and as such, it requires previously labeled data – the training set – for model induction . in this work, mrnas  and ncrnas  compose the svm training set, called dbtr .

protein-coding transcripts
this set was built from the swissprot sequences file  <cit>  downloaded in october  <dig> , containing  <dig>  protein sequences with high quality annotations. redundancy was eliminated by using cd-hit  <cit>  with parameter c =  <dig> . unique accession codes were parsed and used to retrieve corresponding cross-referenced mrna accession codes from embl  <cit> , when present. parsed ids were screened to remove repeated entries, references to whole genomes/chromosomes or invalid entries, and subsequently used to retrieve corresponding fasta sequences through the ebi dbfetch service  <cit> . sequences longer than  <dig>  or shorter than  <dig> letters were excluded to avoid software incompatibility. also, this size filter eliminates many of the so-called structural ncrnas, like sirnas, mirnas, among others. closely related nucleotide sequences were clustered using blastclust  <cit>  with parameters s =  <dig> , l =  <dig>  and w =  <dig>  clustering at both amino acid and nucleotide levels is an attempt to eliminate over-representation of frequent homologs and protein families. protein prediction was carried out with angle software  <cit> . transcripts harboring a predicted orf and their respective protein products were assembled in the dbtr_op training set, comprising a total of  <dig>  sequences. those transcripts lacking orfs were assembled in the dbtr_oa set. the whole process of positive set construction is illustrated in the leftmost part of figure  <dig> 

non-protein-coding transcripts
files containing sequences from rnadb  <cit> , noncode  <cit>  and rfam  <cit> , currently the three most comprehensive ncrna databases, were downloaded in october  <dig>  comprising a total of  <dig>  sequences. nucleotide redundancy removal was done using blastclust with l =  <dig> , s =  <dig>  and w =  <dig>  orf prediction and redundancy elimination was carried out in the same way as in the positive set. the resulting  <dig>  transcripts with orfs and corresponding proteins integrated the dbtr_op set, while remaining transcripts were merged into the dbtr_oa set. this process is shown on the rightmost part of figure  <dig> 

feature vectors
training and testing sets must be input as numerical values to the svm. properties, or features, which represent sequences as values are collectively called the feature vector. qualitative properties are quantified, and all properties are individually normalized to real  numbers in the range . all features were obtained using locally written perl scripts, except for compositional entropy. normalization procedures, the number of allocated variables and references supporting each feature's discrimination potential  <cit>  are shown in table  <dig> .

*includes nucleotide, dinucleotide and trinucleotide composition.

**used only on protein-independent models.

§ used only on protein-dependent models.

svm optimization, training and testing
dbtr_op and dbtr_oa were further randomly sub-divided on optimization, training and testing subsets, comprising, respectively,  <dig> ,  <dig>  and  <dig>  instances for dbtr_op, and  <dig> ,  <dig>  and  <dig>  instances for dbtr_oa. optimization set was used to obtain the best pair of values for two crucial svm radial basis function  kernel parameters, the gamma and c, determined from a 10-fold cross-validation grid search. training sets were used to induce svm models, and test sets  were used to estimate performances of induced models.

efficiency measures
estimations of model performance are evaluated by traditional methods, such as efficiency formulae, cross-validation, roc curves and running time comparison between related programs.

efficiency formulas and runtime comparisons
for estimation of classifier accuracy, we used cross-validation  with dbtr_op and dbtr_oa as training/testing sets. figures obtained for portrait and naïve bayes  were compared to those reported in the literature for cpc.

when only the protein-dependent model is used, portrait presents a cv accuracy of  <dig> %, while the cv accuracy for portrait using solely the protein-independent model is  <dig> % . looking at the cv results from portrait running with both models, however, it had slightly worse accuracy than cpc . on the other hand, portrait performs comparably to cpc  when used for prediction of dbts_op and dbts_oa . cpc has higher accuracy for identification of mrnas , while portrait correctly identifies a greater amount of ncrnas . the lightweight programs used by portrait result in a considerable speed improvement, as can be seen in table  <dig>  as expected, the nb classifier had worse performance but yielded a speed advantage over the svm-based classifiers .

acc = accuracy; spc = specificity; sen = sensitivity; f-m = f-measure; ppv = positive predictive value; cv acc. = cross-validation accuracy. prediction threshold in all measures was  <dig>  for all classifiers.

*all processes were run on a intel® xeon™  <dig>  mhz ×  <dig> with  <dig> mb ram computer. runtime refers to prediction of  <dig>  sequences from dbpb.

**as reported by kong et al,  <dig>  training set used was not dbts.

roc curves
roc curves  estimated from prediction of dbts_op and dbts_oa corroborate portrait's superior performance when compared to nb. the area under curve , an efficiency measure calculated from roc curves ranging from  <dig>  to  <dig>  , is  <dig>  for portrait,  <dig>  for naïve bayes and  <dig>  for random classifier. cpc and conc were excluded from roc analysis because of output score normalization issues and the long time taken for processing dbts sets, respectively.

test sets
induced classifiers were used to evaluate the coding potential of transcripts from three test sets. the first one is dbrd, comprising  <dig>  randomly generated transcripts with lengths varying from  <dig> to  <dig>  nt. another set is dbpb, which harbors  <dig>  assembled ests generated during transcriptome sequencing of the pathogenic fungus paracoccidioides brasiliensis  <cit> . the third set is dbfg, composed of  <dig>  transcript sequences from organisms phylogenetically related to p. brasiliensis: ajellomyces capsulatus and aspergillus niger, and as outgroups, saccharomyces cerevisiae, schizosaccharomyces pombe and cryptococcus neoformans var. neoformans.

the number of transcript sequences from the test sets predicted to be ncrna by the classifiers is shown in table  <dig> 

*a transcript is considered ncrna if its prediction score is below  <dig> .

**a transcript is considered ncrna if it is labeled as "noncoding" by the program.

analysis of dbpb transcripts classified as ncrna
next we examined among the  <dig>  transcripts from the p. brasiliensis assembled ests those which were classified as non-coding by nb, portrait and cpc, all with default parameters. the dbpb set already has annotations attributed to its sequences, which were determined during a project that sequenced its transcriptome  <cit> . during assembly phase, transcripts assembled from more than one est were regarded as contigs, but if no consensus was generated from the sequence, it was named singleton. we assessed whether this set of potential ncrnas was enriched for specific annotation terms, as well as contigs or singletons. figure  <dig> shows that all classifiers tend to select as ncrna those transcripts without annotation, and that those with annotations possess terms that may question the correctness of their descriptions. these terms were: "putative", "probable" and "hypothetical". moreover, the majority of these sequences are singletons.

using the dbpb est, portrait classified 16% as potential ncrnas, 83% of those being unannotated sequences, thus presenting parallel evidence that those transcripts may not indeed code for proteins . it is important to note that this result corroborates non-coding status as an independent diagnostic only for portrait and nb, because these are the only ab initio classifiers. additionally, 81% of the transcripts predicted as ncrnas were singletons, corroborating evidence that ncrnas are expressed at levels lower than mrnas and thus tend to be assembled as singletons  <cit> .

CONCLUSIONS
in this work we report an algorithm for identifying non-coding rnas in a transcriptome context. the distinguishing characteristic of our approach is the focus on non-model organisms: by using an orf translation program sensitive to low-quality est sequences, and also by choosing only ab initio features. even if the input sequence has been disrupted by frameshifts or indels to an extent where orf identification is compromised, still the query transcript may be classified as protein-coding by the protein-independent svm model of portrait. therefore, our predictions are not biased to classify as ncrna transcripts that may actually code for novel proteins, rare or even absent in the databases. this may be a factor contributing to the high specificity of portrait . also, our training set includes several recent ncrnas and mrnas from all life domains, including prokaryotic and eukaryotic sequences. these factors make our program ideal for analysis of neglected or poorly characterized species.

differences from the ab initio approach also show up in the number of transcripts predicted to be non-coding in comparison to the other classifiers . compared to svm, the nb algorithm is notably less complex and less robust to inconsistencies in the training set. thus, when looking at the number of predicted ncrnas in the dbpb and dbfg sets, one may infer that the rules derived by this algorithm for identifying ncrnas are far too simple, leading a significant amount of ncrnas to be misclassified as mrna . on the other hand, cpc classifies all transcripts from dbrd as being non-coding. at a glance, this result seems consistent; however, some of these randomly generated sequences could be "real" mrna transcripts encoding for novel proteins not found in the databases . this scenario is plausible for sequences from the transcriptomes of neglected organisms, for which very little is known and where there is the potential for novelty. taking this hypothesis into account, cpc may not be suitable for this situation because it may be biased for classifying as non-coding those transcripts lacking good hits from protein databases. portrait emerges as a compromise between nb and cpc: it predicts as ncrna a reasonable number of the transcripts from dbpb and dbfg, and also classifies some dbrd transcripts as mrna, despite not having come into contact with similar sequences in the training phase.

we propose portrait, a software for ncrna screening in transcriptomes. our method is tailored to the analysis of neglected organisms: 1) we use a 6-frame translation scheme that takes into account sequencing errors and is optimized for small or truncated sequences; 2) no homology information is used; 3) only lightweight programs are used, so the method is suitable for less powerful computers. the output of the program may also provide insights or a second opinion about the coding status of known protein-coding transcripts. subsequent homology analyses are up to the researcher and constitute an independent, parallel experiment.

availability and requirements
• project name: portrait

• project home page: 

• operating system: linux

• programming language: perl

• other requirements: libsvm  <dig> , cast  <dig> , angle

• license: gnu gpl

• any restrictions to use by non-academics: portrait is free for commercial use, but third-party authors of programs used by portrait must be contacted.

authors' contributions
mmb designed the methods for the study and coordinated the work. rta performed data collection and processing, algorithm implementation and interpretation of results under the supervision of mmb and rct. rct managed software execution, data integrity and webserver construction. rta wrote most of the manuscript, which was critically reviewed by all authors. all authors read and approved the final manuscript.

supplementary material
additional file 1
portrait standalone package. for working properly, portrait still needs the following third-party softwares: libsvm v <dig> , cast v <dig>  and angle.

click here for file

 additional file 2
svm feature weights. the one hundred and fourteen variables and respective discrimination scores.

click here for file

 additional file 3
list of transcript sequences identified as ncrna, along with individual confidence scores. annotations attributed by felipe et al.  are included in sequence description.

click here for file

 acknowledgements
rta is supported by a grant from national counsel of technological and scientific development – cnpq – brazil. the authors thank embrapa for lending computers for this study. rta acknowledges dr. kana shimizu for providing specially designed angle software.
