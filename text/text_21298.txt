BACKGROUND
introduction
one of the most important biotechnologies developed in the 20th century is the sanger method for the sequencing of dna  <cit> . recently developed next-generation dna sequencing  technologies have increased dna sequencing capacity by many orders of magnitude, making entirely new applications possible  <cit> . chromatin immunoprecipitation  is a biochemical method to identify binding sites on dna that interact with proteins. it involves cross-linking proteins to dna with a reagent such as formaldehyde, randomly shearing the dna into small fragments  , then using an antibody specific for a known dna-interacting protein to isolate dna fragments bound to the target protein  <cit>  .

the combination of the chip process and microarray dna chip technologies lead to the method of chip-on-chip  <cit>  or chip-chip  <cit>  that can identify dna fragments isolated by chip using a dna microarray containing large numbers of probes of known genomic sequences. chip-seq  <cit>  uses next-generation sequencing  to identify the dna fragments isolated by chip. next-generation dna sequencing machines are capable of simultaneously determining the sequences of millions of dna fragments in a single sample with a high degree of accuracy . the sequence reads  obtained from ends of chip-selected dna fragments are typically 25- <dig> base pairs long. these short reads can then be mapped to a reference genome by a stringent dna sequence alignment algorithm such as eland , maq  <cit> , or bowtie  <cit>  . sequence reads that do not map to a unique position on the genome  are generally discarded. the final product of such a mapping procedure is a set of positions on the reference genome indicating the start and end of each short sequence read. once the reads are mapped to the genome, the tag positions can then be analyzed for clusters of tags or "peaks", which indicate  protein binding  positions enriched by the chip . the results of chip-seq studies can provide an unbiased genome-wide profile of dna regulatory regions targeted by transcription factors as well as the signatures of modified histone proteins associated with epigenetic changes in chromatin. figure  <dig> shows a framework for a chip-seq experiment and analytic workflow  <cit> .

peak detection is the last and probably most crucial and dynamic step in the process of the chip-seq method and system after fragmentation, immunoprecipitation, sequencing, and mapping. along the pipeline, the set of mapped sequence tags can easily acquire noise from background contamination, co-precipitation of unbound dna fragments, non-specific interactions of the chip target protein with dna, and a variety of sources such as replication and amplification artifacts . a useful chip-seq peak detection technique or tool has to be robust and reliable. with the rising popularity and increasing importance of chip-seq, there has been a proliferation of new analytical and computational methods to find peaks in chip-seq data. at the last count, there are over  <dig> open source programs, in addition to many commercial software applications, available to the research community  <cit> .

the first step in the peak detection process is to identify those genomic regions with a large number of mapped sequence tags   <cit> . then the peak detection and identification system must determine the number of tags  or directionality score  that constitutes enrichment "significant" enough to represent a protein-dna binding site. in this way, tag count  is a scoring function in which the system assigns a number to each possible region. often, a tag count threshold is chosen to define a peak  <cit> . one way to set this threshold is to compare the distribution of tags in enriched regions to tags that are placed randomly on the genome. the outcome is a significance value  of the sequence tag enrichment. this value  is also a scoring function used to select peaks  <cit> . some methods use sequence data from a control dataset and then use the control tag densities to assess the significance of peaks in the chip sample set. in this case, a fold enrichment  ratio of chip tag count over the normalized control tags in the candidate regions is calculated to give another scoring function  <cit> . different methods use various statistical models to assess the significance of chip peaks or assign a false discovery rate  to each peak with respect to control data  <cit> .

recently, pepke et al  <cit>  gave a review of the major steps in chip-seq analysis and described the algorithmic approaches of twelve existing programs for detecting peaks. laajala et al  <cit>  gave some metrics for evaluating various methods of peak detection. wilbanks and facciotti  <cit>  compared the performance of eleven different peak calling programs on common empirical, transcription factor data sets. their work offers a variety of ways to assess the performance of each algorithm and address the questions as to how to select the most suitable among several available methods of chip-seq analysis for peak detection. in our study, we evaluate six methods: cisgenome, macs, peakseq, quest, sissrs, and trlocator  <cit>  based on the three attributes: tag count, p-value, and fold change, and their combinations. we then analyze the merged results of all two-method combinations. in particular, a recently developed information fusion method, combinatorial fusion analysis  <cit> , is utilized to demonstrate that chip-seq peak detection can be improved by fusion using score or rank combination. our study offers an alternate approach to select a suitable method for chip-seq analysis. this study also offers ways to improve existing methods by combining them in an appropriate way using combinatorial fusion analysis.

based on preliminary experiments, we have observed that the peak-detection abilities of available chip-seq methods and systems vary greatly depending on the type of protein that is targeted by the antibody used in the chip. we have identified three types of protein-dna interactions that generate very different results when the same peak detection system is used to analyze the chip-seq data  <cit> . the first observation is that transcription factors, such as e2f <dig>  bind strongly to a single highly specific dna sequence  near the transcription start site  of a gene, and are characterized by distinct chip-seq peaks ~ <dig> bases wide, with oriented tags that approximately follow a normal distribution. a second observed pattern is with transcription factors, such as sin3a, that bind weakly to dna together with co-factors, yielding wider chip-seq peaks  with a flat distribution of lower tag density and un-oriented tags. a third kind of chip-seq target, modified histone proteins, such as tri-methylated h3k <dig>  produce much wider peaks  and un-oriented tags  <cit> . in this study, we use a trimethylated h3k <dig>  data set  <cit> .

previous work
similar to the analysis of microarray gene expression data, many computational methods have recently been developed for the analysis of chip-seq data. in both cases, the proliferation of software and systems was an indication that it is difficult to find a single well-validated method that performs well in a variety of domain applications. it also depends on what criteria one uses to evaluate the systems. in this study, we use the following six methods and systems to analyze their intra- and inter-system properties and improvement by combination. they are  cisgenome  <cit> ,  macs  <cit> ,  peakseq  <cit> ,  quest  <cit> ,  sissrs  <cit> , and  trlocator  <cit> .

cisgenome  <cit>  uses a two-pass algorithm for peak detection to ensure adjustment for dna fragmentation length. it can analyze both chip-seq and chip-chip data, or combine the two. in order to correct many types of systemic bias created by sample preparation, amplification, sequencing , and alignment, it uses both a chip sample and a negative control sample  to compute fdr at each specific location. it also provides methods to detect binding regions, peak localization, and filtering.

quest  <cit>  provides a data-driven statistical analysis model to generate peak calls by leveraging the key attributes of the sequenced and aligned dna reads, such as directionality  and the original size of chip-isolated dna fragments. the statistical framework used is the kernel density probability estimation approach, which facilitates the aggregation of signals originated from densely packed sequence reads at protein interaction sites.

macs   <cit>  empirically models the shift size of chip-seq tags to enhance peak identification by taking advantage of the bimodal pattern of forward and reverse tags. macs also utilizes a dynamic poisson distribution to identify local biases in the genome.

site identification from short sequence reads   <cit>  estimates high read counts using poisson probabilities and calls regions where the peaks shift from the forward to the reverse strand. the sissrs method is attractive because it explicitly makes use of information from the orientation of tags around a protein binding site - where it is expected that forward strand tags will be found upstream of the true binding site and reverse strand tags downstream. this allows for very precise prediction of the actual binding site. however, for regions of low tag density or for histone methylation chip, where tags are not neatly oriented, it tends to create many different peaks across enriched regions, which may not be reproducible across replicates.

peakseq  <cit>  utilizes input-dna control data to refine the selection and scoring of peak regions in chip-seq experiments to improve the identification of transcription factor binding sites. since it has been observed that signal peaks in the control data are highly correlated with potential binding sites, peakseq compensates for this signal, caused by open chromatin structure, with a two-pass strategy. peakseq first identifies enriched peaks in the chip-seq data as candidate regions. these putative regions are then compared to the normalized control and the regions that are significantly enriched with mapped sequence tags relative to the control are identified as binding sites.

trlocator  <cit>  is a peak detection method that has been developed at nyu-chibi. the algorithm utilizes the distribution of the background data to compute p-values for putative peaks in the chip-seq data. putative peak regions are generated based on a variable merging window size that can be adjusted according to the kind of data set being analyzed. custom filters for finding qualified peak regions include: p-value, minimum number of tags within each putative peak, balance between the number of tags aligned to the positive strand and the number of tags aligned to the negative strand, and the log <dig> ratio between chip tags and background tags.

methods
combining peak detection systems
multiple scoring systems
we propose that the peak detection for each of the binding sites be viewed as a scoring system on the set of all possible binding site regions. different scoring systems for peak detection can represent different features/cues/attributes or different algorithms/methods/systems. they can also represent different technical replicates or different biological replicates using each of the same set of features or cues/attributes or the same algorithm or method/system. by using multiple scoring systems defined on the set of possible binding site regions to detect peaks for each of the binding sites, we can study the reproducibility of peak calls among different replicates. we also use multiple scoring systems to develop and design new algorithms with greater accuracy, efficiency, and scalability for detecting protein binding sites in chip-seq data alignment. we draw from recent research in combinatorial fusion  <cit> . using a rank-score characteristic graph to measure the scoring diversity  <cit> , combinatorial fusion has been an active research area in the past ten years in a variety of application domains such as microarray gene expression analysis  <cit> , motif finding  <cit> , protein structure prediction  <cit> , virtual screening  <cit> , information retrieval  <cit> , and target tracking  <cit> .

in our preliminary work, we analyzed the six individual systems according to three features, which include: tag count, p-value, and fold change   <cit> . we analyzed these features and their combinations according to average precision and observed that, in most cases, the tag count feature outperformed other features and combinations of features. since tag count was the most consistent and best performing feature between the methods, we choose to use the chip tag count as the score function to represent each method's scoring of the regions identified. let d = {d <dig>  d <dig> ..., dn} be the set of regions identified by system x and the score function sx be the tag count of that region . let the rank function rx be the function from d to n =  = { <dig> ,..., n} which is obtained by sorting the values in sx into descending order and converting the function sx into the function rx using the rank as its function value.

combining two peak detection systems
union
the union of two systems, x and y, u is the set of regions that contains all regions identified by x and all regions identified by y, where overlapping regions between the two methods are merged together to form new merged regions. all non-overlapping regions that belong to either x or y will maintain their genomic positions . each merged region will have a start position that is the minimum of all start positions of its overlapping regions from x and y, and an end position that is the maximum of all end positions of those overlapping regions. this new set of regions, u = {d <dig>  d <dig>  ..., dp}, is scored based on the tag counts of systems x and y, as follows. systems x and y have new score functions based on the regions in this union: sx' and sy'.

sx' is obtained according to the following:

single regions - if the region was identified by system x, the score is the tag count given by x; otherwise the score is  <dig> 

merged regions - the score is the sum of the tag counts for the regions  that were identified by x.

sy' is obtained in the same manner. the score functions are then scaled from  <dig> to  <dig> by the following normalization: score function sx': u → r is transformed to

 sx′*d:ux,y→ <cit> where,sx′*d=sx′d-sminsmax-smin, 

smax = max{ sx': d∈u}, and smin = min{ sx': d∈u}. sy' is also normalized accordingly. the rank functions rx' and ry' from u to n = { <dig>   <dig>  ..., p} assign a rank to each region after sorting the scores given by sx' and sy' in descending order, respectively. in order to provide a single score and rank for each region in u that is based on combined information from systems x and y, we perform score and rank combinations. the score combination for the union of systems x and y is defined as:

sux,yd=12sx′*d+sy′*dand the rank combination is computed according to:

 rux,yd=12rx′d+ry′d. 

intersection
the intersection of two systems, x and y, i is the set of the merged regions formed by overlapping regions of system x and y. i ⊆ u where i = {i ∈ u: i is a merged region that contains overlapping regions from both systems x and y}, giving the set i = {d <dig>  d <dig>  ..., dq}. the regions belonging to the intersection are scored in the same way merged regions are scored in the union. the score functions for systems x and y, based on their intersection, sx' and sy', assign a score to each of the merged regions that is the sum of the tag counts for the regions identified by x or y that are part of this merged region.

sx' and sy' are then normalized to the scale  <cit>   to give sx'* and sy'*. the regions of the intersection are ranked according to their score  to give rank functions rx' and ry'. similar to the case of union, score and rank combinations for the intersection of systems x and y are computed. the score and rank combinations are defined as: six,yd=12sx′*d+sy′*d and rix,yd=12rx′d+ry′d, respectfully.

example from h3k <dig> data set: the visualization in figure  <dig> shows peaks identified by all individual methods, along with the tss regi2on, near the arrdc <dig> gene . figure  <dig> demonstrates the intersection and union of the peakseq and quest methods in the area depicted above. the intersection contains the merged regions that are formed by overlapping regions between the two methods. the union contains these merged regions and all non-overlapping regions of the individual methods.

performance evaluation methods
average precision
for many transcription factors, dna polymerase ii, and some modified histones such as tri-methylated h3k <dig>  the majority of binding sites are located near the transcription start sites  of expressed genes. therefore, it is possible to evaluate chip-seq software systems, and different combination methods, by their ability to locate peaks at a tss. while not all true peaks are located at a tss, not all tss are correctly annotated in the reference genome, and not all true tss have such a peak, the ratio of peaks located at an annotated tss vs. those located elsewhere on the genome is a measure of precision of the peak finding method. we have validated this concept by visualizing all aligned tags on the genome without first identifying peaks. peaks can be observed in the vicinity of most tss annotated in the refseq database. an average peak can be visualized by superimposing the coverage depth of sequence reads for dna regions within  <dig> bases flanking all annotated refseq tss . no tss peak is found in control dna.

in this evaluation, we compare the peaks identified by a particular system  against the set of refseq tss in the human genome. average precision is used to evaluate the performance of systems and the result of fusion. a region is considered relevant if it overlaps with a tss in the annotated set. we define the following overlap function for a region at rank i:

 o= <dig> regionoverlapswithatss <dig> otherwise 

precision at rank r is computed as:

 p=∑i=1ror 

average precision for a system that identifies n regions is defined as:

 ap=∑r=1n×o)n. 

systems that have more regions in lower ranks that overlap with a tss will have higher average precision.

coverage
when evaluating the performance of a peak finding system, it is also important to consider its coverage, in terms of the breadth of tss covered by its peaks . given a set of regions identified by a system or combination method, we generate the set of tss that overlap with these regions; the coverage  is the number of unique tss reached by the system:

 c = tss that overlap with regions of system. 

RESULTS
system fusion and evaluation
the chip tag count for a region is used as a score function to create all 2-combinations of the six systems: cisgenome, macs, peakseq, quest, sissrs, and trlocator. we perform two kinds of combination: intersection and union . the intersection of two systems is expected to improve specificity  while the union is expected to improve sensitivity . when evaluating each system or combination of two systems, we use average precision and coverage . these results are listed in tables  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> with corresponding diagrams in figures  <dig>   <dig>   <dig>   <dig> 

tables  <dig>   <dig>  and  <dig> list the average precision for the six individual systems and all fifteen 2-combinations by intersection  and union . the six individual systems in order of performance according to average precision are: a = trlocator, b = macs, c = peakseq, d = quest, e = cisgenome, and f = sissrs. in table  <dig>  it can be observed that all 2-combinations by intersection are positive cases, which means its performance is better than or equal to the best of the two individual systems. each of the two combinations: a*e between trlocator   and cisgenome   and a* f between trlocator   and sissrs   is better than the three 2-combinations a*b, a*c, and a*d that involve trlocator  , macs  , peakseq  , and quest  . moreover, each of the 2-combinations b*e and b*f is better than the other 2-combinations b*c and b*d. this phenomenon is quite interesting - individual systems such as cisgenome   and sissrs  , which are lesser preferred, can be combined with other systems  ) to outperform other system combinations. almost all of the 2-combinations by union  in table  <dig> are negative cases - the performance of the 2-combination is less than the best performance of the single cases - except for the 2-combination of b+c . it is also interesting to note that the three 2-combinations a+c, a+d, and a+e are better than the 2-combination a+b, reflecting the same phenomenon observed in table  <dig> 

tables  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> list the four cases of inter-system fusion: average precision for 2-combinations by intersection and by union; and coverage for 2-combinations by intersection and by union. the huge difference between average precision of the intersection and union is that the former has all the positive 2-combination cases, while the latter has all  negative cases. comparing table  <dig> and table  <dig> we find that each of the unions of two systems in table  <dig> has higher coverage than those of the intersections of two systems in table  <dig>  another difference is that in table  <dig>  2-combinations c*d, c*e, and d*e move up to the second, third, and first ranks, while in table  <dig>  the 2-combinations involving cisgenome   and sissrs  , such as a+c, c+f, b+c, a+f, and b+f move up to the top five rankings.

discussion
evaluation of peak detection systems involves analyzing the regions identified as peaks according to criteria such as the average precision and tss coverage.

average precision measures the performance of a system according to higher scoring regions overlapping with a tss. the intersection of two methods refers to the set of regions formed by extracting overlapping regions between two methods and merging them to form new regions. this set of regions represents the common peaks detected by both systems. the average precision of all  <dig> 2-combinations improved when the intersection was evaluated. combination by union only produced one result that improved average precision, macs and peakseq.

when evaluating system combination according to tss coverage, we refer to the number of unique tss regions reached. when using the method of union to combine, all  <dig> 2-combinations show improvement from both original systems. the result of combining two methods by union includes all overlapping regions that are then merged , in addition to all other regions belonging to each individual method. some combinations show more improvement than others, which indicates that regions generated by those  <dig> systems are more diverse in terms of region location. for example, the regions identified by cisgenome overlap with  <dig> unique tss, and the coverage of peakseq is  <dig>  the combination of cisgenome and peakseq by union yields results that have a coverage of  <dig>  which means the combined result reaches many more tss. another example is for macs and trlocator, which individually have similar performance for coverage,  <dig> and  <dig>  respectively. however, the combination of macs and trlocator by union greatly improves the performance and now reaches  <dig> unique tss; this demonstrates the diversity of the two systems. when using the method of intersection for system combination,  <dig> out of  <dig> combinations outperformed their component individual systems. since the intersection consists of the merged, overlapping regions of two methods, improvement would take place if the merged region reaches a tss missed by the regions before being merged.

CONCLUSIONS
this study entails the evaluation of and selection among multiple detection systems for chip-seq peak identification. in order to do so, we use six well-known methods a = cisgenome, b = macs, c = peakseq, d = quest, e = sissrs, and f = trlocator and obtain the regions identified by each on a common chip-seq data set and utilize the tag count as a score function representing each method. we define two methods to combine and rescore the regions of two systems, namely, union and intersection. average precision and tss coverage are used to evaluate the performance of all 2-combinations of these six systems. we summarize our results as follows:

 average precision of intersection: all 2-combinations are positive cases

 average precision of union: all 2-combinations  are negative cases.

 coverage of intersection: some 2-combinations are positive, while some are negative.

 coverage of union: all 2-combinations are positive cases.

 in the case of coverage of intersection, 2-combinations d*e, c*d, and c*e are ranked # <dig>  # <dig>  and # <dig> among all  <dig> 2-combinations, respectively. for the coverage of union, 2-combinations a+c, c+f, b+c, a+f, and b+f are ranked # <dig>  # <dig>  # <dig>  # <dig>  and # <dig> among the  <dig> 2-combinations, respectively.

in summary, we have the following observations resulting from the above experiments:

• there is no single answer as to the selection of available methods  for chip-seq peak detection. it depends on the criteria  and performance evaluation .

• combinations of different methods  do improve results in many cases . some combinations of lesser preferred systems may outperform all other system combinations.

• average precision improved more when combining two systems by intersection and coverage improved more when two methods are combined by union.

• the use of the rank function in our evaluation of multiple detection systems provides a generic framework to study the preference and relative preference for the method  selection process.

in our future work, we will explore conditions such as diversity between or performance ratio of two methods  of which two or more systems should be combined to obtain a better system . future work also involves application of method combination to other proteins and transcription factors. as not all tss may be annotated in the reference genome, identifying high-scoring regions among multiple methods can also be used to suggest potential tss.

competing interests
the authors declare that they have no competing interests.

authors' contributions
cs contributed to the design and implementation of the project, performance evaluation, and analysis, as well as to the preparation of the manuscript. sb contributed to the conception and design of the project and evaluation methods, acquisition of data, interpretation of results, as well as manuscript content. zt implemented a peak detection system, applied it to the chip-seq data set, and interpreted the results. ps designed and implemented a system for visualizing chip-seq tags and tss on the genome. dfh contributed to the conception and overall design of the project, combinational fusion methods, evaluation and interpretation of results, and manuscript content.

author information
cs is currently in the division of computer science, mathematics and science at st. john's university.

