BACKGROUND
high throughput  molecular technologies are at the core of new capabilities to derive genomic-level profiles oforganisms  <cit> . one challenge often not addressed in the context of htp technologies is the relationship of the analyses to the defined structural annotation of the genome. for example, the accuracy of global bottom-up proteomics is directly dependent upon accurately defined open reading frames , because spectra are matched directly to an in silico enzymatic digest of the predicted proteins. although a well-annotated genome is typically needed to analyze htp data, it is also true that htp data can contribute to genome annotation. specifically, both next-generation sequencing transcriptomic data  and tandem mass spectrometry -based proteomics have demonstrated immense value to genome curators  <cit>  to locate features such as missed genes and intron/exon borders. while the procedural aspects of genome sequencing and assembly have become relatively inexpensive, the full and accurate annotation of these genomes, and integration of htp data types to improve structural genome annotation is not straightforward, still very labor-intensive, and few computational tools have been developed to address this issue.

the development of rna-seq has been a major leap forward for transcriptomics, providing data to identify differentially expressed genes, as well as improve structural gene annotation. common tools to process rna-seq data, such as igv  <cit> , samtools  <cit> , tablet  <cit> , and bambino  <cit> , focus on aligning individual reads with the genome, because the number of reads aligned with particular genes can be used as a metric to quantify differential gene expression within the context of an experiment. although most rna-seq experiments are focused on differential expression, the expression pattern in the context of the genome can yield information about transcriptional units, such as operons, and annotation errors, such as missed genes. similar observations can also be made from other transcriptomics platforms, such as tiled arrays. however, visualization and analysis of these data in genomic context, in order to enhance the annotations or make inferences about mis-annotations, remains a challenge.

while transcriptomics data can give valuable insight into genome annotation, transcription does not necessarily mean translation into protein. mass spectrometry-based proteomics can fill this gap through global identification of proteins expressed in a sample. however, similar to transcriptomics, proteomics usually focuses on comparative studies to identify differentially expressed proteins. in particular, in tandem mass spectrometry , spectra from proteolytic peptides are matched to theoretical spectra derived from candidate peptides from a defined genome annotation. in this traditional manner, only peptides from an annotated gene will be identified. however, in theory, proteomics data includes spectra from any gene translated into protein. thus, an alternate strategy is to match spectra against peptide candidates from any potential open reading frame between two stop codons in any of the six frames of the dna - proteogenomics. proteogenomics experiments have successfully corrected gene locations , located novel genes, and identified additional various mis-annotations, such as frameshifts  <cit> ; however, because mass spectrometry-based proteogenomics analyses require investigation of large numbers of potential peptides relative to the standard analysis, parsing and visualizing this data is challenging. current software tools for proteomics data primarily focus on the processes of peptide identification, quantification and statistical comparison  <cit> , whereas for proteogenomics, prokaryotic genome browser tools such as artemis  <cit>  or gbrowse  <cit>  have been used due to their ability to compare different gene annotation models. to use these genome browsing tools for proteomics requires significant data formatting on the side of the user, because peptide identifications must be put into a standard format, such as a general feature format . furthermore, there is no simple way to search for locations of interest in the genome, such as peptides located outside the defined gene annotations.

we present a novel software platform for visual exploration and statistics to promote annotation . vespa was developed as a specialized tool within an overarching tool suite focused on the visualization and statistical integration of multiple data sources in a genomic context. vespa  <dig> . <dig> is a client-side java application focused on assisting scientists with the annotation of prokaryotic genomes through the integration of proteomics  and transcriptomics  data with current genome location coordinates. vespa visualizes all potential reading frames in a genome and has the capability to browse and query the data to quickly identify regions of interest with respect to structural annotation . a basic proteotypic peptide statistic called svm technique to evaluate proteotypic peptides   <cit>  can be computed within vespa, and used to filter peptides displayed in the visualization and queries. in addition, sequences of interest can be sent directly to blast  <cit>  to assess the homology of genes identified within vespa to known genes in the public databases. alternatively, information extracted from the data, based on user queries to locate regions of interest, can be exported in easy-to-use formats for continued exploration outside of vespa. vespa is freely available at https://www.biopilot.org/docs/software/vespa.php. here, we demonstrate the capabilities of vespa with several use-case scenarios.

implementation
there are two modules in vespa, an independent data analyzer module and the user interface  platform. these two modules are installed together as one application built entirely in java including an embedded h <dig> database http://www.h2database.com. from the data import and analytical operations, performance gains were obtained by a fast database running in embedded mode and by modularizing technical analysis of different types of data in several phases. most of the intensive processing is performed at project creation or load so that quick data retrievals are possible.

the vespa user interface is built using the netbeans platform and relies heavily on java 2d for its visualizations http://netbeans.org/features/platform. each visual component was built by extending existing swing components for containers and providing custom paint code to render data from specific ui rendering models. the netbeans platform provides a mature windowing system, module loader, persistence mechanism, and a service provider application programming interface . with the service provider api, we developed a custom extension point or service interface and a service provider implementation that wraps the analyzer. using this platform, the visualization modules can be dynamically registered on start-up. this approach allows new visualizations to be added to the software with relative ease and additionally allows for an "auto update" feature that will download updates and new modules without any additional installation steps.

the vespa data analyzer is written to read and process the various data types for storage in an h <dig> database. it relies heavily on the apache poi libraries http://poi.apache.org to handle reading and writing excel files. the analyzer is independent from the ui, so that it can be used to process data independently or to load projects behind the scenes. after processing and storing the data the analyzer serves up objects for the ui to visualize and query against. in-memory ui rendering models are used to provide a rapid response ui during navigation and trivial data filtering or searching. more complex searches and data exports are deferred to the database.

RESULTS
data import, processing and summarization
vespa works under the concept of a project which, when created, at minimum requires the genomic sequence of a chromosome or plasmid  and the defined gene features . proteomics data may be provided in an excel, csv or txt file, with at minimum two columns: one that contains the observed peptide sequences and a second that has an identifier for each peptide. currently, formats such as pepxml are not supported, but many convertors to excel are available  <cit> . vespa supports two types of transcriptomic data: probes or rna-seq. probes are imported in an analogous manner to peptides, with a single column for an identifier and a single column for the probe sequences. rna-seq data is imported as either a single sequence alignment/map  file, or two wiggle  files  in which an observed count value is given for every genome coordinate location. upon the completion of data processing and project creation, a summary panel  summarizes the components of the project in terms of each imported file. for organisms with multiple genetic elements, a unique project can be created and saved for each element using the same proteomics file and transcriptomic files tailored to each dna file. once projects are created, visualization of the data in the context of each dna element can be quickly achieved using the "load project" button.

visualization components
vespa displays four levels of genome resolution, shown in the default layout in figure  <dig>  the highest level of resolution is the genome view , which shows an entire chromosome or plasmid, on which the density of features, such as orphan peptides or rna-seq, can be displayed. the second level of resolution is the intermediate view  along the top of the visualization; this view allows the user to more easily navigate around the reading frame view . the reading frame view  is the primary visualization, displaying the double stranded dna as thin black lines, with the three positive reading frames above and the three negative reading frames below these lines. this view wraps from left to right, and thus more of the genome can be visualized than in a single linear view. the proteomic and transcriptomic data are displayed directly within the reading frame view, and can be viewed or hidden using the buttons on the top control panel . the resolution level of this screen can be modified by simply clicking on the "number of base pairs per pixel" and setting it to a desired level . the fourth level of resolution is displayed based on regions defined by the user; a click and drag activity opens the sequence view , where all of the specific nucleic and amino acids in that region are displayed and accordingly color-coded to match the reading frame view. all individual visualization components can be easily resized within the application or completely un-docked from the application main window to allow the user to customize the application to suit their analysis task. the user-defined settings will be restored each time the application is launched, although, under the "windows" pull-down selection the user may "reset windows" to the default view.

filter, query and export capabilities
the primary task of vespa is to allow the user to quickly identify regions of interest in the genome without scrolling through millions of basepairs. the basic query interface of vespa facilitates this, permitting targeted searches, such as for a specific gene  or sequence , or more general searches, such as peptides that are not associated with genes in the current annotation . these are termed orphan peptides, and are highlighted in yellow in the reading frame view, whereas peptides that are associated with an annotated gene are highlighted in light blue on that gene . the region between two stop codons  encompassing a potential open reading frame that could have produced a particular orphan peptide appears highlighted in light gray to give the user an intuitive feel regarding whether the orphan peptide indicates the potential mis-annotation of a unique open reading frame or an extension of an annotated gene . figure  <dig> displays the result of a query to identify any oss regions that have at least two orphan peptides. queries are currently peptide-specific, although orphan probes can be displayed and rna-seq data can be filtered based on a minimum count threshold. peptides can also be filtered based on the proteotypic peptide probability score defined by stepp  <cit> . this probability score gives an estimation of the likelihood of observing a peptide by ms-based proteomics based on the peptide amino acid sequence composition  .

users can export all orphan peptide locations and potential orfs that meet query definitions , or simple lists of orfs, peptides or probes with coordinates. furthermore, from within vespa, a protein sequence of interest can be used as a blast query to search for sequence homology with proteins in the public databases at ncbi, by a right click on the protein in the search or reading frame data panel . this gives the user a quick method to infer if an oss of interest has homology with an annotated gene from another species, and could potentially be a true orf.

discussion
simplified annotation discoveries through proteogenomic queries 
proteogenomics is focused on the utilization of ms/ms data to facilitate structural annotation efforts. vespa dramatically simplifies proteogenomic tasks by allowing easy upload, browse, query and export capabilities for genomic and proteomic data. to demonstrate these capabilities, figure  <dig> shows a screenshot of vespa displaying proteomics data from yersinia pestis pestoides f. the project creation took in the genome files downloaded from genbank  and an excel table containing over  <dig>  peptides, which were collected from a peptide identification search against protein translations of all potential coding regions in the y. pestis pestoides f genome. vespa imported these peptides as their raw amino acid sequences, matching each peptide against all potential reading frames in the genome, thus not requiring prior mapping of the peptides to genomic coordinates.

in the y. pestis pestoides f genbank file, there are  <dig> orfs with annotated start and stop positions, however, there are  <dig>  potential orfs . of the peptides identified against these  <dig>  translated orfs, there were  <dig> orphan peptides, peptides not fully contained within one of the  <dig> annotated orfs. a query for oss with at least two orphan peptides identified  <dig> regions, shown in the search results panel in figure  <dig>  these regions can be easily exported to an excel file, using the export capability shown in the bottom right panel in figure  <dig>  in the reading frame view, the defined coding regions are highlighted in dark blue and regions that are oss with orphan peptides associated with them are highlighted in light gray. all stop-to-stop regions can be observed by clicking on the green oss button in the top control bar. clicking on an oss name in the results panel will center the visualization on that region. in the example shown, the observed orphan peptides  are upstream and in the same frame as an annotated coding region for which many peptides were observed . a drag and click across this region brings up the sequence view , from which the specific peptide sequences and underlying dna sequence can be examined. this action reveals that there are no stop codons in the + <dig> frame in this region, suggesting that the start location of this orf  was mis-annotated. the locus tag and associated information for this gene, or for any feature in the visualization, can be viewed by simply clicking on the visualization feature to view the properties tab .

integrated omic data queries: simultaneous evaluation of proteogenomic and transcriptomic data 
vespa has been designed to integrate transcriptomics data into the visualization in the form of either defined probes  or rna-seq. probe data are imported as sequences in a similar manner to the proteomics import. all probes are drawn as defined by the sequence data in the input file, and are viewed on the dna strands as orange rectangles over the sequence region . the user can identify orphan probes or locate probes by sequence, but since probes are not associated with a defined frame they are currently not linked to oss. rna-seq data are imported as either two wig files, with coordinates and coverage values for the positive and negative dna strands, or as a sam file from which the coordinates and coverage values are computed. by default, the coverage values are displayed in the reading frame view as an orange histogram of the log of the coverage values. specific values are not shown, and the highest value is set to visually reach the edge of the +/- <dig> reading frame, and all other intensity values are scaled with respect to this maximum. vespa is most functional with both proteomics and transcriptomics data, however, it can be utilized with only transcriptomics data. current queries for interesting oss regions are peptide-centric and thus functionality without proteomic data is limited, but a topic of further development.

integration of proteomics and probe-based transcriptomic data
in addition to the proteomics data, microarray probe data were collected for y. pestis pestoides f  <cit> . there were  <dig> probes with expression values above the defined threshold :  <dig> overlapped completely with one of the  <dig> annotated orfs, and  <dig> were outside any annotated orf boundaries. figure  <dig> shows the vespa reading frame and sequence views for an example of a missed  orf between ypdsf_ <dig> and ypdsf_ <dig>  for which  <dig> unique peptides and  <dig> unique probe were identified. the probe data provides evidence of transcription and the peptides confirm the presence of a protein encoded in the + <dig> frame of this region. the "reading frame data" panel shows the names associated with each feature viewed in the reading frame view; a right click on the green oss orf- <dig> launches blast, the results of which show high homology to a  <dig> s ribosomal protein from other yersinia species . specifically, starting at residue  <dig>  of the oss, this short protein is an identical match to the l <dig> ribosomal protein in a number of y. pestis strains.

integration of proteomics and rna-seq transcriptomic data
to demonstrate vespa's integration of rna-seq data, we examined the chromosome of synechococcus sp. pcc  <dig> , which has  <dig> defined orfs and  <dig>  oss regions. to create this project, genome files from refseq were imported , together with an excel table of  <dig> peptides identified by matching the proteomics spectra to the protein translations from the oss regions for all  <dig> genetic elements  for this organism  <cit> , and a sam file of rna-seq coverage values for the chromosome  <cit> . vespa identified  <dig> peptides that map to the annotated orfs and  <dig> orphan peptides, show in yellow in figure  <dig>  the rna-seq data are shown in the visualization as an orange histogram of the log of the coverage value at each position. figure  <dig> shows an example in which two neighboring oss regions in the - <dig> and - <dig> frames, between synpcc7002_a <dig> and synpcc7002_a <dig>  have peptide evidence from several observed peptides and rna-seq data observed on the negative strand along this entire span. examination of the genome feature file  reveals that these two oss regions belong to synpcc7002_a <dig>  which is annotated as a pseudogene; specifically, the glycerol kinase gene rendered non-functional by a frameshift. a further evaluation of this region via blast confirms that both oss regions have high homology to other cyanobacterial glycerol kinases that are intact . while it is possible that an intact synpcc7002_a <dig> protein could be translated from the annotated gene by a mechanism such as ribosomal slippage, most known cases of translational frameshifting in prokaryotes are insertion sequence or phage genes  <cit> . thus the frameshift in synpcc7002_a <dig> is more likely the result of an error in the genome sequence; resequencing of this region of the synechococcus sp. pcc  <dig> genome has in fact revealed errors in the original dna sequence, the correction of which results in an intact synpcc7002_a <dig> gene .

we also used the synechococcus sp. pcc  <dig> data to demonstrate the value of rna-seq data viewed in combination with weak peptide data. specifically, in the synechococcus sp. pcc  <dig> proteomics data there are five oss regions with at least two orphan peptides, and an additional  <dig> oss regions with only one orphan peptide. single orphan peptides are often false identifications and thus dismissed without further investigation, however in these cases, rna-seq can be very useful to separate true from false peptide identifications. figure  <dig> shows an example of an oss region in the + <dig> frame with a single identified peptide. using vespa to view the rna-seq data in this oss region with a filter requiring log >  <dig> shows a clear expression pattern, supporting the idea that a missed orf is coded in this region. a blast search for homologs to this oss identifies a putative conserved domain  and  <dig> sequences in the ncbi nr database with significant alignments . in this case, all the significant alignments were to a hypothetical protein, and the highest scoring alignment was to a protein from nostoc azollae  <dig> .

CONCLUSIONS
despite recent advances in the generation and processing of high-throughput proteomics and transcriptomics data, the availability of visual analytics tools for the purposes of studying genome annotation, as well as the integration and exploration of these data streams in concert, remains a challenge. here we have presented vespa, a freely available software tool, for the purpose of proteogenomics and the integration of peptide-centric data with other forms of high-throughput transcriptomics data. the proteogenomic queries available through vespa enable the discovery of regions of mis-annotations in a rapid manner, which can reduce the number of candidate reading frames for evaluation.

while vespa and similar software tools facilitate data integration to improve genome annotations, the contribution of annotation corrections back to the genome databases is an ongoing challenge within the genomics community. ncbi does provide a mechanism to submit third party annotations based on experimental evidence http://www.ncbi.nlm.nih.gov/genbank/tpa. though these annotations do not become incorporated into the whole genome annotation unless the genome project owner updates the genome, this at least provides a mechanism to make specific gene annotation corrections found using vespa publicly available.

vespa is designed with a plug-in-play architecture to allow the addition the new visualizations and query interfaces. future development will include the enhancement of these capabilities, such as the ability to query and filter on transcriptomic data and the visualization of chip-seq data. in addition, vespa enhancements are planned that will allow ingest of additional data formats , and facilitate the analysis of genomes with multiple genetic elements. since vespa has an auto-update feature that will notify the user when newer versions are available, the user will have nearly immediate access to these features as they are added.

methods - biological case studies
synechococcus sp. pc 7002
the synechococcus sp. pcc  <dig> data generation methods have been described previously  <cit> , thus the data generation and analyses will be only briefly described here. the proteomics and rna-seq experiments were performed on cells grown under atmospheric co <dig> levels to study photorespiration processes in this organism.

lc-ms/ms
the synechococcus sp. pcc  <dig> cell samples were processed for lc-ms/ms proteomics essentially as described previously  <cit> ; the peptide identification computations were performed at the molecular sciences computing facility at the environmental molecular sciences laboratory . ms/ms peaks were determined using deconmsn, v <dig>   <cit>  and mspolygraph  <cit>  was used for identifying peptides. tryptic peptides were searched for using a parent mass-to-charge window of +/-  <dig> da, and fragment ion windows of +/-  <dig> da. two missed cleavages were allowed for peptides with a parent mass charge of + <dig>  three for + <dig> parent mass peptides, and four missed cleavages for peptides with a parent mass of + <dig>  the spectra were searched against a six frame translation  of the synechococcus sp. pcc  <dig> genome and plasmids  and spectra matching peptides at least six amino acids in length reported. for estimating error rates, random peptides were generated using the program mimic, released with percolator  <cit> . the false discovery rates  were estimated with qvality  <cit> . peptides identified at a q-value < 5% were retained for visualization in vespa.

rna-seq
the synechococcus sp. pcc  <dig> rna-seq data were generated from an  <dig>  μg rna sample using a solid™ whole transcriptome analysis kit  and the solid™ 3plus protocol as described previously  <cit> . sequencing was performed at the genomics core facility at the pennsylvania state university . the raw rna-seq data were processed as described previously  <cit> , the sequence reads mapping to rrna-coding regions removed and a sam file generated for vespa import.

yersinia pestis pestoides f
the y. pestis pestoides f data were a subset of data collected for a larger experiment focused on the comparison of genome annotations across multiple yersiniae strains  <cit> . here we briefly describe the methods used to generate the proteomics and global microarray data.

lc-ms/ms
peptides  from global preparations , and scx fractionated samples  were separated by a custom-built nanocapillary hplc system. the eluate from the global preparations and fractionated samples was directly analyzed by electrospray ionization  using a ltq orbitrap velos mass spectrometer or linear ion trap  mass spectrometer , respectively. raw data are available to the public at http://omics.pnl.gov. ms/ms fragmentation spectra were searched against a six frame translation  of y. pestis pestoides f genome and plasmids using the sequest peptide identification software  <cit> . the mass tolerance used for matching was set to ±  <dig> da. peptide identifications were retained based upon the following criteria: 1) sequest delcn <dig> value ≥  <dig> ; 2) sequest correlation score  ≥  <dig>  for charge state 1+ for fully tryptic peptides and xcorr ≥  <dig>  for 1+ for partially tryptic peptides; xcorr ≥  <dig>  for charge state 2+ and fully tryptic peptides and xcorr ≥  <dig>  for charge state 2+ and partially tryptic peptides; xcorr ≥  <dig>  for charge state 3+ and fully tryptic peptides and xcorr ≥  <dig>  for charge state 3+ and partially tryptic peptides. using the reverse database approach, the false discovery rate  was calculated to be <  <dig> % at the spectrum level.

universal yersinia microarray
the global microarray data included  <dig> designed oligos from y. pestis strains co <dig>  kim, pestoides f, antiqua, nepal <dig>  and biovar microtus str.  <dig>  and y. pseudotuberculosis. the array platform description and oligo list is available at ncbi gene expresssion omnibus  under accession gpl <dig>  scanning, image analysis, and normalization were performed as outlined in pfgrc standard protocol http://pfgrc.jcvi.org/index.php/microarray/protocols.html. individual tiff images from each channel were analyzed with jcvi spotfinder software . microarray data were normalized by lowess normalization using tm <dig> software midas http://pfgrc.jcvi.org/index.php/bioinformatics.html. oligos generating intensity signals ≥  <dig>  from samples prepared at  <dig> hour time point under  <dig> degree growth were considered to have positive hybridization above background and therefore incorporated as experimental measurements. transcriptomics data have been deposited in the geo repository under series accession gse <dig> 

availability and requirements
vespa is freely available at https://www.biopilot.org/docs/software/vespa.php with installers for windows xp, windows  <dig>  macintosh and linux. java runtime environment  <dig>  is required to run the application.

abbreviations
solid: sequencing by oligonucleotide ligation and detection; gff: general feature format; blast: basic local alignment search tool; api: application programming interface; ui: user interface

competing interests
the authors declare that they have no competing interests.

authors' contributions
bmw, esp and lam conceived the approach; esp, jlj mak and hw developed the software. acr, lam, srw, shp, cka, wrc and jna identified biological case studies and assembled the appropriate files. bmw, lam and esp wrote the manuscript and all authors read and approved of the final manuscript.

