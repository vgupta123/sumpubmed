BACKGROUND
as the number of protein sequences is exponentially growing, knowledge on their structures and functions is lagging far behind the growth rate of the number of new protein sequences because the experiments to determine structures and functions are difficult and time-consuming. one way to resolve this problem is computational methods such as structure and function prediction. in the case of protein structure prediction, computational methods fall into two categories; ab initio folding method and comparative modeling. ab initio folding method is based on physical principles and does not require prior knowledge on protein structures, but comparative modeling  <cit>  has shown superior performance throughout recent experiments assessing the effectiveness of structure prediction methods such as casp   <cit> .

the first step in comparative modeling is the fold recognition in which one searches for homologous proteins with known structure and chooses the best one that can be used as a template. after this process, the alignment between the selected template and the query protein is generated. finally the alignment is used to build the 3-dimensional structure models by using 3d model building tools such as modeller  <cit> . high-quality query-template alignments are, therefore, essential for successful homology modeling. thus, there are two factors that essentially determine the quality of predicted protein structures; good templates and high quality query-template alignments. there have been many approaches to increase the performance of fold recognition. progress in fold recognition has made it possible to increase the structural coverage of newly sequenced genomes  <cit>  and to improve our ability to predict the protein structures as demonstrated in recent casp experiments.

importance of alignment accuracy for comparative modeling has been already addressed  <cit> . among many sequence alignment methods, the easiest way is to use sequence-sequence alignments such as smith-waterman  <cit>  or blast algorithm  <cit> . other ways are to utilize evolutionary information: profile-sequence alignments such as psi-blast  <cit>  and sequence-profile alignments such as impala  <cit> . to get better alignments, it has been shown in many studies that using profiles of both the query and the template, named profile-profile alignment, are superior to sequence-profile methods and profile-sequence methods  <cit> . even though profile-profile alignments are better, they do not always provide the optimal alignments  <cit> . profile-profile alignments can be carried out in many different ways  <cit>  and the alignment results change as alignment options vary. there is no single best profile-profile method and the universal alignment option that always generates the optimal alignment.

to overcome this problem, some methods such as consensus  <cit> , esypred3d  <cit> , multiple mapping method   <cit> , and methods using genetic algorithm  <cit>  have used population of suboptimal alignments. esypred3d fixes the redundant results from suboptimal alignments and finds optimal alignments by moving anchor point. consensus make alignments by consensus of several alignments based on the consensus strength and by discarding the residues where alternative alignments differ. these two methods use limited number of alternative alignments. on the other hands, other two methods have used genetic algorithm to generate sub alignments as many as possible. after sets of model structure are constructed from alignments, score of each model is calculated by fitness function such as atom-atom potential  <cit>  and z-score  <cit> . however, these approaches take longer time, and alignments made by crossover are likely to be biologically meaningless. mmm, the recent study, focused on minimizing alignment errors based on its own scoring function by combining differently alignment segments from alternative alignments. mmm outperformed other methods and showed significant improvements.

we introduce here a novel method not only to predict the alignment quality but also to improve the alignment quality by support vector regression   <cit> . machine learning technique such as the artificial neural network  or support vector machine   <cit>  has been a popular tool for fold recognition, but is only available for feature vectors of fixed length. a new method in which all templates in template library have feature vectors of different lengths with profile-profile alignments scores has been recently developed  <cit> . in our work, a modified version has been used. among many different kinds of measures for the alignment quality, maxsub  <cit> , which has been used as a measure in assessment experiments of structure prediction such as casp  <cit> , cafasp  <cit> , and livebench  <cit> , is used to represent a measure of alignment quality. maxsub is a good measure of alignment quality in that it is a normalized single numeric and reflects structure-level quality.

our attempt to develop a method to predict the alignment quality is not entirely new. a related work  <cit>  has been published, but the alignment quality prediction was not their final research goal. rather, in the work by xu  <cit> , the predicted alignment quality was used to improve performance of fold recognition. in the present work, we develop a highly accurate method to predict the alignment quality, and we utilize the method not only to maximize the alignment quality and but also to choose good templates. in our work, an alignment of a query protein against its template of length n is converted into a feature vector of length n +  <dig> composed of profile-profile alignment scores and the length of the query protein. the predicted maxsub score is calculated by the svr model specifically built for that template. the test results show highly accurate regression performance. for a pair of a query and a template, various alignments are generated by using many different combinations of alignment parameters. the svr model for the template is then used to find the optimal alignment parameters which are specific to that pair. we name this method 'adaptive selection' method. the adaptive selection method outperforms the method which uses the universal alignment option for large-scale testing set.

RESULTS
performance measures of svrs
alignments are converted into  dimensional feature vectors which are input of svrs where n is the length of the templates . in order to evaluate the performance of the method, trained svr models are evaluated for the testing set. the correlation between observed and predicted maxsub values is presented in the density map . each column in the figure2a is normalized independently by dividing the number of alignments with a specific range of maxsub scores by the total number of alignments in that column. the number of alignments in each column is plotted on figure 2b. the highest density is represented by black squares; the lowest density is represented by white squares. the pearson correlation coefficient is calculated from the pairs of predicted maxsub scores and observed maxsub scores. the calculated correlation coefficient is  <dig> . a previous related work  <cit>  has reported the correlation coefficient of  <dig> , which is lower than that of the present method. however, because the testing set and the measure of alignment quality in the previous work  are different from those used in this work, direct comparison between the two methods may not have much meaning, although much higher correlation coefficient of our work seems to suggest that the present method is apparently better at predicting the alignment quality than the previous method. the good correlation coefficient and the density diagram with good diagonal shape imply that the maxsub scores as a measure of alignment quality can be accurately predicted. moreover, the results suggest that for each query-template pair it is possible to find its own optimal alignment parameters that would maximize the alignment quality.

in addition to the pearson correlation coefficient, three different measures of errors are also calculated. the first one is the mean absolute error  which is given by

 mae=1n∑i=1n|yi−oi|
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaacpc6xni=xi8qivkypfjydhavhbbf9v8qqaqfr0xc9vqfj0dxdbba91qpepei8k8fii+fsy=rqgqvepae9pg0db9vqaivgfr0xfr=xfr=xc9adbaqaaegacagaaiaabeqaaeqabiwaaagcbagaeeyta0kaeeyqaekaeeyraukaeyypa0tcfa4aasaaaeaacqaixaqmaeaacqwgobgtaagcdaaewbqaamaaemaabagaemyeak3aasbaasqaaiabdmgapbqabagccqghsislcqwgvbwbdawgaawcbagaemyaakgabeaaaogaay5bslaawia7aawcbagaemyaakmaeyypa0jaegymaedabagaemota4eaniabgghildaaaa@43ea@ 

where yi is the predicted value, oi is the observed value, and n the total number of the predictions. the normalized mae  is defined as follows

 nmae=1n∑i=1n|yi−oi|oi.
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaacpc6xni=xi8qivkypfjydhavhbbf9v8qqaqfr0xc9vqfj0dxdbba91qpepei8k8fii+fsy=rqgqvepae9pg0db9vqaivgfr0xfr=xfr=xc9adbaqaaegacagaaiaabeqaaeqabiwaaagcbagaeeota4kaeeyta0kaeeyqaekaeeyraukaeyypa0tcfa4aasaaaeaacqaixaqmaeaacqwgobgtaagcdaaewbqcfayaamaalaaabawaaqwaaeaacqwg5bqedawgaaqaaiabdmgapbqabagaeyoei0iaem4ba82aasbaaeaacqwgpbqaaeqaaagaay5bslaawia7aaqaaiabd+gavnaabaaabagaemyaakgabeaaaaaaleaacqwgpbqacqgh9aqpcqaixaqmaeaacqwgobgta0gaeyyeiuoakiabc6cauaaa@4952@ 

the last one is the root-mean-square error  given by

 rmse=1n∑i=1n <dig> 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaacpc6xni=xi8qivkypfjydhavhbbf9v8qqaqfr0xc9vqfj0dxdbba91qpepei8k8fii+fsy=rqgqvepae9pg0db9vqaivgfr0xfr=xfr=xc9adbaqaaegacagaaiaabeqaaeqabiwaaagcbagaeeouailaeeyta0kaee4uamlaeeyraukaeyypa0zaaoaaaeaajuagdawcaaqaaiabigdaxaqaaiabd6eaobaakmaaqahabawaaewaaeaacqwg5bqedawgaawcbagaemyaakgabeaakiabgkhitiabd+gavnaabaaaleaacqwgpbqaaeqaaagccagloagaayzkaawaawbaasqabeaacqaiyagmaaaabagaemyaakmaeyypa0jaegymaedabagaemota4eaniabgghildaaleqaaogaeiola4caaa@45bd@ 

mae, nmae, and rmse are  <dig> ,  <dig> , and  <dig> , respectively, also shown in table  <dig> and distributions of mae and nmae are shown in figure 2c and figure 2d, respectively. mae is always lower than  <dig>  for all the range of observed maxsub scores when the window size is set to  <dig> .

adaptive selection of the alignment options having the best maxsub score
the ultimate objective of predicting alignment quality is to find the best alignment. one straightforward, although not the best, way to do this is to choose a set of the optimal alignment parameters, such as gap opening penalty, gap extension penalty, baseline score, and the amount of secondary structure term, that would yield the best alignments overall. however, as seen in table  <dig> where the average maxsub scores for the alignments generated with various different combination of the alignment parameters are shown, there is no such single set of parameters that are universally optimal for all query-template pairs. for example, for the query-template protein pairs that are related at the family level, the optimal alignment parameters are  <dig>   <dig>   <dig>  and  <dig>  for gap opening penalty, gap extension penalty, baseline score, and the secondary structure information, respectively, while those parameters change to  <dig>   <dig>   <dig>  and  <dig> for the protein pairs that are related at the fold level. overall, the maximum of average maxsub scores is  <dig>  with the optimal alignment parameters of  <dig>   <dig>   <dig>  and  <dig>  which interestingly are not the optimal parameters for the protein pairs related at any level of similarity.

the results suggest the following alignment strategy. instead of using single universal set of alignment parameters for all query-template pairs, by simply picking up a different set of the alignment parameters that are uniquely optimal for a query-template pair, the alignment can be improved. if we do so, as seen in table  <dig>  the average of the overall maxsub scores improves from  <dig>  to  <dig>  .

obviously, we do not know a priori which set of alignment parameters is optimal for a given query-template pair because the structure of a query protein is not known. therefore, here we propose the 'adaptive selection' method. the adaptive selection procedure is carried out as follows.  generate the alignments using many different combinations of alignment parameters.  predict maxsub scores of alignments using the trained svr models.  select the alignment that gives the highest predicted maxsub score.

when we follow the adaptive selection procedure, the average of actual maxsub scores of the alignments selected by the adaptive selection procedure improves to  <dig>  , which corresponds to  <dig>  point or  <dig> % improvement, compared to the single best option procedure. this improvement is statistically significant . it also indicates that the adaptive selection method can scoop roughly  <dig> %  of the maximum improvement that can be achievable by selecting the optimal alignment parameters unique to each query-template pair. moreover, it also implies that it is possible to improve the alignment quality even more by developing more accurate alignment quality prediction method.

performance at three levels of scop hierarchy
in this section, we describe performance at three levels of scop hierarchy  to closely examine where the improvement is achieved. all the experiments carried out in the previous section are done for testing sets at the three different levels.

the density diagram in additional file  <dig> shows the correlation at the family level. it looks similar to figure 2a except that it shows weak correlation in low maxsub score region. the reason seems to be that alignments of pairs at the family level likely have high maxsub scores, and svr models have not experienced sufficient alignments that have low maxsub scores during the training stage. the correlation coefficient, mae, nmae and rmse is  <dig> ,  <dig> ,  <dig>  and  <dig> , respectively . additional file  <dig> shows the number of alignments in different regions of observed maxsub score. additional file  <dig> shows the correlation at the superfamily level. it shows rather weak correlation in high maxsub score region. the correlation coefficient, mae, nmae and rmse is  <dig> ,  <dig> ,  <dig>  and  <dig> , respectively . contrary to the case of the family level, there are not many examples in high observed maxsub region, which is the reason for weak correlation in high score region. the density map in additional file  <dig> represents the correlation at the fold level. the correlation coefficient, mae, nmae and rmse is  <dig> ,  <dig> ,  <dig>  and  <dig> , respectively . like the case of the superfamily level, it seems to show weak correlation at high score region.

in table  <dig>  the maxsub scores are presented at three different levels. the averages are  <dig> ,  <dig> , and  <dig> , and the values for best options are  <dig> ,  <dig> , and  <dig>  at the level of family, superfamily, and fold, respectively. these values are also compared with corresponding scores achieved by adaptive selection method . it is also observed that adaptive selection method shows higher performance at the every scop level as for overall testing set showing an improvement of  <dig> ,  <dig> , and  <dig> % at the family, superfamily and fold level, respectively.

to check diversity of test set, sequence identities of query-template pairs are presented in fig at each scop level, family , superfamily , and fold . the average values of sequence identity are  <dig> %,  <dig> %, and  <dig> % at each scop level, respectively. except for some pairs in the test set at family level, the sequence identities of almost all pairs are under 35%, "twilight zone  <cit> ." the distribution tells our results are not based on high sequence identity.

alignments of pairs that are not related
all protein pairs in the testing set used in the experiments share the similar structure at least at the fold level . it is, therefore, necessary to check whether the trained svr models show reliable performance for proteins which do not share the same fold. in order to check this,  <dig> unrelated proteins per each template are randomly selected, aligned against the templates, and transformed into feature vectors. the vectors are then applied to svr models of the templates to predict maxsub scores. all the observed maxsub scores are zero without exception. thus all the predicted values should be zero in ideal situation. histogram of predicted values is shown in figure  <dig>  unfortunately, most predicted values are not zero. the mean is  <dig>  and the standard deviation is  <dig> . we can infer here that svr models predict the maxsub scores larger than the true values in low maxsub score region. the histogram shows that the true maxsub scores of alignments predicted to have maxsub score near  <dig>  might be zero. thus, if a predicted maxsub is low and is not zero, it should be carefully examined.

alignments of the pairs whose maxsub scores are zero despite being in the same family
it is expected that two proteins in the same scop family have a similar 3d structure. there are, however, many alignments of the pairs in the same family for which observed maxsub scores are zero . when maxsub score is zero, the alignment is completely incorrect by definition  <cit> . for these pairs, we check how much improvement can be achieved by adaptive selection method. figure  <dig> shows histogram of maxsub scores which is given by adaptive selection method for the alignments of those pairs. for about  <dig> % of all pairs, there is no improvement, while about  <dig> % of pairs achieve some improvement. in other words, around 63% of completely incorrect alignments between a pair of protein related at the family level are corrected into partially corrected alignments by changing alignment options by adaptive selection method.

then, what are the reasons that remaining  <dig> % of pairs gain no improvement? the most obvious one is regression error. adaptive selection method might wrongly select an option due to regression error although there is another option that might give improved maxsub score. when we examine the data, it appears that  <dig> % constitute this type. second, it may result from the limitation of profile-profile alignments. it has been well known that profile-profile alignment is not always the optimal alignment when compared to the structure alignment. it may fail to align a query against a particular template with any alignment options due to problem of alignment method itself. the third reason may be the lack of alignment options in our method. although  <dig> options are used in our work, they may not be sufficient because the options used here do not cover all possible cases. for example, to align a particular pair of proteins, abnormally large gap open penalty might be necessary.

the fourth reason may be the limitation of maxsub score as a measure of alignment quality. there have been a number of assessment methods for alignment quality. it has been controversial what evaluation method is the best. there are many alternative measures such as gdt_ts  <cit> , lgscore  <cit>  and mammoth  <cit> . another aspect is that maxsub score is basically sequence-dependent assessment. in sequence-dependent assessment, only corresponding residues in alignment are compared. it is stricter than sequence-independent assessment  <cit>  for alignments which are slightly shifted from the optimal alignment, which might make maxsub scores of some alignments become zero. our method might be improved by combining these sequence-dependent and sequence-independent methods.

finally, some template structures may not be good for predicting the structure of a query protein, even though they are in the same family with a query protein. one example of this case is an alignment of a query protein, d1tsk__, against a template, d1chl__, both of which belong to the same family . all maxsub scores of the alignments generated by using all  <dig> options are zero. to check whether it is caused by the problem of profile-profile method, we perform the structural alignment by ce algorithm  <cit> , and we find that the maxsub score of this structural alignment is also zero. figure  <dig> shows a superposition of these two proteins. it can be inferred that there are bad templates for structure prediction although they are the same family member with a query protein. it might be caused by strict definition of maxsub. however, in the view of maxsub, the template d1chl__ is apparently a bad one for the query.

such alignments are tested by the fold recognition method developed in the previous study  <cit>  to see their fold recognition scores. the raw svm outputs are converted into posterior probabilities  <cit> , ranging from zero to one, and the distribution of these probabilities is shown in figure  <dig>  the distribution exhibits two peaks, near zero and one. if we choose decision-threshold as  <dig> , roughly 15% of pairs are classified into protein pairs sharing the same family. let us consider a situation where one tries to predict the protein structure and chooses the templates by means of fold-recognition score only. for some cases, if a certain template is selected simply because it is predicted to be homologous at the family level, the final result of structure prediction might be failed due to wrong selection of the template. adaptive selection method may help to filter this sort of templates out and can prevent ones from selecting these bad templates.

benchmark test
the benchmark test of adaptive selection method is carried out on  <dig> targets of casp <dig>  we use esypred3d and multiple mapping method  for the comparing. both are publicly available web servers, and alignments and 3d models are provided. we used the default options of the servers.

out of all  <dig> targets of casp <dig>   <dig> targets have significantly close template in scop  <dig>  according to the result of fold search by proteinsilico  <cit> . the templates of  <dig> targets of those are trained in our dataset, and these target-template pairs are used in the benchmarking.

CONCLUSIONS
in the process of protein sequence alignment, generally only one particular set of alignment parameters is used throughout the all protein pairs, regardless of their evolutionary relationship. in some cases, many alignments are generated using many different combinations of alignment parameters, and then the potentially optimal alignment is chosen purely based on experience or intuition. in this work, however, we select the alignment parameters which are predicted to give the highest maxsub score specific to a pair of a query and a template. our work is distinguishable to other efforts to improve the quality of protein sequence alignments in that we directly predict alignment quality with quite good accuracy. by predicting the alignment quality and then choosing the optimal alignment parameters based on the prediction, we show that the alignment quality can be improved significantly. our method can be utilized to select not only the optimal alignment parameters for a chosen template but also good templates with which the structure of a query protein can be best predicted.

in summary, we develop a method to predict the maxsub score as an alignment quality of a given profile-profile alignment between a query and a template. the alignment between a query protein and a template of length n is transformed into a -dimensional feature vector. these feature vectors are used to train the svr models for the templates. we rigorously test the performance of the method using various evaluation measures such as pearson correlation coefficient, mae, nmae, and rmse. results show the high correlation coefficient of  <dig>  and low prediction errors. trained svr models are then applied to select the best alignment option which is chosen specifically to the pair of a query and a template. this adaptive selection procedure results in  <dig> % improvement of maxsub scores, compared to the scores when single best option is used for the all query-template pairs.

