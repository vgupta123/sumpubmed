BACKGROUND
post-genomic molecular biology has resulted in an explosion of typically high dimensional, structured data from new technologies for transcriptomics, proteomics and metabolomics. often this data measures readouts from large sets of genes, proteins or metabolites over a time course rather than at a single time point. most biological time series aim to capture information about processes which vary over time, and temporal changes in the transcription program are often apparent  <cit> .

grouping together genes which exhibit similar variations in expression over time can identify genes that are likely to be co-regulated by the same transcription factors  <cit> . whilst there are many clustering algorithms available which allow genes to be grouped according to changes in expression level, the standard approaches to clustering use pairwise similarity measures, such as correlation or euclidean distance, to cluster genes on the basis of their expression pattern. these algorithms disregard temporal information: the implicit assumption is that the observations for each gene are independent and identically distributed  and are invariant with respect to the order of the observations. if the order of observations in two sequences is permuted, their correlation or euclidean distance will not change. however, this does not hold for time series, where each observation depends on its past, and gene expression levels at adjacent time points exhibit correlation. this was demonstrated in the classic paper of eisen et al.  <cit> , who observed that the biologically meaningful clusters obtained by hierarchical clustering of s. cerevisiae microarray time series data, using a correlation distance metric, disappeared when the observations within each sequence were randomly permuted.

mclachlan et al.  <cit>  use a model-based approach to clustering microarray data, and demonstrate the clustering of a relatively small number of tissue samples on a very large number of genes. model-based approaches to time series clustering have included the use of finite and infinite hidden markov models  <cit> . another popular approach is the use of splines as basis functions  <cit> . liverani et al.  <cit>  also use fourier series as basis functions. ng et al.  <cit>  use a random-effects model for mixture model-based clustering of correlated microarray data, including gene profiles over time. a number of additional methods for time series data analysis have been reviewed by bar-joseph  <cit> .

the bayesian hierarchical clustering  algorithm  <cit>  is a fast approximate inference method for a dirichlet process mixture model, which performs agglomerative hierarchical clustering in a bayesian framework. bhc has previously been used to cluster genes from single time point microarray observations  <cit> . heard  <cit> , has applied an iterative reclassification extension to bhc which leads to improvements in the quality of the clustering. in this paper we extend bhc for use with time series data. microarray time series data sets often contain several replicate values per observation and standard clustering algorithms lack the ability to incorporate this information, two exceptions being the methods of ng et al.  <cit>  and zhou et al.  <cit> . ng et al.  <cit>  demonstrate an extension of finite mixture model clustering by introducing random gene effects and random tissue effects, such that within each cluster the random gene effects are shared among replicate measurements from the same gene , while random tissue effects are shared among measurements from the same tissue. in their bayesian model-based approach, zhou et al.  <cit>  use the information from replicate experiments to inform prior distributions for the data being clustered. whereas zhou et al.  <cit>  use a replicate experiment to inform the prior distributions and then cluster single  observations, we adopt an empirical bayes approach that uses all the replicate information to inform the prior distributions, and then cluster the mean of the data profiles.

measurement error is not the only source of noise to consider. genes regulated by the same transcription factor are unlikely to have identical expression profiles for the duration of the time series, which leads to inherent variation in the expression data of co-regulated genes. liu et al.  <cit>  highlight the uncertainty about the precise biological time at which gene expression measurements are taken. smith et al.  <cit>  address the issue of outlier profiles in a data set by demonstrating a method of setting the model hyperparameters which can prevent agglomerative clustering methods such as that of heard et al.  <cit>  from combining outlier profiles into a single cluster at an early stage in the clustering. in this paper, we model the total noise variance as a sum of the measurement error variance and the inherent biological variation within a cluster. typically, the noise inherent in gene expression microarray data is modelled with a gaussian distribution, which provides a good model for the majority of data. however, a subset of the data may contain much higher levels of noise, which cannot be correctly modelled by the same distribution as that used for the majority of the data. by using a mixture model likelihood, we explicitly model a small proportion of the data as outlier measurements, and therefore allow genes which have noisy observations to participate in the clustering assignment, instead of being assigned to noisy and biologically meaningless clusters.

methods
bayesian hierarchical clustering
agglomerative hierarchical clustering is a commonly used approach to group genes according to their expression levels. in this algorithm, each gene begins in its own cluster and at each stage the two most similar clusters are merged.

the bhc algorithm  <cit>  performs agglomerative hierarchical clustering in a bayesian setting. it uses a model-based criterion to decide which clusters to merge at each stage, and learns the most likely number of clusters, given the data. another interpretation of the bhc algorithm is as a fast approximate inference method for a dirichlet process mixture  model. dpm models are frequently used in clustering, and allow for an infinite number of clusters to be considered, although only a finite number of clusters are actually ever used to describe any data set.

the prior probability, πk, that a given pair of clusters, c <dig> and c <dig>  should be merged is defined by the dpm and is determined solely by the concentration hyperparameter for the dpm and the number of genes currently in each partition of the clustering . bhc uses bayes' rule to find the posterior probability, rk, that the pair of clusters should be merged.

  rk=πkpp 

where y = {y <dig> ..., yn} is the set of n data points contained in clusters c <dig> and c <dig>  p is the marginal likelihood of the data given the hypothesis, h1k, that the data y belong to a single cluster and requires the specification of a likelihood function, f, as the probabilistic model generating the observed data, y. p is the probability that the data could be partitioned in any way which is consistent with the order of assembly of the current partition, , and is defined recursively:

  p=πkp+pp 

where ti and tj are previously merged clusters containing subsets of the data in y.

while rk is greater than  <dig> , it is more likely that the data points contained in the clusters c <dig> and c <dig> were generated from the same underlying function, f, than that the data points should belong to two or more clusters. when rk is less than  <dig>  for all remaining pairs of clusters, the number of clusters and partition best described by the data has been found.

gaussian process regression
gaussian process regression  is a non-linear regression method with several previous applications in the analysis of gene expression data  <cit> .

in our gpr model a single observation at time point ti is represented as y = f + ε. for each cluster, we assume the latent function f is drawn from an infinite dimensional gaussian distribution, where the correlation structure between the points is determined by a covariance function, Σ, with hyperparameters, θΣ. we assume ε is iid noise with a gaussian distribution, n.

let y =  be the n = g × t observations in a cluster of g genes, where the {yg, t} are time series of { <dig> ..., t} time points. each gene is normalised to have mean  <dig> and standard deviation  <dig> across time points. the prior of f is given for fixed values of θΣ, such that p = n . it follows that the likelihood function for f is p=n, where i is the n × n identity matrix. the marginal likelihood of the data, y, is then:

  p=n=-n2|k|- <dig> exp-1y) 

where k=Σ+σε2i is the covariance function for y. we have implemented both the squared exponential and cubic spline covariance functions into bhc. the probability p  is given for fixed θΣ and σε <dig>  since all observations in a cluster are assumed to have the same latent function f and noise variance.

covariance functions
the covariance function k describes the relationship between the values of the function, f, at different time points and must be positive semi-definite to be valid. in bhc we have implemented the squared-exponential covariance function kse, which is a widely-used choice for k:

  kse=σf2exp-22l2+σε2δij 

where δij is the kronecker delta function and ti and tj are two time points for f. the covariance function encodes our assumptions about the underlying signal in the data. for example in kse the hyperparameter σf <dig> is the signal variance, σε <dig> is the noise variance, and the length scale, l, is intuitively how far along the input time axis must be travelled between stationary points. as the inputs become closer in time, the value of kse increases and tends to unity, meaning these values of f are more closely correlated. this encodes the intuition that our time series are smoothly-varying, once we have accounted for noise. we have also implemented the cubic spline covariance function, kcs, to facilitate comparison with the clustering method of heard et al.  <cit> , which can use cubic splines as basis functions:

  kcs=σf2|ti-tj|υ22+υ33+σε2δij 

where v = min . kcs only has two hyperparameters, σf <dig> and σε <dig>  as described above, but no length hyperparameter.

using replicate data to learn the noise hyperparameter
for each cluster, we learn the hyperparameters θΣ and σε <dig>  which maximise the marginal likelihood of the data, y, using a gradient ascent method. we want to use the replicate information to inform the value of σε <dig>  for this hyperparameter we assume a gamma prior, where p=ga.

the total noise variance, σε <dig>  is assumed to be a sum of the measurement error variance, σm <dig>  and of the inherent biological variation in a cluster. we use the replicate values to calculate an estimate of the measurement error variance as follows:

  σm2=1r∑t=1t∑g=1g∑r=1r <dig> 

where g is number of genes in the cluster, r is number of replicates per observation, t is number of time points in the time series and ȳg,t= ∑r=1ryr,g,t∕r, where {yr,g,t} is the set of replicates for an observation.

it is these averages of the replicate values, {ȳg,t}, that are used as the observations in the clustering algorithm.

p /β) is the modal value of the gamma distribution, and the hyperparameters α and β are chosen to give a weakly informative prior on σε <dig> such that:

  1Ωpα-1β≈p≈pσm <dig> 

where p denotes the gamma distribution and Ω is chosen to be  <dig>  equation  <dig> reflects our prior knowledge that σm <dig> is a lower bound for the total noise variance, and also that the total noise variance is unlikely to be greater than the total variance of the data, which is approximately unity because of initial normalisation, see figure  <dig> 

the hyperparameters, θ=, are estimated by maximising log p  using a gradient ascent method. the partial gradient of the log marginal likelihood with respect to θj=σε <dig> is:

  ∂∂θj logp=12trγγt-k-1∂k∂θj+αj-1θj-βj 

where γ = k-1y, ∂ k/∂θj is a matrix of element-wise derivatives and 'tr' denotes the trace of the matrix. in the case of the remaining hyperparameters, a flat prior, p , is assumed, and therefore the corresponding partial gradients contain only the trace term above. if replicate information is not required to be included in bhc, a flat prior is also assumed for σε <dig> 

modelling outliers
we have so far considered the total noise in microarray measurements to have a gaussian distribution. however, despite averaging replicate values, microarray data typically contain some outliers that are not well modelled by the gaussian noise distribution used for the majority of the data.

kuss et al.  <cit>  introduce the idea of a mixture model for the likelihood function, p , where the likelihood functions for observations with regular noise have a gaussian distribution, and a likelihood function of a different form is assumed for the outlier measurements. stegle et al.  <cit>  used such a mixture model likelihood with an expectation propagation scheme to identify differentially expressed genes. they show that the mixture model likelihood provides more accurate predictions.

we simplify our notation to denote, ȳg,t, a single expression value from gene g and time point t, as yn. following the reasoning in kuss et al.  <cit> , we assume there is a small probability, b, that this value, yn, was generated by an unknown likelihood function, po, producing outlier measurements, and a probability a =  <dig> - b that yn is a regular value, which was generated by a gaussian likelihood function, pr. this mixture likelihood function is therefore:

  p=apr+bpo 

the expression for the marginal likelihood then becomes:

  p=∫ dfp∏n=1n. 

multiplying out the likelihood function product would result in 2n terms. in the case that po is a conjugate distribution to pr, evaluation of this integral would be analytically solvable, but computationally intractable for large numbers of observations. however, if the proportion of outlier measurements is small, this series can be approximated. making the following simplifications to notation: an = pr  and bn = po  gives:

  p= ∏n=1n≈an ∏n=1nan+an-1b∑n=1nbn ∏n′= <dig> n′≠nnan′ 

the term with coefficient an represents the case where no observations are outliers. terms with coefficient an-1b represent the case that a single observation is an outlier.

terms with b <dig> or higher order in their coefficients represent the case that two or more observations are outliers. since b is small, these terms are considered to represent events unlikely to occur and are disregarded. our first order approximation considers every datum as an outlier; higher order approximations would incur a disproportionate computational burden.

the likelihood function for the outlier terms, bn, is modelled as the same constant function for all measurements, b = 1/range, where range is the difference between the highest and lowest observations in the data set.

when the an represent gaussian distributions, it follows that

  p≈an-n2|k|- <dig> exp-12yt-1y+an-1b∑n=1nb-n-12|k-n|- <dig> exp. 

where q=-12y-nt-1y-n,y-n is the vector of n -  <dig> observations excluding the nth observation and k-n is the corresponding covariance matrix.

after optimisation of the hyperparameters for the covariance function, k, the proportion of outliers,  <dig> - a, is calculated to optimise the marginal likelihood p . simplifying the notation, such that p ≈ anv <dig> + an-1v <dig>  we have amax = v2/n as the value of a giving the highest value for p. therefore if  <dig> <amax <  <dig>  then a = amax, otherwise a =  <dig> 

datasets
for the computational experiments we have used time series data sets from four published microarray studies, which we refer to as s. cerevisiae  <dig>  s. cerevisiae  <dig>  h. sapiens and e. coli. the s. cerevisiae  <dig> data set uses the  <dig> time point cell-cycle data from cho et al.  <cit>  and contains  <dig> genes from eight clusters as found by the multiple data source integration method of savage et al.  <cit> . there are no replicates for this data set.

the s. cerevisiae  <dig> data set uses the  <dig> time point data from orlando et al.  <cit>  for the  <dig> genes which were identified as periodic in the paper, and which were also identified as such by spellman et al.  <cit>  and pramila et al.  <cit> . two independent biological replicate samples were taken for each time point. the data from rangel et al.  <cit>  comprises two biological replicates of  <dig> and  <dig> technical replicates respectively of  <dig> genes from an experiment investigating how the h. sapiens jurkat t-cell line responds to pma and ionomycin treatment. this data is used for the h. sapiens data set. these samples were taken at  <dig> unequally spaced time points. the data set of carzaniga et al.  <cit>  measures the transcriptional response of e. coli k- <dig> cells as they are moved from 10°c to 37°c at  <dig> unequally spaced time points. in this data set there are three biological replicates each with two technical replicates. the genes were first ranked for differential expression using the method of stegle et al.  <cit>  and the  <dig> top ranked differentially expressed genes used as the e. coli data set.

performance metrics
when comparing bhc to other clustering methods, we are interested in identifying which method produces the most biologically meaningful clusters, and therefore use the biological homogeneity index   <cit>  as a quality measure to reflect this. we used the r package clvalid  <cit>  to calculate the bhi scores. the bhi performance metric scores a clustering partition between  <dig> and  <dig>  with higher scores assigned to more biologically homogeneous partitions with respect to a reference annotation set. for these sets we used the gene ontology  annotations in the bioconductor packages org.sc.sgd.db, hgu133plus <dig> db and org.eck <dig> eg.db for the s. cerevisiae  <dig> and  <dig>  h. sapiens and e. coli data sets respectively.

the average pearson correlation coefficient, pc¯c, of the expression profiles within the clusters, was used as a measure of the similarity of gene expression shapes within clusters.

the bhi and average pcc both represent mean values of a large number of pairwise similarity comparisons. for bhi, we considered whether or not pairs of  genes that have been allocated to the same cluster share go annotations. for each such pair of genes, we thereby obtained a  <dig> or  <dig>  depending on whether or not the genes do  or do not  have the same annotation. the confidence intervals for the bhi scores provided in table  <dig> were determined by applying a nonparametric bootstrap  to the set of all calculated 0's and 1's in each cluster in order to obtain an estimate of the standard error of the mean  <cit> . the confidence intervals for the average pcc were determined similarly with  <dig> iterations.

                              s. cerevisiae 1
                              s. cerevisiae 2
                              h. sapiens
                              e. coli
over-represented go annotations were found using the gostat web-based interface http://gostat.wehi.edu.au for a benjamini and hochberg false discovery rate controlled at 1%, unless otherwise stated.

RESULTS
comparison of bhc to other clustering methods
for each of the four data sets, we compared the bhc time series algorithm using squared exponential  and cubic spline  covariances to the clustering methods of splinecluster  <cit>  using both linear  and cubic  splines, ssclust  <cit> , caged  <cit>  and the method of zhou et al  <cit> . these methods are designed to account for the correlations between the observations in time series data. for a clear comparison with the bhc algorithm, we did not use a mixture model likelihood, or include any replicate information. we also compared bhc to euclidean distance average linkage hierarchical clustering  as implemented in the mev software  <cit> , and mclust  <cit> . for these two methods the clustering partitions are invariant to permutation of the time points.

freely available software is available for each method, and all but hcl estimate the number of clusters for a data set. however, the bic score in ssclust generally continued to improve with an increasing number of clusters, suggesting overfitting. for the method of zhou et al., we used the jags code  for the first order random walk model described in zhou et al.  <cit> , which allows incorporation of prior information. this method is a generalised case of the method described in zhou et al.  <cit> , which is specifically for periodic data. the jags implementation required the preferred number of clusters to be pre-specified. details of the priors used for this method are available in additional file  <dig>  therefore for hcl, ssclust and the method of zhou et al., the number of clusters was fixed at the number obtained for bhc-se. the caged algorithm was tried with all possible markov orders allowed by its software, but a low number of clusters was always favoured, a phenomenon also found by heard et al.  <cit> . we restricted the mclust clustering to models with spherical and diagonal covariance matrices, since we found that permitting full covariance matrices tended to yield poor results. when using splinecluster, the prior precision on the coefficients was selected by maximisation of the log marginal likelihood of the clustering. only bhc, splinecluster and the method of zhou et al. were able to incorporate the non-uniformly sampled time intervals for the h. sapiens and e.coli data sets.

at each stage, the bhc algorithm calculates the marginal likelihood of the tree structure for the data, p, as given by equation . denoting the final, unpruned tree structure returned by the algorithm as t, we may use the final  marginal likelihood, p, in order to do model comparison between different choices for the covariance function . in table  <dig>  we provide  marginal likelihoods for the squared exponential and cubic spline covariance functions. for all data sets considered in this paper, the squared exponential covariance function yields the higher log-marginal likelihood. we note that this is in good agreement with the pc¯c, which is also consistently higher for bhc-se. for all data sets the gene lists and plots of clusters for bhc-se and bhc-c are available in additional file  <dig>  figure  <dig> shows the over-represented go annotations using the r package gostats in the clusters resulting from bhc-c and splinecluster using linear splines, for the s. cerevisiae  <dig> data set. grey and white vertical shading separates the clusters and each row represents a go annotation, where the dark block shading indicates an annotation is over-represented in the cluster. a representative go annotation is given for each cluster. figure  <dig> shows that bhc is able to separate the clusters of mitochondrial and atp synthesis functions and also the m- and s-phase mitotic cell cycle genes, that splinecluster combines together. the increased biological homogeneity of the bhc clusters is reflected in a higher bhi score of  <dig> , compared to a bhi for splinecluster of  <dig> . for the full go annotations and a large version of figure  <dig>  see additional files  <dig> and  <dig> 

bhc clustering of simulated data sets
an advantage of the bhc algorithm is that it allows simulated data with realistic noise and expression profiles to be generated from the gaussian processes inferred from the bhc clustering of real biological data.

to demonstrate that the bhc algorithm can find the correct number of clusters for a synthetic data set, we analysed simulated data sets with the same number of genes, timepoints and noise levels, which were generated from the  <dig> and  <dig> gaussian processes inferred from the bhc-se clustering of the h. sapiens and s. cerevisiae  <dig> data sets respectively. these gaussian processes are therefore models of true biological data. figures  <dig> and  <dig> show the estimated number of clusters found for  <dig> simulated h. sapiens and s. cerevisiae  <dig> data sets respectively, for bhc-se, bhc-c, splinecluster , mclust and ssclust methods. we did not use caged in the comparison, since it is a windows-based program that does not permit automation.

bhc-se finds the correct number of clusters for the simulated data generated from the  <dig> gaussian processes in 80% of cases. for the simulated data generated from the  <dig> gaussian processes, bhc-se finds between 11- <dig> clusters in 89% of cases. for the h. sapiens data, mclust is the only method other than bhc-se to correctly favour  <dig> clusters. for the s. cerevisiae  <dig> data, bhc-se is the only method to favour around  <dig> clusters. simulated data sets generated from the gaussian processes with half the noise standard deviation were always partitioned by bhc-se into exactly the original number of clusters of  <dig> and  <dig> .

modelling outlier measurements
we investigated the effect of using the mixture model likelihood. figure  <dig> shows for an example of a noisy gene from three of the data sets, the clusters to which the gene was assigned using standard bhc  and mixture bhc .

in the s. cerevisiae  <dig> data set, four of the  <dig> genes were assigned to different clusters using the mixture bhc-se instead of standard bhc-se. there was no change in the clustering partition for bhc-c. for standard bhc-se, the fsp <dig>  gene is annotated with several go terms which are over-represented in its cluster . these go terms include glucosidase activity, which fsp <dig> shares with three out of  <dig> genes, and the whole cluster has a bhi of  <dig> . when using mixture bhc-se, the fsp <dig> gene expression at time point  <dig> has been treated as an outlier measurement, which has resulted in the fsp <dig> gene no longer being a member of this noisy cluster where pc¯c= <dig> , but being assigned to a tighter , more biologically homogeneous cluster , with a higher bhi of  <dig> , and where all of the four members, sor <dig> , rfc <dig> , rma <dig>  and fsp <dig> are annotated as being involved in catalytic activity. in the s. cerevisiae  <dig> data set, the standard bhc cluster containing the csm <dig>  gene  does not contain any over-represented go terms at a significance level of p <  <dig> , and has a bhi of  <dig> . this cluster is quite noisy, with a pc¯c of  <dig> . using a mixture model likelihood allows bhc to treat the csm <dig> expression level at time point  <dig> as an outlier value. this allows the csm <dig> gene to join a tighter cluster  with a pc¯c of  <dig> , where it shares over-represented go terms such as mitotic sister chromatid cohesion, dna replication and m phase of mitotic cell cycle, with  <dig> of the  <dig> cluster members.

in the e. coli data set, the clustering partition using bhc-c has only one gene, wcac,  assigned to a different cluster, when comparing standard and mixture bhc. the cluster containing this gene for standard bhc-c  has no over-represented go terms and a bhi of  <dig> . using the mixture mode likelihood allows time point  <dig> of the wcac expression profile to be treated as an outlier value and the gene is reassigned to a highly correlated cluster  where the pc¯c= <dig>  and where wcac shares several significant go terms with two of the other three genes in the cluster, such as lipopolysaccharide biosynthetic process. for all data sets the gene lists and plots of clusters for both bhc-se and bhc-c using the mixture model likelihood are available in additional file  <dig> 

inclusion of replicate information
we investigated the effect of including the replicate information. figure  <dig> shows the effect on a cluster from each dataset which has replicate information.

the standard bhc cluster from the s. cerevisiae  <dig> data set  has over-represented go terms, such as dna replication, dna repair and hydrolase activity. including the replicate information in the bhc clustering resulted in profiles which are subtly different during the first few time points being distinguished and reassigned , as shown by the increase in the pc¯c from  <dig>  to  <dig>  and  <dig>  for the two resulting 'child' clusters. these two child clusters have similar over-represented go terms to the original cluster.

including the replicate information for the h. sapiens data set resulted in the distinct and highly correlated , profiles of the two genes casp <dig>  and ikzf <dig>  being distinguished . these genes are both members of the disease-specific gene signature of the neoplastic disease mantle cell lymphoma  <cit>  and their protein products are both implicated in apoptosis  <cit> .

an unusually noisy cluster  was formed using standard bhc for the e. coli data set, with a pc¯c= <dig> . however, this cluster contains several over-represented go terms such as metal ion binding. including replicate information allows this cluster to be split into three clusters with distinct profiles . the child cluster with bhi =  <dig>  has no over-represented go terms and the remaining two child clusters have similar over-represented go terms to the standard bhc cluster. for all data sets the gene lists and plots of clusters for both bhc-se and bhc-c using replicate information are available in additional file  <dig> 

run time
run times of data sets for bhc-se and bhc-se with a mixture model likelihood in hours , minutes  and seconds  on a  <dig>  ghz intel xeon cpu. the run times for bhc-c were very similar to bhc-se. using replicate information did not increase the run times. also shown are the number of genes, time points and replicates for each dataset.

CONCLUSIONS
we have presented an extension to the bhc algorithm  <cit>  for time-series microarray data, using a likelihood based on gaussian process regression, which learns the optimum number of clusters given the data, and which incorporates non-uniformly sampled time points. we have extensively tested the performance of bhc against other leading clustering methods for four sets of time series data, and found that bhc consistently produced more coherent clusters both in terms of expression profiles and biological function.

bhc facilitates the inclusion of replicate information, and our results clearly demonstrate an improvement in the ability to distinguish between distinct expression profiles when this replicate information is included. microarray data typically contain outlier observations, which should not be treated together with the majority of observations. one unique aspect of the bhc algorithm presented in this paper is its ability to model these noisy outlier measurements using a mixture model likelihood. the result is that genes with a small number of noisy values, which would otherwise have been assigned to a noisy cluster, are assigned to a biologically relevant cluster, where the noisy gene shares biological functions with the other cluster members. this method provides a step towards a better treatment of the noise inherent in measurements from high-throughput post-genomic technologies.

availability
timeseries bhc is available as part of the r package 'bhc' , which is available for download from bioconductor  via http://www.bioconductor.org/packages/release/bioc/html/bhc.html?pagewanted=all. the timeseries functionality was developed under r version  <dig> . the 'bhc' package is available for mac os x, linux and windows operating systems. 'bhc' is released under the gnu gpl .

authors' contributions
ejc and rss wrote the clustering code, ejc and pdwk analysed the simulated data and performed bootstrapping, ejc performed the clustering analysis, rd optimised the c++ code and updated the bhc bioconductor package, dlw designed and directed the research. all authors contributed ideas, participated in writing this article, and read and approved the final manuscript.

supplementary material
additional file 1
the clustering method of zhou et al. further details for running the method of zhou et al.

click here for file

 additional file 2
genes lists and cluster plots. gene lists and cluster eps files for the s. cerevisiae  <dig>  s. cerevisiae  <dig>  e. coli and h. sapiens data sets using bhc with both squared exponential  and cubic  covariances. for each covariance option, results are given for the single model likelihood, mixture model likelihood, and including replicate information.

click here for file

 additional file 3
go annotation matrix for s. cerevisiae  <dig> data set clustered using bhc with cubic spline covariance. a large version of figure  <dig>  left panel.

click here for file

 additional file 4
go annotation matrix for s. cerevisiae  <dig> data set clustered using splinecluster with linear splines. a large version of figure  <dig>  right panel.

click here for file

 acknowledgements and funding
we thank francesco falciani and gianni dehò for providing the e. coli data set, and christopher penfold for ranking this data set by differential expression using the gp2sample software. we also thank zoubin ghahramani and jim griffin for helpful discussions. dlw, pdwk and rd acknowledge support from the epsrc . rss acknowledges support from an mrc biostatistics fellowship. ejc acknowledges support from the moac doctoral training centre.
