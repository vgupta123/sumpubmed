BACKGROUND
polyploidy describes the condition of having more than two chromosome sets and is common in flowering plants. a large share of agriculturally and horticulturally important plant species are polyploid. among them are wheat and sugar cane, which are the most planted  and most fecund  crops, respectively  <cit> . in contrast to their importance, the research and tool-set for genetics in polyploids is underdeveloped. many bioinformatics tools have been developed for diploids, but cannot be applied to polyploids .

linkage mapping describes the process of calculating the genetic relation between markers. the general concept is used for decades and established in the fields of plant and animal breeding. during meiosis recombinations occur along the chromosomes. investigating these provides information about the genetic distances of markers . comparing recombinations between multiple offspring in a mapping population  allows to calculate similarities between markers. the more similarly two markers co-segregate the higher the linkage is between them and the more likely it is that they are located closely together  <cit> . groups of linked markers can be clustered into so called linkage groups, which ideally represent the individual chromosomes. available linkage mapping tools for polyploids are limited to simplex and duplex markers . consequently, they cannot be applied to state-of-art datasets  data). a linkage map can be used to detect quantitative trait loci .

we developed pergola, a linkage mapping tool for polyploids implemented as r package   <cit> . we demonstrate its application to simulated and real data sets of varying ploidy types and levels. the results for simulated data are deterministic and produce the correct linkage map. we further validate this with systematic simulations. application to real data sets and comparison to three existing tools shows the advantages of our method. the transformation of linkage maps into dendrograms allowed us to compare the results visually and computationally.

pergola is much faster than existing mapping tools and therefore also provides an alternative for linkage mapping in diploids.

methods
data
we applied pergola to simulated and real datasets of varying ploidy levels. we simulated a hexaploid f <dig> population with  <dig> offspring with pedigreesim  <cit> . the input linkage map was designed similar to the chromosomal characteristics of rose, a polyploid species for which a linkage map is available. this map consists of seven linkage groups with lengths of  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and 80cm  <cit> . we simulated the dataset with randomly distributed markers. we randomized the order of markers and alleles for each sample-marker pair to remove any prior knowledge that is not available for a real dataset. we systematically changed  <dig>   <dig> ,  <dig>  and  <dig>  of the genotypes to both missing and wrong genotypes . each of the  <dig> configurations was repeated  <dig> times.

the allotetraploid data set was obtained from a peanut experiment with  <dig> offspring  <cit> . the population’s parents are doubled haploid, thus the offspring behave similar to diploids. the dataset consists of  <dig> markers organized in ten linkage groups.  <dig>  of the  <dig>  genotypes are missing. the autotetraploid data set consists of  <dig> samples of the msl <dig> potato population  <cit> . for our linkage map we used a subset of markers where both parents were heterozygous .

linkage mapping
similarity of genotypes was used to predict recombination frequencies and linkage between markers. this information was then used to estimate linkage maps. linkage mapping was divided into the steps grouping, ordering, and spacing. the former two are visualized in fig.  <dig> 
fig.  <dig> ordering of recombination matrix. the three stages of ordering  visualized with the pairwise recombination frequency matrix. each row and column represents one marker. dark and light shades of grey indicate low and high recombination frequencies, respectively. a) the markers are in random order. the diagonal is dark because the recombination frequency of a matrix with itself is zero. b) the markers are ordered according to their linkage groups. seven separated rectangles are formed and easy to distinguish. c) the markers are ordered within each linkage group. most of the low values moved to the diagonal




recombination
genetic recombination describes the exchange of dna between two chromosomes during meiosis. the recombination frequency θ of two markers  is the frequency of one crossover between them. the concept of linkage mapping differs for polyploids because the calculation of recombination frequencies is more complex than for diploids  <cit> . in the past there have been multiple approaches to this problem . all calculate the recombination frequency exactly, but to our knowledge none of them has resulted in a tool. we, on the contrary, estimate the pairwise recombination frequency θ between two markers m and n of ploidy p with 
  <dig> θ^m,n=minam,n+bm,n 


where a and b are sums of recombination events for the two possible allelic configurations defined as am,n=∑i|mi−ni| and bm,n=∑i|mi−p+ni|. m
i and n
i are the allele counts for individual i for each pair of markers m and n. for instance the allele counts at tetraploid loci aaaa, aabb and abbb would be  <dig>  and  <dig>  respectively. the two different allelic configurations account for the unknown parental origin of the alleles. two markers m=a
a
a
a  and n=a
a
a
t  indicate a
m,n= <dig> and b
m,n= <dig> recombination events and θ^= <dig> in this example. consequently, θ^ never exceeds  <dig> , which is a requirement for recombination frequencies in linkage mapping  <cit> .

our heuristic approach is fast and ignores some biological details   <cit> . pergola can make use of large numbers of both markers and samples, provided in modern high throughput datasets. high marker density results in long chains of markers in linkage disequilibrium. consequently multiple recombination events between two neighboring markers in our mapping populations become very rare and can be ignored. the large number of samples provides a high resolution of recombinations. accordingly we can even distinguish between markers with very high linkage. table  <dig> shows the minimal number of recombinations between pairs of markers.
a and b are the major and minor alleles, respectively. higher numbers of recombination are possible due to double crossovers , but ignored by the heuristic




the heuristic calculation of recombination frequencies overestimates linkage because it always assumes the lowest possible number of recombinations. this is not necessarily the actual number of recombination events. for instance aabb/aabb can have  <dig>   <dig>   <dig> or even more recombinations due to double crossovers, but we always approximate  <dig> in that case. if two markers are closely linked we assume no recombination and the approximation is correct. for distant markers the genotypes are different for a large proportion of the population by chance and their θ^ will be larger although we assume no recombination for some individuals. the increased number of genotypes in polyploids compared to diploids provide a higher resolution of recombinations and improves the heuristic approach.

grouping markers
a linkage group is a subset of co-segregating markers. ideally each linkage group represents one chromosome, but that cannot always be achieved  <cit> . markers with a recombination frequency θ^ below a certain threshold are grouped. the threshold depends on the dataset and should be adjusted manually. pergola groups the markers based on hierarchical clustering with single linkage distance  <cit> . single linkage ensures that markers with the lowest recombination frequency end up in the same group and are not affected by markers on the other end of the chromosome, which would be the case for complete or average linkage. the approximated recombination frequencies are used as distances. the default values might not be suitable for all species or data sets. thus, the result of the clustering should be manually inspected. datasets with a low number of samples can result in an overestimated count of linkage groups. some of these might contain a very low amount of markers and should be filtered out. in our implementation of pergola the default filter threshold is  <dig> . hence, each linkage group should contain at least  <dig> percent of the markers. it needs to be decreased if the chromosome number is larger than  <dig> or if the markers are not distributed evenly. we recommend to visualize the data in form of a dendrogram as well as a heatmap. dendrograms provide information about the distances between the linkage groups. large differences in height indicate a good resolution. if branches of high height have a single leaf they should be filtered out. the heatmap visualization supports the comparison of the linkage groups’ sizes. each linkage group is represented by a rectangle. the sharper the edges of the rectangle and the less recombination is indicated outside of them the better is the grouping .

marker ordering
pergola applies the optimal leaf ordering  algorithm to determine the marker order within each linkage group  <cit> . first, one dendrogram is calculated for each group, based on the estimated recombination frequencies θ^ by using a single-linkage hierarchical clustering. markers are organized as leafs of the dendrogram and branches represent the relationships between them. second, olo optimizes the ordering of the dendrogram’s leafs without changing the hierarchical clustering by recursively calculating the optimal subtree orientation of the n− <dig> internal nodes. the decision whether a node is flipped or not is based on the best global ordering. each tree has 2n− <dig> possible orderings where n is the number of leafs. olo finds an order that minimizes the sum of adjacent recombination frequencies  with a worst-case complexity of o  <cit> . assuming that snps have the ordering s=, the sarf criterion is defined as 
  <dig> sarf=∑i=1n−1θ^aiai+ <dig> 


where θ^aiai+ <dig> is the estimated recombination frequency between a snp a
i and its adjacent snp a
i+ <dig>  <cit> . the subscripts i and i+ <dig> identify the snps in order s. olo includes an early termination step, which avoids unnecessary calculations, if the result cannot be improved. that usually reduces the runtime, but the worst case remains unchanged.

given high marker density datasets the marker order according to the sarf criterion is not always unique. multiple close markers or single distant markers can result in varying linkage maps with the same sarf value. subsequently the same input leads to different results, which is the definition of a non-deterministic algorithm. in these cases we stepwise extend the sarf criterion to neighboring markers until the ordering is resolved unambiguously. for real-world datasets our extension leads to unique results, but theoretically it is possible to construct worse-case scenarios, where only ambiguous orders can be found. this size of the neighborhood l is indicated as subscripted number: 
  <dig> sarfl=∑k=1l∑i=1n−lθ^aiai+k 


where θ^aiai+k is the estimated recombination frequency as described for eq.  <dig>  we identified two cases where the extension of the sarf criterion is required to obtain a deterministic solution. 
two markers have equal distances to their neighbors, but a smaller distance between each other. these can be swapped without changing the sarf value .
4
4
6
4
4
4
7
5
the bold values indicate equal distances to neighboring markers and thus, ambiguous marker orders. the underlined values are taken into account in the ordering step of pergola to obtain a deterministic result




a marker can be placed at both ends of a linkage group. its similarity is high enough to be in the cluster, but it is an outlier within the linkage group. therefore, it is placed at one of the edges.




an example is provided in table  <dig>  the orders s
1=, s
2= and s
3= have the same s
a
r
f
 <dig> value of  <dig>  extending the neighborhood n to  <dig> leads to s
a
r
f
2= <dig>  s
a
r
f
2= <dig> and s
a
r
f
2= <dig>  thus, s
 <dig> is the best order and s
 <dig> and s
 <dig> can be discarded.

the determinism nature of our method refers to the outcome of the marker ordering step. the general process of linkage mapping is still a stochastic approximation of the real linkage based on an snp markers.

marker spacing
for spacing we applied the haldane mapping function  <cit>  to the recombination frequencies. our implementation includes the kosambi and carter-falconer mapping functions as alternatives.

comparison
we compare pergola with three other linkage mapping tools: 
joinmap®;  <dig>  by kyazma®; b.v., wageningen, netherlands  <cit>  is one of the most popular linkage mapping tools  <cit> .

mapmaker macintosh version  <dig>   <cit>  was used by the authors of the peanut dataset  <cit> .

r/qtl version  <dig> - <dig> is an r package that supports linkage mapping  <cit> .




further we recalculate the maps of hexaploid simulated data and autotetraploid potato data. in addition to visual comparison we applied two computational correlation measurements. our first method to compare two dendrograms is the goodman-kruskal-gamma index  <cit> . it calculates the tree similarity by rank comparison of all n
 <dig> pairs of markers. the second method is cophenetic correlation  <cit> . it measures the similarity of pairwise distances between all markers. both correlation measures lie between - <dig> and  <dig>  indicating negative and positive correlation, respectively.

RESULTS
linkage maps of simulated data
we applied pergola to simulated hexaploid datasets. first, the datasets were randomized to remove any prior information  that is not available for a real dataset. second, we calculated the pairwise recombination frequencies for all markers. an example is visualized in fig.  <dig>  the randomized order of the markers is replaced by a hierarchical clustering order based on the recombination frequencies. the rectangles in the heatmap have sharp edges and suggest seven linkage groups. this is consistent with the seven chromosomes in the linkage map that we used to simulated the data. in the next step, pergola orders the markers within the seven linkage group unambiguously. we calculate the spacing between markers based on the recombination frequencies and thus obtain our final linkage map. this map and the initial input map of pedigreesim are transformed into dendrograms to make them comparable. next, we calculate the goodman-kruskal index and cophenetic correlation values. this is repeated  <dig> times for each simulation parameter combination. the goodman-kruskal correlation values are shown in fig.  <dig>  for error free input data the linkage maps are equal independent of missing values. the higher the error rate, the more impact has the proportion of missing values. in general, the values are close to one indicating good linkage maps. the cophenetic correlation results are shown in the additional file  <dig>  again the values strongly correlate with the proportions of missing and erroneous data. the values are not as high as the goodman-kruskal correlations because the cophenetic correlation is more sensitive.
fig.  <dig> goodman-kruskal correlations. goodman-kruskal correlation values of simulated hexaploid data sets and corresponding linkage maps generated by pergola. the x-axis shows four groups with different error values, indicating the amount of errors introduced to the data. the y-axis shows the mean goodman-kruskal correlation value for  <dig> simulations per parameter combination. the standard errors are represented by bars. each group consists of four differently colored bars, indicating different rates of missing values




the results should be interpreted with caution because the data is simulated. pedigreesim simulates the genotypes based on one model, which has been intensively discussed in the community  <cit> . alternative simulation models  might lead to differing results. the models differ in two main aspects: first, pedigreesim uses a descriptive model, which explains the probability distribution of gamete modes as observables . in contrast, other models are analytical and explain the distribution with meiotic mechanisms. second, pedigreesim calculates recombination rates and double reduction independently, while alternative models treat them as reliant  <cit> . the differences are limited to the simulation of autopolyploids because they only occur during quadrivalent meiosis. further, they exchange single alleles after crossing-over events in case of double reduction, but the other alleles remain the same.

application to real allotetraploid data
we applied pergola to allotetraploid genotypes of a peanut crossing population  <cit> . the dataset originates from doubled haploid  pedigrees and behaves similar to diploids. application of pergola resulted in a linkage map consisting of ten linkage groups . that matches the expected number of chromosomes for peanut known from literature  <cit> . further validations are difficult because the real linkage map is unknown.
fig.  <dig> global linkage map comparison - pergola and joinmap®;. comparison of the linkage map created by pergola and joinmap®;. both are split into ten linkage groups, highlighted by different shades of gray. the linkage groups consist of the same markers. white spaces indicate differences in the marker ordering




however, the diploid nature of the peanut dataset allowed us to compare the results and performance of pergola to linkage mapping tools, which do not support polyploids. we selected mapmaker, joinmap®; and r/qtl. mapmaker was used by the authors of the peanut dataset  <cit>  and the results are publicly available. runtimes are not provided by the authors and would not be informative as the computational setup is not comparable. joinmap®; is one of the most popular linkage mapping tools  <cit> . however, it is neither open-source, nor open-access and only works on windows systems. r/qtl is publicly available as r-package and allows reproduction of our comparison. more linkage mapping tools are available, but software comparison is not the main subject of this publication.

comparing linkage mapping tools is difficult because depending on the parameter settings each tool can output different maps. we used the default parameters of each tool and the haldane function to calculate the spacing between the markers. the results gave a general impression of the performance and should not be overinterpreted. all tools could be applied in multiple ways and lead to different maps. the motivation of the comparison was to find out if pergola performs worse than the other tools for a diploid-like data set. for polyploid data sets the other tools can not be applied and pergola is the method of choice.

the runtime of mapmaker is unknown because the authors of the peanut dataset did not provide computation times. data preparation is unique for every tool and depends on the format of the given data. thus, we excluded that step from the time measurement. linkage grouping was at most a matter of seconds for all methods and has been ignored. the computational time comparison focuses on marker ordering because it is the most expensive and distinctive step. in r/qtl, joinmap®; and pergola these are the commands ordermarkers(), calculate map and sortleafs(), respectively. r/qtl is the slowest one and took  <dig> min and  <dig> s. joinmap®; had a similar runtime of  <dig> min and  <dig> s. pergola was the fastest method and took  <dig>  s. the better performance results from the use of the olo algorithm compared to the sliding window approach in r/qtl and the large overhead in joinmap®;. runtime performance is important because linkage maps have many parameters  that influence the result. faster methods allow for systematic optimization of linkage maps. for instance, usually the number of chromosomes is known. if a parameter setting results in a number of linkage maps that differs from the expected chromosome number, the setting should be changed. the runtime of pergola allows for computationally expensive resampling methods  to be used. that can improve the interpretability of linkage maps and related qtl detections.

in pergola and joinmap®; we manually selected ten linkage groups because they were suggested in the grouping step. r/qtl created these linkage groups automatically. we used the haldane mapping function in all tools. r/qtl applies a sliding window approach where all possible permutations of markers are calculated and compared. that approach leads to locally optimized solutions, but can fail to find the best marker order within the linkage group. the default window size is seven, but performs better if the window size is increased. however, this would lead to even slower computation times and was not tested. joinmap®; performs similar to r/qtl, but uses a more sophisticated approach. it calculates and compares different solutions internally and outputs the best solution to the user.

to compare the general linkage maps we transformed all maps into dendrograms. we aligned the chromosome orders and orientation between the maps. dendrograms maintain the grouping, ordering and spacing of the maps and allow manual  and computational comparisons. the root line connects the multiple linkage groups at the same height. in our implementation of pergola its height is  <dig>  times higher than the highest connection within the linkage groups. it does not reflect their similarity, but supports the readability of the map. the marker order and spacing in the map equal the leaf order and branch height in the dendrogram. we created tanglegrams from the dendrograms for a pairwise comparison of all maps  <cit> . they allow us to observe differences in the grouping, i.e. whether the same set of markers is in the same linkage groups. the branching height in the dendrogram provides information about the spacing. traditionally linkage maps are represented as bars or lines. each bar represents one linkage group from one map. lines between the bars indicate the rearrangements between two maps. the linkage groups are distributed so that collisions are minimized. however, for large numbers of linkage groups and high marker density maps, that representation is difficult to interpret. the transformation into a tanglegram is possible without a loss of information, but with a gain in clarity. the spacing information moves into the horizontal dimension and can be explored separately. markers which are not included in both maps are not shown because they do not contribute to comparison. however, their number should be provided along with the tanglegram. an example tanglegram is shown in fig.  <dig> and others are provided in the additional file  <dig> 

the pairwise tanglegrams show that the maps are generally similar. all maps consist of ten linkage groups, mainly containing the same markers. the maps by r/qtl and mapmaker contain five and six markers more than pergola and joinmap®;, respectively. this information is not illustrated in the tanglegrams. the markers have been filtered out and could not be integrated into the ten linkage groups. the total number of markers in the dataset is  <dig>  it is unknown how many have been filtered out for the mapmaker map because they have not be provided together with the map. however, the marker density is not significantly reduced by the filtering. the quality of the map is more important, than a small number of additional markers. thus, noisy markers should be filtered out rather than creating large gaps in a linkage group.

in our experiment, the goodman-kruskal-gamma index for all pairs of maps is almost  <dig>  indicating perfect correlation. this contradicts the observations we made in the tanglegrams where we observe differences between the linkage maps. marker grouping has a much larger effect on the goodman-kruskal-gamma index than ordering or spacing and if many markers are grouped similarly, differences in the latter steps are not represented by it. we conclude that the goodman-kruskal-gamma index is too insensitive for the allotetraploid data set. this is also supported by our simulation study. in contrast the cophenetic correlation coefficient provides reasonable measurements between the maps, as shown in table  <dig> 



the results show that pergola calculates linkage maps in a fraction of the time of the other methods. that makes it not just a useful method for polyploid crops, but also as an alternative for diploid datasets. the heuristic approach of the recombination calculation leads to minor rearrangements in the grouping. they can be neglected given the overall map similarity and performance advantages of pergola. the tanglegrams suggest a higher similarity between r/qtl, joinmap®; and mapmaker because the grouping is identical. on the contrary, the cophenetic correlation indicates that the map by joinmap®; is more similar to the pergola map. that supports our aforementioned hypothesis, that there is not one correct linkage map and we can only estimate the biological situation from different directions. depending on the input data, filtering parameters, linkage mapping tools and validation criteria, multiple maps are valid. currently, it is impossible to discard one map or choose one over the other.

we conducted a simulation study to validate the results of pergola and r/qtl for diploids where the real map is known. joinmap®; was excluded because it is limited to a graphical interface and could not be automatically applied to the hundreds of simulated datasets. we used two different numbers of markers  and three population sizes , which resulted in  <dig> different combinations per tool. each combination was repeated  <dig> times. the input linkage maps consisted of two chromosomes and randomly spaced markers. we compared the reference maps with the calculated ones using cophenetic and goodman-kruskal correlation. the mean values and standard errors of the cophenetic correlation are shown in fig.  <dig>  pergola and r/qtl perform similarly for  <dig> marker maps independently of the population size. for setups with  <dig> markers per chromosome the sliding window approach of r/qtl reaches its limits and the linkage maps differ significantly. taken together, pergola performs better not only computationally, but also produces better linkage maps for diploids.
fig.  <dig> diploid simulation study result. we simulated six setups of diploid populations with two chromosomes and repeated each  <dig> times. we used population sizes of  <dig>   <dig> or  <dig> and  <dig> or  <dig> markers per chromosome. we applied pergola and r/qtl to calculate linkage maps which were compared with the reference map. the bars show the mean correlation value of  <dig> repetitions and the error bars indicate the standard error




application to real autotetraploid data
we did another map comparison with the second real data set, a population of  <dig> offspring from an autotetraploid potato cross  <cit> . the authors created a linkage map by combining joinmap®; and customized scripts for the calculation of recombination frequencies. their procedure includes multiple runs of joinmap®; therefore the performance is even worse than by using joinmap®; itself. comparison of our map to the published one results in  <dig>  and  <dig>  for the cophenetic correlation and goodman-kruskal index, respectively. we performed a permutation test to validate the statistical significance of the goodman-kruskal-gamma index for the given dendrogram. our null-hypothesis was that the two dendrograms are stochastically independent. after  <dig> random permutations all values were close to zero and lower than our value of  <dig>  . we rejected the null-hypothesis and concluded that the two dendrograms are dependent and show some similarity. the goodman-kruskal-gamma index was more sensitive for the autotetraploid dataset because it consists of less markers than the allotetraploid dataset and differences in the marker ordering were not covered by similar marker grouping. similarly, we performed a mantel permutation test to assess the significance of the cophenetic correlation.  <dig> permutations resulted a monte-carlo p-value of  <dig>  and similar results as the previous permutation test . again, we reject the null-hypothesis and conclude dependence of the dendrograms.

CONCLUSIONS
pergola allows the creation of linkage maps for polyploid crops. the application to simulated data showed that it leads to reasonable linkage maps. further, we demonstrated that it can be successfully applied to real datasets with different polyploidy types. pergola outperformed existing programs for diploids in terms of computation time and mapping accuracy. the transformation of linkage groups into a two dimensional dendrogram has been shown to be a valuable alternative to the currently dominating bar scheme. it is more structured and allows to evaluate the three steps of grouping, ordering and spacing separately. the goodman-kruskal index is too insensitive to compare linkage maps and the cophenetic correlation index should be used instead. taken together, pergola is a valuable extension not only to the polyploid genetic toolbox, but for geneticists in general.

additional file

additional file  <dig> supplementary image. pdf including the additional tanglegrams and results of the simulation study. 




abbreviations
dhdoubled haploid

gbsgenotyping by sequencing

olooptimal leaf ordering

qtlquantitative trait loci

sarfsum of adjacent recombination frequencies

