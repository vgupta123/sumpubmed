BACKGROUND
in the field of cell biology, computer simulations of intra- and inter-cellular signaling processes permit researchers to explore the validity of hypotheses about the mechanisms that cells use to process stimuli they receive from their environments. such stimuli can, for example, consist of the binding of a hormone to cellular surface receptors and may initiate a series of reactions inside the cell, eventually leading to a change of cell state, directed movement, its proliferation or death.

software tools such as cytoscape  <cit> , osprey  <cit>  and visant  <cit>  are widely used to analyze genetic networks and pathways, providing a variety of filtering methods and visualizations. typically, the networks being analyzed with these tools consist of relatively simple nodes  that are connected by lines if they represent entities that, in some way, show correlated behavior.

other methods have been developed specifically for visualizing cell biological protein reaction networks where the nodes frequently have some additional inner structure and the links between them indicate biochemical processes, for instance when representing multi-molecular complexes and their reactions. the systems biology graphical notation   <cit>  project, for example, provides a well documented standard for visualizing biological processes, including protein interactions. it offers three different views visualizing aspects such as the flow of information , entity relationship diagrams and can provide diagrams giving information about the sequence of biochemical modifications components in the network undergo.

molecular interaction maps   <cit>  aim at combining as much information as possible in a single diagram. however, a comprehensive visualization of all reactions, involved binding sites and molecular states permitting those reactions and how they are modified in the course of the reactions is possible only for rather small networks. the reason is that users have to simultaneously trace multiple lines to infer reaction requirements which can render the process of parsing complex interaction diagrams cumbersome.

much of the complexity of reaction networks arises from the fact that molecules and pairwise molecular interactions frequently participate as elements in several multi-molecular complexes. reducing model definitions back to this fundamental level, rule-based modeling approaches offer concise ways to specify molecular interactions, their conditions and consequences  <cit>  and several iconographic representations of such rules have been suggested  <cit> .

using the rule-based bionetgen language   <cit> , the visualization tool rulebender  <cit>  addresses the conflict between readability and completeness by linking a contact map depicting possible interactions between molecular binding sites with bngl code elements of the full rule set from which the contact map is derived. this represents a significant step forward but comes at the cost that the visualization itself contains only part of the information. interactions and states have to be selected to access additional information via the textual mode of bngl. users are thus required to learn the model description language, which may impede communication between modeling experts and experimental biologists not familiar with bngl. another rule-based approach, extended contact maps  <cit> , provides more detailed information but also follows the strategy of omitting reaction aspects in order to increase readability. the additional information that is necessary to understand a particular reaction can be retrieved from accompanying textual explanations of the labels in the map.

the rxncon software  <cit>  takes a modular approach to visualizing reaction networks at various levels of complexity by separating elemental reactions - that take molecular complexes as input and modify them through reactions - from contingencies that specify under which conditions these reactions may occur. based on combining the information in these two categories in various ways, the rxncon software can generate several different pathway visualizations, including sbgn based graphs, with varying degree of completeness with regard to rendering the assumptions of the underlying models. this modular approach results in highly efficient visualizations of various aspects of interaction networks but to fully access the conditions for and the consequences of reactions, one has to consult reaction graphs or reaction lists together with contingency lists.

the approaches discussed so far have in common that their network visualizations either become very complicated as models grow or  that they separate the display of molecular reactions from the information regarding the conditions under which those reactions occur.

here, we report the development of the simmune networkviewer that takes advantage of the visual language of the simmune modeler to integrate these two aspects into a single display. both, the modeler and networkviewer, are part of the simmune package  <cit> , a framework of computer programs that allows researchers to build, simulate and analyze quantitative models of cellular signaling processes. the modeler permits defining iconographic representation of molecular complexes, their interactions and the initial and resulting states of the interacting molecules. based on these inputs, simmune automatically builds complete network representations and permits users to perform simulated experiments of cellular systems containing these networks. in contrast to other approaches, the native representation of the reaction rules here is thus a visual, symbolic one. this allows the networkviewer to provide a highly efficient method for rendering protein reaction networks, addressing the preeminent challenge for network visualization, namely combining high-level overviews with details provided on-demand.

the networkviewer first creates a general overview showing all user-defined molecular complexes and the features determining their possible states . these complex prototypes, or, in the language of simmune, complex species, that do not carry any particular states are linked by the biochemical network resulting from the structural interaction possibilities among their molecular binding sites. within this display, reactions can be selected, prompting the networkviewer to visually indicate the particular states the participating complexes are in when the reactions occur and what their resulting states are, thus providing complete specifications of reaction rules embedded into network maps. additional functionality permits searching for reaction rules that meet user-defined criteria, such as belonging to a certain reaction category or including certain types of reacting species. importantly, the search results are presented as an overlay on top of the global network view, thereby presenting the reactions within their biochemical contexts. since model specification in simmune is based on iconographic symbols the software is rather easily accessible to non-theorists. until now, there had been, however, no tool for the visualization of the resulting networks taking full advantage of simmune’s approach for visually encoded molecular interactions.

implementation
simmune framework
the simmune framework consists of a set of modeling tools including an application for specifying molecular properties and interactions , a cell morphology design application, and a simulator. using the graphical interface of the simmune modeler  <cit> , researchers define molecules, their components  and binding sites as well as interactions between such binding sites and how they depend on the states of the interacting molecules. in the following we briefly introduce the visual language and the terminologies in the simmune modeler using a simple ligand-receptor reaction as an example. in this example, a receptor is embedded into the cytoplasmic membrane and consists of an extracellular and an intracellular domain. when the extracellular domain binds to its ligand, the intracellular domain switches its state from inactive to active, allowing it to interact with other molecules inside of the cell, thereby initiating an intracellular signaling process.

in the absence of a globally accepted standard for visual representation of molecules, their components and binding sites as well as multi-molecular complexes, the simmune modeler allows users to create such representations using simple ellipsoidal shapes. to represent different molecule component states and binding site statuses simmune uses the icons listed in figure  <dig>  molecule components can be assigned several squares representing state variables that can be “on”, “off” or “don’t care” and may represent, for example, phosphorylations or conformational states, depending on the nature of the molecules and their interactions. circles represent binding sites  and blue lines connect pairs of bound sites . future releases of the simmune modeler and the networkviewer will permit using icon libraries based on existing visualization approaches such as the one used in the stke database of signaling pathways , or the sbgn style  <cit> .

complex species and complexes
a complex species comprises a specific set of structurally identical complexes that are constructed with the same set of molecules and binding site interactions. however, the complexes within a species can differ with regard to the states of their components. thus, whereas a complex species can be viewed as a prototype describing a particular set of complexes that are structurally identical, a complex is an “instance” of the complex species it belongs to. this hierarchy of providing structural and state-specific information about molecular complexes is fundamentally important for the ability of the simmune networkviewer to generate concise reaction network visualizations. note that in the rest of this text “species” is used interchangeably with “complex species”.

reaction rules
simmune builds reaction networks automatically from the specification of bi-molecular interactions that are described as reaction rules. depending on their characteristics, reaction rules belong into one of the three categories: complex association, complex dissociation and complex transformation. note that reaction rates are crucial to the specification but omitted here for simplicity.

exemplifying a reaction of the association type, receptor ligation is a reaction where a ligand binds a receptor, inducing a change in the receptor’s conformational and functional state. figure 2a shows a complex association where the ligand binds the extracellular domain of the rec inactive complex and produces the ligated receptor complex. the receptor’s intracellular molecule component state changes from “off” to “on”, reflecting the change in the receptor’s state from inactive to active. note that for the definition of reactions we refer to “complexes” even if they consist of single molecules.

ligand dissociation is a reaction that dissociates the ligand from the receptor by removing the bond between them. figure 2b shows a complex dissociation where the reacting complex ligated receptor breaks into two product complexes, the ligand and the rec inactive complex, after the bond between the receptor and the ligand is dissolved. the receptor’s molecule component state changes from “on” to “off” to reflect its deactivation.

to include a molecule transformation reaction, we allow the intracellular domain of the activated  receptor to interact with a g-protein and enzymatically catalyze the replacement of guanine diphosphate  at the g-proteins’ g α subunit through guanine triphosphate . figure 2c shows the visual representation of this complex transformation mediated by the receptor that changes the g α state from gdp to gtp. this is reflected by the switch of the “gtp” state  from “off” to “on”.

network graph description
the simmune networkviewer generates and visualizes a network graph, which is a directed bipartite graph composed of two categories of nodes: complex species nodes and intermediate nodes, the latter representing reactions. the total number of nodes in the graph thus equals the number of complex species plus the number of reactions.

in the network graph there exists an edge between an intermediate node and a species node if and only if the corresponding reaction involves, as reactant or product, a complex of the corresponding species. if the involved complex is a reactant , the edge goes from the species node to the intermediate node. if that complex is a product , then the edge goes from the intermediate node to the species node.the example g-protein model encompasses eight complex species and eleven reactions, including those mentioned previously in figure  <dig>  the corresponding figure  <dig> shows a network graph with  <dig> nodes and  <dig> edges. we will describe the layout and visual design in detail later.

to optimize the efficiency of displaying network information the viewer uses two main layout principles: 

 <dig>  create a node for each complex species instead of each complex with specific biochemical properties.

creating nodes for all biochemically  distinct complexes and linking them through arrows indicating reactions would frequently generate an overwhelming number of nodes in the network graph with severely limited readability and strong node overlap. since complexes of the same species are merely different in the molecule component states and binding site statuses we can, instead, present only the complex species within the network overview, and provide complex- and reaction-specific information upon user request.

 <dig>  introduce intermediate nodes to represent reactions.

in principle, reactions could be indicated as edges between complex species nodes. doing so would, however, result in confusing edges when there are multiple reaction rules between a pair of complex species. this is quite a common situation since pairs of molecular complexes may have multiple interaction possibilities that are modulated by their biochemical properties.

the simmune networkviewer
in the following we describe in detail the features and design elements of the networkviewer.

node representation
we display complex species nodes using the iconographic representation used in the simmune modeling framework, thereby providing a concise and consistent visualization. the name of a species is shown under the corresponding species node. we use small arrows to represent intermediate nodes functioning as reaction handles. the arrows also serve as indications of the direction of reactions. see figure  <dig> for an example.

edge representation and layout
we use different hues to distinguish types of reactions and variation in color saturation  to indicate the direction of edges. as a default, we use green for complex associations, orange for complex dissociations, and purple for complex transformations. see figure  <dig> for an example. however, users can freely specify colors for different types of reactions.

a highlighted edge has greater opacity and width. the tool tip on an edge shows the reaction rate of the corresponding reaction.

each edge is rendered as a bézier curve. edges that represent complex associations/dissociations have one of their endpoints pointing to the binding sites involved in related reactions. note that complex transformations do not involve any binding sites, therefore related edges point to the center of species nodes.

for example, in figure  <dig>  the species node receptor has two binding sites. five edges, representing five reactions, connect the species node receptor: three edges point to the first binding site and two edges point to the second.

network layout
the networkviewer provides three network layout types: non-hierarchical layout, level-based layout and circular layout. whereas the non-hierarchical layout provides a general overview of networks, exploiting the hierarchy in networks and reorganize network layout accordingly is useful in creating meaningful visualization. similar to the orderly mims proposed in  <cit> , we construct level-based and circular layout based on the hierarchy generated after defining a reference point in the network. users may switch among different layouts depending on the analysis they wish to perform.

non-hierarchical layout
we use the neato  <cit>  layout algorithm of graphviz  <cit>  to generate a positional layout for the nodes in the network. after experimenting with different overlap removal techniques available in graphviz, we choose to eliminate overlaps by incorporating overlap removal constraints into the layout algorithm. a non-hierarchical layout of the network graph created from the g-protein model is shown in figure  <dig> 

level-based layout
in the level-based layout, nodes are arranged into levels with respect to their distances to the user-selected reference complex species node. nodes with smaller distances  are positioned closer to the top of the layout. the level layout is generated with the help of the dot  <cit>  layout algorithm of graphviz. figure 4a shows the level layout of a cytokine signaling model, incorporating receptors and downstream effectors for il <dig> and il <dig>  with a reference species node il <dig>  the two cytokines, il <dig> and il <dig>  and their respective receptors can be easily differentiated by color. the result of the level-based layout automatically separates the interacting species by the type of cytokines – those interacting with il <dig> on the top and those interacting with il <dig> at the bottom.

circular layout
in the circular layout, the reference complex species node is fixed at the center and the rest of the nodes are arranged on concentric circles around this center. similar to the criteria used in the level-based layout, nodes with smaller distances are positioned closer to the center . we calculate the position of nodes in the circular layout with a conversion from cartesian to polar coordinate given the result of the level-based layout. see figure 4b for an example of the circular layout of the cytokine model with cytokine il <dig> and its interacting species closer to the center, and cytokine il <dig> and its interacting species on the periphery.

passing estimates of node sizes to graphviz allows the layout algorithms to minimize node overlap. users can resolve residual overlap manually by adjusting the positions of nodes. in the models we tested, we found that users can resolve overlap in a short time.

the networkviewer saves the manually-adjusted layout as well as other visual attributes such as edge width in an auxiliary file, which, when provided along with the model file, guides the networkviewer to generate identical visualization using the stored configuration. we note that the ability of saving the changes to the automatically generated visualization may also help to convey information  as part of remote collaborations.

tree view and reaction list
in addition to the aforementioned graphical network display, we show the species-complex hierarchy in a tree view. in another panel, we list all reactions grouped into the three reaction types . selections performed in the tree view and reaction list are carried over into the graphical network display.

filtering
the networkviewer facilitates locating relevant complexes and/or complex species in the tree view by allowing users to filter by either  complex name or  component molecules. 

 <dig>  the networkviewer highlights complexes and complex species whose names contain the specified term in yellow. when a complex species does not contain the term in its name but one of its child complexes does, the complex species is shown in light blue to indicate that it has at least one matching child complex that might be hidden in the collapsed list. see figure 5a for an example of filtering by the term “gdp”.

 <dig>  the networkviewer highlights complexes and complex species that contain the specified molecule in yellow. for example, figure 5b shows that only three complex species: ligand, ligated receptor and ligrec_gabg contain the molecule ligand. note that a complex contains a molecule if and only if its species contains that molecule too.

user interaction
after the initial automated layout process, the network graph  provides an overview of the network model that offers an accessible abstraction at species level. different types of specific information are presented upon user request.

within the layout, a complex species usually interacts only with complex species nearby. users can zoom in and move to specific regions of interest. to focus on a complex species it can be selected by either clicking the complex species node in the network display or the corresponding item in the tree view. the selected complex species and the reactions in which it is involved are highlighted.

reactions can be selected by clicking intermediate nodes  in the network, or items in the reaction list. the networkviewer indicates selected reactions by highlighting all the related edges.when the selected reaction is a complex association or a complex dissociation, the involved complex species nodes are depicted with their molecular states and binding site statuses according to the specified reaction rule. for example, the binding sites that prior to a selected association were unbound are now linked through bonds. the names of the complexes are added to the labels in blue beneath the name of the species. see figure  <dig> for an example. if the selected reaction is a complex transformation, a hovering frame, as shown in figure  <dig>  shows the initial and product complex.

a typical user query consists of identifying which reactions a particular complex is involved in. after the complex has been selected in the tree view it is highlighted in network visualization along with its reactions.

for example, in figure  <dig>  after selecting the complex rec inactive the networkviewer highlights two reactions, which are shown in figure 2a and figure 2b, that involve rec inactive.

searches can also be performed for complexes of a complex species that match a particular set of states. such set of states could, for example, be combinations of phosphorylations on molecules carrying multiple phosphorylation states. the networkviewer finds and shows all reactions having a reactant or product complex that matches the constraint.

the complex species being searched is marked by a red border. users can change the search constraint by clicking the squares that represent the states. the complexes that match the specified set of molecule component states will be selected. during the search both states “on” and “off” will match a user defined query state “don’t care”. figure  <dig> shows a search on the complex species receptor. the specified search constraint is an “off” state in the intracellular molecule component. three complexes, rec inactive, receptor_ <dig> and rec inactive unbound, match the constraint. the matching complexes are involved in three reactions that are highlighted in the display.

RESULTS
to illustrate some of the capabilities of the networkviewer, we apply the tool to explore a model for the binding of the epidermal growth factor receptor  to its binding partners. egf provides proliferation, differentiation and survival signals and the membrane-bound egf receptor is associated with several types of cancer if its expression or activation changes erroneously. the model we developed is based on the work by hsieh et al.  <cit>  addressing the possibility of multiple adaptors to bind to the same phosphorylated egfr cytoplasmic  domain simultaneously as opposed to competitively . note that these constraints regarding the possible combinations of molecular interactions were obtained using coarse-grained modeling and may, thus, contain methodological artifacts. but our goal here is to illustrate the application of the networkviewer for visualizing networks based on interaction rules and the proposed constraints are very well suited to be implemented in a rule based model. following  <cit> , an egfr cytoplasmic domain in our model has four binding sites,  <dig>   <dig>   <dig> and  <dig> that, when phosphorylated at the tyrosine residues, can mediate interactions with adaptor molecules grb <dig>  plc γ <dig>  stat <dig> and shc. for our model, we assume that the sites are, indeed, tyrosine-phosphorylated and assign the names py <dig>  py <dig>  py <dig> and py <dig> to the sites, where the py stands for tyrosine-phosphorylated. note that a more complete model of the egf receptor would have to take into account that the receptor undergoes ligand-induced dimerization prior to activation .

stat <dig> and grb <dig> can bind to site py <dig> and py <dig>  respectively. plc γ <dig> can bind to py <dig> or py <dig>  shc can bind to py <dig> or py <dig>  these six interaction possibilities were translated into visually encoded reaction rules using the simmune modeler. in  <cit> , the authors reported several binding constraints in this system. for example, once an adaptor plc γ <dig> binds to py <dig> or py <dig>  it prevents another plc γ <dig> from binding to the other, remaining, site. to accommodate these constraints in our model, we assigned two molecule component states “bndplcg992” and “bndplcg1173” to the egfr species indicating whether a plc γ <dig> is bound to either one of the two binding sites py <dig> and py <dig>  respectively. an additional state “bndshc1148” is needed for the constraint that the binding of shc to site py <dig> and the binding of plc γ <dig> to site py <dig> are mutually exclusive. figure  <dig> shows the representation of complex species egfr with the aforementioned binding sites and molecule component statuses.

the conditions for binding of plc γ <dig> to the egfr using the two possible sites are depicted in figure  <dig>  plc γ <dig> can only bind to egfr when both molecule component states “bndplcg992” and “bndplcg1173” are “off”. after ligation, the corresponding state – py <dig> or py <dig>  depending on which site plc γ <dig> has bound to, switches to “on”, thereby blocking the other site for a second plc γ <dig> molecule. as depicted in figure 11b “bndshc1148” must be in the “off” state to permit the binding of plc γ <dig> to site py <dig> 

after loading the model into the networkviewer, the network overview in figure  <dig> shows the possible reactions between the adaptors and the egfr as well as the binding sites these reactions involve. for example, plc γ <dig> can bind in two ways to the egfr using two different binding sites. after selecting the corresponding intermediate node, the display shows that the binding of plc γ <dig> to site py <dig> changes the state “bndplcg992” from “off” to “on”.

we can now use the search functionality to verify the binding constraints implemented in the egfr model. for example, in figure 13a, a search on the states of the egfr shows that whenever the state “bndplcg992” is “on”, no second plc γ <dig> can bind to the egfr. similarly, in figure 13b, whenever the state “bndshc1148” is “on” plc γ <dig> cannot bind to site py <dig>  moreover, shc cannot bind to site py <dig> either when the state “bndshc1148” is “on”. since an “on” state of “bndshc1148” indicates that shc is already bound to site py <dig>  it is obvious that there cannot be another shc binding to the same site.

CONCLUSIONS
here, we introduced the networkviewer as part of the simmune modeling framework. the networkviewer provides an interactive network model visualization that permits efficient exploration of models built with the simmune modeler using the same visual language. exploiting the hierarchical nature of the reaction network model, the networkviewer creates a compact model overview, in which only the complex species and complex reactions are displayed as nodes. user interaction activates the presentation of detailed information about, for instance, the molecule component states of a complex participating in a particular reaction. the case study of a simple model of interactions among the egfr cytoplasmic domain and its binding partners illustrates how the network overview and user interaction options of the networkviewer permit an efficient navigation of model components and interaction conditions, here provided as adaptor binding constraints.

our current method for visualizing biochemical reaction networks is still incomplete in the sense that the actual rate at which a reaction is occurring not only depends on its rate constant but also on the concentrations of the reacting complexes. we will address this issue by incorporating simulation results into the network visualization. this obviously adds another level of complexity and the kind of information that will be visualized has to be selected carefully. the biologically relevant dynamical information will typically be at the level of patterns of states of molecular complexes or specific state sets and not on the structural level of complex species. thus, displaying the complete dynamical state of a simulated model will be impractical and the viewer will have to dynamically select the most relevant aspect of information in a context dependent way.

currently, the networkviewer only displays reaction networks created with the simmune modeler. however, simmune will soon be able to import rule-based models encoded in the upcoming sbml <dig> multi  standard  <cit> . at that point, the networkviewer can be used to visualize any rule-based model generated by approaches adhering to this standard.

availability and requirements
project name: simmune networkviewerproject home page: http://www.niaid.nih.gov/labsandresources/labs/aboutlabs/lsb/pages/simmuneproject.aspxoperating system: mac, windows, linux.programming language: c++license: downloadable from niaid website. download agreement.any restrictions to use by non-academics: the software may not be used for commercial purposes without prior permission from the niaid office of technology development .

competing interests
the authors declare that they have no competing interests.

author’s contributions
h-c.c. wrote the software with the help of b.r.a. and f.z.. m.m-s. initiated and supervised the project. h-c.c., b.r.a. and m.m-s. wrote the manuscript. all authors read and approved the final manuscript.

