BACKGROUND
laccases  are the largest sub-group of multi-copper oxidases which includes ascorbate oxidases , ferroxidases or ceruloplasmins  and nitrate reductases . laccases were first discovered in the sap of the japanese lacquer tree rhus vernicifera. since then they have been found in many taxa including plants, fungi, bacteria, and metazoa. laccases are involved in a diverse range of cellular activities such as lignin degradation, lignin biosynthesis, pigment production, plant pathogenesis, melatonin production, spore coat resistance, morphogenesis and detoxification of copper  <cit> . laccases are also widely used for industrial purposes. for example, laccases are in paper and pulp, textile, and petrochemical industries for detoxification of industrial effluents  <cit> . in medicine, laccases are used for certain medical diagnostics and as catalysts for the manufacture of anti-cancer drugs  <cit> . they are also used for environmental remediation of herbicides, pesticides and as explosives in soil and cleaning agents for certain water purification systems. in commercial products, they are found in cosmetics, denim bleaching, wine and beer stabilization, fruit juice processing, color enhancement of tea and even baking  <cit> . laccases are popular in industry for a number of reasons. they are better for the environment, and have fewer non-specific reactions than conventional oxidation technologies. many laccases are extracellular enzymes which makes their purification simple. compared with other oxidative enzymes, these are easier to use as they catalyze reactions with molecular oxygen and do not need reactive oxygen species catalysis  <cit> . currently, fungal laccases comprise most widely studied and commercially used laccases. however, there is much interest in bacterial laccases also due to their higher temperature stability and ability to operate at different phs than fungal laccases. generally, laccases are composed of dimeric or tetrameric glycoproteins with each monomer containing a copper containing site. these copper sites may be one of three types: type- <dig> or blue copper, type- <dig> or normal copper, and type- <dig> or coupled-dinuclear centers. these copper binding motifs have been shown to be highly conserved across all laccases, with a trend towards greater similarity in the n and c terminal domains as these are the copper containing domains. it has been noted that the size of the central binding pockets are larger in bacterial laccases than in fungal or plant laccases. these copper binding sites yield significant differences in conserved residues for laccases of bacteria, fungi, and plants  <cit> .

fungal laccases
fungal laccases comprise the bulk of experimentally studied laccases. they occur in many fungal species and are thought to play important roles in morphogenesis, fungal-plant interactions, stress defense, pigment production, and lignin degradation. while typically studied with respect to biomass degradation, most fungi found producing several isoenzymes of different types, enzymatic or physical properties, and expression levels. these can vary even more between species  <cit> . for example, it has been reported that one of the most efficient lignin degraders, phanerochaete chrysosporium produces a laccase different than other efficient lignin degrading fungi  <cit> . while most laccases are extracellular enzymes, many fungal taxa produce intracellular laccases  <cit>  also. this is especially interesting when compared with enzymes of similar function such as lignin peroxidases which are strictly extracellular. it is speculated that the cellular localization of laccases may be connected their function and substrate ranges. this hypothesis still remains elusive due to the majority of studied fungal laccases coming from wood-rotting basidiomycetes. the enzymatic properties of fungal laccases vary greatly such as temperatures vary from 25-80Â° c, ph optimums:  <dig> '-azino-bis  from  <dig> - <dig> ,  <dig> -dimethoxyphenol  from  <dig> - <dig> , guaiacol from  <dig> - <dig> , and syringaldazine from  <dig> - <dig> . similarly, km  ranges vary a lot such as: abts from 4- <dig>  dmp from 26- <dig>  guaiacol from 4- <dig>  syringaldazine from 3- <dig>  also kcat  vary in a broad range as: abts from 198- <dig>  dmp from 100- <dig>  guaiacol from 90- <dig> and syringaldazine from 16800- <dig>  these properties can further be altered by glycosylation.

plants laccases
traditionally plant laccases were considered to be only extracellular enzymes involved in the radical-based lignin polymerization. however, a high degree of divergence among laccases within a single plant species has been observed, such as ryegrass which contains  <dig> different laccase genes. also, it is reported that laccases lack n-terminal signal peptides for secretion but have signals targeting to other cellular components such as the endoplasmic reticulum or peroxisomes. another study on poplars showed that laccase repression had no effect on lignin production. despite the evidence for novel functions and many known functions in other taxa, the grouping of plant laccases still remain elusive  <cit> .

bacterial laccases
bacterial laccases are known to be widespread in prokaryotes; however, only few have been experimentally characterized. to date, bacterial laccases have been found mostly to be involved in lignin degradation, catabolism of phenolic compounds, cell pigmentation, morphogenesis, and copper defense  <cit> . the best studied bacterial laccase is cota and endospore coat protein from bacillus subtilis which produces a melanin like pigment. this enzyme has generated high amounts of interest due to its extremely high temperature stability. bacterial laccases are also unique due to the lack of cellular partitions in prokaryotes. the reactions catalyzed by laccases can produce quinones and semiquinones as by-products, which are powerful inhibitors of the electron transport change  <cit> .

other laccases
in metazoan, laccases exist in mammals as well as invertebrates. the roles of laccases in mammals do not appear to be well understood, however, insect laccases are known to be involved in cuticle formation  <cit> . cuticle tanning also known as sclerotiziation and pigmentation is the process through which proteins in the exoskeleton are conjugated. this causes the exoskeleton to become insoluble, harder, and darker.

classification of laccases: current view
laccases are currently classified as part of a larger classification scheme for multi copper oxidases  <cit> . this is based on multiple sequence alignments and seems to classify by taxonomical association. the current classification system i.e. "the laccase engineering database" , classifies multi copper oxidases into eleven classes: basidiomycetes laccases, ascomycete laccases, insect laccases, fungal pigment mcos, fungal ferroxidases, fungal and plant ascorbate oxidases, plant laccases, bacterial copa proteins, bacterial bilirubin oxidases, bacterial cueo proteins, and slac homologs.

machine learning-based classification systems
as discussed above, the current classification system for laccases largely follow species taxonomy rather than substrate ranges, enzyme properties, or specific function. although it has been observed that individual laccases often exhibit distinctive and varied substrate ranges, and have different functions based on distinguishing ph values among different taxa. we hypothesize that a descriptor-based computational prediction system could be developed to generate a homology-independent classification system for better describing the functional properties of laccases. in a previous study on feruloyl esterases , an unsupervised learning approach was used to create a novel homology independent classification system for this enzyme class. various bioinformatics tools were used to validate the identified classes  <cit> . in the present study, we followed a two-way computational strategy to identify and classify various laccase subtypes by developing a python command line-based implementation of the unsupervised and supervised learning approaches, respectively. further, we implemented our prediction models as a web-based prediction server to classify novel laccase subtypes. the tool could be useful to the biofuel researchers and industry as well.

methods
dataset generation
alternate names for laccases were found via cross referencing with the kegg database . to search for laccase sequences, we combine these names to start as a basic query. sequences with protein or transcript level evidence were selected to ensure high quality data as well as avoid potentially mislabeled multi-copper oxidases. then we search uniprotkb for laccase sequences using some search terms as listed in table  <dig>  using the "browse by" option on uniprot's gui the query was checked for possible contaminating sequences. the contaminant sequences were filtered out using not conditions . finally,  <dig> protein sequences are collected with average sequence length above  <dig> residues. to further validate the quality of the datasets the protein descriptions of the data were analyzed with the text clustering functionality in google-refine version  <dig> . a significant variation was found in the protein descriptions but no cases of contamination were found. as a final check of data quality, the lengths of the sequences were calculated and plotted on a bar graph shown in figure  <dig>  sequences containing non-standards/ambiguous characters were removed from the data set.


and

and

and fragment:no
and not name:"catechol oxidase"
and not ec: <dig> . <dig> 
feature representation of laccase proteins
it is important to extract better features of protein sequences to improve the performance of the machine learning method. we used several features such as amino acid composition , conjoint triad , composition-transition-distribution , dipeptide composition , geary autocorrelation descriptors, moran autocorrelation, moreau-broto autocorrelation, physicochemical properties and a composite vector of amino acid composition and physicochemical properties.

amino acid composition 
each protein sequence is represented as a 20-dimensional feature vector with each element corresponding to the percentage of one of the twenty amino acids  <cit> . for a given protein sequence x, let the function f represent the occurrence of the  <dig> standard amino acids. thus, the composition of the amino acids px in the given sequence can be represented as,

  p= 

where p is given as,

  pxi=fâi=120fi= <dig> , <dig> â¦ <dig> 

dipeptide composition 
dipeptide sequence composition is similar to amino acid composition. however, it considers the percentages of dipeptides occurring in a given protein sequence  <cit> . thus, the composition of each dipeptide is given as,

  pxi,xj=fâi= <dig> âj=120fi,j= <dig> ,3â¦... <dig> 

where pxi,xj is the fraction of number of instances of a specific dipeptide f and the total number of all dipeptides.

conjoint triad 
in conjoint triad, in addition to amino acid composition it considers the sequence order effect  <cit> . it is calculated by grouping the  <dig> standard amino acids into  <dig> groups based on physical and chemical similarity . triads are made from all combinations of three amino acids of these groups, resulting in a vector length of  <dig> . thus, a protein sequence is represented as,

  pxi,xj,xk=fâi= <dig> âj= <dig> âj=17fi,j= <dig> ,3â¦... <dig> 

where f is the number of occurrences of a specific triad and âi= <dig> âj= <dig> âj=17f is the number of all triads  <cit> .

composition-transition-distribution 
in this representation three local descriptors, composition , transition  and distribution  are used in combination to construct the feature vector. these descriptors are based on the variation of occurrence of functional groups of amino acids within the primary sequence of protein  <cit> . thus, before computing this feature the twenty amino acids are clustered into seven functional groups based on the dipoles and volumes of the side chains  <cit> . the composition descriptor computes the occurrence of each amino acid group along the sequence. transition represents the percentage frequency with which amino acid in one group is followed by amino acid in another group. the distribution feature reflects the dispersion pattern along the entire sequence by measuring the location of the first,  <dig>   <dig>   <dig> and 100% of residues of a given group. hence, total  <dig> features  are constructed to represent a protein.

autocorrelation feature vectors
autocorrelation features describe the level of correlation between two protein sequences in terms of their specific physicochemical property, which are defined based on the distribution of amino acid properties along the sequence. there are  <dig> amino acid properties used for deriving autocorrelation descriptors.

moran autocorrelation
the moran autocorrelation  descriptor of a protein is defined as:

  dmac=1n-d âj=1n-dpj-p Â¯Ãpj+d-p Â¯1n âj=1npj-p Â¯ <dig> 

where n is the length of the protein sequence, d =  <dig> ,...... <dig> is the distance between one residue and its neighbors, pj and pj+d are the properties of the amino acid at positions j and j+d respectively. p Â¯= âj=1npjn is the average of the considered property p along the sequence.

geary autocorrelation
geary autocorrelation  descriptor of a protein is defined as:

  dga= <dig> âj=1n-dpj-pj+d21n- <dig> âj=1npj-p Â¯ <dig> 

p Â¯, n, pj and pj+d are defined in the same way as above.

moreau-broto autocorrelation
moreau-broto autocorrelation  descriptor of a protein is defined as:

  dmbad= âj=1n-dpjÃpj+d 

p Â¯, n, pj and pj+d are defined in the same way as above.

physicochemical properties
physicochemical properties of amino acids have been used successfully in numerous prediction tools  <cit> . in this study, we grouped the amino acids of a protein into classes based on some physicochemical properties. also the theoretical pi, molecular weight, and length of the protein are used in the feature vector. the non-composition based values are divided by the length or mass on the protein titan in order to provide values between one and zero. molecular weights were calculated by adding the weights of the each amino acid in the sequence in a suitable way related to their chemical activity. a detailed description of these properties is provided in table  <dig> 

split amino acid composition
split amino acid composition aims to capture information about signal peptides at their n- or c-terminal region. the amino acid composition of the n-terminal region, center, and c-terminal region are computed and then concatenated together. the n- and c- terminal regions are the first and last  <dig> amino acids in the sequence. thus a protein sample is represented as a  <dig> element vector as,

  px= 

unsupervised classification
unsupervised learning organizes the data based on the similarity patterns between them. in this study, clustering was used to group the data into classes sharing same type of similarity not found in other classes. we followed the similar methodology as outlined in the paper  <cit> . we first used self- organizing map  to identify the possible number of groups in the dataset and used that information in k-means clustering to divide them in different clusters.

self-organizing maps 
soms are a type of artificial neural networks used in unsupervised learning to produce low dimensional discrete representations of the vector space represented by some training data  <cit> . the discrete elements in soms are called nodes or neurons. it has been used widely in bioinformatics and computational biology mostly for tasks such as finding gene expression patterns and protein classification  <cit> . the som map contains m neurons, where each contains a d-dimensional prototype vector with d as the dimensions of the input vectors. first, initial values were given to each prototype vector. when training begins a vector 'x' from the input data is randomly chosen. the distances from 'x' to the prototype vectors are computed and the neuron closest to 'x' or best matching unit  is selected. the radius of the neighborhood of the dmu is calculated, any neurons found within the radius are deemed neighbors. the neighbor's prototype vector is adjusted to be more similar to the input vector. this procedure was then repeated for certain iterations   <cit> . in this study, som of multiple dimensions were studied and n was  <dig>  for all dimensions. for the som implementation, we used an open source machine learning package 'orange.py' which is freely available at http://orange.biolab.si <cit> .

k-means clustering
k-means clustering is a class of unsupervised learning algorithms which group input data set into 'k' parts or clusters  <cit>  based on similarity measure. k-means is one of the oldest and simplest clustering methods, however still remains a useful tool for cluster analysis. it scales well to large data sets and medium numbers of clusters, however, has the drawback of needing to specify the number of clusters expected. the basic k-mean algorithm begins by initializing k cluster centers  and iterating to minimize the average distances between centroids and their cluster members. the data which are close to any cluster centroid belong to that cluster. the centroids were pre-computed using the neurons from the som. in this study, an open source machine learning library 'sci-kit learn' was used to implement the k-means clustering method  <cit> .

som for finding k number and centroid locations for k-means clustering
in this study, first an som network computed containing n neurons and calculates the davies-bouldin index  of the map treating the neurons as clusters. then,  Ã  prototype maps were created by making all combinations of each neuron with the other neurons. the dbi is computed for all prototype maps, and the prototype map with the lowest dbi is selected. if the dbi of this map is lower than the current map the map is changed to other prototype map and the previous steps are repeated until no prototype map with a lower dbi can be found. this reduces the size of the map by one each iterations with the final number of neurons being used as the k value for k-means clustering and the cluster centroids are computed from the vectors belonging to each neuron. the efficiency of k-means clustering is measured using the difference between the inter-cluster and intra-cluster variance and the davies-bouldin index. as som find the clusters in random fashion, to get the optimum number of clusters, the clustering procedure was run  <dig> times for each vector type. the optimum number of clusters was chosen by selecting the cluster from the most often occurring cluster number with the largest intercluster and intracluster difference and smallest dbi.

davies-bouldin index 
the dbi is a metric for evaluating overall quality of a given set of clusters originally developed to aid in determining the optimum number of clusters within a dataset  <cit> . minimization of the dbi of the clusters within a dataset seems to generally indicate natural partitions of data sets. however, it should be noted that this is a heuristic approach and good values do not always indicate the best clustering arrangement. dbi of a clustering approach is defined as,

  dbâ¡1n âi=1ndi 

where di is the worst case scenario of all values of ri,j,

  diâ¡maxj:iâ jri,j 

ri,j is a measure of the clustering quality, defined as

  ri,jâ¡si+sjmi,j 

the measure of scatter  within a given cluster i, is defined as

  si=1ti âj=1tixj-aiqq 

where xj is a n-dimensional feature vector assigned to the cluster ci and q was kept as two and mi,j is a measure of separation between two clusters defined as

  mi,j=ai-ajp 

where ai is the centroid of cluster ci containing samples x <dig> x <dig> .....xk and computed as,

 ai=x1+x2+x3+â¦+xkk 

intra-cluster variance
intra-cluster variance was calculated using the euclidean distances between the points in the cluster and the centroid of the cluster.

inter-cluster variance
inter-cluster variance was calculated using the euclidean distance between the centroids of the clusters.

co-occurrence matrix analysis
the cluster numbers returned from the clustering approach is arbitrary which presents a unique problem when trying to access the similarity between runs. thus, to assess the consistency of belonging of samples in a particular group, a co-occurrence matrix was generated to show the number of times a given data sample in one group occurred with other groups. the higher the numbers of data samples occurring together, the more consistency the clusters in various runs.

support vector machine 
svms are a class of supervised learning algorithms based on the optimization principle from statistical learning theory  <cit> . support vector machines have been used widely in computational biology in diverse topics such as subcellular localization  <cit> , protein function prediction  <cit> , secondary structure prediction  <cit> , disease forecasting  <cit> . svms solve classification problems by calculating a hyperplane that separates the training data with a maximum margin. for multi-class classification the classification is transformed into a series of binary classifications. there are numerous strategies for handling a multi-class problem separated into binary classifications and in this study the one-versus-rest approach was used. the svm classifiers were developed using the svm_light package , which is an open source package for svm implementation  <cit> . in a preliminary study, the rbf kernel was found to perform best. therefore, we used rbf kernel in all our svm classifiers.

performance evaluation parameters
to assess the performance of the developed models, we used a five-fold cross validation test on the training dataset and then tested the models in an independent test. in a five-fold cross-validation procedure, the original sample is randomly partitioned into five equal size subsamples. of the five subsamples, a single subsample is retained as the validation data for testing the model, and the remaining four subsamples are used as training data. the cross-validation process is then repeated  <dig> times , with each of the  <dig> subsamples used exactly once as the validation data. the results from the five-folds are then averaged to produce a single estimation. the performance is measured by the parameters such as overall sensitivity, specificity, precision, matthews correlation coefficient  and average accuracy. these parameters are defined as follows:

 sensitivity or coverage of positive examples: it is the percent of positive samples correctly predicted,

  sensitivity=tptp+fn 

 specificity or coverage of negative examples: it is percent of negative samples correctly predicted as positive,

  specificitysp=tntn+fpÃ <dig> 

 accuracy: it is the percentage of correctly predicted samples,

  accuracyacc=tp+tntp+fn+fp+fnÃ <dig> 

 error rate: it is the total percentage of incorrect predictions is calculated as

error rate  = errorrateer=fp+fntp+fn+fp+fnÃ <dig> 

 precision: it is the percentage of positive ppis those are correct identified true prediction,

  precision=tptp+fpÃ <dig> 

 matthew's correlation coefficient : it is considered to be the most robust parameter of any class prediction method. mcc equal to  <dig> is regarded as perfect prediction while  <dig> for completely random prediction.

  mcc=tpÃtn- 

where true positive tp) is the numbers of positive samples that are predicted correctly; false negative  is the number of positive samples that are predicted to be negative; false positive  is the number of negative samples that are predicted positive and true negative  is the number of negative samples that are predicted correctly as negative.

feature scaling
to have knowledge of most relevant features for classification of laccase types, a feature scaling approac is conducted. feature scaling was performed using univariate feature selection using the functions provided by sci-kit learn using the program scale_features.py <cit> . univariate feature selection implemented by considering each element of the descriptor vectors independent from one another and ranking them based on their occurrence between classes.

domain map and phylogenetic trees construction
the program domosaic was used to create domain maps for visualization of the domains in the initial data and newly generated classes  <cit> . interproscan was used to get the information about the domains in the laccases  <cit> . to show the relationship between laccase samples, a phylogenetic tree was generated with the cleaned dataset using clustal omega version  <dig> . <dig>  <cit> . dendroscope version  <dig> . <dig> was used for the visualization of the tree.

RESULTS
we have studied several som architectures to see the effect of clustering of the laccases with many descriptors. the clustering algorithm was run  <dig> times for each som map size. the clustering performance of each descriptor is listed in table  <dig>  physicochemical properties showed the best average performance among all the feature vectors providing  <dig> clusters as optimum cluster size. this is also in close agreement with the study for feruloyl esterases classification where the strongest descriptor was the composite vector combining amino acid composition and physicochemical properties  <cit> . we also performed a co-occurrence matrix analysis to see the consistency of cluster instances in each group. the physicochemical property descriptor shows consistency in cluster instances between runs and different som dimensions. the co-occurrence matrix is shown in figure  <dig>  the 6x <dig> som dimension gave the best run with a dbi of  <dig>  with an inter-cluster variance of  <dig>  and intra-cluster variance of  <dig> . the performance of the physicochemical descriptor in each som dimensions is listed in table  <dig>  the proteins classified in each group after the clustering approach are listed in table  <dig> 

som: self organizing map, aac: amino acid composition, dipep: dipeptide composition, ct: conjoint triad, c of ctd: composition of ctd, ma: moran autocorrelation, mba: moreau-broto autocorrelation, cdvd: intercluster - intracluster variance, dbi: davies-bouldin index.

analysis of the taxa in each class revealed that the majority of the classes were dominated by single taxa as reported in table  <dig>  several review papers containing large tables of experimentally validated laccases with various properties were considered to validate the clusters. unfortunately, these were difficult to draw patterns from as the substrates tested varied widely and heterologously expressed laccases often have drastically different activities due to different amounts of glycosylation  <cit> . to better understand what is driving the distinction of different classes, feature scaling was applied to the physicochemical properties of all classes together, as well as each class against each other. the major contributing features were the percentage of negatively charged amino acids, isoelectric point, and the percentage of acidic or amidic groups. the detailed information about the significant features is shown in figure  <dig>  this is particularly interesting as laccases as a group operate over a wide range of phs while individual enzymes seem to have fairly specific or broad ph and substrate ranges  <cit> . also, it has been reported that different laccases produced by the fungi coriolus versicolor were easily distinguishable by their isoelectric points  <cit> . the differences between classes in terms of physicochemical properties, the best features were calculated for all classes and shown in figure  <dig>  this showed that the variation seems to be strongly influenced by acid/base properties, and next to the small residues or aliphatic residues. the isoelectric point occurred most often within the top three features with  <dig> cases, followed by basic amino acids with  <dig> cases, acidic with  <dig> cases, ionizable amino acids with  <dig> cases, acidic and amidic with  <dig> cases, charged residues with  <dig> cases, h-bonding and small amino acids both had  <dig> cases, tiny with  <dig>  neutral and hydrophobic with  <dig>  aliphatic with  <dig>  hydrophilic with  <dig>  and molecular weight with  <dig> 

additionally, we analyzed the descriptor values for physicochemical properties and amino acid composition between classes with a standard t-test. the t-test results of the aac features between the  <dig> classes are listed in additional file  <dig>  it shows that ala, cys, asp, glu, his, lys, met, asn, arg, ser, and thr vary significantly between the classes. this is particularly interesting as the amino acids which have the highest amounts of statistically significant differences between classes seem to be involved in important aspects of laccases. for example, the top two amino acids are aspartic acid and lysine with significant differences among  <dig> of the  <dig> possible class comparisons. aspartic acid plays an important role in many laccase catalytic domains such as: assisting in substrate channels in basidiomycete laccases, affecting laccase activity of c-terminal domains when mutated in bacterial laccases, and assisting in the exit of protons from the n-terminal domains of bacterial laccases  <cit> . lysine can also be found widely in catalytic domains, for example c-terminal lysines have been implicated in the inactivation of heterologously produced laccases  <cit> . aside from function, lysines are also widely used as a cross linking target to bind laccases to various materials  <cit> . glutamic acid had the next most significant differences between classes. this was observed in leu-glu-ala motifs which follow the copper ligating histidines and are thought to be related to laccases with higher redox potentials  <cit> . further, asparagine closely followed with  <dig> significant differences. many laccases are known to contain asparagines which serve as sites for n-linked glycosylation  <cit> . these sites have been shown to be involved in regulation of laccase activity through catalytic sites such as the leu-met-asn motif which often replaces the previously mentioned leu-glu-ala motif  <cit> . n-glycosylation has also been found to provide protection against proteolysis  <cit> . other types of glycosylation such as o-linked glycosylation are also major factors, so it comes as no surprise that both serine and threonine are high on the list  <cit> .

in our other statistical analysis, the t-test results of the important physicochemical properties as identified in figure  <dig> are listed in additional file  <dig>  it shows that all the physicochemical properties identified to be important in discriminating between classes are also significant. we believe since the generated classes contain many significant differences in physicochemical properties and the amino acids with high numbers of significant differences also strongly related to laccase function, these classes may indeed represent different functional classes of laccases. to investigate the classes further, a cladogram was constructed from a multiple sequence alignment using the sequences used for clustering. we then mapped our clusters and the classes from lcced to the cladogram figures 5a and 5b respectively  <cit> . despite many of the clusters being dominated by a single taxa, when mapped to the cladogram they are widely dispersed throughout the taxonomic regions of the cladogram. this contrasts sharply with the lcced classes which largely only follow taxonomy. many of the neighbors in the tree are composed of enzymes from the same or similar organisms; these could indicate laccases of different function from within an organism.

classification framework
to allow for the classification of newly discovered laccases and laccases with no experimental evidence, a support vector machine-based classification system was developed. to accomplish this, 90% of the laccase data collected was used for 5-fold cross-validation and the remaining 10% kept aside for independent testing. as physicochemical descriptors were used to build the classes, physicochemical properties were also used to develop the svm classifiers. the developed models were further used to classify sequences annotated as laccases with "homology" or "predicted" level evidence in the uniprotkb database.

5-fold cross-validation
the performance of the classifier in 5-fold cross-validation for all classes is reported in table  <dig>  the results show that the model achieves the overall accuracy of  <dig> %, mcc of  <dig> , precision of  <dig> %, sensitivity of  <dig> % and specificity of  <dig> %. the overall specificity is extremely high indicating a low rate of misclassified sequences. considering the classes individually, the highest metrics achieved were mcc  <dig>  and accuracy, specificity, and sensitivity of 100%. the lowest performance was accuracy of  <dig> %, mcc of  <dig> , sensitivity of 80% and specificity of  <dig> %.

acc: accuracy, err: error, mcc: matthews correlation coefficient, per: precision, sen: sensitivity, spe: specificity, fn: false negatives, fp: false positives, tp: true positives, tn: true negatives.

independent testing
performance results on an independent test data are listed in table  <dig>  the model also provides higher performance with an overall accuracy of  <dig> %, error rate of  <dig> %, mcc  <dig> , precision of  <dig> %, sensitivity of  <dig> % and specificity of  <dig> %. it should be noted that the mcc of cluster- <dig> was zero. however, this class contains only one sequence and performs well in cross validation, so we believe it is still credible.

acc: accuracy, err: error, mcc: matthews correlation coefficient, per: precision, sen: sensitivity, spe: specificity, fn: false negatives, fp: false positives, tp: true positives, tn: true negatives.

confusion matrix
confusion matrixes were made in order to better understand which classes are more similar to one another. the confusion matrix for the independent test set is shown in table  <dig>  according to the confusion matrix, it appears that few proteins in classes  <dig>   <dig>   <dig>   <dig> and  <dig> are predicted as other classes. the results in confusion matrix show the efficiency of the developed classifier in predicting the samples correctly.

values in parentheses represent total number of sequences present in each subtype.

roc curves
roc curves are important to consider for prediction systems to give an accurate measure of credibility and or reliability. each point on the curve is based on the confidence score thresholds of a single classifier. each roc curves compute the area under the curve . this indicates the probability of positive sequence having a higher value than a negative sequence when two are selected at random  <cit> . the more shift of the curve toward left, the more accurate the predictor. we calculated the roc curves for each class for 5-fold cross-validation and independent set testing separately. the roc curve for 5-fold cross-validation is shown in figure  <dig> and for independent set in figure  <dig>  each contains a line for each class in the prediction system as well as a line showing the average performance of all classes. all classes show excellent performance with lines very close to the left side of the chart, indicating a high rate of correct predictions from these models. indeed, the overall area under the curve rounds up to  <dig>  showing the reliability of our classifier.

functional annotation of different classes with domain maps
to investigate the role of domains in the functional variation between different classes, we generated domains maps for the sequences in each class. eleven different types of domains were found to exist within the dataset. the frequently occurring domains are pf <dig>  pf <dig>  pf <dig> and pf <dig>  the first three are mostly found in plants and fungi and the domain pf <dig> found mostly in bacterial or mammalian origins. class  <dig> contained a couple of polyphenol oxidase domains and tyrosinase domains. the domain maps generated for all the classes are shown in figure s <dig> in the supplementary material. the majority of the domain maps were highly similar within and between classes with respect to domains present. however, there were some differences between the positions of the domains. we believe that these differences in the relationships between the positions of the domains could also account for functional differences.

classification of laccase homologs from uniprotkb
the efficiency of our prediction approach is tested by identifying the laccases in uniprotkb with homology or predicted level evidence. out of the  <dig> sequences retrieved,  <dig> were predicted to one of the  <dig> classes and reported in table  <dig>  these annotations could be a good resource to the scientific community working in these areas.

web tool for classification of laccases
we have developed a web resource for the classification of the laccase subtypes by implementing the machine learning models. it will be very useful to the researchers to characterize the newly found laccase sequences. the tool can be found at http://lacsubpred.bioinfo.ucr.edu/. we have also provided the codes used to develop the clustering and classification approach as an open source package available at https://github.com/tweirick/subclpred.

CONCLUSIONS
in this work, we present a systematic computational approach to identify laccase subtypes. first, a novel clustering method is developed to group the laccase subtypes using the experimental data available in uniprotkb. then a classification method is developed based on machine learning approach to generalize the functions of laccases in each class. these identified groups can be a useful resource to the biologists to study the characterization of laccases, particularly for researchers in the biofuel area.

availability
lacsubpred, the web resource developed form this study, is freely available at http://lacsubpred.bioinfo.ucr.edu/.

list of abbreviations used
roc, receiver operating characteristic; mcc, matthews correlation coefficient; som, self-organized maps; svm, support vector machines; dbi, davies-bouldin index; aac, amino acid composition; ct, conjoint triad; ctd, composition-transition-distribution; dipep, dipeptide composition; ma, moran autocorrelation; mba, moreau-broto autocorrelation.

competing interests
the authors declare that they have no competing financial interests.

authors' contributions
tw collected the datasets related to laccases from public repositories, wrote codes for clustering, developed algorithms and models, performed the calculations, figures and tables, and wrote the draft manuscript. sss helped in model development, data analysis and tool building. rm helped in biological analysis and in editing the manuscript. rk conceived the study, participated in its design and coordination, and edited the final manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 2
p-values designating the statistical significance of one cluster over the other based on amino acid composition differences; values calculated using the standard t-test.

click here for file

 additional file 3
p-values designating the statistical significance of one cluster over the other based on protein physicochemical property differences; values calculated using the standard t-test.

click here for file

 additional file 1
domain maps for each of the laccase subtypes cluster generated using domosaics .

click here for file

 acknowledgements
the authors duly acknowledge the funding support to rk for this study from osu's provost office interdisciplinary grant , the icrest center for bioinformatics and computational biology . partial support to tw from the national science foundation grant no. eps- <dig> is duly acknowledged. we also thank the university of california riverside  high performance computing / bioinformatics facility for hosting the web tool developed from this study.

declaration
funding for the publication of this article has come from the 'start-up' funds provided to rk, account a01949-19900-44-cpk <dig>  ucr.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2014: proceedings of the 11th annual mcbios conference. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/15/s <dig> 
