BACKGROUND
large-scale whole-genome sequencing  is revolutionizing microbiology and public health
. thanks to the latest technological advances, bacterial genomes can now be sequenced in less than 48 hours for less than € <dig> per genome. new benchtop devices are providing wgs capability to routine microbiological laboratories, and wgs is now becoming an important part of clinical microbiology and molecular epidemiology. this emerging field of “genomic epidemiology”
 already comprises numerous studies that have evaluated the potential of wgs to trace the transmission of pathogens such as clostridium difficile, pseudomonas aeruginosa, klebsiella pneumonia, neisseria meningitidis, staphylococcus aureus and mycobacterium tuberculosis
. moreover, wgs is playing an increasing role in molecular drug susceptibility testing  and the identification of drug resistance mutations
. it is expected that wgs will eventually replace all other bacterial genotyping methods
 <cit> .

in contrast to the increasing availability of wgs platforms, the capability to analyse wgs data is lagging behind, partially because of the lack of rapid and user-friendly analysis tools. extracting single nucleotide polymorphisms , the most widely studied form of genetic variation, from wgs data requires substantial bioinformatics expertise, as well as dedicated bioinformatic analysis pipelines often based on customized scripts. moreover, this standard approach of analysing wgs data is time-consuming and computationally expensive
 <cit> , and as a consequence, biological questions can often not be addressed directly by the people generating the data. furthermore, large amounts of data are produced when analyzing complete genomes, although often only a small proportion of these data are relevant for the study question; this is particularly true when screening for drug resistance determinants. identifying individual snps of interest usually requires mapping all sequencing reads in a fastq file to a given reference genome, despite the fact that only a few nucleotide positions might be relevant. tools have been developed to speed up the extraction of relevant information. these include in silico multi-locus sequence typing  from draft genomes or contigs, but all these methods rely on previous assembly
. one of these tools, srst, facilitates the process by accepting fastq files for a given typing scheme. srst uses bwa and samtools and is highly configurable, but is aimed at the bioinformatically skilled users and lacks a graphical interface. however, a graphical interface is crucial for making these kinds of genome analyses accessible to a broader group of microbiologists, including the ones primarily interested in routine clinical applications. consequently, there is a need for software able to extract allelic information directly from the raw sequencing reads without the need of previous mapping or de novo assembly.

here we present kvarq, a software that enables rapid screening of short sequence reads for mutations at multiple nucleotide positions of interest. kvarq uses as input a fastq file, and generates the output in form of a text file in javascript object notation  format. using a complete bacterial genome sequence as a reference, kvarq can interrogate any single nucleotide position or short dna sequence of interest for known or unknown mutations, respectively.

kvarq is universally applicable to any short read dataset and corresponding reference sequence, and is highly adaptable with respect to target polymorphisms. clinical microbiological laboratories will benefit from kvarq’s short analysis time, while laboratories in resource-limited settings can get access to genome analysis despite the lack of advanced computational infrastructure and/or appropriately skilled staff.

even advanced users will save time by avoiding the need for formal mapping or assembly to answer specific questions, particularly when studying large numbers of genomes.

kvarq is available for linux, os x and windows, and runs on any portable or desktop system. a command line interface and a simple graphical user interface are available. we aimed at a self-explaining application with short run times , while keeping the program flexible enough to be used with other organisms. kvarq can be downloaded  from http://www.swisstph.ch/kvarq.

implementation
overview
kvarq analyzes a fastq file and detects the allelic state of known polymorphisms, and compiles all the relevant information about the genome sequence. in contrast to current genetic analysis software
 <cit> , kvarq extracts the relevant information directly from the sequencing reads, without the need to map every read to a reference genome. the software can be used via the command line or the graphical user interface, and is split into one part that scans the fastq files and saves the results to a json file, and a second part that extracts and illustrates the information contained in the json file. although results reported in this article mainly use sequencing data from the mycobacterium tuberculosis complex , the software can be used with any short read sequencing data from any organism. currently, kvarq is optimized for haploid organisms, but could be extended to analyze diploid data sets. in principle, kvarq could be used to scan through very large datasets, such as from human genomes, although the scan time would increase linearly with data size.

algorithm and parameters
the following paragraphs describe the information flow inside kvarq from the fastq files to the final results that are displayed to the user .figure  <dig> 
simplified overview of scanning process and preparation. “testsuites” are python source files that define the snps of interest  as well as other relevant genetic information . this information is used to extract a “target sequence” from a reference mtbc genome: on both sides, additional bases  are concatenated to avoid border effects within the sequence of interest. during the scanning process, every read is trimmed depending on its phred score . after the scanning, the part of the reads that matched the target sequence and exceeded the minimum quality score  are assembled to a “coverage” that indicates the overall coverage depth as well as all detected mutations . in a further step, additional information is generated from this coverage  and finally a short “result” string is generated that summarizes the result of the scanning process.



before the scanning process, target sequences are generated from known mutations or regions of interest. kvarq uses a modular approach, where different “testsuites”  define known single nucleotide polymorphisms  or small regions of interest that harbour potential mutations . the target genomic sequence is extracted from a reference genome and flanked on both sides with additional bases. these flanking regions increase the length of the sequence and thereby increase the coverage over the region of interest . for each of these “target sequences”, the corresponding base-sequence on the complementary strand is also generated.figure  <dig> 
interactive inspection of “coverage”. this screenshot shows the coverage over a short region of interest  and the surrounding flanking sequence. note the mutation in the middle of the three base pair long sequence . the decrease of coverage on both sides is due to the minimum overlap that is set to a value equal to the length of the two flanking regions.



the actual scanning algorithm is implemented in c and splits the fastq file into small parts that are distributed to multiple threads and scanned simultaneously. first, every read is trimmed by a user-specified minimum quality score. the trimmed part is then shifted along each of the target sequences and every match  is recorded in the “hit-list” if a minimum overlap is warranted. currently, no indexing/caching is used for comparison of the reads with the target sequences. this works fast enough for the short target sequences used in our analysis. the scanning process continues until the whole file is scanned or a specified minimum coverage is reached.

next, the data gathered from the fastq files is translated into intermediary data structures . these data structures combine the reads from the original as well as the complementary strand, position them within the genome, and summarize non-matching bases in reads .

finally, the testsuites determine the results based on the information conveyed by the intermediary data structures created in the last step. currently, mutations are extracted by using a simple threshold that separates them from sequencing errors – this is possible because kvarq neglects bases that do not satisfy the minimum read quality requirements set by the user. how this mutation information is processed further varies depending on the various testsuites. for example, the phylogenetic testsuite we applied for mtbc uses three phylogenetically informative snps for every lineage and imposes logical constraints on sublineages. for example, any genome belonging to the mtbc “beijing” sublineage must also have the snps characteristic of “lineage 2”. the resistance testsuite checks for every mutation whether a change in amino acid sequence follows the nucleotide change  and only reports those to the user. if the results have a low confidence due to low coverage of the sequences, this is also added as a remark to the result output.

data format and analysis
kvarq uses fastq files with solexa, sanger and different illumina quality scores as input files. the quality format is determined by a heuristic search. only one input file per genome sequence is accepted, and paired-end files are automatically included. the output is structured data in json format, a human readable file that contains information about the scanning process , the final results, and the intermediary data structures that were used to calculate these results. the information contained in the json file can be used to re-calculate the results without the need to re-scan the fastq file, because most of the relevant information is contained in the intermediary data structures that are saved along with the results in the json file.

to facilitate the extraction of relevant results, kvarq provides data analysis tools to inspect the data interactively from the command line or with a hierarchical menu-driven graphical user interface. the “json explorer” shows the summarized test results for every testsuite  as well as detailed information about the coverage of every target sequence that was used by the different testsuites . the interactive exploration of this wealth of information is intended for the advanced operator to get, for example, a better impression of the usefulness of newly designed target sequences or the fastq quality. additionally, the “json explorer” displays overall number of reads in a fastq file and the length of the reads.figure  <dig> 
interactive inspection of json file. the upper pane of each window in these screenshots shows the main categories of data contained in the json file. in the left window, the drug resistance section is selected and the lower pane shows details about all target sequences in this testsuite . in the right window, the phylogenetic section is selected, showing that all snps for “lineage 2” and “beijing sublineage” were found.



RESULTS
we validated kvarq with  <dig> fastq files of predominantly mycobacterium tuberculosis complex  isolates, for which we interrogated  <dig> genomic positions where polymorphisms have been previously described .

in mtbc, single nucleotide mutations are reliable drug resistance markers, as most phenotypic drug resistance is conferred by single amino acid changes
. hence, molecular dst is becoming increasingly widespread in the diagnosis of tb, and various genotyping platforms make use of these markers. moreover, snps are powerful phylogenetic markers in mtbc, because similar to other genetically monomorphic bacteria, mtbc exhibits limited horizontal gene exchange and as a consequence, snp homoplasies are rare
 <cit> . hence, snps can be used to study the evolutionary history of mtbc, as well as to classify clinical strains associated with variable degrees of virulence or different clinical outcomes
 <cit> . mtbc comprises several phylogenetic lineages, and snps represent ideal markers to classify clinical mtbc isolates into these lineages
 <cit> .

in this study, we included  <dig> snps as phylogenetic markers defining mtbc lineages and sublineages, as well as  <dig> single nucleotide mutations and three genomic regions  in gyra, 81 bp in rpob and 3 bp in katg) associated with drug resistance .

we tested kvarq with a set of “in-house” generated whole genome sequences of clinical mtbc isolates and additionally downloaded sequences from public sequence read archives . different, overlapping subsets of fastq files were used for i) the comparison of snp-calls with a standard bwa-based mapping pipeline , ii) detecting drug resistance mutations  and iii) comparison of kvarq phylogenetic classification with laboratory based classification  – see figure 
 <dig>  in addition to these well-characterized genome subsets, we used a previously published “blind” subset of  <dig> fastq files downloaded from a public source to extract phylogenetic information and drug resistance mutations, which were not reported in the original publication
 <cit> .figure  <dig> 
fastq dataset used to validate kvarq. a total of  <dig> whole genome sequences in fastq format from various sources were used in this study. all  <dig> genome sequences were scanned for phylogenetic classification and drug resistance mutation identification. different, overlapping subsets were used to i) compare snp calls obtained with kvarq with snp calls of our standard snp-calling pipeline based on bwa and samtools for  <dig> isolates, ii) compare kvarq phylogenetic classification of  <dig> mtbc isolates with previous phylogenetic information, iii) compare kvarq drug resistance mutations with previously identified drug resistance associated mutations in  <dig> mtbc isolates, and iv) obtain additional information, i.e. phylogenetic classification and drug resistance mutations, from a “blind” set of  <dig> genome sequences from a recent study  <cit> . more information can be found in additional file  <dig> 



kvarq scanning times and overall performance
first, we applied kvarq to all  <dig> fastq files and calculated scanning times for the set of snps described. the scanning times were found correlated with the average genome coverage  in the fastq file. a genome sequence file with 100-fold coverage of the mtbc genome required approximately 2 minutes of kvarq scanning time, and increased linearly with sequence coverage .figure  <dig> 
kvarq scanning time for all  <dig> polymorphic positions with respect to average sequence coverage of the mtbc genome per fastq file. each dot represents one isolate . scanning time was found to be 112 seconds/100× coverage. eleven isolates of  <dig> were excluded due to variable read lengths . three additional isolates were excluded because of file sizes larger than 10 gb.



to assess overall performance, we looked at phylogenetic classifications in all  <dig> fastq files. these files included whole genome sequences generated on different sequencing devices using different laboratory procedures , and of unknown quality . successful phylogenetic classification was obtained for 865/ <dig> fastq files  . the remaining  <dig> included the chimpanzee bacillus
 <cit> , mycobacterium canettii and eight confirmed non-mtbc isolates, for all of which no mtbc lineage classification would be expected. for five other strains, no mtbc lineage-specific snp was detected, which can be due to low coverage or because isolates were not mtbc.figure  <dig> 
phylogenetic classification of all  <dig> isolates used in this study. this figure shows the distribution of phylogenetic markers in all of the scanned genomes. for  <dig> isolates, an mtbc lineage-specific snp was found. in  <dig> isolates, no mtbc lineage-specific snps were found, either because isolates were non-mtbc , or because coverage was low.



furthermore, we compared the number of kvarq hits per position with overall base output in the fastq file . the correlation varied strongly between positions on the genomes and between fastq files, which indicates that the number of hits per snp depends on the snp queried  and the quality of the base calls in the fastq file.

comparison of snp-calls with bwa calls
a subset of  <dig> fastq files was used to directly compare snp-calls obtained with kvarq with snp-calls generated with our standard pipeline using bwa, samtools, bcftools and custom scripts for filtering
 <cit> . for each of the  <dig> positions , the bwa list of variants in the corresponding genome was interrogated for presence of an alternative allele compared to the reference genome . with this, a direct comparison of all  <dig> positions in  <dig> strains was performed, resulting in  <dig>  data points .table  <dig> 
comparison of snp-calls at  <dig> polymorphic positions in  <dig> mtbc genome sequence fastq files




a total of  <dig> mutations were called by both kvarq and the bwa-pipeline . this corresponds to a sensitivity of  <dig> % in mutation calling of kvarq  taking the bwa pipeline as the gold standard. specificity was found to be  <dig> % .

thirty-three mutations  in  <dig> fastq files were called by kvarq, but no mutation was found in the corresponding bwa snp-list. upon manual inspection, we found a successful snp-call in the samtools pileup-list for each of the  <dig> mutations, but these mutations were filtered out in the subsequent heuristic filtering step including the samtools varfilter command for unknown reasons and despite good quality and coverage.

we found three fastq files where kvarq missed a single snp and one file where kvarq missed  <dig> snps despite six calls in the bwa-pipeline. the bwa read depths for these six calls  were  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  corresponding kvarq number of hits were  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  respectively. for strain mtb_erdman_srr <dig>  when the kvarq quality cutoff was removed , the number of hits increased to  <dig>   <dig> and  <dig>  respectively. subsequent fastqc analysis  showed poor fastq quality over the whole read length .

validation of phylogenetic classification
a subset of  <dig> isolates was used to compare the phylogenetic classification by kvarq with data obtained previously by various genotyping methods , data obtained from the collaborating laboratory that provided dna for wgs, or metadata from the sequence read archive in the case of downloaded files. the comparison included seven main phylogenetic lineages
 <cit> , the animal-associated mtbc clade , the beijing sublineage of lineage  <dig>  and  <dig> non-mtbc isolates. in 309/ <dig>  isolates, kvarq detected mtbc lineage-specific snps that were in agreement with the previous classifications . the remaining  <dig> genome sequences for which no mtbc lineage-specific snp was found included eight non-mtbc, the chimpanzee bacillus and m. canettii, for which no mtbc-lineage specific snp was expected, and two isolates  with low kvarq coverage and therefore no lineage-call.

drug resistance associated mutations
kvarq was applied to a subset of  <dig> strains harbouring known mutations associated with drug resistance to validate the interpretation  of the mutations. the  <dig> strains overlapped with the  <dig> strains of the direct comparison described above, but the resistance-associated mutations were identified with separate scripts from the annotated snp-list in the bwa pipeline. the  <dig> drug resistance associated genomic positions were interrogated with kvarq, including the 81 bp rifampicin resistance determining region  of rpob, the 63 bp quinolone resistance determining region of gyra  and 3 bp in the codon  <dig> of katg .

among the  <dig> strains,  <dig>  had perfectly congruent drug resistance mutations identified by kvarq when compared to the bwa pipeline. for one strain , one mutation in rpoc was not found by kvarq. however, this mutation was not in the list of target snps . for one isolate, mtb_kzn_ <dig>  an additional mutation in gyra was found with kvarq, and was not found with the bwa pipeline due to low read depth and the presence of an alternative allele. for another isolate, mtb_russia_err015616_ <dig>  six additional mutations in five genes were found by kvarq. all mutations in these two isolates were traced back to the filtering problem discussed above, and were found in the pileup file.

in total, kvarq detected  <dig> drug resistance associated mutations in 139/ <dig> files  .figure  <dig> 
mtbc drug resistance associated mutations found in all  <dig> isolates. this figure shows all  <dig> mutations that were found with kvarq in  <dig> isolates with at least one mutation in any of the drug resistance associated genes that were analysed . only mutations that were found in at least ten isolates are labeled.



“blind” set of fastq files from a public repository
finally, a “blind” set of whole genome sequences was used to illustrate the added value provided by kvarq. we downloaded available sequences of a recent publication that used whole genome sequencing for molecular epidemiology of mtbc transmission
 <cit> . this publication did not report drug resistance data or phylogenetic data. we therefore analyzed all available sequences for phylogenetic snps and drug resistance mutations. the original sample set consisted of  <dig> isolates, but two fastq files were not found for download . results for  <dig> isolates were obtained in less than 12 hours. a total of  <dig> drug resistance mutations were identified in  <dig> patient isolates from  <dig> patients . all paired isolates  were found to harbour identical drug resistance associated mutations, except for one patient , where an additional mutation was found in two of three isolates. isolates of one community transmission cluster , cluster  <dig>  were found to harbour drug resistance associated mutations . within cluster  <dig>  all patient isolates harboured the same drug resistance mutations, except for one patient  with three otherwise unidentified mutations. among the  <dig> isolates, we found a predominance of lineage  <dig>  in the sample set , followed by lineage  <dig>  and lineage  <dig>  .figure  <dig> 
kvarq identified  <dig> drug resistance associated mutations in  <dig> of  <dig> patient isolates in a “blind” set of genome sequences from walker et al. <cit> . each circle represents one isolate . only isolates with drug resistance associated mutation identified by kvarq are shown. the  <dig> individual drug resistance mutations are shown as colors of pies. phylogenetic lineages were obtained with kvarq and are shown as colored and dashed boxes. group definitions were obtained from the original publication
 <cit> : cross-sectional isolates were paired pulmonary and extrapulmonary isolates from the same patient, longitudinal isolates were paired isolates from the same patient separated by at least 6 months, and genomic cluster  <dig> was a large miru-vntr defined cluster of transmission in the community. paired isolates  as well as isolates of cluster  <dig> were found to harbour the same mutations, except for p <dig>  where three otherwise not detected mutations were found by kvarq. for patient p <dig>  an additionally acquired mutation was found in two of three isolates. two of the  <dig> whole genome sequences in the original publication were not found for download.
main mtbc phylogenetic lineage classification of the fastq set of walker et al.  <cit> , consisting of  <dig> isolates. successful lineage assignment was obtained for 388/ <dig>  isolates. figure includes all clustered isolates as well as longitudinal, cross-sectional and household isolates.



discussion
in this article, we propose a new approach to in silico snp-typing from whole-genome sequencing data. kvarq scans fastq short sequence reads directly for known polymorphisms instead of mapping or assembling the complete genome. this results in a massively reduced computation time required compared to established wgs analysis tools. at the same time, kvarq offers a high degree of flexibility and is also user-friendly. this was achieved by developing an extended command-line interface together with pre-compiled packages with a graphical user interface.

kvarq was designed for bacterial genomes, but is applicable to any fastq sequence data. the default parameters work best for the different illumina machines, but can easily be adapted to data from other manufacturers. for example, the roche  <dig> reads in our testset were scanned with a lower quality cutoff. due to the lack of relevant data from mtbc isolates, we were not able to test reads from pacific bioscience devices.

both the reference sequence and the interrogated polymorphisms can be changed or extended. changing the snps of interest can be achieved by modifying the templates in the testsuites, which are lists of nucleotide positions screened by kvarq. an extended documentation including instructions for changing the target polymorphisms is distributed with the software and available online . scanning parameters are adjusted by invoking a number of options in the command-line interface or via the settings dialog in the graphical user interface.

using our test set of  <dig> fastq files, we obtained kvarq running times of less than 2 minutes on a high-performance computer  and less than 20 minutes on a standard desktop computer . this important decrease in time for analysis  is crucial for the efficient treatment of data as wgs becomes more widely available. the overall performance of kvarq was high, as reflected by  <dig> % of genome sequences successfully assigned to a phylogenetic mtbc lineage . by including phylogenetically redundant snps, the sensitivity of classification was increased. specifically, classifications were obtained if  <dig> of  <dig> redundant snps were found mutant. the  <dig> % congruence of lineage-assignment of kvarq with a priori lineage classification illustrates how wgs combined with a quick tool such as kvarq has the potential to replace previous genotyping methods.

when comparing kvarq snp-calls with calls from our mapping pipeline using bwa and samtools, we found a high sensitivity and specificity of  <dig> % and  <dig> %, respectively. the three mutations that were called by the bwa pipeline but not by kvarq were resolved when lowering the quality cutoff parameter. fastqc  confirmed the low quality of the reads in these files.

drug resistance mutations obtained with kvarq and bwa in the  <dig> compared files were nearly identical, but showed one limitation. mutations conferring resistance to pyrazinamide are found in any part of pnca, which is 561 bp long
 <cit> . kvarq was designed to scan short stretches of dna, and we therefore excluded mutations in pnca to avoid an increase in scanning time.

in the total set of  <dig> genomes, we found many additional drug resistance associated mutations  that could not be validated due to the lack of laboratory dst data for many of the isolates and the complex genetic nature of drug resistance in mtbc
 <cit> .

successful kvarq calls depended on the selection of suitable snps. several snps had to be replaced in the testing phase. most snps that were replaced occurred in repetitive regions, and these snps were also never called when using the bwa-pipeline. we therefore recommend including only snps that were previously found to be in core genome regions, in non-repetitive regions and where no deletions have been described.

with a “blind” set of genome sequences obtained from a recent publication
 <cit> , we were able to obtain lineage classifications and drug resistance calls, which had not been reported in the original publication, in less than one day. using the clustering information of the publication, all isolates identified as drug-resistant by kvarq and from the same patient  or the same patient cluster shared the same drug resistance mutations  and were assigned to the same phylogenetic lineage, highlighting the consistency in mutation calling. the fast generation of drug resistance and phylogenetic data illustrates the application of kvarq for quick targeted scanning of large public datasets.

kvarq was designed to interrogate positions with known mutations. however, as some regions  can harbour several mutations in close proximity, we included the capability to scan regions of interest for the presence of any  mutation. these regions can be of any length, but the scanning time increases in square with sequence length. the drug resistance testsuite in the current version checks some short regions known to harbour many different drug resistance associated mutations and reports any new mutation that would result in a amino acid change of the associated gene. in future releases, kvarq could be extended to scan for other genomic polymorphisms, such as small insertions and deletions  as well as large sequence deletions or duplications.

CONCLUSIONS
in conclusion, kvarq provides a user-friendly and highly flexible platform for rapid and targeted analysis of fastq files. kvarq will help overcome the hurdles of whole genome sequence analysis in clinical microbiological laboratories and other settings where bioinformatics capacity is limited. the short running times, the user-friendly graphical interface and the high configurability at the command line level allows analysing hundreds of fastq files in a short time.

