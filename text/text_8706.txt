BACKGROUND
scientific research requires data visualization for exploration and discovery, as well as in written and oral presentations. biological science traditionally relies on manual analysis of curated datasets â€“ an approach that is becoming increasingly challenging, as data sets and the volume of published material grow exponentially. custom software combined with manual intervention have become necessary in order to efficiently manage these data sets, while providing the necessary results of analysis. many methods of data management and analysis have been presented, however the techniques for data representation have remained largely unchanged. as a result, many custom and private solutions have been developed to satisfy data visualization needs.

in our own work in the fields of computational biology and medicinal chemistry, color-grid representations have become increasingly useful to illustrate trends in data, whether they be correlations between features of pre-mrna splice sites or structure-activity relationships  from large small-molecule libraries. color-grids are two-dimensional data arrays where data values are represented visually by associated color intensities . we were inspired in part by heat maps that effectively use color as an additional dimension, a technique successfully applied to microarray data visualization. however, the pioneering microarray data analysis software cluster and treeview  <cit>  and recent extensions of this work  <cit>  have some disadvantages when generalizing to a wider variety of datasets: a need for computational data manipulation, a focus on data clustering, incompatibility with text values and data exceptions, and limited coloring capabilities. we remedy some of these shortcomings with the design of an abstract color-grid graphical object and implement creation and rendering of such graphics in a program called, jcolorgrid. the software is applicable to a wide variety of input data while retaining ease of use.

data representation with a color-grid allows researchers and audiences to rapidly identify trends within large data sets. color-grids follow the main graphical presentation tenets set forth by edward tufte: utilizing color to enhance information, facilitating micro and macro readings of data, graphical layering and separation, and use of "small multiple designs" for "graphical depictions of variable information that share context, but not content"  <cit> . color-grids are data-dense and easily interpretable at different scales of analysis, making color-grids increasingly popular in the scientific literature. while color-grid representations are available in some advanced statistical packages , the commonly used free and commercial spreadsheet and statistical packages , do not offer color-grids as a graphical representation. it should be noted, that where available, color-grid outputs have limited utility due to the level of expertise necessary to work with these complex statistical packages. the absence of stand-alone software capable of automatically generating color-grids prompted us to develop jcolorgrid, a java application that serves as an engine for generating custom color-grid representations. our motivation was to offer a novel, automated, general-purpose means to graphically represent complex data sets from various research disciplines following graphical visualization guidelines.

implementation
jcolorgrid is a platform-independent pure java application requiring java  <dig>  or higher. the software has been tested to function equally on macos x, windows xp, and linux redhat  <dig> environments. the input data  are read by jcolorgrid as a spreadsheet , or a tab-delimited text file. the program uses the jexcel api  <cit>  to interface with ms excel format spreadsheets. data is formatted in the input file following a simple template that reflects the final color-grid layout . color-grid color options can be specified with primary color text labels or  <dig> bit color using the java swing color picker or comma delimited rgb values.

jcolorgrid has the ability to output jpeg or eps format graphics, using functionality from the standard java distribution and the java eps graphics2d api  <cit> , respectively. the eps vector graphics format enables further color-grid graphic manipulation using vector graphics editing software. an input file with  <dig>  data points requires approximately 30s of cpu time on a pentium iv  <dig>  ghz processor.

RESULTS
the spreadsheet and tab-delimited text formats were chosen for jcolorgrid, as many scientists already manipulate data using these formats and thus have ready access to suitable software environments. the application can be configured and run either from the command line or through the graphical interface . the command-line instantiation can be used to programmatically generate color-grids of multiple data sets with custom parameters. the graphical interface includes a color-grid preview window useful for graphical data exploration and visual assessment of the color-grid parameters. color-grid options include: minimum, maximum, and inflection colors, scale increments, exceptions, and the format of graphical output . numerical data used to generate the color-grid can either be displayed in the output color-grid cells , or hidden , by using the 'display values' configuration . by default jcolorgrid will identify the minimum and maximum data points within a data set, and will map these data points to the extremes of the user defined color scale . users can override the default settings and specify a user defined data subrange. in the instance where data falls outside of the user defined range, jcolorgrid will flag these outlying data points as 'out of range' and will color these data points to distinguish them from the data color scale . this feature allows users to quickly identify data points that fall outside a specified range using color cues.

jcolorgrid possesses separate and non-overlapping color mappings for text and numerical data, and therefore is not limited to purely numerical input. for instance, in the event jcolorgrid reads an excel file containing cells formatted as text, these text cells will be colored based on a set of configurable exception colors, distinct from the colors used in the color scale corresponding to the numerical data. jcolorgrid treats any data value with non-numeric characters  as case-sensitive text and maps these values to the available exception colors. jcolorgrid is limited to nine or ten unique text items in any data set, depending on the number of colors used in the numerical data color scale. the ability to process text data allows users to flag certain data points that require special color treatment within a larger numerical data set, a feature we term 'exceptions'. if they are present in a data set, these text exceptions are listed, along with the associated color, in an exceptions key . jcolorgrid will generate color-grids containing either two or three colors mapped to the data range, as the color scale can be customized by specifying the inflection point for color transitions.

CONCLUSIONS
effective data presentation and analysis is an important facet of successful scientific research. the struggle to efficiently and accurately interpret data sets rapidly increasing in size requires consistent implementation of graphical standards in the form of accessible and robust tools. the color cues provided by color-grids aid in data analysis and serve as a platform for standardized data representation. jcolorgrid is implemented as a convenient data visualization tool for generation of color-grids. the software helps overcome the limitations of manual graphics preparation and allows users to circumvent advanced or proprietary commercial tools by enabling customizable and automated data visualization.

availability and requirements
project name: jcolorgrid.

operating system: platform independent.

programming language: java.

other requirements: none. a spreadsheet application  and/or a graphics editing software are optional but recommended.

license: source code and a binary executable are available under terms of the gpl free software license  at . incorporation into commercial software under non-gpl terms is possible by obtaining a custom license from the university of california.

url: 

authors' contributions
mpj wrote the java code. mpj, jlw and bchm conceived of the software, and contributed to its design. all authors contributed to the preparation of the manuscript, and have read and approved the final manuscript.

