BACKGROUND
in mass spectrometry , analysis of mass spectra is possible with various software packages. in general these software applications work fine for the analysis of individual spectra, but lack the ability to compare very large number of spectra and address differences in  profile masses to certain groups, such as patient and control groups. therefore, it is necessary to have fast, user-friendly software for high throughput data pre processing, flexibility in changing input variables and statistical tools to analyze the peptides that are significantly differentially expressed between the patient and control groups. statistical calculations are performed within seconds to at most several hours. to the best of our knowledge the only open source project that is capable of peptide profiling with raw ms fid  files  is the rproteomics 3-tier architecture of the cancer biomedical informatics grid, presented in a concurrent versions system . in the rproteomics project, the main development language is r and the application has a web interface. this paper describes an application where ms data preprocessing is expanded with a kind of laboratory information management systems . it requires no grid architecture, can even be installed on a stand-alone computer, and due to local file interfaces can easily be integrated with commercial statistical software packages visualization applications, such as spotfire™  <cit>  and omniviz™. the presented software architecture is capable of central storage of mass spectra and analysis results. a central database holds all meta-data. meta-data consist of the origin of the measured samples, experiments performed on different mass spectrometers and allocation of samples to different groups. meta-data can also link the experimental results to clinical information. information from the database can be retrieved with structured query language  and can be linked to other databases on common keys, such as patient code. in this study, the application is built in fast java code, which provides an excellent gui, and statistic r routines are called if needed. in addition, the protein origin of the significant peptide masses can be identified by comparing the centrally stored peptide masses of interest with those calculated from the human mass spectrometry protein sequence database  or by mass spectrometry assisted sequencing. both identification techniques use the mascot™ search engine  <cit> . the platform independent software architecture is tested on two sets of data: 1) mass spectrometry  files of cerebrospinal fluid  samples from patients with breast cancer, breast cancer with leptomeningeal metastasis  and a control group  <cit> ; and 2) ms files of serum samples from patients with prostate cancer in end stage disease and a control group.

implementation
csf samples of breast cancer patients
the processing of the csf samples and measurement procedures have been described before  <cit> . in brief, each sample is processed twice, spotted  <dig> times on the anchor chip™ and measured three times on the mass spectrometer, which gives an average of  <dig> replicate spectra for each sample. some measurements result in so called "zero" raw fid files with no data and a file size smaller than  <dig> kbytes. this causes replicate numbers <  <dig>  a  replicate number of at least  <dig> spectra for each sample is proposed for robust statistic comparison between the groups  <cit> . the replicate number of  <dig> spectra for each sample is smaller than the total replicate number of  <dig>  since some spectra cannot be internally calibrated on at least  <dig> of the  <dig> omnipresent albumin peptide masses. however,  <dig> replicate spectra are sufficient to find all possible peptide masses in all spectra  <cit> . a profile matrix is created, which consists of peptide masses in all spectra of the samples in the columns against the number of occurrences of these masses in replicate spectra of the samples in the rows. the matrix is created with the total number of  <dig> samples, control, breast cancer and breast cancer with lm and an arbitrary level of  <dig> peak masses for noise spectra, and peptide masses are selected between  <dig> and  <dig> da. the noise threshold of  <dig> peak masses in a spectrum can be varied in the database application. peaks with masses smaller than  <dig> da are left out because they may be attributed to matrix fragments. the replicate numbers of samples can be varied between  <dig> and  <dig>  table  <dig> gives an example of a quality report of the software, when a profile matrix is created. this quality report is automatically generated by the software architecture and stored as a text file, with an example of the name  <dig> _1_albmasses_sample4_binary2_quality.txt, in the windows document root of the client workstation. in this name  <dig> represents the quantile percentage,  <dig> is the experiment number, albmasses is the name of the mass list, used for internal calibration,  <dig> in sample <dig> the number of chosen replicate spectra for one sample, which can be varied between  <dig> and  <dig> and  <dig> the threshold of the binary matrix table, as will be explained later. the windows documents root of the client workstation is c:\documents and settings\username\.

experimentid: 1
experimentname : cerebrospinal fluid tryptic peptide profiles to diagnose leptomeningeal metastasis in breast cancer patients
find maxima within distance  :  <dig> 
quantile threshold peak finding :  <dig> 
combine peaks within distance  :  <dig> 
noisy spectra contain peak numbers > : 450
maximum mass spectra per sample : 4
minimum mass  : 800
maximum mass  : 4000
calibration : yes
group : control group without breast cancer
total number of samples : 45
number of samples in matrix : 32
number of samples with too low number of replicates : 12
number of samples not in matrix that because all spectra cannot not be calibrated or are all too noisy : 1
group : breast cancer without leptomeningeal metastasis
total number of samples : 52
number of samples in matrix : 39
number of samples with too low number of replicates : 13
number of samples not in matrix that because all spectra cannot not be calibrated or are all too noisy : 0
group : breast cancer with leptomeningeal metastasis
total number of samples : 54
number of samples in matrix : 40
number of samples with too low number of replicates : 12
number of samples not in matrix that because all spectra cannot not be calibrated or are all too noisy : 2
the profile matrix consists of peptide masses in all spectra of the samples on the columns against the number of occurrences of these masses in replicate spectra of the samples on the rows. the software stores the contents of the quality report as a text file, e.g. with the name  <dig> _1_albmasses_sample4_binary2_quality.txt in the windows document root of the client workstation, namely in c:\documents and settings\username}\.

serum samples of prostate cancer patients
about  <dig> ml blood from  <dig> patients and  <dig> controls are collected in clotting tubes and stored at room temperature for a period of  <dig> h. subsequently, the tubes are centrifuged at  <dig> rpm for a period of  <dig> minutes, and the supernatant is collected and stored at a temperature of -80°c. the serum is tryptic digested and incubated overnight at a temperature of 37°c with a 1: <dig> ratio with a promega trypsin gold stock solution, with a concentration of  <dig> μg/ml. in total  <dig> μl of the digested sample is bound to magnetic beads mb-hic c <dig>  the beads are eluted with  <dig> μl of 50% acetonitrile in milli-q water. an amount of  <dig>  μl of the eluted fraction is spotted  <dig> times on the anchor chip and measured on an ultraflex™ maldi-tof  in reflection mode, which gives  <dig> replicate spectra for each sample. the mass spectra internally calibrated on at least  <dig> of the  <dig> omnipresent peptide masses, which are different from those of the csf experiment. a somewhat higher noise threshold than in the csf samples is chosen of  <dig> peaks in a spectrum.

software architecture, packages and interfacing
the ms analysis software architecture consists of  <dig> pillars, a graphical user interface  written in java™  <cit> , a mysql™ database  <cit> , which contains all metadata, such as experiment numbers and sample codes, and a ftp  server to store all raw ms fid files and processed data and fourth r. the software package r is used for statistical calculations  <cit> . figure  <dig> gives a schematic overview of the architecture. the java software components are developed and tested on the eclipse™ platform  <cit> . the raw ms fid files can manually be selected by the java gui on the client and stored on a central ftp server. for calculations, the java client retrieves the information in these files again. after processing of the data, the results of analysis are transported to the ftp server again. the ftp file storage is installed on a central server, and the information can be retrieved by different java client workstations. however, for testing, the ftp service and mysql database are both installed on the client workstation, with hostname localhost. special java archives  have to be in the java virtual machine's class path. the edtftpj- <dig> . <dig> jar  <cit>  provides an interface for programming the standard ftp commands in java. the java database connectivity  driver mysql-connector-java- <dig> .6-bin.jar  <cit>  gives an interface for sql database access  <cit> . in this way, a communication between the java client and the mysql database or ftp service is established. there are several ways to set up an interface between java and the statistical software package r  <cit> . java's runtime.exec() command is used in the database application. the advantage of applying this method is that it requires no other adaptations than a default installation of r. lemkin et al <cit>  implemented the method in the micro array explorer project. the runtime.exec() command in java can execute a windows™ cmd.exe  batch file. the batch file, rterm.bat, subsequently starts an rterm™ process. the rterm process has a file-based communication with java . the java client generates all r scripts and r input files. the name and path of the input and output files are defined in the generated r script. java waits until rterm has finished the job, and reads the output file. the java application warns if rterm is not installed in the default installation path on the client workstation.

database design
gui components and functions
the software architecture contains the following gui components and functions: 1) import of the ms files from the  file system and to transport of these files to the ftp server; 2) search and selection of table records; 3) a screen to update or insert the records; 4) allocation the samples in different groups; 5) creating the profile matrix; and 6) performing the wilcoxon-mann-whitney rank sum test on matrix values  <cit> . the gui to select and import ms file to the ftp server is based on the java's jfilechooser class  <cit> . jfilechooser is a member of the swing™ library for the gui design. most gui components where build with this toolkit to keep the same look and feel throughout the application , though swt is getting more and more popular for these purposes, like the  eclipse ide for development. one or more file or even complete directories can be selected, and all files including subdirectories are transported to the ftp server location /ftp_root/year/experimentnumber, for example c:\inetpub\ftproot\2005\1\group2_f_2csf20_0_b20_1sref_fid. the combination of file type and the type of instrument determines how the data in the files should be processed. file types that can be imported into the system are at present binary fid and text files in ascii format . this can be extended with any other file type. if the file type is fid, bruker related acqu and acqus files, containing the calibration constants are also transported to the ftp server. the calibration constants have a totally different meaning for data measured with the tof or ft-icr technique. when the mass spectra are imported into the system, result records are created in the database. each record of the table result refers to each mass spectrum, which is measured for a certain sample. for statistical analysis of the data, these result records have to be linked to samples and samples have to be placed in groups. the allocation module achieves this by constructing a link between the records of the result and sample table, and the result and group_ table, respectively . the field filename in a record of the result table holds the spot position the anchor chip, because it is part of the filename. records in the table sample and table group_ hold the sample and group codes in their table fields. table maintenance screens can add additional sample information, such as person, material, and origin. the matrix of number of occurrences of mass peaks in replicates of different samples allocated to different groups is created in another module . three different matrices are produced simultaneously, one with the number of occurrences of masses in replicate spectra of different samples, a binary table with number of occurrences of masses above a specific threshold, and finally a matrix with the mean intensity of the present peaks in the mass spectra replicates. figure  <dig> on bottom shows only a small fraction of a matrix with a total of  <dig> peptide masses from  <dig> matrix samples, where the numbers of occurrences of the peptide masses in  <dig> replicate spectra of  <dig> matrix samples are visible. an example is the peptide mass of  <dig>  da, which is measured in a frequency of  <dig>   <dig>   <dig>   <dig> and  <dig> times for the  <dig> samples with code csf <dig>  csf <dig>  csf <dig>  csf <dig>  and csf <dig>  respectively . the complete matrix of all samples is stored in comma separated value  format on the ftp server and in the local document root. the total matrix can be visualized by importing the table in the statistical package spotfire. r's wilcoxon-mann-whitney rank sum test is performed for each matrix peptide, based on the numbers of peptide mass occurrences per sample in different groups. the wilcoxon-mann-whitney test discriminates the peptide masses between the groups with a probability value . the frequency distribution of the calculated p-values of the peptide masses in the matrix is presented in a histogram. a separate wilcoxon-mann-whitney gui generates this histogram and creates a list of the masses with corresponding p-values. in this screen, the test can be performed on matrices generated in different experiments and between different groups. the results of the wilcoxon-mann-whitney rank sum test on a matrix are stored in a file with csv format. the p-values of all peptide masses, as well positive  as negative  expressed between the groups are listed in this file. the file is stored on the ftp server and in the local document directory. examples of these p-value listings are given for the breast cancer with lm group against the control group in figure  <dig>  and for the prostate cancer group in end stage disease against another control group in figure  <dig>  peptide masses with the lowest p-values <  <dig>  are used to search in the human msdb database for proteins based on calculated peptide masses, using mascot or are selected for ms/ms sequencing options in the mass spectrometer.

calibration constants
a small storage size of the files on the ftp server is guarantied, due to the fid format of ms spectra, a byte array of  <dig> channel intensities. the tof, time, can be calculated from the ms channel number, i, in the fid files by

timei = delay +  i =  <dig> ,..., <dig>       

the values of the constants dw  and delay are stored in the acqus and acqu files, which are also transported to the ftp server. other important values are those of the ml <dig>  ml <dig> and ml <dig> calibration constants in the acqus files, which are used to calculate the peptide masses from the tof. theoretically, the square root of the mass over charge, mz
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadagcaaqaamaalaaabagaemyba0gabagaemoeaohaaawcbeaaaaa@2fb7@, is proportional with the tof, time.

0=a⋅2+b⋅mzi+c     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqaiwaamcqgh9aqpcqwgbbqqcqghfly1daqadiqaamaakaaabawaasaaaeaacqwgtbqbaeaacqwg6bgedawgaawcbagaemyaakgabeaaaaaabeaaaogaayjkaiaawmcaamaacaaaleqabagaegomaidaaogaey4kasiaemoqaikaeyyxic9aaoaaaeaadawcaaqaaiabd2gatbqaaiabdqha6naabaaaleaacqwgpbqaaeqaaaaaaeqaaogaey4kasiaem4qamkaeiikagiaemidaqnaemyaakmaemyba0maemyzau2aasbaasqaaiabdmgapbqabagccqggpaqkcawljagaaczcamaabmgabagaegomaidacagloagaayzkaaaaaa@507b@

therefore, the value of constant b is about  <dig>  times larger than the value of constant a, where a = ml <dig>  b = 1012ml1
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadagcaaqaamaalaaabagaegymaejaegimaazaawbaasqabeaacqaixaqmcqaiyagmaaaakeaacqwgnbqtcqwgmbatcqaixaqmaaaaleqaaaaa@3402@, and c = . the mass over charge is

mzi=2a)2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadawcaaqaaiabd2gatbqaaiabdqha6naabaaaleaacqwgpbqaaeqaaaaakiabg2da9maabmgabawaasaaaeaacqghsislcqwgcbgqcqghrawkdagcaaqaaiabdkeacnaacaaaleqabagaegomaidaaogaeyoei0iaeginaqjaeyyxictaemyqaekaeyyxictaem4qamkaeiikagiaemidaqnaemyaakmaemyba0maemyzau2aasbaasqaaiabdmgapbqabagccqggpaqkasqabaaakeaacqaiyagmcqwgbbqqaaaacagloagaayzkaawaawbaasqabeaacqaiyagmaagccawljagaaczcamaabmgabagaeg4mamdacagloagaayzkaaaaaa@5144@

peak finding
a peak list consists of mass over charge , channel number i, and intensity. it is constructed from the data in the raw fid files. a histogram of the number of channels with a specific intensity can be constructed. the integral under the distribution curve represents the amount of  <dig> instrument channels. from this distribution curve, the r quantile function calculates an intensity threshold, where the probability is  <dig> % to find channels with a lower intensity. the effect of changing r quantile percentages between  <dig> and  <dig> % in the create matrix gui  is examined. the ms peaks are expected to be in the channels numbers, i, with intensity higher than this threshold, namely in the range of the  <dig> % highest intensities. the peak finding algorithm determines the highest channel intensity within a certain mass over charge  window, for example  <dig>  da at both sides. a second condition is that this local maximum intensity must be above the quantile threshold intensity. noise spectra do not contain real peaks with a high intensity flanks. as a consequence, many noise peaks are above the quantile threshold. peak lists with too many peak masses above an arbitrary number of  <dig> fall off, because a large part of these peak positions are probably noise peaks.

internal calibration
internal calibration is necessary to align all the spectra in the matrix. there are several methods reported to align mass spectra datasets. the alignment algorithms of wong et al.  <cit>  and jeffries  <cit>  have in common that they use special reference masses or peaks between the spectra. wong et al.  <cit>  have developed an algorithm written in c++ where spectral data points are added or deleted in regions with a low intensity, in order to a shift peaks. this algorithm has a slight effect on the shape of the peaks. however, the signals in ms are presented by peaks and not by the regions of minimal intensity. jeffries  <cit>  compares peaks lists generated from mass spectra. he uses r's smooth spline function to correct measured masses with help of reference calibrate masses. a smooth spline function, fλ, is drawn through the ratio of measured over real mass on the y-axis against the measured mass of the calibrate peaks on the x-axis, which results in a factor close to  <dig>  division of the measured masses by the calculated function fλ; interpolates all data points. theoretically, a cubic spline function needs to pass through all of the calibrate data points. this results in a lot of curvature. a smooth spline is a compromise; where the function may deviate from calibrate data points within a certain limit, due to a factor λ, which diminishes the amount of slope. the amount of slope is expressed by the integrating the square of the second derivative of the spline function  <cit> . another alignment algorithm assumes no knowledge of peaks in common  <cit> . this method considers the shape of the spectra, and aims to minimize the phase differences between the spectra. this process is named dynamic time warping. it is however easier to calibrate the channel numbers of the maldi-tof equipment against known masses, since the square root of mass over charge is theoretically proportional to the time. this dependency can be fit with a polynomial function. the masses in the peak list are internally calibrated, using the at least  <dig> of the  <dig> omnipresent albumin masses. the channel numbers in the peak list, with corresponding masses, which are the closest with a window of  <dig>  da to one of the albumin masses, are determined. peak lists without the required number of albumin masses fall off. the channel numbers, i, and corresponding albumin masses, mzi
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadawcaaqaaiabd2gatbqaaiabdqha6naabaaaleaacqwgpbqaaeqaaaaaaaa@3123@, are fit in a second-degree polynomial function

mzi=a <cit> ⋅i2+a <cit> ⋅i+a <cit>      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadawcaaqaaiabd2gatbqaaiabdqha6naabaaaleaacqwgpbqaaeqaaaaakiabg2da9iabdggahnaadmgabagaegymaedacaglbbgaayzxaagaeyyxictaemyaak2aawbaasqabeaacqaiyagmaagccqghrawkcqwghbqydawadiqaaiabikdayagaay5waiaaw2faaiabgwsixlabdmgapjabgucariabdggahnaadmgabagaegimaadacaglbbgaayzxaagaaczcaiaaxmaadaqadiqaaiabisda0agaayjkaiaawmcaaaaa@4cbc@

the coefficients, a  <cit> , a <cit> , and a <cit>  are calculated with r's linear model  function where y = mzi
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadawcaaqaaiabd2gatbqaaiabdqha6naabaaaleaacqwgpbqaaeqaaaaaaaa@3123@, x = i, and a is the array of a  <cit> , a <cit> , and a <cit> 

ft <dig> ← lm + x)       

a ← coeff        

all peptide masses in the peak list are recalculated, using these coefficients and the polynomial function.

data reduction
last step is the creation of the profile matrix, which consists of peptide masses in all spectra of the samples in the columns against the occurrences in replicate spectra of the samples in the rows. the matrix is the input file for the wilcox-mann-whitney test, but can also be input for other statistical packages, like spotfire. the matrix is stored on the ftp server, as well as in the local document directory. figure  <dig> schematically shows the clustering of two spectra in the matrix. within a mass window of  <dig>  da at both sides of a peptide mass in the first spectrum, the occurrence of at least one peptide mass in the second spectrum is investigated, closest in distance to the peak in the first spectrum. if that is the case, the average mass of both peptide masses is calculated , and the number of occurrences in both spectra summed. for each mass spectrum, only one peptide occurrence,  <dig> or  <dig>  is summed for each mass window. if a peptide mass is present in the second spectrum, but not in the first spectrum it is added to the mass list. the average intensity of the present masses is also stored in a separate matrix. the clustering continues iteratively though all spectra of the samples in the matrix. all averages are calculated at the end of the clustering routine. in the database application, the clustering of selected spectra is in the order of ascending groupid, ascending sampleid, and ascending resultid values in records of the table result, which are pointers to the files on the ftp server. the effect of reversed clustering is studied by changing the order in descending groupid, descending sampleid, and descending resultid values of the table result.

RESULTS
the first data set with csf mass spectra was previously reported by dekker and co-workers  <cit> . the optimal quantile percentage of 98% in peptide profiling  <cit>  is confirmed in our database application. at a relative low quantile percentage of 97%, close to the noise level, many spectra are rejected due to a large amount of noise peaks with numbers above the threshold of  <dig>  this result in a relatively low number of matrix samples due to too low replicate numbers. the matrix consists of peptide masses present in all spectra of the samples in columns against the occurrences in replicate spectra of the samples in the rows. at a high quantile percentage of 99%, internal calibration is not possible for many spectra, because albumin peak intensities are below the quantile threshold. again many samples have too low replicate numbers, resulting in a relatively low number of matrix samples. an effect of reversed selection of replicate spectra of samples is expected and measured, when replicate numbers are smaller than the  value of  <dig>  since the replicate spectra contribute a different part of the total identified peptide masses. at replicate numbers above this value of  <dig>  no effect of changing the order of selecting replicates is expected. no effect of reversed clustering of the selected spectra is measured on the number of samples and peptide masses in the matrix . the wilcoxon-mann-whitney test is best performed on a matrix with the most samples and peptide masses, generated at a quantile percentage of 98%. figures  <dig>   <dig>   <dig> show examples of the distributions of the frequency of all the peptides in the matrix as a function of the wilcoxon-mann-whitney p-value, a) of the control group versus the group with breast cancer , b) of the control group versus the group of breast cancer with lm , and c) of another control group versus end stage prostate . there are some differences in shape of the wilcoxon-mann-whitney probability p-value frequency distributions presented in figures  <dig>   <dig>   <dig> with those presented earlier  <cit> , since we used a mass range of  <dig> to  <dig>  and we did not leave out peptide masses, which are measured in less than  <dig> % of the spectra, which results in sharp peaks at p-values of  <dig> ,  <dig> , and  <dig> . the frequency histograms of the wilcoxon-mann-whitney p-values of both comparisons a) and b) of the breast cancer patients clearly display a different shape. all peptides are equally distributed over all p-values for the control group versus the group with breast cancer in figure  <dig>  a line is drawn in the plot, which represents the frequency of p-values of peptides after a  <dig> times scrambling of the samples over the two groups in the matrix. this random distribution is about equal to the measured pattern of the control group versus the group with breast cancer. some sharp frequency peaks are calculated at p-values of  <dig> ,  <dig> , and  <dig> . the p-values of  <dig>  and  <dig>  are calculated when a peptide mass is measured once in a spectrum of one sample in the control group  or in the group with breast cancer  of the matrix. this occurs quite often, as can be seen by the relatively high frequency in the histogram at these p-values. randomization of the sample with this single peptide peak over the groups hardly changes the frequency of these p-values. this is confirmed by the maximum values of the solid randomization line . the p-value of  <dig>  corresponds to peptide masses found in total two times in two different samples in one group. as expected, by randomization, the frequency of this p-value decreases in favor of the p-values of  <dig>  or  <dig> , since the two samples can be allocated to two groups. the solid line displays a small decrease of the frequency at p-values  <dig>  and larger increase of the frequency at p-value  <dig> . the frequency of p-values shows a small decline below  <dig> , which means that there is a small amount of differentially expressed peptides. the shape of the frequency distribution of wilcoxon-mann-whitney p-values for the peptide masses is remarkably different when we compare the csf peptide profiles from the control group with the profiles from the group of breast cancer with lm . again sharp peaks in frequency are observed at p-values of  <dig>  and  <dig> , and a smaller peak at  <dig> . however, the histogram shows also sharp increase of the frequency of peptides with p-values below  <dig> . this indicates that there are significantly differentially expressed peptides present in the csf from the lm breast cancer patients. a total of  <dig> peptide masses are identified in the  <dig> control and  <dig> lm breast cancer samples. of these,  <dig> peptide masses have a p-value <  <dig> , ranging from  <dig>  * 10- <dig> to  <dig>  * 10- <dig>  a similar pattern of the wilcoxon-mann-whitney p-value distribution is seen in figure  <dig>  when the end stage prostate cancer samples are compared with those of the control group. again three maxima are observed at p-values of  <dig>  for in total two peptide mass occurrences in separate samples in one group,  <dig>  for one occurrence in one sample in the smaller metastasis group, and  <dig>  for one occurrence in one sample of the larger control group. again an increasing number of peptide masses with p-values <  <dig>  are seen in the histogram. a total of  <dig> peptide masses are identified in the  <dig> control samples and  <dig> end stage prostate cancer samples. of these,  <dig> peptide masses have a p-value <  <dig> , ranging from  <dig>  * 10- <dig> to  <dig>  * 10- <dig> 

discussion
the database application can clearly distinguish the maldi-tof peptide profiles between different patient and control groups. it can determine differences in the frequency and intensities of peptide masses in spectra from both groups. a strong feature of the here described architecture is that it can process different ms file formats, such as peak lists, maldi-tof and ft-icr binary files from various manufactures in the same manner. more important are speed and memory usage by the client workstation. peptide profile matrices have to be created in reasonable time. when dealing with large quantity of data, the java application will easily run into out of memory errors with default settings of the jvm. very important to use limit and offset strategies in mysql queries to fetch no more than a buffered amount of  <dig> table records each time when displaying them in the gui. a specific maldi-tof ms matrix of  <dig> samples and  <dig> masses  has  <dig> matrix fields and a csv file size of  <dig> kbytes. three matrices, peptide mass occurrences, intensity, and binary of this size can be simultaneously built in the java virtual machine's  allocated memory. however, a typical ftms matrix with  <dig> samples and  <dig> discriminated masses has an  <dig> times larger number of  <dig> matrix fields and an  <dig> times larger csv file size of  <dig>  mbytes. it is impossible to build three matrices of these size simultaneously in the java's memory space. these files have to be built in the user document root as a fileoutputstream and transported to the ftp server.

architecture
it is also possible to use the sjava package  <cit>  to set up an interface between java and the statistical software package r. it can be used to invoke java methods and create java objects by r commands. this is, however, the opposite of our approach, where r is called from java. another approach is to access r by a tcp-ip  connection, using the service rserve™. a disadvantage of using this method is that the rserve has to be started explicitly by the operating system out of the java application before running any r script from java. it would be possible to make additional java classes for statistical routines, such as the wilcoxon-mann-whitney test. indeed for this one test it would be more logical to add it directly to the java code. however, the usage of r goes beyond just the wilcoxon-mann-whitney test, which is not being claimed to be the full analysis. the wilcoxon-mann-whitney test is an example of a univariate test that is an important first step. in r, it is possible to switch to other univariate tests and most importantly multivariate analysis, such as hierarchical clustering in two dimensions . in addition, r can be used for the peak finding algorithms  which have the advantage that these algorithms are well tested and optimized for speed. the architecture allows the analysis to be extended to clustering, the building of multivariate classifiers, etc. . this will be an important point to focus on in the future. a reason to implement a 2-tier architecture, thick client and database server, is to have an attractive java gui than less advanced interface and java script in a web browser. it's possible to monitor preprocessing of the ms spectra with a progress bar. another possibility is to convert instrument specific file types to uniform mzxml file format and display spectra with a java mzxml viewer  <cit> . a 3-tier architecture with presentation layer , business logic provided by an application server, and a database server is more difficult to implement. for example, the file interface of java with the software package r is more difficult than in the 2-tier architecture. in the 2-tier situation every user has its own file repository on the local machine. in a 3-tier, special precautions have to be taken to prevent time-out errors and performance issues, applying distributed computing in a grid. for example, an ft-icr ms peptide profile matrix of  <dig> discriminated masses and  <dig> samples with at least  <dig> peptide occurrences per mass has a size of  <dig> kbytes and is produced in no less time than  <dig> h.

pre-processing
more advanced techniques such as fourier transform ion cyclotron resonance  ms and offline nano lc-maldi  in combination with ft-icr measure accurate masses in the  <dig>  to  <dig> ppm range. furthermore, the higher resolution of ft-icr ms prevents the clustering of peaks of different peptides. these techniques allow the identification of proteins from peptide masses by either peptide mapping or peptide sequencing. the database application can be adapted to handle the mass spectra of these experiments due to its modular architecture. the type of equipment, in combination with type of imported spectra will determine the handling of raw data, such as calibration and peak finding algorithms. in order to transform the spectra from the time domain to the frequency domain  <cit> , an extra fast fourier transformation  step to handle raw data of ft-icr experiments is at present under construction. the peptide masses can subsequently be calculated from the cyclotron frequency. it is also possible to apply a de-isotope algorithm on the peptide masses due to the higher resolution and mass accuracy of ft-icr. peak centroiding will be implemented, which calculates the real mass of the peak maximum, weighted by the intensity of the points surrounding the local maximum <cit> .

database
the database is stripped to its essentials and contains all the necessary fields for preprocessing while most of the input parameters are stored in the matrices filenames. for example, the database design does not contain an authentication database for encrypted password storage and management of user accounts. other tables that are not included are audit trail and action logging tables found in modern lims. details of the database design are presented in the proteomics.txt create table script . the database tables contain the necessary  table triggers, which ensure database integrity. the database design allows the comparison of large quantity of mass spectra. the table result offers the possibility to store retention times and to group sequential mass spectra from one sample in a lc-ms experiment. an improved peak finding algorithm based on signal to noise levels is under construction  <cit> . an extra table with calculated peptide masses of expected proteins from ms-ms experiments can be added to the database, which will make a direct analysis of differentially expressed proteins possible.

ftp
the use of an ordinary ftp server in a university environment is a security risk that cannot be underestimated. on the other hand, ftp is a standard that is accepted and widely accessible across every network and operating system. first of all, precautions have to be taken with setup and configuration of an ftp server as described e.g. by ray zadjmool  <cit> . the architecture disables anonymous access. however it not possible to register user accounts and connection is made by one root account. users and ip addresses have to be logged as well as success of fail of account logon events. account should be locked after several failed login attempts. access to the ftp directory should be regulated using access control list  restrictions across windows nt file system  permissions. disk quota should be enabled to limit the amount of disk space of a user, to prevent becoming a media file share place for hackers. ip address restriction should be set equal to the range of hospital or university ip addresses. the user passwords must meet complexity requirements. however, ftp servers can only handle usernames and passwords in plain text, which can easily be intercepted by password sniffers. sensitive data and login information can be encrypted for total security using ftps or sftp, which solves the problem of insecure ftp. ftps  uses a secure socket program layer  located between the ftp and transport control protocol  layers. ftps has the encryption capabilities of ssl with the advanced features of ftp. unfortunately, enterprise distributed technologies  <cit>  provides only a commercial java library, which supports ftps and sftp. an open source java secure shell version  <dig>  library, jsch- <dig> . <dig> jar, that supports sftp  is provided by jcraft  <cit> .

bonferroni
in the bonferroni approach to n independent tests, the overall change β to make an error of type  <dig> is the product of the individual errors β'.

β = β' <dig> * β' <dig> * β' <dig> ......... β'n = n =  <dig> - p       

according to the binominal theorem, for small values of p'

n=1−np′+n22+....+k+...+nn−1+n≈1−np′     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaqadiqaaiabigdaxiabgkhitiqbdchawzaafaaacagloagaayzkaawaawbaasqabeaacqwgubgbaagccqgh9aqpcqaixaqmcqghsislcqwgubgbcuwgwbacgaqbaiabgucarmaalaaabagaemoba42aaewaceaacqwgubgbcqghsislcqaixaqmaiaawicacaglpaaaaeaacqaiyagmaawaaewaceaacqghsislcuwgwbacgaqbaagaayjkaiaawmcaamaacaaaleqabagaegomaidaaogaey4kasiaeiola4iaeiola4iaeiola4iaeiola4iaey4kasyaaewaceaafaqabegabaaabagaemoba4gabagaem4aasgaaagaayjkaiaawmcaamaabmgabagaeyoei0iafmicaanbauaaaiaawicacaglpaaadaahaawcbeqaaiabdugarbaakiabgucariabc6cauiabc6cauiabc6cauiabgucariabd6gaunaabmgabagaeyoei0iafmicaanbauaaaiaawicacaglpaaadaahaawcbeqaaiabd6gaujabgkhitiabigdaxaaakiabgucarmaabmgabagaeyoei0iafmicaanbauaaaiaawicacaglpaaadaahaawcbeqaaiabd6gaubaakiabgiki7kabigdaxiabgkhitiabd6gaujqbdchawzaafagaaczcaiaaxmaadaqadiqaaiabiida4agaayjkaiaawmcaaaaa@731c@

these equations show that the overall p-value threshold, p, should be divided by n to obtain the significance level, p' of the individual tests.

p′=pn     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgwbacgaqbaiabg2da9maalaaabagaemicaahabagaemoba4gaaiaaxmaacawljawaaewaceaacqai5aqoaiaawicacaglpaaaaaa@35d4@

in both the csf and prostate cancer datasets some tests satisfy the bonferroni multiple test approach, for example  <dig>  * 10– <dig> <  <dig> / <dig> and  <dig>  * 10– <dig> <  <dig> / <dig>  the bonferroni approach may not be ideally suited for this type of data as the presence of individual peptide peaks may be correlated, since they can be isotopes of the same peptide or peptides from the same protein. rather than lowering the p-value threshold in a bonferroni approach, the complete p-value distribution  is shown. the numbers are explicitly supplied, because the plot does not specify the exact p-values lower than  <dig> .

CONCLUSIONS
a new software architecture is presented which can analyze high throughput ms data from maldi-tof ms measurements in a efficient way. results of the analysis are stored in a centralized relational database and ftp server. meta data of the experiment and samples can be stored as well, and can be used to link the results to clinical data or data from other types of experiments. the database application generates a matrix with the frequency of masses in replicate spectra from different samples, a binary table with the frequency of masses above a specific threshold, and a matrix with the mean intensity of the present peaks in the mass spectra replicates. the matrix, which is stored on the ftp server and in the local document directory, can be imported in statistical packages or in  analysis software such as spotfire. statistical analysis of two test datasets by the wilcoxon-mann-whitney test in r clearly distinguishes the peptide-profiles of patient body fluids from those of controls. finally, the modular architecture of the application makes it possible to also handle data from ft-icr experiments.

availability and requirements
java source code, create table script and installation instructions are added as additional files .

abbreviations
acl: access control list

ascii: american standard code for information interchange

csf: cerebrospinal fluid

csv: comma separated value

dw: dwell 

erd: entity relationship diagram

fft: fast fourier transformation

fid: free induction decay

ft-icr: fourier transform ion cyclotron resonance

ftp: file transport protocol

gui: graphical user interface

ip: internet protocol

jar: java archive

jvm: java virtual machine

jdbc: java database connectivity

lc: liquid chromatography

lims: laboratory information management system

lm: leptomeningeal metastasis

maldi-tof: matrix assisted laser desorption ionization

ms: mass spectrometry

mzxml: mass over charge extensible markup language

ntfs: windows nt file system

ssh-2: secure shell version 2

ssl: secure socket program layer

sql: structured query language

swt: standard widget toolkit

tcp: transmission control protocol

authors' contributions
mkt generated and tested the java code and gui. ljd and alctr performed sample preparations and ms experiments, and is programmed the r routines. all authors read and agreed with the manuscript

supplementary material
additional file 1
installation instructions in readme.

click here for file

 additional file 2
create table script proteomics.

click here for file

 additional file 3
java source code as a proteomics.

click here for file

 additional file 4
bruker daltonics data for testing the application 

click here for file

 additional file 5
detailed wilcoxon-mann-whitney p-values listing of the breast cancer with lm patients against a control group

click here for file

 additional file 6
detailed wilcoxon-mann-whitney p-values listing of the end stage prostate cancer patients against a control group

click here for file

 acknowledgements
the netherlands proteomics centre , virgo consortium, and research program biorange of the netherlands genomics initiative and the eu p-mark project financially supported this study. the authors thank frank l. morin of the technische hogeschool rijswijk for his contribution to the java programming and eric brouwer for technical assistance with installing the hardware.
