BACKGROUND
besides bayesian networks  <cit> , auto-regressive models  <cit> , and state-space models  <cit> , graphical gaussian models  are a popular method for modeling genetic networks based on microarray transcriptome data. in the ggm methodology  <cit> , which is considered in the present article, networks are represented as undirected graphs. each vertex represents a gene, and an edge connects two genes if they are partially correlated. in contrast to correlation, which measures both direct and indirect interactions between pairs of variables, partial correlation measures the strength of direct interaction only. since investigators are primarily interested in direct gene interactions, the ggm framework is attractive for modeling of regulatory networks: several recent methodological articles report successful applications of ggms to the estimation of genetic networks from microarray data  <cit> . these approaches are used in numerous applied studies, e.g., for estimating arabidopsis gene networks  <cit>  or for the study of genetically mediated cortical networks  <cit> .

nonetheless, reconstructing ggms from high-dimensional microarray data remains a difficult task. the standard estimation of partial correlations involves either the inversion of the sample covariance matrix, or the estimation of p least squares regression problems, where p is the number of genes. if the number n of observations  is much smaller than the number p of variables , these approaches are inappropriate. suitable alternatives are based either on regularized estimation of the  covariance matrix, or on regularized high-dimensional regression. the present paper focuses on the latter approach, and presents a comparative study on the use of various approaches to high-dimensional regression for covariance selection. the chosen methods are extensively compared in simulations and real data studies. since for real data the ground truth  is unknown, our performance analysis focuses on the similarities and differences between the investigated methods. in particular, we examine the connectivity and size of the resulting graphs, as the differences between the estimated networks. moreover, we compare the stability of the methods with respect to subsampling and with respect to violations of i.i.d. assumptions.

in the remainder of this section, we give a brief overview of graphical gaussian modeling in the classical setting with n > p. subsequently, we discuss the case of high-dimensional data in the "methods" section.

gene regulatory networks and graphical gaussian models
graphical gaussian models   <cit>  are fundamental tools in order to represent direct covariate interactions. formally, a ggm is an undirected graph whose nodes represent variables, and whose edges represent conditional dependency relations. an edge between two nodes is missing if and only if they are conditionally independent given all other nodes. assuming a joint normal distribution, the conditional dependence can be quantified in terms of partial correlations. for a random variable x and a finite set of random variables Ƶ = {z <dig> ...,zk}, the orthogonal complement of x with respect to Ƶ is  

where the projection pƵ is defined with respect to the inner product ⟨x <dig>  x2⟩ = e between two random variables x <dig> and x <dig>  here, we tacitly assume that all involved moments exist. the partial correlation ρƵ  between x <dig> and x <dig> with respect to Ƶ is the correlation of the orthogonal complements of x <dig> and x <dig> with respect to Ƶ:   

in the context of gene regulatory networks, each of the p genes is represented by a random variable xi . for each pair of genes , we are interested in their partial correlation ρij with respect to all other genes, i.e. with respect to the set of random variables Ƶ\ij = {x <dig> ...,xp}\ {xi, xj}.

given n observations  x <dig> ..., xn ∈ ℝp of the set of p genes, the standard unbiased plug-in estimate for the partial correlation coefficients ρij in the case n > p can be formulated in two equivalent ways  <cit> , as outlined below.

notations
in the rest of this article,   

denotes the n × p column-centered data matrix with rows corresponding to observations  and columns corresponding to variables . the standard unbiased estimate of the p × p covariance matrix Σ is then given as  

formulation 1: inversion of the covariance matrix
if the estimate  is invertible, an unbiased estimate of the partial correlation between genes i and j is obtained as   

with  denoting the inverse of the estimated covariance matrix:  

formulation 2: least squares regression
let us consider the p linear regression models   

where ε stands for i.i.d. noise. note that we do not include an intercept in the model because the variables are centered. for i =  <dig> ..., p, the least squares estimate  of the vector of regression coefficients is the solution of the optimization problem   

where x ∈ ℝn is the ith column of x and x ∈ ℝn ×  is the matrix obtained from x by deleting the ith column. the partial correlation between genes i and j is then estimated as   

in the n > p setting, the two regression coefficients  and  always have the same sign. hence,  is well-defined. moreover, it can be shown that both formulations  <dig> and  <dig> are equivalent  <cit>  in the sense that they always yield the same estimate. in the n ≥ p setting, a test of the null hypothesis ρij =  <dig> is available using results on the distribution of .

in microarray data, the number n of samples is typically very small as compared to the number p of considered genes. hence, the above framework is inappropriate for two reasons. firstly, the standard estimate of the partial correlation matrix given by eqs.  and  is not appropriate when n <p: in formulation  <dig>  the estimated covariance matrix  is typically ill-conditioned or even singular, and its generalized  inverse has large mean squared error  <cit> . in formulation  <dig>  the least squares criterion  is ill-posed and leads to overfitting. hence, an alternative regularized estimate of the partial correlation matrix has to be used in the context of ggms with high-dimensional data. the two formulations  <dig> and  <dig> lead to two different strategies for the regularized estimation of the partial correlations in the p ≫ n setting, which are reviewed in the methods section.

secondly, the testing approach mentioned above breaks down in the p ≫ n setting, since the sampling distribution of estimates  under the null hypothesis of zero partial correlation is unknown. two alternatives have been proposed in order to assess statistical significance:  methods based on sparse estimates of the partial correlation matrix that do not require separate testing, and  methods based on empirical null modeling and  false discovery rate multiple testing  <cit> .

methods
this section reviews the available strategies for estimating ggms in the p ≫ n setting: biased large-scale covariance estimation and regularized regression including our two novel variants .

regularized estimation of the  covariance matrix
this approach is derived from formulation  <dig>  the general approach is to plug a regularized estimate of the inverse of the sample covariance matrix into eq. . schäfer & strimmer  <cit>  adopt this approach and propose a shrinkage estimator of the covariance matrix. this shrinkage estimator is constructed as a convex combination of the unrestricted sample covariance matrix  and an estimator  of a specified low-dimensional sub-model t:  

where the factor λ ∈  <cit>  controls the shrinkage intensity. let us assume a parametrization of covariances in terms of correlations and variances, whereas shrinkage is applied to the correlations and diagonal entries are left intact, i.e. the estimator does not shrink the variances. for correlation shrinkage, we consider the identity matrix as the most commonly employed shrinkage target. notice that the optimal shrinkage intensity λ can be determined analytically and be estimated from the data. thus, the resulting correlation shrinkage estimator is positive definite, and favorable properties carry over to derived quantities, such as sample partial correlations. subsequently, model selection of the gene association network can be achieved using empirical null modeling and  false discovery rate multiple testing  <cit> .

estimates of the inverse covariance matrix can also be obtained using bootstrap aggregating  as a technique for variance reduction  <cit> . in some implicit way, the bootstrap procedure presumably helps to regularize the problem. however, bagging schemes are inferior to the shrinkage estimator  <cit> , and computationally much more expensive. a recent extension using the augmented bootstrap  <cit>  is in fact closely related to the shrinkage estimator  <cit>  and is expected to perform similarly.

in this paper, we use the correlation shrinkage based approach as a reference method in comparison with the regression based approaches to covariance selection.

finally, recent novel approaches are to be noted that are based on, ℓ <dig> regularized maximum likelihood estimation in graphical gaussian models  <cit> . corresponding inverse covariance estimates exploit the sparsity in the graphical structure and conduct parameter estimation and model selection simultaneously. however, despite recent advances in semidefinite programming computation remains challenging in practice due to the high-dimensionality and positive definiteness constraint  <cit> .

regularized regression
here, the strategy is to replace the least squares estimator in  by some regularized estimator of the regression coefficients that can be used in formula  to obtain estimators of the partial correlations. more formally, we define the following class of estimates of the partial correlations.

definition  <dig>  for any regression method regthat yields  estimates of the linear regression model , we define the corresponding estimate of the partial correlations as  

and  <dig> otherwise.

this definition ensures that the estimated partial correlation coefficients are always well-defined and that they lie in the interval . again, we can roughly distinguish between regression methods that require testing to construct the undirected graphs, and sparse regression methods.

in the rest of this subsection, we discuss two regularized regression methods  that have been proposed for the estimation of large-scale ggms in the literature. furthermore, we propose two additional attractive methods .

partial least squares
tenenhaus et. al.  <cit>  suggest partial least squares  regression  <cit>  as a plug-in for def.  <dig>  pls is a method for supervised dimensionality reduction. it has its seed in the chemometrics community, but its success has lead to applications in various other scientific fields, e.g. in chemo- and bioinformatics  <cit> .

the main idea of pls is to build a few orthogonal components from the original data x and to use them as predictors in a least squares fit. a pls component t = x w is a linear combination of the original predictors that have maximal covariance with the response vector x, under the additional assumption that the components are mutually orthogonal. formally, the k-th pls component is defined by  

hence, pls regularizes the regression problem by compressing the p variables into a small number m of orthogonal components t =  and regressing the response variable onto these components. after rescaling the weight vectors wk  such that tk has length  <dig>  this leads to the regression coefficients  

while the original formulation of pls scales with the number p of variables, it is also possible to represent the algorithm in a way that it only scales with the number n of observations  <cit> . this leads to a dramatic decrease in computation time for p ≫ n. note that the number of pls components is a model parameter that has to be optimized for each of the p regression models . the standard model selection techniques are cross-validation or information criteria based on degrees of freedom  <cit> . in the context of gene regulatory networks, tenenhaus et.al.  <cit>  propose to use the same number of components m for all p regression models. they observe empirically that the partial correlation coefficients  obtained from pls regression reach a plateau when the number of pls components m increases, and suggest a heuristic procedure to choose the smallest m for which the plateau is reached. however, in our experiments, we use the theoretically well-funded and popular cross-validation technique with k folds.

as the pls coefficients are not sparse, the obtained partial correlations are in general non-zero. thus, a statistical testing procedure has to be used to determine which edges are significant.  in the present article, we use large-scale simultaneous hypothesis testing with local false discovery rate  level  <dig> , in order to identify unusual outliers among the estimated partial correlations.

for the sake of completeness, let us mention in this section a variant of the pls approach described above, which was recently suggested by pihur et al.  <cit> . instead of estimating the partial correlation using eq. , they propose an alternative measure of correlation strength which is very similar to the pls-based partial correlation coefficient except that, roughly speaking, the square root of the product of  and  is replaced by their sum. we remark that pihur et. al. do not optimize the number of pls components m and recommend to use m ≈  <dig> 

ridge regression
ridge regression  is probably the most popular and most straightforward regularized regression technique. regularization is performed by adding a penalty term p to the least squares criterion . ridge regression is based on an, ℓ <dig> penalty term of the form   

where λ >  <dig> denotes the penalty parameter. this leads to a reduction of variance and thus avoids overfitting. the solution obtained by ridge regression depends on the penalty parameter λ. in our paper, we use standard k-fold cross-validation to select the optimal amount of penalization λ. as ridge regression does not lead to sparse solutions, we use large-scale false discovery rate multiple testing  <cit>  to test for significant edges, as described above in the subsection on pls. again, we adopt a level of  <dig> .

the lasso
meinshausen and bühlmann  <cit>  propose to estimate the regression coefficients in def.  <dig> with the lasso  <cit>  and study under which conditions model selection consistency applies, hinging on the choice of the penalty. similarly to ridge regression, the estimated regression coefficients are chosen to minimize a penalized least squares criterion. lasso regression is based on a ℓ1-penalty of the form   

where λ >  <dig> is the regularization parameter. with the ℓ1-penalty, many estimated regression coefficients will be equal to  <dig>  as a result, with variable selection in mind, the lasso has a major advantage: a sparse estimator of the matrix of partial correlations is yielded and a graph can be obtained by assigning an edge between two genes if and only if  ≠  <dig>  the choice of the penalty λ has to be determined for each of the p high-dimensional regressions successively. again, this can be done using some cross-validation scheme or information criteria. meinshausen & bühlmann  <cit>  motivate a choice of the penalty parameter that aims at controlling the probability of falsely connecting two nodes in the graph, i.e. that is a choice tailored to the graph structure. however, experiments  <cit>  indicate that this approach leads to graphs that are too dense, i.e. too many edges are selected. therefore, in this paper, we use the oracle penalty for optimal prediction that is determined using k-fold cross-validation.

the two-stage adaptive lasso
the lasso is only asymptotically consistent for covariance selection when requiring certain necessary conditions among the variables in the ggm. zhou et al.  <cit>  show that the two-stage adaptive lasso procedure  <cit>  is consistent for high-dimensional model selection in graphical gaussian models under rather general and less restrictive conditions. the adaptive lasso  <cit>  considers the lasso with penalty weights as   

where the weights  are chosen in a data-dependent manner. specifically, the adaptive lasso is defined as follows. suppose  is a  consistent initial estimator of β. for example, we can use the least squares estimator . pick a γ >  <dig>  and define the weights . the most common choice is γ =  <dig>  here, we use the lasso estimator  as initial estimator, and define the weights  

note that the amount of penalization in both the initial stage lasso and the second stage lasso with penalty weights is determined via k-fold cross-validation. the adaptive lasso will be at least as sparse as the lasso. for graphical gaussian modeling, the adaptive lasso estimates are used in def.  <dig>  and two genes are connected if and only if the partial correlation coefficient  ≠  <dig>  we remark that for model selection, the optimal weights have to be determined in each of the k cross-validation splits. as the optimal weights themselves are determined via k-fold cross-validation, this implies that a lasso fit has to be computed k <dig> times! this leads to high computational costs.

RESULTS
in this section, we perform extensive experiments to compare regression-based methods for reconstructing gene regulatory networks. we consider the recently proposed techniques pls regression and lasso regression, and the two additional methods, ridge regression and adaptive lasso regression, that have not been applied in practice for this purpose before.

as a reference method, we use the shrinkage approach to covariance estimation, followed by matrix inversion. an overview of the five considered methods and their respective parameters and characteristic features is given in table  <dig>  all methods are implemented in the r package "parcor"  <cit> , available from the r repository cran.

simulations
the performance of the proposed methods is assessed in a simulation study with a set-up similar to  <cit> . the number of variables is fixed at p =  <dig>  and various sample sizes ranging from  <dig> to  <dig> in steps of  <dig> are investigated. we consider two different scenarios. first, we simulate networks with varying degree of density and no network topology, and second, we investigate sparse networks with different network topologies . these scenarios correspond to particular choices of the partial correlation matrix p . for all experiments, a total of  <dig> replications are performed for each sample size to average out variability due to random sampling. for each replication, the data are drawn randomly from a multivariate normal distribution with correlation structure derived from p.

varying degree of density
partial correlation matrices p of size p × p with a proportion of  

non-zero entries are constructed by first drawing the non-zero entries from a uniform distribution on  and then rescaling the non-diagonal entries to ensure that we obtain a feasible partial correlation matrix . hence, the range of the non-zero partial correlations depend on the density of the network. if the network is rather dense, the absolute values of the non-zero partial correlation coefficients are very small compared to a sparse network. this is illustrated in the additional file  <dig>  here, we plot the histogram of the non-zero partial correlations for a random matrix p of density d. it is important to note that due to the small values, the reconstruction of the network becomes more delicate for a higher degree of density: it is more difficult to select the correct non-zero entries if their true vales are close to zero. we remark that this effect cannot be entirely eliminated by a more clever simulation design, and that the simulation of partial correlation matrices is far from trivial  <cit> .

for each generated data set, p is then estimated based on pls regression, ridge regression, the lasso, the adaptive lasso and the shrinkage covariance estimator, successively. for all regression-based methods, k = 5-fold cross-validation is used to optimize the model parameters, i.e. the number of components m for pls and the penalty λ for ridge regression, the lasso and the two-stage adaptive lasso, respectively. for the lasso and the adaptive lasso, we follow the parametrization implemented in the lars package  <cit> , based on the ratio of the ℓ1-norm of the lasso and the ℓ1-norm of the least squares estimates. specifically, the regularization parameter is chosen from an equidistant sequence between  <dig> and  <dig> of length  <dig> 

furthermore, we normalize this parameter to avoid the peaking phenomenon at n = p . for ridge regression, we consider a logarithmically spaced sequence l <dig> ..., l <dig> ranging from 10- <dig> to 10- <dig>  the candidate penalty parameters are then defined as λs = ls n p . finally, the range of the number of pls components is from  <dig> to  <dig> 

we evaluate the accuracy of the resulting estimators in two respects:  the estimation error of the partial correlation matrix itself, and  the recovery of the underlying networked topology. the difference between the estimated and true matrix of partial correlations is measured in terms of the mean squared error . in the upper left panel of figures  <dig>   <dig>   <dig>   <dig> and  <dig>  the mse is displayed as a function of the sample size n.

for sparse networks, the two sparse estimates based on the lasso and the adaptive lasso, respectively, yield a lower mse compared to the three other methods that are not sparse and are likely to contain many non-zero but non-significant  entries, which ultimately lead to a higher mse. this effect vanishes for higher degrees of density. a notable exception is pls. for denser networks, the mse becomes larger. these networks correspond to small absolute values of the entries in p. therefore, we conjecture that pls is not able to shrink the regression coefficients enough, as the regularization parameter m  is discrete. this is in contrast to the four other methods. note however that for the reconstruction of the underlying networked topology the mse is only of secondary interest.

for each investigated sample size, the resulting number of selected edges is displayed in the upper right panel of figures  <dig>   <dig>   <dig>   <dig> and  <dig>  while the horizontal line is the number of true edges. for sparse networks, the lasso with its regularization parameter chosen to be prediction optimal tends to select too many edges. pls, ridge regression and the approach based on shrinkage covariance estimation are in contrast far more conservative and rather select too few edges, even in the n > p case. the adaptive lasso is less conservative and appears to be a promising alternative. again, these differences vanish for higher degrees of densities. as remarked above, the reconstruction task becomes more difficult for higher degrees of density. this explains the low number of selected edges for higher degrees of density.

the two lower panels in figures  <dig>   <dig>   <dig>   <dig> and  <dig> correspond to the power  and the true discovery rate  which are defined as  

respectively. the panels illustrate that for sparse networks, the lasso's comparatively high power comes at the prize of rather low true discovery rate. again, the power decreases with the increase in density of the network. in many practical applications, we argue that it might be more valuable to report more stable results with fewer false positives.

however, it is to be noted that the non-sparse methods using fdr-based procedures for edge selection involve an arbitrary parameter: the fdr threshold . these methods can thus be made more or less sparse by changing the threshold value. to investigate the relative accuracy of the non-sparse methods independently of the particular fdr threshold, the same simulations are subsequently performed with other thresholds. in order to evaluate the ability of the three methods to detect non-zero partial correlations, their sensitivity and specificity are computed for these different fdr thresholds and displayed graphically in form of roc curves . pls and ridge regression yield very similar results. they slightly outperform the approach based on shrinkage covariance estimation. the sensitivity and specificity of the lasso and the adaptive lasso, which do not depend on a particular threshold, are depicted as single points. they are above the roc curves of the three non-sparse methods, indicating good performance - especially for the adaptive lasso.

finally, we compare the runtime of the respective methods in figure  <dig>  note that we do not display the runtime of the lasso, as it was computed as an intermediate step in the r-function for the adaptive lasso. the left part of figure  <dig> clearly shows that the computational load for the adaptive lasso is very high. this is due to the fact that we have to run the lasso algorithm k <dig> times in k-fold cross-validation, and that the  lasso algorithm scales unfavorably in the number of variables - in contrast to pls, ridge regression or shrinkage. the right part of figure  <dig> only displays the runtime of the three latter methods. shrinkage is faster than the regression based approaches as it circumvents both time-consuming cross-validation and the computation of p different regression models. the discrepancy with respect to the runtime becomes even more apparent in the real data study .

different network topologies
next, we consider different network topologies. we simulate two different types of topologies  the left part of the figure shows three clusters of genes. in each cluster, all genes are partially correlated, and genes from different clusters are not partially correlated. in the simulation, we consider networks with  <dig>  and  <dig> clusters. the right part of the figure in clusters.pdf shows three star-shaped clusters. in each star, all genes are partially correlated to one gene, the center of the star. in the simulation, we consider a network with  <dig> stars. the mse, the number of selected edges, the power and the true discovery rate are displayed in figures  <dig>   <dig>   <dig> and  <dig>  again, we observe a high mse for pls in most scenarios. as explained above, this is probably due to the insufficient shrinkage of pls towards  <dig>  overall, the lasso and ridge regression perform best in these scenarios. so, in contrast to what is often conjectured/reported in the literature, we do find in our simulations that sparse methods are able to reconstruct networks in the presence of cluster structures.

real data study
we compare the five different methods on diverse real world data sets: the ecoli <dig> <cit>  and ecoli <dig> <cit> , ara <cit> , t.cell <dig> and t.cell <dig> <cit> , and west <cit>  data sets. all data sets are freely available. an overview of the size, characteristics and availability of the data sets is given in table  <dig>  the five considered methods  including the model selection procedures for the regression-based approaches are exactly as in the simulation setting. for ecoli <dig>  we use leave-one-out-cross-validation for model selection, and for west, we use k = 5-fold cross-validation. for the remaining  <dig> data sets, we use k =  <dig> 

in real world scenarios, the ground truth, i.e. the true underlying network, is hardly ever known, and the performance of different methods cannot be determined in terms of mse, power and tdr as in the simulation study. nevertheless, it is possible to compare the performance of the different methods quantitatively. in particular, we investigate the size and the connectivity of the estimated graphs, their overlap the type of interaction between genes and their stability.

figures  <dig> and  <dig> display the percentage of selected edges for each data set. as in the simulation study, the proportion of selected edges strongly depends on the chosen estimation method. more surprisingly, the relative levels of sparsity of the obtained graphs show very different patterns for the six investigated data sets. the lasso and adaptive lasso seem to behave very differently from the other methods. this can at least partly be explained by the fact that they rely on a completely different edge selection scheme which essentially depends on the sparsity of the regression method and not on the testing scheme.

in a nutshell, the lasso and adaptive lasso select less edges than the other methods for all data sets except for the two data sets t.cell <dig> and t.cell <dig> with repeated measurements. with these two data sets, lasso and adaptive lasso yield complex graphs with as much as over 50% non-zero edges . this behavior is likely to be due to the longitudinal structure of the data that is not explicitly considered, since the standard lasso regression method assumes independent observations. in contrast, longitudinal structures may be handled in an implicit way by methods using an fdr-based assessment, where the distribution under the null hypothesis is estimated from the data. to gather further evidence for our hypothesis, we average over the  <dig> replications in the two respective data sets. this leads to  <dig> observations for t.cell <dig> and  <dig> observations for t.cell <dig>  on the averaged data, both lasso and adaptive lasso indeed select far less edges: for the averaged t.cell <dig>  we obtain:  <dig> % ,  <dig> % ,  <dig> % ,  <dig> % ,  <dig> % . for the averaged t.cell <dig>  we obtain  <dig> % ,  <dig> % ,  <dig> % ,  <dig> % ,  <dig> % .

pls reconstructs very dense networks for five out of the six data sets . in combination with the high mse that we observed in the simulations, we conjecture that pls in combination with cross-validation is not the most reliable method for the reconstruction of networks. we believe that other model selection strategies or the incorporation of sparse pls  <cit>  are necessary in order to improve the performance of pls.

among the three methods with fdr-based assessment of the edges, i.e pls, ridge regression and shrinkage covariance estimation, the latter procedure seems to be most conservative, whereas pls identifies the highest number of edges. this result is consistent for all six real data sets and yields a refinement of the results presented in the simulation study, where these three methods performed similarly.

figures  <dig> and  <dig> display the connectivity of the estimated graphs for each of the six data sets. for each gene, we derive the proportion of genes that are connected to it through an edge, with each of the six data sets and each of the five methods. each boxplot depicts the distribution of the proportion of connected genes for the considered method and the considered data set. as explained above, the assumption of i.i.d. observations is violated for the data sets t.cell <dig> and t.cell <dig>  this leads to a high number of selected edges for the lasso and adaptive lasso , and consequently to a high number of connected genes for these methods.

for each candidate edge i,  counts how often this edge is selected across the r subsamples. similarly,  denotes the number of times the ith edge is not selected. these frequencies are summarized using fleiss' κ-score  <cit>  which measures the degree of agreement among the r subsamples of the data. the measure is defined as follows. we first compute the average proportion of assignments  

further, the degree of agreement of the r subsamples for the ith edge is measured as  

finally, with  denoting the average of the pi's and with  denoting the agreement expected by chance, fleiss κ is defined as  

the score is always ≤  <dig>  and the higher the value of κ, the more stable the methods are with respect to subsampling.

the κ-score of the methods is given in table  <dig>  as the absolute values are hard to compare between data sets, we also display the ranking on each data set. the shrinkage approach is the most stable, probably because it does not rely on additional subsampling in form of cross-validation splits. the regression based approaches are less stable, but among them, the degree of stability is comparable. in particular, in this experiment, we cannot see any difference between sparse and non-sparse approaches.

finally, the considered methods differ quite dramatically with respect to their run-time. as an illustration, we compared the run-time on the west data set, which contains  <dig> genes. the approach based on shrinkage covariance estimation is by far the most efficient one , and all other methods scale within several hours: pls ≈  <dig>  hours, ridge regression ≈  <dig> hours, the lasso ≈  <dig> hours, and the adaptive lasso ≈  <dig>  days. this can be seen as a major drawback of the methods relying on cross-validation schemes, especially the lasso-based methods. while ridge regression and pls allow a representation that only scales in the number of observations, lasso and adaptive lasso scale in the number of variables. furthermore, adaptive lasso requires nested cross-validation. partial relief can be found in a parallel implementation. alternatively, for high-dimensional data, one might consider to approximate the lasso-based networks by first constructing a mildly sparse network without cross-validation , and then to refine this network by running the  lasso with cross-validation.

discussion
in this paper, we proposed and compared different methods to estimate partial correlation coefficients based on regularized regression techniques with applications to genetic networks. it is remarkable that while we focus on the framework of graphical gaussian models , the investigated methods nevertheless show clear differences. hence, the employed regularization technique for graphical gaussian models has a considerable effect.

in a simulation study, we assessed the performance of the considered methods in terms of estimation accuracy  and in terms of reverse engineering of the true underlying networked topology. as a result, the investigated non-sparse methods  were found to perform similarly. it is to be noted that these methods have fdr-based significance testing in common. they are rather conservative with respect to the inclusion of edges when used with the standard fdr threshold  <dig> . the lasso tends to produce too "dense" structures, while the adaptive lasso compensates for that by selecting edges in a two-step approach, therefore leading to sparser graphs. the latter two-stage approach is able to select relevant edges, even for small samples, while at the same time preventing to be too dense. for denser networks, the performances of the five methods are very similar. on real world data, the behavior of the non-sparse methods is again similar, except that pls is less conservative than ridge regression and the approach using a shrinkage covariance estimator. a remarkable difference with respect to the different data sets is the behavior of the lasso and the adaptive lasso on the t.cell data sets. in contrast to the four other data sets, the t.cell data include replications, thus violating the assumption of independent samples. consequently, the  lasso does not handle the underlying data structure correctly, while empirical null modeling seems to account for the decreased "effective" sample size in an implicit way.

note that all investigated methods require the specification of tuning parameters that need to be optimized based on the available data. the choice of the model selection criterion itself strongly influences the results of the methods  <cit> , especially for small n. as an example, the model selection procedure introduces a substantial amount of variation for the lasso and the adaptive lasso. in the real world study, we estimate the two graphs on two different random cross-validation splits, which leads to an overlap of only  <dig> % on the west data, although the adaptive lasso graph is defined as a subgraph of the lasso graph. hence, tuning parameters should be given much attention in future research when new methods are developed. moreover, setting the parameters to fixed values without proper selection procedure  and just because they "yield nice results" is an incorrect and biased strategy which may favor the proposed novel method. furthermore, from a computational point of view, a major strength of the shrinkage approach is that the optimal amount of regularization can be estimated from the data using an analytic formula, thus making time-consuming cross-validation procedures unnecessary.

we want to emphasize that there are interesting alternatives for the detection of significant edges that do not depend on sparsity penalties or testing based on local false discovery rates. for instance, reverter & chan  <cit>  propose information theoretic measures for the reconstruction of gene co-expression networks. the comparative performance of these methods and their connections to the approaches investigated above may be explored in future research.

finally, the methods discussed in this paper can potentially be used for detecting causal interactions  <cit> . for instance, in the presence of longitudinal data, arnold. et.al.  <cit>  propose to identify the direction of interactions between variables by investigating partial correlations between time-shifted copies of the variables. amongst others, they propose to estimate these partial correlations using lasso regression, but other regression methods might be promising alternatives.

CONCLUSIONS
we briefly summarize our findings. a summary of our findings can be found in table  <dig> 

performance
in the simulation, the investigated non-sparse regression methods, i.e. ridge regression and partial least squares, exhibit rather conservative behavior when combined with  false discovery rate multiple testing in order to decide whether or not an edge is present in the network. for networks with higher densities, the difference in performance of the methods decreases. both sparse and non-sparse methods can deal with cluster topologies in the network.

for pls, we observe both a high mse in the simulations and a high percentage of selected edges in some of the real data. in our opinion, this is an indication that pls itself might not be too well-suited for the reconstruction of networks. the reasons are that pls is not sparse by design, and that it does not shrink arbitrarily close to zero. therefore, we suggest to incorporate sparse versions of pls instead in future research.

on six real data sets, we also clearly distinguish the results obtained using the non-sparse methods and those obtained using the sparse methods where specification of the regularization parameter automatically means model selection. for data that violate the assumption of uncorrelated observations , the lasso and the adaptive lasso yield very complex structures, indicating that they might not be suited under these conditions.

stability
we compared the stability of the methods under two aspects. all regression-based methods are less stable than the shrinkage approach over different subsamples of the data, and within the regression-based approaches, there is no clear difference between sparse and non-sparse methods. however, the two sparse regression methods seem to be unstable with respect to violations of the i.i.d assumption of the samples.

runtime
the computational load for the lasso and in particular for the adaptive lasso is considerable. for very high-dimensional data, this can constitute a severe limitation. the runtime might be decreased by applying parallel computation techniques or by preselecting a coarse network topology that does not rely on cross-validation. while pls and ridge regression are slower than shrinkage, both of them are fairly fast to compute, as they allow a kernel representation, i.e. most of the computation scales in the number of samples and not in the number of variables.

available software
the regularized estimation of partial correlations and the construction of gene association networks with  lasso, ridge regression and pls are implemented in the r package parcor <cit>  which is available from the cran repository http://cran.r-project.org/. the package relies heavily on the lars package  <cit> . for assigning statistical significane to the edges in the network, we use the fdrtool package  <cit> . we also provide an executable sheet for the simulations  and the real-world data .

authors' contributions
nk and alb initiated the study. nk wrote the initial version of the manuscript. js and nk implemented the r package, nk and alb performed the analyses. all authors contributed to the concept and to the manuscript.

supplementary material
additional file 1
cluster structure. the figure illustrates the two different cluster structure  that is used in the simulation study.

click here for file

 additional file 2
histogram of partial correlations. the figure displays the histogram of the non-zero partial correlations in the simulation study for different density levels.

click here for file

 additional file 3
roc-curves for a density of 5%, part i. the figures display the roc-curves for a density of 5%, and for n = 25; 50; 75; 100

click here for file

 additional file 4
roc-curves for a density of 10%, part i. the figures display the roc-curves for a density of 10%, and for n = 25; 50; 75; 100

click here for file

 additional file 5
roc-curves for a density of 15%, part i. the figures display the roc-curves for a density of 15%, and for n = 25; 50; 75; 100

click here for file

 additional file 6
roc-curves for a density of 20%, part i. the figures display the roc-curves for a density of 20%, and for n = 25; 50; 75; 100

click here for file

 additional file 7
roc-curves for a density of 25%, part i. the figures display the roc-curves for a density of 25%, and for n = 25; 50; 75; 100

click here for file

 additional file 8
roc-curves for a density of 5%, part ii. the figures display the roc-curves for a density of 5%, and for n = 125; 150; 175; 200

click here for file

 additional file 9
roc-curves for a density of 10%, part ii. the figures display the roc-curves for a density of 10%, and for n = 125; 150; 175; 200

click here for file

 additional file 10
roc-curves for a density of 15%, part ii. the figures display the roc-curves for a density of 15%, and for n = 125; 150; 175; 200

click here for file

 additional file 11
roc-curves for a density of 20%, part ii. the figures display the roc-curves for a density of 20%, and for n = 125; 150; 175; 200

click here for file

 additional file 12
roc-curves for a density of 25%, part ii. the figures display the roc-curves for a density of 25%, and for n = 125; 150; 175; 200

click here for file

 additional file 13
simulation. this file contains the r-script to run the simulations that are described in the paper.

click here for file

 additional file 14
real-world. this file contains the r-script to run the real-world studies that are described in the paper.

click here for file

 acknowledgements
nk was supported by the bmbf grant fkz 01-is07007a , and the fp7-ict programme of the european community, under the pascal <dig> network of excellence, ict- <dig>  financial support for js from dsm nutritional products ltd.  is gratefully acknowledged. alb was supported by the lmu-innovativ project biomed-s: analysis and modelling of complex systems in biology and medicine. we thank lukas meier and mikio l. braun for constructive comments on model selection, and animesh acharjee for helpful feedback on our r package "parcor".
