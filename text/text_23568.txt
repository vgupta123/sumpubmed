BACKGROUND
the standardization of experimental protocols is at the heart of glp  and gmp  procedures  <cit> . these have been essential for generating data required by regulatory agencies for many years. a high-degree of rigor is essential to ensure the reproducibility and relevance of the observations on which experimental conclusions are based.

with the increasing complexity of experimental methods there is an increasing technological need for the representation of biomedical protocols in a way that ensures that sufficient and unambiguous information is recorded to enable another agent  to replicate these protocols. the exact <dig>  ontology reported in this manuscript provides a representation of experimental protocols that ensures their reproducibility and is easily processable by computer programs.

related projects
several projects have contributed to the development of explicit semantically defined representation of biomedical protocols. the ontology for biomedical investigations  project is developing an integrated ontology for the description of biological and clinical investigations  <cit> . this ontology aims to support the consistent annotation of biomedical investigations, and represents the design of investigations, the protocols and instrumentation used, the material used, the data generated, and the type of analysis performed. obi is a valuable resource for recording information about biological and clinical assays, their designs, inputs and outputs. obi also defines such terms relevant to the description of protocols as protocol, investigator, documenting, and data transformation.

however, obi has not been designed to capture all essential information about experimental procedures; exact <dig> aims to address this need. the obi representation is complicated, and design decisions may lead to a combinatorial explosion in the size of the representation. for example, the class obi: storage has such subclasses as obi: agar stab storage, obi: anticoagulant tube storage of blood specimen, obi: paraffin storage. one can see that a vast number of classes would be required to represent the storage of every possible type of biochemical entity and a piece of equipment used in labs. instead, exact <dig> defines only one class exact2: store with a limited number of the required descriptors, including biochemical entity and equipment instances of which are imported from external resources. the exact <dig> design philosophy is to aim to provide as simple as possible representations of biomedical protocols.

taverna is a domain-independent workflow management system - a suite of tools used to design and execute scientific workflows and aid in silico experimentation  <cit> . taverna enables the linking together of scientific resources, error handling, service invocation, data streaming, and provenance tracking. taverna is a popular system and is used by many projects including ondex for data integration and visualisation  <cit> , e-lico for interdisciplinary collaborative research in data mining and data-intensive science  <cit>  and next generation sequencing  <cit> .

taverna considers a biomedical protocol to be a workflow, but it does not provide a rigorous logically defined representation of protocols. instead it provides a high-level declarative way of specifying what a particular in silico experiment modelled by a workflow is designed to achieve, not how it will be executed; see for example a protocol at http://www.myexperiment.org/workflows/ <dig>  exact <dig> representations are complementary to taverna and focus on how experiments should be executed.

in conclusion the representations of biomedical protocols provided by exact <dig> are orthogonal and complimentary to other relevant representations, e.g. workflows in taverna and investigations in obi.

methods
we judged that manual analysis of actions would yield higher quality results compared with text mining methods. therefore we manually inspected hundreds of published and commercial biomedical protocols from multiple areas of biomedicine, including neurology, epigenetics, metabolomics, stem cell biology, etc.  <cit> . we analysed instructions, notes, alerts, properties of experimental actions, what conditions are required and what goals are specified. we noticed after several rounds of analyses that newly considered protocols, even from different areas, did not add much information to that already formalised in exact <dig> knowledge. we therefore concluded that the representation of experimental actions in the scientific literature is limited and relatively consistent. there are of course differences in lexical patterns used to express information about experimental actions, but the number of distinct experimental actions mentioned in protocols is surprisingly low . the language used to describe protocols is also considerably restricted compared with natural language used in other texts. as such, this apparent 'simplicity' would be expected to offer a consistent and reproducible means for presenting protocols.

we then updated the previous version of exact  <cit>  using the entities and relation identified to be relevant to the representation of experimental procedures. we did this using the ontology editor protégé  <dig> , and the reasoner hermit  <dig> . <dig>  to detect inconsistencies. there are a number of substantial changes in exact <dig> compared to exact , but the most important is the addition of descriptors to each experimental action. the reason for this is that it is not possible for biologists to safely reproduce a biomedical procedure without knowing the values of such descriptors as temperature, equipment, duration of experimental actions. unfortunately, such information is frequently missing in published protocols, or is inconsistent between different protocols, leaving interpretation up to the reader and therefore dependent on personal or collective experience. for example, vital information is missing from this description of experimental actions:

"reconstitute bfgf and egf with  <dig> % bsa solution at a concentration of  <dig> μg/ml. you will need  <dig> μl of each per  <dig> ml of complete medium. freeze unused portions in aliquots".

the liquid component of the  <dig> % bsa  solution is not identified . furthermore, these actions must be performed under sterile conditions, otherwise experiments using these materials may fail. to overcome this difficulty we consulted with experts in various biomedical areas to identify what descriptors are required, and what descriptors are optional, for each experimental action included in exact <dig> 

following obo foundry recommendations , exact <dig> imports classes and relations from external resources. we employed the principle of mireot  for consistent reference of external terms  <cit> . mireot requires the inclusion of the following information:  source ontology uri ;  source term uri; and  target direct superclass uri. we used the ontofox web application to import external terms to exact <dig>  <cit> . in total,  <dig> terms were imported into exact <dig> from bfo, obi, iao, pato .

exact <dig> is encoded in owl-dl, a language widely used by the research community and recommended by obo foundry. we used github for versioning and depositing exact <dig>  the latest version of the ontology and files with external imports are available at: https://github.com/larisa-soldatova/exact. exact <dig> is also available at bioportal: http://bioportal.bioontology.org/ontologies/exact.

RESULTS
exact2
we present a fundamentally new version of the ontology exact <dig> for recording biomedical protocols. exact <dig> aims to explicitly define the semantics of experimental protocols in order to ensure their reproducibility, and to support computer applications that assist biologists in the preparation, maintenance, submission and sharing of experimental protocols. the range of experimental procedures in biomedicine is extremely wide, and ever increasing. while exact <dig> aims to cover the majority of experimental actions found in biomedical protocols, our estimate is that exact <dig> currently includes 85% of typical experimental actions. this estimate is based on processing of previously 'unseen' protocols. the scope of exact <dig> is restricted, for example by not allowing negations. negations are rarely used in biomedical procedures, and are problematic to represent under the open world assumption. our aim is to keep exact <dig> as simple as possible, and consequently such instructions as do not smoke cannot be represented with exact <dig>  but such information can be captured in a form of notes as free text.

it is a challenging task to capture and formalise information pertinent to biomedical protocols, we therefore applied a modular approach to the problem. exact <dig> is focused on the formal description of experimental actions and imports other entities participating in experimental actions from external resources such as chebi  dictionary  <cit>  for biochemical entities and eagle-i  ontology for experimental equipment.

upper level ontologies
the previous version of exact used sumo   <cit>  and time ontology  as upper-level ontologies  <cit> . following obo foundry recommendations, the new version has been constructed with the use of the top-level classes from bfo   <dig>   <cit> , iao   <cit> , pato   <cit>  and obi  <cit>  . the result is that the class sumo: object has been replaced with the class obi: material entity, and the class exact: proposition has been replaced with the class iao: information content entity. exact <dig> imports the pato classes: volume, speed, temperature as descriptors of experimental actions. such classes as iao: document title, iao: author identification were imported to exact <dig> to enable the representation of protocol's provenance. iao classes textual entity and table were imported to capture information about such important textual elements of biomedical protocols as tables, notes, cautions, troubleshooting.

the adherence to bfo, iao, pato and obi enables an efficient integration of exact <dig> with other biomedical ontologies, particularly with chebi for the representation of biochemical entities, and eagle-i for the representation of equipment used in experiments.

structure of exact2
exact <dig> has a streamlined structure in order to ease the navigation through the ontology hierarchy. underused top level classes such as exact: mode of transformation, exact: mode of separation have been deprecated. we have also deprecated classes that had only one or two subclasses. for example the class exact: shake had only one subclass exact: swirl, the class exact: cover had only one subclass exact: seal and the class exact: remove had only two subclasses exact: vortex and filter. all these classes are now defined as subclasses of the class exact2: experimental action. consequently, a user or a computer application, in order to process information does not need to identify that, for example, the action rotate is a 'subtype of the remove type' of an action.

the structure of exact <dig> has been simplified further by the deprecation of roles. for example the class exact: container was represented as a role played by equipment. while this is an accurate representation, and different pieces of equipment can play different roles, we judged that exact <dig> should only include the top-level class exact2: equipment without specifying what roles it can play or what functionality it may have. instead, a modular approach that enables an import of lab-specific equipment is employed for the encoding of biomedical protocols.

exact <dig> no longer directly supports commands  and other expressions  that could be included to biomedical protocols in order to describe a sequence of experimental actions. there are other formalisms  that are better suited for the representation of such knowledge.

the experimental actions branch
the experimental actions branch has been significantly extended. the previously published version of exact contained  <dig> actions, including command actions, equipment setup actions, and data actions.  <dig> of the  <dig> actions were classified as experimental action. we manually analysed hundreds of biomedical protocols and added  <dig> experimental actions that were missing from the previous version. for example the actions exact2: aliquot  into small samples of equal size; to divide into aliquot parts, especially for use as experimental samples"  <cit> ), exact2: dilute  having a low concentration or a concentration that has been reduced by admixture" were added to the new version.

exact <dig> imports three actions from obi. specialists in the area of biomedicine analysed the obi branch planned process and identified obi classes that represent experimental actions. this resulted in the addition of such classes to exact <dig> as obi: elution ), obi: injection  by relying on devices such as syringe or injector connection, attached or forced into a vascular system  or in a tissue.).

mapping of exact <dig> experimental actions to obi planned processes
exact was developed before obi independently included semantic descriptors relevant to experimental actions. as a result there are several exact and obi classes that have similar semantic meanings. following ontology design best practices exact <dig> explicitly maps such classes via the annotation property has synonym. for example the class exact2: wait is mapped to obi: waiting, the class exact2: store is mapped to obi: storage. the semantic meaning of these processes is similar, but not identical. in exact <dig> these actions are defined via a set of descriptors. the experimental action exact2: store requires the recording of such descriptors as  temperature, period , biochemical entity ,  condition, and equipment . otherwise, according to exact <dig>  this experimental action cannot be reproduced adequately. obi has the following properties for the process storage: has specified input some material entity , achieves planned objective some 'material maintenance objective' , and realizes some  . thus, obi lacks the representation of such essential properties of the process storage as  temperature, and period . some biochemical entities must be stored at  -196°c, -80°c, -20°c, +4°c and some may be kept at a room temperature. the failure to record such essential information may result in the failure to correctly follow biomedical procedures, and produce erroneous results. it is true that a storage period is frequently not specified in biomedical protocols. however, it is important information, for example for safety and reproducibility, and it is essential to record it whenever possible.

optional descriptors
one of the requirements for exact <dig> is to represent which descriptors of experimental actions are essential, and which are optional. in a scenario where a user submits a protocol to an exact2-based system, and some experimental actions in that protocol do not include essential descriptors, then the system will request that the user specifies those missing descriptors . conversely, a frequent occurrence in protocols is that experimental actions contain descriptors that are non-essential . these descriptors are beneficial to the understanding of protocols, and therefore should be preserved in machine amenable representations of protocols. however, a system supporting such representations needs to be able to strike the right balance between ensuring that all essential information about a protocol is captured, and remaining user-friendly by not enforcing users to input non-essential information. for example, it is not essential to specify the value of the descriptor temperature for the actions exact2: filter and exact2: resuspend. these actions are typically executed at room temperature, or at the temperature of the previous step, and it is normally specified in protocols if otherwise. exact <dig> aims to represent typical situations and, in order not to enforce the recording of the descriptor temperature for every instance of the classes exact2: filter and exact2: resuspend, exact <dig> needs to classify this descriptor as optional.

unfortunately, the limited expressivity of owl does not allow us to represent that an experimental action may have certain descriptors. to overcome this limitation we have introduced the class exact2: optional descriptor of experimental action with such subclasses as exact2:  temperature, exact2:  equipment, etc. an alternative solution would have been to assign probabilities to the statements 'an experimental action has a descriptor'  <cit> . however, we judged that the probabilistic approach would unnecessarily complicate the exact <dig> representations.

use case: translation of biomedical protocols to a machine-amenable format
the texts of biomedical protocols, like many types of text in natural language, may be ambiguous and contain errors. the automated processing of biomedical protocols has additional challenges:

• the protocol text could come in various file formats, such as txt, tex, doc, docx, pdf.

• the use of language differs between labs. that is usually due to lab or material specificity, and consequently some terms may have different implications in different labs. for example the term overnight may refer to  <dig> hours in some labs,  <dig> hours in others, and in some situations to be of no importance. the failure to capture such information accurately may result in the failure to obtain the desired experimental results. for example if an experiment requires the culturing a bacterial culture overnight, the experimental results may vary significantly depending on if the culture has been growing for < <dig> or > <dig> hours .

• biochemical entities may be referred to by different names. in order to disambiguate the biochemical names it is necessary to link each occurring in a protocol text biochemical entity to its unique id from a commonly used external resource.

• different experimental actions may have a varying number of descriptors some of which could be missing. this missing information, if essential for the execution of the protocol, must be captured and then processed.

based on our extensive analysis of biomedical procedures, we have developed the following  automated framework for the translation of biomedical protocols expressed in natural language  into a machine-amenable semantically defined format:

 <dig>  input: a biomedical protocol as text, exact <dig> as a reference model, and a list of semantic clues .

 <dig>  input the laboratory-specific information:

a. list of equipment .

b. list of biochemical entities .

c. abbreviations .

d. list of default settings .

 <dig>  process text:

a. convert text to a plain text format, e.g. txt.

b. identify and normalize the named entities  identified in the text.

c. identify in the text nouns, verbs, and other parts of speech .

d. split the text into sentences.

 <dig>  identify experimental actions in each sentence by matching the normalized verbs or verb phrases to the subclasses of the class exact2: experimental action. if a sentence contains several experimental actions, then create the corresponding number of copies of this sentence where each copy has only one experimental action.

 <dig>  identify descriptors of each experimental action and the values of the descriptors by matching the descriptors defined in exact <dig> and using the semantic clues. if a descriptor defined in exact <dig> as essential has not been identified in the corresponding sentence, then request the user to input information about this descriptor and its value.

 <dig>  output the list of identified experimental actions, their descriptors and the corresponding values.

 <dig>  verify the output list of experimental actions and their descriptors with the user. the user should correct errors  and/ or confirm that the translation is correct.

 <dig>  manually update the input information if the user has made corrections or identified new experimental actions, e.g. a new synonym of an existing experimental action can be added to exact <dig> 

this framework can be implemented in many ways. exact <dig> is encoded in a standard w3c language owl-dl, but it can be easily translated into other formats, i.e. rdf, xml, java, or txt. biochemical entities should be recorded along with their ids to disambiguate these terms. lab-specific internal ids or ids of the suppliers can be provided. however, it is recommended to use external ids provided by commonly used resources like chebi whenever possible. there are also biolexicons available to serve the purpose  <cit> .it is harder to assign external ids to equipment items. however there are projects that aim to semantically define laboratory equipment. for example the eagle-i project provides a national  research resource discovery platform that helps biomedical scientists search for laboratory resources  <cit> .

there are various converters from various formats to the txt-format . there are many high-quality pos taggers. for example pos tagger claws has consistently achieved 96-97% accuracy  <cit> . the national  centre for text mining  provides various text mining tools, including genia sentence splitter  optimized for biomedical texts  <cit> . we used apache opennlp tools to process biomedical protocols we worked with .

to illustrate the process of the identification of the experimental actions and their descriptors in the text, suppose we have the following sentences:

adjust to 10% tca.

incubate at 30°c overnight.

we assume that the text has been processed using appropriate text mining tools, and all nes and poss have been recognised and disambiguated. for example, tca will be found in the text and checked against both the list of abbreviations and biochemical entities. the abbreviation will be replaced by the term trichloroacetic acid and assigned with the id ncbi pubchem: cid  <dig>  all verbs then will be checked against subclasses of the class exact2: experimental action. the verb 'incubate' will be matched with the class exact <dig> 000049: incubate and the verb 'adjust' will be matched with the class exact <dig> 000089: adjust . exact <dig> defines the following descriptors for the experimental action incubate:

• biochemical entity ,

• condition ,

• temperature ,

• period , and

• optional descriptors: equipment, protocol method, goal.

a translating engine recognises the defined in exact <dig> descriptors in the given sentence. it is easy to recognize the value of the descriptor temperature by the clue '°c' and the value of the descriptor period as  <dig> hours . however, the information about the participating biochemical entity and a condition is missing. this information is defined in exact <dig> as essential and therefore has to be specified. therefore a translating engine will ask the user to input information about what is to be incubated, and under what condition. thus all the essential information for the reproducibility of the protocol information will be captured and represented in a semantically defined form.

a more intelligent approach for the resolving of a missing descriptors issue would be to infer the missing values from previous actions, or to use default reasoning. the user should then be asked to check if the inference is correct. for example, we observed that a biochemical entity participating in an experimental action is often not specified in protocol text. however such an entity, e.g. 'yeast growth culture', can be easily identified from the preceding experimental actions. also, information about typical scenarios, e.g. under what conditions an incubation with the use of the specified incubator for the specified biochemical entity typically takes place, can be captured and employed as default values.

the proposed framework ensures that biomedical protocols are translated to a machine-amenable format accurately, and exact <dig> and the supporting knowledge base of semantic clues are being continuously improved. our evaluation suggests that at present exact <dig> supports the identification of 83-95% experimental actions in protocol texts . the coverage of exact <dig> is improving through the analysis on new protocols. we propose that protocols translated to a machine amenable format should be deposited to public repositories for future re-use. many operations on such protocols, like search, comparison and retrieval, will be enhanced and yield more accurate results.

future work: petri nets for the representation of experimental workflows
ontologies are well suited for the representation of declarative and static domain knowledge, but they generally struggle with the representation of complex sequences of events unfolding in time. however there is a need in the integration of a rigorous logical representation of key experimental steps, with the temporal sequence of those steps, so as to capture the explicit semantics of whole experimental procedures.

there were several attempts to integrate exact with the representation of experimental workflows. in the original work on exact  <cit>  we encoded protocols in python. this approach to the representation of workflows was not popular with biologists. maccagnan et al  <cit>  developed the cow  software to formalize workflows built on ontologies. the method was specifically set up to support the design of structured protocols for biological laboratory experiments. the workflows were enhanced with ontological concepts taken from the developed domain-specific ontologies, including exact  <cit> . unfortunately this project has now been abandoned .

in order to adress the need for rigorous representation of both experimental actions and their sequence, we have recently experimented with using the petri net formalism to representat workflows of experimental procedures, with encouraging results. petri nets are used as a formal and graphically appealing language for modelling systems. they are suitable for the representation of biochemical reactions in metabolism, signal transduction and gene expression, and in reconstructing complex molecular networks. for example, petri nets have been applied to the regulation of the lac operon  <cit> . duchenne muscular dystrophy  <cit> , the response of s. cerevisiae to mating hormones  <cit> , and the yeast cell cycle  <cit> .

a general petri net has the following main components  <cit> :

• places are passive nodes indicated by circles and refer to conditions or states. places are allowed to carry tokens.

• transitions are active nodes indicated by squares and describe state shifts, system events and activities. transitions consume tokens from its pre-places and produce tokens within its post-places according to the arc weights.

• tokens are variable elements indicated by dots within a place. tokens may refer to a concentration level, a number of proteins, temperature, etc. tokens are consumed and produced by transitions.

• directed arcs are inactive elements visualised by arrows. arcs specify the causal relationships between transitions and places and may have weights.

petri net semantic describes the behaviour of nets  <cit> . we suggest to deepen the semantic representations of petri nets by defining not only the behaviour of the system, but also the semantic meaning of each element of a petri net representing an experimental workflow. experimental actions can be encoded as transitions, the most essential descriptors of experimental actions such as time and vital experimental conditions as places may be marked with a token indicating whether or not the condition is fulfilled . arcs can be used to represent the sequence of experimental actions.

for example, we considered the experimental procedures for isolation of physarum polycephalum plasmodial mutants altered in sporulation obtained by chemical mutagenesis of flagellates  <cit> .corresponding genetic screens are run in the magdeburg centre for systems biology  <cit> . physarum polycephalum belongs to the amoebozoa group of organisms. the experimental procedure is complex, non deterministic and takes ten days to complete . figure  <dig> shows a fragment of this procedure represented with a petri net. the semantics of the places and transitions is defined with the use of the exact <dig> classes. the experimental actions, e.g. streak, transfer, are represented as transitions, and the key descriptors of those experimental actions are represented as places, e.g. amoebae microcolony, dspb agar plate . in order to support the representation of such workflows, we will have to add to exact <dig> such descriptor as time point. also, transition firing rules have to be defined appropriately in order to ensure the correct dynamic behaviour of the petri net.

we suggest that an integration of the formalisms of petri nets and exact <dig> will provide a powerful representation of experimental workflows. it would not only fully capture the semantics of experimental procedures, but also would enable one to simulate such procedures before physically executing them in the laboratory.

disscussion
a key insight of the scientific revolution was the importance of experimental results that could be reproduced in different laboratories  <cit> . what was true in the 17th century is still true today in the 21st century: repeatable experiments are a hallmark of science. it is widely accepted that for new knowledge to be published in a scientific journal the protocols used to derive that new knowledge must also be published. the protocols are necessary to reproduce the observations upon which the knowledge is based, and to enable this the protocols need to be completely specified.

modern laboratory science requires the use of sophisticated protocols  <cit> . however, these are still generally expressed using natural language, and unfortunately use of natural language inevitably introduces ambiguities about how to reproduce experiments. the result is the failure to reproduce results, with the subsequent loss of time and money. while working on this paper we noticed that yet another research paper has been retracted from nature because results could not be reproduced. obokata et al.  <cit>  in their paper titled 'stimulus-triggered fate conversion of somatic cells into pluripotency' reported on a cheap and quick method of producing stem cells. the reuters news agency reports prof. wakayama of the university of yamanashi told japanese tv: "when conducting the experiment, i believed it was absolutely right... but now that many mistakes have emerged, i think it is best to withdraw the research paper". we argue that if experimental procedures reported by  <cit>  were expressed with the use of exact <dig> then mistakes could be identified earlier and other groups could reproduce their results more easily.

CONCLUSIONS
in this paper we present a fundamentally new version of the ontology exact <dig> designed to support the accurate and computer friendly recording of information about biomedical procedures. exact <dig> follows best practice in ontology development, and the recommendations of the obo foundry. it can therefore be directly integrated with other bio-medical ontologies.

we present a framework for the translation of biomedical protocols from natural text to a machine amenable semantically-defined format. the proposed framework employes exact <dig> as a reference model to identify experimental actions and their descriptors in protocol texts, and assigns them unique ids.

we also demonstrate that the integration of exact <dig> with the formalism of petri nets will enable the capture of explicit semantics of experimental workflows, and validate the workflow through simulations of the experimental procedure. we suggest that biomedical protocols represented in a formal machine friendly way should be submitted to public repositories for future re-use.

list of abreviations used
exact - an ontology of experimental actions; glp - good laboratory practice; gmp - good manufacturing practice; obi - the ontology for biomedical investigations; bsa - bovine serum albumin; obof - open biomedical ontologies foundry; mireot - minimum information to reference external ontology terms; bfo - the basic formal ontology; iao - the information artifact ontology; pato - phenotype and trait ontology; chebi - chemical entities of biological interest; sumo - the suggested upper merged ontology; oed - oxford english dictionary; uri - unique resource identifier; id - identifier; on - overnight; rt - room temperature; dmso - dimethylsulfoxide; ne - named entities; pos - part of speech.

competing interests
the authors declare that they have no competing interests.

authors' contributions
lns is the leader of the exact <dig> project. she contributed to the ontology development and the use case. dn initiated the work on the translation of biomedical protocols from natural text to machine amenable form. he contributed to the analysis of procedures. rdk worked on the ontology development and manuscript. psb worked on textual definitions and descriptors of experimental actions defined in exact <dig>  eh analysed protocols and worked on the use case. vb and njs contributed to the analysis of protocols. wm contributed to the formal representation of experimental procedures and workflows. bbr contributed to the development of exact <dig> and the use case.

