BACKGROUND
in sexually reproducing organisms, haploid gametes are produced during meiosis. fertilization then restores the diploid number of chromosomes via the fusion of two gametes to form a zygote. a major consequence of meiosis is that the genetic material of the parents undergoes two levels of shuffling:  the chromosomes segregate independently, and  intra-chromosomal recombination occurs through reciprocal exchanges of chromosome segments due to crossing-over between homologs during prophase i of meiosis. crossovers  thus drive genetic diversity through recombination, and they are also essential for proper chromosome segregation because they hold homologous chromosomes together at metaphase i  <cit> . the genetic distance between two loci is defined as the average number of cos within this interval, per meiosis, when considering gametes. thus a  <dig> cm  segment has on average  <dig> co per gamete, and  <dig> cos per bivalent . in most organisms, co formation is highly regulated with respect to the number and the distribution of co events on the chromosomes. this distribution is clearly non-random; some regions of the physical chromosome are much more prone to co formation and recombination than others  <cit> .

furthermore, a phenomenon called co interference  <cit>  lowers the probability that two cos occur close to each other in the same meiosis. recent evidence highlights that cos form within two different pathways: the interfering  and the non-interfering  pathways. the proportion p of cos formed through p <dig> is quite variable. this proportion has been estimated in different species via biological  <cit>  or computational  <cit>  approaches, with typical values between  <dig> and 30%.

at present there is no efficient tool for targeting cos to desired chromosomal locations in higher plants. since breeding relies on selecting progenies where cos have assembled together favorable alleles that were separated in the parental genotypes, getting insights into the mechanisms of co formation and characterizing the number and localization of cos is of key importance. a first characterization of co distributions is achieved by extracting  the strength of interference at work in p <dig> and  the proportions of p <dig> and p <dig> cos.

to characterize interference strength, the most powerful approach is to fit mathematical models to experimental data sets. such models may be grouped into two classes: physically motivated models and statistically oriented models. the main physical model is the beam-film  model  <cit> . it considers the establishment and propagation of a mechanical stress using a mechanical analogy of a ceramic film on a metallic beam, with cos being seen as "cracks" which release the stress locally in the film and thus forbid nearby cos. the statistical models are mainly based on the statistics of genetic distances between successive cos, using stationary renewal processes , and no chromatid interference  <cit> . among srp-based models, one of the most studied is the gamma model, which generates inter-co distances using the gamma distribution  <cit> . to include a non-interfering pathway, non-interfering cos are simply added to those of the interfering pathway, leading to the gamma "sprinkling"   <cit>  and bf sprinkling   <cit>  models.

fitting these kinds of models to data requires rather complex mathematics and computer programming. it has thus long been difficult for data producers to analyze their co distributions without collaborating with specialized groups. to try to fill this gap, viswanath & housworth  <cit>  developed a java application based on two pathways modeling where p <dig> is described by the counting model . however this software tool is restricted to marker segregation data in tetrads, a data type that is available only for particular organisms like ascomycetes or for one particular arabidobsis mutant. it is thus not applicable to the vast majority of organisms, for which marker segregation data are obtained from individual gametes , rather than from tetrads or bivalents. more recently, housworth & stahl  <cit>  published a r script to estimate interference strength from co position data using the single pathway gamma model. unfortunately, the script does not allow two-pathways analyses: this compromises realistic descriptions of co distributions whenever two pathways are at work, which is the case in the vast majority of species studied so far. moreover, this r script was designed to analyze positions of protein foci immunolocalized on synaptonemal complexes, which is equivalent to positions of p <dig> cos on the bivalent. so here as well as with the previous software, it is not possible to analyze marker segregation data in gametes or genetic mapping populations; this is all the more a drawback that those are the most common data sets available from plants and animals.

to our knowledge, no tool has been available to perform two-pathways analyses of co distributions on segregation data obtained from individual gametes, for instance through linkage mapping experiments. moreover, we do not know of any software for using physically motivated models like the bf model to analyze co distributions. this last point is important because model-based inferences may often be considered suspiciously if their robustness to different model choices cannot be evaluated. so having predictions from two very different models gives further credence to these kinds of analyses and to their inferred parameters.

implementation
this software allows one to analyze co position data sets or genetic mapping data to quantitatively characterize co distributions along chromosomes. coda works with two different types of datasets:  marker segregation data at the gamete level, obtained for instance from backcross or double-haploid linkage mapping populations, or from sperm typing, or  continuous co positions such as obtained from immunolocalization of protein foci on synaptonemal complexes, corresponding to bivalents. these positions can be given in whatever units, including micrometers of synaptonemal complex or mb of dna sequence. coda converts all of these into genetic positions to perform the fits in this space.

two different interference models are implemented: the statistical gamma model and the physical bf model. when using the gamma model , the adjustment of parameters is done using maximum likelihood  <cit> . in the case of the bf model, no likelihood can be computed, so we have developed a score based on a projected likelihood to measure the goodness of fit  <cit> . this score quantifies the differences between histograms produced from the experimental data and predicted by the model with its parameters; these histograms are for both inter-co distances and numbers of cos per chromosome. the user can compare scores for different models to see which fits best. coda provides two methods for determining the optimum model parameters: either by scanning the parameter space via a grid, or by applying hill-climbing -- performing small steps in the two-dimensional parameter space towards better goodness-of-fits, until no local improvement is found. in terms of speed, both methods have comparable efficiencies for single-pathway models, but with two pathways, the hill-climbing is much more effective and is strongly recommended for reasonable computation times. in terms of reliability, the hill-climbing may be affected by local maxima, but in all of our tests with real co data, such a situation did not arise if the size of the population simulated was  <dig> or more. in case of doubt, users may prefer to use the scanning method, which is insensitive to local maxima.

using the scanning algorithm, the likelihood or score can be displayed as a  <dig> d surface plot, whereas using the hill-climbing algorithm, coda provides on the fly a graph of the trajectory in the space spanned by parameter  <dig> and parameter  <dig>  all these aspects will be illustrated with figures in the "results" section. coda may be used in command-line mode to compute confidence intervals based on re-simulations, as was done in  <cit> . however, since that approach requires substantial cpu resources, the coda gui provides confidence intervals for the gamma model based on fisher's information matrix.

software architecture
the core of coda  is written in standard c/c++, while the coda graphical user interface  uses cross-platform c++ qt libraries, and qt based qwt and qwtplot <dig> d libraries for specialized  <dig> d and  <dig> d  plotting widgets.

qt, qwt and qwtplot <dig> d are distributed under the terms of the gnu lesser general public license.

RESULTS
the result of running coda is an estimation of interference strength , and in the case of two-pathways models, an estimate of the proportion of cos coming from each pathway . in addition, the user interface provides three characteristic graphs displaying features of the experimental co patterns, as well as a visual comparison between models and experimental data during the adjustment process. upon completion of analysis, one may export graphs as bitmap or vector images.

the gui allows the user to choose the search method for determining the optimum model parameters: either by scanning the parameter space with a grid, or by performing hill-climbing in the goodness-of-fit.

we first present how to use the gui to analyze a specific dataset . then we compare the outcomes of analyses  when employing  the gamma-sprinkling vs the beam-film sprinkling model;  the single vs two-pathways gamma model. finally, we benchmark the speed of our software to that of existing tools on yet another data set .

graphical user interface
description of the "settings" tab
description of the "graphs" tab
the upper part of this tab provides three types of graphs, the lower part displays current and best parameters values, as well as the confidence intervals for each parameter . both parts are real-time updated throughout the duration of the fit. at any time, one can switch from one graph to another, keeping the parameters panel visible.

coda produces several graphs.  the hill-climbing trajectory graph  shows the trajectory  from the starting point  to the peak of the likelihood  function which corresponds to the best parameter values.  the likelihood  surface plot  is a  <dig> d visualization of the score/likelihood vs the parameters. the user can easily manipulate the  <dig> d view using the mouse and/or keyboard, to rotate, translate vertically or horizontally, zoom in/out, or stretch/compress the z axis .  histograms give the possibility to graphically visualize agreement between simulated data generated by the model  and experimental data  on the same plot. for the experimental data, the 95% confidence intervals are also displayed. the three categories of histograms available are:  the distribution of the number of cos per chromosome. figure  <dig> gives an example of such graphical output when using genetic segregation data of wheat chromosome iiib,  the distribution of the co positions along the chromosome, and  the distribution of distances between successive cos. figure  <dig> gives an example of such graphical output when using genetic segregation data of wheat chromosome iiib. in this example, the discrepancy in the second bin between experimental and simulated values suggests that there is still room for improvement in today's interference models.

bitmap  or vector  images of all graph can be generated.

comparing different models
gamma sprinkling vs beam-film sprinkling
although the gamma and beam-film models are very different in spirit, the incorporation of sprinkling  has exactly the same meaning in both. it is thus appropriate to compare each model's prediction for the fraction p of crossovers coming from the non-interfering pathway p <dig>  to do so, we analyzed mouse backcross data  <cit>  using coda. in figure  <dig> we display the values of p inferred within each model , for all  <dig> autosomal chromosomes. if the data sets were sufficiently large, one could expect the models to agree reasonably well, leading to a figure with clustering along the diagonal. in practice we see a bit of that but here the data set is not very large ; more convincing results were observed in a maize data set which had greater statistical power  <cit> . in general, if two rather different models lead to similar estimates for p, one can argue that systematic biases due to the modeling are modest; such a check for robustness of predictions gives added weight to the analysis. in the present example, in spite of the low statistics, we also see that the beam-film model tends to predict larger values of p than the gamma model; a similar effect was seen in an analysis of the two pathways in maize  <cit> .

one vs two pathways modeling
only in the last few years has it been realized that crossovers form via at least two pathways. given the further complexity this adds to modeling, many groups analyzing crossover data tend to stay within the single pathway framework. such a choice certainly affects the estimates of the interference strength. to examine this issue, we analyze here the mouse data of  <cit>  using the gamma model of interference, allowing or not sprinkling, i.e., a second pathway. presumably, forcing the presence of just one pathway systematically underestimates the values of the parameter nu. our analyses of the  <dig> autosomes in mouse are displayed in figure  <dig>  for those chromosomes where gs estimates p to be zero, the predicted value of nu is of course the same in the two analyses. for the other chromosomes, we see as expected that the single pathway modeling systematically underestimates the value of nu.

performance benchmarks 
to quantify computational performances, we have used the platform gnu/linux ubuntu  <dig>   <dig> bit, ram  <dig> go,  <dig> × intel xeon cpu e <dig>  <dig>  ghz.

comparison of fitting algorithms in coda
in our first benchmark, we compare the computing times when using the hill-climbing vs the complete scan method for fitting the model's parameters. the analysis presented here is for maize late nodule data  <cit> , chromosome  <dig>  using the gamma sprinkling model, for which we have crossover positions on bivalents, a situation relevant for the upcoming benchmark.

complete scan results obtained with the gs model using the likelihood, for  <dig> ≤ nu ≤  <dig> and a step of  <dig> ;  <dig> ≤ p ≤  <dig>  and a step of  <dig> . hill-climbing results were obtained with a precision of  <dig>  and  <dig>  for nu and p respectively. data is maize late nodule positions on chromosome  <dig>  <cit> .

existing tools comparison: coda vs interference analyzer
in our second benchmark, we compare coda to the software « interference analyzer »   <cit> . ia is the only other software we are aware of which allows the user to perform two pathway analyses, but it is restricted to bivalent or tetrad data . shown in table  <dig> are the computing times required by ia and coda. the data is the same as for the previous benchmark, coming from maize late nodules . the ia software works with the counting model  <cit>  which restricts the parameter nu to integer values; this explains the slightly different fitted values for the two softwares. we see from this benchmarking that coda is faster. furthermore, coda is able to treat additional data types such as generated by genetic mapping experiments on gametes; unfortunately, ia cannot handle such data types.

comparison of cpu times required by ia and coda. data is maize late nodule positions on chromosome  <dig>  <cit> .

discussion
coda provides both a quantitative and qualitative advance for the analysis of crossover data. with its ability to treat two pathway models and data coming from gametes, along with its easy use thanks to a gui, coda will allow researchers to perform their own analysis quite straightforwardly. it also allows users to compare the relative merits of the gamma model and the bf model.

furthermore, the software package is evolvable: because it is open source, the users can modify the details of the models implemented, or even substitute their own choice of models. with data sets of crossover patterns growing in size and number, the number of potential users will increase. one can also expect that researchers will request more sophisticated models; we thus anticipate that we will be upgrading coda to include these new models from which their added value can be tested.

given these different uses of coda, it is appropriate to bring up the following technical point. we showed in the previous section that searching for the optimum parameters via scans is computationally slow. nevertheless, for the hill climbing to work properly, it is important that there be a single peak  in the hill to be climbed; verifying that this is the case typically requires a scan, albeit a crude one. in all the cases we have investigated, the hill landscape has been smooth with a single peak. figure  <dig> shows an example in maize which illustrates the associated efficiency of hill climbing in such a situation. if possible, the user should check this property on his particular data set, and an in depth study will be required if the user implements other models of his making.

CONCLUSIONS
the open-access utility coda provides the user with an easy interface for model-based characterizations of crossover patterns along chromosomes. it allows one to estimate the strength of crossover interference, using either the statistically motivated gamma model, or the mechanically formulated beam-film model. it can also be used for two-pathways modeling, where a second  pathway is superposed on the first, and generates multiple histograms that summarize the features of crossover patterns. the experimental input files can contain marker segregation data coming from genetic linkage mapping experiments, or crossover positions on chromosomes coming for instance from cytological imaging, significantly extending the possibilities of previous software packages. the use of this kind of modeling can give support to the presence of putative pathways as was done in  <cit> . also, as the mechanisms of crossover formation become better known, more sophisticated models can be added to coda to exhibit their characteristics and to quantify their level of agreement with experiments, thereby advancing the detailed understanding of meiotic processes.

availability and requirements
• project name: crossover distribution analyzer.

• project home page: http://cms.moulon.inra.fr/content/view/25/56/lang,en/

• operating system: gnu/linux, macos x , windows 

• programming language: c++

• other requirements: ready-to-use executables are provided for macos or windows, but installing from the sources  needs to have qt <dig>  qwt and qwtplot <dig> d development packages installed on the system. compiler versions: g++ v <dig> . <dig> under macosx and g++ v <dig>  under windows and linux platforms. recommanded hardware: at least pentium <dig> or equivalent, and  <dig> mo ram.

• license: gnu gpl

• any restrictions to use by non-academics: none

binary files for windows and macos can be downloaded freely on the project home page. all sources are available under the gpl license from the same url. the software can also be used through command lines, making it easy to perform calculations on a remote server and/or to launch analyses automatically using scripts. a detailed documentation is included in the distribution, as well as a sample data file. we request that publications using coda refer to the present article.

abbreviations
co: crossover; gui: graphical user interface; srp: stationary renewal process; bf: beam-film; bfs: beam-film sprinkling; gs: gamma sprinkling; ia: interference analyzer;

authors' contributions
all authors designed the package; om and mf wrote the gs, bfs and statistical parts of software;

fg produced the gui and integrated all the parts into its c++ structure. all authors wrote and approved the manuscript.

authors' information
the training of the authors fg, om, and mf is respectively in computer science, physics, and genetics.

