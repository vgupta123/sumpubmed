BACKGROUND
in many biological laboratories, sample tracking is an outstanding issue and often represents a bottleneck for the correct handling and interpretation of experimental data. this issue is becoming particularly critical when automation and high-throughput technologies are introduced in the laboratory practice. our laboratory performs high-throughput characterization of vector-genomic integration sites in the context of gene therapy applications based on the delivery of therapeutic genes by viral vectors that stably integrate into the genome of targeted cells, as well as gene therapy preclinical models and insertional mutagenesis research projects  <cit> . vector integration sites are retrieved and mapped in the genome through a combination of polymerase chain reaction -based techniques  <cit> , next generation sequencing  and bioinformatics analyses  <cit> . we process and analyze around  <dig> samples/year resulting in hundreds of millions of sequencing reads. despite the fact that adopting robotic automation for sample manipulation in our laboratory has provided many advantages in terms of manual error-reduction and data production scalability, drawbacks related to sample information volume and tracking are still present. these reasons prompted us to develop a laboratory information management system   <cit>  for sample tracking on a scalable and flexible infrastructure with an easily accessible and web-based interface. lims is a type of information system implemented as a software utility specifically designed to improve the data acquisition and sample monitoring along laboratory workflows, and supporting sample reporting. an information system is a combination of information technologies developed to grant business processes efficiency and monitoring. extended is are the enterprise resource planning  solutions  <cit>  that integrate the standard information system features with accounting and administrative operations for performance monitoring through dashboards and data mining tools.

in this work we describe our lims, developed on an existing open source erp framework that natively implements all technological functionalities, as software customization and parameterization. after a brief introduction of the erp framework with the motivation of the specific choice, we will describe in details our implementation with custom use cases and scenarios derived from our laboratory requirements and experience.

methods
we followed a typical software engineering approach, "waterfall"  <cit> , to design our solution. we first collected end-users' requirements, composed of desired functionalities of the systems and graphical user interfaces . then we evaluated available tools that could address our requirements, spanning from pure lims to content management systems  up to enterprise information systems. in the next step we selected our candidate solution and we designed its configuration to best fulfil our requirements.

requirements analysis
the analysis of requirements, also called requirements engineering, is the process of acquiring software expectations from users/clients in terms of functionalities and interaction that are translated in software requirements  <cit> .

the first step is to define which types of users will access the lims  and which authorization policies we have to apply to specific users . using a unified modeling language   <cit>  use case diagram , we collected desired roles  and operations . the two principal roles of the system are distinguished for the area in which they operate. in this instance we identified two main areas: a sample management area where samples are collected from patients or subjects and a wet experimental area in which collected samples are processed to retrieve vector-cellular genomic junctions. for this reason we identified two corresponding roles, a samplemanager and a wetmanager, and their permissions and operations scope correspond to the data that they can access: the samplemanager role is related to users that input and manage sample metadata , while the wetmanager role is related to users that input and manage experimental procedures and workflows on the dna samples . then we collected the desired authorizations associated to each role as reported in the crud  policies .

the samplemanager role can access and edit metadata related to all clinical and preclinical aspects such as anonymized patients' ids, dna  and cell types . the visibility spectrum of a user with the samplemanager role is restricted to sample metadata only and will not be able to read other information of post sample processing.

the wetmanager role is able to control all aspects related to experimental procedures and workflows on the samples. a user assigned to the wetmanager role will not be able to modify input metadata from the samplemanager role.

we added an administrator role  that is able to control and edit every component of the system, customizing all the functional and graphical levels related to the model-view-controller paradigm  <cit> . however this role is not authorized to modify input data. at the functional level, the administrator has the privileges to:  create, delete, and suspend accounts and  define rules to access to the database . at the graphical level, the administrator can create and edit windows and layouts, control how to graphically visualize and access data and define how to export and import data in the information system.

from this analysis of requirements we derived the interaction workflow . in the first step of our workflow, a user with a samplemanager role inputs data related to the specific project and the samples that need to be processed for integration site analysis, in particular information relative to dna. these samples will be then processed  in the custom workflow by a user with a wetmanager role for linear amplification mediated -pcr  <cit> . the procedure of the lam-pcr protocol has to be implemented in a lims process that allows tracking each sample manipulation. lam-pcr products are then selected and pooled for deep sequencing. all the information of the pooled products are exported and formatted as required by illumina miseq sample sheet. therefore the information system allows monitoring and tracking sample metadata, lam-pcr processing and the pool preparation for ngs supporting dna barcodes association without directly handling ngs files. additional file  <dig> summarizes the laboratory workflow and system interaction based on the above-mentioned requirements.

as additional requirements, the system has to be web-based and supported by reliable technologies with a backup system thus enabling data maintenance and recovery in case of failures . the centralized nature of the system requires standard hardware performances such as the simultaneous interaction with dozens of users keeping response times faster than  <dig> seconds.

evaluation of available lims and alternative solutions
we evaluated available lims solutions, from commercial to open source ones. commercial or stand-alone limss  <cit>  are often very expensive and/or lack the flexibility and scalability needed to manage different types of sample data, procedures and analyses specifically designed for each research project. we also explored open source software designed for biological laboratories, such as bika lims  <cit> , labkey  <cit>  or galaxy  <cit> , and content management systems  like plone  <cit>  and drupal  <cit>  under the perspective of customizing them and exploiting built-in functionalities such as user management, workflow management and configuration. unfortunately, none of them fully satisfied our requirements because most of the features, that are the peculiarity of a lims , have not been implemented. in this context, we analyzed enterprise resource planning  solutions and adempiere erp  <cit>  was the best available software. adempiere erp has been developed under gpl license in java j2ee with model-view-controller design pattern  <cit>  and database-driven logic  <cit> . adempiere erp implements all required features and presents some highly desirable technological advances , such as high usability  and modularity that grants high use-case flexibility  and software scalability for custom solutions . the application server is jboss and supported databases are oracle and postgresql. web interfaces exploit the latest technologies with zk  <cit> . moreover, it natively supports multiple languages, accounting procedures and dashboards for process monitoring thanks to the erp functionalities that can be easily adapted to high-standard industrial and commercial contexts.

design
the last process in the "waterfall" approach is the system design. in order to translate the requirements into both functionalities and gui within adempiere erp, we developed an extension of the core database by applying the required operations and user's policies resulting in a scalable system that natively supports java fat client and web interfaces. for each end-user interaction and functionality, we designed a custom view of the workflow  with dedicated guis based on use cases . since adempiere erp is database-driven, the design of the database related to the lims extension is a key aspect that drives and manages both the workflow instance and the guis. our database extension is compliant with the core-system table design that required the addition of ten pre-defined fields . this operation is required because adempiere erp leverages on inner tables to directly create forms  and guis. the "application dictionary" is one of the most powerful aspects of adempiere erp that acts as the engine of the database-driven model. all metadata needed to build data forms, windows and gui are contained in the application dictionary that operates at the application layer and generates windows, tabs, menu, forms, nested elements connection, and so on. the application dictionary allows dynamic and flexible changes in gui and data forms by changing its table content without requiring programming development that is thus drastically reduced. as a direct consequence, gui changes or customizations can be configured directly in the application dictionary without requiring software compiling or re-building. for example, to create a new window with proper title, menu bar, tool bar, and status bar, adempiere erp automatically adds elements in the application dictionary and generates all required fields starting from the database table.

based on the general workflow modeled in the analysis of requirements , we designed and implemented the lims database as an extension of the core adempiere erp database , here reported as entity-relationship model in which each basic entity is associated to a custom table . we implemented the model in postgresql and we used blob  to manage external files as attachments  that users can upload into any entry. we then created custom guis related to the previously described workflow for the management of all data tables . each window and the relative data are accessed by users according to their role  and authorization policies. is always possible to modify existing roles and names and to add new roles according to new requirements or specifications. in our laboratory practice we routinely collect lam-pcr data, gel images and sequencing quality reports and we store these data in adlims. the lam-pcr workflow has been automated by implementing dedicated tables in the system  with corresponding gui input forms. custom database triggers support the multiplexing of samples during the experimental operations required in different steps of the process . similar automated procedures have been developed to support the generation of sequencing pools for high-throughput ngs platforms by defining custom tables  and associated gui. to avoid hard drive bottlenecks, raw ngs files are included in the system as links  and not as attachments.

RESULTS
we developed adlims as an open source customization of adempiere erp, which implements the general workflow and requirements previously described . adlims exploits all the core functionalities of adempiere resulting in a completely database-driven solution that, from the extended database, is able to build forms and guis. we maximized the use of itemized form elements  as gui's design principle to reduce users' errors or typos and we limited the free text boxes as much as possible applying some basic form validators . as a direct consequence of the authorization policies, we restricted the user interaction and scope to the specific sections they are supposed to use with dedicated privileges. each user can access adlims both using web gui and the java fat client. the web client is the most used interface that does not require any installation on the target user machine nor requires any configuration and all computational requests are processed server-side lightening client-side workload. moreover adlims allows mobile interfaces for smartphones and tablets, features inherited from adempiere erp. we implemented data backup by creating custom server side jobs, scheduled as incremental backup with daily dump of the whole database.

the lam-pcr and pre-sequencing activities are directly supported by the adlims automated procedures that allow the creation of parallel processes by database triggers, required in case of laboratories with high multiplexing needs . for the lam-pcr workflow , adlims supports the user with dedicated gui .

our end-users validated adlims by verifying functionalities and guis through test cases for pcrs samples and pre-sequencing data. here we reported two settings related to two distinct sections of the general workflow  with different scopes and actors, thus requiring different user policies and sample activities. the first workflow concerns the interaction of a user with samplemanager role that insert patient sample metadata into adlims . the system supports and guides the user to select and input the data with ad hoc forms, for example cell types , tissues , dna purity and concentration, project, sample id and so on . the samplemanager user profile is authorized to modify only the data relative to a specific project and subject from the menu list through two accessible windows . in the second scenario, a user with the wetmanager role is required to process dna samples from specific cell populations , performing  lam-pcr amplification ,  storing the images of the gel-electrophoresis pcr products,  preparing a sequencing pool  and  exporting a report in pdf file format . in all the steps of the process, adlims supports the user and enables the parallel sample processing and multiplexing.

moreover adlims allows report generation from all input data, both using all data and a selection of filtered data with user defined criteria . adlims exploits the data-driven logic to export data reports from tables to a wide range of file formats  through the jasperreports library  <cit> . jasperreports is a flexible report library that can be customized for each instance of the system. the default visualization allows reporting data in the same table view. in our daily practice, we use data reports to create sample-sheets of illumina sequencing pools.

adlims in our laboratory practice has brought an improvement through simplification and traceability of the data entry in sample workflows and sample reporting with respect to traditional data storage methods. as an example, adlims allows to create a sample sheets by selecting samples information in a few clicks whereas without adlims this activity may require hours, potentially introducing typing errors.

adlims can be adapted and extended to any laboratory working with biological samples with limited efforts, which are mainly related to the database design and customization, thus defining the business and view logics  and creating the data structures  that are automatically converted into interfaces and data views by the adempiere erp engine.

adlims currently does not provide direct interfaces with laboratory instruments but integrates local server connections . future extensions of the system will include api integration of laboratory platforms for sequencing, pcr product quantification and liquid handlers. on the other hand, client side interfaces  can be directly integrated into adlims, enhancing sample tracking and data acquisition.

the potentialities of adlims in the context of genomic companies and facilities are conveyed in the ready-to-use availability of the erp features that would only require customization.

CONCLUSIONS
currently, in many laboratories the procedures for data tracking and storage of sample information are based on spreadsheets without a real information management or standardization. this data management resulted in inefficiencies and redundancies, potentially generating many errors  hard to backtrack or resolve. the use of a lims allows bypassing spreadsheets or local file management, supporting automation of all standard procedures for sample tracking. exploiting adlims, our laboratory sustained the critical issues of sample tracking, data standardization and automation derived by the ngs and robotics revolution. this successful application of process engineering and monitoring allowed our laboratory to increase efficiency and reduce manual errors, thus posing concrete bases to sustain business scalability and potentially to approach pharmaco-vigilance monitoring of gene therapy patients in a highly standardized fashion compliant to regulatory requirements. moreover adlims can natively be extended to incorporate erp solutions, such as crm, supply chain management, billing and accounting, integrated features that are critical for many genomics facilities.

competing interests
the authors declare that they have no competing interests.

authors' contributions
a.c. conceived of the study, participated in its design and coordination and drafted the manuscript. g.s. created the application  and drafted the manuscript. f.b., et participated in the requirements analysis. e.t. tested the system. e.m. revised the manuscript and supervised the project. all authors read and approved the final manuscript.

availability and requirements
the source code, user guide and appliance of adlims are freely available at the project homepage http://sourceforge.net/projects/adlims. we also provide a live demo for users who want to evaluate adlims without installation. release notes and other information will be also updated on the project homepage.

• project name: adlims

• project homepage: http://sourceforge.net/projects/adlims

• author: giulio spinozzi

• operating system: platform independent

• supported web browsers: chrome, firefox  <dig>  +, safari 4+

• programming language: java ee

• database: postgresql/oracle

• license: gnu gplv2

• any restrictions to use by non-academics: none

supplementary material
additional file 1
general data workflow of vector integration sites identification at tiget vector integration core the standard flow of a vector integration site project in the vector integration core at the telethon institute for gene therapy in milan

click here for file

 additional file 2
features' comparison between bika, labkey and adempiere comparison among the features available in bika, labkey and adempiere.

click here for file

 additional file 3
customization set-up the report file of all the customization steps required for creating an instance of adlims, with an example of table creation and trigger definition.

click here for file

 additional file 4
adlims entity-relationship database model adlims database schema represented as entity-relationship model.

click here for file

 additional file 5
data elements managed by adlims in this file we reported all data types inserted in adlims, following the workflow in figure  <dig> 

click here for file

 acknowledgements
this work was supported by telethon grant d <dig> to em. we would like to thank giorgio cafasso for his support with adempiere erp and for his gentle availability. we thank luca biasco for suggestions in lam-pcr workflow set-up.

declarations
publication of this article has been funded by telethon.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2015: proceedings of the italian society of bioinformatics : annual meeting 2014: bioinformatics. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/16/s <dig> 
