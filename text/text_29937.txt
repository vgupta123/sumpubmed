BACKGROUND
drug–drug interaction  is a condition where one drug alters the effect of another drug in a clinically meaningful way  <cit> . it is well documented to be one of the major causes of adverse drug reaction  and is thus, a demonstrated threat to public health . with increasing rates of polypharmacy  <cit> , the incidence of ddis is likely to increase as well. hence, collecting information about ddis in a timely manner is critical for reducing adr and the costs associated with therapy  <cit> . although significant efforts have been invested to incorporate ddis into various data sources, such as didb  <cit> , drugbank  <cit> , and pharmacy clinical decision support systems  <cit> , existing sources suffer from the problems of low coverage  <cit> , low accuracy  <cit>  and low agreement  <cit> .

under such circumstances, scientific evidence detailing the mechanism/s behind the drug interactions are necessary to provide support for reliable ddi information  <cit> . to this end, fda requires in vivo and in vitro ddi studies during new drug development  <cit> . since new reports of ddis are rapidly accumulating in the huge archive of scientific literature  <cit> , text mining techniques are needed to automatically extract ddis with support from literature-derived scientific evidence  <cit> .

a major type of ddi, pk ddi, is a situation wherein one drug affects  the absorption, distribution, metabolism, and/or excretion of another drug. although mechanistic information regarding pk ddi provides important evidence by describing how the interaction between drugs occurs, very few studies have been conducted so far to extract pk ddis from scientific literature. currently, most ddi systems are built on the corpus that was used in the two ddi extraction challenges in  <dig> and  <dig>  <cit> . however, a large part of this corpus is based on drugbank. only  <dig> ddi relations of pk mechanisms were annotated from medline. in addition,  <cit>  attempted to identify pk ddis from drug package inserts. the texts taken from drugbank and drug package inserts were manually curated with short and concise sentences, thus providing a brief description of ddis  <cit> . in contrast, the scientific language used in literature typically contains long and complex sentences, expressing detailed pk information. moreover, the content of scientific literature does not necessarily talk about ddis, making ddi extraction from scientific literature significantly more difficult  <cit> . other groups extracted the relation between drugs and enzymes based on properties of drug metabolism; here, potential ddis were detected by inference and reasoning  <cit> . the only ddi corpus dedicated to pk evidence derived from literature was built by wu, karnik et al.  <cit> , covering both in vivo and in vitri pk ddi studies.

promoted by the two ddi extraction challenges in  <dig> and  <dig>  <cit> , many approaches have been proposed to extract ddis from biomedical text. the ddi extraction tasks are usually modeled as a classification problem. machine learning  methods were employed to classify whether the relation between each candidate ddi pair was a true interaction or not. in the existing ml-based systems, two types of methods have been mainly used: feature-based methods and kernel-based methods  <cit> .

in feature-based methods, each data instance is represented as a feature vector in n-dimensional space. features are defined to informatively represent the data characteristics of different relation types. heterogeneous features of different linguistic levels have been employed in ddi extraction systems, including lexical features like negative words, syntactic patterns, semantic types of two drugs and ontology-based concepts . in kernel-based methods, data instances are first represented by syntactic structures, using either the syntactic parse tree  <cit>  or the dependency graph  <cit> . the similarity between the syntactic structural representations is then computed, as a representative of the similarity between the two instances. various syntactic representations, similarity functions, and combinations are exploited in existing kernel-based ddi extraction systems  <cit> . bui q-c et al.  <cit>  leveraged both the syntactic structures and features of sentences, by using different feature lists according to different syntactic structures and achieved the best results on the challenge datasets. currently, kernel-based methods are dominant and achieved state-of-the-art results for ddi  <cit> . however, since scientific literature has many long and complex sentences, such approaches are likely to suffer from the sparseness problem of deep syntactic structures  <cit> .

also, sophisticated semantic information is rarely explored and employed for ddi. semantic representations bearing more “compact” and generalized information could potentially normalize the surface form variations of syntactic structures. one important type of semantic information is predicate-argument-structures   <cit> . pas is a unified form of shallow semantic representation of the sentence, which is generated on the basis of variant syntactic structures  <cit> . pass have already been used in various information extraction tasks and have shown promising results . another important type of semantic information is semantic class  <cit> . based on the sublanguage theory  <cit> , semantic class is defined as the generic class of essential semantic information in the language of closed domains such as pk ddi, which is independent of the surface syntactic structures  <cit> . sematic classes are different from the relatively high level semantic types defined in umls  <cit> , which are currently used for ddi extraction. they are more granular, describing semantic information specific to a closed domain. for example, the word “strongly” in the sentence “drug <dig> strongly increases plasma concentrations of oral drug <dig> ” is an instance of the “degree” semantic class and serves as a potential indication of the degree of pk ddi. however, it is not covered by umls as a concept. many existing systems in different biomedical sub-domains used semantic class for relation extraction via rule-based semantic patterns  <cit> . nevertheless, semantic class hasn’t yet been examined for pk ddi extraction using statistical methods.

in this article, we examined the following two types of semantic information for pk ddi extraction from the biomedical text: shallow semantic representation and fine-granular semantic classes based on the sublanguage of pk ddi. all-path graph kernel was employed to statistically integrate different linguistic levels of information, syntactic, shallow semantic and fine-granular semantic class. our approach differs from existing approaches in two ways. first, we propose a novel all-path graph kernel algorithm using shallow semantic graph, i.e. pas graph kernel. second, we statistically incorporate fine-grained semantic classes into dependency graph kernel and pas graph kernel. our evaluation results using the pk ddi corpus  <cit>  demonstrates that our proposed approach significantly improves the performance of the original all-path graph kernel based on dependency structure.

RESULTS
performance of in vivo pk ddi extraction
experimental results of pk ddi extraction for the in vivo dataset are displayed in table  <dig>  the pas graph kernel outperformed the baseline dependency graph kernel with both higher precision  and recall . further, when combined with semantic classes, the performance of dependency graph kernel increased significantly. the optimal f <dig> of  <dig>  % was achieved by the dependency graph kernel with refined “mechanism” semantic classes. semantic classes also enhanced the performance of pas graph kernel . the refined semantic classes increased the precision of pas graph kernel to  <dig>  %. however, the recall dropped sharply to  <dig>  %. overall, the pas graph kernel with refined semantic classes yielded the lowest f <dig> of  <dig>  %.table  <dig> performance for pk ddi extraction on the in vivo dataset

p
r
f
1
pasa
dep_sca
pas_sca,b
dep_resca
 <dig> %
 <dig>  %
pas_rescb
 <dig>  %
totally, six different methods were implemented. the abbreviation dep stands for the dependency-based graph kernel, pas stands for the graph kernel based on predicate-argument-structure, sc stands for semantic class information, and resc stands for refined semantic class information. dep_sc means that semantic class information is incorporated into the dependency-based graph kernel. precision , recall  and f-measure  were reported for each method. the highest performance under each evaluation criterion is bolded.


a means the performance difference between the underlying method and dep is statistically significant


b means the performance difference between the underlying method and pas is statistically significant. 



performance of in vitro pk ddi extraction
table  <dig> illustrates the experimental results of pk ddi extraction of the in vitro dataset. the baseline performance of dependency graph kernel was poor; the f <dig> was only  <dig>  %. in contrast, pas graph kernel got a  <dig>  % f <dig>  as observed for the in vivo dataset, the performance of the dependency graph kernel increased significantly with the incorporation of semantic classes. with refined semantic classes, the dependency graph kernel achieved the optimal f <dig> of  <dig>  %. semantic classes also consistently increased the performance of pas graph kernel. specifically, with refined semantic classes, pas graph kernel obtained the highest precision of  <dig>  %.table  <dig> performance for pk ddi extraction on the in vitro dataset

p
r
f
1
pasa
dep_sca
pas_sca,b
dep_resca
 <dig> %
 <dig>  %
pas_resca,b
 <dig>  %
totally, six different methods were implemented. the abbreviation dep stands for the dependency-based graph kernel, pas stands for the graph kernel based on predicate-argument-structure, sc stands for semantic class information, and resc stands for refined semantic class information. dep_sc means that semantic class information is incorporated into the dependency-based graph kernel. precision , recall  and f-measure  were reported for each method. the highest performance under each evaluation criterion is bolded.


a means the performance difference between the underlying method and dep is statistically significant


b means the performance difference between the underlying method and pas is statistically significant. 



given that in real-world case the portion of negative ddi pairs is far higher than that of the positive ones, the roc curves of implemented methods were also examined to check their sensitivity and specificity. figures  <dig> and  <dig> illustrate the roc curves on the in vivo and in vitro datasets, respectively. as can be seen from these figures, dep_resc outperformed the other methods in terms of both sensitivity and specificity. especially, a sharp enhancement over dep by the other methods was observed from fig.  <dig> fig.  <dig> roc curves of implemented methods on the in vivo dataset. the abbreviation dep stands for the dependency-based graph kernel, pas stands for the graph kernel based on predicate-argument-structure, sc stands for semantic class information, and resc stands for refined semantic class information. dep_sc means that semantic class information is incorporated into the dependency-based graph kernel

fig.  <dig> roc curves of implemented methods on the in vitro dataset. the abbreviation dep stands for the dependency-based graph kernel, pas stands for the graph kernel based on predicate-argument-structure, sc stands for semantic class information, and resc stands for refined semantic class information. dep_sc means that semantic class information is incorporated into the dependency-based graph kernel



discussion
in this study, we examined the contribution of two types of semantic information for pk ddi extraction from literature. the shallow semantic representation, i.e., pas of one sentence was employed as a novel alternative to dependency based syntactic structural representation in all-path graph kernel. moreover, fine-granular semantic classes specifically designed as the sub-language for the closed domain of pk ddi were incorporated into dependency graph kernel and pas graph kernel. our results showed that both the types of semantic information improved the pk ddi extraction performance. pas graph kernel outperformed the baseline of dependency graph kernel . furthermore, integrating semantic classes into graph kernels achieved the optimal performance: dependency graph kernel got the optimal f <dig> , and pas graph kernel yielded the highest precision . to the best of our knowledge, this is the first study that combines syntactic, shallow semantic and semantic class information into the graph kernel for pk ddi relation extraction.

performance variations between in vivo and in vitro datasets
as illustrated in tables  <dig> and  <dig>  the pk ddi performance on the in vivo and in vitro datasets have a significant difference. one of the major reasons is that literature about in vitro pk ddi contains more complex sentences with multiple clauses and conjunctive structures of drugs, making it more difficult to recognize ddi relations on the in vitro dataset. nevertheless, as illustrated in fig.  <dig>  pas captured more representative syntactic structural information of ddis than dep by considering the shallow semantic relations between syntactic constituents, especially when such syntactic constituents has a long-distance with the pair of drugs. thus, it increased the precision on the in vitro dataset from  <dig>  % to  <dig>  %, in comparison to a precision enhancement from  <dig>  % to  <dig>  % on the in vivo dataset.fig.  <dig> illustration of multi linguistic level graph representation. the candidate interaction pair is marked as “drug1” and “drug2”. the shortest path between the drugs is shown in bold. in the dependency , predicate-argument structure , and an integration of semantic class with dependency  based subgraphs all nodes in the shortest path are specialized using a post-tag . in the linear order subgraph  possible tags are efore, iddle, and fter



another possible reason is the essential difference in literature description of the ddi evidence between in vivo pk ddi and in vitro pk ddi. in vivo pk ddi usually occurs when the exposure and efficacy of a probe drug is changed by another drug with the comparison of its pharmacokinetic parameters, while in vitro pk ddi occurs with the involvement of enzymes in the drug metabolism mechanism. for example, a ddi may occur when the metabolism of a probe drug is influenced by another drug, which is the inhibitor or inducer of the metabolizing enzyme. the distribution of the two types of evidence is different in these two corpora. this could explain an interesting observation that the precision of the in vivo dataset increased consistently by incorporating semantic classes from coarse to refined granularity with pas . in contrast, for the in vitro dataset, pas_sc dropped the precision from pas, while pas_resc further increased the precision from pas. . the interaction mechanisms between drugs and enzymes present in the in vitro dataset are more diverse than in the in vivo dataset . with only one single semantic class for mechanism, pas_sc increased the recall while introducing more false positive predictions. on the contrary, pas_resc enhanced the precision by differentiating among those mechanisms. that also explains why refining the semantic classes of mechanism yielded a relatively larger performance enhancement on the in vitro dataset  than on the in vivo dataset .table  <dig> description of refined mechanism semantic classes for literature on pk ddi



performance variations of different methods
as illustrated in table  <dig> and  <dig>  the pas graph kernel achieved higher performance than the dependency graph kernel. specifically in the in vitro dataset, the precision increased from  <dig>  % to  <dig>  % and f <dig> increased from  <dig>  % to  <dig>  %. this validated our assumption that more information to distinguish “ddi” from “nddi” is covered by the paths of pas graph kernel. with semantic class integration, the performance of both graph kernels increased. nevertheless, the performance of dependency graph kernel was increased more sharply than pas . on one hand, semantic information demonstrated its generalization ability to resolve the sparcity problem in syntactic paths. on the other hand, it also indicated that there was a relatively small gap between shallow semantic and semantic class representations of sentences.

as illustrated in table  <dig>  for the in vivo dataset, the improvement of dep_resc was statistically significant over dep. the performance of pas_resc was comparable with dep without statistically significant difference; whereas it dropped significantly from pas. moreover, as illustrated in table  <dig>  for the in vitro dataset, the improvement of dep_resc was statistically significant over dep; the improvement of pas_resc was also statistically significant over dep and pas, respectively. thus, refining semantic classes of “mechanism” further enhanced the performance of dependency graph kernel. in contrast, the precision of pas graph kernel was enhanced significantly by the refined semantic classes , with a severe drop in recall . one possible reason is that pas graph kernel with refined semantic classes imposed strict constraints to patterns of positive ddis, resulting in significantly increased precision at the cost of decreased recall.

error analysis
table  <dig> lists the major reasons for false positive pk ddi recognition and the corresponding examples. although negation expressions were already collected into the “negation” semantic class and used to label the sentences, it still caused false positive errors, especially in sentences with complex structures . another major reason observed in the in vitro pk ddi was that the relation between drug and its metabolites was misclassified as a ddi, because some trigger words of its metabolism mechanism are not covered in the training dataset . some sentences described ddis between drug pairs with cues of uncertainty, such as the word “whether” in the example sentence . another reason for false positives was uncaught signs of comparison, such as the word “than” in the example . besides, for long sentences with multiple clauses, the relations between irrelevant drug pairs across multiple clauses are prone to be misclassified .table  <dig> false positive error analysis of pk ddi extraction

the drug names and important cue words in each example are bolded



table  <dig> displays major reasons for false negative ddi recognition and the corresponding examples. as mentioned before, one crucial deficiency of dependency graph was that it failed to include critical ddi information into the shortest path, when two drugs were connected by prepositional structures. some false negatives are caused by this deficiency . another type of error was caused by conjunctive structures: usually only the relation between the first drug in the conjunctive structure and another drug was recognized, ddis for the rest of the drugs were missed . co-reference resolution was another cause of false negatives . in some cases, a numerical value change of pk parameters needed to be calculated first to determine the relation . besides, literature may contain very rare relation patterns of ddis, which were not covered in our current statistical model .table  <dig> false negative error analysis of pk ddi extraction

the drug names and important cue words in each example are bolded



limitations and future work
a limitation of this work is that currently the employed semantic classes are designed for pk ddis, which may not be fully generalizable to other types of ddis. another limitation is that the current work focuses on recognizing interaction between two drugs. ddi may also be related to other important factors. for example, the existence of the protein nadph is related to the interaction between dihydralazine and phenacetin in the sentence “preincubation of human liver microsomes with dihydralazine in the presence of nadph resulted in decreases in phenacetin o-deethylase activity”. another important factor is the interaction between the drug and the enzyme, from which ddi relations not expressed explicitly in literature could be inferred. moreover, drug targets interactions is also an important factor to consider for ddi extraction. if both of two drugs have interactions with the same target, they may have potential synergistic, additive or antagonistic interactions. such factors would be considered for ddi relation extraction in our next step.

to further improve the performance of ddi relation extraction, a more accurate recognition of the negation expressions needs to be conducted. whether those negations are modifying the ddi relations also need to be determined. to collect more trigger words for drug enzyme interaction and uncertainty, comprehensive semantic lexicons need to be built by leveraging existing knowledge resources such as umls and wordnet. besides, specific strategy to handle different types of syntactic structures such as cross clauses relations, prepositional/conjunctive structures, and co-reference should be designed. one possible solution may be a hybrid way to combine statistical graph-kernel based methods with heuristic rules-based features, so that to consider simultaneouly the generalizability and specificity of the method.

what’s more, in the original annotation of the pk ddi corpus, ddis can be further split into two types: certain ddis with strong evidence and ambiguous ddis with weak evidence  <cit> . refinement of pk ddi relations according to different degrees of evidence will be carried out in our future work, to further leverage information from evidence for ddi recognition.

CONCLUSIONS
in this study, two types of semantic information, shallow semantic representation and fine-grained semantic classes, were exploited for pk ddi extraction from biomedical text. all-path graph kernel was employed to statistically integrate different linguistic levels of information, i.e., syntactic, shallow semantic and fine-granular semantic class. experimental results showed that our proposed approach significantly en-hanced the performance of the original all-path graph kernel based on dependency structure. the f-measure was improved from  <dig>  % to  <dig>  % on the in vivo dataset and from  <dig>  % to  <dig>  % on the in vitro dataset, respectively, demonstrating the potential of semantic information for effective pk ddi extraction.

