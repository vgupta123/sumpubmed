BACKGROUND
mass spectrometry , a still fast improving technology, produces a high volume of data. large interest therefore exists for ms data management and analysis, and tools are continuously developed to this aim.

in most cases, data are pre-processed at level of instrumentation  for noise subtraction, isotope abundance evaluation, range selection, normalization against a standard signal, and so on. spectra are then saved for subsequent analysis.

however, the pre-processing is usually performed by applying different conditions, and adaptability of these steps would be useful. moreover, human controlled re-application of pre-processing procedures on a large number of technical and/or experimental replicates becomes a recurring task, long and potentially source of errors  <cit> .

it is also noteworthy that the analysis of the final spectrum can change depending on the experimental design. indeed, when dealing with experimental replicates, it is of interest to generate an average spectrum, as recently demonstrated  <cit> . furthermore, the spectra collected for different samples can be compared, in order to highlight similar signals or, on the contrary, dissimilarities between spectra.

the observation of common signals, or the search for distinguishing signals, in other words the search of biomarker signals, has been based on the comparison of mass spectra, and it has been used to classify patients’ samples , to distinguish microorganisms and animal species , to detect specific neuropeptides  <cit> . as these studies demonstrate, the collection of large number of spectra, and their analysis by averaging of replicates and the comparison of the average spectra, is a common practice that represents a field of development for bioinformatics tools.

while many tools exist for ms data management and analysis, allowing most of these elaborations to be carried out by combining their use at different levels, little is currently available for the automation of the fundamental steps involved in the analysis of m/z and abundance data from ms experiments. in fact, it is often reported in literature, and in the previously cited studies, the practice of using single tools together with some manual steps of integration based on excel data sheets or original scripts. the only alternative can be found by commercial packages, mostly distributed by the manufacturers of spectrometers. therefore, we decided to develop a free, simple and dedicated maldi/ tof  ms data management and analysis tool, to be available to researchers by a web interface, able to provide an automatic pipeline of analysis of mass spectra, useful to compare them within proteomic studies on large numbers of samples.

aim of this work
for the analysis of maldi/tof spectra the following assumptions should be considered:in each spectrum, molecules may be represented by several signals, each corresponding to a different isotopic abundance: these can be summed up to give a total abundance value for each molecule;

often, experimental data have to be normalized against an internal standard in order to obtain  quantitative results;

since experimental data are affected by background noise, the selection of signals above a threshold modulated on the spectra profile may be useful;

the analysis of sample replicates yields multiple spectra which are different because of marginal errors/changes in the experimental phase only: an average spectrum representative of the sample may be determined by aligning these spectra along the m/z axis and computing mean intensity values from the corresponding abundances;

the alignment along the m/z axis may be useful also for comparing spectra obtained from different samples, which could lead to the identification of significant differences in abundances and/or missing signals.



on the basis of these assumptions, we first developed geena, a prototype tool for filtering, averaging and aligning maldi/tof spectra  <cit> . geena main limitations are related to: i) the web interface, which is rather complex, since it includes all elaboration parameters in a single form, ii) the type and format of the output, which is also complex and difficult to re-use, and iii) the performances, which are especially poor when the number of spectra involved in the analysis is great.

we present here geena  <dig>  a redesigned, revised, more performing and much more user-friendly version of geena.

methods
work and data flow of the system
geena  <dig> work and data flow are summarized in fig.  <dig> fig.  <dig> geena  <dig> work and data flow. the final alignment is achieved by aligning the average spectra which are computed by averaging all spectra from the same sample. samples may be grouped according to some common origin or characteristics, e.g. cases and controls. reference to the original spectra is maintained in the final alignment, and this can therefore be passed to other tools for further analysis, e.g. for differential analysis and biomarker discovery



in differential proteomics, it is common that two or more groups of samples are compared in order to identify differences, e.g., case samples  against control samples . for each of these groups, a variable number of samples can be made available. in other situations, grouping of samples is not available a priori, and a classification of the samples is instead investigated.

in both cases, a variable number of spectra  is generated for each sample. this is where the automatic procedure implemented by geena can be usefully adopted. replicates may be pre-processed, as described in the following algorithms sub-section, and “averaged”, thus producing an “average spectrum” which is representative of the sample. finally, these average spectra can be aligned. the alignment is the basis for any subsequent analysis, e.g. case–control comparison, classification, or biomarker discovery, according to data provided in input.

development environment
we developed and made available geena  <dig> by using the linux-apache-mysql-php  web development framework, which is an easy to manage, effective working environment, on a cloud based virtual server, currently with a configuration consisting in a quad core amd <dig> 2 ghz cpu with  <dig> gb ram memory. the operating system presently is ubuntu server  <dig> . <dig> lts. current apache, php and mysql versions respectively are  <dig> . <dig>   <dig> . <dig> and  <dig> . <dig>  which are provided by the ubuntu distribution.

all code originally written for geena has been revised, corrected and partially rewritten for sake of performances and because of changes introduced in the interfaces, as well as in the output format. geena  <dig> is written in php  <cit> , but for the spectra alignment which is instead written in perl  <cit> . in more detail, the alignment of spectra is performed with a local run of the neapolis tool  <cit> , which uses an original procedure to compare spectra, based on the sorting of all m/z values from spectra under analysis, and the alignment of the values included within an user-defined range of m/z. the aligned signals are then used to generate an average spectrum, and mean and standard deviation are computed for m/z and intensity values. details about the alignment procedure are available at the neapolis web site.

data format
input spectra are managed as tab or comma separated values  text files. these formats can easily be produced by the majority of spectrometers associated software and consumed by any database system and spreadsheet software. for the analysis of the same data with variable parameters, input data may also be stored on our server in a mysql  <cit>  database and reused, although this feature is only presently available upon collaboration with the developers. the format of the input is described below, while the additional file  <dig> includes a full example input file that can be used for testing purposes.

the input is composed of blocks, each including information on spectra generated from the same biological sample. values of mass over charge and of related abundance for each spectrum are reported in column. the first spectrum is on columns  <dig> and  <dig>  the second on columns  <dig> and  <dig>  and, in general, the n-th spectrum occupies columns n*2– <dig> for the m/z value and n* <dig> for the related abundance. since spectra usually have a variable number of signals, the number of rows corresponds to the highest number of signals in all spectra. missing values in shorter spectra are replaced by “0”s. the first row includes labels describing the spectra. the second row includes the headers for the data columns, usually the texts “m/z” and “abund”, replicated as many times as the number of spectra available for the sample. the text excerpt in fig.  <dig> includes a simple example showing three spectra from the same sample, as previously described. each block is separated by the next one by a row that includes only two back slash characters, i.e. “\\”, at the begin of the row.fig.  <dig> text excerpt: input file example. here only the first and last peaks of three spectra from the same sample are shown. values are separated by tab characters. since the spectra may have a variable number of peaks, missing values are replaced by "0"s



the number of output files is considerably higher than in geena. output spectra are provided as tsv/csv files. additional output is provided as html files. in geena  <dig>  for each spectrum under analysis the output includes:the original spectrum, as a list of peak pairs representing the m/z and abundance values of the peak, named the “original” file,

the filtered spectrum, as a list of peak pairs as above, including only peaks selected after the pre-processing analysis, named the “filtered” file,

information on grouping of isotopic replicas, including lists of selected peaks, each with the list of peak pairs from the original spectrum that were grouped together, named the “isotopic groups” file.



for each group of replicate spectra from the same sample, geena  <dig> output also includes the “average spectrum”, achieved by aligning and averaging all filtered spectra from the same sample, together with related alignment information, which are provided both as text file, for further processing, and as html file, for better readability. the average spectrum includes  pairs which are computed as average of respective m/z and abundance values for equivalent signals found in the filtered spectra.

the short text excerpt in fig.  <dig> includes a simple example showing an average spectrum, as previously described. similarly, the text excerpt in fig.  <dig> includes a simple example showing alignment information as text file for an average spectrum generated by aligning three spectra from the same sample formatted as previously shown in fig.  <dig> fig.  <dig> text excerpt: average spectra example. only the first rows are shown. here, m/z and abundance values are computed by averaging the corresponding values of averaged spectra. the peak selection process is reported in the manuscript

fig.  <dig> text excerpt: alignment example. only the first rows are shown. this alignment was derived from three average spectra. in the first column, the number of spectra involved in the determination of each peak is reported. the following four columns report m/z values . the last four columns report the abundances . for better readability, an html version of the file is also available



in this file, which is meant to be passed on to other software tools for further analysis, values are separated by a tabulation character, and this can limit its readability. users should better see the equivalent html file. the first column reports the number of spectra that were found to include the given peak. from the second to the fifth column, m/z values are shown, the first value being the average one. empty values correspond to missing peaks in the corresponding spectrum. from the sixth to the last column, abundance values are reported with the same format of m/z values.

algorithms
the processing methods are based on original heuristic algorithms.

they include:pre-processing of spectra replicates, which in turn consists in:i) isotopic peaks identification and joining: signal peaks which are separated by 1 m/z unit  in mono-charged species may represent the same molecules, with different isotopic composition, if and only if their abundance values follow the expected distribution, which is variable according to the m/z values of involved peaks. for low mass peptides, the mono-isotopic species largely is more represented than others. at greater masses, non mono-isotopic species gain a greater relevance, having peaks which may become higher than the mono-isotopic one. while the m/z value at which the second species is higher than the first one can only be determined when the exact peptide composition is known, we have experimentally verified by using the molecular weight calculator software  <cit>  that this usually happens for peptides of molecular weight higher than  <dig>  da. when at least two peaks are recognized as representative of the same molecular species, their abundances are summed up and assigned to the first peak in the series, the monoisotopic one, while the other peaks are removed. two parameters, namely “maximum number of isotopic peaks” and “maximum delta between isotopic peaks”, are available to make this identification and joining tuneable according to the instrument used for generating the spectra. joining information is provided as output, for verification, in html;

ii) normalization: a simple normalization of abundance values is performed by assuming  <dig>  the value of a given normalization peak, if available, in order to improve the estimate of the abundances and making them comparable in different acquisitions;

iii) peak selection: a threshold line can be built and only signal peaks above it are selected. the line is built by defining some reference threshold values at given m/z values, including the lowest and highest m/z values for the spectra, and by linearly interpolating between them. up to six reference values can presently be defined, thus allowing creating a threshold line able to adapt to the shape of the spectra under analysis.



computing average spectra for replicates: spectra which are generated by analysing the same sample can be “averaged” in order to remove single analysis artefacts and strengthen the quality and representativeness of the resulting spectrum.

for this, “equivalent” signals, that is signals that are supposed to represent the same molecular species in original spectra, are first identified by selecting the nearest peaks among those having a difference in m/z values below a given threshold parameter . if equivalents peaks for a signal are present for a number of spectra which is higher than a given parameter , then both the m/z and abundance average values are computed and assigned to a peak of the average spectrum.

alignment of average spectra: average spectra which are generated by averaging replicated spectra from the same sample, can be aligned in order to highlight differences in signals among samples.

in this case too, equivalent signals, that are supposed to represent the same molecular species in average spectra, are first identified by selecting the nearest peaks among those having a difference in m/z values below a given threshold parameter . if equivalents peaks for a signal are present for a number of spectra which is higher than a given parameter , then both the m/z and abundance average values are computed and assigned to a peak of the aligned spectrum.



RESULTS
web interfaces
contrary to its predecessor, geena  <dig> is available on-line for public access through three simple and intuitive web interfaces. the standard search interface  allows the user a complete control over all parameters and it is of special interest for expert users and for users with special needs. a simplified interface, named bright search interface  is also available. it allows users to control both average and alignment parameters, while filter parameters are taken by default. finally, the quick search interface  allows users to run geena  <dig> by using only a few parameters: the analysis range in m/z and the mass of the normalization peak, if applicable. in this case, default values are used for the majority of parameters.

the ssi includes four input sections, as it is shown in fig.  <dig>  the first section  asks for optional information as a job name, an email for sending results, and country of work for statistics aims.fig.  <dig> the standard search interface . the standard search interface  includes four sections. the majority of parameters have an associated default value, which can be changed. by default, the normalization peak is not taken into account and the threshold filtering is not used



the second section  is meant to define data input method and to specify data to be analysed. two methods are available: file upload and selection of data from a local database. the second option is only available for collaborating parties. it may be especially useful for repeated analysis with variable parameters. the third section  allows specifying in detail the requested pre-processing tasks and the related parameters. it allows defining the analysis range in dalton by defining minimum and maximum m/z values to be taken into account. it also supports the definition of the presence of a normalization peak and of its m/z value in da. the linear filter, when desired, is also specified in this section by introducing the threshold values at various m/z. finally, the parameters related to the optional joining of isotopic peaks can also be specified in this section.

the fourth section  allows to set the parameters for averaging the replicates and for generating a final alignment and an average spectrum for all spectra under analysis.

the qsi  assumes that the majority of parameters involved in the analysis may have assigned a default value and it therefore only includes a reduced number of input parameters. moreover, it does not allow selecting the input data from the local database.fig.  <dig> the quick search interface . the quick search interface  only includes essential parameters, which cannot be assumed by default: the input file, the analysis range and the presence of a normalization peak. default values are assumed for all remaining parameters



the bsi  allows users a greater control over the averaging and alignment processes. as the qsi, it assumes that the majority of parameters have assigned a default value and only allows to upload data from a file. additionally, it allows users to specify, both for the averaging and for the alignment processes, the number of spectra, among those being aligned, that must present a given signal for this be included in the average or alignment. possible options in this case are to select:only signals present in all spectra

signals present in all spectra but one

signals present in the majority of spectra 

all signals present in at least two spectra

all signals, even when present in one spectra only

signals present in at least a number of spectra specified by the user

fig.  <dig> the bright search interface . in respect to the qsi, the bright search interface  includes additional parameters able to tune the averaging and alignment processes. a high number of signals is preferable for the averaging process, while a low one is better for the alignment process. default values are assumed for all remaining parameters



a high number of spectra presenting the signal is preferable for the averaging process, which determines the average spectrum of spectra replicates for the same sample. in this case, only those signals that are present in many, if not all, spectra is included in the average spectrum, thus avoiding to include sporadic signals, possibly arising from the spectrum acquisition process. on the contrary, a low number of signals is better than a high one for the alignment process, where average spectra from distinct samples are compared. in this case, signals are included in the alignment even when they are rare, thus facilitating and empowering the following differential analysis.

the main output consists, as specified in the methods section and shown in fig.  <dig>  in the alignment of all average spectra, which were in turn built by aligning and averaging all replicated spectra for each given sample. this is provided in a variety of formats: aligned spectrum in tsv format , complete alignment in tsv format , complete alignments in html.fig.  <dig> the output page. the upper part of the output page includes the parameters used for the analysis, according to the search interface used. it also includes, in the “running analysis” section, a list of analysis carried out by geena 2: this is compiled and progressively shown at run time, so that the user knows which analysis is being performed at any time. the lower part of the output page  includes results of the analysis, both intermediate and final. intermediate results are shown in a table for better readability. each result in included in a separate file which is linked by a self-explaining text and file name. all results may also be downloaded in a compressed archive



intermediate outputs contain filtered ms spectra and their alignments. all results are available for downloading from the result page and a link to a compressed archive is also available in the results page and sent by email.

discussion
validation and application examples
in the following, we present three examples of experiments where the analysis of ms spectra generated with a maldi/tof instrument was carried out by using either geena  <dig> or its previous releases.

first, we carried out a proteomic study on the effects of long-term cryopreservation on the low molecular weight fraction of serum proteome . blood samples used in this study either were stored at −20 °c for 8 years after previously being collected from  <dig> healthy donors or were freshly collected from  <dig> other unrelated healthy donors. from the freshly collected samples, two sets of aliquots were generated. one set was stored at −80 °c and analysed 18 months later, whereas eight samples of the second set were immediately subjected to analysis. raw data generated by maldi/tof analysis within a dynamic m/z range from  <dig> to  <dig> , were exported as an excel spreadsheet. data handling was performed using “proteo” and “neapolis”, two bioinformatic tools that were later merged and formed geena. proteo allowed isotopic peaks joining, normalization, and peak selection, while neapolis was used both to obtain the mean abundance values for experimental replicates and to align mass spectra along the m/z axis. statistical analysis performed on data elaborated by neapolis generated a panel of 106 m/z values whose abundances were significantly different between the experimental groups.

geena was for the first time employed in a retrospective proteomic study on cryopreserved sera from patients affected by gross cystic disease of the breast , a common benign disease of the mammary gland, affecting some 7 % of women in western countries  <cit> . for the realization of this study two experimental groups were established: a) thirty women who developed a breast cancer following first cyst aspiration served as cases, b) sixty women who, by the same date limit, were still breast cancer free served as controls. each sample was analysed in quadruplicate by maldi/tof ms. raw data were pre-processed by geena which generated a panel of  <dig> candidate signals to be subjected to statistical analysis. the following significance analysis of microarray , performed by taking as input the results provided by geena, identified a significant increase in serum levels of complement fraction c3f in gcdb patients who during the follow-up developed a breast cancer.

recently, the combined utilization of geena  <dig> and sam allowed the identification of angiotensin ii serum level as a predictor of breast cancer mortality following breast cancer surgery  <cit> . in this case, an independent validation of geena  <dig> data processing has been obtained by using the alternative bio-analytical technique elisa immunoassay, which confirmed the same results.

despite the fact that in many applications the peak selection can be achieved by means of the geena  <dig> linear filter described in the previous section, noisy datasets might demand a more accurate treatment. in the works reported above an alternative external filtering tool, a stand-alone national instruments labview  <cit>  program named ms-baseliner was used. ms-baseliner is able to dynamically evaluate data background along the spectrum, discriminating between spurious, noisy peaks and real peaks, through an iterative process which determines a background noise value for each peak in the spectrum by analysing all peaks around it only. ms-baseliner can be downloaded from the geena  <dig> website along with a detailed description  <cit> .

comparison with existing tools
despite the existence of many bioinformatic tools covering the main aspects of proteomics investigation, the lack of online tools suitable for creating an archive of maldi ms spectra and to analyse-reanalyse them with different parameters makes geena unique under this aspect. concerning the single steps of analysis performed, there are tools available for pre-processing of ms spectra within the matlab bioinformatics tool box as well as in r, two development environments largely used by bioinformatics, but, in our experience, not simple to use for biochemists and ms analysts. on the other hand, tools for aligning spectra are available within the same matlab and r environments, as well as in form of independent tools  <cit> . the unique feature of geena  <dig>  however, is its workflow architecture, that makes it possible to integrate other tools for each step of the analysis, leaving into the interface the opportunity to select the most suitable to the user work. as further development, the integration of freely available tools for the pre-processing, filtering, and aligning of spectra will be considered to make the tool even more flexible and useful to a wider community.

CONCLUSIONS
elaborating from previous tools proteo, neapolis, and geena, the original software geena  <dig> can now be considered a useful public-domain, free tool for the automated pre-processing of relatively uncomplicated ms data, like those originated by maldi/tof instruments. its flexible, yet simple and intuitive web interface, as well as the simple layout of the results, makes it very powerful, yet easy to use even for not particularly experienced operators. its output can straightforward be used as input for further analysis, including differential analysis and biomarker discovery, by using many publicly available software tools.

it has proven to be useful and effective for published scientific works, where it has been adopted for pre-processing of maldi/tof spectra which were then compared by using statistical software on a limited amount of data.

the tool is publicly available on-line and it can also be distributed on collaborations.

future directions
current developments of geena  <dig> include an extension of its pre-processing, filtering, and aligning features and of accepted input and output formats.

as discussed, the ms-baseliner filter has been adopted for a more sophisticated identification of background noise. a new version of this tool is being implemented within geena  <dig> and will be optionally available soon. other filtering methods are under evaluation. since mzml  <cit>  is now a standard format for archiving and exchanging ms spectra, geena  <dig> will soon adopt it for input data.

further developments under evaluation include parallelization of alignment tasks and the creation of user-specific environments accessible after user authentication allowing both the upload of confidential data in a controlled access table of the database and the definition of preferred parameters for processing and alignment of spectra.

availability and requirements
project name: geena 2

project home page: http://bioinformatics.hsanmartino.it/geena2/

operating system: ubuntu  <dig> . <dig> lts

programming languages: lamp framework, php and perl

other requirements: apache httpd, mysql

license: no license defined, software available on collaborations

any restrictions to use by non-academics: none

additional file
additional file 1: 
an example input file for geena  <dig>  this example file can be used for testing purposes. it includes  <dig> ms spectra generated by maldi/tof from four biological samples in the context of a real experiment. three spectra were generated for each sample. the format of the file is described in details, and with examples, in the manuscript and in the information file on input/output data formats in the web site. 



abbreviations
amdadvanced micro devices

bsibright search interface

cpucentral processing unit

csvcomma separated values

gcdbgross cystic disease of the breast

htmlhypertext markup language

lamplinux-apache-mysql-php

m/zmass-to-charge ratio

maldi/tofmatrix assisted laser desorption ionization time-of-flight

msmass spectrometry

mzmlmass spectrometry markup language

phpphp: hypertext preprocessor 

qsiquick search interface

ramrandom access memory

samsignificance analysis of microarray

ssistandard search interface

tsvtab separated values

competing interests

the authors declare that they have no competing interests.

authors’ contributions

ap, rm and mr defined the requirements and tested the system. ap also wrote part of the section on applications. pr conceived the software, participated in its design, implemented the software and drafted the manuscript. ff supported the analysis of filtering methods. he developed and implemented the ms-baseliner filter. af participated in the design of the work, designed alignment algorithms, developed alignment tools in perl, and wrote the description of alignment methods. all authors read and approved the final manuscript.

