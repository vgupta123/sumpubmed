BACKGROUND
a major goal in a priori network-based analyses of genomic data  is extracting networks of molecular relationships underlying the studied phenotype. several software tools have been developed for biological network analyses and visualizations, such as cytoscape  <cit> , biologicalnetworks  <cit> , visant  <cit> , osprey  <cit>  and biolayout  <cit> , most of which offer excellent visualization and mapping functions. an important challenge in network-based analyses of data is integration of experimental data with prior knowledge interactions for the retrieval of most relevant biomolecular networks. however, retrieval of most relevant biological networks/pathways associated with the upper or lower end of the data distribution is not a trivial task, mainly because members of a biological pathway do not usually have similar data values , which necessitates the use of various computational algorithms for finding such networks of genes  <cit> . almost all of the existing network-based data analysis methods are so-called list-based network building methods . these methods use a pre-defined gene list of interest  as seeds for iterative network building based on connectivity of non-seed genes with the seed genes. most software tools, including commercial ones , use this method. yet others use an enrichment analysis to score pre-defined pathways for enrichment for the seed genes . a similar approach is usually employed for functional enrichment analyses. we have shown that networks of interest obtained by list-based methods are prone to erroneous inclusion of irrelevant network components  <cit>  . moreover and importantly, results of list-based analyses are restricted to one or a number of static networks, which are not amenable for further statistical analyses, are not comparable among each other and miss potentially important information contained within genes with sub-threshold data values  <cit> .

in order to provide the research community with a software tool featuring advanced methods for a priori network analyses, we developed netwalker . netwalker architecture is designed to enable network analyses based on holistic  integration of experimental data with a priori networks and to allow extensive interoperability between analysis components and with external applications. netwalker features netwalk  <cit>  and funwalk, random walk-based analysis methods for prioritization of network interactions and functional processes, respectively, based on assessment of local network connectivity in conjunction with experimental data. unlike other tools designed for similar purposes, netwalk and funwalk allow for interactive comparative analyses of most active networks and functional processes, respectively, between samples. the latter is achieved via edge flux and function tables, respectively, which give flexibility to the user in querying, analyses and visualizations of networks of most interest. in addition, intuitive inter-operability between analysis and visualization components in netwalker, as well as with external applications, including r, adds flexibility in data analyses . in order to demonstrate the use of analysis functionalities in netwalker for network-based analyses of microarray gene expression data, we have conducted an analysis of our in-house gene expression dataset from doxorubicin responses of p53-positive cells.

implementation
netwalker is a software platform specifically designed to allow analyses of functional genomics data within the context of prior networks using whole-population based scoring approaches: netwalk and funwalk . netwalker features functions for data import and processing, network integration and analysis, network visualization, exploration and output . netwalker was developed in java, using netbeans  <dig>  . a screenshot and general architecture of the software and the relationship between object types are shown in figures  <dig> and  <dig>  respectively. a detailed manual for netwalker is provided in the additional file  <dig> 

software architecture
in netwalker, analysis objects are of five types, netwalker interactome knowledgebase , dataset, eftable, funtable and graph . the nik is a pre-compiled knowledgebase of human genes, their functional annotations and their biomolecular interactions. nik is loaded at the application startup, and it cannot be modified from within the application. the next three objects  are in the form of tables, and graph represents network views of interest. tables in netwalker feature standard functions for statistical manipulation, clustering, heatmap coloring, advanced filtering and network plotting, which give flexibility to the user in the analyses of respective analysis tables. dataset handles primary datasets, such as gene expression datasets, uploaded by the user. netwalk is run on selected columns of a dataset, and generates an eftable and a funtable . eftable is a table of interactions and their scores assigned for each condition that netwalk was run on. funtable is a table of functional terms and their scores for each column that funwalk was run on. graphs can be derived from any of these three tables by a simple export, or by direct query of the nik.

netwalk and eftables
the main analysis engine in netwalker is netwalk, a random walk-based scoring algorithm of network components based on the assessment of the whole data distribution without requiring any data cutoffs. briefly, first, the experimental data is integrated with the network to form a transition probability matrix for random walk

  pij=wj∑k∈niwk 

where pij is the transition probability from node i to node j, wj is the experimental value for node j, and ni is the set of immediate downstream neighbors  of node i. the probability  for each node is calculated by the left eigenvector of the modified transition probability matrix:

  g=g1−qp+1∑k∈nwkq×wt 

where q is the restart probability . in netwalker, we consider interactions, rather than nodes, so we calculate the probability of an interaction ij  as

  eij=gipij 

finally, the edge flux  score of an interaction is calculated by the log-likelihood

  eij=logeij_weij_r 

where eij_w is the probability of interaction ij calculated by using experimental data for w in eqs.  <dig> and  <dig>  while eij_r is that after letting all w =  <dig> in eqs.  <dig> and  <dig> . we have shown that networks obtained through netwalk are more coherent with the input data than those obtained through list-based methods. moreover, netwalk results are not limited to one or more static networks, as is the case in most other software, but is a distribution of ef values assigned to each interaction in the network based on the combined assessment of the local connectivity and the corresponding data. thereby, ef values can be subjected to further standard statistical procedures, such as clustering and heatmap views, for comparative contextual network analyses . ability to conduct comparative analyses of networks in the form of ef tables and heatmaps is a fundamentally unique feature in netwalker, which allows the user to conduct traditional data analyses  at an interactome, rather than genome, level. in netwalker, netwalk run is performed from within a tableview of a dataset, and can be run over  <dig> or more selected data columns. the results are displayed as ef tables in a tableview, where the interaction details and their scores for each data column is shown. the advanced filtering and further mathematical operations in tableview can be used to create networks of interest or ef heatmaps .

funwalk and function tables 
functional enrichment analyses are a standard for genomic data. function enrichment analyses using no-cutoff approaches, exemplified in gene set enrichment analysis , are extremely useful in generating useful insight into the data. however, in addition to its lack of power and other drawbacks  <cit> , gsea does not account for the connectivity information of genes while calculating enrichment scores. incorporating connectivity information into the scoring process may provide an additional source of confidence in the relevance of the high-scoring gene sets  <cit>  . for example, confidence in the relevance of a gene set may be improved if we knew that the genes within the set interact at the molecular level. although gene set analysis methods, such as gage  <cit> , use pre-defined canonical pathways as gene sets in their analyses, they still do not incorporate network connectivity information into their analysis. on the other hand, while gotea implemented in visant  <cit>  incorporates connectivity information based on network distances of genes in the set, it does not account for experimental data. in order to obtain network-based scores of functional terms in conjunction with the supplied experimental data, we designed funwalk, an extension of netwalk, which scores functional terms for their enrichment in the experimental data based on random walk probability scores in eq.  <dig>  in funwalk, we aim to prioritize subnetworks with coherent functional annotations whose genes are also over-expressed  in a given dataset. therefore, we consider functional annotations of interactions, rather than genes, where the set of functional terms assigned to interaction ij is defined as

  fij=fi∩fj 

or the set of common terms of its interacting genes. funwalk is an extension of netwalk, such that it calculates the probability of a functional term as the cumulative probability of interactions having the functional term f:

  pf=∑ij∈feij 

where eij is as defined in equation . therefore, the final score for functional term f is the log-likelihood:

  sf=logpwfprf 

where pw is the probability of f based on experimental data w, while pr is that after setting all w =  <dig>  the score s can be interpreted as a relative visitation probability of interactions defined by the functional term f compared to random chance due to network topology and functional set size. since the lower term in eq.  <dig> contains all the bias due to network topology  and set sizes, the log-likelihood function s is controlled for these biases.

since funwalk considers functional terms of annotations, rather than genes, it only considers terms that have common annotations across molecular interactions defined in the network. in this way, funwalk prioritizes subnetworks containing common functional annotations that are also over-represented in the data. funwalk uses netwalk results to score each functional term for its enrichment in the given dataset. funwalk results are displayed as function tables , with each row representing a functional term, and columns show their scores in the given experimental conditions. any selected rows in a funtable can be directly exported to a network view in a netview to view the network interactions associated with the given functional terms.

netview, network implementation and functions
netview windows provide graphical view of networks of interest. netview contains a number of functions for visual manipulation of the graph, such as different layouts, coloring and functional analyses. for visual representation of network graphs, we have used commercial yfiles library for java . the yfiles library offers extensive support for nested graphs, which are important for implementing nested grouping various network layouts. utilizing yfiles’ support of nested graphs, we have implemented manual and automated grouping of network components.

netwalker interactome knowledgebase 
netwalker uses a pre-compiled knowledgebase of genes, functional terms and biomolecular relationships and is loaded at the application startup.

there are currently  <dig> different interaction types incorporated into the nik. these are 1) protein-protein interactions, 2) transcription factor—target interactions, 3) neighboring metabolic reactions, and 4) neighboring interactions from reactome.

protein-protein interactions were obtained from hprd   <cit> , bind   <cit> , mint  <cit> , biogrid  <cit>  and intact  <cit> . directed signaling interactions were obtained from kegg  <cit>  and nci pathway interaction database . interactions from mint, biogrid, intact and nci were obtained from pathway commons  <cit> .

transcription factor—target interactions were obtained from bind , reactome  <cit>   and nci pathway interaction database .

neighboring metabolic reactions are assigned to a pair of genes if the product of the reaction catalyzed by one gene is the reactant of the reaction catalyzed by the other. for example, hk <dig>  catalyzes the reaction glucose + atp < - > glucose-6-phosphate + adp, while gpi  catalyzes the reaction glucose-6-phosphate - > fructose-6-phosphate. since glucose-6-phosphate is a product of one and the reactant of the other, these two genes are assigned an interaction in the network. see figure 4b for examples of metabolic interactions . information on genes and their metabolic reactions were obtained from kegg, human metabolome database   <cit> and bigg  <cit> .

neighboring reactions interactions were obtained from reactome.

functional terms: functional annotation of genes from gene ontology  <cit>  is used as functional terms for genes in nik. these are also loaded at the application startup to aid in functional analyses.

the authors will be continuously updating nik with new interactions from the underlying databases, with new interactions from additional sources and with additional functional annotations of genes. updated nik files will be provided at the web site for download.

id mapping
datasets are imported into netwalker in dataset tables . the column whose values will be used by netwalker as gene identifiers of rows are set by the user from within dataset. at this point, netwalker will automatically match the values in the given column to gene nodes in the nik. currently, supported ids are gene symbols, aliases, affymetrix probe ids, entrez gene ids, refseq, ensemble, mouse genome database, rat genome database and vega ids.

r interface
in order to maximize flexibility of analyses in netwalker, we have implemented an interface with r, a popular statistical programming environment, using network connection. we provide a r workspace file along with the application, which contains currently implemented functions for r-netwalker interface. currently, we have implemented functions for exchange of dataset/table and network objects between r and netwalker. details on the use of this functionality and sample uses can be found in the manual.

license
the software is released with a creative commons attribution-noncommercial-sharealike  <dig>  unported license , which allows for using, modification and sharing of the software and of its components for non-profit purposes.

memory requirements and speed
since netwalker is using large matrix multiplications for netwalk and funwalk, at least 2 gb of memory is required to run netwalker, although we have successfully been able to run it in systems with less memory. a netwalk run in netwalker takes a few seconds per each data column, depending on the sytem. since eftables are very large objects , running very large datasets with netwalk will require large memory  in a 64 bit system running 64 bit jre.

the yfiles library used in netwalker allows for visualizations and handling of large networks. we have been able to generate and visualize a network of ~ <dig>  nodes from an eftable in under 5 seconds.

other
for detailed information on the visual capabilities of netwalker, along with other functionalities for dataset import, processing, heatmap clustering, geneconnector and inter-operability with external applications, including r, please see manual in the additional file  <dig>  table  <dig> contains a summary of comparison of functionalities in netwalker with other popular software applications.

unique features of netwalker are in bold.

RESULTS
in order to demonstrate the use of functionalities in netwalker in a real dataset, we undertook an analysis of microarray gene expression data from mcf <dig> cells before and after treatment with lethal  and sublethal  doses of chemotherapy drug doxorubicin. we imported the dataset to netwalker and averaged gene expression values for experimental triplicates for each condition. we normalized gene expression values at each time point to that at the  <dig> time point to reflect fold change. then, we ran netwalk and funwalk on each of the normalized columns to perform a comparative network analysis of cellular responses to sublethal and lethal doxorubicin doses.

in order to make a heatmap of most significant network interactions in doxorubicin response , we selected most significant interactions from  <dig> and 10 um conditions, and made a clustering heatmap. figure 4a-b shows the heatmap of most significant interactions associated with increased gene expression in response to low or high doses of doxorubicin and a network corresponding to the highlighted cluster, which represents interactions that are associated with increased expression in high dose but reduced expression in low dose doxorubicin treatment, revealing a bimodal response.

funwalk analysis was run together with netwalk, and a funtable corresponding to scores of functional terms associated with subnetworks of increased or decreased gene expression was generated. the funtable was filtered to exclude functional terms with less than  <dig> interactions and whose level in the go hierarchy are below  <dig> . then, we identified functional terms with most variant scores across the  <dig> conditions, and generated a heatmap . note a pattern that is very similar to the one in figure 4a with the ef heatmap, showing a bimodal response of these cells to low and high doses of the dna damaging agent. networks corresponding to individual rows can be plotted in a netview, and a network corresponding to some of the functional terms shown by arrows in figure 5a is shown in figure 5b. a detailed step-by-step tutorial on a more detailed analysis of this dataset using various functionalities in netwalker can be found at the web site http://netwalkersuite.org. the netwalker workspace environment containing all the analyses presented above can be downloaded from the web site, and loaded in netwalker.

CONCLUSIONS
in order for a user to be able to analyze his data to extract network models of interest, the software should allow him to a) import and handle the dataset, b) integrate the dataset with a large knowledgebase of biomolecular interactions, c) query networks from the knowledgebase that are most related to his data, d) identify and visualize the networks of interest, e) and visually enhance the network for better representation of the experimental condition. without any of these components, software will be incomplete, and it will be difficult for a bioinformatically untrained biologist to use it for analysis of his data. for example, visant  <cit> , pina  <cit> , biolayout  <cit>  and osprey  <cit> , although offering network construction, management and visualization tools, do not offer functionalities for importing and processing datasets or network integration with user-supplied genomic data, which makes it difficult for biologists to use these tools for network-based data analyses. cytoscape is a popularly used excellent tool primarily designed for advanced visualizations of networks, but it does not offer content in the form of a knowledgebase. to our knowledge, biologicalnetworks and netwalker are the only software platforms that offer all of the functionalities described above. however, netwalker is the only software that offers efficient holistic  data analysis methods  for comparative network and functional analyses. the design of netwalker and of the netwalker interactome knowledgebase to emphasize whole-distribution based analysis methods  for more flexible data analyses and model building is its most distinguishing feature from other software.

novel functions can be integrated into existing software applications, such as cytoscape, instead of developing a stand-alone application. however, cytoscape is designed more as a visualization tool for biological networks, with some excellent features for visual mapping of data and further visual manipulations. consequently, cytoscape is not a database-centric software, like biologicalnetworks and netwalker, and the functions it provides, both core and through plugins, mainly concern the networks of interest  uploaded or created by the user. accordingly, the core api that is used by plugins only provides functions to access the current uploaded networks. in contrast, netwalker  features a pre-compiled knowledgebase of prior information, which is used to query the user-supplied data to extract most relevant networks. in addition, since handling of netwalk and funwalk results, their analyses, query and visualizations  are best done with a specialized software architecture, we developed netwalker as a separate suite to maximize user experience in using these methods. in addition, netwalk and funwalk are only pilot methods for the use of biased random walk models in network-based holistic data analyses, and we are currently working on a suite of novel algorithms to be incorporated into netwalker to enable whole system-based analyses and automated mechanistic model building. therefore, netwalker should also be viewed as a novel platform for random walk based holistic network analyses.

availability and requirements
netwalker is available for download for academic use at http://netwalkersuite.org. a windows and a mac version have been included. windows version of netwalker runs on windows xp and windows  <dig> systems. we have tested the mac version on a mac computer with os x version  <dig> . since netwalk computations in netwalker involve many large matrix multiplications, we recommend at least 2 gb of ram. most modern processors  will suffice to run netwalker with a reasonable performance.

competing interests
the authors declare no competing interests.

authors’ contributions
kk designed the software and algorithms, performed analyses and wrote the manuscript. sd and se implemented a clustering algorithm for netwalker. ptr helped with writing of the manuscript. all authors read and approved final manuscript.

supplementary material
additional file  <dig> 
netwalker software manual.

click here for file
