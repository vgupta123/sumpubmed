BACKGROUND
while drastically increasing performance, massively parallel sequencing  technologies that use short reads have created new challenges in carrying out downstream bioinformatics analyses. one of these challenges is that complexity of the assembly task is much higher as a result of very short read lengths. the de novo assembly of large genomes faces particular challenges in repeat-rich regions because of higher numbers of repeat copies. initially, helping the assembly by increasing read coverage appeared to be the most obvious remedy. however, for assembling genomic regions with redundant genome fragments the additional costs of memory, time, and price turned out to be disproportionate to the minor improvements achieved by increased sequencing depth. it is usually impossible to resolve repeats longer then the read length.

one possible solution to this problem is to use fps. fosmid technologies  <cit>  employ the origin of replication of the f-plasmid and the partitioning mechanisms of the e. coli genome to clone large  chromosome fragments. bacteriophage lambda packaging restricts the fragment length to ~ <dig> kbp. fosmid ends can produce mate-pair  libraries that facilitate the assembly of shotgun genome sequences in the absence of large-scale bacterial cloning  <cit> . another application of fosmids is in obtaining material for genome-scale sequencing via a massive fosmid-based approach in which the inserts are completely sequenced. in order to load next generation sequencers  with required amount of dna, hundreds or thousands of fosmids should be combined. the fp approach enables the complexity of downstream bioinformatics analyses to be reduced in a number of ways:each sampled genomic fragment is haploid within a fosmid  <cit>  – hence assembly of the fragment is not hindered by allelic differences;

in repeat-rich genomes, repeats are the major reason for breaks in assembly contiguity, and the repeat assembly problem is heavily reduced when, as exemplified by assembly of the norway spruce  genome  <cit> , each pool of  <dig>  fosmids contained in total ~40 mbp genomic regions compared to the challenge to assembly all wgs reads from the entire  <dig> gbp genome;

it is not necessary to use large-memory computers in order to solve the assembly problem ; and

for certain assembly algorithms, it is important to know the approximate number of genomic fragments sampled in each instance and length limits of each region.



using sets of contigs originating from fps also introduces constraints that are helpful for further scaffolding of these contigs and merging them with contigs obtained from wgs. one such constraint is that any pair of contigs from the same pool is unlikely to represent the same genomic region , while it is more likely for contigs from different pools. sequence similarity of two contigs from the same pool can therefore, with highest likelihood, be attributed to paralogy rather than to an allelic difference.

these advantages have led to the growing use of fp technologies in those large genome sequencing projects that do not use sanger sequencing and bacs  <cit> . the fp approach was indispensable in the sequencing and assembly  <cit>  of the genome of norway spruce, p. abies. it helped to assemble many more repeat regions than it would be possible to do using wgs alone, given the large size  and complexity  of the genome.

in the course of the spruce sequencing project we produced and compared contigs from test fps of different sizes, contigs from hundreds of fps generated in a massive production process, and wgs-generated contigs. this enabled us to carry out a multilateral comparative analysis of both the technical parameters used and the biological content of the assemblies, and we present the results in this article. we also describe the fp-specific preparation of libraries, report on the optimization of the assembly process, and present features of the assembled fragments of the spruce genome.

methods
preparation of high molecular weight  genomic dna and ~ <dig> kb inserts
fresh needles from shoots over-wintered since the previous year of the reference tree  <cit>  were collected near umeå, sweden during late spring  and immediately frozen at -80°c.

we prepared hmw spruce genomic dna using a modified nuclei-agarose dna plug purification protocol. about  <dig> g of the frozen young spruce needles were briefly ground to a fine powder in liquid nitrogen with a mortar and pestle. the powder was gently re-suspended in  <dig> ml of ice cold nuclei preparation buffer  and incubated on ice for  <dig> minutes to lyse the cells. the extract was filtered through two layers of cheesecloth and one layer of miracloth and the nuclei were pelleted by centrifugation at  <dig>  g at 4°c for  <dig> min. after washing the nuclei extensively with the nuclei preparation buffer , we made 100 ~  <dig> plugs by embedding the nuclei in 1% low-melting-point agarose. each set of  <dig> plugs was lysed in  <dig> ml of lysis buffer  at 50°c for  <dig> hours with gentle shaking. after washing the dna plugs, the genomic dna was electro-eluted  into a dialysis tube with 1x tae buffer, and the hmw genomic dna was finally extracted with phenol/chloroform/isoamyl alcohol, precipitated with isopropanol, and resuspended in te buffer. we routinely obtained at least  <dig> μg of high quality cloning-ready hmw genomic dna from ~ <dig> grams of frozen young spruce needles.

each  <dig> μg of hmw genomic dna was sheared using a hydroshear apparatus  with the large pore orifice at a speed code of  <dig>  the sheared large dna fragments were end-repaired with a dna terminator kit  for  <dig> min at room temperature followed by heat inactivation at 70°c for  <dig> min. the end-repaired large fragment dna was fractionated on a chef-mapper system  in 1% pfge agarose,  <dig> x tbe, using the following conditions:  <dig> v/cm,  <dig>  -  <dig> s time ramp,  <dig> hrs, 120° angle, and 14°c. after excising gel slices from the unstained portion of the gel corresponding to the region between the  <dig> kb and  <dig> kb size markers, the dna was recovered by electroelution, precipitated with isopropanol and resuspended in te buffer at a concentration of  <dig> ng/μl.

fosmid library construction and pooling
we constructed all fosmid libraries according to the fosmid cloning kit manual . for one fosmid cloning reaction per library,  <dig> μl of ligation mixture contained  <dig> ng of insert dna,  <dig> ng of linearized and dephosphorylated psmart-fos or pngs-fos vector , 1× t <dig> dna ligase buffer, and  <dig> units of t <dig> dna ligase ; it was incubated at room temperature for  <dig> hours, and the ligation reactions were then heat-inactivated at 70°c for  <dig> min. for fosmid packaging, each  <dig> μl ligation mixture was packaged, using maxplax lambda packaging extracts , by two successive additions of  <dig> μl packaging extract followed by  <dig> min incubations at 30°c;  <dig> ml of phage dilution buffer  and  <dig> μl chloroform were then added to each packaging reaction and mixed well, and the fosmid phage particles were stored at 4°c. for fosmid transfection and titering, each  <dig> μl aliquot of phage particles was added separately, either without or with dilution, to  <dig> μl of prepared replicator fos cells , and shaken at  <dig> rpm for  <dig> minutes at 37°c; the transfected replicator fos cells were then plated on yt media plates containing chloramphenicol , x-gal , iptg , and sucrose , and incubated overnight at 37°c, after which the packaged phage titer was calculated. all fosmid libraries were titered and stored at -80°c.

all the fosmid pooling was carried out using the same protocol. after testing the efficacy of illumina sequencing and assembling from pool sizes with ~ <dig>   <dig>   <dig> ,  <dig>  and  <dig>  fosmid clones, we set the size of each of the remaining  <dig>  fps at  <dig>  clones. we plated each set of fosmids from titered libraries on a q-tray  with  <dig>  μg/ml chloramphenicol and 5%  sucrose, and incubated the trays for  <dig> hours at 37°c. after confirming the number of clones, the fosmid cells from each q-tray were collected as a pool and fp dna was purified according to an improved alkaline lysis method. the modification consisted of preparing alkaline solution iii at ph  <dig>  instead of the standard value  <dig> , and the mixture was processed extremely gently and carefully after addition of alkaline solution ii. finally, each fp dna was dissolved in  <dig> μl of te at a concentration of ~ <dig> ng/μl and stored at -80°c.

cost of fosmid pool production
for the pools of  <dig> fosmids, we estimated the cost of consumables for production  as around  <dig> usd per one pool.

sequencing
all the fp samples were sequenced on an illumina hiseq  <dig> platform as separate  <dig> bp insert libraries with paired end reads of 2× <dig> bp, using standard illumina protocols and kits. six tagged fps were loaded per lane. the  <dig> bp paired-end libraries and the jumping libraries of insert size  <dig>  kb  were constructed from nuclear whole-genome shotgun dna. to the  <dig>  kbp libraries, we applied a circularization based on the protocol for the  <dig> platform. its major feature was broad range of insert size and very low fraction of pe reads. details of all these steps are described in additional file 1:  <dig> and  <dig> to .

assembly
fps were assembled using the clcbio de novo assembler v.  <dig> . <dig> beta for the 64-bit linux platform  by recruiting single cores on 8-core machines with  <dig> gb ram from the linux cluster uppmax .

RESULTS
optimization of the fp strategy
in genomes with a high prevalence of repeats, like that in the spruce, one would expect repeats to be the major reason for assembly termination. by representing only a small fraction of the genome in each pool, fps can considerably reduce the repeat problem. ideally, one would sequence and assemble each fosmid individually . however, the technical challenges inherent in producing hundreds of thousands of tagged sequencing libraries currently make this an impractical solution for most sequencing facilities. achieving the best trade-off between the time and cost needed for library preparation on the one hand, and the quality of assembly results on the other, is therefore a key issue when deploying fp sequencing.to optimize the fp strategy, we produced  <dig> pilot pools of varying sizes . each pool was assembled individually, and the assemblies resulting from the pools were compared to a 50x whole genome shotgun assembly from the same spruce individual. we measured the efficiency of assembly as total length of contigs longer than a certain threshold  and normalized the result by dividing it by the expected total length of genomic fragments in the pool. as anticipated, the assembly metrics improved dramatically with smaller pool sizes. as it follows from figure 1b, further improvement was achieved with scaffolding the contigs using mate pair libraries.figure  <dig> 
assembly length achieved as a function of minimal contig size  and pool complexity . a: fp assembly alone. b: assembly with scaffolding. the leftmost point on each x-axis indicates the values achieved by haploid whole genome shotgun  sequencing. solid, dashed, dotted lines: data for contigs longer than  <dig>   <dig>  and  <dig> kbp, respectively. read coverage after read quality control and filtering was around 38x for the haploid wgs, and then 65x, 115x, 150x,  <dig>  and 200x for the pools from fp <dig> to fp <dig>  respectively. the libraries used for scaffolding,  <dig> bp paired end and  <dig>  kbp mate pairs, provided coverage around 20x and 25x, respectively.



another important parameter was the required depth of sequencing per pool. the fp assemblies presented at figure  <dig> were performed at coverage much higher  than that for the wgs assembly . in order to investigate this factor, we simulated lower coverage with random sub-sampling of reads at different levels  and compared these options to the coverage actually achieved  in seven example test pools . although assembly efficacy decreased at lower sequencing depth, even at 25x it was possible to outperform the wgs approach. the difference between 75x and full coverage was marginal. we also noted that decreasing the depth of read coverage has a greater effect on the output of longer contigs than on that of shorter ones.

the optimal pool size depends on the current costs and the level of automation available for library production at each sequencing facility. in our case, we concluded that sequencing  <dig> fosmids per pool at a target coverage depth of 75× offered the optimum trade-off between cost and quality,. in the following sections, we describe the fp production mode used for the spruce genome project, which has so far reached about 2x genomic coverage using fps .

properties of fps and contigs
after sampling with vector sequences, the flanks of the latter were merged with the sampled genome fragment and could generate chimeric sequencing reads, after which contig ends could contain small fragments of the vector. this could help in evaluating length distribution of the sampled fragments and correctness of their assembly. in order to do that, we randomly selected  <dig> fps which represented the four different vectors that we tested . we searched for vector ends in all of the  <dig> , <dig> contigs assembled after sequencing of these pools. there were  <dig>   contigs that contained at least one vector end. by allowing not more than  <dig> of the last contig base pairs to fall outside the blast hit to the vector end sequence,  <dig> % of such vector fragments were found at the very end of the contig . of the  <dig>  contigs investigated,  <dig>  contained two vector fragments. in  <dig>   of these cases, both vector start and vector end were found in the correct orientation. nearly all of these “proper” contigs had lengths in the expected range  . we utilized the number of vector/insert junctions in raw reads as a control to estimate the actual number of fosmid clones in each pool. in general, there was good agreement between the estimates and the intended target number of fosmids . although at the earlier stage of development, it helped to understand that in some cases the true numbers of fosmids were as low as 50% of what was aimed for.figure  <dig> 
quality parameters of fps. a, cumulative assembly length of contigs from  <dig> fps in the production set longer than a given threshold. each colored line represents a distribution of total assembled length per pool by taking into account contigs longer than the specified length . b, length distribution of contigs that contained both fragments that matched start and end of the vector sequence . the expected range length was 27… <dig> kbp, hence the outliers emerged due to either damaged fosmids or mis-assembly. c, distribution of coverage across different contigs in pools . bins of the histogram represent the number of fps that have coverage not worse than the threshold specified in the color legend. for example, the highest point of the green line tells that there were  <dig> fps in which 97% of contigs were covered at least 10x . a, b, c.



contamination screening and assembly optimization
an unavoidable drawback of bacterial cloning was the presence of the fosmid cloning vector and of hitch-hiking genomic e. coli dna in the dna preparations. as the vector length could be up to  <dig> kbp, sequencing these fragments imposed an extra cost to the around  <dig> kbp of the fosmid inserts. additionally, the sequences of the chloroplast and mitochondrial genomes of p. abies <cit>  were recurrently sampled in parallel with the nuclear dna, hence were desirable to filter out efficiently. to achieve this, we applied two rounds of filtering against these known contaminants. regarding e.coli, we considered both the whole genome sequence and, in particular, known transposable elements. firstly, all reads were mapped to the contaminants using samtools  <cit> . secondly, since the mapping might not give perfect results, assembled contaminant contigs were also identified by blast  <cit> . both contaminant reads and contigs identified as being of non-chromosomal origin were removed before collecting statistics for assembly optimization. the fractions of dna from vector  and chloroplast  were consistent and at the expected levels across all pools. in contrast, we noted that the levels of e. coli and mitochondrial dna were very variable across pools in the early phase of the production mode, sometimes being responsible for up to 50% of the data. high levels of e. coli reads presumably resulted from the preparation of fosmid dna from e. coli cells, while high levels of mitochondrial dna presumably stemmed from enrichment for mitochondrial dna during preparation of genomic dna from the original spruce tissues. although the exact reasons for these problems were never fully identified, in the later production phase , the levels of e. coli and mitochondrial dna stabilized at  <dig> % and  <dig> %, respectively. special care was needed to remove vector sequence from the fosmid vector/insert junction. all contig ends mapped with blast to the vector sequence were therefore removed at the length of  <dig> bp. finally, we also removed all contigs shorter than  <dig> bp because their detailed investigation usually revealed severe mis-assembly problems, such as composition of only unpaired  reads, wrong paired end orientation, abundance of abnormal insert sizes between paired reads etc.

after contamination screening, we optimized assembly performance by varying the word length k for the clc bio de novo assembly algorithm in the clc assembly cell software. results of assembling fps with different values of k  were compared by means of frc curves  <cit>  , and we concluded that the optimal value of k for these assemblies was  <dig>  we also tried varying parameters related to de bruijn-graph “bubbles”, which are typically used to allow for the assembly of heterozygous alleles. as the fps should be essentially haploid, this parameter was not expected to affect the assembly performance, and indeed we observed no differences when varying the parameters for bubble length, bubble fraction, and bubble length difference .

resolving repeats in the assembly
high copy-number repeats make up about 70% of the norway spruce genome  <cit> . because of this, one of the main advantages of using the fp technology in this project was that it gave us the ability to resolve repeat regions more efficiently. in the production mode, we observed that most of the pools yielded > <dig> mbp, more than half of the length expected, assembled in contigs greater than  <dig>  bp in length. most of the pools had at least 95% of the contigs covered by paired reads to a depth of greater than 10x . figure 3a demonstrates how the same genomic regions of four previously sequenced bacs  <cit>  mapped to numerous contigs from different fps. however, sequence identity between different instances of the same repeat was not perfect. we hoped that it would be possible to resolve a major proportion of repeats within an fp, and that this proportion would be higher than when using the wgs approach. indeed, mapping known p. abies repeats to wgs- and fp-derived contigs showed a dramatic increase in the number of resolved repeats observed in the fp assemblies compared to the wgs assembly . in wgs, very few repeat-like regions were found in the middle of contigs and they were usually short. in contrast, fp contigs were rich in repeats, and in many cases hits  matched a significant fraction of the corresponding library sequence . blast alignments confirmed that the repeat regions typically had less than perfect identity to the library sequences  and hence to each other, thus repeats within a fp could often be resolved unambiguously .figure  <dig> 
repeat positions in the assembly. a. four available picea abies bac sequences. contigs assembled within each of the nine test pools were mapped to the  <dig> bacs  available for the p. abies genome. multiple hits to the same bac regions from different fps were identified . multiple hits from the same fp were also common, although they are not shown here because of a lack of resolution. b. library repeats mapped to contigs assembled from two different sequencing pipelines: whole genome sequencing versus fp sequencing. from both wgs and fp assemblies , random subsets of  <dig> contigs  were aligned against the repeat library presented for spruce genome in  <cit> . horizontal coordinates reflect percent identity of contig blast hits against sequences from the repeat library. vertical axes represent the total length of each contig, so that hit points are rescaled and placed proportionally to the length of the respective contig. filled boxes represent length of a contig hit to a repeat sequence, at the appropriate position relative to the contig length. the hit lengths range from  <dig> bp  to over  <dig> bp. c. example contig likely assembled to full original length, with read coverage, vector fragments, and repeat regions. horizontal axis: length of the contig in base pairs. vertical axis: read coverage; brown color: unique read mapping; red color: redundant read mapping. letters s and e: 3′ and 5′ termini of the vector sequence, respectively . boxes: repeat regions in the contig. height denotes original length in the repeat library, width represents locally aligned region of the repeat. a, b, c.



we summarized the repeat situation in the fp assemblies used for genome assembly lock v.  <dig>  as follows: there were  <dig> fps with around  <dig>  individual fosmid inserts sampled. they were assembled to  <dig> , <dig> contigs , i.e.  <dig>  contigs per pool instead of expected 600- <dig> full fosmid inserts. mapping the contigs to the repeat library gave  <dig> , <dig> blast hits with identity higher than 78%. thus an average contig sequence contained  <dig>  identified repeat regions against potentially versus  <dig> potential repeats at its flanks that we failed to assemble. on the other hand,  <dig> % of the contigs did not contain any repeat regions identifiable with this method. the assembly termination in such contigs could be explained by either unknown repeats or other reasons. nonetheless, more than 60% of identifiable repeats were resolved. for comparison, in the four bacs we identified  <dig> repeat hits which gives a very close estimate of repeat content per sequence length .

sampling on a whole-genome scale
by aligning the fp contigs to the wgs contigs, we were able to demonstrate that the pools sample the known genome sequence evenly. at the point in production where the whole p. abies genome had been sampled around two-fold with fosmids, we utilized the available fp assemblies and the wgs assembly to model this process. we randomly ordered fp contig sets, mapped them consecutively to the wgs assembly, and recorded how much sequence from the latter was brought in for the first time by a given fp. the cumulative plot  demonstrated that, at each step, novel genome fragments were gained. in other words, there was no significant bias towards sampling particular genomic regions , and we approached the full genome complement asymptotically.figure  <dig> 
discovery of novel regions of the genome by recurrent sampling with fosmid pools. the diploid whole genome shotgun  assembly was used as a reference. all the available  <dig> fps assemblies were aligned against the wgs assembly. only contigs longer than  <dig> bp and alignments longer than  <dig> bp  were counted. blast mapping masked wgs sequences at discrete points every  <dig> bp along the contig coordinates. cumulative statistics were collected in random fp order. upper panel: total assembled length of fp  versus the summary length of wgs contigs having matches to fp contigs . lower panel: fraction of current fp contig length mapped to wgs regions which had not been found  in previous fp assemblies.



scaffolding with wgs data
since mate-pair sequencing libraries are costly and time-consuming to generate, it is generally impracticable to generate data for each fp using this approach. instead, in this project we explored the possibility of scaffolding each pool using wgs data. two wgs libraries of different insert sizes  were generated from the diploid tissue and sequenced to depths of 20x and 25x physical coverage, respectively. for each fp, the two libraries were mapped to the pool contigs and used for scaffolding with a new software tool, besst  <cit> , available at https://github.com/ksahlin/besst. special care was taken to avoid false links caused by reads from another part of the genome being mapped to a pool, firstly by imposing very strict mapping criteria , and secondly by disqualifying all potential joins with any ambiguities in the linking graph. as exemplified by the test pools, this scaffolding procedure increased the total length of contigs longer than  <dig> kbp from 43% to over 75% of the expected assembly size .

discussion and 
CONCLUSIONS
we developed a procedure for fp preparation, sequencing, assembly, quality control, and contig post-processing. we then applied the technology in a hitherto unparalleled large-genome sequencing project. the repeat-rich  <dig> gbp norway spruce genome was decoded using solely massive parallel sequencing  <cit> . the fp pipeline became an indispensable part of the project. we found, during the early stages of the work, that it was possible to identify and characterize biologically relevant functional and structural elements of the genome, such as the different types of repeat and regions homologous to known plant genes, and to assess the similarity of the results to those of wgs assembly . we also demonstrated and utilized the ability of fps to assemble longer contigs and to incorporate repeats at much higher rates compared to wgs. the entire fp processing pipeline could be run on parallel nodes with modest memory capacity  and each pool required less than  <dig> cpu hours; the assembly part usually took less than  <dig>  hours. for comparison, the diploid wgs assembly was run on a  <dig> cpu computer with  <dig> tb ram for more than  <dig> wall clock hours.

how scalable is fp sampling of this large genome, which should by definition be random? even after having sampled around  <dig> gbp from the genome with fps, approximately 20% of each new fp appeared to contribute novel sequence. it is often important to estimate the distribution of gaps in a wgs assembly. to do this, one can map fosmid contigs over the wgs set. this estimation is likely to be biased by a non-uniform distribution of fp contig length. because of this, only contigs within a certain length range  should be used, although it will still not be possible to estimate gaps longer than  <dig> kbp.

however, the major challenge in using fps is the merging of fp assemblies into the wgs assembly. state-of-the-art scaffolders are unable to deal with two alternative contig sets. furthermore, the wgs contigs are by definition unique, whereas fp contig sets may overlap between pools. in diploid assemblies, certain pairs of homologous wgs contigs can represent two alternative allelic forms of the same region of the genome, while fp contigs should effectively lack such redundancy. we addressed this problem using a newly developed software package, gam-ngs  <cit> , which finds matching  regions between fp and wgs assemblies by ‘by taking into account both these constraints and read mapping information.

electronic supplementary material
additional file 1: table s1: read qc parameters of fastq_quality_filter . table s2: expected vs. evaluated number of fosmids per pool. figure s1: total length of contigs per pool as function of coverage. figure s2: feature response curves used for optimization of read quality filtering before assembly. figure s3: feature response curves used for optimization of k-mer length for clc assembly. figure s4: mapping of wgs to fp contigs. 

 competing interests

the authors declare that they have no competing interests.

authors’ contributions

aa performed the computational analysis and wrote the manuscript. bn, es, and jl conceived the production framework. bn, fv, es, and jl participated in the computational analysis and data interpretation. ry, pdj, and ccw developed the fosmid pool production technology. bk, ms, and bt contributed with clcbio assembler software by adjusting it to the fp framework. all authors worked on the manuscript. all authors read and approved the final manuscript.

