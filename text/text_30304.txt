BACKGROUND
changes in the order of genes in a genome are caused by two categories of mutational events: genic events, which include de novo gene births, deletions, duplications, and genomic rearrangements, which include chromosome fusions and fissions, segmental translocations or segmental inversions. synteny blocks are composed of those genes that retain an ancestral organisation despite these events, and one way to understand how genic events and genomic rearrangements affect genome evolution is to identify such synteny blocks. the extremities of synteny blocks also define the positions of breakpoints where rearrangements took place. precisely defining synteny blocks thus allows, in turn, an accurate definition of breakpoints  <cit> , which has important implications from ancestral genome reconstruction  <cit>  to the understanding of genome mutational processes in healthy and disease states  <cit> . in addition, it has been shown in eukaryotes that some synteny blocks may be under negative selection due to long-range functional constraints between genes and regulatory elements  <cit> .

several methods have been developed to identify synteny blocks from extant chromosomes comparisons. in the field of bacterial genome evolution, algorithms tend to focus on the notion of “gene team”  <cit> , which denotes a set of genes that stay in the vicinity of each other with no constraint on gene order. such methods include team  <cit> , homologyteams  <cit> , cccpart  <cit> , closeup  <cit>  and mcmusec  <cit> .

however, because gene order conservation in eukaryotes is stronger  <cit>  compared to bacteria, algorithms that infer synteny blocks in eukaryotes tend to account for this extra constraint. grimm-synteny  <cit> , i-adhore  <dig>   , diaghunter  <cit> , lineup  <cit> , fish  <cit> , dagchainer  <cit> , symap  <cit> , colinearscan  <cit> , cinteny  <cit> , orthocluster  <cit> , syntenator  <cit>  and cyntenator  <cit> , mcscan  <cit>  and mcscanx  <cit> , enredo  <cit> , and drimm-synteny  <cit>  are the main algorithms developed to infer synteny blocks in eukaryotes. many were applied to model species such as arabidopsis thaliana and rice, among plants, and mammals such as human, mouse, dog and rat, among metazoans. these algorithms can be broadly classified according to their heuristic and features.

four distinct heuristics are used to infer synteny blocks. the first builds two-dimensional matrices filled with homologies  <cit> . the algorithms analyse the matrices with procedures that resemble those developed in the field of image analysis.

a second heuristic uses optimisation techniques and dynamic programming  <cit> . many of the methods that fall in this category are greedy, although with the benefit of often providing more flexibility. indeed, the choice of the cost parameters in the objective function, allows the user to accurately account for different synteny block characteristics. a third heuristic is based on a modification of the smith-waterman  <cit>  approach  <cit>  while the last type of heuristic relies on graph editing  <cit> .

some algorithms compare genomes by performing pairwise comparisons of genomes whereas others perform multi-genomes comparisons. combining pairwise comparisons does not capture the additional significance of genes that are conserved in more than two regions, resulting in under-estimation of cluster significance  <cit> . multi-genomes comparisons are especially relevant for highly diverged synteny blocks and whole genome duplication  analysis. however, multi-genomes comparisons usually require genomes to be reduced to a set of markers shared between all genomes, thus limiting the resolution of the analysis.

the transcriptional orientations of genes on the chromosome are used by some algorithms and provide informations about micro-rearrangements and may contribute to making the correct choice when there are several possibilities to extend a synteny block. in addition, accounting for gene orientations increases the statistical relevance of small synteny blocks, see .

gene duplications increase the complexity of identifying synteny blocks. duplications can be dispersed, or in tandem when the two copies are adjacent. tandem duplications create blocks of tandem duplicates that disrupt local gene adjacencies without strictly breaking the synteny. in order to overcome blocks of tandem duplicates, algorithms may propose to collapse tandem duplicates into one occurrence by remapping their coordinates  <cit>  or by performing ad hoc editions of the graph of adjacencies  <cit> . wgds complicate matters further when new genes copies have been randomly inactivated throughout the genome. yet some algorithms identify highly diverged synteny blocks or double conserved syntenies caused by wgds  <cit> .

once an algorithm has returned putative synteny blocks, a statistical validation can assess their relevance given the input data. a putative synteny block is more likely to be found by chance in a comparison involving a large number of homologies than when few homologies are available. a putative synteny block is also less likely to have occurred by chance if it is composed of a large number of ordered adjacent homologies than if it is composed of a few unordered homologies separated by gaps. statistical validation may involve either a p-value, an e-value or a score. the analytical calculation is not a simple task  and there is no standard p-value yet established in the field. simulations are often used to bypass this difficulty, although they are usually time consuming and not very realistic.

to infer a synteny block, each algorithm uses parameters such as the maximum gap gapmax to define the maximum allowed distance between two genes in a synteny block. the gapmax parameter value can be optimised through a theoretical exploration, saving the need to test numerous different values before finding the optimal value  <cit> .

another important variable is the metric used to allow gaps between genes within a synteny block. some algorithms use the diagonal pseudo distance  <cit>  whereas others use the manhattan distance  <cit> .

finally, a useful feature is to represent synteny blocks graphically, such as diagonals in a matrix  <cit> , circular views  <cit>  or alignments  <cit> .

here, we are interested in reconstructing synteny blocks to capture the signals of ancestral gene order and gene orientations in eukaryotic genomes. to this end, we developed phyldiag, a user-friendly method to identify synteny blocks between two genomes using reconstructed phylogenetic gene trees. the full evolutionary history of each ancestral gene is taken into account in the form of those phylogenetic gene trees, which include in particular gene losses, duplications, 1: <dig> but also 1:many and many:many homology relationships. all phyldiag parameters can either be set automatically or be specified by the user. a p-value calculation provides a statistical basis to select significant blocks and a utility provides graphical representations of identified synteny blocks. users may also chose among several metrics to allow gene gaps within a synteny block. phyldiag accounts for tandem duplications and gene orientations, and is thus able to accurately identify small synteny blocks. among algorithms that already account for gene order and gene orientations, only i-adhore  <dig> , fish and enredo also handle tandem duplications, although they do not use gene trees reconstructions. here we compare phyldiag to i-adhore  <dig>   <cit>   using both real data and simulations.

by introducing the concepts of “tandem blocks” and “homology packs”, phyldiag overcomes the disruption of gene adjacencies caused by blocks of tandem duplicates. as in other existing methods, phyldiag allows gaps between genes within synteny blocks up to a customizable maximum gap parameter, and thus bypasses small genic indels  and annotation errors. in this study, we also benchmark different metrics used to allow these gaps within a synteny block on simulated data, and show that the choice of the metric has a direct impact on performances.

methods
after providing basic definitions, we describe the phyldiag algorithm, which consists of four main parts. first, phyldiag filters extant genomes. second, phyldiag rewrites the genomes from lists of genes to lists of tandem blocks. third, phyldiag extracts synteny blocks as diagonals with no gaps by considering the order and orientations of tandem blocks on the chromosomes and then merge these diagonals as long as merges do not generate gaps longer than gapmax. finally, phyldiag computes a p-value to remove diagonals that are likely to be produced by chance rather than being a signature of an ancestral gene order. before performing these tasks phyldiag also calculates a recommended value for the maximum gap gapmax to free the user from testing multiple values before finding the appropriate one.

basic notations and definitions
genomic conventions
s is a species. given two species sa and sb, lca is the last common ancestor of sa and sb. a species sa has a genome ga composed of chromosomes.  is a chromosome of ga with na oriented genes ga,k. the chromosome is chosen to be ordered from ga, <dig> to ga,n and not the reverse, thus defining a reference orientation. the orientation of a gene is determined by the orientation of transcription into rna, and the orientation of ga,k, denoted o, is equal to + <dig> if transcription is performed in the same direction as  otherwise o= − <dig>  a sub-list of ca is often denoted ca where is  is the index of the starting  gene in the sub-list.

synteny block, intuitive definition
intuitively  we define a synteny block  between two species sa and sb as a set of neighbouring genes with gene content, gene order and gene orientations conserved during the evolution from lca to sa and sb. two genes are neighbours if they are separated by less than a user-defined parameter gapmax. during evolution we consider that a set of neighbouring genes remains a synteny block until: − a chromosomal rearrangement creates a breakpoint within the sb and changes the order or the orientations of genes

− the gap between any two neighbouring genes, caused by gene insertions and/or gene deletions, exceeds gapmax genes 



an ancestral sequence of genes remains a sb even if tandem duplications occur within the synteny block.

gene family and homology
the evolution of a gene can be represented by a rooted binary tree called a gene tree. the root of a gene tree is the first ancestral gene, the nodes correspond to events of speciations or duplications that occurred during the evolutionary history of the descending genes, and the leaves of the gene tree correspond to extant genes originating from the first gene.

two genes are homologs if they are in the same gene tree. two genes are orthologs if they are in the same gene tree and if their last common event is a speciation. two genes are paralogs if they are in the same gene tree and if their last common event is a duplication. the homology relationship between two genes ga and gb is denoted . a homology relation defines classes of homologs, called families. an issue in comparative genomics is to define gene families and gene trees. sequence comparison algorithms provide measures  that make it possible to quantify the similarity between two sequences which may, in turn, be used to cluster genes that show high similarity, thus defining gene families. gene families can then be organised in phylogenetic gene trees using a vast choice of tree reconstruction methods. here, we use gene trees from ensembl  <cit> , built using the treebest pipeline  <cit> . since in this study we are interested in finding synteny blocks conserved from lca to sa and sb, we pruned all gene trees to define a gene family as a set of genes that come from a unique gene of lca. families are defined with these genes, so that two genes are in the same family if and only if they come from the same ancestral gene of lca. we note that, depending on the purpose of the analysis, phyldiag offers the possibilty to prune gene trees at an ancestor that precedes lca, so that more paralogy relationships are included in the gene family, see .

considering the species tree of figure 1a and the original gene tree of figure 1b, the figure 1c describes how we pruned the original gene trees to define our families. ultimately, the roots of the gene trees correspond to a unique gene of lca.figure  <dig> 
definition of gene families based on gene tree pruning. figure a represents a species tree with two extant species s
a and s
b, and their last common ancestor lca. figure b represents a gene tree within the species tree. this gene tree is represented in simple 3d schema for better visualisation. in a gene tree, squares represent duplication events and circles represent speciation events. figure c shows how the original gene tree of figure b is pruned in order to define families that correspond to a unique gene of lca.



step 1: filter extant genomes
when comparing two species sa and sb, the first step of phyldiag is to propose a filtering of extant genomes. there are two filters: − inbothspecies removes genes that have no homolog in the other genome. this only retains genes that previous algorithms call “anchor genes” and it is the classical way of filtering extant genomes. this filter is well suited for finding functional clusters of genes.

− incommonancestor removes genes that arose de novo specifically after lca. the removed genes are those that have no ancestral gene in lca and they are called “lineage specific genes”. the selective removal is possible using the pre-computed phylogenetic gene trees. this step is equivalent to retaining “anchor genes”, but here, using gene trees, the procedure also keeps genes that have lost their ortholog in the other species because of a deletion since lca. this filtering is well suited for reconstructing ancestral gene orders.



both filtering get rid of the noise introduced by lineage specific genes. phyldiag using the inbothspecies filter does not consider ancestral gene deletions as events that break the synteny whereas phyldiag using the incommonancestor filter does consider ancestral gene deletions as events that break the synteny.

it may also be advantageous in some specific cases of functional studies of synteny blocks to avoid filtering extant genomes thus considering de novo births of lineage specific genes as events that break the synteny.

depending on the desired purpose, phyldiag offers the possibility to easily choose between no filtering at all, the inbothspecies filter or the incommonancestor filter. since in this study we are interested in reconstructing the ancestral gene order, the incommonancestor filter is applied and extant genomes should now be considered to only be composed of genes that have an ancestral gene in lca.

step 2: build the matrix of homology packs
extracting sbs conserved in ga and gb corresponds to extracting sbs for each comparison of chromosomes ca of ga and cb of gb. indeed, genes in two different chromosomes, if they were in synteny before, have been separated by a chromosomal rearrangement and the synteny is broken anyway. thus it is justified to limit the search to pairs of chromosomes rather than pairs of genomes.

tandem blocks, an abstraction of genes
in a chromosome, under a parsimonious reasoning, homologous and adjacent genes are tandem duplicates. here, we refer to such blocks as “tandem block”. formally, a tandem block  of a chromosome c is an uninterrupted sub-list of c that contains paralogous genes. for instance, if the  <dig> paralogous genes g <dig> g <dig> and g <dig> are in an uninterrupted row in c, the corresponding tb is the sub-sequence c=. the size of a tb is equal to the number of tandem gene copies that it contains, for instance the last tb has a size  <dig>  a gene which has no tandem duplicate is in a tb of size  <dig>  by convention tbs are always maximum, i.e. a given tb cannot be contained within another tb. like genes, tbs also have an orientation. however, in a tb, tandem duplicates may or may not all have the same orientation. when they all share the same orientation, the tb itself is oriented with the same orientation as the orientation of the genes thus, either o=+ <dig> or o=− <dig>  when tandem duplicates have different orientations, the orientation of the tb is considered to be unknown, and .

it is possible to rewrite chromosomes as a unique ordered list of oriented tbs. for instance  can be rewritten  where na is the number of tbs in ca. na≤na and na=na if and only if there is no tandem duplicate in ca.

a tandem block tba of sa is said to be in a homology relation with a tandem block tbb of sb if the genes of the two tbs are in the same family. we will also say that in this case tba and tbb are homologs or even that tba and tbb are homologous tandem blocks. using the same notation as for genes,  means that tba and tbb are homologs. if tba and tbb are homologs, they share a last common ancestral gene in lca and we note lcag the last common ancestral gene of tba and tbb. lcag is defined as soon as it is observed that . of note, two homologous tandem blocks tba and tbb are not necessarily of the same size if deletions or tandem duplications took place specifically in the branches of sa or sb after lca.

matrix of homologies
the classic matrix of homologies  of two chromosomes  and  is defined such that:
  

where ga• gb is the “sign” of the homology of ga and gb  

a mh can be represented as an array of values equal to + <dig> − <dig> or  <dig>  non- <dig> values correspond to homologies.

homology packs, an abstraction of homologies
a homology pack  is the set of homology relationships between the tandem duplicates of two homologous tandem blocks tba  and tbb . a hp is always maximum, i.e. a hp cannot be contained within another hp. graphically, a hp appears as a rectangle of non- <dig> values in a mh. each hp has a last common ancestral gene in lca denoted lcag and equal to lcag. tandem duplications generate vertical, horizontal, or rectangular hps in a mh, making it difficult to identify sbs as diagonals. however, the rewriting of a chromosome in a way that collapses these hps to unique values in the mh, as described above, greatly simplifies this problem. indeed, once ca and cb are rewritten as ordered lists of tbs, it becomes possible to define a matrix whose non- <dig> values correspond to hps of the two chromosomes ca and cb.

matrix of homology packs
given that ca is rewritten in  and cb is rewritten in , we introduce the matrix of homology packs  of the two chromosomes  and  defined such that:
  

whith tba∙tbb the “sign” of the hp of tba and tbb  

in other words, the matrix construction is the same as for the mh of ca and cb, with tbs instead of genes and hps instead of gene homologies. the only difference is that while genes always have a known orientation, tbs can have unknown orientations that generate hps with signs equal to . similarly, the mhp can be represented as an array of values equal to  or  <dig>  non- <dig> values correspond to hps. the x-axis corresponds to ca ordered from tba, <dig> to  and the y-axis corresponds to cb ordered from tbb, <dig> to . with this convention mhp <cit>  corresponds to the bottom-left corner, mhp corresponds to the bottom-right corner, mhp corresponds to the top-left corner and mhp corresponds to the top right corner of the array.

 gives a graphical representation of the transition between the mh and the mhp via rewriting chromosomes with tbs.

distances and gaps
the “gap between two tbs” on the same chromosome is the number of tbs between them.

the “distance between two tbs” is equal to the gap between these two tbs plus one. thus two adjacent tbs are at a distance one from each other.

as in definition  <dig>  in  <cit> , a set of tbs forms a “chain” with gaps ≤ gapmax if all consecutive tbs are separated by gaps ≤ gapmax tbs.

now, given a mhp, we define the “distance between two hps” as the 2d-distance between hps coordinates which depends on a distance metric. several distance metrics can be used in phyldiag: the euclidean distance , the chebyshev distance , the manhattan distance , or the diagonal pseudo distance  . equations for each distance metric can be found in . the cd yields the maximum of the distances on ca and cb, the ed yields the classical geometric distance, the dpd yields smaller distances between hps sitting close to the diagonal axis and therefore tends to provide a higher distance as the distance from the diagonal axis increases. in contrast, the md tends to yield smaller distances between hps sitting close to the vertical and horizontal axis.figure  <dig> 
distance metrics and frameworks used for the distance calculation. figures a, b, c and d represent the metrics available in phyldiag. distance values are calculated starting from the black dot. the warmer the colour, the closer the point from the black dot. considering that the user chose the dpd, when backslash diagonals are merged, the backslash framework of figure e is used for the distance calculation. for a slash diagonal merge, the framework of figure f is used. frameworks would have been built in the same fashion if another metric had been chosen.



we define the “gap between two hps” as the distance between these hps minus one, thus a gap between two hps depends on the distance metric used. a gap of  <dig> between two hps means that there is no gap and this corresponds to a distance equal to  <dig>  given a maximum gap gapmax, a set of hps forms a “cluster” if no gap between them is longer than gapmax.

step 3: extract putative synteny blocks as consistent diagonals
in the following section, we define the notion of consistent diagonals in a mhp and we formally define synteny blocks. then, we explain how synteny blocks generate consistent diagonals in mhps, and we describe how phyldiag extracts consistent diagonals. because some consistent diagonals may be due to chance, we next describe how they are validated as synteny blocks after succeeding a statistical test.

diagonals
in a mhp, a list of m hps ]k∈ forms a: − “slash” diagonal if .

− “backslash” diagonal if .



in both cases, xk  is the index of the homologous tb on ca  corresponding to the kth hp. in a mhp, a “slash” diagonal is thus a list of non- <dig> cells that goes up according to a direction from bottom-left to top-right and a “backslash” diagonal is a list of non- <dig> cells that goes down according to a direction from top-left to bottom-right. a “diagonal” is either a slash diagonal or a backslash diagonal. a diagonal with gaps ≤gapmax is a diagonal where all consecutive hps are separated by gaps ≤gapmax.

we define a “strict” diagonal as a diagonal that has no gap between its hps. thus, m hps form a strict slash diagonal if the list of m hps can be written ]k∈. similarly, m hps form a strict backslash diagonal if the list of m hps can be written ]k∈. in both cases,  is the position of the first hp of the diagonal.

we also define a “consistent” diagonal as a diagonal composed of hps with signs consistent with hps order: − either a slash diagonal only composed of hps with signs equal to either + <dig> or


− or a backslash diagonal only composed of hps with signs equal to either − <dig> or




in addition, we consider that the distance between two diagonals corresponds to the distance between their closest extremities.

synteny block, formal definition
we formally define a “synteny block” of m tbs with gaps ≤ gapmax of a comparison of two genomes ga and gb, as a chain of m tbs with gaps ≤ gapmax that, during the evolution from lca to sa and sb, remains a chain of m tbs with gaps ≤ gapmax. within a synteny block, tbs order is conserved and tbs orientations either remain conserved or change from a known to an unknown orientation. synteny blocks are chosen maximal, i.e. not included in another synteny block.

in addition we define a “strict synteny block” as a synteny block with no gaps between tbs . in , we show that a strict synteny block generates a strict and consistent diagonal in a mhp. following the reasoning in , using the cd distance metric, it is also possible to show that a synteny block with gaps ≤ gapmax generates a consistent diagonal with gaps ≤ gapmax. however, using the ed, md or the dpd distance metrics, a synteny block with gaps ≤ gapmax may generate a consistent diagonal with gaps >gapmax, although every consistent diagonal with gaps ≤ gapmax always represents a putative synteny block with gaps ≤ gapmax. it should be noted that, given the cd distance metric and a gapmax, our definition of a diagonal is similar to the definition  <dig>  of a “max-gap cluster” in  <cit>  with constraints on gene order and gene orientations.

extract strict consistent diagonals
algorithm  <dig> describes how phyldiag finds strict and consistent diagonals of hps in the mhp. first, chromosomes are rewritten with tbs and the mhp is built. then the mhp is scanned from left to right and from bottom to top. algorithm finddiagtype in , sets the diagonal type at the beginning of a strict and consistent diagonal extraction using the sign of the first hp if the sign is known or using the position of the second hp if there is a second hp.

strict and consistent diagonals are recorded as chains of ordered and oriented  ancestral genes. by convention the orientation of an ancestral gene lcag is chosen equal to the orientation of tba. however, if the orientation of tba is unknown, the orientation of lcag may still be inferred using the diagonal type of the current diagonal and a known orientation of tbb, see equation  <dig> 
  <dig>  

algorithm  <dig>  <dig> extractsbs
  

merge strict consistent diagonals
once strict diagonals have been returned, it is advantageous to merge diagonals which have the same diagonal type, as long as their extremities are in close proximity. depending on the allowed gap size gapmax, a limited number of errors of annotation and indels are thus allowed, and longer sbs are found that still reflect an ancestral arrangement of genes. it should be noted that this step possibly introduces micro-inversions within gaps of a diagonal, which will however always remain shorter than gapmax tbs. as we will see, the choice of the distance metric used to merge diagonals is crucial to limit or allow such micro-inversions, see .

the merging process is simple: diagonals are merged iteratively, starting by those separated by the shortest gap to those separated by the longest gap, as long as the gap remains below gapmax. for a given diagonal extremity, more than one other extremity may be situated at exactly the same distance. in this case, phydiag chooses to fuse the diagonals that maximise the number of hps in the diagonal that results from the fusion.

as described in the introduction, the dpd is used in adhore and diaghunter whereas the md is used in grimm-synteny, fish, cinteny and symap. although the cd and the ed have never been used to our knowledge in the context of synteny block inference we still included them in the benchmark presented in the ‘results’ section.
example of a merge between two diagonals. two chromosomes, c
a of n
a=  <dig> tbs and c
b of n
b=  <dig> tbs, are compared. the number in each tb is its size, arrows indicate tbs orientations and if a tb is represented as a rectangle it means that it has an unknown orientation. the mhp contains n
ab=  <dig> hps. during step  <dig>  phyldiag finds two strict backslash diagonals and  <dig> single hps. each strict diagonal contains  <dig> hps. if g
a
p
max=  <dig>  during the diagonal merging process, diagonals separated by a distance of  <dig> to g
a
p
max+1= <dig> are merged. consider that the user chooses the dpd metric, when reaching a distance of  <dig>  two possible fusions are theoretically possible, one between the two extremities of the strict backslash diagonals and another fusion between the single hp  and the extremity  of the leftmost strict diagonal. however since the sign of the single hp is not consistent with the diagonal type of the left-most diagonal, the second fusion is not performed. around the resulting consistent diagonal  three windows are drawn: w
a  on c
a contains  <dig> tbs and w
b  on c
b contains  <dig> tbs, and at last the window w
ab  contains  <dig> ×  <dig> cells and  <dig> hps. these windows are useful in section ‘step 4: statistical validation of consistent diagonals as synteny blocks’ for the p-value calculation.



given a maximum gap gapmax, users should be aware that, with reference to the formal definition of sbs given in section ‘synteny block, formal definition’, choosing another distance metric than the cd may return non-maximum sbs in the mhp. another reason that may lead to non-maximum sbs may come from the fusion of diagonals. as mentioned before, if during the fusion process more than one diagonal extremity is available to extend the current diagonal, phyldiag choses the extremity of the longest diagonal. however, it may be that fusing with a shorter one ultimately would lead to a longer diagonal once the iterative fusion process is complete.

in algorithm  <dig>  the merging process is encapsulated in the function mergediags that takes a list of strict and consistent diagonals and returns a list of consistent diagonals with gaps ≤ gapmax.

step 4: statistical validation of consistent diagonals as synteny blocks
we compare two chromosomes, ca and cb. ca has a length of na tbs, cb has a length of nb tbs and the comparison involves nab hps. during the comparison, phyldiag returns many consistent diagonals that correspond to putative synteny blocks, each characterized by its number of hps, its window wab and the maximum gap g between its tbs . figure  <dig> shows an example of a consistent diagonal of  <dig> hps contained in the window wab with a maximum gap g= <dig> tbs reached on ca. the window wab has a size  <dig> ×  <dig>  the chromosomal windows wa and wb are the projections of wab on each chromosome. wa has a length of la=  <dig> tbs and wb has a length of lb=  <dig> tbs. as in previous works , here distances and gaps between hps are calculated with the chebyshev distance metric which allows the most relaxed and method-independent sb definition.

a given consistent diagonal is a statistically significant signature of a sb if it cannot be obtained from a random distribution of tbs  up to a fixed probability threshold α. this is equivalent to selecting consistent diagonals that are unlikely to be the result of chance, which we wish to quantify here by a probability, a p-value.

we calculate the p-value of each consistent diagonal in five steps. considering a consistent diagonal of m hps contained in a window wab of size la× lb with a maximum gap between hps equal to g, the probability that such a consistent diagonal  arises by chance is denoted pval. to compute this value we first compute pd the probability of obtaining exactly k hps in the window wab, knowing the mhp density in terms of non- <dig> values. we next compute pg,2d, the probability that k hps in wab are spaced with gaps ≤ g, knowing that there is at least k hps in wab. we also calculate po,o the probability that k hps have consistent order and signs. by summing and multiplying these probabilities in an appropriate manner we calculate pw, the probability corresponding to a window sampling search. finally, we use the former probability to compute the p-value pval corresponding to a whole genome comparison. the formulas of the two first probabilities are based on  <cit>  respectively and the passage from pw to the pval is based on  <cit> . here we combine these probabilities and add a last probability, po,o, to account for tbs order and orientations.

probability accounting for the density
using the reasoning of  <cit> , in a mhp of size na× nb without dispersed paralogy , involving nab hps, the probability of obtaining exactly k hps in a window wab of size la× lb is:
  <dig>  

the subscript d stands for density because this probability takes into account the density of the mhp. the demonstration of this formula is in .

probability accounting for the maximum gap between hps
using the reasoning of  <cit> , the probability that k marked tbs  form a chain with gaps ≤ ganywhere within a window composed of l tbs is:
  <dig>  

where wkg= k+g is the maximum length of a chain containing k tbs with a maximum gap g, and
  <dig>  

the number of ways of arranging k tbs so that they form a chain with gaps shorter or equal to g anywhere within a window of l tbs even if wkg>l+ <dig>  to address edge effects.

thus, knowing that wab contains at least k hps, the probability that wab contains k marked hps spaced with gaps ≤ g is:
  <dig>  

probability accounting for hps order and signs
then, if k hps are close enough, the probability that they form a consistent slash diagonal with gaps ≤ g is:
  <dig>  

where  and p is the probability that one hp sign equals s, this probability calculation is explained in .  is the probability that k homologous tbs of chromosome cb have the same order as the corresponding k homologous tbs of chromosome ca and  is the probability that the k signs of the hps are consistent with a slash diagonal. pbackslash is defined similarly.

thus, if k hps are close enough, the probability that they form a consistent diagonal with gaps ≤ g is:
  <dig>  

the subscript o,o stands for consistent tbs order and tbs orientations. the demonstration of the po,o formula can be found in .

probability for a window sampling scenario
now, in a mhp of size na× nb without dispersed paralogy , involving nab hps, the probability that in a window wab of size la× lb there is at least one consistent diagonal containing at leastm hps spaced with gaps ≤ g is:
  <dig>  

the subscript w stands for window because this probability corresponds to a window sampling  <cit>  scenario. only varying parameters are shown in the right-hand side of the equation in the preceding formula. this formula is explained in .

probability for a whole chromosome comparison
finally, since phyldiag performs a whole chromosome comparison, it is not possible to use the probability of a window sampling method that would underestimate the probability to find a consistent diagonal by a factor of o. thus, relying on the reasoning of section  <dig>  of  <cit>  we adjust the former probability to compute the probability corresponding to a whole chromosome comparison.

in a mhp of size na× nb containing nab hps without dispersed paralogy , the probability of finding at least one window wab of size la× lb containing at least a consistent diagonal of at leastm hps spaced by gaps ≤ g can be approximated by:
  <dig>  

where  is the number of windows of width la and height lb in the mhp such that no window overlap with any other window. the underlying assumption of this formula is justified in  and examples of calculation are performed in .

in algorithm  <dig>  the statistical validation is encapsulated in the function statisticalvalidation that takes a list of consistent diagonals as input and returns statistically validated sbs.

estimation of a recommended maximum gap parameter
all algorithms designed to identify synteny blocks use a maximum gap parameter  to allow gaps in sbs. however, the user may find it difficult to estimate the optimal value for this parameter. in order to avoid guessing or multiple trials before finding the optimal gapmax value, phyldiag uses the dependency between the probability of finding a consistent diagonal of m hps spaced by gaps ≤ gapmax and the gapmax value. the complete reasoning used to calculate the recommended maximum gap parameter can be found in .

viewer
phyldiag includes a utility to visualise the mhp of a pairwise comparison of chromosomes with colours and surrounding black rectangles for sbs recognition. this viewer writes a vectorial image allowing an infinite zoom on details with no pixelisation. figure 4a shows an example of the viewer during the comparison of the human x chromosome with the mouse x chromosome. if more information about a region of the mhp is required, a zoom can be performed by specifying the desired chromosomal regions. if these are small enough, more information is shown, such as hps signs, oriented tbs on each axis, the size of each tb and colours for homology recognition. grey tbs represent tbs that do not have hps in the mhp, but they have hps elsewhere in the pairwise comparisons of genomes, in another pairwise comparison of chromosomes. figure  <dig> was produced with the viewer and shows such informations. the user may also visualise the mh, for example to study the genic composition of a tb.figure  <dig> 
representations of a comparison between the human and the mouse x chromosomes, produced from the same input data by phyldiag  and i-adhore  <dig> .2a . the maximum gap parameter g
a
p
max is equal to  <dig> and the merging process used the dpd metric in both cases. in figure a each axis displays explicitly the paths to the files containing the relevant genome data, the name of the chromosome and the chromosomal window range. as in adhore sbs identified by phyldiag are surrounded by a rectangle and each sb is drawn in a specific colour. in figure b blue dots represent a confidence interval around each sb drawn in yellow. the long synteny block in the middle of the adhore mhp is in two parts in the phyldiag mhp because the two extremities are spaced by a distance higher than  <dig> using the dpd metric. by default adhore has a special feature using extremities of diagonals during its merging process, however this feature cannot be deactivated which may lead to undesired merges.



implementation
the complete algorithm has been implemented in python. pairwise comparisons of chromosomes are performed in parallel since they are independent. in algorithm  <dig>  the mhp matrix is stored considering that it is a sparse matrix to reduce memory usage and the merging process is optimised. combinations in probability formulas are computed using pascal’s rule and dynamic programming. on a single  <dig>  ghz processor with  <dig> gb ram, loading the data in memory requires  <dig> seconds, and the running time for the pairwise analysis of the human and mouse genomes requires less than  <dig> seconds. without any optimisation of the memory allocations the peak of ram consumption is  <dig> mb, thus a standard personal computer can run phyldiag.

RESULTS
to evaluate the performances of phyldiag, we performed a comparative analysis with i-adhore  <dig>   <cit> , a state-of-the-art algorithm used in many recent studies. to make comparisons possible however, we used a version of the program provided by the authors. indeed, i-adhore  <dig>  first rewrites genomes in tbs like phyldiag, but allows a user-defined “tandem_gap” between genes in a tb. in version  <dig> , the minimal tandem_gap is  <dig>  and it is not possible to set the tandem_gap to  <dig>  as in phyldiag. in the version provided  this option is enabled.

when adhore compares two chromosomes, it first generates “baseclusters” which correspond to phyldiag’s sbs. adhore uses the dpd metric to build baseclusters containing gaps ≤“gap_size” in the matrix of homologies. adhore also uses the “prob_cutoff” parameter for the statistical filtering and a last parameter is the “q_value”, a real value between  <dig> and  <dig>  indicating the minimum r <dig>  that a cluster should display.

comparison with i-adhore  <dig> .2a on real data
in a first comparison, we provided the same input based on real genomic data to phyldiag and adhore. we used the human genome  and the mouse genome  of ensembl v <dig>  as explained in section ‘gene family and homology’, families correspond to genes that are descended from a unique gene of lca= euarchontoglire.

phyldiag computes a recommended gapmax of  <dig> tbs for the human-mouse comparison. we therefore set a gapmax parameter of  <dig> and we chose a probability threshold α =  <dig> × 10− <dig> for phyldiag. i-adhore  <dig> .2a was set with tandem_gap= <dig>  gap_size= <dig>  prob_cutoff=1×10− <dig> and q_value= <dig>  . figure  <dig> compares the distributions of synteny block lengths of adhore and phyldiag using the md distance metric. the two distributions are not different from each other , and show that neither methods suffer from strong biases in over or under detection of synteny blocks in a given size range. of note, phyldiag returned  <dig> significant sbs of  <dig> hps out of  <dig> consistent diagonals of  <dig> hps. these are not shown in figure  <dig> because adhore does not report sbs of size  <dig>  phyldiag statistically validated all consistent diagonals containing more than  <dig> hps as significant synteny blocks.figure  <dig> 
synteny block lengths distribution as computed by phyldiag  and adhore . each bin has a width of  <dig> units of length , apart from the first bin that contains sb lengths from  <dig> to  <dig> hps. adhore uses the dpd distance metric whereas phyldiag uses the md distance metric.



comparison with i-adhore  <dig> .2a on simulated data
our simulator first designs an ancestral genome ganc with a user defined number of genes and chromosomes. the lengths of chromosomes in ganc are expressed in number of genes, and are determined randomly. simulated evolution gives rise to the two extant genomes ga and gb of two extant species. the simulator performs genic events, which include de novo gene births, deletions, duplications , and genomic rearrangements, which include chromosome fusions and fissions, segmental translocations or segmental inversions. the evolutionary scenario is calibrated so as to fit the known evolution of the human and the mouse genome from the euarchontoglire genome using phylogenetic gene tree reconstructions from ensembl compara version  <dig>  see  for a more detailed description of the simulator.

we performed  <dig> simulations of the evolution of the human and the mouse genome, and analysed them with phyldiag and adhore to identify sbs. the phyldiag merging process was performed with the  <dig> different distance metrics . for adhore the dpd is the only distance metric available. as in the comparison with real data, since the simulation is calibrated to fit real evolutionnary rates, the recommended gapmax found by phyldiag is still  <dig>  results of phyldiag with a gapmax= <dig> and adhore with gap_size=  <dig> are shown in table  <dig> table  <dig> 
results of synteny block identification with phyldiag and i-adhore <dig> .2a, both using a
gap
max
= 5



analysis without gene orientations

analysis with gene orientations
since adhore only returns sbs containing at least  <dig> hps, we only consider phyldiag’s sbs containing at least  <dig> hps.



coverage is the fraction of the number of gene families  contained in sbs over the total number of ancestral genes conserved in both the simulated human genome and the simulated mouse genome. n <dig> is the length of the sb such that all sbs of greater lengths represent 50% of the ancestral genes contained in sbs. sensitivity is the fraction of the number of correctly inferred ancestral adjacencies over the total number of ancestral genes conserved in both the simulated human genome and the simulated mouse genome. specificity is the fraction of the number of correctly inferred ancestral adjacencies over the total number of inferred ancestral adjacencies, false inferences included.

specificity and sensitivity are calculated twice: first by ignoring gene orientations , and second by taking gene orientations into account .

results show that phyldiag with the dpd, and adhore obtain similar results when we do not consider gene orientations during the analysis. interestingly, simply using the ed, the cd or the md metrics allows phyldiag to achieve better sensitivity and specificity than adhore . in addition, as soon as gene orientations are considered in the analysis, phyldiag improves substantially, in part because of equation  <dig> 

discussion
we have compared phyldiag to i-adhore  <dig> , a state-of-the-art algorithm including advanced features which are not present in phyldiag, including the possibility to identify sbs in the “twilight zone”, i.e. sbs highly diverged or separated by a wgd, where many gene deletions may have occurred. adhore uses “profiles” across more than two genomes to identify poorly conserved sbs, for example due to long divergence times. these features were not exploited here because unlike adhore, phyldiag only performs pairwise comparisons of genomes since our primary interest is to identify sbs in closely related species.

we explored different distance metrics to measure distances in matrices of homology, and found that the dpd used in adhore, which favours fusions of diagonals along ±45° axes in the mhp , is not optimal. this has been discussed previously  <cit>  and the simulations clearly show that exploring first laterally , as with the md , improves results. merging diagonals with the dpd distance metric allows more small inversions within sbs gaps while considering that genic/segmental indels and incorrect annotations break the synteny more easily than with the md. conversely, merging diagonals with the md metric gives priority to lateral directions and this allows more small genic/segmental indels and annotation errors within sbs gaps and considers that inversions break the synteny more easily than with the dpd, see . interestingly the unusual ed or cd distance metrics also show improved results over the dpd . it should be noted that a given distance may cover a different number of cells in the mhp depending on the metric chosen. for instance  <dig> cells are covered within a distance value of  <dig> with the md whereas  <dig> cells are covered within the same distance value of  <dig> with the dpd . although this bias may play a role in the results, on chromosomes, gaps between tbs involved in pairs of chains corresponding to sbs are always smaller or equal to gapmax independently of the metric chosen. thus comparing metrics is fair. finally, contrary to adhore, phyldiag can return sbs containing  <dig> hps if their p-value is under the p-value threshold of the user.

phyldiag includes a new statistical validation to estimate the probability that a putative sb may be due to chance. unlike other tests, it accounts for gene orientations, thus providing increased sensitivity. it also accounts for tandem duplications but ignores the possibility that duplicate gene copies may be dispersed. neglecting dispersed duplicates underestimates the p-values of sbs and the significance of sbs are thus overestimated. however models considering gene families exist  <cit>  and in a future version it might be advantageous to implement the p-value proposed in  <cit> , even if the calculation is based on an unrealistic assumption that all gene families are of fixed size. nevertheless the error in the p-value calculation in phyldiag is likely to be small for closely related species. for instance the analysis of phylogenetic trees described here shows that only  <dig> % of tbs are dispersed duplicates in the human genome  using our family definition .

the p-value used by phyldiag is relative to a comparison of two chromosomes, and therefore assumes that random consistent diagonals might arise based on the number of tbs and hps relevant to the two chromosomes only. in contrast, a global  threshold α is chosen to distinguish significant sbs from non-significant sbs. this inconsistency represents an area of further development, in order to better account for heterogeneous densities of hps depending on which chromosomes are being compared.

CONCLUSIONS
phyldiag is designed around a heuristic-independent formal definition of synteny blocks. its implementation and benchmarking using real and simulated data allowed us to rank 2d-distance metrics in terms of sensitivity and specificity, and to evaluate its performance in comparison with adhore. results show that the dpd distance metric yields the poorest performances when identifying synteny blocks, both with adhore and phyldiag. in contrast, phyldiag highlights the interesting sensitivity-specificity trade-off achieved by the md distance metric, closely followed by the cd and the ed distance metrics. compared to adhore and other algorithms that infer synteny blocks, the definition of gene families in phyldiag is based on gene trees. most notably, this feature offers the opportunity to precisely group extant genes into families that descend from a unique gene in the last common ancestor of the two species being compared. furthermore, a meticulous attention to tandem duplicates and gene orientations allow phyldiag to reach a high resolution in the analysis of rearrangements, down to single gene inversion. finally, the statistical validation of putative synteny blocks filters out putative false positives due to randomly convergent gene order. phyldiag is a software for synteny block inference that benefits from extensive parameters, including gapmax, distance metric, p-value threshold, filtering of extant genomes and ancestor for the gene family definition. their values can be set by phyldiag  or set by the user. these features, together with post-processing graphical analysing tools and printed statistics  contribute to making phyldiag a user-friendly method to find synteny blocks.

availability and requirements
project name: phyldiag project home page: https://github.com/dyogenibens/phyldiagoperating system: platform independent programming language: python other requirements: python  <dig>  or higher license: gnu gpl v <dig> or later, and the cecill v <dig> license in france any restrictions to use by non-academics: no

electronic supplementary material
additional file 1:
supplementary data.


 competing interests

the authors declare that they have no competing interests.

authors’ contributions

jmexl designed the core of phyldiag. mm designed the library framework for genome data manipulation and gene tree editing. hrc supervised the work. jmexl and hrc wrote the manuscript. all authors read and approved the final manuscript.

