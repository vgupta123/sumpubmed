BACKGROUND
a living organism is an open system that is constantly exchanging chemical compounds, energy and information with its environment. this exchange involves a large number of elements  related to each other in a dynamic hierarchical and modular manner. modules can be identified from the analysis of the interaction patterns. at a molecular level, interacting networks include protein-protein interactions, metabolic pathways, and the different biosignalling pathways controlling intercellular cross-talk and the regulation of gene expression  <cit> . thus, protein-protein interactions can be considered as the basic skeleton for living organism self-organization and homeostasis  <cit> . consequently, understanding the structural data concerning network skeletons, as well as its one-to-one element interactions, is essential  for effective progress in the characterization of biological complex systems and in understanding the pathological consequences of alterations in the properties of a given node . in fact, molecular interaction networks are widely studied to reveal the complex roles played by gene products and cellular environments in biological and pathological processes  <cit> .

when a new interactome is built with current information integration tools, nodes represent macromolecules and connecting segments represent specific interactions. nodes are associated with additional information about the genes/proteins; for instance, chromosome number and gene location, intracellular location of the protein, and codes for locations in different data banks and ontologies. all this information is extensively stored in several data warehouses   <cit> .

multiple sources of information on protein to protein interaction exist. they have usually been analyzed individually by genetic, biochemical and biophysical techniques. recently, however, new methods have been developed for high-throughput macromolecular interaction analysis, including both experimental and biocomputational approaches. the high speed of new data generation has caused a problem, namely standardization of its notation in database  <cit> . in the most significant interaction databases, the information provided by these methods is stored, curated and commonly linked to node data warehouses, but many details are not always fully or clearly specified . this lack of precision in interaction description is a major problem of the high-throughput data repositories. further efforts are therefore essential to improve the quality of the protein-protein interaction databases to reach a level of confidence on crude networks, to save manual curation efforts and, consequently, to gain efficiency in inferring useful biological information from the interactome graphs. in addition, intersection and overlapping among these databases is limited and, therefore, the information is complementary in many cases. thus, information should be unified to increase and to improve knowledge about interaction networks. in this way, several databases are working to integrate all this information on flexible platforms: biologicalnetwork, agile protein interaction data-analyzer , kegg or protein launge  <cit> . finally, even partial interactomes on a given intracellular process often contains hundreds of nodes which are difficult to manage during analysis. consequently, efforts to improve result visualization and compatibility among different platforms would also be helpful.

in this paper, we present a tool called protopia for searching for and integrating protein-protein interactions and the information about them contained in five different protein interaction web databases. it can be useful as a friendly search interface among different databases, as a validator of redundant information, as a network visualization tool and also as an export tool to sbml  <cit> .

methods
protopia is a modularized application, with separate functionalities providing a high degree of reusability and error correction. there are several main modules  that work together but are built separately with a different functionality: graphic user interface, model, visualization engine, search engine interface, data source adapter interface and data source extractor interface. protopia has been implemented in java because it makes it possible to manage all required software patterns and also provides operative system independence. protopia components have been designed to increase reusability and the possibility of including new databases when required. the description of these components is shown below:

• the graphic user interface: a user interface is provided to use and to manage all the capabilities of protopia in an easy manner.

• model: it is the component that manages all the other components, and makes cooperation amongst them possible.

• visualization engine: it provides diverse representations of the located protein to protein interactions. two kinds of text representations , and two kinds of graph representations  have been implemented using a hypergraph  <cit>  library and the graphviz  <cit>  library.

• search engine interface: it uses the data source adapter interface of every data service implemented to perform the specific search among the data sources included in protopia.

• data source adapter interface: an abstract interface defined to be implemented by a custom data source extractor in order to be able to both communicate and cooperate with the search engine interface. it describes some basic operations to implement the service.

• data source extractor interface: an abstract interface defined to be implemented by a custom data source extractor in order to be able to transform the original data to a common data structure usable by the search engine interface.

data source extractors
the data source extractors are the components capable of extracting and transforming the protein interaction information. they implement the data source adapter interface and the data source extractor interface required to make them compatible with protopia .

this project has been implemented with five data source extractors from five main protein web databases  by using an access via http. it was achieved by implementing parses among the http text. thus, our tool is able to use an abstract interface that defines the extraction and adaptation of the data by applying a usual data extraction method , but it can also be deployed by using direct access to databases , web services, and other available data access.

when a data source extractor is needed, it is easy to provide a new one by extending two java classes, one to define the urls and characteristics  and the other one to define the way to obtain the different nodes and interactions of the graphs . in the same way, it is possible to build custom data source extractors for a desirable data source without the need to recompile the source code, in other words simply by packaging those two implemented classes, by creating a simple jar, and by copying it in an interface folder. protopia automatically detects the changes in the folder and loads the new data source extractor.

data representation and interoperability
most efforts in protopia have been directed to providing useful and friendly protein interaction graph representations. in protein to protein interaction graph visualization a perfect visualization method does not exist, but there are applications that achieve it with a moderate to high degree of satisfaction. that is the case of proviz, ipfam or cytoscape  <cit> . since protein to protein graphs tend to be very big, you have to choose either to have a global representation of the graph or to have a detailed representation of a part of the graph. for these reasons, we consider to improve two different visualization ways that full equip protopia as a complete interaction viewer.

four different kinds of visualization have been implemented. in all cases proteins can be represented by either the abbreviated name or the code of the respective data bank:

• the first one is based on a text vector form  and the second one is based on a text matrix form . they have been implemented in text mode to provide a simple and low load mode that allows copying and pasting the results easily.

• the third one is based on the graphviz  <cit>  library, which provides a hierarchic and schematic point of view of the interaction graph and enables the user to analyse the graph in a global way. implementation of the graphviz view mode is simple and it only makes external calls to the graphviz package .

• the fourth one has been implemented on the basis of an organic hypergraph library  <cit> , which provides a fish eye view and makes it easier to analyse the net based on a main protein and its interacting neighbourhood . this visualization method enables the user to interact with the graph and change it  to centre the view on the desired area, which is extremely useful for analysing a specific part of the graph. implementation was carried out by extending the corresponding java classes to reach the desirable functionalities. since our tool is able to manage up to more than one thousand nodes of a several-step network, this visualization is particularly convenient and helpful for complex network visualization and analysis.

on the other hand, an optimum system should be able to reach a high degree of integration with any information repository, as well as maximum interoperability among the different data analysis tools. in our system integration of a new data source will be easily executed by following the same procedure described above. reciprocally, the information collected by our tool can be recorded in a file, saving the interaction data graph in plain text mode or in the standard sbml format, making results compatible with many otherplatforms , which is interesting for the comparative analysis of different networks.

detection of redundancies
an optimum system should be able to locate and unify the information on a given molecule stored under any of its identifiers and return a confidence value to the user for each located edge.

the increasing activity of the scientific community in applying technologies feeding protein-protein interaction information , followed by their notations in data banks, makes it likely that information on protein-protein interactions will grow exponentially in the short-term. it would be convenient that such a volume of information could be discriminated to select the most relevant in order to avoid an undesirable increase of background. multiple facts should be taken into account for an accurate estimation of confidence; for instance, the method used to deduce such an interaction . this information is often available in databases, but the different technologies and their values integrated in a "global confidence score algorithm" is not an easy task, and may be premature. in our opinion, such an algorithm should be reached by consensus and its cut-off should be selected by the user, which could be particularly important for studies of poorly-characterized interactomes.

at the present stage, with this goal in mind and taking into account the heterogeneous information captured by the different repositories and the dynamics of new inputs, a simple  approach to the final objective could be provided by the quotient between the number of repositories-containing information on the interaction and the total number of queried databases. in our tool, this quotient is called "redundancy".

redundancy algorithm and values
the protopia algorithm to look for redundancy is based on a simple but efficient search across all the available data sources . the tool validates every pair of proteins this way: for every pair obtained from one of the data bases , we obtain the respective swissprot codes . then, both protein codes are the parameter to search for the corresponding identifier code of every other data source . once both identifiers are available, an interaction between these two codes is performed in every data source. the original database where the interaction was first detected is not taken into account in the quotient.

then, protopia can validate those interactions searching among all the integrated databases, looking for those relationships in all the databases and retrieving the validation for the user. this is called the redundancy factor. depending on the visualization mode, the results are expressed as quotients on the edges and/or by a three colour code for the edges . thus, high redundancy  will be considered when the numerator is as big as the denominator. it means that the interaction is redundantly defined in all the databases used in protopia. no redundancy  will be considered when the numerator is one. it means that the interaction is defined only in the original database and no matches have been obtained from searching in other databases. medium redundancy will be considered in other cases. it means that the interaction is defined in some  of the databases used in protopia.

example of redundancy value
this example shows an example of a single step search of a well known suppressor gene product, p <dig>  described as a hub by several authors, including our own results  <cit> . in dip, it is described as "cellular tumor antigen p53", with dip code "368". for this protein,  <dig> interaction pairs were found.

the interaction redundancy hypergraph of the other data sources implemented in protopia  was analysed and is shown in figure  <dig>  it is obvious that one of the data sources could not locate or obtain the swiss-prot code of the protein p <dig>  in their database, because the maximum denominator is  <dig> and the number of databases compared was four. for this reason we believe that is important to use web services instead of http access. however, most of the databases do not provide this kind of interface. another reason for a lower redundancy is because we use transfac web that does not allow access to all its proteins in the free version.

in this example, only  <dig> % of the protein interactions were redundant to some extent. of this percentage, only  <dig> % of the interactions are described in three of the databases,  <dig> % are described in two of the databases, and  <dig> % are described in just one of the databases.

RESULTS
protopia is one of the biocomputational tools implemented by the asp project . this section will describe protopia characteristics. briefly, protopia provides a configuration tool for selecting the database used to retrieve information. once the target database has been selected, users can search by either the name or the code of the desired protein, and it retrieves a list of proteins from which to choose the required one. once the protein is chosen, the tool will search its interactions through the selected database, and returns a collection of proteins and their interactions. the result of a search can be visualized in three different ways: a vector, a matrix, and a graph ; results can also be saved in text formats or in sbml format. it is also possible to use logic operators to compare the interactions between two specific proteins, and to search all the paths between two proteins. by default, the search ratio has just one level of interactions, but it is a configurable option and the tool can show interactions up to a 10-level deep tree. this tree-graph is a way of showing protein interactions quickly and efficiently, but it is also an interactive way of visiting the web page where the tool has queried to obtain the information. the visualization engine is an interactive and navigable graph that offers a nice visualization of a specific zone of the graph.

protopia actually integrates five web protein databases: the free version of transfac, dip, hprd, int-act and ihop  <cit> . these are five of the most important interaction protein databases existing at present, and we search all the data through queries directly to the web server.

as an example of use the well known protein p <dig> has been presented in previous sections. in summary, looking for its interactions in transfac we notice that there are  <dig> interactions with other proteins . but, users could be interested in looking for the interactions of those  <dig> proteins with other proteins. so, the interaction graph is expanded to the second level . this graph can be also validated with respect to the other databases. so, the user obtains the redundancy factor as measure to quantify the real possible probability of interaction, if it is desirable to filter the huge quantity of interactions on an automatic way to allow the expert to study only the more probably interaction literature .

discussion
protopia deals with integration problems caused by the heterogeneity of biological databases. for instance, there is no universal identification code for proteins accepted by the whole scientific community. protopia tries to validate interactions using the swissprot code which is usually available in most protein data files, matching them with this code which is also available in expasy. however, if for example the user is using the hprd engine, the swissprot code of the p <dig> regulated apoptosis inducing protein  <dig> is not available . consequently, the redundancy quotients of any interaction involving p <dig> are lacking the information coming from hprd. this problem is solved by analyzing the known names or synonyms  when the swissprot code is not available .

protopia scores its results on the basis of the redundancies in the interaction information among the different repositories. obtaining a higher redundancy level between ppi databases is only a matter of time. however, for some species like humans  <cit>  a low redundancy level still exists among the different databases. currently, this inconvenience hampers the accuracy of any attempt geared at computer-assisted validation of the results. also, we are not always able to find via http the protein that belongs to a swiss-prot code, because sometimes it is impossible to query some parameters this way and the redundancy factor could be lower because of this lack, this is the reason we claim to databases to offer a best way to access data, like web services. in our opinion, it is time to reach consensus on a more unified way of making new annotations and to have a score algorithm accepted by the scientific community in order to help information integration and interchange and to obtain maximum benefits from the huge experimental efforts that are being carried out at present. to evaluate the quality of the interaction, we agree with the need to standardize and to score the annotations regarding experimental methods, sources, etc used in the described interaction, also claimed by other groups  <cit> .

the access to data sources has been implemented via http, which could seem more expensive in time and data transfer than other tools working on downloaded information. in turn, our tool allows an easy online way to access current data. thus, the information obtained is always up-to-date. in our approach, information location problems will be solved when most of the public databases develop a web service that allows us to ask for just a given protein.

CONCLUSIONS
protopia has become a useful tool to search for, visualize and validate protein interactions, by providing an intuitive user interface and useful configurability. this tool provides multiple ways of representing the results, being useful for researchers to quickly and efficiently find protein interactions and long-distance protein-protein relationships. one of protopia's best features is that it is designed to access online data. therefore, it is unnecessary to keep large quantities of data . only a little cache disk space is maintained to provide quicker access to the interaction information. the ease in implementing a new data source extractor interface adds functionality and new sources to compare interactions. the possibility of exporting the interactions to the standard sbml format enables the reuse of the interaction graph with other programs and tools. thus, protopia is not just an end-user application; it can also be used as a protein to protein interaction extractor capable of saving the selected proteins and interactions in a sbml file for subsequent analysis and manipulation.

current databases offer a different level of curation, annotation, number of proteins, and number of interactions. we intend to continue working towards taking all this information  to offer an improved interaction analysis method and tool able to take into account new filters, as if they were the tissues of an organism, and the experimental technology used to obtain the information. in fact, we believe that in the future  the ideal tool should be able to detect and compare intercellular differences  <cit> . in the short/medium-term , we are planning to develop a celldesigner plug-in that incorporates the two protopia visualizations, as well as another plug-in that uses different access databanks to evaluate and validate ppis with the new ideas proposed.

it is accepted that this kind of biocomputational effort and tool is essential for the advance of knowledge in systems biology. analyzing protein interaction networks using structural information is one of these approaches  <cit> . in particular, our group requires them as part of a dual in silico-experimental strategy to study different biomedical problems  <cit> . cancer, inflammation/immunity problems and orphan diseases are several of these biomedical problems for which network characterizations could reveal important emergent properties to understand and control the frequently dramatic systemic consequences of alterations in just a simple metabolic element. important efforts are being made in cancer and inflammation/immunity problems  <cit>  to advance in the knowledge and intervention possibilities of these pathologies. nevertheless, it is for orphan/rare diseases, many of them caused by mutations, for which in silico approaches can provide the maximum degree of information, mostly due to the scarce number of human samples, as a result of which advance is only possible by using experimental approaches  <cit> . due to the complexity of the human organism and different cell and tissue-specificities, it is almost impossible to obtain a complete picture of the different syndromes at the human level just by integrating the information provided by studies carried out on the isolated protein elements affected in each case, or by biochemical results obtained with cultured cell type models. this task requires systemic approaches, including the development of new in silico tools not only to integrate information, but also to filter and to organize the information obtained from many thousands of experimental molecular, biochemical and cellular studies in an automated way.

characterization of protein networks, as well as formalization  of the metabolic behaviour could help the scientific community in searching for biochemical answers at the systemic level for many pathologies, including orphan diseases. it could allow us to predict the consequences of a given alteration in one of the protein/gene elements involved in a metabolic pathway, taking into account the cell specificities of the different human tissues and cell types. in fact, due to the differential expression patterns of the different cell types, a similar genetic alteration can be compensated or can have little importance in the correct function of one cell type, whereas it could have important consequences in the function of another one. this approach can also be useful to obtain emergent information on how to transmit the consequences of a molecular alteration to other apparently long-distance metabolic reactions of a given cell type, thus helping to understand  the biochemical causes for the loss of homeostasis of patients. as evidenced in the acknowledgement section and affiliation, our group is engaged in different projects and networks  with the aim of contributing to a better understanding of the molecular causes or consequences of any of these pathologies and, consequently, to the design of new and more efficient intervention strategies.

availability and requirements
• project name: protopia, a protein-protein interaction tool.

• project home page: 

• operating system: all which supports java.

• programming language: java.

• other requirements: java se  <dig> , graphviz to visualize dot graphs.

• license: creative commons, 

• manual: 

competing interests
the authors declare that they have no competing interests.

authors' contributions
arc has designed the architecture of protopia, drafted the manual and implemented together with irm, ak and oc the tool. ind has implemented the extractors and drafted the manual. fjs and mam have conceived the infrastructure, testing the tool, coordination and helped to draft the manual. jam participate on the architecture's design, conceived the infrastructure, coordination, and helped to draft the manual.

