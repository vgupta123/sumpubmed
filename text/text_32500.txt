BACKGROUND
dna microarrays allow the measurement of transcript abundances for thousands of genes in parallel. applications in quality assessment and interpretation of such high dimensional data by clustering  <cit>  and visualization  <cit>  make use of algorithms that reduce its dimension. two and three dimensional visualizations are often a good way to get a first impression of properties or the quality of a dataset or of special patterns within the data by showing clusters such as diseased and healthy patients, revealing outliers, a high level of noise or to generate hypotheses for further experimentation  <cit> . in general, there are two different approaches to reduce a datasets' dimension. feature selection methods  <cit>  compute a ranking on all genes by means of some given score and pick a gene subset based on this ranking. feature extraction methods define a mapping between the high-dimensional input space and a low-dimensional target space of a given dimension. both methods are used in machine learning concepts. most classification algorithms use many or all features in a complex  manner whereas approaches like  <cit>  are based on the relative expression of only two or three genes to overcome the "black box" character of the other classifiers. so they allow an easy traceability of the genes leading to the classification result. on the other hand, applications like the visualization of high-dimensional data may profit from extracting information from all features. this results in feature extraction methods usually being more suited for low-dimensional representations of the whole data. in the following, we refer to feature extraction methods when speaking of dimension reduction techniques.

considering visualization, these kind of mappings are often unsupervised, because they don't use further information of the data like class labels and allow an unbiased view of the structure within the data. supervised methods are more applicable to improve classification or regression procedures, assuming that less non-differential or noisy features are reduced after the mapping.

all features, that are related to special properties of the data or a separation into classes or clusters, often lie in a subspace of a lower  dimension within the original data. a 'good' dimension reduction technique should preserve most of these features and generate data with similar characteristics like the high-dimensional original. for example, classifications should work at least as well on the low-dimensional representation and clusters within the reduced data should also be found, preferably more distinct. principal component analysis  is a widely used unsupervised method to define this mapping from high-to low-dimensional space. availability of large datasets with high-dimensional data, especially in biological research , led to many new approaches in the last years.

other studies, that deal with the assessment of dimension reduction techniques, either compare them against the background of classification  <cit> , and hence mainly discuss supervised methods like partial least squares  <cit> , sliced inverse regression  <cit>  or other regression models  <cit> , or come from computer vision and deal with text, image, video or artificial data like the swiss roll  <cit> . this study instead, focuses on microarray data and its two and three dimensional visualization. we compare pca to six recent unsupervised methods to find out if and under which conditions they are able to outperform pca. in the following sections, we describe a benchmark, consisting of classifications and cluster validations, to compare the visualization performance of seven dimension reduction techniques on ten real microarray and several simulated datasets. after some technical details in the methods section, we present and discuss all results, based on one representative dataset. further details of the other nine datasets are available in the supplement.

methods
dimension reduction
seven unsupervised dimension reduction techniques were compared within this study: principal component analysis , kernel pca , isomap , maximum variance unfolding , diffusion maps , locally linear embedding  and laplacian eigenmaps . these dimension reduction techniques can be divided into two groups: linear and nonlinear methods. while pca belongs to the former, due to a linear combination of the input data, the other six methods were designed with respect to data lying on or near a nonlinear submanifold in the higher dimensional input space and perform a nonlinear mapping.

given an input space ℝd and target space ℝd  let x ∈ ℝn×d be an input dataset of n samples and d features  and y ∈ ℝn×d its low-dimensional representation. a dimension reduction technique is a mapping Φ: ℝd → ℝd that optimizes a cost function ∈ : rd → ℝ on the target space. this problem can often be reduced to an eigenvalue problem, whose eigenvectors will define the embedding y .

principal component analysis
principal component analysis   <cit>  builds a new coordinate system by selecting those d axes w <dig>  . . . , wd ∈ ℝd, which maximize the variance in the data:

 w1=argmax‖w‖=1var=argmax‖w‖=1w′cw, 

w <dig>  . . . , wd are chosen in the same way, but orthogonal  to each other . so, the principal components pi = xwi explain most of the variance in the data. before mapping the data, the samples in x were centered by subtracting their mean. since pca only considers the variance among samples, it works best if those features, that are relevant for class labeling, account for a large part of the variance. sometimes, the first two or three principal components are not sufficient for a good representation of the data  <cit> . this can lead to a high target dimensionality and prevent a well suited visualization. furthermore, the covariance matrix grows rapidly for high-dimensional input data. to overcome this issue, we substituted the covariance matrix by the matrix of squared euclidean distances de=1nxx′ <cit> .

kernel pca
to make pca more suitable for nonlinear data, kernel pca  maps the data into a higher dimensional feature space before applying the the same optimization as pca.  <cit> . the mapping can be done implicitly by using a kernel function. the gaussian kernel k=exp was applied in our study.

isomap
isomap   <cit> , a nonlinear modification of multidimensional scaling  <cit> , preserves the global structure of the input data in its low-dimensional representation. this is done by constructing a neighborhood graph g, weighted by shortest geodesic distances dg ∈ ℝn×n between all k nearest neighbors. this way, isomap captures paths along a nonlinear manifold instead of the direct euclidean distance. the embedding into the low-dimensional space is done by selecting y <dig>  . . . , yd ∈ ℝn such that

 ϵ=‖dg−dy‖l <dig> 

,is minimized, with dy=‖yi−yj‖ <dig> being the pairwise distance matrix of neighbors yi , yj in the target space.

previous work in  <cit>  addressed problems in visualizing datasets consisting of several well separated clusters. since isomap is known to suffer from holes in the underlying manifold  <cit> , it is suggested to modify the method by selecting k <dig> nearest and k <dig> farthest neighbors when constructing the graph, instead of the k nearest neighbors. both, im and im, will be discussed in the results section.

maximum variance unfolding
similar to isomap, maximum variance unfolding   <cit>  preserves the distances among k nearest neighbors by means of a neighborhood graph g. but it varies in considering squared euclidean distances between two neighbored samples, instead of geodesic distances and in maximizing the euclidean distance between all points yi , yj in the target space  while preserving the distances in the neighborhood graph. this leads to the optimization problem.

 max∑ij‖yi−yj‖2subject todg=dy 

based on the same concept, mvu shares some weaknesses with isomap like suffering from erroneous connections in the graph.

diffusion maps
diffusion maps   <cit>  start with building a graph g as well, but differ in weighting the edges by the gaussian kernel function: w=exp. with the rows being normalized by w^=wΣl=1nw, the weights w^∈ℝn×n can be seen as a markov matrix that defines the probability to move from one sample to another in one time step. the transition probability for t time steps, denoted w^, is given by w^t. it can be used to control the local connections among neighbored samples. here, we set it to t =  <dig>  diffusion maps retain a weighted l <dig> distance, the 'diffusion distance'

 d=∑l=1n−w^)2ψ 

the term Ψ=Σjw^Σjlw^ leads to stronger weighting of samples from dense areas in the graph. since the diffusion distance between two points is computed over all possible paths in the graph, diffusion maps are more robust to noise.

locally linear embedding
unlike isomap and mvu, locally linear embedding   <cit>  attempts to preserve local properties of the data. each sample xi is represented by a linear combination of its k nearest neighbors:

xi=∑j=1kwxj. the weights w ∈ ℝn×n are estimated by minimizing the reconstruction error

 ∑i=1n‖xi−∑j=1kwxj‖ <dig> 

subject to w  =  <dig>  if xi is not a neighbor of xj, and ∑j=1nw= <dig>  the last constraint ensures an invariance to translation next to rotation and rescaling. by minimizing

 ϵ=∑i=1n‖yi−∑j=1kwyj‖ <dig> 

,

the low-dimensional representation that best preserves the weights in the target space is chosen.

laplacian eigenmaps
as well as lle, laplacian eigenmaps   <cit>  are a local technique. similar to diffusion maps, this method first constructs a neighborhood graph, weighted with values w  from the gaussian kernel function. by minimizing a cost function

 ϵ=∑ij‖yi−yj‖2w 

for neighbored yi, yj  =  <dig> otherwise), the distances between the low-dimensional representations are minimized and nearby samples xi, xj are highly weighted, and thus brought closer together. this way, laplacian eigenmaps implicitly enforces natural clusters in the data.

methods of assessment
benchmark
our benchmark  is divided into three parts. first, the studied dimension reduction methods were applied to the complete dataset. the low-dimensional datasets were then assessed by two different approaches, namely classification and cluster validation. to evaluate and compare the performance of each method, the classification accuracies of support vector machines  <cit>   and the compactness and distance of clusters within the low-dimensional representations were used. in the following, each step of our benchmark is described in detail.

datasets
the methods were tested on ten published microarray datasets as well as on simulated data. each published dataset was divided into two classes according to a binary variable corresponding to the samples' disease status, the presence of certain molecular mutations or other sample characteristics as shown in table  <dig>  since microarray data is technically provided with a more or less high level of noise, we reran the benchmark on the microarray datasets combined with normally distributed noise with zero mean and an increasing variance between  <dig> and  <dig> . before adding noise, all data was scaled to values between  <dig> and  <dig> to overcome the varying means and standard deviations of the datasets.

summary of all ten microarray gene expression datasets we used for testing the dimension reduction techniques. here, we focus on the data by wang et al., which represents best the results of the whole benchmark. datasets 2- <dig> are shortly discussed in the supplement to this work. all datasets were separated into two classes according to two characteristics or the diagnosis of a disease.

the simulated data is based on a  <dig> sample dataset whose  <dig>  gene expression values are normally distributed with zero mean and standard deviation one. the covariances of all genes are given by a block diagonal matrix with coefficients ρ =  <dig>  within and ρ =  <dig> outside the blocks of size  <dig> ×  <dig>  to separate the data into two classes, between  <dig> and  <dig> genes were randomly chosen to be differentially expressed by adding a constant of  <dig>  to the expression values of the first  <dig> samples. we generated  <dig> datasets for testing.

in the same manner as for the ten microarray datasets before, normally distributed noise with zero mean and an increasing variance between  <dig> and  <dig>  was added to the simulated data. we repeated the benchmark on  <dig> of these noisy artificial datasets. the number of differential features was fixed to  <dig> 

dimension reduction
all dimension reduction techniques discussed here have one or two free parameters, that influence the embedding and the target dimension. their determination was done by minimizing the error rate of a support vector machine  within a leave-one-out cross-validation  schema: for n samples, the dataset was divided n times into a training and a test set. one sample was excluded for testing while the rest was taken for training. the average over all prediction accuracies gives an estimate of the svms' generalization error.

this procedure was repeated for every set of parameters within the following ranges:

target dimensionality:  <dig> ≤ d ≤ 15

neighbors:  <dig> ≤ k ≤ 16

gaussian kernel: 1e −  <dig> ≤ σ ≤ 5e5

if the same loo-cv accuracies were achieved by using different parameter values for the target dimension, the lowest value was taken for reasons of a most simple representation. the same applies to the neighbor/kernel parameters.

after the loo-cv, the whole dataset was reduced in its dimension in an unsupervised manner, i.e. without consideration of class labels.

classification
the first evidence for the quality of the different dimension reduction methods are the accuracies of a support vector machine with gaussian kernel.

the data was classified repeatedly during several randomization steps:

we randomly split the dataset a hundred times into a set to train the svm and a test set for classification, and selected the median accuracy of all runs. within the training set, a loo-cv was performed to determine the svm parameters. for reasons of performance, a gradient descent procedure as proposed in  <cit>  was used to minimize the loo-cv error. every time during randomization, the training set consisted of two thirds of the original data and the test set of the remaining samples. the only constraint was to keep the balance between the number of samples in each class. since svms do not restrict the dimension of the input data, the randomization results of the low-dimensional data can be compared to the high-dimensional original data, to see if more or less significant features got lost after the embedding.

cluster validation
to measure the distances between the labeled clusters, we used the davis-bouldin-index   <cit> : given m clusters ci  and their centers μi=1|ci|∑x∈cix,

 di=1|ci|∑x∈ci‖x−μi‖ 

is the average distance of the samples in cluster ci to its center. while rij=di+dj‖μi−μj‖ reports the compactness of clusters ci , cj related to their distance, the db-index

 db=1m∑i=1mmax{rij|1≤j≤m,i≠j} 

averages the worst cases of the clusters' separations. one might expect well separated clusters to have smaller values close to one. in our case, the db-index was computed for fixed target space dimensions  <dig> , <dig>  and  <dig> 

implementation details
the presented benchmark was implemented in matlab  <dig> . <dig> . furthermore, libsvm   <cit>  served as support vector machine implementation, in conjunction with automatic model selection for kernel methods   <cit> . the dimensionality reduction toolbox   <cit> , isomap package   <cit> , lle routine  <cit>  and mvu implementation   <cit>  were used for dimension reduction. because the isomap and lle routines performed best in our benchmark, we converted their matlab implementations for the statistical programming language r  <cit> . the r-package 'rdrtoolbox', also including a routine to compute the davis-bouldin-index and our microarray gene expression data simulator, can be downloaded from  <cit>  .

RESULTS
the following sections present the results for the wang et al. breast cancer dataset, which represents best the results of the whole procedure. for the sake of simplicity, the visualization example in figure  <dig> refers to the haferlach et al. leukemia dataset, which consists of fewer samples. further detailed analysis of all other datasets is available in the supplement .

a linear approach like pca is known to recover the true structure of data lying on or near a linear subspace of the high-dimensional input space. the following results show that the structure of microarray data is often too complex to be captured well in very low dimensional target spaces in a linear manner. nonlinear methods, in particular lle and isomap, preserve more information in the data than the first few principle components of a pca are able to cover.

classification
the results of the randomization procedure are shown in figure  <dig>  in case of two and three dimensions, pca performs worst, while all nonlinear methods, except diffusion maps, tend to retain the underlying structure of the data better in such low-dimensional target spaces.

all parameters of the dimension reduction techniques for the wang et al. breast cancer dataset, estimated by leave-one-out cross-validation. pca has no additional parameter, while kpca and dm have a kernel parameter σ and im, lem and mvu take the number of neighbors as argument.

while all methods perform nearly even in higher dimensions, isomap, lle and laplacian eigenmaps performed best in two and three dimensions. only on two of ten datasets , pca performed as well as other nonlinear methods like isomap in two or three dimensional target spaces . on all ten datasets considered together , diffusion maps and laplacian eigenmaps produce more varying results and especially diffusion maps are very sensitive to the choice of the kernel parameter . but like kernel pca, they perform quite similar to pca in most cases. mvu, which is based on multidimensional scaling like isomap, is comparable to isomap's good accuracies.

the initial publications on isomap and mvu  <cit> , covering text classification and face recognition, pointed out, that pca might need higher dimensional target spaces than its nonlinear counterparts to lead to similar results. since pca only considers the variance in the data, it works best if those features, which are relevant for the class labeling, account most for the variance. considering complex microarray data, the first two or three principal components were often not enough to cover the information necessary to sufficiently distinguish different classes within the data. this might prevent a well suited visualization, which is true to the original. lle, isomap and mvu, which classified best most of datasets, take advantage of overlapping local neighborhoods to create an image of the global geometry of the data. although this approach may suffer from "holes" within the data , it proved more useful for accurate low-dimensional representations.

well sampled datasets may overcome this issue of sparse data. but the chiaretti et al. leukemia , alizadeh et al. lymphoma  and nutt et al. high-grade glioma dataset  show that even with relatively few samples, a true to the original embedding is possible. the classification accuracies of most of the dimension reduction methods on these datasets  are comparable and sometimes even better than the accuracies on the high-dimensional data .

cluster validation
the cluster distances, presented in figure  <dig>  confirm the above conclusions. in two and three target dimensions, pca results in worse scores than most nonlinear methods. dm performs the worst for more than two dimensions. with increasing target space dimension all methods converge, while the db-index itself increases as well. although laplacian eigenmaps implicitly enforce natural clusters in the data, they show only slight different scores than e.g. lle, which clusters best on most of the datasets. just in case of ten target dimensions, lle's and laplacian eigenmaps score remarkably worser on four of our ten datasets, while the other methods, including pca, hold steady . while isomap might map well separated clusters to very close points, the slight modification of regarding nearest and farthest neighbors seems to correct this behavior on three datasets , but performs similar or  worse otherwise . mvu scores similar to isomap, but fails on three other datasets in two dimensional target spaces .

because lle and isomap performed best on most of the datasets during classification and cluster validation, figure  <dig> compares their two dimensional embedding of the haferlach et al. leukemia dataset to the first two principal components of a pca. all three visualizations clearly show two clusters of aml patients with t and t respectively. but lle and isomap distinguish both classes best, while in the pca embedding three more t samples lie between samples of the other class. since lle and isomap both map more samples correctly, there seems to be more information within the data, that the first two pca components fail to preserve. on closer inspection, the common three t outliers, that are in between or closest to t samples in all three visualizations, are always the same samples # <dig> and # <dig> # <dig>  another visualization example of the alon et al. colon cancer dataset with all eight dimension reduction techniques can be seen in supplemental figures s <dig> and s <dig> 

noise evaluation
the tests on artificially noised microarray datasets reveal, that pca, kernel pca and diffusion maps are most robust on noisy data . but the differences are less strong and the results more variable than for the classification and cluster validation without adding noise. the sensitivity to noise of all methods strongly depends on the given class labels and associated features, and thus leads to varying results between all ten datasets . while diffusion maps are known to be robust to noise  <cit> , all other nonlinear methods, especially isomap and its modification, suffer most from unstructured data and lead to strongly varying cluster scores.

simulated data
since lle and isomap performed best in the first two tests, the classifications on simulated data refer only to these methods. in all three cases, we fixed a two dimensional target space. figure  <dig> shows that the results of the loo-cv on real microarray datasets can be reproduced on simulated data. with only few differential features, lle and isomap already capture more of the structure of the data than pca. it takes more than  <dig>  differential features for pca to perform nearly even. furthermore, for less than  <dig> differential features, the accuracies of pca are spreading much stronger, while lle and isomap give more stable results. the findings for three target dimensions are similar to the two dimensional case and can be seen in the supplement .

the benchmark with noisy simulated data, however, confirms the results of the noise evaluation for the ten microarray datasets. supplemental figures s <dig> and s <dig> show for two and three target dimensions, that pca performs more robust than lle and isomap for both, classification and cluster validation, when noise within the data increases. these conclusions hold true for noisy data with a larger variance, since pca, lle and isomap are invariant to multiplication of the data with a scalar.

statistical hypothesis test
in table  <dig>  we compare all results by applying the wilcoxon signed-rank test on the accuracies and cluster scores for two dimensional data representations. we tested the null hypothesis, that the median of the differences between pca and each of the nonlinear methods is equal to zero. this way, we computed the p-values of  <dig> paired samples. the p-values were not adjusted for multiple testing. isomap and lle show the most significant results in accuracy and clustering with p-values  <dig>  and  <dig>  respectively. diffusion maps led to results most similar to pca.

the p-values of the wilcoxon signed-rank test based on the null hypothesis, that pca yields results similar to each other nonlinear method. the median randomization accuracies and cluster scores  of all ten datasets served as input to the tests.

runtime
the computational complexity and memory requirements for all dimension reduction methods except mvu are equal, as shown in supplemental table s <dig>  however, we observed differences in runtime between the methods due to different constant factors. table  <dig> lists the runtime of all seven methods in seconds for the smallest dataset  and the largest dataset . the target dimensionality was set to two. the embeddings were computed on an amd opteron processor with  <dig> ghz.

runtime in seconds of all seven dimension reduction techniques on the chiaretti et al. leukemia dataset  and the verhaak et al. leukemia dataset . in the latter case, the runtime of mvu is given in hours.

the runtime of all nonlinear methods  depends on the number of samples. even for relatively large microarray datasets , runtimes between  <dig>  and  <dig>  seconds are acceptable for visualization purposes. only the solution of a semidefinite program in the mvu algorithm takes two hours. for all methods, the computing time for datasets with more common sample sizes  is less than a second.

CONCLUSIONS
classifications on high and low-dimensional data showed, that the most significant information within microarray data can be captured quite well in very few dimensions compared to the thousands of features of the original data.

our benchmark further revealed significant shortcomings of pca in two and three dimensional target spaces and brought out two nonlinear methods, that distinguished most from pca. especially the performances of locally linear embedding and isomap in classification and cluster validation make them well suited alternatives to the classic, linear approach of pca.

authors' contributions
cb designed and implemented the benchmark and wrote the paper. hk and cr analyzed results and helped writing the manuscript. md and xj contributed to the benchmark design. all authors read and approved the final manuscript.

supplementary material
additional file 1
r-package. rdrtoolbox_ <dig> . <dig> tar.gz: a package for nonlinear dimension reduction using the isomap and lle algorithm. it also includes a routine for computing the davis-bouldin-index for cluster validation, a plotting tool and a data generator for microarray gene expression data and for the swiss roll dataset.

click here for file

 additional file 2
supplement. supplement.pdf: contains information about preprocessing of the data, a discussion of the computational complexity of each dimension reduction method, further classification, cluster validation and noise evaluation results of nine other microarray datasets and further classification and randomization results for simulated datasets.

click here for file

 acknowledgements
this study was supported by cost action bm <dig> translating genomic and epigenetic studies of mds and aml  and by the european leukemia network of excellence .
