BACKGROUND
introduction
array-based comparative genomic hybridization  is a powerful technique used to detect dna copy number variations  across the genome. one of the most important aims of this technique is diagnosis, which can be achieved with help of classification of acgh data.

one of the most important problems with the classification of acgh data is dealing with a great number of attributes, which often exceed the number of given samples. in a typical experiment one can deal with dozens of samples, while microarray may consist of millions of spots. it is a real challenge to select from the huge amount of data the most interesting features, while most of them are not related to the given classification problem.

in reference to this issue, reduction of the dimensionality of data by applying feature elimination algorithms has been proposed in the previous works  <cit> . one of the most interesting approaches, which is based on interval merging, has been presented in  <cit> . unfortunately, the solution described by the authors contains some fallacies, which result from an improper mix of training and test data in their algorithm. in the methods section, we revise interval merging approach and we propose a new corrected version.

the other problem of processing acgh data is the unbalance in class distribution. for instance, it is quite common that the number of samples from one class exceeds by several times the number of samples from the other class. this makes classification much harder, and most of algorithms assume an uniform class distribution.

moreover, very often, one specified class is much more important than others. let's suppose, we want to distinguish two groups of individuals: healthy and unhealthy. we will concentrate more on unhealthy class. the mistake made by classifying the unhealthy as healthy  is more costly than an opposite mistake . it implies the necessity of being careful in analysing and comparing the quality of classification models.

on the other hand, it is common in practice, that researchers present the results of classification performance by showing only the accuracy  <cit> . obviously, it is an insufficient measure, when unbalanced data are given. this problem is discussed more deeply in the results and discussion section. obviously, the wrong assumption about evaluation measures leads to incorrect conclusions about classifiers performance. in this paper, we show that the classification methods considered most successful for high-dimensional data extremely decrease their performance dramatically when the samples distribution is out of balance. therefore we decided to develop a new classification method, which is based on the concept of jumping emerging patterns . the difficulties of algorithmic design, such as computational complexity and limitations, are explained in detail in the methods section.

thanks to very high discriminative power of jep's, our limjepclassifier could be more appropriate in classifying acgh data than other methods. in order to compare our new algorithm to svm  <cit> , we prepare an experimental pipeline, precisely described in the section methods. finally, in the results and discussion section, we present the results of this comparison.

in the following section, we present details of acgh technology.

acgh technology
comparative genome hybridization  is a technique which allows for detection of segmental dna copy number changes   <cit> . recently, cgh has been widely used in many medical applications. in particular, it helps in the diagnosis of cancer  <cit>  or genomic disorders  <cit> , improves our knowledge about genes responsible for diseases and advances studies on personal genomic differences between humans  <cit> .

in array-based cgh  experiment, two differentially labeled samples are co-hybridized to targets, where the copy number between the two samples is reflected by their signal intensity ratios. in figure  <dig> we present essential steps in this technique.

through the years, the technology was upgraded to obtain a higher resolution by reducing length of dna targets . nowadays, some acgh platforms  support arrays with more than  <dig> , <dig> probes.

another kind of technique is snp arrays , which differs from acgh technology by its higher resolution. it allows to detect very small dna changes.

because of the huge amount of data, which are processed in acgh experiments and some imperfections in technology, it becomes necessary to use the wide range of informatics and statistical tools at each stage of the analysis.

the first algorithmic challenge appears already in the preparation step. the issue is how to choose suitable probes, which will not cross-hybridize with other targets in the array. in this context several approaches have been proposed  <cit> .

the next problem is related to the post-processing of signal data obtained from microarray. because of many circumstances, which may affect results, it is essential to perform a normalization procedure, described in  <cit> .

to obtain more clear results, smoothing, segmentation and aberration calling are usually used  <cit> . nowadays, it is the most investigated area of acgh analysis.

as we mentioned above, acgh data is used in a diagnostic process. at this point a classification method has to be applied. in several papers, it has been suggested that the most accurate is a support vector machine   <cit> . in the next sections, we will evaluate this statement, by comparing svm to our new classifier based on jumping emerging patterns.

related works
in recent works, we have found a lot of information about processing acgh data, such as smoothing and clustering  <cit> . however, there are many fewer papers, which deal with a classification problem.

in  <cit>  and  <cit>  the classifications of combined data  are considered.

another work  <cit>  investigates the tumor classification based on dna copy number aberration determined using snp arrays. in that paper three classification methods: naive bayes, k-nn, and svm have been tested with a varying number of features. although the k-nn achieved the best leave-one-out cross-validation accuracy, the performances of other methods were comparable. the second conclusion of this work was that the best performance of classifiers was achieved when 5– <dig> features were selected. this fact reveals the importance of feature reduction algorithm in the classification of high-dimensional data. a new feature elimination methods for cancer classification using acgh data have been proposed in the article  <cit> . authors introduce a feature reduction algorithm based on an interval tree. in order to prove its efficiency, they compare the performance of a svm classifier on two types of data: 1) raw log2ratio data; 2) data processed by their feature reduction algorithm. the results show that their approach led to a significantly better classification. although the feature reduction procedure described by authors seems to be very useful, we have to point out some fallacies that we have found in their argumentation.

the first problem concerns the improper use of cross-validation. the cross-validation assumes that at the beginning of each run, data should be split into training and test data sets, and then all the operations before testing step should be done on both sets separately. however, in the system presented in  <cit> , the feature reduction based on interval tree was performed on training and testing data together. in other words, the knowledge about test samples is utilized indirectly to train the model, which is clearly improper. the second major drawback of experimental design is that the authors used only one measure to evaluate a classification performance – the accuracy. we assume that it is insufficient and does not show a real classification performance, since one of the tested data sets   <cit> , is strongly unbalanced. in our paper, we investigate the same tp <dig> data set with revised experimental pipeline and more adequate evaluation measures. beside testing the svm, we also check our new method – limjepclassifier.

methods
jumping emerging patterns
the classifiers based on emerging patterns  or jumping emerging patterns , have been considered one of the most successful classification systems  <cit> . however, it has hardly ever been tested with high-throughput data, because of the high computational complexity of ep. in this paper, we show how to overcome this issue by using "limited jep's".

first of all we present the definition of jumping emerging patterns.

definition  <dig>  given two data sets d <dig>  d <dig> we define a jumping emerging pattern from d <dig> to d <dig> as an itemset x , for which suppd <dig> ≠  <dig> and suppd <dig> =  <dig> 

we will denote each jep from class p to class n by attribute-value pairs.

definition  <dig>  the minimal jep from p to n, which contains pattern  x, is such a jep for which, does not exist a jep, which contains pattern y and y ⊂ x. in other words, jep is minimal when all the patterns contained in its itemset do not form any other jep.

example  <dig>  consider a decision table – table  <dig>  we have given two data sets – classes p and n. by the definition patterns: {}; {, }; {, , } are examples of jep's, from class p to n. however the jep {, , } is not minimal, because it contains itemsets {}, which form other jep.

in this paper we consider only minimal jep's.

limited jep's
definition  <dig>  limited jep's at the level k are a set of minimal jep's, for which the number of attributes in each itemset equals k. we denote limited jep's at level k by limjepk.

example  <dig>  according to the table  <dig>  there are:

• one limjep <dig> from p to n - {};

• one limjep <dig> from p to n - {, } and three limjep <dig> from n to p - {, }, {, }, {, };

• no limjep <dig> and limjep <dig> 

the major problem with classifiers based on jep's is their high complexity, which increases rapidly with the number of attributes. in  <cit>  the authors show that the emerging pattern problem is max-snp hard. in order to overcome this issue several algorithms were developed, which significantly reduce the computation time: jepproducer  <cit> , cp-tree  <cit> , fp-tree  <cit> , classifier based on local projected jep  <cit> . however, even with those methods it is still not possible to search all jep's when the number of features exceeds few dozens.

in this paper, we claim, that in the case of high-throughput data, we can build a classifier based on limited jep's for lower limjep levels only, instead of computing all the patterns. in the following sections, we will show that this solution leads us to the construction of an efficient, and successful classifier. below, we present how the discriminative power of jep's may vary among levels of limited jep's.

real and unreal jep's
we introduce the concept of real and unreal jep's to illustrate the quality of patterns at different limjep levels.

definition  <dig>  let u denote a decision table of itemsets, where two classes  are given. from table u we select a subset of samples denoted by a. we say that the pattern p is a real jep in decision table a ⇔ if the p is still a jep in table u. otherwise p is unreal. we will denote all jep's  as all.

example  <dig>  consider table  <dig> as u. suppose we select from u rows  <dig> , <dig> and  <dig>  we denote the new table by u'. consider two patterns: p <dig> = {} and p <dig> = {}. both patterns are jep's in u', however only p <dig> is still a jep in u. in reference to definition  <dig>  p <dig> is unreal jep, and p <dig> is real jep in u'.

in our study ratios of real to all jep's are used, to measure the quality of limjep's at the given limjep level.

proposition  <dig>  for a given decision table u with the number of rows |u|, let u' be a training data set derived from u. similarly, we denote u" as a set of rows selected from u'. we assume, that |u'| - |u"| ≪ |u"|. it means that a great majority of rows was selected. then, if we compute jep's for tables u, u' and u", we can easily determine the number of real jep's in u" with respect to u' and the number of real jep's in u' in respect to u for each of the limjep level. we put it that for a given limjep level the ratio real/all jep's is almost constant among tables u" and u".

the proposition  <dig> allows us to infer from the training data about the quality of jep's at a given limjep level without a knowledge about test samples. note, that in order to obtain the quality of investigated decision table u, we need to use only the training data  and the table u" which is derived as a subset of u'.

we tried to confirm proposition  <dig> by testing tp- <dig> data set, described in the next section. because of the high computational complexity, we used a decision table with the number of features reduced to  <dig>  data set was processed  <dig> times, as follows:

 <dig>  from original data set  we select randomly 80% of rows as training data .

 <dig>  from u' we select 90% of rows, and denote it by u".

 <dig>  we compute all jep's at limjep levels  <dig>   <dig> and  <dig> for tables u, u' and u".

 <dig>  we calculate and compare real/all jep's ratios in u' and u" at each level.

in table  <dig> we present three samples of real/all ratios at each limjep level and mean ratios from whole experiment .

as we can see, real/all ratios behave similarly for u' and u". for a fixed limjep level the differences in ratio between u' and u" at each run are relatively low. what is more, all the rows preserve the same, descending order of ratios. the best score is observed for limjep <dig>  next for limjep <dig> and limjep <dig>  we have mentioned above that proposition  <dig> gives us the possibility to predict a quality of jep's at given limjep level. it seems reasonable, that in a similar way, we can investigate other features of our data set, such as the distribution of real jep's in classes. this could be valuable information, especially when we build a classifier, which works with unbalanced data.

hierarchical strategy of classification
the fundamental application of jep's is a classification. during the training step a classification model is built, which means that jep's contained in training data are computed. in order to classify new data, the test sample is compared with all jep's from the model. if the given jep matches the sample, the algorithm increments the support for a class, which is associated with this jep. finally, the class with the greatest support is selected as a result.

example  <dig>  suppose that the table  <dig> is the given training data set. in this case, the derived model will contains two minimal jep's from class p to n: {}, {, }; and three from n to p: {, }, {, }, {, }. consider the test instance { <dig>   <dig>   <dig>  1}. the classifier searches for all jep's in the model which match this instance. in particular example there are two such jep's from class p to n and no jep's from class n to p. based on this knowledge, the algorithm can easily decide that test sample should be classified as class p.

the strategies of classification with jep's usually take into consideration the whole population of found jep's  <cit> . several algorithms filter or weight jep's in reference to their support in the training data set  <cit> .

unfortunately, these approaches did not prove useful in the case of acgh data. the accuracy of classification performed by traditional jep techniques was revealed to be lower than the accuracy of other classifiers such as svm. what is more, these methods are computational intensive when we deal with high-throughput data.

these facts motivated us to look for a more accurate strategy of jep's classification. in this paper, we propose a new algorithm of classification with jumping emerging patterns named limjepclassifier which is based on the knowledge of variability of discrimination power at different limjep levels. to the best of our knowledge, up to now there was no strategy that refers to limjep levels. the steps of algorithm are presented below.

for a given model, computed sets of limjep's at levels  <dig>   <dig> ..., m, where m ≤ number of attributes, limjepclassifier processes a test sample as follows:

 <dig>  sorts levels of limjep's in reference to real/all ratio in the way explained in proposition  <dig> 

 <dig>  selects the best level and tries to classify the sample with jep's from this level.

 <dig>  if success , returns the result; or else removes the last-considered level and goes back to point  <dig> 

 <dig>  if no class is selected, chooses the most frequent class or randomizes it from appropriate distribution.

it is important that the real/all ratio is derived from the table u", which is constructed based on the samples selected from a training data.

the other thing which is worth noticing, is that in our implementation of presented algorithm, we mainly use only the first two limjep levels: limjep <dig> and limjep <dig>  we found out that applying more levels does not improve the performance of classifier.

in the result section, we will show the advantages of our approach over other classification methods.

classification pipeline
in order to test various classification models, we have developed a pipeline which includes preprocessing, model building and result analysis steps. the whole pipeline is presented in figure  <dig>  below, we describe each step in detail.

thresholding
in this step, we apply thresholding for all the data in order to determine normal, gain and loss regions. this procedure is done with the two values which indicate positive and negative thresholds, as follows:

• if the value of spot is above the positive threshold, we mark it as a gain.

• if the value of spot is below the negative threshold, we mark it as a loss.

• in other cases, spot is marked as normal.

for each spot, we assign new values:  <dig> for normals,  <dig> for gains and - <dig> for losses.

sampling training data
in order to perform cross-validation we sample training data from the table achieved in the previous step. the following operations are performed only on training data until testing stage.

feature reduction
feature elimination is divided into the following two steps:

• applying feature reduction algorithm based on interval tree .

• selecting the most valuable features obtained by information gain approach.

below we present both algorithms in detail.

merging intervals
the core idea of this algorithm is to compress the data by merging segments . arisen intervals can be used as new features. in the procedure all continuous sets of columns with the same values in each row are retrieved and transformed into one single column.

it is clear that the derived-in-this-way attributes, contain more statistical information about distribution in classes than the previous set with separated columns. this statement was confirmed in the paper  <cit> , in which it was shown that the usage of this procedure significantly improved the accuracy of classification. it is worth noticing that the presented algorithm was applied only for training data, unlike in article  <cit> . we claim that such an attitude is more proper in relation to classification problem, because we do not use any test data during the training step.

however, this approach involves some complicating circumstances. note that each sample from the test data has to be adjusted into a structure of a table derived from the training data set. in order to do that, it is required to transform a test sample by combining the same sets of columns, which were merged in the training data table. the main problem is how to assign proper values for merged attributes. in the case when all the values are equal, it is trivial and we assign this value. otherwise, we select heuristically the value which appears most frequently in the given interval. we claim that this problem should be more deeply investigated in future research.

information gain
although applying the merging interval algorithm significantly reduces the number of attributes, there are still a great number of columns left. we decided to use an information gain approach  <cit>  to weight the importance of each feature and sort them in a descending order. the algorithm measures the number of bits of information obtained for category prediction by knowing the presence or absence of a feature. the information gain of feature f is defined as:

 ig=−∑i=1mplog⁡p+∑v∈v∑i=1mpplog⁡p, 

where yi : i =  <dig> ..m are the set of categories and v set of possible values of f. at the end, the fixed number of top-ranked features are selected in order to form a final decision table.

classification
when we obtain a final decision table, we train on it two classification models svm   <cit>  and limjepclassifier.

the first classifier, svm, was selected because it is commonly used in the case of high dimensional data. what is more, there can be found many applications of svm to microarray gene-expression data, which are quite similar to acgh data.

the core idea of svm is to construct a separating hyperplane in the space of n-dimensional data between two sets of vectors . the hyperplane should maximize the margin, defined as a sum of distances from hyperplane to the closest positive and negative samples  <cit> .

the second classification method is our new approach – limjepclassifier which was described in the previous section.

data source
in our study we used a commonly investigated data set – tp  <dig>  published by  <cit> . the data are freely available at  <cit> . the acgh data come from bac arrays hybridized with oral squamous cell carcinomas . the data set contains  <dig> tp <dig> mutant samples  and  <dig> wildtype samples . each sample in a data set is featured by  <dig> clones .

RESULTS
evaluation measures
a typical problem with acgh data is an unbalanced class distribution. in the case of the considered tp <dig> data set, the proportion between classes is 14: <dig>  moreover, the weight of each class is different. the rare class of sick subjects  is more significant than the large set of samples of a control group. traditionally, the rare and more important class is marked as "positive", while prevalent class is called "negative".

when one tries to investigate a classification with unbalanced data, one has to be very careful in selecting the measure of classification performance. in particular, the accuracy alone, is insufficient, because it does not tell us about a performance of predicting the positive class.

the common approaches of deriving alternative evaluation measures are based on confusion matrix, where all tested samples are grouped in four categories: "true positives" , "false positives" , "true negatives"  and "false negatives" , with respect to the classification results.

the sensitivity and the specificity of classifier are defined as follows:

• sensitivity=tptp+fn

• specificity=tntn+fp

in order to obtain a single measure of classifier performance, the sensitivity and the specificity can be integrated into the geometrical mean:

 g-mean=sensitivity×specificity. 

experimental setup
in this section, we present a comparison of two classification methods – svm and limjepclassifier. both algorithms were tested according to the pipeline and on the data set, described in methods section. we decided to compare our method with svm, because it is considered to be the best algorithm used for classification of acgh data and it has been commonly tested in other works. we did not compare our algorithm with other methods based on jep's, because traditional strategies of jep's classification are slow and ineffective.

limjepclassifier, as well as the whole experimental pipeline were implemented in the r language  <cit> . in order to process log2ratio data, we used the freely available "acgh" package, designed to deal with acgh data. another popular r package – "e-1071" was used to perform tests with svm classifier.

classifiers were tested with cross-validation where the training to test data ratio was 80%. in order to investigate the influence of the thresholding procedure on the classification results we performed the two runs of experiment with different pairs of positive and negative threshold values:  and . for each pair of threshold levels the cross-validation was repeated  <dig> times with various numbers of selected features . note that feature selection, based on both interval merging and information gain approach, were applied under cross-validation.

limjepclassifier vs svm
in figures  <dig>   <dig> and  <dig> we present the comparison of classification performance of svm and limjepclassifier. in each figure the different measure of performance is reported. the  and  versions of plots correspond to two pairs of threshold levels applied in the experiment.

figures 3a and 3b show the accuracy of classifiers for various numbers of features. in both cases the values change between  <dig>  and  <dig> . for the threshold  the differences between svm and limjepclassifier are negligible. in figure 3b we see that the accuracy is still similar, however, a little supremacy of svm could be observed.

on the other hand, it is worth noticing that the number of features have a very low impact on accuracy that is not a proper measure of classification performance in the case of unbalanced data. the last observation seems to confirm this statement.

figures – 4a and 4b, show the comparison of sensitivity which is the performance of a prediction of the class of affected subjects. we can observe from the results that for both threshold levels, limjepclassifier is much better than svm. furthermore, the sensitivity of svm is below  <dig>  which means that the classifier cannot really distinguish between positive and negative class. the other difference between two classification methods is the way how the sensitivity changes along the x axis. in case of limjepclassifier the sensitivity is relatively low at the beginning and increases with the number of features, while for svm we cannot observe such a tendency.

the last pair of plots  present the g-mean value in which the sensitivity and specificity are included. like in the previous case, the limjepclassifier significantly predominated over svm.

CONCLUSIONS
it is clear that improving a classification of acgh data can contribute to great progress in many medical applications. unfortunately, because of the imperfections of this technology, low signal to noise ratio and rapidly increasing microarray resolutions, classification still remains a very difficult problem.

in this paper, we have investigated the problem of the classification  using dna copy number data which are characterized by an extremely high dimensionality and unbalanced distribution. we have introduced the concept of limited jep's and we have shown how they can be applied in acgh data classification. what is more, we suggest that the performance of a given limjep level can be measured by analysing the structure of the training data.

to confirm the performance of our approach we have developed an experimental pipeline and we have compared limjepclassifier with svm. experiments have been performed using widely tested tp- <dig> data set  <cit> . although the svm is considered one of the most successful methods of classifying high-throughput data, limjepclassifier has revealed a much better performance in predicting the class of sick subjects. the main advantage of limjepclassifier over svm is that it deals more effectively with unbalanced data. we have not confronted our results with the previous one, presented in article  <cit> , because we claim they are incomparable. we put it, that both experimental setup and results presentation showed in  <cit>  were done in an improper way.

in this research, we have found out that applying limited jep's can be useful in acgh data classification. however, this issue should be investigated more deeply in future studies. it would be interesting to test limjepclassifier with other data sets. furthermore, it would be valuable to check the influence of different segmentation methods on the performance of limjepclassifier.

competing interests
the authors declare that they have no competing interests.

authors' contributions
kw and tg designed all experiments and algorithm of limjepclassifier. kw directed the study, guided the whole project and assisted the manuscript writing. tg implemented limjepclassifier and testing pipeline and wrote the manuscript.

