BACKGROUND
recently non-coding rna  have received enormous attention within the field of rna biology. ncrnas play crucial roles in different biological processes, and their dysregulations have been associated with many human diseases . thousands of new ncrnas have been discovered, whose functions have yet to be discerned. according to gencode v <dig> , around  <dig>  genes have been classified for human genome, of which more than  <dig>  are ncrna genes and only  <dig>  are protein coding genes, and the number of ncrnas is increasing annually  <cit> . while most of the functions of ncrnas are still unknown, therefore it is imperative to infer their functions based on their biological mechanisms. one of the known mechanisms is that ncrna functions via interacting with proteins  <cit> . to get the insight into ncrna’s functions, there is a need to identify whether this ncrna interacts with other proteins, which can help understand the mechanism behind biological processes involving rbps  <cit> .

there have been many promising progresses for large-scale rna-binding protein detection, e.g. reviewed extensively in  <cit> , such as rnacompete  <cit> , par-clip  <cit>  and rna-protein complex structure. however, these methods are still time-consuming and cost-intensive, especially in the post-genomic era. for example, experimental determination of complex structure is high-cost, and high-throughput technologies requires much time for careful hand-tuning of putatively bound sequences  <cit> . while there are a host of studies indicating the sequence specificities for protein-rna interaction, they suggest that sequences carry sufficient information for predicting rna-protein interaction  <cit> . hence, a reliable computational approach only from sequences is considered as a complement to identify rna-protein interactions, such as training machine learning models to predict interactions based on accumulated experimentally verified rna-protein pairs  <cit> . for protein-rna interactions prediction, some studies focus on interacting partner prediction , which predict whether an rna can bind to a protein or not. other studies further determine protein-rna binding interfaces in proteins , which can identify exact binding amino acids between rnas and proteins.

here, we aim to computationally predict interaction partner between rnas and proteins, which has attracted plenty of research efforts in past years . for instance, the catrapid inferred lncrna-protein association score from physiochemical properties  <cit> . furthermore, lncpro  <cit>  applied fisher linear discriminant to improve inferring association score between lncrna and protein using features similar to catrapid. different from the above two approaches, some studies consider rna-protein interaction as a classification problem. for example, pancaldi et al. applied random forest  <cit>  and support vector machine  <cit>  to classify a protein and an rna interact or not via integrating different sources of features, such as structure, localization and genomic context  <cit> . simple sequence features are closely related to rna-protein interaction  <cit> , so rpiseq trained a random forest model only using simple 3-mer and 4-mer features from protein and rna sequences, respectively  <cit> . more recently rpi-pred combined sequences and high-order 3d structural features to identify ncrna-protein interactions  <cit> .

many challenges still remain in this new area. first, in the above studies, their extracted features for proteins and rnas were hand-crafted. as an example, in  <cit> , the authors manually curated different sources of features, such as go information, but only  <dig>  of  <dig>  positive pairs had completely available features required for model training. so more than half of positive pairs have to be discarded, which could change the real distribution behind the data. additional file 1: figure s <dig> illustrates the distribution change of significant feature cysteine abundance from  <cit> . the variance of cysteine abundance in all positives is much smaller than after discarding some positives lacking all required features, thus suggestive of low discriminant power in original data. but after discarding them, it illustrates a significant impact of cysteine abundance on predicting rna-protein interactions, which may lead to overoptimistic performance. on the other hand, hand-crafting discriminant features or rules for rna-protein requires strong domain knowledge, how to select the features plays a crucial role in machine learning models.

second, previous studies mainly extracted information from observed sequences , but they generally got lowly discriminant features because of feature noises in the observed sequences. and general machine learning models might not well handle to mine hidden associations from the noise inputs. on the other hand, for machine learning models, it is indispensable to mine refined features buried in noise inputs via multiple abstractions and refinements. thus if we can automatically extract high-level discriminant features from some simple features based on only sequences, then the proposed method will be expected to be more robust in real-world applications.

deep learning provides a powerful solution for this kind of problems, it consists of model architectures with multiple layers of neural network , which can extract high-level abstractions from data automatically. meanwhile, deep learning has shown better performance than other popular machine learning methods in some research areas, such as speech recognition  <cit> , signal recognition  <cit> , etc. it also has been proved to be powerful in bioinformatics  <cit> . for example, deep learning has been successfully applied to predict rna splicing patterns in and across various tissues  <cit> . recently deepbind applied deep learning to determine sequence specificities of dna- and rna-binding protein, which outperforms other state-of-the-art methods  <cit> . similarly, deepsea learned regulatory sequence code from chromatin-profiling sequences using deep learning, which further prioritized functional variants  <cit> . in summary, deep learning has the following advantages over other sequence-based methods: 1) it can automatically learn specific sequence motifs for rna-protein  <cit> , and those sequence motifs have been found to directly mediate sequence-specific associations between rnas and proteins  <cit> . 2) it is able to reduce the impact of noises in the original data and learn real hidden high-level features  <cit> . furthermore, some deep learning-based methods even artificially introduce noises to reduce over-fitting, which can enhances model generalization and robustness  <cit> .

in this study, we propose a fully sequence-based method, ipminer, to predict ncrna-protein interaction using deep learning. first, it extracts raw sequence composition features from rna and protein sequences, then applies stacked autoencoder to extract hidden high-level features  <cit> , which are then fed into random forest to predict rna-protein interactions. furthermore, stacked ensembing is used to integrate different predictors to improve the model performance. our contributions are summarized as follows:  the newly designed network architectures can automatically extract abstraction features from sequence composition features of proteins and rnas, and is able to learn sequence specificities for proteins and rnas, respectively.  we applied deep learning to better fuse the learned high-level features from raw input features of proteins and rnas, instead of directly concatenating them to be fed into classifiers.  we introduced another logistic regression classifier layer based on the intuition behind deep learning to integrate the predictions from different methods, which improves the ipminer’s performance.

the experiments on our constructed lncrna-protein benchmark dataset from protein data bank   <cit>  demonstrate that ipminer achieves high performance. besides, we also test our method ipminer on previous published datasets, such as rpi <dig>  <cit> , rpi <dig> and rpi <dig>  <cit> , rpi <dig>  <cit>  and npinter <dig>  database  <cit> , and ipminer yields better performance in all datasets than other sequence-based methods rpiseq-rf  <cit>  and lncpro  <cit> .

RESULTS
in this study, we proposed ipminer , stacked ensembling of sda-rf, sda-ft-rf and rpiseq-rf, for predicting lncrna-protein interactions, where the rf stands for random forest, the sda stands for stacked denoising autoencoder, and the sda-ft stands for stacked denoising autoencoder with fine tuning. meanwhile we also tested the performance of sda-rf, sda-ft-rf, rpiseq-rf and lncpro on different datasets, including structure-based rpi <dig>  rpi <dig>  rpi <dig> and rpi <dig>  and non-structure-based npinter <dig> , rpi <dig>  <cit> , rpintdb   <cit>  and rpi <dig>  considering unavailability of rpi-pred and catrapid standalone, here we only compared ipminer with rpiseq-rf and lncpro  <cit> . lncpro only provides a prediction source code based on the trained model on their dataset, which overlaps with our constructed data rpi <dig> collected in this study. in addition, we focused on classification performance. to make it work for classification and be comparable with ipminer, we adapted lncpro’s source code. we only used the extracted features for rnas and proteins after fourier series transformation from lncpro, then feed them into random forest to evaluate the performance.
fig.  <dig> the flowchart of proposed ipminer. it proceeded in two main steps. a train stacked autoencoder models for rna and protein, respectively, and fine tuning for it using label information from rna-protein pairs. b apply stacked ensembling to integrate sda-rf, sda-tf-rf and rpiseq-rf, which used high-level features before fine tuning, high-level features after fine tuning and raw k-mer frequency features, respectively. the network architectures were 256-128- <dig> with  <dig>   <dig>  and  <dig> neurons in  <dig> hidden layers for stacked autoencoder



comparison between different layer architectures for ipminer
to investigate the impact of different network architectures on ipminer’s performance, we also designed two different network architectures with fully connected layer:

1) sep-256-128-64: it has two separate  stacked networks. one is for proteins, the other one is for rnas, their inputs are protein sequence features and rna sequence features, respectively. and the last hidden layer is the concatenation of the two sub-networks. the hidden layers for two stacked sub-networks are both 256-128- <dig>  here 256-128- <dig> means that the number of neurons for  <dig> hidden layers in stacked autoencoder are  <dig>   <dig>  and  <dig>  respectively.

2) con-256-128- <dig>  the raw input is concatenation  of protein and rna sequence features, which connects to one stacked networks. the hidden layers for stacked autoencoder is 256-128- <dig>  whose  <dig> hidden layers have  <dig>   <dig>  and  <dig> neurons, respectively.

from table  <dig>  we can see that sep-256-128- <dig> yielded over  <dig> % higher accuracy than con-256-128- <dig>  which indicated that when learning sequence specificities for rnas and proteins, neurons from rna and protein should not connect to the same neurons in successive layers. otherwise the information hidden in proteins and rnas will corrupt with each other. the results demonstrated that rna and protein k-mer features should have no interaction with each other, and stacked autoencoder can automatically learn sequence specificities inside proteins and rnas, respectively.
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
raw input is concatenation of 3-mer frequency features of protein and 4-mer frequency features of rna

the boldface indicates this measure performance is the best among the compared methods for individual dataset



different network architectures were trained on our constructed dataset using the different number of neurons in the hidden layers. the results shown in additional file 2: table s <dig> indicated that 256-128- <dig> achieved better performance.

ipminer achieved high performance for predicting lncrna-protein interactions
we first tested ipminer on our own constructed lncrna-protien interaction dataset rpi <dig>  the roc curve shown in the fig.  <dig> showed the comparison between the performance of ipminer, sda-ft-rf and sda-rf. all the three methods achieved high performance with an auc greater than  <dig> , ipminer performed a little better than the other methods. from table  <dig>  it yielded an accuracy of  <dig> , sensitivity of  <dig> , specificity of  <dig> , precision of  <dig>  and mcc of  <dig> , which was better than piseq-rf with an accuracy of  <dig> , sensitivity of  <dig> , specificity of  <dig> , precision of  <dig>  and mcc of  <dig> , respectively. on the other hand, for individual predictors, sda-rf, sda-ft-rf and rpiseq-rf perform differently in different measures. sda-ft-rf obtained the best accuracy and specificity, rpiseq-rf got the best sensitivity and precision. this implied that they have lower correlation on predicted interactions, which is very promising for combining them together. the reason is that the more diversity the base predictors have, the better the accuracy of the ensemble predictor achieves  <cit> , which was proved by ipminer’s performance.
fig.  <dig> performance on rpi <dig>  performance comparison between ipminer, sda-ft-rf and sda-rf on lcnrna-protein dataset rpi488



we further compared ipminer with lncpro on rpi <dig>  lncpro yielded an accuracy of  <dig> , sensitivity of  <dig> , specificity of  <dig> , precision of  <dig>  and mcc of  <dig> , which was a little worse than ipminer, and a little better than priseq-rf . however, compared to ipminer and priseq-rf, lncpro has some disadvantages: 1) it cannot predict for protein sequence shorter than  <dig>  which is required by protein structure prediction tool predator  <cit> . 2) it took long time to predict rna structure, especially for long rna sequence, using rnasubopt  <cit> . in addition, the rna sequence must be shorter than  <dig>  otherwise the rnasubopt software will only process the first  <dig> nucleotides. the above is also the reason that we do not include lncpro in our ensemble predictor ipminer. one of ipminer’s merit is that it directly extracts low-level features from sequences, which does not depend on other prediction tools and is applicable to any protein and rna pairs.

we also tested ipminer on two lncrna-protein datasets  with lower sequence similarity, which both have rna sequence similarity cut-off  <dig> %, but different protein sequence similarity cut-off . as indicated in additional file 3: figure s <dig>  ipminer achieved the auc of  <dig>  and  <dig>  on rpi <dig> and rpi <dig>  respectively, which was a little worse than rpi <dig> with the auc of  <dig> , indicating sequence similarity have limited impact on ipminer and does not lead to an inflated estimate of the predictive performance.

comparison between different ensembling strategy
in ipminer, we applied stacked ensembling strategy to integrate different predictors, here we compared it with general averaging ensembling . as shown in fig.  <dig>  stacked ensembling achieved the auc of  <dig>  on rpi <dig> dataset, it increased by  <dig> % over averaging ensembling with the auc of  <dig> . when using logistic regression to integrate the outputs from  <dig> predictors, it got weights  <dig> , - <dig>  and  <dig>  for sda-ft-rf, sda-rf and rpiseq-rf, respectively. the contribution of sda-ft-rf was approximately  <dig> and  <dig> times more than rpiseq-rf and sda-rf, respectively, which implied that different predictors contributed to final combined result differently. on rpi <dig> dataset, the  <dig> predictors had smaller difference than on rpi <dig> , implying the predictors on rpi <dig> have higher correlation than on rpi <dig>  stacked ensembing  improved the auc with higher margin than averaging ensembing  on rpi <dig>  shown in additional file 4: figure s <dig>  but compared to the improvement on rpi <dig>  it is relatively smaller. the results indicated that stacked ensembling is very promising for improving the performance from different predictors, especially for those with lower correlation.
fig.  <dig> ensembing strategy. performance comparison between stacked ensembling and average ensembling on dataset rpi2241

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
the positive pairs are all from original papers. the negative pairs for rpi <dig> is from original paper

the boldface indicates this measure performance is the best among the compared methods for individual dataset



comparing ipminer with other methods
to test the reliability and robustness of ipminer, we also compared it with other sequence-based methods rpiseq and lncpro on other published ncrna-protein and rna-protein datasets. in study  <cit> , the authors proposed rpiseq-rf and rpiseq-svm for predicting rna-protein interaction, and rpiseq-rf performed better than rpiseq-svm on both rpi <dig> and rpi <dig>  accordingly here we only compared ipminer with rpiseq-rf.

as shown in table  <dig>  for individual predictors on rpi <dig>  sda-ft-rf achieved the best performance with an accuracy of  <dig> , sensitivity of  <dig> , specificity of  <dig> , precision of  <dig>  and mcc of  <dig> , which indicated that fine tuning can improve extracting complex abstraction features, and it increased the accuracy with  <dig> % over baseline rpiseq-rf . on rpi <dig>  sda-rf obtained the best performance with a little advantage over rpiseq-rf and sda-ft-rf. and on rpi <dig>  rpiseq-rf yielded a little better performance than sda-rf and sda-ft-rf. in summary, sda-ft-rf achieved similar performance with slightly worse accuracy on some datasets, but it can improve the performance on certain datasets a lot.

on the other hand, the above results indicated that individual predictors can perform differently on different datasets, and no single predictors can surpass others in all datasets. so ipminer applied stacked ensembing to integrate different predictors. as indicated in table  <dig>  ipminer was superior to all individual methods on all datasets, and improved a lot over individual predictors in some datasets. on rpi <dig>  ipminer yielded an accuracy of  <dig> , which increased about  <dig> %,  <dig> %,  <dig> % over single predictor sda-ft-rf , sda-rf  and rpiseq-rf, respectively. ipminer achieved a prediction accuracy of  <dig>  with an increase of about  <dig> % over all single predictors on rpi <dig>  and an accuracy of  <dig>  with an increase of  <dig> % over all single predictors on rpi <dig>  the results showed that stacked ensembing can improve the prediction performance on all datasets, demonstrating the effectiveness for integrating different predictors.

in addition, we also compared ipminer with lncpro on these  <dig> datasets as shown in table  <dig>  the results indicated that lncpro performed worse than ipminer among all  <dig> datasets. especially on rpi <dig>  lncpro yielded a mcc  <dig> , much worse than mcc  <dig>  of ipminer. meanwhile lncpro performed a little better than priseq on rpi <dig> and rpi <dig>  but a little worse on rpi <dig>  it also indicated that individual predictors performed differently on different datasets.

for rpi <dig> and rpi <dig>  it is worth mentioning that rpiseq-rf performed worse on our constructed dataset than  <cit>  on their own dataset, which had the same positive pairs but different selected negative pairs, indicating different negative datasets had an important impact on model performance. however, on rpi <dig>  using their provided positive and negative pairs, ipminer and rpiseq-rf yielded much better performance. rpiseq-rf achieved the accuracy of  <dig> , which was much better than rpi-pred with the accuracy of  <dig>  using sequence and predicted structure, even better than the accuracy of  <dig>  using sequence and experimentally determined structure  <cit> .

ipminer’s performance on large-scale non-structure-based experimental data
to evaluate our proposed method on other different sources of rna-protein interaction datasets, we downloaded another two larger non-structure-based experimental datasets: one is npinter <dig> , consisting of  <dig> experimentally verified ncrna-protein pairs from  <dig> model organisms  <cit> . the other one was rpi <dig> studied by  <cit> , which is based on published interactions from  <cit> . it covered  <dig> positive pairs and  <dig> negative pairs. here we created a balanced training dataset via randomly down-sampling  <dig> positive pairs from positive dataset for 5-fold cross-validation.

as shown in table  <dig>  for npinter <dig>  dataset, rpiseq-rf yielded a better accuracy than any other individual predictors, which was better than sda-rf , sda-ft-rf  and lncpro. but on rpi <dig>  sda-ft-rf got the best performance  with huge improvement over sda-rf ,rpiseq-rf  and lncpro, which also implied that there was no single predictors defeating others on non-structure-based datasets, which was similar to structure-based datasets.
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
for rpi <dig>  it has  <dig> positive pairs and  <dig> negative pairs. here we randomly sub-sampling positive pairs from original paper to create balanced dataset, so it actually consists of  <dig> negative pairs and  <dig> positive pairs

the boldface indicates this measure performance is the best among the compared methods for individual dataset



in addition, ipminer was still superior to all single predictors on both datasets, it achieved the high accuracy of  <dig> ,  <dig>  on npinter <dig> , rpi <dig> respectively. especially for rpi <dig> dataset, it was an increase of about  <dig> % over rpiseq-rf , and stacked ensembling increased the accuracy from  <dig>  of best individual predictor to  <dig>  at large margin. meanwhile it also had a very huge improvement compared to the previous reported accuracy of  <dig> % using rf classifiers with different sources of features  <cit> . the above results convinced that ipminer can also be applied for non-structure-based experimental data.

predicting ncrna-protein interactions using ipminer
to verify ipminer’s ability of predicting rna-protein interaction, we further investigated the performance of our trained model from rpi <dig> on npinter <dig> , rpi <dig> and rpintdb dataset. there is no overlapped interaction pairs between rpi <dig> and the  <dig> datasets. for npinter <dig> , ipminer yielded the promising predictions of interactions, it correctly predicted  <dig>  % of total interactions, which is better than  <dig> % of rpi-pred  <cit> . as shown in table  <dig>  ipminer predicted  <dig>  %,  <dig>  %,  <dig>  %,  <dig>  %,  <dig>  %,  <dig>  % for homo sapiens, caenorhabditis elegans, mus musculus, drosophila melanogaster, saccharomyces cerevisiae and escherichia coli, respectively. it also yielded a similar performance on rpi <dig> for different species and predicted  <dig>  % of total interactions. the results on both datasets indicated that ipminer is very promising for predicting ncrna-protein interactions.
for npinter <dig> , rpi-pred can predict  <dig> % of total interactions  <cit> . if proteins and rnas in a pair are obsolete, then this pair will be removed. for example, in rpi <dig>  protein o <dig> is obsolete in uniprotkb, and ncrna u <dig> interacts with o <dig>  this pair was removed in rpi <dig>  in rpintdb, there is no organism information for some interaction pairs, so we only report the total prediction accuracy



furthermore, ipminer correctly predicted  <dig>  % of all interactions on the largest dataset rpintdb with  <dig>  interactions  <cit> , which was integrated from different sources of rna-protein interactions, such as rna-protein complexes, literature mining and npinter <dig> . and priseq-rf was able to correctly predict  <dig>  % of them, which was lower than ipminer. the results on this large-scale dataset also indicated the power of ipminer.

in addition, we ran cd-hit tool to reduce sequence identity between the testing datasets and rpi <dig>  take npinter <dig>  for example, we removed similar sequences using cd-hit against rpi <dig>  so that there were no sequences with sequence similarity greater than  <dig> % for protein and rna sequences between npinter <dig>  and rpi <dig>  then we removed those interaction pairs whose protein or rna has sequence identity greater than  <dig> % with rpi <dig>  finally, the number of interaction pairs for npinter <dig>  are reduced from  <dig>  to  <dig> . we tested the non-redundant  <dig>  pairs using our trained model on rpi <dig>  it yielded an accuracy of  <dig>  %, which was a little lower than  <dig>  % on original npinter <dig> . the results shown in additional file 2: table s <dig> indicated that there is only minor performance difference after removing minor part of redundant interaction pairs. the same processes were also done for rpi <dig> and rpintdb .

constructing ncrna-protein network using predicted scores from ipminer
we further applied our trained model from rpi <dig> on npinter <dig>  dataset to construct network for ncrnas and proteins, which can be used to infer the functions of ncrnas. for constructing network, we represented ncrna-protein pairs as a weighted network, where the edge weight between ncrna and protein was predicted probability from ipminer, then we used markov cluster  algorithm  <cit>  to do clustering on the constructed ncrna-protien network. for caenorhabditis elegans in npinter <dig> , ipminer correctly identified  <dig> of  <dig> interactions, then we constructed ncrna-protein network based on the similarity score from ipminer. the corresponding clusters after mcl clustering on the constructed network were shown in fig.  <dig>  we found a hub protein g5egr <dig> interacting  <dig> ncrnas and a hub ncrna n <dig>  interacting with  <dig> proteins  <cit> , which was experimentally verified using clip-seq data  <cit> .
fig.  <dig> interaction network. clusters of mcl clustering from ncrna network constructed from predicted ncrna-protein pairs using ipminer for caenorhabditis elegans



discussion
in this study, we presented a computational method based on deep learning and stacked ensembing to predict ncrna-protein interactions. it achieved an accuracy of  <dig> , sensitivity of  <dig> , specificity of  <dig> , precision of  <dig>  and mcc of  <dig>  on our constructed lncrna-protein dataset, respectively. comprehensive experimental results on other previous published datasets also were indicative of the effectiveness of ipminer. on some datasets, it improved the model performance with an increase of roughly  <dig> % over other existing sequence-based methods. the results also indicated that stacked autoencoder can extract the discriminant high-level features, which is very crucial for building machine learning models. where high-level features are the features automatically learned from multiple layers of neural network.

ipminer demonstrated good performance both on ncrna-protein and rna-protein prediction, which is better than the state-of-the-art methods. it is mainly due to the following reasons: 
the k-mer frequency itself indicated sequence-binding preference of rbps bound by are-binding proteins  <cit> , where over-represented k-mers in sequences can be enrich motifs for rna-protein binding  <cit> . the more frequent this k-mer sequence exists in a subset of sequences, the higher probability it is a binding motif.

deep learning is able to model complicate statistical characteristics in data  <cit> . k-mer feature is similar to vocabulary word in document, and deep learning can extract the abstraction features like topics in articles from bag of words  <cit> . so stacked autoencoder can automatically learn hidden relationship between k-mer sequence motif, it will extract the most informative high-level features from its compressed representation, which avoids curse of dimensionality via eliminating hidden irrelevant variabilities, especially for the high-dimensional raw k-mer input features. as shown in deepbind  <cit> , deep learning can automatically capture the specificities of binding motifs using convolutional filters, deepsea  <cit>  learned regulatory motifs from sequences, which both play a crucial role in rna-protein binding.

different predictors have different performances on different datasets, no single methods can surpass others in all datasets. different from manually designed average voting or majority voting, stacked ensembing can better integrate the strengths of individual predictors, which is implemented in the form of adding another classifier layer to automatically figure out how to fuse the outputs from individual predictors.



rna-protein interaction network can offer deep insights into rna cellular mechanisms  <cit> . for example, lpn  <cit>  constructed a lncrna-protein network using experimentally verified interactions, and found the potential co-regulation and functional link among lncrnas, which were also associated with diseases or cancer pathways. however, currently only a minor part of lncrna-protein interactions in nature are experimentally verified. to obtain a global view of interaction network, more and more interaction data should be integrated, including experimental detection and computational prediction. we expect ipminer to be integrated to construct large-scale network to discover the functions of lncrnas and other biological mechanisms.

currently our method is still trained on small dataset because of the difficulties to collect large-scale experimentally verified lncrna-protein pairs from complex structures in pdb. on the other hand, deep learning is expected more powerful on big dataset, then it will automatically learn more representative features  <cit> . so we need construct larger training dataset to cover all possible situations. for constructing training data, we can collect positive dataset from structure complexes and other experimental methods. nevertheless, it is very hard to verify negative pairs in nature, accordingly in general they are generated by pairing rna and protein randomly to get a balanced dataset with the same number of negative pairs. the rational behind constructing the balanced training dataset is that machine learning model has preference to dominant class when the data is unbalanced  <cit> . on the other hand, the trained model could still be biased trained on this dataset, it is because the negative dataset only cover small part of possible negative pairs in nature, and some of them could be still unverified interacting pairs. negative control data set had the impact on the constructed prediction models, as shown in rpi <dig> and rpi <dig>  rpiseq-rf performs worse on training dataset with only different selected random pairs, which indicates the negative samples are important for the performance. in future work, we will figure out a suitable approach for a better learning from the negative sample distributions. another strategy to cope with sample unbalance is to train models on positive samples without negative samples. for example, pripu trains a biased svm on only positive and unlabelled examples  <cit> .

although ipminer can achieve much better performance, there are still some limits similar to other machine learning-based approaches. it is a black box learning algorithm, and does not provide biological insights into ncrna-protein interactions. ipminer tries to automatically capture high-level features using deep neural network, and those learned high-level features have strong discriminate power but are still not well explained from biological perspectives. in future work, we expect to design better network architectures to learn high-level features with biological insights, such as introducing convolutional neural network to capture regulatory motifs  <cit> .

CONCLUSIONS
in this study, we presented a computational method ipminer to mine the hidden interaction patterns between ncrnas and proteins, which is based on stacked autoencoder, and further improves the performance by stacked ensembling. from simple sequence composition features, ipminer can automatically learn high-level abstraction features, which has strong discriminant ability for rna-protein detection. ipminer achieved high performance on our constructed benchmark lncrna-protein dataset. meanwhile, comprehensive experimental results on other rna-protein datasets also indicated that it can yield better performance than other state-of-the-art methods.

