BACKGROUND
genes in common regulatory mechanisms under specific conditions are likely to show similar expression patterns. identifying those patterns and the corresponding genes is one of the most important steps of microarray analysis to reveal the novel functions of genes, transcription factor-target relationships, and concerted gene functions in pathogenesis  <cit> . clustering analysis is commonly performed to identify groups of genes expressed in similar patterns. however, an accurate gene expression analysis can be hindered owing to limitations in clustering analysis. most clustering algorithms try to find non-overlapping groups of genes that show similar expression patterns under all experimental conditions. in a common situation, genes tend to be co-regulated, and thus, they could be co-expressed under a subset of experimental conditions, but not under all conditions. parts of genes in one expression pattern may exhibit a different expression pattern under other conditions because genes can participate in more than one function differently depending on the specific conditions  <cit> . to resolve this issue, a biclustering method can suitably substitute general clustering methods by providing correlated gene clusters under a subset of conditions in an unsupervised gene expression analysis.

a bicluster can be defined as a sub-matrix in a whole gene expression data matrix representing groups of genes that show coherent expression patterns under a subset of conditions  <cit> . it is required to search exhaustive sets of biclusters for functional analysis of gene expression dataset. however, extracting complete sets of biclusters from a whole microarray data matrix is an np-hard problem that requires massive computation  <cit> . to avoid computational issues in biclustering, most existing biclustering algorithms use a greedy iterative heuristic approach that locally improves an appropriate scoring function starting from initial seed biclusters. to search more comprehensive sets of meaningful biclusters with a greedy iterative heuristic biclustering approach, it is important to determine initial seed biclusters and score functions properly.

the output from conventional biclustering methods shows lack of stability. since common biclustering methods depend on random starting seeds, the numbers and the contents of resulting biclusters are changing every time even though the biclustering algorithm is applied to the same microarray datasets. moreover, random starting seeds cannot guarantee diverse searching of biclustering and coherent biclustering results. however, in conventional biclustering methods, the use of random starting seeds was inevitable choice to compromise the computation complexity and there have been a few studies to overcome this limitation. erten and sözdinler  <cit>  proposed a localization method that reorders rows and columns in an initial data matrix to exhibit similar patterns in nearby locations. although this method could alleviate a part of the random seed issue by raising a chance to extract biclusters with similar patterns in a localized matrix, it could not solve comprehensiveness issues of random seeds.

the way to set the scoring function of bicluster is also important to improve the performance of biclustering. mean squared residue, which measures variability of biclusters based on the arithmetic mean of gene expression, was the first scoring function used to find biclusters  <cit>  and it was used in several other biclustering methods subsequently  <cit> . mean square residue is a fundamental measure to find similar expression values, however, this measure is not adequate for finding the scaling patterns of biclusters as proved by aguilar-ruiz  <cit> . inability to find a scaling pattern can be a major drawback in biclustering analysis because groups of genes showing similar expression patterns with different scales are also meaningful correlated gene clusters that we aim to find.

in this point of view, the correlation coefficient can be an alternative scoring function to the mean squared residue. with this measure, correlated expression patterns, including both shifting and scaling patterns, can be detected and this is more relevant to the purpose of biclustering to find the co-expressed gene clusters under the same biological regulation. allocco et al. <cit>  showed that if the correlation coefficient of two genes is greater than  <dig> , there is more than 50% probability that such genes are regulated by a common transcription factor. bhattacharya and de  <cit>  proved that the correlation coefficient-based biclustering method, bi-correlation clustering algorithm , can find a greater number of common transcription factors and a significantly enriched biological function term than other non-correlation-based biclustering methods.

several correlation-based biclustering approaches have recently been proposed  <cit> . bcca is a pearson correlation coefficient-based biclustering method that finds groups of genes showing a correlated expression pattern across a subset of microarray conditions. the process of bcca begins with pairs of genes. it backwardly eliminates uncorrelated conditions for each selected pair of genes to find correlated sets of biclusters. theoretically, a large number of biclusters can be found with bcca since bcca searches biclusters from all pairs of correlated genes. however, bcca is unable to extract comprehensive sets of biclusters in real situations since a backward elimination approach limits search spaces. bozda˘ g et al. <cit>  proposed the correlated pattern biclusters  algorithm, which discovers biclusters by setting reference genes with randomly selected columns, and then adding rows with high correlation and determining columns that have a smaller root mean squared error. in this case, the search space can be restricted again by the randomly selected seeds of columns. ayadi et al. <cit>  proposed the pattern-driven neighborhood search  algorithm for finding correlated expression patterns of biclusters based on spearman’s rank correlation. it converts an original numerical matrix to a discretized matrix with − <dig>   <dig>  or  <dig> for having trajectory patterns of genes. by using an initial solution of biclusters with a discretized matrix, this algorithm locally improves a solution by using descent search and perturbation. because the pdns algorithm requires initial solutions of biclusters from random selection or other fast greedy algorithms, such as cheng and church algorithm, biclustering results can be varied by selection of initial biclusters. the qualitative biclustering algorithm  is a recently proposed gene-wise discretization-based biclustering algorithm to solve the general form of the biclustering problem efficiently, including constant, shifting, and scaling patterns  <cit> . qubic converts a microarray data matrix into a simplified integer matrix called a representing matrix, from which it finds biclusters. therefore, qubic may not identify subtle changes of expression patterns. in addition, the search space in qubic is limited by the discretization process.

in this paper, we propose a novel biclustering algorithm called biclustering by correlated and large number of individual clustered seeds  aiming to search comprehensive sets of biclusters with correlated gene expression patterns. the primary process of biclic is not conducted with random seed biclusters, but with the full search of correlated seed bi-clusters that are determined by individual dimension-based clustering. then comprehensive sets of correlated seed biclusters are expanded to larger biclusters using a greedy iterative heuristic approach with the pearson correlation coefficient as the scoring function. as a result, biclic can find comprehensive biclusters accurately and also provides stable output in multiple runs.

we demonstrate that our proposed biclic method outperforms other conventional biclustering methods in finding correlated gene expression patterns both in simulated data sets and in real microarray datasets.

RESULTS
the proposed biclic algorithm is implemented in the r language. r-code of the biclic algorithm is freely available from http://bisyn.kaist.ac.kr/software/biclic.htm.

in this section, the performance of our biclustering algorithm will be compared with those of three well-known existing bicluster algorithms: bcca, cpb, and qubic. the bcca, cpb, and qubic programs are from each paper’s cited sources. the performance comparison can be divided into two parts. in the first part, simulated datasets are used to test the accuracy and the coverage of the biclustering algorithm to identify implanted biclusters that have various correlated patterns. in the second part, a real microarray dataset is used to show that biclic can extract more diverse sets of correlation-based biclusters than those extracted by compared methods, bcca and qubic, and the extracted biclusters from biclic are significantly enriched in biological terms, such as the gene ontology  functional category  <cit>  and the kegg pathway  <cit> .

simulated datasets
the purpose of this test is to verify the ability of biclic to search comprehensive correlated patterns as well as to compare the performance of biclic with that of the bcca and qubic algorithms. bcca is a correlation-based biclustering algorithm, whereas qubic is known for its ability to detect various patterns of biclusters, including correlation patterns. biclic can find diverse sets of correlated patterns, such as shifting, scaling, and shifting-scaling patterns. shifting and scaling patterns are defined in  <cit> . in a shifting pattern, each column is shifted by an additive factor. a shifting pattern follows equation  <dig> 

  eij=πi+βj 

the expression of the ith gene in the jth condition, eij, is a shifted expression of a base expression π in the ith row shifted by a shifting factor β in the jth column. in a scaling pattern, each column is scaled by multiplicative factors. a scaling pattern follows equation  <dig> 

  eij=πi×αj 

the expression in the ith gene in the jth condition, eij, is a scaled expression of a base expression π in the ith row by scaled by a scaling factor α in the jth column. the shifting-scaling pattern is a combination of a shifting pattern and a scaling pattern. each expression is shifted by a shifting factor and scaled by a scaling factor. the shifting-scaling pattern follows equation  <dig> 

  eij=πi×αj+βj 

bozda˘ g proved that the value of the pearson correlation coefficient is  <dig> for a perfect shifting, scaling, and shifting-scaling pattern  <cit> . therefore, any correlated patterns of shifting, scaling, and shifting-scaling patterns can be extracted by the biclic biclustering method, which has the pearson correlation coefficient as its scoring function. biclic considers positively correlated patterns when it generates biclusters because it collect genes with positively correlated with seed bicluster. however, negatively correlated patterns also can be discovered when positively correlated biclusters are compared each other and negatively correlated biclusters exists.

to simulate each correlated pattern, a  <dig> x  <dig> data matrix is generated with random values in a normal distribution whose mean is  <dig> and standard deviation is  <dig>  for each type of correlated pattern,  <dig> data matrices are generated, resulting in a total of  <dig> data matrices. for each data matrix,  <dig> non-overlapping biclusters of size  <dig> x  <dig> are implanted in the matrix. shifting, scaling, and shifting-scaling patterns of biclusters are generated from equations  <dig>   <dig>  and  <dig>  respectively. shifting and scaling factors are randomly generated from a normal distribution whose mean is  <dig> and standard deviation is  <dig>  to generate positively correlated patterns, randomly generated scaling factors are changed to absolute values of the original random values.

in addition, simulated datasets that have implanted biclusters with different-sized columns are generated to study the effect of column size on the performance of the biclustering algorithms. the size of the whole data matrix is  <dig> x  <dig>  the same as that of the previous simulated dataset. the number of rows of a bicluster is fixed as  <dig>  but the number of columns varies from  <dig> to  <dig>  five different sized biclusters are implanted in each  <dig> x  <dig> data matrix. these simulated datasets are also generated for three kinds of correlated patterns: shifting, scaling, and shifting-scaling.

to compare the accuracy of different biclustering algorithms on simulated datasets, the average match score proposed by prelic et al. <cit>  is used. the average match score is defined in equation  <dig> 

  sgm <dig> m2=1m1∑g <dig> c2∈m1maxg <dig> c2∈m2g1∩g2g1∪g <dig> 

g <dig> and g <dig> are gene sets in a bicluster set m <dig> and m <dig>  respectively. |g1∩g2| is the number of data elements in the intersection of g <dig> and g <dig> and |g1∪ g2| is the number of data elements in the union of g <dig> and g <dig>  sg represents the average of the maximum match score for all biclusters in m <dig> when compared to biclusters in m <dig>  if m <dig> is the set of implanted true biclusters and m <dig> is a set of generated biclusters, sg represents the average recovery score. the average recovery score measures how well the biclustering algorithm recovers implanted true biclusters. conversely, if m <dig> is the set of generated biclusters and m <dig> is the set of implanted true biclusters, the average match score, sg, represents the average relevance score. the average relevance score measures the level of similarity of all generated biclusters compared to implanted biclusters. a correlation threshold is required to run biclic, bcca and cpb. since all biclusters in the simulated datasets are perfectly correlated,  <dig> is used as the correlation threshold to run biclic, bcca, and cpb. the minimum numbers of rows and columns in biclusters, additional parameters of biclic, are set to five in order to filter out excessively small biclusters. we set rr parameters in cpb, parameter used for setting reference rows, as − <dig> in order not to limit the reference gene to a single gene and to find diverse biclusters related to each individual gene. we varied the r parameter in qubic, a rank parameter to discretize up- or down-regulated genes, from one to three and selected two for the maximum average match score in this experiment. after biclusters are generated with each algorithm, the average recovery and relevance scores are calculated using the match score in equation  <dig>  mean values of recovery and relevance scores are calculated from  <dig> independent simulated datasets for each pattern. the values are reported in tables  <dig> and  <dig>  table  <dig> shows the average recovery score of each biclustering algorithm in each correlated pattern. biclic shows a perfect recovery score in every correlated pattern. in contrast, the performances of bcca are poor in all correlated patterns, although bcca is known for its ability to extract biclusters with correlated gene expression patterns. it is thought that bcca cannot extract relatively small sized correlation-based biclusters in a column dimension that is 10% of the entire column size in a data matrix, because bcca finds correlation-based biclusters with backward elimination of columns. the average recovery score of cpb was  <dig>   <dig> , and  <dig>  in the shifting, scaling, and shifting-scaling pattern, respectively. cpb showed good performance in finding the simulated correlated expression pattern. qubic performed poorly in regard to correlated datasets, particularly in scaling patterns for recovering implanted biclusters, because it is difficult to capture correlated patterns with a discretized matrix, which is not an up- or down-regulated pattern. the mean values of average relevance scores of biclustering algorithms for each correlated pattern are shown in table  <dig>  average relevance scores of biclic are  <dig> in every correlated pattern. this means that all of the extracted biclusters from biclic are perfectly related to true implanted biclusters. in contrast, about 90% of extracted biclusters from bcca and qubic are irrelevant to true biclusters. although the average relevance score of cpb in each correlated pattern was higher than that of bcca and qubic, more than 30% of extracted biclusters from cpb are irrelevant to true biclusters. to test the ability of unbiased search for various sizes of biclusters with correlated patterns, each bicluster algorithm was applied to each pattern of the simulated dataset with varying column fraction level of bicluster size. the average recovery score of each biclustering algorithm in each correlated pattern is shown in figure  <dig>  bicic and cpb showed the perfect average recovery score,  <dig>  for all correlated patterns in every column fraction level. cpb could extract obvious correlated expression patterns regardless of column fraction level. although bcca can extract true implanted biclusters perfectly when the column fraction level is equal to or greater than 60%, the performance drops sharply when the column fraction level is 20% or 40%. this indicates that bcca cannot find biclusters with a small columns sizes, because bcca finds biclusters by backward elimination of columns from all columns in a dataset. in other words, bcca cannot find diverse sizes of correlation-based biclusters, compared to biclic. the average recovery score of qubic is less than  <dig> when the column fraction level is not 100%, for all correlated patterns. most average recovery scores of qubic increase with increasing column fraction level. because qubic drops genes that are not significantly up- or down-regulated during the discretization process, subtly changing correlated patterns of genes in small sized columns cannot be found.

the maximum and minimum numbers of the average recovery score are  <dig> and  <dig>  respectively. each average recovery score in table  <dig> is the mean value of the average recovery scores from  <dig> independent datasets.

the maximum and minimum numbers of the average recovery scores are  <dig> and  <dig>  respectively. each average relevance score in table  <dig> is the mean value of average relevance scores from  <dig> independent datasets.

experimental dataset
to investigate the usefulness of biclic in searching comprehensive sets of correlation-based biclusters, a yeast saccharomyces cerevisiae dataset  <cit>  and lung cancer dataset  <cit>  were analyzed. the yeast saccharomyces cerevisiae dataset shows yeast gene expression under different stress conditions. it consists of  <dig> genes and  <dig> conditions. the lung cancer dataset contains  <dig>  genes and  <dig> samples.  <dig> samples consists of  <dig> pulmonary carcinoid samples,  <dig> colon cancer metastasis samples,  <dig> normal lung samples, and  <dig> small cell lung carcinoma samples. since biclic is able to extract biclusters from numeric values of a microarray data matrix, no pre-processing step such as discretization or taking logarithms is necessary for biclic analysis. bcca and cpb also do not require a pre-processing step, but the qubic algorithm includes a discretization step. correlation thresholds for biclic, bcca, and cpb were set to  <dig>  to search biclusters with highly correlated expression. the minimum number of rows, mnr, and minimum number of columns, mnc, parameters of biclic were both set to five in order to filter out particularly small biclusters. for cpb, we set the maximum overlap level, mo, to  <dig> and the maximum number of biclusters, nb, to  <dig>  to extract comprehensive sets of biclusters. in addition, we did not determine the reference rows of cpb to extract biclusters related with diverse sets of individual genes. we varied the parameters of qubic to report more comprehensive sets of biclusters. although the default value of parameter o in qubic is  <dig>  restricting the number of biclusters, it was set to  <dig>  to report the maximum number of biclusters. duplicated biclusters are removed in the results of each biclustering algorithm.

table  <dig> summarizes the performance of the tested methods for yeast stress datasets. the number of found biclusters after each biclustering method was applied to the yeast stress dataset is reported. values in parenthesis represent values of seed biclusters using biclic. biclic found  <dig>  seed biclusters, which is greater than the number of biclusters found by bcca, cpb, and qubic. these seed biclusters were expanded to larger correlation-based biclusters, and biclic found  <dig>  non-duplicated correlation-based biclusters. bcca, cpb, and qubic found  <dig> ,  <dig> , and  <dig>  biclusters, respectively, but these numbers are considerably less than that of biclic. therefore, biclic searched correlation-based biclusters much more comprehensively. afterwards, the average sizes of extracted biclusters were computed. after the expanding and filtering steps, an average size of seed biclusters of biclic of  <dig> , dramatically increased to  <dig> . the biclusters extracted by bcca and cpb have a larger average size than those extracted by biclic and qubic. however, most of the extracted biclusters from bcca and cpb tend to be highly overlapped. qubic has the smallest average size of biclusters among the compared methods. to investigate the comprehensiveness of extracted biclusters, coverage was calculated in the gene dimension and the condition dimension for all cells in the dataset. the area covered by extracted biclusters was investigated for a  <dig> x  <dig> data matrix. if at least one bicluster contains a particular gene or condition, that gene or condition is covered with searched biclusters. cell coverage is calculated in the same way of gene coverage or condition coverage. if a certain cell is included in at least one bicluster, that cell is covered with searched biclusters. the coverage of each algorithm is listed in table  <dig>  seed biclusters of biclic covered  <dig> % of genes, 100% of conditions, and  <dig> % of cells in the yeast stress dataset. moreover, expanded biclusters of biclic covered 100% of genes, 100% of conditions, and  <dig> % of cells. in other words, biclic found a comprehensive set of correlation-based biclusters and most genes and conditions in datasets were included in at least one bicluster. compared to that, searched biclusters from bcca only covered  <dig> % of genes and  <dig> % of cells in the data matrix although 100% of conditions were covered by biclusters. even though bcca extracted  <dig>  biclusters with the greatest average size, those biclusters covered only a small fraction of cells in the yeast stress data matrix. in other words, bcca cannot search diverse sets of biclusters, and most searched biclusters in bcca are highly overlapped. cpb also searched highly overlapped biclusters. although average size of biclusters in cpb was  <dig> , those biclusters only cover  <dig> % of genes and  <dig> % of cells in the data matrix. the searched biclusters from qubic covered the smallest fraction of cells among the compared methods. this means that the discretization step hinders the search for a diverse set of biclusters. only highly up-regulated or down-regulated genes in limited conditions, which are about  <dig> % of cells in a data matrix, are searched in qubic.

values in parentheses denote the values of seed biclusters of biclic. the columns “count”, “average |i x j|”, “gene cov.”, “condition cov.”, and “cell cov.” show the numbers of biclusters, average sizes of biclusters, coverage of biclusters in the gene dimension, coverage of biclusters in the condition dimension, and coverage of biclusters for all cells in the matrix.

table  <dig> summarizes the performance of the tested methods for lung cancer datasets. bcca was eliminated for this test, because conducting bcca could not be completed with this dataset in reasonable time. the number of bicluster found by the three biclustering algorithms, biclic, cpb, and qubic, was reported. biclic found  <dig>  non-duplicated correlation-based biclusters. cpb and qubic found  <dig> and  <dig>  biclusters, respectively. particularly, cpb found considerably small number of biclusters. it means that it is inadequate to use cpb in finding diverse sets of biclusters despite the fact that cpb may perform well in finding correlated patterns of biclusters that are related with reference genes. the average size of biclusters found by cpb was  <dig> . <dig>  but the cell coverage was only  <dig> . it indicates that a number of genes and conditions of biclusters found by cpb may be highly overlapped among themselves. biclic covered 100% of genes, 100% of conditions, and  <dig> % of cells. in other words, biclic found diverse sets of biclusters with correlated expression patterns for lung cancer dataset.

values in parentheses denote the values of seed biclusters of biclic. the columns “count”, “average |i x j|”, “gene cov.”, “condition cov.”, and “cell cov.” show the numbers of biclusters, average sizes of biclusters, coverage of biclusters in the gene dimension, coverage of biclusters in the condition dimension, and coverage of biclusters for all cells in the matrix.

in an additional experiment, the overlap level of extracted biclusters in yeast stress dataset was evaluated for biclic, bcca, cpb, and qubic. all searched biclusters for each biclustering algorithm were arranged in decreasing order of bicluster size. when a bicluster had o% of its cells in common with any larger size biclusters, that bicluster was filtered. the remaining number of biclusters was computed after filtering overlapped biclusters with o% of overlap level. the proportions of biclusters remaining after removing overlapped biclusters by varying the overlap level for each biclustering algorithm are shown in figure  <dig>  in addition, summary statistics of the biclustering algorithm after removing overlapped biclusters at the 50% overlap level are presented in figure  <dig>  details about summary statistics at other overlap levels are provided in additional file 1: table s <dig>  the proportion of biclusters remaining decreased as the overlap level, the threshold at which to filter overlapped biclusters, decreased. however, the slope of decreasing proportions varies in each biclustering algorithm. while the proportion of biclusters remaining in biclic decreased slowly, that in bcca, cpb, and qubic decreased rapidly. if biclusters that have an 80% overlap level with larger biclusters are filtered, only  <dig> % of biclusters in cpb remain. 84% of biclusters in biclic remain on the same overlap level. moreover, 71% of biclusters in biclic remain, but only  <dig> % and  <dig> % of biclusters were remained in bcca and cpb, respectively when overlapped biclusters with 50% overlap level were filtered. at this overlap level, the average size of searched biclusters in bcca is  <dig> , which is much smaller than the average size of  <dig>  in biclic. in addition, only  <dig> biclusters are left in qubic after removing smaller sized biclusters that have more than 50% cells in common with any other larger biclusters. these remaining biclusters cover only  <dig> % of cells in the data matrix. this means that biclic extracted more comprehensive and not highly overlapped sets of bicluster than bcca, cpb, and qubic.

function enrichment evaluation
to investigate the biological relevance of extracted biclusters, functional enrichment of extracted biclusters was conducted with the go functional category and the kegg biological pathway for each biclustering algorithm. a modified version of cofeco  was used for functional enrichment analysis  <cit> . all searched biclusters from each biclustering algorithm were enriched to four functional categories: go biological process , go molecular function , go cellular component , and kegg pathway . the significance of association between a set of genes in a bicluster and a functional term was estimated by a hypergeometric test. the false discovery rate  multiple-testing correction  <cit>  technique was applied to the estimated p-values in order to avoid the situation whereby the higher the number of genes included in a bicluster, the more significant will be the p-value of the function enrichment. to test the ability to extract a comprehensive set of functional terms, the number of enrichment terms was calculated under the given significance threshold. among identical functional enrichment terms, the term with the highest significance p-value level was regarded as the unique one. in order to select it, the terms that had a larger significance p-value level were removed, so that the most significant term remained. figure  <dig> shows the number of enriched functional terms for searched biclusters in each functional category on the 1% significance level for yeast stress dataset. details of the number of enriched functional terms with a variety of significance levels are provided in additional file 1: figure s <dig>  function enrichment results appear to be similar in all functional categories.

biclic found the largest number of significantly enriched functional terms compared to bcca, cpb, and qubic in go bp, go cc, go mf, and kegg. compared to qubic, bcca and cpb found fewer unique functional terms, despite the fact that bcca and cpb found more and larger biclusters. this means that there are a number of highly overlapped genes and conditions in the biclusters found by bcca and cpb. furthermore, the functional enriched terms are also highly redundant in bcca and cpb. in contrast, biclic found comprehensive sets of biclusters. moreover, it could obtain a number of significant results from the functional enrichment process with go bp, go cc, go mf, and kegg.

we also conducted functional enrichment of extracted biclusters in the lung cancer dataset with the same way of analysing the yeast stress dataset mentioned above. figure  <dig> shows the number of enriched functional terms for extracted biclusters of biclic, cpb, and qubic in four functional categories on the 1% significance level. the tendency shown in the lung cancer dataset is similar to that shown in the yeast stress dataset. biclic found the largest number of significantly enriched functional terms compared to cpb and qubic. the small number of uniquely enriched terms in cpb algorithm results in finding only small number of biclusters.

CONCLUSIONS
in this paper, we proposed a novel biclustering method, biclic, to search for comprehensive sets of correlation-based biclusters. our algorithm conducts individual dimension-based clustering for efficient determination of comprehensive sets of correlated seed biclusters, which are further expanded to larger correlation-based biclusters. simulated and real microarray datasets were used to perform several experiments, and the results were compared to those obtained using bcca, cpb, and qubic. the experiments showed that biclic could find implanted correlated biclusters accurately while other competing methods such as bcca and qubic performed poorly. in addition, biclic was able to extract more comprehensive sets of biclusters than other biclustering algorithms. although cpb performed well in the simulated dataset, it performed poorly in the real microarray datasets. finally, the biclusters searched by biclic could be enriched to more diverse biological terms in go and kegg.

