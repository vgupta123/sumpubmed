BACKGROUND
a broad range of cellular functions are mediated through complex protein-protein interactions, which are commonly visualized as two-dimensional networks connecting thousands of proteins by their physical interactions. such a network perspective suggests that cellular effects and functions of proteins can only be fully understood in context with their interacting partners in a protein interaction network .

the study of pins has been made possible through recent advancements in high-throughput proteomics that have detected protein-protein interactions on a genome-wide scale and have generated large amounts of interaction data for several species including saccharomyces cerevisiae  <cit> , escherichia coli  <cit> , drosophila melanogaster  <cit> , caenorhabditis elegans  <cit> , and homo sapiens  <cit> . the corresponding protein interaction networks have been made publicly accessible through open access databases such as intact  <cit>  and dip  <cit> .

the accumulated protein interaction data have further supported recent protein network analyses that demonstrated the scale-free organization of pins, where the majority of proteins have a low number of interactions in the network, with a few highly-connected proteins  having a significant number of interacting partners  <cit> . such inhomogeneous network topology allows a pin to be robust against random removal of protein nodes, but vulnerable to targeted removal of network hubs  <cit> . in addition, previous studies have shown defined relationships between the degree of connectivity of proteins in pins, their sequence conservation, and cellular essentiality properties  <cit> . those studies indicated that highly-connected proteins  represent very attractive subjects for understanding cellular functions, identifying novel drug targets, and for use in the rational design of large-scale pull-down experiments.

although large-scale pins have already been experimentally determined for several species , in general, protein interaction data are still lacking for many organisms. thus, several computational approaches have been developed to predict protein-protein interactions utilizing existing bioinformatics data such as gene proximity information  <cit> , gene fusion events  <cit> , gene co-expression data  <cit> , phylogenetic profiling  <cit> , orthologous protein interactions  <cit>  and identification of interacting protein domains  <cit> . several bioinformatics approaches have also been developed to identify hypothetical interactions between proteins based on their three-dimensional structures  <cit>  or by applying text-mining techniques  <cit> . traditionally, such computational predictions have focused on the identification of pairwise protein-protein interactions with varying degrees of accuracy  <cit> ; however, none of them have been explicitly focused on predicting hypothetical hub proteins.

at the same time, it is reasonable to hypothesize that hub proteins should share certain common sequence or structural features that not only enable them to participate in multitudes of protein interactions, but also can be utilized for the theoretical identification of such hub proteins without prior knowledge of the corresponding pins. therefore, the goal of this study is to develop such a 'hub predictor' , capitalizing on experimental and bioinformatics data available to date for proteins in several model organisms with already-determined pins.

we have focused the construction of the hub classifier on gene ontology  data, which provide functional annotations for individual proteins using an expert knowledge base  <cit> . the advantage of applying go annotation to hub prediction lies in the readily available information for proteins in hundreds of species. importantly, the go annotations have been shown to reflect certain properties that can mediate protein-protein interactions  <cit> , but the annotation itself does not rely on the availability of corresponding experimental data. thus, the go-based hub classifier should be suitable for predicting highly-connected proteins, even in organisms that lack protein interaction data.

here we present the development of such a hub protein classifier, trained on the existing go and protein-protein interaction data for escherichia coli, saccharomyces cerevisiae, drosophila melanogaster and homo sapiens species. the generated models were cross-validated and tested on two external protein interaction data sets: methicillin-resistant staphylococcus aureus   <dig> and caenorhabditis elegans. the developed bioinformatics approach has not only demonstrated an improved accuracy in identifying highly-connected pin nodes , but has also shown an improved speed and a lower demand on computational resources.

to illustrate a possible application of the developed tool, we have used it for rationalizing a bait selection strategy for a large-scale protein complex pull-down experiment.

methods
data acquisition
protein-protein interaction data
protein interaction data used for the training and testing of the hub protein classifier were obtained from the intact database  <cit>  for the following species: escherichia coli k  <dig> , saccharomyces cerevisiae , drosophila melanogaster , and homo sapiens  . two external validation data sets were collected for protein interactions in mrsa <dig>  and caenorhabditis elegans . table  <dig> lists the total number of proteins and their interactions of the four species in the training and testing, which have been combined into a single data set for the subsequent analyses. similar information on the external validation sets is shown in table  <dig> 

the top table lists the protein interactions and hubs in each of the four species, and the bottom part of the table lists the number of unique go terms for each annotation category.

the top table lists the protein interactions and hubs in each of the two species, and the bottom part of the table lists the number of unique go terms for each annotation category.

hub proteins were identified based on their numbers of protein interactions and their percentile ranking relative to other proteins in the same species. proteins of the same species were divided into different percentile groups, sorted by the number of protein-protein interactions in a decreasing order . it is clear that hub proteins have more interactions than non-hubs, but currently there is no consensus on exactly how many interactions a hub protein should have. often, hubs are defined arbitrarily to have at least certain number of interactions  <cit> . in our study, the hub selection criterion was based on the position of a sharp turn  on an accumulative protein interaction distribution plot from each of the four species. as shown in figure  <dig>  the protein interactions followed a power law distribution, such that a sharp turn is visible around the 90th protein percentile position on the interaction plots.

to achieve a consistent hub definition across the four studied species, hub proteins were defined as above or equal to the 90th percentiles of interactors; in other words, the hubs represented the top  <dig> percent of highly-connected interactors, and the non-hubs were consisted of the bottom  <dig> percent of the proteins. using this definition, hub proteins were determined from each of the four pins individually. at the 90th protein percentile, e. coli hubs have at least  <dig> protein interactions, s. cerevisiae hubs have at least  <dig> protein interactions, d. melanogaster hubs have at least  <dig> protein interactions, and h. sapiens hubs have at least  <dig> interactions. the number of assigned hub and non-hub classifications is shown in table  <dig> 

gene ontology  data
each protein obtained from the intact database was identified by a unique uniprot accession number, which enabled a fast collection of go annotation data from the uniprot retrieval system  <cit>  . the complete uniprot protein annotation pages were downloaded as flat texts, which were then parsed by perl scripts to extract the go annotations in the three categories: biological process, molecular function, and cellular component. because each go term could be assigned to a different level of the annotation hierarchy, we established a fixed general go level that represented all of the specific go terms of the proteins in the study. this general go annotation level was determined based on the go slim project, which provides a list of generic go terms on which many bioinformatics analyses can be performed  <cit> . importantly, the go slim generic terms provided a reasonable number of protein 'predictors' for a machine learning method to effectively operate. the tool 'map2slim'  <cit>  was used to map specific go terms to the 'go slim' generic terms . this generic version of go slim contained  <dig>  terms,  <dig>  terms and  <dig>  terms.

all protein interaction data and go annotations were stored in a local mysql database for fast data searching and reporting.

hub protein classification by boosting trees
to train models that classify a protein as a hub or a non-hub, the protein interaction data from the four species were combined into a single data set . a four-fold cross-validation strategy was used in which four non-overlapping testing sets , and four training sets  were utilized for building the hub classifiers. each training and testing set maintained the same hub to non-hub  ratio. in addition, the proteins in the training sets have maintained the same distribution of go annotation terms as the proteins in the testing sets. figure  <dig> illustrates the distribution of each of the  <dig> go terms, represented by the percentage of proteins with this term in the training sets vs. the testing sets of the four cross-validation samples. a high correlation r <dig> values of  <dig>  ~ <dig>  indicated an equal go distribution between the training and testing sets. it is also shown that the majority of the go terms were associated with less than 10% of the proteins in a given data set.

we focused the machine-learning effort on hub classification by applying boosting trees, which is one of the best methods for classifying complex data and providing interpretable results  <cit> . the training and testing of the hub-predicting classification trees were performed on  <dig> go terms as predictor variables by using the boosting tree application as implemented in statistica version  <dig>  <cit> . the input data were formatted as tables of binary data, where each column represented a go term variable  and each row represented a sample protein.

four classifiers were built  and compiled in the c++ language under linux. in addition to the four testing sets in the cross-validation study, the best of the four hub classifiers has been validated on two external data sets, which were consisted of experimentally-determined pins in mrsa <dig> and c. elegans. the classifier predicted each protein in the data sets as either a hub or a non-hub, and the classification statistics were calculated as the following:

 sensitivity = tp/ 

 specificity = tn/ 

 accuracy = / 

 ppv  = tp/ 

 npv  = tn/ 

, where tp = true positive, fp = false positive, tn = true negative, and fn = false negative.

a useful output feature of the boosting tree method is the relative predictor importance, which measures the average influence of a predictor variable on the prediction outcome over all of the trees  <cit> . the most important predictor is assigned a value of  <dig>  and the other variables are scaled accordingly.

comparison of the hub classifiers with other existing protein interaction prediction approaches
to further assess the performance of the hub classifier against other existing approaches for predicting hub proteins, we applied three different types of bioinformatics methods to construct hypothetical pins in mrsa <dig>  where hub proteins were determined by the number of predicted pairwise protein-protein interactions.

hypothetical pin – pathway maps
the first type of hypothetical pin represented the known protein-protein interactions available for mrsa <dig>  a total of  <dig> protein interactions were manually extracted from the pathway maps in the kegg database  <cit>  .

hypothetical pin – orthologous interactions
the second type of pin was constructed based on known protein-protein interactions between orthologs from three other species: helicobacter pylori, saccharomyces cerevisiae, and escherichia coli. the experimental pin in h. pylori was obtained from the bind database  <cit>  . two sources were used to build the s. cerevisiae pin: the bind database  and gavin's study  <cit>  . we extracted the e. coli pin in butland's study  <cit>  from the intact database  <cit>  .

 <dig> protein sequences in mrsa <dig> were obtained from the refseq databases at ncbi  <cit>  . the orthologs of the interacting proteins from each of the above species were identified in mrsa <dig> by using the program inparanoid  <cit>  . if a pair of mrsa <dig> proteins whose orthologs interacted in one of the three species, the pair was assigned as an interacting protein pair. a total of  <dig> protein interactions were predicted for this type of mrsa <dig> pin reconstruction.

hypothetical pin – interacting domains
the third type of mrsa pin was predicted based on protein domain-domain interactions. first, the presence of pfam domains  <cit>  in each of the  <dig> mrsa <dig> proteins was determined by scanning the pfam domain profiles  with the program hmmer  <cit>  . second, domain-domain interaction data were acquired from two sources: interdom  <cit>   and ipfam  <cit>  . if a pair of mrsa <dig> proteins contained interacting domains according to one of the two sources, the pair was assigned as an interacting protein pair. a total of  <dig>  protein interactions were predicted based by this method.

validating the prediction on an experimental mrsa <dig> pin
the experimental mrsa <dig> pin provided by the prepare project contained interaction data for  <dig> proteins and was used as the external validation set for measuring the prediction performance of the hub classifier and the different types of hypothetical pins.

we have compared the prediction results in two different ways. in the first type of comparison, both the hub classifier and the combined hypothetical pins classified the  <dig> mrsa proteins as hubs or non-hubs, while the same  <dig> proteins were also classified as hubs or non-hubs based on the experimental results provided by prepare. in the case of the hub classifier, hubs and non-hubs were reported explicitly from the prediction program. in the cases of hypothetical and experimental pins, hubs were defined as above or equal to the 90th percentile of proteins ranked by the number of interactions . the following classification statistics were calculated: sensitivity, specificity, accuracy, ppv and npv.

in the second type of comparison, we compared ranked lists of proteins based on their 'hub-likeness' property. in the case of the hub classifier, the proteins were ranked based on the differences between predicted hub probabilities and non-hub probabilities as computed by the boosting tree method. in the case of the hypothetical and experimental pins, the proteins were ranked by their numbers of protein interactions. the ranked lists were compared to the list of proteins ranked by the number of experimental interactions in mrsa <dig> by using a spearman rank order correlation as implemented in statistica  <dig> 

validating the prediction on an experimental c. elegans pin
in addition to mrsa <dig>  we have tested the hub protein classifier on an external set of protein interaction data in c. elegans. the same procedure was applied to determine hub prediction statistics, as described above.

test of significance
to test the hub protein classifier against a null hypothesis, which claims there is no difference of go term distribution between hubs and non-hubs, we have randomized the protein interaction data in the following ways. firstly, the same  <dig> proteins in the testing set  for the hub classifier were used in the construction of a randomized data set. secondly, 10% of those proteins were randomly assigned as hubs, while the other 90% of proteins were randomly assigned as non-hubs. thirdly, the go terms originally associated with those proteins were randomly distributed within the data set. the combination of the above two randomization methods ensured that there was no significant difference in go term distribution between the hub and non-hub proteins. finally, the hub classifier was used to predict hubs and non-hubs in the randomized data set, and prediction statistics were obtained.

simulation of protein bait selections and network coverage
the effectiveness of protein bait selections assisted by the hub classifier has been simulated by using yeast protein-protein interaction data determined by protein-complex pull-down and mass spectrometry experiments, available from gavin's study  <cit> . one major goal of such large-scale experiments is to maximize the number of protein interactions identified by using a small set of proteins as 'baits' to pull down their interactors . therefore, it is crucial to select protein baits based on properties that will produce the best network coverage, as measured by the ratio between the number of protein interactions identified by an experiment and the total number of interactions in an organism.

in our simulation experiments,  <dig>  interactions, involving  <dig> proteins from gavin's yeast data set , were hypothetically treated as the total number of protein interactions in saccharomyces cerevisiae. to simulate the bait selection process, we selected a subset of proteins  as baits and calculated the number of interactions such baits would "pull-out" from the yeast interaction data set and computed the overall network coverage. two selection criteria were used. in one simulation, the baits were randomly selected from the total pool of the yeast proteins. in the other simulation, the baits were selected from the pool of hub proteins predicted by the hub classifier.

in addition to the bait selection strategy described above , we simulated the network coverage results by applying a second round of selections. in this type of selection, baits were divided into two sets: one-third as the first round of baits, and two-thirds as the second round of baits. the first-round baits were chosen by either random selection or by hub prediction. the second round of baits was selected from the most abundant preys pulled down by the first round of baits. such an approach is also referred to as the "name your friend" method and has been applied to maximize the effectiveness in vaccinations against infectious diseases  <cit> , as well as in some protein complex experiments  <cit> .

RESULTS
prediction performance of the hub prediction classifier
one prediction model was constructed for each of the four cross-validation samples; therefore, a total of four hub classifiers were generated. the executable files of the classifiers were complied by the gnu c++ compiler in linux. the classifier programs used a list of query proteins and their corresponding go term occurrences as the input file, and produced the same list of the proteins with hub prediction results and probability scores. the running time was only a few seconds for predicting hubs from over  <dig>  proteins on a  <dig>  ghz pentium d personal computer.

overall, the classification statistics were consistent between the training and testing sets for the four classifiers. within the training sets, the sensitivity of the classifiers ranged from  <dig> % ~ <dig> %, the specificity ranged from  <dig> % ~ <dig> %, and the accuracy ranged from  <dig> % ~ <dig> %; ppv  varied from  <dig> % ~ <dig> %, and npv  varied from  <dig> % ~ <dig> %. within the testing sets, the sensitivity ranged from  <dig> % ~ <dig> %, the specificity ranged from  <dig> % ~ <dig> %, and the accuracy ranged from  <dig> % ~ <dig> %; ppv varied from  <dig> % ~ <dig> % and npv varied from  <dig> % ~ <dig> %. the classification statistics on the best of the four hub classifiers is shown in table  <dig> 

the observed vs. predicted hubs and non-hubs and their corresponding classification statistics are shown for the best classifier based on the training, testing and all  data sets

we have further validated the prediction accuracy of the best hub classifier in the external mrsa <dig> data set. as indicated in table  <dig>  in comparison to the other protein prediction methods, the hub classifier has the highest prediction statistics, with  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy,  <dig> % ppv and  <dig> % npv. the next best hub prediction result was achieved by the hypothetical mrsa pin based on orthologous interactions. on the other hand, the results from the predicted pins of pathway maps and interacting domains were poor as none of them had any true positives.

the prediction performance of the hub classifier is compared to that of the hypothetical pins in mrsa <dig>  the classification statistics is reported.

in the other comparison, we correlated a ranked list of proteins based from their 'hub-likeness'  to that of the experimental mrsa pin. as shown in table  <dig>  the hub classifier had a correlation coefficient of  <dig>  – highest among all other methods. the next best correlation was achieved by the hypothetical pin of orthologous interactions.

the ranked protein lists based on hub-likeness properties, produced by either the classifier or the hypothetical pins, has been compared to that of the experimental pin in mrsa <dig>  the coefficient of spearman rank order correlation is reported with p-value <  <dig> .

in addition to mrsa <dig>  the hub protein classifier has achieved comparable prediction results in the c. elegans validation data set, with  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy,  <dig> % ppv and  <dig> % npv, as shown in table  <dig> 

the prediction performance of the hub classifier was validated, based on the experimental pin in c. elegans.

the prediction statistics of the hub classifier on the randomized data set are summarized in table  <dig>  the result shows that the hub classifier was not able to achieve a significant hub prediction when the go terms and protein hubs were randomly assigned. the prediction only reached  <dig> % sensitivity and  <dig> % ppv in the randomized set, compared to  <dig> % sensitivity and  <dig> % ppv in the testing set before the randomizations. the specificity and npv were comparable before and after the randomizations, due to the inherited 1: <dig> ratio between the number of hubs and non-hubs. therefore, it is easier to make a correct prediction on non-hub proteins than hub proteins. the comparison of the prediction results between the testing set and the randomized set indicates that hub proteins have a distinct distribution of go terms, which contributed to the predictability of the hub classifier.

the prediction performance of the hub classifier was tested on the null hypothesis that there is no difference of go term distribution between hubs and non-hubs.

overall, the hub classifier built on the gene ontology annotations achieved high specificity and npv, but had lower than expected sensitivity and ppv. we attribute this to the lack of go annotations for certain proteins in the training sets, as the level of annotations varied among the four species. for instance, s. cerevisiae had the highest percentage of the proteins with go annotations , while only  <dig> % of the proteins in e. coli had any go annotation. therefore, the performance of the current hub classifier primarily relied on the number of go annotations available for each species. we expect the sensitivity value of the hub classifier to be improved when more annotation data become available for the four species in the training sets.

go term predictor importance
an indicator of the contribution of each go term used in the boosted trees classifiers was provided by the relative importance of predictors in the training output. the importance value ranged from  <dig> to  <dig>  where  <dig> indicated that a predictor had the most influence on the hub prediction outcome, and  <dig> meant a predictor had the least influence. the top  <dig> go annotation terms that were likely to be shared among hub proteins are listed in table  <dig> 

the top go terms included several annotations such as 'rna binding', 'translation', and 'ribosome', commonly used to annotate ribosomal proteins, which were often identified as the top interacting proteins in other experiments  <cit> . the list of important predictors indicated that hub proteins tend to participate in several common cellular processes, including translation, nucleotide metabolism, organelle biogenesis, cell cycle, signal transduction, cell death, and electron transport.

applying hub classifier to protein bait selection
the bait selection strategy, assisted by the hub classifier, was simulated in the experimental pin of saccharomyces cerevisiae. in the case of one-round selection, choosing baits that were predicted as hubs by the classifier has greatly increased the network coverage in comparison to random selection. for instance, as illustrated in figure  <dig>  when 15% of total proteins were selected as baits based on the result of the hub classifier,  <dig> % of the network coverage was achieved. on the other hand, only  <dig> % of the network coverage was generated by the random bait selection.

in the case of the two-round selection, the network coverage produced by either random or hub bait selection has shown a great improvement from the one-round selection. the hub bait selection performed slightly better than random in the two-round selection.

the results suggest that the hub classifier is a useful tool for selecting baits and prioritizing proteins for protein interaction experiments. although it was not explored in the present study, we expect that the hub classifier can also assist in the identification of highly-interacting proteins in pathogens as potential drug targets.

CONCLUSIONS
we have studied the available interaction and gene ontology data for proteins in escherichia coli, saccharomyces cerevisiae, drosophila melanogaster and homo sapiens genomes. by utilizing the boosting trees classification method, we have shown that highly-connected proteins in the studied pins share certain common go terms; this observation enabled the development of a hub classifier capable of distinguishing hub proteins from non-hubs. this classifier has improved accuracy for hub prediction relative to other traditional approaches for protein interaction prediction. it is anticipated that the hub classifier can serve as a useful tool to identify highly-interacting proteins in species without any available protein interaction data, with potential applications in optimizing protein pull-down experiments and identifying new drug targets against pathogens.

availability
the source code and executable program of the hub classifier is freely available for download at: 

authors' contributions
mh acquired and analyzed protein interaction and gene ontology data, designed and developed the hub classifiers, built the hypothetical pins, simulated the protein bait selection experiments, and drafted and revised the manuscript. kgb analyzed the statistical models and tools of boosting trees, and revised the manuscript. ac conceived and designed the study, and revised the manuscript.

