BACKGROUND
structural variation results from numerous biological processes and has been implicated in a variety of diseases and phenotypes . as resequencing projects become more prevalent across a larger number of species, accurate variant identification will further elucidate the nature of genetic diversity and become increasingly relevant in genomic studies. however, the identification of structural variants via dna sequencing is limited by both the incomplete information provided by sequencing reads and the nature of the genome itself.

next-generation sequencing  technologies generate reads ranging from dozens to hundreds of base pairs  in length and with relatively low per-base error rates. moreover, many ngs technologies generate sets of coordinated reads whose genomic separation is known a priori . when reads generated from a sample sequence are aligned to a reference genome sequence, variation between the sample and reference genomes manifests itself as imperfect mapping. ngs genomic variation detection methods take advantage of different types of imperfect mappings to detect different variant types. variants smaller than the read length  are identified via discordance  between a sample read and the reference sequence
 <cit> . longer, structural variants include copy-number variants, inversions, and translocations. depth-of-coverage methods infer copy-number variants from regions of non-uniform mapping coverage
 <cit> . split-read and paired-end methods both use reads or pairs of reads that map non-contiguously to characterize genomic rearrangements larger than the read itself
 <cit> .

mapping errors caused by genomic variation are difficult to distinguish from those introduced by sequencing errors and repetitive genomic sequence. although ngs sequencing error rates are relatively low and their effects can often be mitigated with increased genomic coverage, repetitive sequence still creates mapping ambiguity. repetitive regions of the genome also exacerbate the search for genomic variation because many variants occur in these regions
 <cit> . moreover, ngs methods do not always completely characterize large structural variants, often failing to provide full base-pair resolution of the entire region of interest. finally, the efficacy of non-contiguous ngs methods can vary for different types of genomic variants depending on the sample data characteristics, such as insert-size distribution and coverage
 <cit> .

we can mitigate these limitations by taking advantage of continuous long reads generated by the pacific biosciences  rs sequencer. each such read is a fully resolved sequence up to  <dig>  bp. despite a relatively high per-base error rate , pacbio reads lack systematic biases and can be mapped with high accuracy
 <cit> . in the present work, we describe two methods of identifying larger genomic variants via pacbio sequencing: interrupted mapping  and intra-read discordance . while these methods parallel ngs methods conceptually, the longer pacbio reads can be more accurately mapped and can span larger genomic variants. and, unlike previously published approaches to finding structural variants with ’long’ reads
 <cit> , pbhoney is designed to handle continuous long reads with lower base-accuracy.

as proof of concept, we applied pbhoney to pacbio reads generated from escherichia coli and identified four structural and two genomic features, each of which was confirmed via de novo assembly.

implementation
interrupted long-read mapping
pacbio rs filtered subreads are first mapped to a reference genome with blasr
 <cit> , an alignment tool optimized for reads thousands of base pairs long with higher error rates. the blasr output is a sam alignment
 <cit>  that contains each read’s single best alignment. any such best alignment does not necessarily map each read position to the reference: the mapped read can be truncated prior to the 5’ and 3’ ends, creating an interrupted mapping represented by soft-clipped  tails. in the present work, all tails longer than  <dig> bp are extracted from the sam alignment and remapped to the reference genome with blasr, which reports each tail’s best alignment. thus, any mapped read comprises an initial alignment and up to two mapped tails, a 5’ prolog and a 3’ epilog, which when taken together compose a piece-alignment. these piece-alignments are placed in a new sam file that contains tags for each alignment describing the locations and orientations of other members of the same piece-alignment. the piece-alignments of most filtered subreads comprise only an initial alignment, while only a small subset of these reads produce both prologs and epilogs.we next cluster piece-alignments with similarly mapped tails based on location and orientation. figure
 <dig> describes two sets of possible tail locations and orientations. here, we only consider up to two components of piece-alignments  because piece-alignments with more than two components due to structural variation and not low-quality sequence are rare. should a read produce both a prolog and epilog, the alignment with the higher mapping quality is chosen.first, two piece-alignments are candidates for clustering if the corresponding component alignments have locations that support breakpoints at similar positions by beginning and ending at a distance less than a user-defined buffer length. buffer length is set at 200bp for this work and by default within the software. second, to form a cluster, the piece-alignments must share the same internal orientation of component alignments. by only clustering events that satisfy both conditions, we can distinguish multiple variants that may share similar breakpoints, as is the case in the figure
 <dig> example.

each final cluster can contain any number of participating piece-alignments . using mapping orientations and location, we then annotate each cluster as a deletion, insertion, inversion, or translocation and predict breakpoints as the average interrupted position of each read. in this study we only report clusters with a minimum of three piece-alignments and a minimum average phred-scale mapping quality value of  <dig>  these minima exclude piece-alignments that are possibly the result of chimeras in the sample preparation and short, non-confidently mapped reads.

intra-read discordance
pacbio rs reads have an experimentally determined 15% per-base error rate but lack systematic errors such as gc bias
 <cit> . because the errors are stochastic, we can identify discordant “spots” within the reference where the error rate is higher than expected. using the final sam file , we count the number of errors at every position in the reference. at any such position, each aligned subread can agree with the reference or produce a mismatch, deletion, or insertion. each of these error ’channels’  and coverage is calculated and stored in a 4×g integer array , where g is length of the reference. to identify regions of discordance we convolve the array with several kernels. first, we obtain the error rate at each position by dividing the error channels by the coverage at each position: 

 eji=aji/ci, 

 where a
j
i
 is the value of the jth channel at position i in the reference and c
i
 is the coverage at that position. next, we apply a smoothing kernel that replaces each value in the array with the mean channel value over a window of length 2b+ <dig> centered at the associated genomic position i. formally, 

 mji=12b+1∑k=i-bi+bejk. 

 we then obtain the standard deviation and mean for each channel across the whole chromosome. finally, we calculate changes in discordance on a per-window basis by applying a slope kernel: 

 sji=1b∑k=i-bi-1mjk-∑k=i+1i+bmjk. 

 each array value now measures the extent to which the channel values before each position differ from the channel values after. figure
 <dig> illustrates the signal processing for a simulated alu deletion
 <cit> .

using the above channels, we identify possible structural variants by extracting regions that contain increases in discordance  followed by decreases in discordance , corresponding to the starts and ends of genomic variants, respectively. to do so, we set discordance thresholds to n times each channel’s standard deviation, where n is a user-defined parameter with an empirically determined default of  <dig>  for each channel, we then extract ’peaks’ that sit above these thresholds. the widths of these peaks determine the outer and inner boundaries for the variant breakpoints. furthermore, we predict an exact breakpoint as the point of maximum discordance in the outer and inner boundaries. thus, a possible genomic variant is reported as two sets of genomic coordinates,  and  and a type determined by the channel . these boundary coordinates allow us to account for the low base-error and realignment issues  that occur near most structural variants.

RESULTS
we generated dna from e. coli k <dig> strain mg <dig> and created a  <dig> kbp mean dna insert-size using a blue-pippin preparation protocol . the filtered subreads produced were on average  <dig>  kbp long  and had a mean accuracy of  <dig> % when mapped to the e. coli reference genome . a total of  <dig>  pacbio rs filtered subreads were generated with an average length of  <dig>  kbp and an n <dig> length of  <dig>  kbp, providing an expected 126x average coverage of the  <dig>  mbp e. coli genome.

pacbio reads are capable of creating high quality assemblies
 <cit> . therefore, before detecting variants, we assembled the pacbio reads to create a sample reference genome using the same nonhybrid hgap assembly techniques to independently discover variants. the sample reference genome comprised five contigs that uniquely covered  <dig> % of the e. coli reference genome with an n <dig> of  <dig>  mbp. we then used mummer
 <cit>  to identify all variants greater than  <dig> bp between the newly assembled sample reference and the standard e. coli reference. this analysis identified a transposon deletion, a tandem duplication, and a tandem deletion.

after mapping the reads to the e. coli genome and processing the alignment through pbhoney, we discovered evidence of e. coli’s circular genome, four structural variants, and evidence of rac phage in the e. coli culture.

transposon deletion
pbhoney identified a deletion with breakpoints at coordinates  <dig> , <dig> and  <dig> , <dig>  with a length of less than  <dig>  bp, this deletion is small enough for some pacbio reads to accurately map to the unvarying flanking sequence of the deletion in the reference, much in the same way that a mapped ngs read can span a small indel. while some pacbio reads are not long enough to span the deleted sequence, many of these reads’ tails are long enough to map to the opposite side of the deletion.

tandem duplication and deletion
we identifed an insertion of approximately  <dig> bp between the coordinates  <dig> , <dig> and  <dig> , <dig>  and using the pacbio allora assembly engine , we resolved the full insertion sequence by assembling the reads that mapped to that region.

to confirm the tandem nature of this insertion, we used tandem repeats finder 
 <cit>  to identify  <dig>  copies of a  <dig> bp repeat present in that region of the reference genome. when applied trf to the assembly of sample reads and  <dig>  copies were reported.

similarly, we identified a  <dig> bp deletion in the reference between the coordinates  <dig> , <dig> and  <dig> , <dig>  applying the same methods, we found  <dig>  copies of the repeat in the reference genome and  <dig>  copies in the sample assembly. by remapping this assembly to the reference genome, we found the deletion to sit between the coordinates  <dig> , <dig> and  <dig> , <dig> 

p-element inversion
the e <dig> prophage of the e. coli genome contains a  <dig>  bp invertible p-element
 <cit> . while this variant was too long to be spanned by mapped reads, we identified a subset of reads in the region that map in a manner suggesting an inversion between the coordinates  <dig> , <dig> and  <dig> , <dig> 

these coordinates differ from the ecogene  annotated location of the inversion . this difference is attributable to the inverted repeats that flank the p-element and create alignment ambiguity . this ambiguity is overcome by shifting bases to a single copy of the repeat, which recreates the exact annotated breakpoints.

because the p-element inversion only occurs in a subset  of the e. coli organisms in a given culture, de novo assembly does not expose the event. however, our results allow us to easily identify the reads that do support the variant. by performing an assembly using the subset of reads we recovered the full inverted sequence.

rac prophage
in addition to genomic variants inside the e. coli genome, we found  <dig> reads that had interrupted mapping at the boundaries of e. coli’s rac prophage genomic feature. pbhoney annotated this event as a reference genome insertion. however, a more complete annotation is that these reads are the result of the defective bacteriophage’s replication and its genome existing in isolate in our sample. when we assembled the reads that supported this event, we recovered the  <dig>  bp circular genome sequence of the phage.

performance
to assess how well pbhoney performs with lower coverage, we ran pbhoney on alignments down-sampled to 10x, and 20x coverage fifty times per coverage with default parameters. we repeated this experiment four times while increasing and decreasing independently spots’ minimum coverage parameter and mimimum standard-deviation threshold parameter. we then assessed pbhoney’s ability to detect structural variants at each run by comparing the detected variants to the four known variants and evidence of the circular genome . it should be noted that with default parameters,  <dig> and  <dig> false negatives at  <dig> × and  <dig> × coverage respectively can be attributed to the missing p-element inversion. these false negatives are because the p-element inversion only occurs in a minority of e. coli organisms  and therefore isn’t guaranteed to be represented in the down-sampled coverage. if we exclude the p-element inversion from our truth set, 10x coverage’s sensitivity increases to  <dig> % and 20x coverage to  <dig> %.

true positive  false positive  false negative  counts, sensitivity, and positive predictive value . ppv is the probability any given variant call is true ). parameters changed are coverage  and standard-deviation threshold  for spots signal processing.

to benchmark the computational performance of pbhoney, we re-ran our e.coli dataset three times. on average, pbhoney spots was able to process the 93k reads in  <dig> minutes with a peak memory usage of 232mb and an average usage of 119mb. pbhoney tails processed reads on average in  <dig> seconds with a peak memory usage of 177mb and average usage of 90mb. in order to estimate a maximum resource usage of pbhoney, we tested 10x coverage  simulated using blasr’s alchemy program over human chromosome  <dig> through spots processing and found a peak memory usage of  <dig> gb  over  <dig>  hours of processing time.

discussion
if dna sequencing technologies could produce a single read of chromosome or genome length, variant identification would be a matter of comparing two similar strings. such methodologies are already being applied in comparative genomics structural studies
 <cit>  and de novo assembly methods of structural variation discovery
 <cit> . however, given the computational challenges of whole genome de novo assembly, variant identification is limited by our ability to accurately map sample reads to the reference genome.

many factors contribute to whether a read will span a variant region or create an interrupted mapping, including the length and quality of the read, the register of the read relative to the variant region, the mappability and size of the variant region, and the nature of the alignment algorithm. the length and per-base error rates of pacbio reads allow structural variants to ’hide’ inside of the noise of the stochastic errors. for example, a  <dig> bp deletion in the sample relative to the reference can be spanned by a  <dig> kbp read because  <dig> additional ’errors’ in the mapping of a  <dig> kbp with  <dig> expected errors can be insufficient to interrupt the mapping. such hidden variants create intra-read discordance and are revealed by pbhoney-spots. if the variant does create an interrupted mapping, pbhoney-tails leverages this information to characterize the variant. by incorporating these two distinct methods, pbhoney is insensitive to how a read maps to the reference, much as are ngs methods that use both paired-end and split-read information. pbhoney also limits itself to categorizing these variants in the context of our in silico abstraction of a genomic variant as a local string comparison.

we have also presented an exploration of the parameter space by repeating out titration experiments with changes in the minimum coverage and minimum standard-deviation threshold parameters. other parameters available for the user include the minimum size of a tail to be considered for remapping, the minimum number of tailed reads needed to support a call, the minimum number of unique tailed reads needed to support , the minimum mapping quality of a read and it’s tail to be included in a variant call, and the minimum size of a structural variant. since the most time consuming step in spots processing is counting the errors at any particular base , an hdf <dig> file is stored containing the arrays necessary to reprocess with different parameters should the user wish to tweak his or her spots results quickly.

in the present work, pbhoney reports the breakpoint location and a mapping-based classification of each variant as one of insertion, deletion, mismatch, inversion, and translocation. these results are sufficient to identify reads for reassembly, from which the full sequence of the event and exact breakpoints can be recovered. more complex and biologically informed classification thus becomes an independent and subsequent step to mapping-based annotation. samples with more biologically complex variants still manifest themselves through the methods presented here, and when variants are considered in a global context, the complex variation can be reconstructed. future versions of pbhoney will automate the assembly process and include more sophisticated variant classification that uses existing variant-specific tools such as tandem repeats finder and novel haplotype reconstruction software to further elucidate the specific variant types that occur.

for this work’s proof of concept, we processed the haploid e. coli genome and therefore did not include genotyping information in our calls. however, estimates of genotype can currently be established by looking at the coverage of reads that support an alternate allele versus supporting the reference. future work will include automating this procedure.

CONCLUSIONS
genomic variation detection faces many challenges when creating a completely characterized genome with identified large and complex variants. this work describes pbhoney, which leverages the high mappability of long reads to identify structural variants in a manner similar to the split-read and paired-end methods applied to shorter reads. the first continuous long-read specific structural variant software, pbhoney should prove valuable to resequencing efforts, particularly with regions inaccessible to short-read read mapping, specifically genomic regions subject to repetitive elements that are known to enrich for large variation events.

availability and requirements
project name: pbhoneyproject home page: http://sourceforge.net/projects/pb-jellyoperating system: platform independentprogramming language: pythonother requirements: python  <dig> , samtools  <dig> . <dig>  blasr  <dig> . <dig>  h5py  <dig> . <dig>  pysam  <dig> . <dig>  numpy  <dig> license: freebsd.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
ace designed and performed the experiments, developed the code, and contributed to writing the manuscript. wjs contributed to experimental design and wrote the manuscript. jgr contributed to writing the manuscript and designing the experiments. all authors read and approved the final manuscript.

