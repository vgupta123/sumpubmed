BACKGROUND
the emergence of design in biological systems was an unsolved problem until natural selection was established as the driving force for the evolution of such systems  <cit> . at the molecular level, the identification of design principles through controlled mathematical comparisons that evaluate different functional criteria in metabolic networks has led to a better understanding of adaptation and design emergence  <cit> . such principles enable building new gene and metabolic networks that accomplish specific requirements which is the main goal of synthetic biology  <cit> . the identification of quantitative evolutionary constraints plays an important role in understanding the actual characteristics of biological systems  <cit> . in that sense, one may argue that the adaptive response of the cellular metabolism to different situations is ultimately shaped by physiological requirements that must be met by tuning gene expression and enzyme activity  <cit> . understanding the evolution of the adaptive strategies that assure cell survival in different conditions is, thus, an important goal in systems biology  <cit> .

in unicellular organisms, adaptive capability is specially important as they lack an internal milieu than could buffer the environmental changes. in this context, the adaptive responses to different stress conditions, , have been extensively investigated using yeast as a biological model  <cit> . in general, such adaptive responses require synthesis of protective proteins , and a fine tuning of the metabolic status to assure an appropriate supply of energy and building blocks for new proteins. the operating principles of the adaptive response to heat shock were investigated under this perspective  <cit> . the increase in trehalose, atp, and nadph synthesis are primary requirements for an appropriate response in this conditions. however, these flux constraints cannot fully explain the observed changes. complementing flux constraints, economy savings in the gene expression changes and constraints for preventing an unnecessary increase of metabolites were shown to be necessary to understand the adaptive response to heat shock. thus, a combination of constraints on particular metabolic processes, economy issues, fluxes, etc. are required to define the scenario in which natural selection operates  <cit> .

in this paper we develop a new approach that focuses on identifying feasible parametric regions that contain solutions for system parameters so that a set of physiological constraints are satisfied. with that method we will be able of identifying the possible evolutionary solutions that are expected to contain the actual adaptive response. first, we present a global optimization procedure that capitalizes on the properties of a particular class of nonlinear models, the gma  models based on the power-law formalism. this method improves the method recently proposed by polisetty et al.  <cit>  and takes advantage of the properties of the power-law formalism as a canonical nonlinear modeling technique  <cit> . second, we introduce a search strategy that allows identifying the parameter regions containing admissible solutions for the problem. the proposed algorithm is very efficient for realistic problems, although different technical improvements are possible to optimally scale it to large problems. the feasible regions found would represent the landscape in which evolutive solutions are expected. comparison of our result and actual data allows to discuss the practical usefulness of the proposed approach.

methods
problem statement
generally speaking, a metabolic network can be characterized by its processes, internal metabolites, and control  variables. details on the regulatory effects  are important for a complete description. furthermore, kinetic details are required for computing the response of the system to different inputs and environmental changes. for a system with p processes that can contribute to the change in the concentration of the pool of any of the n internal metabolites, the basic mathematical representation is   

here, μir is a stoichiometric factor that indicates how many molecules of xi are produced or used by the process vr; it is a positive integer if the flux r produces xi and it is a negative integer, if the flux r depletes the pool of xi.

each velocity can be represented by different functional forms that may include various parameters. the choice of a particular mathematical form is not trivial and can either facilitate or hinder the task of analyzing the optimal design and the adaptive responses to different environmental changes  <cit> . from all the available formalisms, the so-called power-law formalism is one of the most convenient. details for this choice can be found elsewhere  <cit> . in this formalism, each velocity is represented as:   

in this representation, xj accounts for the concentration of metabolite j, γr is an apparent rate constant for flux r, and frj is the kinetic order of variable xj in reaction r. each kinetic order quantifies the effect of the metabolite xj on flux r and corresponds to the local sensitivity of the rate vr to xj evaluated at the operating point indicated by the subscript  <dig>  that is:   

if xj has no direct influence on the rate of reaction r, the kinetic order is zero. if it directly activates the flux of reaction r, the kinetic order is positive. if it inhibits the flux of reaction r, then the kinetic order is negative.

without loss of generality, enzyme levels can be considered embedded in the γr parameters. this is so because, in most cases, the kinetic-order for the enzyme is  <dig>  as velocities are linearly dependent on the enzyme. of course, if necessary, enzymes can also be included in the model as control variables. on the other hand, if the model includes dynamic changes in enzymes, for instance through gene regulation, they can also be considered as dependent variables.

using this representation, a generalized mass action  model is defined by expressing each velocity in  using its power-law form   <cit> :   

here, we assume that there are m ≥  <dig> control  variables. alternatively, an s-system model is obtained by aggregating the different processes in a net process of synthesis  and a net process of degradation  for each metabolite, i.e.:   

using the power-law representation for each aggregated process, we obtain:   

in this last formulation, the kinetic orders are called g and h, and the rate constants α and β for convenience. the different parameters of models  and  can be obtained, for instance, via estimation from dynamic data  <cit> . if this is not possible, tentative parameter values can be suggested based on the literature  <cit> . furthermore, based on their mathematical definition, values that represent those situations of interest can be easily proposed even in absence of specific data. this last possibility allows model analysis and exploration even in cases were little experimental information is available  <cit> . gma and s-system models are very interesting, as they capture the underlying non-linearities of the system processes and provide a model that is amenable to optimization techniques  <cit> . here we will separate two different goals:

 <dig>  optimization in biotechnological applications: given a model that represents the reference state of the system, we are interested in finding the parameter changes  that optimize a given objective function .

 <dig>  find feasibility regions in evolution studies: given a model that represents the normal metabolic state of a cell, find the admissible changes at the level of enzyme activities that are compatible with a set of physiological and functional effectiveness criteria .

RESULTS
optimization approach
motivation of the optimization approach
optimization of biological processes is a very important goal in biotechnological applications  <cit> . in general, the main purpose is finding the appropriate changes in enzyme levels, mainly through changes in gene expression, so that a given objective function is optimized. this can be a flux, for example in a production process, a metabolite concentration, or any other objective function. developing appropriate optimization techniques is fundamental for defining a practical metabolic engineering approach  <cit> . the intrinsic complexity of the target systems and the non-linearities involved in the underlying processes makes optimization a difficult task in this field. the use of models based on approximated representations such as the power-law models, either in their s-system or in gma form, is a promising alternative  <cit> .

optimization based on nonlinear models defined with the power-law formalism was first proposed by voit  <cit> . by using the s-system model strategy, a transformation to logarithmic coordinates allows using linear optimization for solving a number of biotechnological problems  <cit> . however, when the problem is represented by a gma model as in , this technique cannot be directly applied. to overcome this problem, methods for optimizing models based on this particular form have been developed  <cit> . here, we shall present a new method that is closely related with the method suggested by polisetty et al.  <cit> . our first goal is to develop an efficient global optimization method for gma models. besides its own interest for metabolic engineering tasks, this is a requirement for developing the feasibility approach that is the ultimate goal of this work.

optimization method
in practical biotechnological applications, we are interested in obtaining the best set of changes in enzyme levels , so that a given goal is attained  and a set of constraints are satisfied 

the optimization task can be posed as an standard optimization problem that aims to identify the specific values of vr, γr and xj that minimize a given predefined criterion while satisfying at the same time a set of biological constraints. in what follows, we consider an standard optimization problem in which the objective function is minimized. maximization problems can be easily reformulated into minimization problems by changing the sign of the objective function. at this point, kinetic-orders are regarded as fixed parameters. these parameters represent intrinsic kinetic properties of the involved processes. optimization of their values is possible, although the method should be further adapted to deal with that case and assure a global optimum. we shall consider this possibility in the future.

the optimization task is, thus, formulated as a nonlinear programming  problem of the following form:   

where onlp denotes the optimal objective value over s. the set s is called the set of feasible solutions, and contains all the values of vr, γr and xj that satisfy a set of constraints on the gma equations. in matrix notation:   

in this representation, v, γ, x denote the  vectors of continuous variables;  is the objective function; and  represents the equations that define the feasible set. in general, s may also include additional equations others than those involved in the gma representation to reflect specific biological conditions. problem onlp can also be expressed in a more detailed way as follows:  

here the feasible set s includes the steady-state equations as a basic constraint. thus, optimization is run to find a steady-state solution that optimizes the objective function and that fulfills the considered constraints. as commented before, the optimization model may also incorporate other equations that impose certain conditions on the values of the variables vr, γr, xj. for instance, we can consider a constraint x <dig> + x <dig> + x <dig> ≤ k that forces the summation of certain concentrations of metabolites to be lower than a desired upper limit k. this second type of constraints may represent specific physiological properties that the solution sought should satisfy.

hence, the objective of the nlp model defined above is to find the solution that simultaneously minimizes the function u and satisfies the equations  defined upon the biological system. there are currently many strategies available to solve nlp problems like onlp. these methods are typically implemented in software packages that allow the solution of models with thousands of variables and constraints . unfortunately, there is a particular difficulty in solving the nlp defined by onlp, which stems from the fact that its feasible space is nonconvex. this nonconvex structure is given by the nonlinear equality constraints that define the velocity terms. in nonconvex models, standard nlp techniques are not guaranteed to converge to the global optimum and yield solutions that must be regarded as locally optimal. in the context of performing a biological analysis, this limitation constitutes a major shortcoming, since it can lead to wrong conclusions.

to overcome this drawback, it is necessary to resort to a specific type of mathematical methods known as global optimization techniques , which are able to assure the optimality of the solutions found within a desired tolerance. although such strategies can deal with any type of non-convexities, they tend to be computationally expensive, which hampers their practical implementation. a possible way to reduce their computational burden consists of developing tailored methods that exploit the mathematical structure of the non-convexities of the model.

in this paper, following this general idea, a novel deterministic global optimization method inspired on the works of bergamini and co-workers  <cit>  is presented to solve onlp to global optimality. the method introduced relies on hierarchically decomposing the original problem into two levels, an upper level master problem cmilp an a lower level slave problem rnlp, between which the algorithm iterates until a termination criterion is satisfied.

the master level of our algorithm entails the solution of a mixed-integer linear programming  problem, which is a relaxation of onlp , and therefore predicts a valid lower bound on its global optimum. such a model is constructed by replacing the non-linearities in onlp by valid over and under estimators. particularly, in our method, supporting hyper-planes and piecewise linear functions are used to approximate the original search space of onlp. in the lower level, the original problem is locally optimized in a reduced search space, thus yielding an upper bound on its global solution. the upper and lower level problems are solved iteratively until the bounds converge. for clarity, technical details of the main features of the proposed algorithm are commented in the appendix section.

algorithmic steps
hence, the prediction made by the upper level must be checked in the lower level, so the solution is guaranteed to be feasible in the original search space. specifically, in our algorithm, the solution of the master model is used as a starting point in the lower level problem, which is solved in a reduced search space that is defined according to the output of the master level. the lower level solution is then employed to tighten the search space of the master problem. as a result, the new modified master problem predicts better lower bounds that are closer to the global solution. furthermore, tightening the search space of the master problem also improves the quality of both, the starting points and reduced search spaces passed to the lower level. this can be observed in figure  <dig>  which shows how the envelopes employed in the master problem become tighter as iterations proceed. as a result, the upper and lower bounds tend to approximate and finally converge within the desired optimality gap.

the detailed steps of the proposed decomposition strategy are as follows :

 <dig>  set iteration count c =  <dig>  upper bound ub = ∞, lower bound lb = -∞, and tolerance error = tol.

 <dig>  set c = c +  <dig> 

solve the milp master problem cmilp:

• if problem cmilp is infeasible, then stop. there is no feasible solution to the problem.

• otherwise, update the current lower bound as follows: , where lbc represents the objective function value associated with the optimal solution of cmilp in iteration c.

 <dig>  for fixed lower and upper bounds on the velocity terms , solve the lower level problem rnlp to obtain an upper bound on the solution of onlp.

• if problem rnlp is infeasible, then update the grid in cmilp and go to step  <dig> 

• otherwise, update the current upper bound as follows: , where ubc represents the objective function value associated with the optimal solution of rnlp in iteration c.

 <dig>  check the convergence criteria:

• if , then stop. the solution corresponding to ub  satisfies the finalization criterion .

• otherwise, update the grid in cmilp and go to step  <dig> 

optimization of the anaerobic fermentation pathway in saccharomyces cerevisiae
as an illustrative example of the proposed technique, we use the anaerobic fermentation pathway in saccharomyces cerevisiae presented in polisetty et al.  as a benchmark problem for optimization. the reader is referred to the original publication for details . the model can be found in the additional file  <dig> 

the algorithm was implemented in gams interfacing with cplex  <dig>  and snopt  <dig>  as main milp/nlp optimization packages, respectively, on an intel  <dig>  ghz machine. the upper level of the algorithm was constructed using  <dig> supporting hyper-planes and  <dig> piece-wise terms. these upper and lower estimators were updated during the execution of the algorithm by defining new linearizations and terms of the piece-wise approximation in the middle points of the active subintervals in the solution of the master problems. the tolerance error  was set to  <dig> %.

in the upper part of table  <dig> we present the optimal solution for three different strategies. as in  <cit> , we limit the possible changes to 5-fold. in those conditions, an optimum rate of  <dig>  mm min- <dig> is found when all enzymes can be changed. this is a theoretical situation that, in practice, can be difficult, if not impossible, to implement. in practice, enzyme manipulation may be restricted to only few enzymes. thus, we explored a more realistic situation and obtain the optimal changes that would be necessary for maximizing ethanol production if only two different enzymes were to be manipulated at once. as in  <cit> , our method finds that a five-fold increase in glucose transporters and a  <dig>  fold-change in phosphofructokinase activity is the best combination if only two enzymes can be changed. in this situation a final rate of  <dig>  mm min- <dig> can be attained. thus, a realistic strategy may reach about a 66% of the best theoretical solution in that case. in the extreme case that only one enzyme can be manipulated, the best solution is found by increasing glucose intake. this is not surprising as glucose intake is a bottleneck for obtaining a final increase in ethanol production. as illustration of the method performance, we also include in the lower part of table  <dig> the optimal solution for all the possible combinations in which glucose intake is increased and a second enzyme is manipulated. in that case, any other strategy of increasing glk and other enzyme produces a much lower increase in ethanol production that the optimal pair glk and pfk. all those results are the same as in  <cit> , showing that our method reaches appropriate results.

best optimization strategies for increasing the rate of ethanol production in the model discussed as case study  <dig> in  <cit> . lb: lower bound, ub: upper bound. reaction numbers refer to the mathematical model used in  <cit> . hxt: glucose uptake, glk: hexokinase, pfk: phosphofructokinase, gapd: glyceraldehide-3-phosphate dehydrogenase, pyk: pyruvate kinase, tps+gol: polysaccharide production , gly: glycerol production.

in table  <dig>  the main computational details of the algorithm, which include the values of the nlp and milp solved in the last iteration, the total number of iterations and the total solution time are also provided. from a technical point of view, it is worth to indicate that our method produces much tighter upper bounds than those reported in  <cit>  . for instance, for the case when two enzymes are accessible to manipulation, our method yields an upper bound of  <dig>  mm min- <dig>  whereas in  <cit>  it is  <dig>  mm min- <dig>  this means that our method assures convergence to the global minimum within an optimality gap of  <dig> %, whereas in the solution reported in  <cit>  this gap is 22%. similar results can be observed in the remaining optimizations. this advantage can be important for an appropriate scaling of the method for more complex problems. note that the total time indicated in table  <dig> refers to the exploration of all the combinations within each strategy. thus, the one-enzyme optimization  takes  <dig>  cpu seconds. the case of finding the maximum when two enzymes can be changed takes  <dig>  seconds, whereas the examples in which all enzymes can be modified is solved in  <dig>  cpu seconds. note that at a first glance, one would expect that the problem in which all the enzyme changes are allowed would take more cpu time than those in which only a subset of changes are permitted. these results, which are due to some implementation details of the algorithm, can be found in small problems  but are not likely to appear in bigger problems in which the cpu time is indeed dominated by the complexity of the model rather than by the implementation details.

optimal adaptive response of yeast to heat shock
as a motivation for the feasibility approach that we shall develop in the next section, we shall obtain the optimal enzyme activity changes that would correspond to different goals in the adaptive response of yeast to heat shock. this problem was first analyzed by intensive computation by vilaprinyo et al.  <cit> . by using a gma model of the major metabolic pathways in yeast central metabolism, the goal is to identify which changes at the level of enzyme activities are more likely to produce a desired adaptive response. this response is defined by a set of physiological changes that can be considered as necessary for adaptation. in the model we include glycolysis, synthesis of trehalose and glycerol, and the branching from glycolysis to the pentose phosphate pathway. there are nine enzymes that can be changed, and the target fluxes are those of trehalose, atp, and nadph synthesis. model details can be obtained from  <cit>  .

we shall obtain the optimal changes that optimize different goals:  maximization of the rate of trehalose synthesis,  maximization of atp synthesis,  maximization of nadph synthesis, and  minimization of cost related to changing gene expression. we consider two different scenarios. first, we run the optimization procedure without physiological constraints. second, we consider the constraints in table  <dig> . the implementation details of the algorithm are the same as in the previous example. results are shown in table  <dig>  the table also provides the computational details of the algorithm.

see details in the work of vilaprinyo et al.  <cit> .

constraints correspond to those in table  <dig>  for details on the model and on the meaning of Ψ and cost the reader is referred to  <cit>  and to additional file  <dig> 

trehalose synthesis can be increased up to  <dig>  mm min- <dig> by increasing the activity of htx, pyk, and tps+gol, while decreasing most of the other activities. in doing that, two of the involved metabolites  accumulates. furthermore, synthesis of glycerol is reduced to zero and synthesis of nadph is decreased. this optimal solution cannot be considered a good adaptive solution as it compromises the cellular inner milieu by accumulating metabolites and challenges other processes by decreasing some critical fluxes. in that sense, this solution optimizes a metabolic goal  but does not match other important physiological constraints. a similar result is obtained when the goal is to maximize the synthesis of nadph or atp. particularly striking is the unrealistic concentration of f16p that is obtained in the optimal strategy for maximizing atp synthesis. in the case of minimization of cost, as no further constraints are imposed, we find the trivial solution that corresponds to maintain the basal conditions.

considering the set of constraints identified by vilaprinyo et al. , we run again the optimization procedure for each of the four objective functions. in all the cases, an optimal solution compatible with the imposed constraints is obtained. for instance, the maximum rate of trehalose synthesis that is compatible with the considered constraints is  <dig>  mm min- <dig>  this is well below the maximum obtained without constraints, but now the solution is reasonable in the terms imposed by the physiological constraints. similar results are obtained for the other objective functions. we also obtain the solution that minimizes the overall cost. in that case, cost can be lowered about a 50% with respect the other cases. minimization of cost undertakes values of the fluxes that are lower than in the optimal solutions for the other objective functions. from the implementation point of view, it is interesting to notice that in all the cases the algorithm was able to provide near optimal solutions  in few cpu seconds. similarly, as in the previous example, the master problem provided very tight relaxations, which led to few iterations.

feasibility approach
optimization techniques seek finding the best strategy for changing control variables so that the system can reach a given goal. thus, such methods are important in biotechnology and metabolic engineering where the scientist fixes the goal and searches for the best strategy in changing the underlying processes. the situation is different if we analyze the evolution of natural systems. as discussed above, natural systems are  optimized by the evolutive process by natural selection that acts as a purifying process. although the exact contribution of this mechanism is still discussed  <cit> , it is generally accepted as one of the basic driving forces in evolution. from this perspective, different criteria for functional effectiveness have been used for investigating the emergence of design principles in cellular systems  <cit> .

this part of the paper introduces a method that aims at providing an approximate characterization of the feasible space of a biological problem rather than identifying a single optimal solution. the tool presented is intended to provide valuable insights on the set of changes in enzyme activities that would be required for adaptation to an environmental challenge.

the approach introduced is based on the nlp formulation defined in onlp and exploits the specific structure of the gma representation. the use of this particular representation allows to perform the feasibility study by slightly modifying the algorithm described in the previous section. specifically, our strategy relies on solving the original problem onlp iteratively over a reduced search space. at each iteration the method identifies a region that contains a feasible solution to the problem. this region is then removed from the search space, and the optimization problem is resolved in the reduced domain. the algorithm proceeds in this manner until there is no feasible solution in the remaining regions of the search space.

the overall method, which relies on the global optimization approach introduced before, comprises two different levels. at the upper level, a master problem is solved to identify a region that may contain a feasible solution to onlp. at the lower level, the prediction made by the master problem is checked by solving the original problem in a reduced search space. if a feasible solution is found, then integer cuts are added to the master problem in order to exclude the region containing such a feasible point. otherwise, the master model is updated by refining its grid, until either a feasible solution is obtained in the lower level or an infeasibility is detected in the higher level problem. the main features of the algorithm are outlined next, whereas more technical details can be found in the appendix.

mathematical representation
we define a set of disjoint sets   such that their union contains the feasible space s of onlp (). in our work, for the sake of simplicity but without loss of generality, we assume that each of these regions  is a hyper-rectangle described by a set of linear inequalities that impose lower and upper limits on the apparent rate constants γq. thus, we have:   

this assumption implies that the feasibility analysis will be performed on the values of the apparent rate constants γ, although in general it could also account for other variables. in this notation, the values of the r components of γq and , which are denoted by  and , respectively, correspond to the limits of the subintervals obtained by partitioning the original domain of each single variable γr  into t subintervals. it follows that tr = q. in each hyper-rectangle , the component r of the vector γ must fall into a specific subinterval .

in mathematical terms, the feasibility analysis consists of identifying, from the aforementioned set of hyper-rectangles, those that contain feasible solutions to onlp and those in which no feasible point exists . in other words, we aim at determining whether the intersection s ∩  is empty  or contains at least one feasible point .

algorithmic steps
the algorithm relies on solving two different problems, a modified master problem cfmilp and a modified slave problem rfnlp, between which the algorithm iterates. model cfmilp is obtained from cmilp by adding a set of auxiliary equations that define the set of hyper-rectangles on which the search is conducted. furthermore, it also incorporates a set of integer cuts that exclude from the search space those hyper-rectangles that have been explored so far. similarly, model rfnlp is derived from rnlp by imposing certain lower and upper bounds on the values of the apparent rate constants γ. these bounds correspond to the limits of the hyper-rectangle that contains the solution predicted by the master problem, which may or may not be feasible in the search space of the original problem onlp.

model cfmilp is a relaxation of onlp and therefore predicts a valid lower bound on its solution. furthermore, if cfmilp is unfeasible, it follows that onlp  are unfeasible in any hyper-rectangle contained in the search space of the master problem . in our approach, this property is indeed exploited to terminate the algorithm.

the detailed steps of the proposed algorithm are as follows :

 <dig>  set outer iteration count b =  <dig>  inner iteration count c =  <dig>  upper bound ub = ∞, lower bound lb = -∞.

 <dig>  set b = b +  <dig> 

 <dig>  set c = c +  <dig> 

solve the milp master problem cfmilp:

• if problem cfmilp is infeasible, then stop. there is no feasible solution to the problem in the current search space.

• otherwise, for fixed lower and upper bounds on the apparent rate constants  and on the velocity terms  solve the lower level problem rfnlp.

- if problem rfnlp is infeasible, then update the grid in cfmilp and go to step  <dig> 

- otherwise, derive a new integer cut, set c =  <dig> and go to step  <dig> 

feasible enzyme activity patterns in the adaptive response of yeast to heat shock stress
using the same model as in the second optimization example, we have investigated the feasibility regions for changing enzyme activities in yeast metabolism so that specific physiological constraints are met. for simplicity in representing the results of the analysis, we shall present 2-d plots in which the feasible regions for the changes in two enzymes are shown. it is important to indicate that in each case all the enzymes are considered in the feasibility analysis, although only the corresponding region for the two selected enzymes is shown.

according to that, the hyper-rectangles for the feasibility analysis are defined on the domain of the selected enzymes, say for instance pfk and tdh. for practical reasons, we consider γr = krγr <dig>  here, γr <dig> represents the basal value and kr the change-fold over the basal value. we shall use the values of kr that correspond to the relative change of that enzyme with respect the basal activity. in this paper, we consider that enzyme activities are changed only by changing the amount of enzyme. of course, activity changes due to other reasons, such as temperature dependency, could also be considered. in such cases, the cost component would be much lower. in either case, the resulting changes in activity would affect metabolite concentrations and fluxes. those changes are considered in other constraints used in this analysis.

as an example, in the case of pfk and tdh  <dig> equally spaced segments from  <dig>  to  <dig> fold-change are considered in the study. this leads to  <dig> hyper-rectangles, each of which corresponds to a specific combination of one sub-interval of pfk and another of tdh. on the other hand, no sub-intervals are defined for the remaining enzymes. this implies that in each hyper-rectangle the model is free to choose any values for them. thus, the method is free for finding the best combination of enzymes that, within the considered hyper-rectangle, optimizes the objective function and meets the constraints. in this example, the synthesis of atp was regarded as the criterion to be optimized in the master and slave problems of our algorithm. this objective is only used to guide the milp and nlp subproblems. however, as mentioned before, any other criterion could have been employed, with identical results, since the main goal of our algorithm is to identify feasible regions and not to find optimal solutions. the implementation details of the algorithm are the same as in the previous examples. it is interesting to notice that the total cpu time was  <dig>  cpu seconds, which shows the efficiency of the proposed method.

the results of the feasibility analysis are given in figure  <dig>  the boxes in green represent hyper-rectangles that contain at least one feasible solution to the problem, whereas those in red have been proved to be unfeasible. as expected, there are numerous enzyme activity patterns that allow meeting these requirements. in concordance with our previous results, the model can find admissible solutions by compensating the activities of pfk and tdh. however, as the increase of pfk reaches its higher limit, admissible solutions can only be found with restricted values of tdh. in the unfeasible region, no compensation on the rest of enzymes produce an admissible solution considering the corresponding values of pfk and tdh.

let us note that the search grid employed in the analysis can be easily refined by performing a bound contraction strategy. specifically, the lower and upper allowable fold-changes for the associated rate constants can be determined by running  <dig> different optimization problems that account for the maximization/minimization of each single rate constant separately. this strategy reveals, for instance, that the admissible intervals for the rate constant range from  <dig>  to  <dig>  for the pfk, and from  <dig>  to  <dig>  for tdh. figure  <dig> shows the results obtained when this new grid is considered, assuming again  <dig> sub-intervals for each enzyme. as can be observed, the advantage of performing the bound contraction is that it allows to discard beforehand regions of the search space that do not contain feasible solutions. hence, the study concentrates only on the most promising hyper-rectangles . the total cpu time in this new case was  <dig>  cpu seconds. the existence of a relatively wide region of admissible solutions raises the question of which of the solutions will evolve by natural selection. to shed light on this issue, in figure  <dig>  we have also plotted the optimal solutions found in table  <dig>  and some experimental points corresponding to the data bases analyzed by vilaprinyo et al. . interestingly, the experimental data, in the case of pfk and tdh, are situated close to the optimal solution that is obtained when the cost is minimized. roughly, this may be an indication that adaptive response of yeast to heat shock has been shaped to save resources related to over-express enzymes. for illustrative purposes, we also show the results obtained for pfk and hxt. in that case, as the system can compensate larger changes in hxt, results are not all that clear. iteratively, we could consider all the possible pairs to obtain a global view of the results.

effect of the constraint values
the results obtained in the feasibility analysis shown in the previous section are dependent on the values of the constraints. the values used in that case were obtained in a previous analysis of the model  <cit>  and could be modified in different ways. the interesting advantage of our method is that it allows for exploring the resulting feasible regions in practical terms for large models. thus, one could consider different values that can be suggested by experts or obtained from other biological considerations. of course, a sound knowledge of the biological problem is a fundamental basis for this. in any case, comparison of the resulting feasible regions can help in evaluating the considered constraints and may help in identifying those constraints that are more likely responsible for the actual characteristics of the adaptive response. this would require appropriate experimental data for comparing the model predictions with the actual system behavior.

CONCLUSIONS
while the solutions obtained via optimization methods can be realizable in a biotechnological application, provided the required changes can be practically implemented, the optimal changes would seldom be attained in natural systems that have evolved through natural selection. from a general point of view, those systems have evolved so that the metabolic status meets a set of constraints without compromising survival and viability. for instance, adaptive response to a given condition may require to increase a flux over a given limit. however, instead to evolve towards a solution that reaches the maximum possible flux, evolution finds a solution that provides the required increase without compromising other objectives, for instance maintain a low concentration of internal metabolites.

our feasibility approach has been developed to address this problem. by considering a set of physiological constraints, we search for the feasible parameter regions that allow the system to meet those constraints. we have investigated the utility of this approach in exploring the adaptive response of yeast to heat shock. our results identify the admissible changes in enzyme activities that can meet the physiological constraints suggested in  <cit>  . interestingly, the experimental observations are located within the predicted feasibility region and close to the changes that would be required to minimize the cost of overexpressing the different enzymes . furthermore, the proximity to the optimum for trehalose synthesis also suggest that this is an important requirement for the actual adaptive response.

although this is not the case in the considered examples, it may happen that two or more unconnected feasible regions may exist for a given problem. that situation would be very interesting from the point of view of discussing the evolution of that adaptive response. in theory, it would mean that solutions in either of the regions could emerge from natural selection. if actual data situates the evolutionary solution in a particular region, then one may ask which were the disadvantages of the other possibilities. besides a random choice, selection of a given solution among equally admissible alternatives would be a clue of the existence of complementary constraints. for instance, it may be that the evolved solution is better for assuring an appropriate adaptive response to other stress conditions. also, one should check for differences in dynamic responses as a complementary argument for evaluating the performance of each of the potential solutions.

the practical use of the methodology developed in this work requires a mathematical model that accurately reflects the properties of the system. furthermore, although detailed models would be desirable, the mathematical complexity makes optimization tasks very difficult on those models. gma models provide a practical solution and have several advantages that allow an efficient implementation of the optimization procedures. first, automatic generation of models from conceptual schemes is straightforward, which facilitates obtaining a useful mathematical model. second, a number of techniques exist for fitting those models to dynamic data , which is basic for obtaining a numerical model that can be used in optimization procedures. third, gma models can incorporate qualitative data, which can help when limited information is available for parameter identification. finally, the specific structure of the gma model can be exploited to devise an efficient tailor-made global optimization algorithm. particularly, in the context of the proposed method, we take advantage of the gma representation in order to construct master milps that provide tight lower bounds on the optimal solution to the original problem. thus, our method exploits the advantages offered by this kind of models for obtaining a useful implementation of the optimization and feasibility approaches.

in practical problems, once a model has been appropriately identified, parameter uncertainties can be a difficulty for obtaining a reasonable result  <cit> . as the procedure developed here is highly efficient, it should be practically possible to run a sensitivity analysis by screening different parameter sets. this would help in discussing the validity of the obtaining results when parameter variability is an issue.

the proposed method requires a sound knowledge of the biological problem. this is especially important for identifying physiological constraints that can be relevant in limiting the feasibility region. if those constraints are not clearly identified, our method can be used as an exploratory tool for identifying different feasibility regions that would correspond to different sets of physiological constraints. an analysis of the different results could help in identifying those constraints that may be more important in a given scenario. in any case, validation of the feasibility regions obtained would require experimental data. discrepancies between theoretical results and actual data may help in discarding unreasonable physiological constraints. in the example discussed here, experimental observations agree with the predicted feasibility region. this should be interpreted as an indirect prove that the physiological constraints used are meaningful in that case. however, it is not a prove that these are the only constraints that explain the observed results. an iterative analysis through alternative sets of constraints would be required for completely identifying the most significant ones.

besides its application to understand the evolution of adaptive responses, our methodology can be useful in exploring health and disease states  <cit>  so that optimal targets for specific treatments via regulation of enzyme activity can be suggested  <cit> . all these problems must take into account the evaluation of several objective functions  <cit> . our approach could simplify this task by finding the optimal solution for each of the various objective functions and by comparing these results within the feasibly region .

our method focuses on exploring adaptive responses through changing enzyme activities. it would be interesting to extend the methodology to include kinetic-orders in the optimization. this would allow to explore design principles required for a given network to perform according to specific performance criteria. also, it would be necessary to adapt the optimization procedures so that dynamic properties, such as stability and response time, could be included as physiological constraints.

authors' contributions
as suggested the need for the feasibility approach and provided the biological problem. gg-g developed both the optimization and the feasibility algorithms and performed the numerical analysis. both authors evaluated the results, wrote the paper and equally contributed to its final form.

appendix
upper level master problem for the optimization procedure
the upper level master problem cmilp is a relaxation of onlp that is obtained by applying an exponential transformation on some variables of onlp and then replacing the resulting logarithmic terms by valid over and under estimators. we first define the following exponential transformations:   

where Γr and xj are the new transformed variables. with these changes, equation a. <dig> translates into:   

a logarithmic transformation is next applied on equation a. <dig> to obtain:   

this equality constraint can be replaced by the following inequalities:   

the concave univariate terms appearing on the left hand side of equations a. <dig> and a. <dig> are next replaced by valid under and over estimators, respectively. specifically, in this work we employ piecewise linear functions and supporting hyper-planes to under and over estimate the logarithmic terms, respectively .

to derive the piecewise linear functions, we consider a partition of the domain , determined by grid points , with  = ,  and  for h =  <dig>  ... h. the piecewise under estimator can be formulated as a disjunction with h terms :  

the mixed-integer formulation based on the convex hull reformulation  <cit>  is as follows:   

then, by combining a. <dig> and a. <dig>  we get:   

on the other hand, the logarithmic term in constraint a. <dig> is approximated by a linear outer-approximation. this is accomplished by adding supporting hyper-planes, which are obtained by performing first order linearizations at a set of l points. equation a. <dig> is therefore rewritten as follows:   

since the logarithmic function is concave, these hyper-planes strictly over estimate its value and thus do not chop off any feasible solution of the original model onlp. the overall master problem can therefore be expressed as follows:  

model cmilp takes the form of a mixed-integer linear programming  problem. this type of model can be efficiently solved via standard branch and bound techniques  <cit> .

note that the master problem can also be expressed as follows:   

where the set rs is a relaxation of r  and it is defined as follows:   

where  is the reformulated objective function; and  represents the set of reformulated equations that define the feasible set, which includes the auxiliary constraints that define the lower and upper estimators of the logarithmic terms.

lower level slave problem for the optimization procedure
the lower level of the algorithm is represented by a reduced nlp , which is obtained from the original nonconvex formulation onlp by imposing lower and upper bounds on the values of the velocity terms.  

the solution of such a model provides an upper bound on the objective function of onlp. the master and slave problems are solved iteratively until the upper and lower bounds converge. note that in rnlp, the lower and upper limits of the intervals within which the values of vr must fall  are given by the master problem cmilp. specifically, these bounds correspond to the limits of the intervals that are active in the master problem. then, if  denotes the solution of the master problem, in which the h term of the disjunction that approximates vr is active, then we have that  and, hence, .

remarks
• the upper and lower estimators are only required to replace those velocity terms that appear in equations with more than two terms. on the other hand, equations containing only two of the remaining velocity terms can be written as follows:   

 where te represents the set of those metabolites whose concentration is described by only two velocity terms, and tj represents the set of velocity pairs  associated with each metabolite i in te. note that in equation a. <dig>  μir and μir' have opposite signs, so it is possible to perform a logarithmic transformation on both sides of the equation:   

by combining equations a. <dig> and a. <dig>  we finally get:   

which is a linear constraint.

• the grid in problem cmilp can be updated in different ways. a possible strategy to perform the updating consists of including in it the middle points of the active subintervals in the solution of the master problem cmilp. therefore, if the solution of cmilp is such that  , then the grid corresponding to vr is modified by adding the new point . alternatively, the grid can be updated by just adding the optimal solution obtained in the lower level problem rnlp.

• in each iteration, additional hyper-planes can be added in the master problem in a similar way as it is done with the grid updating. thus, the logarithmic terms can be linearized either at the middle points of the active subintervals or at the optimal values obtained in the lower level problem rnlp.

• the approach presented can easily handle the case in which lower and upper bounds are imposed on the apparent rate constants γr and/or the concentrations of metabolites xj. these conditions can be expressed via the following constraints:   

which can easily be converted into the following linear inequalities:   

• the approach presented also allows to fix upper bounds on the summation of γr and xj. this can be accomplished by adding the following inequalities:   

here, sg and sx denote the upper bounds on the summations of γr and xj, respectively. these inequalities can be equivalently written as follows:   

constraints a. <dig> and a. <dig> are convex, and hence can be linearized in a similar way as was done with equation a. <dig>  note, however, that the definition of lower bounds on the summation of γr and xj leads to nonconvex terms. in this latter case, additional piecewise estimators are required to preserve the convexity of the model.

• let us finally note that different types of piecewise functions could be applied in the master problem  <cit> .

modified master problem for the feasibility method
the problem of identifying if the variable γr falls into the subinterval  can be formulated as a disjunction with t terms:   

the mixed-integer formulation based on the convex hull reformulation  <cit> , is as follows:   

where  is the auxiliary disaggregated variable and zrt is a new binary variable that takes a value of one if γr lies in the subinterval t, and it is zero otherwise. figure  <dig> shows an illustrative example with r =  <dig> and t =  <dig>  note that the binary variables zrt indicate the membership of a solution to a specific hyper-rectangle. in the example presented, each variable is divided into  <dig> intervals, which leads to  <dig> different hyper-rectangles, each of which is represented by a different binary solution z*.

the task of identifying optimal values of v, γ and x according to a predefined criterion over the search space  can be expressed as a mixed-integer nonlinear programming  problem with the following form:  

the equations in fminlp define a non convex feasible region. however, it is possible to convexify the model by applying the same algebraic transformations described before. finally, the reformulated milp problem can be expressed as follows:  

in the context of our algorithm, this master problem is employed to predict whether a feasible solution exists in the search space sp or not.

modified slave problem for the feasibility method
the modified slave problem is a reduced nlp model rfnlp that is obtained from the original nonconvex formulation onlp by imposing lower and upper bounds on the continuous variables vr and γr.  

note that in model rfnlp, the lower and upper bounds imposed to γr are given by the values of the binary variables zrt in the master problem, whereas the values of  and  correspond to the limits of the active intervals of the linear piecewise approximations in cfmilp.

integer cuts for the feasibility method
at each iteration, the search space is reduced by removing all the sub-regions  containing feasible solutions that have been identified so far. this is accomplished by making use of integer cuts, which are mathematically expressed as follows:   

where  and , with  being the value of the s component of the vector of binary variables in the feasible solution identified in the outer iteration b. the sets  and  are therefore obtained in each outer iteration b, and are employed to derive integer cuts that are added cumulatively to the master problem cfmilp.

remarks
• note that the algorithm only requires solving the problems to feasibility, i.e., a feasible solution of the problems is sufficient for the algorithm goal. however, by defining a small tolerance error tol, the algorithm can also determine the optimal solution in the region sp explored at each iteration within the predefined optimality gap.

• the integer cuts in equation a. <dig> are added cumulatively at each iteration to the upper-level model cfmilp, which leads to an increase in its size.

supplementary material
additional file 1
model details and physiological constraints. detailed description of the models used in the main text and the physiological constraints considered in the optimization and feasibility examples.

click here for file

 acknowledgements
the authors wish to acknowledge support of this research work from the spanish ministry of education and science   and the spanish ministry of external affairs .
