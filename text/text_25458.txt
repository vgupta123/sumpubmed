BACKGROUND
modeling and simulations of large scale biological pathways are some of the most important tasks in bioinformatics. many applications, e.g., cell illustrator  <cit> , cytoscape  <cit> , pajek  <cit> , patika  <cit> , and cadlive  <cit>  have been developed in this area. related to these topics, the visualization of biopathways is considered to play a key role in understanding biological systems. however, manual drawing of large-scale biopathways is a time consuming work, hence suitable biopathway layout algorithms and their applications are strongly demanded.

biopathways are categorized into three types, i.e., metabolic pathways, signal transduction pathways, and gene-regulatory networks. for metabolic pathways, several algorithms have been already proposed  <cit> , and some of them succeeded in capturing the flow of the reactions well. in contrast, few layout algorithms that provide a convenient biological understanding have been proposed for signal transduction pathways  <cit>  and gene-regulatory networks  <cit> . thus, our new layout algorithm is focused on signal transduction pathways and gene-regulatory networks. for signal transduction pathways and gene-regulatory networks, extant layout algorithms can be categorized into two types; force-directed and grid layout algorithms.

force-directed algorithms are used in  <cit>  by taking into account the directional constraint following different types of molecular and simple regional constraints from subcellular localizations. these algorithms have been successfully integrated into patika. however, as pointed out in  <cit> , force-directed algorithms may not be suitable for compact layouts of complex biopathways. furthermore, intricately shaped regions such as torus-shaped region cannot be handled well as regional constraints in these force-directed algorithms. hence, they are not suitable for models containing torus-shaped plasma membrane and nuclear membrane although such types of models are common as biopathways.

a grid layout algorithm  was initially proposed by li and kurata. the grid layout algorithm restricts the positions of all nodes to grid points. li and kurata defined a cost function for two nodes that depends on some distance between these nodes and the topology of their connections in the graph. they applied lk-grid layout algorithm to a yeast cell-cycle pathway and concluded that this algorithm can geometrically classify the pathway into functional categories without using biological information. moreover, they noticed that the algorithm generates compact layouts while avoiding overlaps between nodes.  <cit>  proposed cb-grid layout algorithm, in which so as to reduce edge-edge crossings and node-edge crossings, a penalty for these cases is added to the cost function. the algorithm can also deal with any complex regional constraints following subcellular localizations, and besides search space is reduced due to these constrains. as a result, in the apoptosis model, the layout algorithm succeeded in a drastic reduction of edge-edge crossings and node-edge crossings, while placing nodes in biologically proper regions.

however, in the case of larger-scale networks, this algorithm encountered three problems. first, a layout with randomly placed nodes is used as the initial layout. this random layout contains a large number of edge-edge crossings and node-edge crossings; subsequently, many iterations will be required to obtain a locally optimal layout. secondly, although one of the features of cb-grid layout algorithm is to use the subcellular localization information, it still does not fully utilize biological characteristics. for example, it does not consider such biological attributes as types of entities  or types of processes , although in human layouts these biological attributes are apt to contribute to the comprehension of interesting biopathways easier. thirdly, according to a greedy strategy, cb-grid layout algorithm updates a layout by moving one node at each step until the layout reaches an optimum. however, resulting layouts are just local optima, hence their quality fundamentally depends on the initial layout. although in  <cit>  a multi-step cb-grid layout algorithm was also proposed to solve this drawback, it requires higher time complexity and hence is not suitable for practical applications.

to overcome these three problems, we propose a new grid layout algorithm. for the first problem, we propose a new force-directed algorithm whose output is suitable as the initial layout of grid layout algorithms. for the second problem, we introduce the concept that assigns a score i.e., a negative cost, to a layout depending on how nodes with the same attribute are aligned. this concept is realized with a combo score function, which is combined with the cost function defined in cb-grid layout algorithm. for the third problem, the search strategy in cb-grid layout algorithm is improved by adding the swap operation while keeping the time complexity. by the swap operation, the new grid layout can also consider layouts generated by exchanging the positions of two nodes in the current layout at each step.

the methods section is organized as follows:  first, we introduce the previous grid layout, i.e., cb-grid layout algorithm;  for the first improvement in the initial layout of cb-grid layout algorithm, the new force-directed algorithm termed eades initial layout algorithm is described;  for the second improvement, ccb-grid layout algorithm, which is cb-grid layout algorithm with the combo score function is described;  for the third improvement, sccb-grid layout algorithm, which enhances ccb-grid layout algorithm by adding the swap operation is presented. in the results and discussion section, the performances of these new algorithms are compared and verified by applying them to the signal transduction pathway of an endothelial cell, which is larger than the pathways in  <cit>  and  <cit> .

methods
cb-grid layout algorithm: introduction of the grid layout algorithm
given a graph g =  with nodes v and edges e, a layout l =  of g consists of the underlying graph g, grid points u and a function p : v → u such that p  ≠ p  for any two distinct nodes vα, vβ ∈ v. this definition does not allow overlaps between nodes in the layout. for a layout l, this paper uses the following notations.

• wl: a set of vacant points of l.

• ev: the set of all edges connected to node v.

• |v|: the number of nodes in v.

• |w|: the number of vacant points in l, instead of |wl| if there is no confusion possible.

we define the following operations.

• tv → p l: the layout generated by moving a node v to a vacant point p ∈ wl.

• svα↔vβ
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwudawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabawccqghugyqcqwg2bgddawgaaadbagae8nsdigabeaaasqabaaaaa@368f@l: the layout generated by swapping nodes vα and vβ.

• dv l: the layout generated by removing a node v and all edges connected to v.

in addition, we define the following functions.

• crossei,ej
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemyzau2aasbaawqaaiabdmgapbqabawccqggsaalcqwglbqzdawgaaadbagaemoaaogabeaaasqabaaaaa@3a47@ : a binary function that returns  <dig> if an edge ei crosses with an edge ej and  <dig> otherwise.

• crossvi,ej
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemoday3aasbaawqaaiabdmgapbqabawccqggsaalcqwglbqzdawgaaadbagaemoaaogabeaaasqabaaaaa@3a69@ : a binary function that returns  <dig> if an edge ej crosses with a node vi and  <dig> otherwise.

• distancevi,vj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiegacqwfebarcqwfpbqacqwfzbwccqwf0badcqwfhbqycqwfubgbcqwfjbwycqwflbqzdawgaawcbagaemoday3aasbaawqaaiabdmgapbqabawccqggsaalcqwg2bgddawgaaadbagaemoaaogabeaaasqabaaaaa@3e53@ : a function that returns wvi,vj⋅md
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg3bwddawgaawcbagaemoday3aasbaawqaaiabdmgapbqabawccqggsaalcqwg2bgddawgaaadbagaemoaaogabeaaasqabagccqghfly1cqwgtbqbcqwgkbazcqggoaakcqwg2bgddawgaawcbagaemyaakgabeaakiabcycasiabdaha2naabaaaleaacqwgqbgaaeqaaogaeiykakcaaa@42e9@, where wvi,vj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg3bwddawgaawcbagaemoday3aasbaawqaaiabdmgapbqabawccqggsaalcqwg2bgddawgaaadbagaemoaaogabeaaasqabaaaaa@3541@ is the weight to the couple of nodes vi and vj, and md  is the manhattan distance between vi and vj.

in our previous approach  <cit>  , the layout cost c  of l was defined as follows:

c=wee∑ei,ej∈ecrossei,ej+wne∑vk∈v,el∈ecrossvk,el+wdc∑vm,vn∈vdistancevm,vn,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqggoaakcqwgmbatcqggpaqkcqgh9aqpcqwgxbwvdawgaawcbagaemyzaumaemyzaugabeaakmaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdwgalnaabaaameaacqwgpbqaaeqaasgaeiilawiaemyzau2aasbaawqaaiabdqgaqbqabaaaleqaaaqaaiabdwgalnaabaaameaacqwgpbqaaeqaasgaeiilawiaemyzau2aasbaawqaaiabdqgaqbqabawccqghiiizcqwgfbqraeqaniabgghildgccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgxbwvdawgaawcbagaemoba4maemyzaugabeaakmaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdaha2naabaaameaacqwgrbwaaeqaasgaeiilawiaemyzau2aasbaawqaaiabdygasbqabaaaleqaaaqaaiabdaha2naabaaameaacqwgrbwaaeqaasgaeyici4saemovaylaeiilawiaemyzau2aasbaawqaaiabdygasbqabawccqghiiizcqwgfbqraeqaniabgghildgccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgxbwvdawgaawcbagaemizaqmaem4yamgabeaakmaaqafabaacbigae8hraqkae8xaakmae83camnae8hdaqnae8xyaemae8nba4mae83yammae8xzau2aasbaasqaaiabdaha2naabaaameaacqwgtbqbaeqaasgaeiilawiaemoday3aasbaawqaaiabd6gaubqabaaaleqaaaqaaiabdaha2naabaaameaacqwgtbqbaeqaasgaeiilawiaemoday3aasbaawqaaiabd6gaubqabawccqghiiizcqwgwbgvaeqaniabgghildgccqggoaakcqwgmbatcqggpaqkcqggsaalcawljagaaczcamaabmaabagaegymaedacagloagaayzkaaaaaa@9f58@

where wee, wne, and wd are called respectively edge-edge crossing weight, node-edge crossing weight, and distance cost weight.

the cb-grid layout algorithm repeats the operation of moving a unique node to a vacant point one-by-one until it reaches a locally optimal layout. at each step, the algorithm calculates costs of all layouts that can be generated by moving one of all nodes to one of all vacant points. the layout with the lowest cost is selected as a starting layout for the next step. after reaching convergence, the algorithm outputs a locally optimal layout. if the cost calculation of all possible adjacent layouts is implemented in a naïve way, high time complexity is required. to overcome this problem, the previous method  <cit>  introduced Δ matrix that stores each possible cost difference at the previous step and succeeded in reducing the time complexity at each step from o  to o ), where vβ is the node moved at the previous step.

when cb-grid layout algorithm was applied to several biopathways, we encountered three problems. thus, we propose new grid layout algorithms that solve these problems. problems and solutions are summarized as follows:

 <dig>  improving the choice of the initial layout: since a locally optimal layout depends noticeably on the initial layout, we first apply eades initial layout algorithm to a random layout, and use its output as the initial layout. in the previous approach, a random layout was directly used as the initial layout.

 <dig>  improving the cost function: we introduce the concept of a combo score that gives a good score, i.e., a negative cost when nodes with the same biological attribute are aligned . in cb-grid layout algorithm, the biological attributes, except subcellular localization, were ignored.

 <dig>  improving the search strategy: we propose a better search strategy, which allows us to obtain improved results, keeping the time complexity. for obtaining a better layout, the search space is extended by adding the swap operation. at each step, all layouts obtained by swapping two nodes are also considered .

in the remainder of this section, we describe these three new algorithms mentioned above.

eades initial layout algorithm: generating a new initial layout for grid layout algorithms
in the previous paper  <cit> , a random layout was used as an initial layout for cb-grid layout algorithm. when the initial layout is far from the global optimum, the local optimum obtained tends to be unacceptable. therefore, we decided to develop eades algorithm  <cit>  and use its output as the initial layout. eades algorithm is one of the force-directed algorithms, consisting of the following two steps.

 <dig>  two types of forces are defined for each pair of nodes. if two nodes are adjacent, there exists an attractive force ac <dig> log between them, where ac <dig> and ac <dig> are constants, and d is the distance between the two nodes. on the other hand, if two nodes are not adjacent, there exists a repulsive force rc/d
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadagcaaqaaiabdsgakbwcbeaaaaa@2e18@ between them, where rc is a constant. at each step, the positions of all the nodes are updated according to the sum of the repulsive and attractive forces between them.

 <dig>  the above step is iterated a predetermined number of times, and the final result is obtained.

we have customized two points in eades algorithm. first, nodes in eades algorithm can be placed anywhere. all the nodes in the initial layout for cb-grid layout algorithm, however, should be placed on the grid points that satisfy the subcellular localization. thus, the output of eades algorithm cannot be used directly as an input for cb-grid layout algorithm.

to handle this problem, we propose to move each node to the closest vacant point that satisfies the subcellular localization after moving nodes at each step.

second improvement is the following one. since eades algorithm doesn't consider edge-edge crossings and node-edge crossings in its implementation, the resulting layout could contain a lot of such crossings. for example, suppose a biological pathway with a subcellular localization, membrane, which slimly surrounds other subcellular localizations as shown in figure  <dig>  the graph in  could be a layout resulting from eades algorithm. in this case, the layout might contain a large number of edge-edge crossings and node-edge crossings because edges cross over other subcellular localizations. in order to avoid this problem, we propose to gather nodes around a particular grid point for each subcellular localization as shown in figure  <dig>  eades algorithm with the above improvements is called eades initial layout algorithm.

ccb-grid layout algorithm: utilizing various biological attributes
when humans draw biopathway models, nodes with the same attribute are usually arranged according to a rule. in cb-grid layout algorithm, this type of information is completely ignored. to implement this type of property, we introduce the concept of combo scores called combo <dig> and combo <dig> . note that a combo score is applied only to nodes having an attribute since some nodes do not have any attributes. we denote the set of nodes having an attribute by v' ⊆ v. in this algorithm,  uppergrid/lowergrid returns the upper/lower ith grid point over/under a grid point p ∈ p, and  attr is the attribute of a node v ∈ v', and cwa = , where c is a constant and normally set to |v|, and v′a
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgwbgvgaqbamaabaaaleaacqwghbqyaeqaaaaa@2f64@ is the set of nodes having an attribute a.

the combo score is designed such that the more nodes with the same attribute are aligned vertically, the higher the score is. the combo score is defined between two nodes, and a combo score of a layout l is defined to be the sum of all the combo scores occurring in l. we say that two nodes have a combo relation when a combo score occurs between them. note that the horizontal alignment score is not implemented because if the above combo score supported both the vertical and horizontal directions, the numbers of edge-edge crossings and node-edge crossings would be considerably increased. therefore, we should choose only one direction for combo scores. in this paper, we defined combo scores in the vertical direction. we have considered two types of combo scores, i.e., combo <dig> and combo <dig> for layouts in figure  <dig> and  <dig>  respectively. let nodes va to vf in figure  <dig> have the same attribute. the combo <dig> considers only the nodes with one vertical grid distance from the target node. in contrast, combo <dig> considers the nodes with up to two vertical grid distances from the target node. for the layout in figure  <dig>  the number of combo relations with combo <dig> and combo <dig> are  <dig> and  <dig>  respectively. if node vf is moved as shown in figure  <dig>  the number of combo relations with combo <dig> is the same as before, whereas that with combo <dig> is  <dig>  thus, only by using combo <dig>  we can improve the combo score when node vf is moved as shown in figure  <dig> and  <dig>  as shown in the dotted rectangle in figure  <dig>  a pair of vertically aligned nodes often occurs during the process of updating a layout. in this case, figure  <dig> should be a better layout than figure  <dig>  for this reason, we decide to employ combo <dig>  henceforth, for a node v ∈ v in a layout l, combov  denotes the same combo score as combo <dig> . the total score ∑v∈vcombov
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaaeqbqaaiabdoeadjabd+gavjabd2gatjabdkgaijabd+gavnaabaaaleaacqwg2bgdaeqaaogaeiikagiaemitawkaeiykakcaleaacqwg2bgdcqghiiizcqwgwbgvaeqaniabgghildaaaa@3e08@ for l is denoted by combo .

if cwa returns the same value for any attribute a, many of the nodes with the same attribute will be vertically aligned easily since they have a greater chance to neighbor one another. so as to reduce the biases among the attributes, we define cwa to be inversely related to the total number of the nodes whose attribute is a.

by modifying the layout score of cb-grid layout algorithm, we can define the layout cost c  of a layout l with the new concept of the combo score as follows:

c=wee∑ei,ej∈ecrossei,ej+wne∑vk∈v,el∈ecrossvk,el+wdc∑vm,vn∈vdistancevm,vn−wcs),     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaegadaaabagaem4qamkaeiikagiaemitawkaeiykakcabagaeyypa0dabagaem4vac1aasbaasqaaiabdwgaljabdwgalbqabagcdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwglbqzdawgaaadbagaemyaakgabeaaliabcycasiabdwgalnaabaaameaacqwgqbgaaeqaaawcbeaaaeaacqwglbqzdawgaaadbagaemyaakgabeaaliabcycasiabdwgalnaabaaameaacqwgqbgaaeqaasgaeyici4saemyraueabeqdcqghris5aogaeiikagiaemitawkaeiykakiaey4kasiaem4vac1aasbaasqaaiabd6gaujabdwgalbqabagcdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwg2bgddawgaaadbagaem4aasgabeaaliabcycasiabdwgalnaabaaameaacqwgsbabaeqaaawcbeaaaeaacqwg2bgddawgaaadbagaem4aasgabeaaliabgigiolabdafawjabcycasiabdwgalnaabaaameaacqwgsbabaeqaasgaeyici4saemyraueabeqdcqghris5aogaeiikagiaemitawkaeiykakiaey4kasiaem4vac1aasbaasqaaiabdsgakjabdogajbqabagcdaaeqbqaagqaciab=reaejab=lgapjab=nhazjab=rha0jab=fgahjab=5gaujab=ngajjab=vgalnaabaaaleaacqwg2bgddawgaaadbagaemyba0gabeaaliabcycasiabdaha2naabaaameaacqwgubgbaeqaaawcbeaaaeaacqwg2bgddawgaaadbagaemyba0gabeaaliabcycasiabdaha2naabaaameaacqwgubgbaeqaasgaeyici4saemovayfabeqdcqghris5aogaeiikagiaemitawkaeiykakcabaaabagaeyoei0cabagaem4vac1aasbaasqaaiabdogajjabdohazbqabagcdaqadaqaamaalaaabagaegymaedabagaegomaidaamaaqafabagaem4qamkaem4ba8maemyba0maemoyaimaem4ba82aasbaasqaaiabdaha2naabaaameaacqwgvbwbaeqaaawcbeaakiabcicaoiabdyeamjabcmcapawcbagaemoday3aasbaawqaaiabd+gavbqabawccqghiiizcuwgwbgvgaqbaaqab0gaeyyeiuoaaogaayjkaiaawmcaaiabcycasaaacawljagaaczcamaabmaabagaegomaidacagloagaayzkaaaaaa@bcaf@

where wcs is called combo score weight. cb-grid layout algorithm improved by the above modification is named combo score, cross cost and biological information grid layout algorithm . the reason for multiplying the sum of the combo scores by 1/ <dig> is that combo scores are counted twice since a combo score between nodes vα and vβ is included in both combovα
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwgvbwbcqwgtbqbcqwgibgycqwgvbwbdawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabaaaleqaaaaa@36b8@  and combovβ
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwgvbwbcqwgtbqbcqwgibgycqwgvbwbdawgaawcbagaemoday3aasbaawqaaggaciab=j7aibqabaaaleqaaaaa@36ba@ . the algorithm is the same as c-optimization  step in  <cit>  except for the use of the above layout cost c , i.e., the algorithm for calculating Δ matrix is also the same.

for calculating the combo score for each node, only four nodes need to be checked at most, i.e., its time complexity is constant, while for calculating the edge-edge crossing cost, the node-edge crossing cost, and the distance cost for each node, these time complexities depend on |e|, |v|, and |w|, respectively. thus, without using Δ matrix, the time complexity related to combo scores is o  at each step.

at each step, we need to calculate the difference between the combo score of the previous layout l and that of the current layout that is generated by moving a node v to a vacant point p, i.e., combo – combo. we can efficiently calculate the difference of the combo score Δvpcs
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqhuoardaqhaawcbagaemodaynaemicaahabagaem4yammaem4camhaaaaa@33db@  as follows:

Δvpcs={wcs−combov+adjv−adjv)if v∈v′0ifv∉v′,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqhuoardaqhaawcbagaemodaynaemicaahabagaem4yammaem4camhaaogaeiikagiaemitawkaeiykakiaeyypa0zaaiqabeaafaqabegacaaabagaem4vac1aasbaasqaaiabdogajjabdohazbqabagccqggoaakcqwgdbwqcqwgvbwbcqwgtbqbcqwgibgycqwgvbwbdawgaawcbagaemodayhabeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgdcqghsgircqwgwbacaeqaaogaemitawkaeiykakiaeyoei0iaem4qamkaem4ba8maemyba0maemoyaimaem4ba82aasbaasqaaiabdaha2bqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgbbqqcqwgkbazcqwgqbgadawgaawcbagaemodayhabeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgdcqghsgircqwgwbacaeqaaogaemitawkaeiykakiaeyoei0iaemyqaekaemizaqmaemoaao2aasbaasqaaiabdaha2bqabagccqggoaakcqwgmbatcqggpaqkcqggpaqkaeaaieaacqwfpbqacqwfmbgzcqqggaaicqwg2bgdcqghiiizcuwgwbgvgaqbaaqaaiabicdawaqaaiab=lgapjab=zgamjab=bcagiabdaha2jabgmgiplqbdafawzaafaaaaagaay5eaagaeiilawiaaczcaiaaxmaadaqadaqaaiabiodazagaayjkaiaawmcaaaaa@8954@

where

adjv={cwattrif iscombo))=true&iscombo))=true0otherwise..     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgbbqqcqwgkbazcqwgqbgadawgaawcbagaemodayhabeaakiabg2da9maaceqabaqbaeqabigaaaqaaiabdoeadjabdefaxnaabaaaleaacqqgbbqqcqqg0badcqqg0badcqqgybgccqggoaakcqwg2bgdcqggpaqkaeqaaagcbagaeeyaakmaeeozaymaeeiiaasbaeaabiqaaaqaaiabbmgapjabbohazjabboeadjabb+gavjabb2gatjabbkgaijabb+gavjabcicaoiabdaha2jabcycasiabbwha1jabbchawjabbchawjabbwgaljabbkhayjabbeeahjabbkhayjabbmgapjabbsgakjabcicaoiabbcfaqjabcicaoiabdaha2jabcycasiabigdaxiabcmcapiabcmcapiabcmcapiabg2da9gqabiab=rha0jab=jhayjab=vha1jab=vgaljabcacamaqaaiabbmgapjabbohazjabboeadjabb+gavjabb2gatjabbkgaijabb+gavjabcicaoiabdaha2jabcycasiabbygasjabb+gavjabbeha3jabbwgaljabbkhayjabbeeahjabbkhayjabbmgapjabbsgakjabcicaoiabbcfaqjabcicaoiabdaha2jabcycasiabigdaxiabcmcapiabcmcapiabcmcapiabg2da9iab=rha0jab=jhayjab=vha1jab=vgalbaaaeaacqaiwaamaeaacqqgvbwbcqqg0badcqqgobaacqqglbqzcqqgybgccqqg3bwdcqqgpbqacqqgzbwccqqglbqzcqgguaglaagaeiola4iaaczcaiaaxmaadaqadaqaaiabisda0agaayjkaiaawmcaaagaay5eaaaaaa@a633@

we introduced adjv  due to the following reason. first, suppose that three nodes with the same attribute are aligned vertically. we call them vα, vβ, and vγ beginning from the bottom. there are three combo relations among the three nodes: one is between vα and vβ, another between vβ and vγ, and the third between vα and vγ. although vβ is involved in these three combo relations, the combo relation between vα and vγ is not considered in combovβ
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwgvbwbcqwgtbqbcqwgibgycqwgvbwbdawgaawcbagaemoday3aasbaawqaaggaciab=j7aibqabaaaleqaaaaa@36ba@ . therefore, adjv  is needed to correct this type of undercount.

sccb-grid layout algorithm: extension of the search space due to the swap operation
another drawback of cb-grid layout algorithm is that only one node can be moved to a vacant point at each step. for example, the layout shown in figure  <dig> is optimal for cb-grid layout algorithm despite the fact the layout in figure  <dig> should be selected as the better layout. this limitation is due to the strategy of cb-grid layout algorithm. thus, we have devised a new algorithm by allowing the swap operations between two nodes while keeping the time complexity. with this improvement, the layout in figure  <dig> will be arranged as shown in figure  <dig>  the new algorithm is named ccb-grid layout with the swap operation . the layout cost function is the same as in ccb-grid layout algorithm. however, a naïve implementation would increase the time complexity to calculate the layout cost for swapped layouts.

in the previous approach  <cit> , Δ matrix stores cost differences that are induced only by moving nodes to vacant points. as a result, if a grid point of interest was occupied at the previous step, we cannot exploit Δ matrix to calculate cost differences corresponding to that grid point. since grid points of interest on the swap operation are obviously occupied at the previous step, Δ matrix cannot be used. however, if Δ matrix also stores cost differences related to occupied points, Δ matrix can be exploited for this problematic case, too. we then propose an extended Δ matrix, which considers occupied points as well as vacant points. since the definition of the cost differences for vacant points cannot be applied directly to occupied points, we decide to calculate the cost differences for the occupied points by calculating it without taking into account the node occupying that grid point and all edges connected to it. in the remainder of this section, we will show how to calculate the extended Δ matrix and then compare the time complexity of the extended Δ matrix and the original Δ matrix.

henceforth, let us refer to the extended Δ matrix as Δ matrix. given a layout l, at the first step, we update Δ  matrix as follows:

Δvαp={fvα−fvαif p∈wlfvα−fvαif p=p.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqhuoardawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabawccqwgwbacaeqaaogaeiikagiaemitawkaeiykakiaeyypa0zaaiqabeaafaqaaegacaaabagaemoray0aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabgkziukabdchawbqabagccqwgmbatcqggpaqkcqghsislcqwggbgrdawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabaaaleqaaogaeiikagiaemitawkaeiykakcabaacbagae4xaakmae4nzaymaeeiiaaiaemicaanaeyici4saem4vac1aasbaasqaaiabdyeambqabaaakeaacqwggbgrdawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeyokh4qaemicaahabeaakiabdseaenaabaaaleaacqwg2bgddawgaaadbagae83sdcgabeaaasqabagccqwgmbatcqggpaqkcqghsislcqwggbgrdawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabaaaleqaaogaeiikagiaemiraq0aasbaasqaaiabdaha2naabaaameaacqwfzowzaeqaaawcbeaakiabdyeamjabcmcapaqaaiab+lgapjab+zgamjabbccagiabdchawjabg2da9iabdcfaqjabcicaoiabdaha2naabaaaleaacqwfzowzaeqaaogaeiykakiaeiola4caaagaay5eaagaaczcaiaaxmaadaqadaqaaiabiwda1agaayjkaiaawmcaaaaa@8a47@

fvα
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwggbgrdawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabaaaleqaaaaa@3140@ is the following function:

fvα=wee∑ei∈evα,ej∈ecrossei,ej+wne∑ek∈ecrossvα,ek+wdc∑vl∈vdistancevα,vl.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwggbgrdawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabaaaleqaaogaeiikagiaemitawkaeiykakiaeyypa0jaem4vac1aasbaasqaaiabdwgaljabdwgalbqabagcdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwglbqzdawgaaadbagaemyaakgabeaaliabcycasiabdwgalnaabaaameaacqwgqbgaaeqaaawcbeaaaeaacqwglbqzdawgaaadbagaemyaakgabeaaliabgigiolabdweafnaabaaameaacqwg2bgddawgaaqaaiab=f7ahbqabaaabeaaliabcycasiabdwgalnaabaaameaacqwgqbgaaeqaasgaeyici4saemyraueabeqdcqghris5aogaeiikagiaemitawkaeiykakiaey4kasiaem4vac1aasbaasqaaiabd6gaujabdwgalbqabagcdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabcycasiabdwgalnaabaaameaacqwgrbwaaeqaaawcbeaaaeaacqwglbqzdawgaaadbagaem4aasgabeaaliabgigiolabdweafbqab0gaeyyeiuoakiabcicaoiabdyeamjabcmcapiabgucariabdefaxnaabaaaleaacqwgkbazcqwgjbwyaeqaaowaaabuaeaaiegacqgfebarcqgfpbqacqgfzbwccqgf0badcqgfhbqycqgfubgbcqgfjbwycqgflbqzdawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagaemibawgabeaaasqabaaabagaemoday3aasbaawqaaiabdygasbqabawccqghiiizcqwgwbgvaeqaniabgghildgccqggoaakcqwgmbatcqggpaqkcqgguaglcawljagaaczcamaabmaabagaegonaydacagloagaayzkaaaaaa@9ebd@

if the previous layout is updated by moving node vβ to vacant point q, Δ  can be updated efficiently by using Δ  as follows:

Δvαp={Δvβp−Δvβq,if vα=vβ,p∈wtvβ→qlΔvαp+diff <dig> if vα≠vβ,p∈wtvβ→ql\pΔvαp+diff <dig> if vα≠vβ,p=pΔvβp−Δvβq+diff <dig> if vα=vβ,p=pΔvαp+diff3if vα≠vβ,p=pΔvαp+diff <dig> if vα≠vβ,p=q,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqhuoardawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabawccqwgwbacaeqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfyogyaeqaasgaeyokh4qaemycaehabeaakiabdyeamjabcmcapiabg2da9maaceqabaqbaeaabywaaaaabagaeuildq0aasbaasqaaiabdaha2naabaaameaacqwfyogyaeqaasgaemicaahabeaakiabcicaoiabdyeamjabcmcapiabgkhitiabfs5aenaabaaaleaacqwg2bgddawgaaadbagae8nsdigabeaaliabdghaxbqabagccqggoaakcqwgmbatcqggpaqkcqggsaalaeaacqqgpbqacqqgmbgzcqqggaaicqwg2bgddawgaawcbagae8xsdegabeaakiabg2da9iabdaha2naabaaaleaacqwfyogyaeqaaogaeiilawiaemicaanaeyici4saem4vac1aasbaasqaaiabdsfaunaabaaameaacqwg2bgddawgaaqaaiab=j7aibqabagaeyokh4qaemycaehabeaaliabdyeambqabaaakeaadaqadaqaaiabbogajjabbggahjabbohazjabbwgaljabbccagiabigdaxagaayjkaiaawmcaaaqaaiabfs5aenaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabdchawbqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegimaadabeaakiabcycasaqaaiabbmgapjabbagamjabbccagiabdaha2naabaaaleaacqwfxoqyaeqaaogaeyiyikraemoday3aasbaasqaaiab=j7aibqabagccqggsaalcqwgwbaccqghiiizcqwgxbwvdawgaawcbagaemivaq1aasbaawqaaiabdaha2naabaaabagae8nsdigabeaacqghsgircqwgxbqcaeqaasgaemitaweabeaakiabcyfacjabdcfaqjabcicaoiabdaha2naabaaaleaacqwfyogyaeqaaogaeiykakcabawaaewaaeaacqqgjbwycqqghbqycqqgzbwccqqglbqzcqqggaaicqaiyagmaiaawicacaglpaaaaeaacqqhuoardawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqwgwbacaeqaaogaeiikagiaemitawkaeiykakiaey4kasiaemiraqkaemysakkaemoraykaemoray0aasbaasqaaiabigdaxaqabagccqggsaalaeaacqqgpbqacqqgmbgzcqqggaaicqwg2bgddawgaawcbagae8xsdegabeaakiabgcmi5kabdaha2naabaaaleaacqwfyogyaeqaaogaeiilawiaemicaanaeyypa0jaemiuaalaeiikagiaemoday3aasbaasqaaiab=j7aibqabagccqggpaqkaeaadaqadaqaaiabbogajjabbggahjabbohazjabbwgaljabbccagiabiodazagaayjkaiaawmcaaaqaaiabfs5aenaabaaaleaacqwg2bgddawgaaadbagae8nsdigabeaaliabdchawbqabagccqggoaakcqwgmbatcqggpaqkcqghsislcqqhuoardawgaawcbagaemoday3aasbaawqaaiab=j7aibqabawccqwgxbqcaeqaaogaeiikagiaemitawkaeiykakiaey4kasiaemiraqkaemysakkaemoraykaemoray0aasbaasqaaiabikdayaqabagccqggsaalaeaacqqgpbqacqqgmbgzcqqggaaicqwg2bgddawgaawcbagae8xsdegabeaakiabg2da9iabdaha2naabaaaleaacqwfyogyaeqaaogaeiilawiaemicaanaeyypa0jaemiuaalaeiikagiaemoday3aasbaasqaaiab=n7anbqabagccqggpaqkaeaadaqadaqaaiabbogajjabbggahjabbohazjabbwgaljabbccagiabisda0agaayjkaiaawmcaaaqaaiabfs5aenaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabdchawbqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaeg4mamdabeaaaoqaaiabbmgapjabbagamjabbccagiabdaha2naabaaaleaacqwfxoqyaeqaaogaeyiyikraemoday3aasbaasqaaiab=j7aibqabagccqggsaalcqwgwbaccqgh9aqpcqwgqbaucqggoaakcqwg2bgddawgaawcbagae83sdcgabeaakiabcmcapaqaamaabmaabagaee4yammaeeyyaemaee4camnaeeyzaumaeeiiaaiaegynaudacagloagaayzkaaaabagaeuildq0aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaemicaahabeaakiabcicaoiabdyeamjabcmcapiabgucariabdseaejabdmeajjabdaeagjabdaeagnaabaaaleaacqai0aanaeqaaogaeiilawcabagaeeyaakmaeeozaymaeeiiaaiaemoday3aasbaasqaaiab=f7ahbqabagccqghgjsucqwg2bgddawgaawcbagae8nsdigabeaakiabcycasiabdchawjabg2da9iabdghaxbqaamaabmaabagaee4yammaeeyyaemaee4camnaeeyzaumaeeiiaaiaegonaydacagloagaayzkaagaeiilawcaaagaay5eaagaaczcaiaaxmaadaqadaqaaiabieda3agaayjkaiaawmcaaaaa@71b8@

where diff <dig> to diff <dig> are defined in the following way:

diff0=qvα,vβ−qvα,vβ−qvα,vβ+qvα,vβ     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegimaadabeaakiabg2da9iabdgfarnaabaaaleaacqwg2bgddawgaaadbaaccigae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogyaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabgkziukabdchawbqabagccqwgubavdawgaawcbagaemoday3aasbaawqaaiab=j7aibqabawccqghsgircqwgxbqcaeqaaogaemitawkaeiykakiaeyoei0iaemyuae1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7aibqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfyogyaeqaasgaeyokh4qaemycaehabeaakiabdyeamjabcmcapiabgkhitiabdgfarnaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogyaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabgkziukabdchawbqabagccqwgmbatcqggpaqkcqghrawkcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdigabeaaasqabagccqggoaakcqwgmbatcqggpaqkcawljagaaczcamaabmaabagaegioagdacagloagaayzkaaaaaa@8867@

diff1=qvα,vβ−qvα,vβ     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegymaedabeaakiabg2da9iabdgfarnaabaaaleaacqwg2bgddawgaaadbaaccigae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogyaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabgkziukabdchawbqabagccqwgubavdawgaawcbagaemoday3aasbaawqaaiab=j7aibqabawccqghsgircqwgxbqcaeqaaogaemitawkaeiykakiaeyoei0iaemyuae1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7aibqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfyogyaeqaasgaeyokh4qaemycaehabeaakiabdyeamjabcmcapiaaxmaacawljawaaewaaeaacqai5aqoaiaawicacaglpaaaaaa@6750@

diff2=qvβ,vγ−qvβ,vγ     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegomaidabeaakiabg2da9iabdgfarnaabaaaleaacqwg2bgddawgaaadbaaccigae8nsdigabeaaliabcycasiabdaha2naabaaameaacqwfzowzaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8nsdigabeaaliabgkziukabdghaxbqabagccqwgmbatcqggpaqkcqghsislcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=j7aibqabawccqggsaalcqwg2bgddawgaaadbagae83sdcgabeaaasqabagccqggoaakcqwgmbatcqggpaqkcawljagaaczcamaabmaabagaegymaejaegimaadacagloagaayzkaaaaaa@5834@

diff3=qvα,vβ−qvα,vβ−qvα,vβ+qvα,vβ     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaeg4mamdabeaakiabg2da9iabdgfarnaabaaaleaacqwg2bgddawgaaadbaaccigae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogyaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabgkziukabdchawbqabagccqwgubavdawgaawcbagaemoday3aasbaawqaaiab=j7aibqabawccqghsgircqwgxbqcaeqaaogaemiraq0aasbaasqaaiabdaha2naabaaameaacqwfzowzaeqaaawcbeaakiabdyeamjabcmcapiabgkhitiabdgfarnaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogyaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8nsdigabeaaliabgkziukabdghaxbqabagccqwgebardawgaawcbagaemoday3aasbaawqaaiab=n7anbqabaaaleqaaogaemitawkaeiykakiaeyoei0iaemyuae1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7aibqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeyokh4qaemicaahabeaakiabdseaenaabaaaleaacqwg2bgddawgaaadbagae83sdcgabeaaasqabagccqwgmbatcqggpaqkcqghrawkcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdigabeaaasqabagccqggoaakcqwgebardawgaawcbagaemoday3aasbaawqaaiab=n7anbqabaaaleqaaogaemitawkaeiykakiaaczcaiaaxmaadaqadaqaaiabigdaxiabigdaxagaayjkaiaawmcaaaaa@9ba7@

diff4=−qvα,vβ+qvα,vβ,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaeginaqdabeaakiabg2da9iabgkhitiabdgfarnaabaaaleaacqwg2bgddawgaaadbaaccigae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogyaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabgkziukabdchawbqabagccqwgmbatcqggpaqkcqghrawkcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdigabeaaasqabagccqggoaakcqwgmbatcqggpaqkcqggsaalcawljagaaczcamaabmaabagaegymaejaegomaidacagloagaayzkaaaaaa@59ea@

where q shall be defined below.

if the previous layout is updated by swapping two nodes vβ1
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8nsdi2aasbaawqaaiabigdaxaqabaaaleqaaaaa@311d@ and vβ2
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8nsdi2aasbaawqaaiabikdayaqabaaaleqaaaaa@311f@, Δ  is then updated efficiently by using Δ  as follows:

Δvαp={Δvβ1p−Δvβ1p+diff <dig> if vα=vβ <dig> p∈wlΔvαp+diff <dig> if vα≠vβ <dig> p∈wl\{p,p}Δvβ1p−Δvβ1p+diff <dig> if vα=vβ <dig> p=pΔvαp+diff <dig> if vα≠vβ <dig> vα≠vβ <dig> p=pΔvαp+diff <dig> if vα≠vβ <dig> vα≠vβ <dig> p=p,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqhuoardawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabawccqwgwbacaeqaaogaeiikagiaem4uam1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabgszirkabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgmbatcqggpaqkcqgh9aqpdagabeqaauaabaqafmaaaaqaaiabfs5aenaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqwgwbacaeqaaogaeiikagiaemitawkaeiykakiaeyoei0iaeuildq0aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabdcfaqjabcicaoiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaliabcmcapaqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegynaudabeaakiabcycasaqaaiabbmgapjabbagamjabbccagiabdaha2naabaaaleaacqwfxoqyaeqaaogaeyypa0jaemoday3aasbaasqaaiab=j7ainaabaaameaacqaixaqmaeqaaawcbeaakiabcycasiabdchawjabgigiolabdefaxnaabaaaleaacqwgmbataeqaaagcbawaaewaaeaacqqgjbwycqqghbqycqqgzbwccqqglbqzcqqggaaicqaixaqmaiaawicacaglpaaaaeaacqqhuoardawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqwgwbacaeqaaogaeiikagiaemitawkaeiykakiaey4kasiaemiraqkaemysakkaemoraykaemoray0aasbaasqaaiabiada2aqabagccqggsaalaeaacqqgpbqacqqgmbgzcqqggaaicqwg2bgddawgaawcbagae8xsdegabeaakiabgcmi5kabdaha2naabaaaleaacqwfyogydawgaaadbagaegymaedabeaaasqabagccqggsaalcqwgwbaccqghiiizcqwgxbwvdawgaawcbagaemitaweabeaakiabcyfacjabcuha7jabdcfaqjabcicaoiabdaha2naabaaaleaacqwfyogydawgaaadbagaegymaedabeaaasqabagccqggpaqkcqggsaalcqwgqbaucqggoaakcqwg2bgddawgaawcbagae8nsdi2aasbaawqaaiabikdayaqabaaaleqaaogaeiykakiaeiyfa0habawaaewaaeaacqqgjbwycqqghbqycqqgzbwccqqglbqzcqqggaaicqaiyagmaiaawicacaglpaaaaeaacqqhuoardawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaemicaahabeaakiabcicaoiabdyeamjabcmcapiabgkhitiabfs5aenaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqwgqbaucqggoaakcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabawccqggpaqkaeqaaogaeiikagiaemitawkaeiykakiaey4kasiaemiraqkaemysakkaemoraykaemoray0aasbaasqaaiabieda3aqabagccqggsaalaeaacqqgpbqacqqgmbgzcqqggaaicqwg2bgddawgaawcbagae8xsdegabeaakiabg2da9iabdaha2naabaaaleaacqwfyogydawgaaadbagaegymaedabeaaasqabagccqggsaalcqwgwbaccqgh9aqpcqwgqbaucqggoaakcqwg2bgddawgaawcbagae83sdcgabeaakiabcmcapaqaamaabmaabagaee4yammaeeyyaemaee4camnaeeyzaumaeeiiaaiaeg4mamdacagloagaayzkaaaabagaeuildq0aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaemicaahabeaakiabcicaoiabdyeamjabcmcapiabgucariabdseaejabdmeajjabdaeagjabdaeagnaabaaaleaacqai4aaoaeqaaogaeiilawcabagaeeyaakmaeeozaymaeeiiaaiaemoday3aasbaasqaaiab=f7ahbqabagccqghgjsucqwg2bgddawgaawcbagae8nsdi2aasbaawqaaiabigdaxaqabaaaleqaaogaeiilawiaemoday3aasbaasqaaiab=f7ahbqabagccqghgjsucqwg2bgddawgaawcbagae8nsdi2aasbaawqaaiabikdayaqabaaaleqaaogaeiilawiaemicaanaeyypa0jaemiuaalaeiikagiaemoday3aasbaasqaaiab=n7anbqabagccqggpaqkaeaadaqadaqaaiabbogajjabbggahjabbohazjabbwgaljabbccagiabisda0agaayjkaiaawmcaaaqaaiabfs5aenaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabdchawbqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegyoakdabeaakiabcycasaqaaiabbmgapjabbagamjabbccagiabdaha2naabaaaleaacqwfxoqyaeqaaogaeyiyikraemoday3aasbaasqaaiab=j7ainaabaaameaacqaixaqmaeqaaawcbeaakiabcycasiabdaha2naabaaaleaacqwfxoqyaeqaaogaeyiyikraemoday3aasbaasqaaiab=j7ainaabaaameaacqaiyagmaeqaaawcbeaakiabcycasiabdchawjabg2da9iabdcfaqjabcicaoiabdaha2naabaaaleaacqwfyogydawgaaadbaacbigae4nmaidabeaaasqabagccqggpaqkaeaadaqadaqaaiabbogajjabbggahjabbohazjabbwgaljabbccagiabbwda1agaayjkaiaawmcaaiabcycasaaaaiaawuhaaiaaxmaacawljawaaewaaeaacqaixaqmcqaizawmaiaawicacaglpaaaaaa@7c80@

where diff <dig> to diff <dig> are defined in the following way:

diff5=qvβ <dig> vβ2−qvβ <dig> vβ2−qvβ <dig> vβ2+qvβ <dig> vβ2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegynaudabeaakiabg2da9iabdgfarnaabaaaleaacqwg2bgddawgaaadbaaccigae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabgkziukabdchawbqabagccqwgtbwudawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeyilhsqaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaaawcbeaakiabdyeamjabcmcapiabgkhitiabdgfarnaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaeiikagiaem4uam1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabgszirkabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgmbatcqggpaqkcqghsislcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqghsgircqwgwbacaeqaaogaemitawkaeiykakiaey4kasiaemyuae1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabcycasiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqggoaakcqwgmbatcqggpaqkcawljagaaczcamaabmaabagaegymaejaeginaqdacagloagaayzkaaaaaa@9c13@

diff6=q^vα,vβ <dig> vβ2−q^vα,vβ <dig> vβ2−q^vα,vβ <dig> vβ2+q^vα,vβ <dig> vβ2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqwgjbqscqwggbgrcqwggbgrdawgaawcbagaegonaydabeaakiabg2da9iqbdgfarzaajawaasbaasqaaiabdaha2naabaaameaaiigacqwfxoqyaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabgkziukabdchawbqabagccqwgtbwudawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeyilhsqaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaaawcbeaakiabdyeamjabcmcapiabgkhitiqbdgfarzaajawaasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdofatnaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqghugyqcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaemitawkaeiykakiaeyoei0iafmyuaelbakaadawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeyokh4qaemicaahabeaakiabdyeamjabcmcapiabgucariqbdgfarzaajawaasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdyeamjabcmcapiaaxmaacawljawaaewaaeaacqaixaqmcqai1aqnaiaawicacaglpaaaaaa@aacf@

diff7=qvβ <dig> vβ2−qvβ <dig> vβ2−qvβ <dig> vβ2+qvβ <dig> vβ2+qvβ <dig> vγdvβ2l)−qvβ <dig> vγ     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaegadaaabagaemiraqkaemysakkaemoraykaemoray0aasbaasqaaiabieda3aqabaaakeaacqgh9aqpaeaacqwgrbqudawgaawcbagaemoday3aasbaawqaaggaciab=j7ainaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqghsgircqwgwbacaeqaaogaem4uam1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabgszirkabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgebardawgaawcbagaemoday3aasbaawqaaiab=n7anbqabaaaleqaaogaemitawkaeiykakiaeyoei0iaemyuae1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabcycasiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqggoaakcqwgubavdawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeyokh4qaemicaahabeaakiabdseaenaabaaaleaacqwg2bgddawgaaadbagae83sdcgabeaaasqabagccqwgmbatcqggpaqkcqghsislcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdofatnaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqghugyqcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaemiraq0aasbaasqaaiabdaha2naabaaameaacqwfzowzaeqaaawcbeaakiabdyeamjabcmcapaqaaaqaaiabgucaraqaaiabdgfarnaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaeiikagiaemiraq0aasbaasqaaiabdaha2naabaaameaacqwfzowzaeqaaawcbeaakiabdyeamjabcmcapiabgucariabdgfarnaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae83sdcgabeaaasqabagccqggoaakcqwgubavdawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaasgaeyokh4qaemiuaalaeiikagiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaasgaeiykakcabeaakiabdseaenaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaemitawkaeiykakiaeyoei0iaemyuae1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabcycasiabdaha2naabaaameaacqwfzowzaeqaaawcbeaakiabcicaoiabdseaenaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaemitawkaeiykakcaaiaaxmaacawljawaaewaaeaacqaixaqmcqai2agnaiaawicacaglpaaaaaa@e3fb@

diff8=q^vα,vβ <dig> vβ2−q^vα,vβ <dig> vβ2−q^vα,vβ <dig> vβ2+q^vα,vβ <dig> vβ2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaegadaaabagaemiraqkaemysakkaemoraykaemoray0aasbaasqaaiabiida4aqabaaakeaacqgh9aqpaeaacuwgrbqugaqcamaabaaaleaacqwg2bgddawgaaadbaaccigae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabcycasiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqggoaakcqwgubavdawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqghsgircqwgwbacaeqaaogaem4uam1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabgszirkabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgebardawgaawcbagaemoday3aasbaawqaaiab=n7anbqabaaaleqaaogaemitawkaeiykakiaeyoei0iafmyuaelbakaadawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaeiikagiaem4uam1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabgszirkabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgebardawgaawcbagaemoday3aasbaawqaaiab=n7anbqabaaaleqaaogaemitawkaeiykakiaeyoei0iafmyuaelbakaadawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeyokh4qaemicaahabeaakiabdseaenaabaaaleaacqwg2bgddawgaaadbagae83sdcgabeaaasqabagccqwgmbatcqggpaqkaeaaaeaacqghrawkaeaacuwgrbqugaqcamaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabcycasiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqggoaakcqwgebardawgaawcbagaemoday3aasbaawqaaiab=n7anbqabaaaleqaaogaemitawkaeiykakcaaiaaxmaacawljawaaewaaeaacqaixaqmcqai3awnaiaawicacaglpaaaaaa@bd41@

diff9=qvα,vβ2tvβ2→pdvβ1l)−qvα,vβ2dvβ1l)−qvα,vβ1dvβ2l)+qvα,vβ <dig>      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaegadaaabagaemiraqkaemysakkaemoraykaemoray0aasbaasqaaiabimda5aqabaaakeaacqgh9aqpaeaacqwgrbqudawgaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaaieaacqgfyagmaeqaaaqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfxoqyaeqaasgaeyokh4qaemiuaalaeiikagiaemoday3aasbaawqaaiab=j7ainaabaaabagaegomaidabeaaaeqaasgaeiykakcabeaakiabdsfaunaabaaaleaacqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabawccqghsgircqwgqbaucqggoaakcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaixaqmaeqaaaqabawccqggpaqkaeqaaogaemiraq0aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaasqabagccqwgmbatcqggpaqkcqghsislcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqgfyagmaeqaaaqabaaaleqaaogaeiikagiaemivaq1aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaliabgkziukabdcfaqjabcicaoiabdaha2naabaaameaacqwfyogydawgaaqaaiabigdaxaqabaaabeaaliabcmcapaqabagccqwgebardawgaawcbagaemoday3aasbaawqaaiab=j7ainaabaaabagaegymaedabeaaaeqaaawcbeaakiabdyeamjabcmcapaqaaaqaaiabgkhitaqaaiabdgfarnaabaaaleaacqwg2bgddawgaaadbagae8xsdegabeaaliabcycasiabdaha2naabaaameaacqwfyogydawgaaqaaiab+fdaxaqabaaabeaaasqabagccqggoaakcqwgubavdawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqghsgircqwgqbaucqggoaakcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqaiyagmaeqaaaqabawccqggpaqkaeqaaogaemiraq0aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgmbatcqggpaqkcqghrawkcqwgrbqudawgaawcbagaemoday3aasbaawqaaiab=f7ahbqabawccqggsaalcqwg2bgddawgaaadbagae8nsdi2aasbaaeaacqgfxaqmaeqaaaqabaaaleqaaogaeiikagiaemiraq0aasbaasqaaiabdaha2naabaaameaacqwfyogydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgmbatcqggpaqkcqgguaglaagaaczcaiaaxmaadaqadaqaaiabigdaxiabiida4agaayjkaiaawmcaaaaa@be66@

the case of vα = vβ2
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8nsdi2aasbaawqaaiabikdayaqabaaaleqaaaaa@311f@ is not considered in equation  because equations of this case can be obtained by simply replacing vβ1
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8nsdi2aasbaawqaaiabigdaxaqabaaaleqaaaaa@311d@ with vβ2
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8nsdi2aasbaawqaaiabikdayaqabaaaleqaaaaa@311f@ in case  <dig> and  <dig> 

qva,vb
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqabaaaaa@34d5@  and q^va,vb,vc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaabaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleqaaaaa@38c1@  in diff <dig> to diff <dig> are partial cost functions depending on the two nodes va and vb and the three nodes va, vb, and vc, respectively, they are the sums of the corresponding partial edge-edge crossing costs, node-edge crossing costs and distance costs as follows:

qva,vb=wvqva,vbdc+weeqva,vbee+wveqva,vbve     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqabagccqggoaakcqwgmbatcqggpaqkcqgh9aqpcqwgxbwvdawgaawcbagaemodayhabeaakiabdgfarnaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaaawcbagaemizaqmaem4yamgaaogaeiikagiaemitawkaeiykakiaey4kasiaem4vac1aasbaasqaaiabdwgaljabdwgalbqabagccqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabdwgaljabdwgalbaakiabcicaoiabdyeamjabcmcapiabgucariabdefaxnaabaaaleaacqwg2bgdcqwglbqzaeqaaogaemyuae1aa0baasqaaiabdaha2naabaaameaacqwghbqyaeqaasgaeiilawiaemoday3aasbaawqaaiabdkgaibqabaaaleaacqwg2bgdcqwglbqzaagccqggoaakcqwgmbatcqggpaqkcawljagaaczcamaabmaabagaegymaejaegyoakdacagloagaayzkaaaaaa@7386@

q^va,vb,vc=wvq^va,vb,vcdc+weeq^va,vb,vcee+wveq^va,vb,vcve,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaabaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleqaaogaeiikagiaemitawkaeiykakiaeyypa0jaem4vac1aasbaasqaaiabdaha2bqabagccuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwgkbazcqwgjbwyaagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgxbwvdawgaawcbagaemyzaumaemyzaugabeaakiqbdgfarzaajawaa0baasqaaiabdaha2naabaaameaacqwghbqyaeqaasgaeiilawiaemoday3aasbaawqaaiabdkgaibqabawccqggsaalcqwg2bgddawgaaadbagaem4yamgabeaaasqaaiabdwgaljabdwgalbaakiabcicaoiabdyeamjabcmcapiabgucariabdefaxnaabaaaleaacqwg2bgdcqwglbqzaeqaaogafmyuaelbakaadaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaliabcycasiabdaha2naabaaameaacqwgjbwyaeqaaawcbagaemodaynaemyzaugaaogaeiikagiaemitawkaeiykakiaeiilawiaaczcaiaaxmaadaqadaqaaiabikdayiabicdawagaayjkaiaawmcaaaaa@8406@

where qva,vbee
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabdwgaljabdwgalbaaaaa@377c@  and q^va,vb,vcee
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwglbqzcqwglbqzaaaaaa@3b68@  are related to edge-edge crossings, while qva,vbne
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabd6gaujabdwgalbaaaaa@378e@  and q^va,vb,vcne
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwgubgbcqwglbqzaaaaaa@3b7a@  are related to node-edge crossings, and qva,vbdc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabdsgakjabdogajbaaaaa@3776@  and q^va,vb,vcdc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwgkbazcqwgjbwyaaaaaa@3b62@  are related to the distance cost. the details are described as below.

 qva,vbee
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabdwgaljabdwgalbaaaaa@377c@  is a partial edge-edge crossing cost function of eva
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdggahbqabaaaleqaaaaa@30e3@ and evb
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdkgaibqabaaaleqaaaaa@30e5@, and is defined as follows:

qva,vbee={∑eva∈eva,evb∈evbcrosseva,evbif ∉e∑eva∈eva,evb∈evbcrosseva,evb+∑e∈ecrosse,if ∈e.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabdwgaljabdwgalbaakiabcicaoiabdyeamjabcmcapiabg2da9maaceqabaqbaeaabigaaaqaamaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdggahbqabaaabeaaliabcycasiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdkgaibqabaaabeaaasqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdggahbqabaaabeaaliabgigiolabdweafnaabaaameaacqwg2bgddawgaaqaaiabdggahbqabaaabeaaliabcycasiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdkgaibqabaaabeaaliabgigiolabdweafnaabaaameaacqwg2bgddawgaaqaaiabdkgaibqabaaabeaaasqab0gaeyyeiuoaaoqaaiabbmgapjabbagamjabbccagiabcicaoiabdaha2naabaaaleaacqwghbqyaeqaaogaeiilawiaemoday3aasbaasqaaiabdkgaibqabagccqggpaqkcqghjiyzcqwgfbqraeaadaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaaogaeiikagiaemitawkaeiykakcaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaniabgghildgccqghrawkdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwglbqzcqggsaalcqggoaakcqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiykakcabeaakiabcicaoiabdyeamjabcmcapawcbagaemyzaumaeyici4saemyraueabeqdcqghris5aagcbagaeeyaakmaeeozaymaeeiiaaiaeiikagiaemoday3aasbaasqaaiabdggahbqabagccqggsaalcqwg2bgddawgaawcbagaemoyaigabeaakiabcmcapiabgigiolabdweafbaaaiaawuhaaiabc6cauiaaxmaacawljawaaewaaeaacqaiyagmcqaixaqmaiaawicacaglpaaaaaa@d046@

similarly, q^va,vb,vcee
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwglbqzcqwglbqzaaaaaa@3b68@  is a partial edge-edge crossing cost function of eva
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdggahbqabaaaleqaaaaa@30e3@, evb
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdkgaibqabaaaleqaaaaa@30e5@, and evc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdogajbqabaaaleqaaaaa@30e7@, and is defined as follows:

q^va,vb,vcee={∑eva∈eva,evb∈evbcrosseva,evb+∑eva∈eva,evc∈evccrosseva,evc if ∉e,∉eq^ee+∑e∈e\evccrosse,if ∈e,∉eq^ee+∑e∈e\evbcrosse,if ∉e,∈eq^ee+∑e∈e\evccrosse,+∑e∈e\evbcrosse,if ∈e,∈e.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwglbqzcqwglbqzaagccqggoaakcqwgmbatcqggpaqkcqgh9aqpdagabeqaauaabaqaeiaaaaqaauaabeqaceaaaeaadaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaaogaeiikagiaemitawkaeiykakcaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaniabgghildaakeaacqghrawkdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgjbwyaeqaaaqabaaaleqaaogaeiikagiaemitawkaeiykakcaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgjbwyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgjbwyaeqaaaqabaaaleqaniabgghildaaaogaeeiiaaiaeiikagiaeyypa0jafmyuaelbakaadaahaawcbeqaaiabdwgaljabdwgalbaakiabcmcapaqaaiabbmgapjabbagamjabbccaguaabeqaceaaaeaacqggoaakcqwg2bgddawgaawcbagaemyyaegabeaakiabcycasiabdaha2naabaaaleaacqwgibgyaeqaaogaeiykakiaeyyci8saemyraukaeiilawcabagaeiikagiaemoday3aasbaasqaaiabdggahbqabagccqggsaalcqwg2bgddawgaawcbagaem4yamgabeaakiabcmcapiabgmgiplabdweafbaaaeaacuwgrbqugaqcamaacaaaleqabagaemyzaumaemyzaugaaogaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemyzaumaeiilawiaeiikagiaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaliabcmcapaqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdwgaljabgigiolabdweafjabcyfacjabdweafnaabaaameaacqwg2bgddawgaaqaaiabdogajbqabaaabeaaasqab0gaeyyeiuoaaoqaaiabbmgapjabbagamjabbccaguaabeqaceaaaeaacqggoaakcqwg2bgddawgaawcbagaemyyaegabeaakiabcycasiabdaha2naabaaaleaacqwgibgyaeqaaogaeiykakiaeyici4saemyraukaeiilawcabagaeiikagiaemoday3aasbaasqaaiabdggahbqabagccqggsaalcqwg2bgddawgaawcbagaem4yamgabeaakiabcmcapiabgmgiplabdweafbaaaeaacuwgrbqugaqcamaacaaaleqabagaemyzaumaemyzaugaaogaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemyzaumaeiilawiaeiikagiaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaem4yamgabeaaliabcmcapaqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdwgaljabgigiolabdweafjabcyfacjabdweafnaabaaameaacqwg2bgddawgaaqaaiabdkgaibqabaaabeaaasqab0gaeyyeiuoaaoqaaiabbmgapjabbagamjabbccaguaabeqaceaaaeaacqggoaakcqwg2bgddawgaawcbagaemyyaegabeaakiabcycasiabdaha2naabaaaleaacqwgibgyaeqaaogaeiykakiaeyyci8saemyraukaeiilawcabagaeiikagiaemoday3aasbaasqaaiabdggahbqabagccqggsaalcqwg2bgddawgaawcbagaem4yamgabeaakiabcmcapiabgigiolabdweafbaaaeaacuwgrbqugaqcamaacaaaleqabagaemyzaumaemyzaugaaogaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemyzaumaeiilawiaeiikagiaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaliabcmcapaqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdwgaljabgigiolabdweafjabcyfacjabdweafnaabaaameaacqwg2bgddawgaaqaaiabdogajbqabaaabeaaasqab0gaeyyeiuoakiabgucarmaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdwgaljabcycasiabcicaoiabdaha2naabaaameaacqwghbqyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabawccqggpaqkaeqaaogaeiikagiaemitawkaeiykakcaleaacqwglbqzcqghiiizcqwgfbqrcqggcbaxcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaniabgghildaakeaacqqgpbqacqqgmbgzcqqggaaifaqabegabaaabagaeiikagiaemoday3aasbaasqaaiabdggahbqabagccqggsaalcqwg2bgddawgaawcbagaemoyaigabeaakiabcmcapiabgigiolabdweafjabcycasaqaaiabcicaoiabdaha2naabaaaleaacqwghbqyaeqaaogaeiilawiaemoday3aasbaasqaaiabdogajbqabagccqggpaqkcqghiiizcqwgfbqraaaaaagaay5eaagaeiola4iaaczcaiaaxmaadaqadaqaaiabikdayiabikdayagaayjkaiaawmcaaaaa@9e6e@

 qva,vbne
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabd6gaujabdwgalbaaaaa@378e@ is a partial node-edge crossing cost function of va, vb, eva
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdggahbqabaaaleqaaaaa@30e3@, and evb
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdkgaibqabaaaleqaaaaa@30e5@, and is defined as follows:

qva,vbne={∑eva∈evacrossvb,eva+∑evb∈evbcrossva,evbif ∉eqne+∑v∈vcrossv,if ∈e     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabd6gaujabdwgalbaakiabcicaoiabdyeamjabcmcapiabg2da9maaceqabaqbaeaabiwaaaqaamaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemyzau2aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaaawcbeaakiabcicaoiabdyeamjabcmcapawcbagaemyzau2aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaasgaeyici4saemyrau0aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaaawcbeqdcqghris5aogaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaaogaeiikagiaemitawkaeiykakcaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaniabgghildaakeaacqggoaakcqgh9aqpcqwgrbqudaahaawcbeqaaiabd6gaujabdwgalbaakiabcmcapaqaaiabbmgapjabbagamjabbccagiabcicaoiabdaha2naabaaaleaacqwghbqyaeqaaogaeiilawiaemoday3aasbaasqaaiabdkgaibqabagccqggpaqkcqghjiyzcqwgfbqraeaacqwgrbqudaahaawcbeqaaiabd6gaujabdwgalbaakiabgucarmaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdaha2jabcycasiabcicaoiabdaha2naabaaameaacqwghbqyaeqaasgaeiilawiaemoday3aasbaawqaaiabdkgaibqabawccqggpaqkaeqaaogaeiikagiaemitawkaeiykakcaleaacqwg2bgdcqghiiizcqwgwbgvaeqaniabgghildaakeaaaeaacqqgpbqacqqgmbgzcqqggaaicqggoaakcqwg2bgddawgaawcbagaemyyaegabeaakiabcycasiabdaha2naabaaaleaacqwgibgyaeqaaogaeiykakiaeyici4saemyraueaaagaay5eaagaaczcaiaaxmaadaqadaqaaiabikdayiabiodazagaayjkaiaawmcaaaaa@c2cb@

similarly, q^va,vb,vcne
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwgubgbcqwglbqzaaaaaa@3b7a@  is a partial node-edge crossing cost function of va, vb, vc, eva
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdggahbqabaaaleqaaaaa@30e3@, evb
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdkgaibqabaaaleqaaaaa@30e5@, and evc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaiabdogajbqabaaaleqaaaaa@30e7@, and is defined as follows:

q^va,vb,vcne={∑eva∈evacrossvb,eva+∑eva∈evacrossvc,eva+∑evb∈evbcrossva,evb+∑evc∈evccrossva,evc if ∉e,∉eq^ne+∑v∈v\vccrossv,if ∈e,∉eq^ne+∑v∈v\vbcrossv,if ∉e,∈eq^ne+∑v∈v\vccrossv,+∑v∈v\vbcrossv,if ∈e,∈e.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwgubgbcqwglbqzaagccqggoaakcqwgmbatcqggpaqkcqgh9aqpdagabeqaauaabaqaeiaaaaqaauaabeqaceaaaeaadaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwg2bgddawgaaadbagaemoyaigabeaaliabcycasiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdggahbqabaaabeaaasqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdggahbqabaaabeaaliabgigiolabdweafnaabaaameaacqwg2bgddawgaaqaaiabdggahbqabaaabeaaasqab0gaeyyeiuoakiabgucarmaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdaha2naabaaameaacqwgjbwyaeqaasgaeiilawiaemyzau2aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaaawcbeaakiabcicaoiabdyeamjabcmcapawcbagaemyzau2aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaasgaeyici4saemyrau0aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaaawcbeqdcqghris5aagcbagaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaaogaeiikagiaemitawkaeiykakcaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaniabgghildgccqghrawkdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdogajbqabaaabeaaasqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdogajbqabaaabeaaliabgigiolabdweafnaabaaameaacqwg2bgddawgaaqaaiabdogajbqabaaabeaaasqab0gaeyyeiuoaaagccqqggaaicqggoaakcqgh9aqpcuwgrbqugaqcamaacaaaleqabagaemoba4maemyzaugaaogaeiykakcabagaeeyaakmaeeozaymaeeiiaasbaeqabiqaaaqaaiabcicaoiabdaha2naabaaaleaacqwghbqyaeqaaogaeiilawiaemoday3aasbaasqaaiabdkgaibqabagccqggpaqkcqghjiyzcqwgfbqrcqggsaalaeaacqggoaakcqwg2bgddawgaawcbagaemyyaegabeaakiabcycasiabdaha2naabaaaleaacqwgjbwyaeqaaogaeiykakiaeyyci8saemyraueaaaqaaiqbdgfarzaajawaawbaasqabeaacqwgubgbcqwglbqzaagccqghrawkdaaeqbqaaiabdoeadjabdkhayjabd+gavjabdohazjabdohaznaabaaaleaacqwg2bgdcqggsaalcqggoaakcqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiykakcabeaakiabcicaoiabdyeamjabcmcapawcbagaemodaynaeyici4saemovaylaeiixawlaemoday3aasbaawqaaiabdogajbqabaaaleqaniabgghildaakeaacqqgpbqacqqgmbgzcqqggaaifaqabegabaaabagaeiikagiaemoday3aasbaasqaaiabdggahbqabagccqggsaalcqwg2bgddawgaawcbagaemoyaigabeaakiabcmcapiabgigiolabdweafjabcycasaqaaiabcicaoiabdaha2naabaaaleaacqwghbqyaeqaaogaeiilawiaemoday3aasbaasqaaiabdogajbqabagccqggpaqkcqghjiyzcqwgfbqraaaabagafmyuaelbakaadaahaawcbeqaaiabd6gaujabdwgalbaakiabgucarmaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdaha2jabcycasiabcicaoiabdaha2naabaaameaacqwghbqyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabawccqggpaqkaeqaaogaeiikagiaemitawkaeiykakcaleaacqwg2bgdcqghiiizcqwgwbgvcqggcbaxcqwg2bgddawgaaadbagaemoyaigabeaaasqab0gaeyyeiuoaaoqaaiabbmgapjabbagamjabbccaguaabeqaceaaaeaacqggoaakcqwg2bgddawgaawcbagaemyyaegabeaakiabcycasiabdaha2naabaaaleaacqwgibgyaeqaaogaeiykakiaeyyci8saemyraukaeiilawcabagaeiikagiaemoday3aasbaasqaaiabdggahbqabagccqggsaalcqwg2bgddawgaawcbagaem4yamgabeaakiabcmcapiabgigiolabdweafbaaaeaacuwgrbqugaqcamaacaaaleqabagaemoba4maemyzaugaaogaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemodaynaeiilawiaeiikagiaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaliabcmcapaqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdaha2jabgigiolabdafawjabcyfacjabdaha2naabaaameaacqwgjbwyaeqaaawcbeqdcqghris5aogaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemodaynaeiilawiaeiikagiaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaem4yamgabeaaliabcmcapaqabagccqggoaakcqwgmbatcqggpaqkasqaaiabdaha2jabgigiolabdafawjabcyfacjabdaha2naabaaameaacqwgibgyaeqaaawcbeqdcqghris5aagcbagaeeyaakmaeeozaymaeeiiaasbaeqabiqaaaqaaiabcicaoiabdaha2naabaaaleaacqwghbqyaeqaaogaeiilawiaemoday3aasbaasqaaiabdkgaibqabagccqggpaqkcqghiiizcqwgfbqrcqggsaalaeaacqggoaakcqwg2bgddawgaawcbagaemyyaegabeaakiabcycasiabdaha2naabaaaleaacqwgjbwyaeqaaogaeiykakiaeyici4saemyraueaaaaaaiaawuhaaiabc6cauiaaxmaacawljawaaewaaeaacqaiyagmcqai0aanaiaawicacaglpaaaaaa@c12c@

 qva,vbdc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabdsgakjabdogajbaaaaa@3776@ is a partial distance cost function of va and vb, and is defined as follows:

qva,vbdc=distanceva,vb.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqudaqhaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqaaiabdsgakjabdogajbaakiabcicaoiabdyeamjabcmcapiabg2da9iabdseaejabdmgapjabdohazhqaciab=rha0jab=fgahjab=5gaujabdogajjabdwgalnaabaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaaawcbeaakiabcicaoiabdyeamjabcmcapiabc6cauiaaxmaacawljawaaewaaeaacqaiyagmcqai1aqnaiaawicacaglpaaaaaa@556c@

similarly, q^va,vb,vcdc
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwgkbazcqwgjbwyaaaaaa@3b62@  is a partial distance cost function of va, vb, and vc, and is defined as follows:

q^va,vb,vcdc=distanceva,vb+distanceva,vc.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcamaadaaaleaacqwg2bgddawgaaadbagaemyyaegabeaaliabcycasiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemoday3aasbaawqaaiabdogajbqabaaaleaacqwgkbazcqwgjbwyaagccqggoaakcqwgmbatcqggpaqkcqgh9aqpcqwgebarcqwgpbqacqwgzbwciegacqwf0badcqwfhbqycqwfubgbcqwgjbwycqwglbqzdawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgebarcqwgpbqacqwgzbwccqwf0badcqwfhbqycqwfubgbcqwgjbwycqwglbqzdawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaem4yamgabeaaasqabagccqggoaakcqwgmbatcqggpaqkcqgguaglcawljagaaczcamaabmaabagaegomaijaegonaydacagloagaayzkaaaaaa@6eab@

thus far, we found out a method to efficiently calculate Δ matrix. the purpose of extending Δ matrix is to calculate the cost difference of the swap operation. when nodes vα1
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8xsde2aasbaawqaaiabigdaxaqabaaaleqaaaaa@311b@ and vα2
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8xsde2aasbaawqaaiabikdayaqabaaaleqaaaaa@311d@ are swapped, we can calculate swapvα <dig> vα2
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwg3bwdcqwghbqycqwgwbacdawgaawcbagaemoday3aasbaawqaaggaciab=f7ahnaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=f7ahnaabaaabagaegomaidabeaaaeqaaawcbeaaaaa@3bd0@ using these Δ costs as follows:

swapvα1vα2=Δvα1p+Δvα2p+rvα <dig> vα2−rvα <dig> vα <dig>      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwg3bwdcqwghbqycqwgwbacdawgaawcbagaemoday3aasbaawqaaggaciab=f7ahnaabaaabagaegymaedabeaaaeqaasgaemoday3aasbaawqaaiab=f7ahnaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdofatnaabaaaleaacqwg2bgddawgaaadbagae8xsde2aasbaaeaacqaixaqmaeqaaaqabawccqghugyqcqwg2bgddawgaaadbagae8xsde2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaemitawkaeiykakiaeyypa0jaeuildq0aasbaasqaaiabdaha2naabaaameaacqwfxoqydawgaaqaaiabigdaxaqabaaabeaaliabdcfaqjabcicaoiabdaha2naabaaameaacqwfxoqydawgaaqaaiabikdayaqabaaabeaaliabcmcapaqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqqhuoardawgaawcbagaemoday3aasbaawqaaiab=f7ahnaabaaabagaegomaidabeaaaeqaasgaemiuaalaeiikagiaemoday3aasbaawqaaiab=f7ahnaabaaabagaegymaedabeaaaeqaasgaeiykakcabeaakiabcicaoiabdyeamjabcmcapiabgucariabdkfasnaabaaaleaacqwg2bgddawgaaadbagae8xsde2aasbaaeaacqaixaqmaeqaaaqabawccqggsaalcqwg2bgddawgaaadbagae8xsde2aasbaaeaacqaiyagmaeqaaaqabaaaleqaaogaeiikagiaem4uam1aasbaasqaaiabdaha2naabaaameaacqwfxoqydawgaaqaaiabigdaxaqabaaabeaaliabgszirkabdaha2naabaaameaacqwfxoqydawgaaqaaiabikdayaqabaaabeaaasqabagccqwgmbatcqggpaqkcqghsislcqwgsbgudawgaawcbagaemoday3aasbaawqaaiab=f7ahnaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=f7ahnaabaaabagaegomaidabeaaaeqaaawcbeaakiabcicaoiabdyeamjabcmcapiabcycasiaaxmaacawljawaaewaaeaacqaiyagmcqai3awnaiaawicacaglpaaaaaa@9aad@

where

rva,vb=wee∑eva∈eva,evb∈evbcrosseva,evb+wve+∑evb∈evbcrossva,evb).     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgsbgudawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwg2bgddawgaaadbagaemoyaigabeaaasqabagccqggoaakcqwgmbatcqggpaqkcqgh9aqpcqwgxbwvdawgaawcbagaemyzaumaemyzaugabeaakmaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdggahbqabaaabeaaliabcycasiabdwgalnaabaaameaacqwg2bgddawgaaqaaiabdkgaibqabaaabeaaasqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgxbwvdawgaawcbagaemodaynaemyzaugabeaaaeaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwghbqyaeqaaaqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaniabgghildgcdaqadaqaamaaqafabagaem4qamkaemocainaem4ba8maem4camnaem4cam3aasbaasqaaiabdaha2naabaaameaacqwgibgyaeqaasgaeiilawiaemyzau2aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaaawcbeaakiabcicaoiabdyeamjabcmcapawcbagaemyzau2aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaasgaeyici4saemyrau0aasbaawqaaiabdaha2naabaaabagaemyyaegabeaaaeqaaawcbeqdcqghris5aogaey4kasyaaabuaeaacqwgdbwqcqwgybgccqwgvbwbcqwgzbwccqwgzbwcdawgaawcbagaemoday3aasbaawqaaiabdggahbqabawccqggsaalcqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaaogaeiikagiaemitawkaeiykakcaleaacqwglbqzdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabawccqghiiizcqwgfbqrdawgaaadbagaemoday3aasbaaeaacqwgibgyaeqaaaqabaaaleqaniabgghildaakiaawicacaglpaaacqgguaglcawljagaaczcamaabmaabagaegomaijaegioagdacagloagaayzkaaaaaa@b15e@

in sccb-grid layout algorithm, the combo score also needs to be considered. given a layout such that a node vα is moved to a vacant point p, Δvαpcs
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqhuoardaqhaawcbagaemoday3aasbaawqaaggaciab=f7ahbqabawccqwgwbacaeaacqwgjbwycqwgzbwcaaaaaa@35b9@ can be calculated as shown in equation . in contrast, if two nodes vα1
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8xsde2aasbaawqaaiabigdaxaqabaaaleqaaaaa@311b@ and vα2
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8xsde2aasbaawqaaiabikdayaqabaaaleqaaaaa@311d@ are swapped, the difference of combo scores, combo  – combo , is effectively calculated as follows:

swapvα <dig> vα2cs=pswapvα1vα2+pswapvα2vα <dig>      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwg3bwdcqwghbqycqwgwbacdaqhaawcbagaemoday3aasbaawqaaggaciab=f7ahnaabaaabagaegymaedabeaaaeqaasgaeiilawiaemoday3aasbaawqaaiab=f7ahnaabaaabagaegomaidabeaaaeqaaawcbagaem4yammaem4camhaaogaeiikagiaemitawkaeiykakiaeyypa0jaemicaanaem4uamlaem4dacnaemyyaemaemicaa3aasbaasqaaiabdaha2naabaaameaacqwfxoqydawgaaqaaiabigdaxaqabaaabeaaliabdaha2naabaaameaacqwfxoqydawgaaqaaiabikdayaqabaaabeaaasqabagccqggoaakcqwgmbatcqggpaqkcqghrawkcqwgwbaccqwgtbwucqwg3bwdcqwghbqycqwgwbacdawgaawcbagaemoday3aasbaawqaaiab=f7ahnaabaaabagaegomaidabeaaaeqaasgaemoday3aasbaawqaaiab=f7ahnaabaaabagaegymaedabeaaaeqaaawcbeaakiabcicaoiabdyeamjabcmcapiabcycasiaaxmaacawljawaaewaaeaacqaiyagmcqai5aqoaiaawicacaglpaaaaaa@6def@

where

pswapvu={wcs−combov+adjv−adjvif v∈v′0if v∉v′.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgwbaccqwgtbwucqwg3bwdcqwghbqycqwgwbacdawgaawcbagaemodaynaemydauhabeaakiabcicaoiabdyeamjabcmcapiabg2da9maaceqabaqbaeqabigaaaqaaiabdefaxnaabaaaleaacqwgjbwycqwgzbwcaeqaaogaeiikagiaem4qamkaem4ba8maemyba0maemoyaimaem4ba82aasbaasqaaiabdaha2bqabagccqggoaakcqwgtbwudawgaawcbagaemodaynaeyilhsqaemydauhabeaakiabdyeamjabcmcapiabgkhitiabdoeadjabd+gavjabd2gatjabdkgaijabd+gavnaabaaaleaacqwg2bgdaeqaaogaeiikagiaemitawkaeiykakiaey4kasiaemyqaekaemizaqmaemoaao2aasbaasqaaiabdaha2bqabagccqggoaakcqwgtbwudawgaawcbagaemodaynaeyilhsqaemydauhabeaakiabdyeamjabcmcapiabgkhitiabdgeabjabdsgakjabdqgaqnaabaaaleaacqwg2bgdaeqaaogaeiikagiaemitawkaeiykakcabagaeeyaakmaeeozaymaeeiiaaiaemodaynaeyici4safmovaylbauaaaeaacqaiwaamaeaacqqgpbqacqqgmbgzcqqggaaicqwg2bgdcqghjiyzcuwgwbgvgaqbaaaaaiaawuhaaiabc6cauiaaxmaacawljawaaewaaeaacqaizawmcqaiwaamaiaawicacaglpaaaaaa@8c23@

a pseudo code of sccb-grid layout algorithm is described in figure  <dig> 

if node vβ is moved at the previous step, the time complexity of calculating Δ matrix is o |evβ
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaggaciab=j7aibqabaaaleqaaaaa@3140@||u|). if two vβ1
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8nsdi2aasbaawqaaiabigdaxaqabaaaleqaaaaa@311d@ and vβ2
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg2bgddawgaawcbaaccigae8nsdi2aasbaawqaaiabikdayaqabaaaleqaaaaa@311f@ are swapped at the previous step, the time complexity of calculating Δ matrix was o   |u|) = o  |evβ′
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaggaciqb=j7aizaafaaabeaaasqabaaaaa@314c@||u|), where |evβ′
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaggaciqb=j7aizaafaaabeaaasqabaaaaa@314c@| = / <dig>  in addition, the time complexity of all the swap operations considered at each step is o . therefore, the time complexity of sccb-grid layout algorithm is o ) at each step.

since the time complexity of cb-grid layout algorithm is o ) at each step  <cit> , the time complexity of sccb-grid layout algorithm is o) larger than that of cb-grid layout algorithm . here, we consider two cases, |v| ≤ |w|  and |v| > |w|  and show these two algorithms have the same time complexity with high probability. for case  <dig>  the above difference is negligible since o ) ≤ o ). in contrast, the o) difference cannot be neglected in case  <dig>  however, if we assume that all nodes can be moved to form the next layout with equal probability, |v||evβ
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaemoday3aasbaawqaaggaciab=j7aibqabaaaleqaaaaa@3140@| =  <dig> |e|, and o) = o  subsequently. therefore, the time complexity of sccb-grid layout algorithm will be the same as that of cb-grid layout algorithm even in the case  <dig>  for the above reasons, the time complexities of sccb-grid and cb-grid layout algorithms are the same in practice.

RESULTS
data and parameters
to evaluate our algorithms on a large-scale signal transduction pathway with a gene regulatory network, we create the pathway model of an endothelial cell with cell illustrator  <cit>  by extracting information from  <cit> . the model consists of  <dig> nodes and  <dig> edges , and the maximum degree of a node is ten . grid widths and heights are fixed to  <dig> pixels; the total numbers of vertical and horizontal grid points are  <dig> and  <dig>  respectively. we used the following information pertaining to seven go subcellular localizations: extracellular space , cytoplasm , nucleus , mitochondrion , plasma membrane , nuclear membrane , and mitochondria membrane . we also used the following information pertaining to sixteen processes and entities used as attributes of nodes: migration, phosphorylation, protein with a modification, ligand, assembly, transcription, translation, mrna, ligand and receptor, receptor, unknown, protein, exchange, trimer, ubiquitination, and degradation.

usually, these types of biological models have many nodes termed as degradation. the degradation process always has only one edge. to exploit this property, we apply these layout algorithms after removing degradation nodes . after applying layout algorithms, we attach each eliminated degradation node just below the entity to which it was initially connected. thus, in practice, the numbers of nodes and edges in the model given to layout algorithms are  <dig> and  <dig>  respectively. note that when the performances of algorithms are compared with the numbers of edge-edge crossings and node-edge crossings in the latter part of this section, crossings that are caused by degradations and edges connected to them are not taken into account.

we apply the following rule to edge-edge crossing weight wee, node-edge crossing weight wne, combo score weight wcs, and distance cost weight wdc of a layout cost, in equation , to ensure that the importance of the distance cost is less than those of the others:

min⁡>wdc⋅max⁡l∑v,u∈vdistancev,u.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacyggtbqbcqggpbqacqggubgbcqggoaakcqwgxbwvdawgaawcbagaemyzaumaemyzaugabeaakiabcycasiabdefaxnaabaaaleaacqwgubgbcqwglbqzaeqaaogaeiilawiaem4vac1aasbaasqaaiabdogajjabdohazbqabagccqggpaqkcqgh+agpcqwgxbwvdawgaawcbagaemizaqmaem4yamgabeaakiabgwsixpaaxababagagiyba0maeiyyaemaeiieaghaleaacqwgmbataeqaaowaaabuaeaacqwgebarcqwgpbqacqwgzbwciegacqwf0badcqwfhbqycqwfubgbcqwgjbwycqwglbqzdawgaawcbagaemodaynaeiilawiaemydauhabeaakiabcicaoiabdyeamjabcmcapawcbagaemodaynaeiilawiaemydaunaeyici4saemovayfabeqdcqghris5aogaeiola4iaaczcaiaaxmaadaqadaqaaiabiodaziabigdaxagaayjkaiaawmcaaaaa@6d3d@

in our study, wdc, wee, wne, and wcs were set to  <dig>   <dig>   <dig>  and  <dig>  respectively. also, the constant c in cwa was set to  <dig> 

using the combo score, many nodes can be aligned vertically. however, in many cases, the nodes cannot be moved once they have combo relations. plasma membrane, nuclear membrane, and mitochondrial membrane are thin and torus shaped, thus, vertical alignments of the nodes on these subcellular localizations will not be of interest for users . therefore, in this paper, we decided to ignore combo scores in plasma membrane, nuclear membrane, and mitochondrial membrane.

comparison of layouts
in  <cit> , the initial layout for cb-grid layout algorithm was a random layout, which had a large number of edge-edge crossings and node-edge crossings. many iterations will, therefore, be needed until convergence. this fact prompted us to use the output of eades initial layout algorithm as an initial layout. figure  <dig> shows the number of iterations until convergence. as shown in this figure, cb-grid eades successfully reduces the number of iterations when compared to cb-grid random . moreover, the total score of cb-grid eades is greatly improved over that of cb-grid random ). a discussion in  <cit>  was suggesting that reducing edge-edge crossings and node-edge crossings will lead to a better approximation of the human layout. in contrast as shown in figure  <dig> and  <dig>  the human layout also has several edge-edge and node-edge crossings, and has a higher combo score than that of cb-grid layout algorithm. based on these facts, we proposed an additional scoring criterion – combo score – in ccb-grid layout algorithm. as seen through the value of combo scores ), ccb-grid layout algorithm drastically improves this score, and this score becomes closer to that of the human layout. however, the numbers of edge-edge crossings and node-edge crossings in ccb-grid layout algorithm increase, comparing to cb-grid eades  and 6). in this paper, the swap operation is proposed to increase the number of candidate layouts at each step. as shown in figure  <dig> and  <dig>  sccb-grid layout algorithm succeeds in reducing edge-edge crossings and node-edge crossings, i.e., the above drawback of ccb-grid layout algorithm is partially diminished. in addition, as shown in figure  <dig>  the combo score of sccb-grid layout algorithm is also improved slightly.

we also apply grid-layout algorithms to fas-induced apoptosis pathway model  <cit>  and ase cell fate simulation model  <cit>  to obtain a more generalized comparison. resulting layouts and the number of crossings in each layout are summarized in additional file  <dig>  these models including the endothelial cell model are also available as additional file  <dig>  and the application of sccb-grid layout algorithm for these models can be downloaded from  <cit> .

CONCLUSIONS
for better biopathway layouts, three improvements to cb-grid layout algorithm were proposed:  the improvement of initial layouts  the improvement of cost function  the improvement of search strategy itself without increasing the time complexity. for , eades initial layout algorithm was proposed and the improvement was confirmed with a signal transduction pathway of an endothelial cell. for , ccb-grid layout algorithm, which includes combo score function, was proposed and the improvement was verified with the same signal transduction pathway. for , sccb-grid layout algorithm was proposed. due to  and , our layout algorithm can be started from the better layout, and more robust to the condition of the initial layout than extant methods. in addition, we succeeded in utilizing the biological attributes that are not considered in extant methods due to combo score.

however, our layout algorithm has limitations and problems, which should be addressed in future work. firstly, if the parameters of the combo score are not correctly selected, once a node gets a combo relation, the node no longer moves to other grid points anymore. thus, it is important to devise a method that automatically selects the suitable parameters for the combo score function, edge-edge crossing function, and node-edge crossing function. secondly, in our algorithm, only undirected graphs are considered to be laid out. on the other hand, for metabolic pathways,  <cit>  proposed layout algorithms that decompose a digraph to hierarchical structural parts and directed cycle parts by considering the direction of edges in order to capture the flow of reactions. therefore, the grid layout algorithm will also need to handle digraphs, utilizing its property that is effective especially in the grid-based layout. finally, it should be addressed that grid layout algorithms including our new approach requires high time complexity and are not suitable for the real-time drawing. thus, we would like to devise a further optimized grid layout algorithm to enable the real-time drawing.

authors' contributions
the basic idea was conceived by mk and mn. this idea was developed by kk and mn who then conceived a new idea and developed it. ej created the endothelial model in figure  <dig>  sm supervised the whole study. the final manuscript was read and approved by all authors.

supplementary material
additional file 1
resulting layouts of applying lk-grid layout algorithm, cb-grid layout algorithm and sccb-grid layout algorithm to fas-induced apoptosis pathway model and ase cell fate simulation model are shown. comparison of these results are also included.

click here for file

 additional file 2
biopathway model files. endothelial cell model, fas-induced apoptosis pathway model and ase cell fate simulation model are included.

click here for file

 acknowledgements
computation time was provided by the super computer system, human genome center, institute of medical science, university of tokyo.
