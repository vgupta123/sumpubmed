BACKGROUND
identification of regulatory dna motifs represents a fundamental step in the study of transcriptional regulation mechanisms. regulatory motifs typically facilitate the gene transcriptional regulation as transcription factors binding sites . computational prediction of motifs in promoters has evolved as an increasingly important problem since it was proposed in 1980s . in the past three decades, a number of programs have been developed such as alignace, biprospector, consensus, mdscan, meme, cubic and bobro . in spite of the substantial number of applications that have been developed, it is still a very challenging problem and there is much room for improvement in motif identification performance  <cit> .

the phylogenetic footprinting strategy, first proposed by tagle et al. in  <dig>  <cit> , has proven useful in de novo motif finding. this strategy is based on a common principle that the regulatory elements in promoters tend to evolve at a lower rate and be more conserved at the dna sequence level than their surrounding non-functional sequences. following this line of research, scientists first applied comparative genomics methods  <cit>  and co-regulation based motif finding tools on orthologous promoters to detect regulatory signals. later, specific tools for phylogenetic footprinting  were designed to improve the performance of motif identification. in the last decade, with the increased availability of sequenced prokaryotic genomes and the sequence-similarity based orthology mapping technology, researchers have made application of phylogenetic footprinting less difficult and more powerful  <cit> .

however, the application of phylogenetic footprinting is still intractable for researchers, because almost all existing methods require several tough procedures. many factors need to be considered for proper phylogenetic footprinting application use, such as reference species selection, orthology mapping and promoter region cutting  <cit> . the noise induced by each of these factors can increase motif prediction false positives. further the promoters generated for a set of orthologous genes should be divergent enough so that the to-be-identified motifs stand out, yet limit the mutations, thus maintaining the conserved motif properties. specifically, phylogenetic footprinting applications have the following limitations  <cit> :  lack of reliable genome-scale operon structure integration, which is essential for regulatory motif prediction in prokaryotes  <cit> ;  lack of universally applicable promoter collecting framework, which makes full use of abundant sequenced genome data.  neglecting to identify the phylogenetic relationship among promoters.  the need for users to set poorly-defined motif feature parameters or other algorithmic thresholds.  lack of intuitive and user-friendly tools or web server, although some methods have been proven effective on biological data sets. most users do not understand how to adjust these factors and application parameters to ensure accurate motif prediction.

in this paper, we propose a framework for motif prediction based on phylogenetic footprinting  , aiming to avoid the drawbacks described above and make the pipeline effective and widely applicable. new strategies were developed for  integrating the sequence-similarity and functional association information in orthologous promoter selection,  promoter scoring and pruning through motif voting using a set of complementary predicting tools and  motif signal cross validation using a curve fitting method. we validated mp <dig> using the whole genome of e. coli k <dig>  which has many documented tfbss in regulondb  <cit> . the performance was systematically evaluated and compared with seven other existing tools. the comparisons show that mp <dig> has significantly improved performance over other existing tools. we implemented mp <dig> into a stand-alone program, which is available at http://csbl.bmb.uga.edu/dminda/download.php. furthermore, the whole pipeline has also been implanted into dminda   <cit> , which is an integrated web server for dna motif prediction and analyses based on our in-house motif identification programs bobro  <cit>  and the door <dig>  database containing operons for  <dig>  prokaryotic genomes  <cit> . dminda allows mp <dig> to be readily applied on any of the  <dig>  integrated prokaryotic genomes and provides a user-friendly platform for visualization and display of the prediction results.

methods
mp <dig> has four components: reference promoter set  preparation from sequenced prokaryotic genomes , candidate binding region  detection by motif voting strategy and peak finding , candidate binding region clustering based on a graph model , and motif profile identification through curve fitting .fig.  <dig> an outline of the mp <dig> framework. a rps preparation based on sequenced genome from ncbi, operon information retrieved from door, and identified orthologous genes for a target gene using gost. the promoters of orthologous operons are generated and then are refined to build rps. b cbr detection by voting strategy and peak finding. the predicted motifs by six tools  are mapped back on promoter sequences, and generate score curves. the peaks on the curve are identified as cbr by a peak calling method. c cbr clustering based on a new graph model. r
 <dig>  r
1… are cbrs on promoters, which are clustered together as a related cbr set r
 <dig>  the motif finding will performed on these clusters  again to build motif profiles. d motif profiles identification and motif width optimization through curve fitting



preparation of reference promoter set  of a given gene in mp3
collection of orthologous promoters: the traditional strategy for orthologous gene collection in phylogenetic footprinting relies on choosing several species in advance  <cit> . this can limit the quantity and quality of available orthologous genes. mp <dig> collects the orthologous genes from a large set of references genomes, i.e. “big data source”. specifically,  we used the recent orthology detection tool, gost  <cit>  to identify the orthologous genes of any given prokaryotic gene in the reference genomes. these genomes belong to the same phylum, but a different genus than that of the target gene, and we took only one genome into consideration for each genus to avoid redundancy. we  then extended the orthologous relationship from gene to operon level. thus, for a given gene, its host operon is denoted as o0 = {g <dig>  g <dig> …, gr} and the operons in the reference genomes that contain orthologous genes of any gi in o <dig>  are considered as orthologous operons of o <dig>  denoted as {o <dig>  o <dig>  …, on}. their promoter sequences are defined as corresponding upstream regulatory regions , denoted as p <dig> and {p <dig>  p <dig>  …, pn}, respectively. then iii), we define the promoter set p = {p <dig>  p <dig>  …, pn} as the orthologous promoters of p <dig> 

reference promoter set : the preliminary orthologous promoter set obtained above could not be directly used to predict motifs, as the large data set size and unconsidered phylogenetic relationships can overpower the conserved motif signal. mp <dig> polished the preliminary promoter set to generate a reference promoter set , which was of reasonable size and with conserved significant motifs, i.e. “reduced final set”. our selection strategy was partly inspired by mccue et al., who claimed that three well-selected reference promoters might be sufficient to identify a motif on a given human gene  <cit> . we improved this model for application in prokaryotes by selecting three groups of orthologous sequences instead of just three sequences. in addition, rather than using existing phylogenetic tree based on species, phylogenetic trees were assembled for each group of orthologous promoters. before selection, the phylogenetic tree of orthologous promoter sequences was built by clustalw  <cit> , and the distance scores of this tree were used to represent the distance between any pair of orthologous promoter sequences. mp <dig> then divided p into three groups, p <dig>  p <dig>  and p <dig>  corresponding to highly similar to, relatively similar to, and distant from p <dig>  according to the thresholds obtained by analyzing the distribution of distance scores between orthologous promoters . mp <dig> first selected three reference promoters from each group, and then added three more from p <dig>  because p <dig> has many more orthologous promoters. in this selection, we considered the additional following factors:  the promoters whose operons had the same leading orthologous genes with o <dig> had higher priority to be chosen.  the promoters were re-ranked based on a genomic similarity score   <cit> , which was calculated as the fraction of genes in the target genome, which have orthologous genes in the reference genome. we selected promoters with higher gss based on the assumption that the genome with higher gss tends to have regulatory mechanism more similar to that of the target genome  <cit> .  any two selected promoters were required to have a mutual distance score greater than  <dig>  to avoid redundant promoters. finally, the selected reference promoters, along with p <dig> itself, composed a reference promoter set , which was expected to contain key motif signals and have a reasonable size with the consideration of computational efficiency. more details about rps generation are provided additional file 1: method s <dig> 

pruning promoter to identify candidate binding region 
for a given gene, the rps can be used to prune its corresponding promoter p <dig> and identify rough tf binding regions through a voting strategy by integrating multiple motif finding tools . six widely used de novo motif finding tools, biprospector, bobro, mdscan, meme, cubic, and consensus , were applied to the rps to identify conserved motifs with lengths ranging from  <dig> to  <dig>  and for each length, we kept the top ten predicted motifs . the predictions for a specific program can be denoted as  <dig> s=∪l=530∪t=110slt where slt represents the t-th motif in the prediction with length l. if slt contains an instance from p <dig>  denoted as s, its contribution will be added to the voting score ci  using the following formula ,  <dig> ci=ci+vs,fori∈i|bs≤i≤es; where bs and es represent the starting and ending positions of s along p <dig>  and  <dig> vs=1|sl•|1+logt,sl•=∪t=110slt where t is the rank of motif profile, which motif instance s belongs to, in prediction results for input length l. intuitively, such voting scores are reliable and informative as different tools do have complementary effects  <cit>  while the false positive noise tend to randomly distribute in p <dig>  the voting scores generally represent the support obtained from multiple predictions. the larger a score, the higher probability that the site overlaps true tfbss. additionally, we normalized the contribution of different predictions by introducing sl., instead of directly counting the number of predicted segment covering each site, since the output size of motif finding tools may be very different.

application of a pick calling strategy to the voting scores allows a set of cbrs to be identified, each of which is recognized as a continuous genomic segment of p <dig>  containing nucleotides with significant higher voting scores than the surrounding sequence. additional details can be found in additional file 1: method s <dig>  the cbrs, as primary output of mp <dig>  can be used by researchers directly in genetic engineering to locate the functional regulatory regions of a promoter.

clustering of correlated cbr set
the cbr sets identified in the target and reference promoters are used to build motif profiles . a similarity graph g with all cbrs represented as vertices and edges connecting every pair of vertices was constructed. the weight of edges are set as the correlation scores between two corresponding cbrs as follows:  p <dig> and p <dig> are the target promoter and a reference promoter, respectively;  a cbr c <dig> in p <dig> begins at b <dig> and ends at e <dig>  and another cbr c <dig> begins at b <dig> and ends at e <dig> in p <dig> .  the correlation score w between the two cbrs was evaluated:  <dig> wc0c1=1−b0−b1maxb0b1×sc0c <dig> where s was the sequence similarity score, calculated by aligning c <dig> and c <dig>  the weight of the edge that connects cbrs of the same promoter will be set as  <dig>  clearly, the higher a weight, the more correlated the two corresponding cbrs were. the relative location of cbr pairs s was also considered as the position of many tfbss tend to be conserved in evolution  <cit> .

intuitively, a set of highly correlated cbrs should be connected by large weights producing a subgraph of g, i.e. subgraph with large edge weight, because these correlations should make the weight of each involved edge larger. it should also be noted that identifying all heavy subgraphs in a weighted graph itself was np-hard. hence, we identified the cbr clusters in a heuristic way:  we sorted the edges in g in decreasing order of their weights and only keep the top 1/ <dig>  one third was absolutely enough because the graph with only real connections should be sparse. however, the random cliques have little chance to survive because graph g is a multi-partite graph;  we obtained the induced sub-graph of a cbr in target promoter and its neighbors in other promoters; and  we detected the maximal clique in induced sub-graph and then expanded it by including the highly connected vertex. the cbrs corresponding to the vertex in each cluster composed the correlated cbr set in which the motif profile identification will be carried out.

identification of candidate motif profiles
building motif profiles from correlated cbr set. we applied our motif finding tool, bobro  <cit>  on the identified cbr sets to generate candidate motif profiles. outstanding motif instances were identified using the support from several motif finding tools .

it was still very challenging to evaluate motif profiles with different widths. although bobro and meme are capable of detecting motif width on co-regulated promoters, they may fail on phylogenetic footprinting data, because the flanking regions of motifs in orthologous promoters are usually conserved to some extent. in mp <dig>  a curve fitting method was designed to detect the motif profiles with an optimized width for phylogenetic footprinting. the bobro predicted motif profiles have a width from  <dig> to  <dig> and corresponding ic  scores, which are calculated by the formula:  <dig> icw=∑j=1w∑i=14fijlogfijbi where  is the probability of nucleotide type i appearing at position j in the motif profile, and bi is the probability of i appearing in the background sequence which is calculated on all input promoter sequences. however, ic cannot be directly used to compare different motif profiles, because they are width-dependent. mp <dig> regresses the correlation function between the ic and the width of motif profile by minimizing  <dig> Σw=622icw−fw <dig> on the conjectured function:  <dig> fw=a⋅eβw+γ where α, β and γ are fitting coefficients. then, we took the difference between the real ic scores and fitting scores for each profile, i.e. the residual of above regression,  <dig> rw=icw‐fw as the criterion to select the best motif profile. basically, the motif profiles whose r are local maximum are ranked in the decreasing order of r.

mp <dig> application and performance evaluation using e. coli genome
data acquisition. we used e. coli k <dig> as the target genome and another  <dig> selected prokaryotic genomes from the proteo-bacteria phylum as references to test mp <dig> methods and the applications. the genome data were downloaded from the ncbi database . the  <dig> reference genomes were obtained from  <dig> different genera  to avoid potential selection bias in comparative genomics studies  <cit> . the operons of these genomes were retrieved from the door <dig>  operon database  <cit> , and the documented motifs in e. coli were obtained from regulondb  <cit> . we linked the documented tfbss in e. coli to their target operons and then to corresponding promoters in the identified  <dig>  rpss. figure 2d showed that  <dig> of the  <dig>  operons have experimentally confirmed tfbss  in their regulatory regions. twenty of these  <dig> operons and their corresponding tfbss were removed since they did not have enough orthology. the remaining  <dig> promoter sequences, containing  <dig>  binding sites, were used to evaluate the performance of mp <dig>  besides, we downloaded sigma  <dig> binding promoters of e. coli from the regulondb and conducted analysis to see the correlation between orthology and sigma  <dig> binding in e. coli.fig.  <dig> the information about genes, orthologous, regulatory activities, and promoters. a the distribution of orthologous gene number: the x-axis is the number interval of orthologous genes; the y-axis is the number of genes whose orthologous number is in the corresponding interval. the solid parts represent the genes having known regulatory activities. b the correlation between orthologous number and regulatory activities: the x-axis is the number interval of orthologous genes; the y-axis is the proportion of genes with known regulatory activities in corresponding gene groups. c the box-plot of orthologous number distribution for gene sets s <dig>  s <dig> and s <dig>  s <dig> represents the whole gene set of e. coli; s <dig> and s <dig> are the central metabolism genes and all pathway genes respectively. the genes in s <dig> and s <dig> have significantly more orthologous compared to s <dig> with wilcox p-values both as  <dig> e- <dig>  and the genes in s <dig> have little more orthologous than s <dig> with wilcox p-value as  <dig> . d the distribution of orthologous operon number: the x-axis is number interval of orthologous operons; and the y-axis is the number of operons whose orthologous number within corresponding intervals. the solid parts represent the operons having known tfbss in regulatory regions



performance evaluation. to conduct performance comparison, we applied six de novo motif finding tools previously mentioned, i.e., biprospector, consensus, mdscan, meme, cubic, bobro and a phylogenetic footprinting pipeline microfootprinter  on the same genome and compared with mp <dig>  we followed tompa’s method  <cit>  and assessed the predictions both at nucleotide level and at the binding site level. specifically, we calculated the sensitivity , positive prediction value , specificity , performance coefficient  and correlation coefficient  at nucleotide level, and calculated the sensitivity , positive prediction value , and average site performance  at site level. in addition, we added the widely used f-score  at site level for better evaluation. the calculation details for these measures can be seen in additional file 1: method s <dig>  we followed tompa’s criterion to indicate that a predicted site overlaps a known tfbs if they overlapped by at least 1/ <dig> the length of known site  <cit> .

functional enrichment analysis according to the kegg database
for a set of operons in e. coli, we did functional enrichment analysis of the corresponding genes with david  <cit> . specifically, given a set of operons, their genes were picked from the door <dig> database  <cit>  and submitted to david as the input gene list with this genome as background genome. the p-values were calculated in terms of a bonferroni-corrected modified fisher's exact test under the null hypothesis that this set of genes was not enriched with certain biological functions.

RESULTS
mp <dig> was applied on all the  <dig>  genes of e. coli k <dig>  with all the documented tfbss from the regulondb database. the unique features of mp <dig> resulted in a positive effect in motif finding: the new strategy for orthologous promoter sequences selection makes phylogenetic footprinting efficiently applicable on most of prokaryotic genes, e.g.  <dig>  %  of e. coli operons have at least three orthologous operons. the promoter pruning method with motif voting and peak calling reduced the false positive rate, the positive prediction value increased from  <dig>  to  <dig>  and the f-score increased from  <dig>  to  <dig>  in performance evaluation on binding site level. the curve fitting for motif width optimization in the last step helped to build high quality motif profiles. in addition, with implementation of mp <dig> in dminda, users can obtain the motif prediction by simply clicking the name of a gene from each of the  <dig>  prokaryotic genome in our back-end database and conduct further analyses  for predicted motifs on the dminda platform.

orthologous repertoires of genes in e. coli k <dig> and their properties
for all  <dig>  e. coli genes,  <dig>  orthologous gene pairs between e. coli and each of the  <dig> reference genomes were identified by gost. the distribution of the number of orthologs for all the target genes, ranging from  <dig> to  <dig>  represents a huge difference from gene to gene . it indicated that the widely used species selection method, i.e. choose a few species before ortholog generation, may fail to obtain enough orthologs. furthermore, this observation raised two questions: is there any correlation between ortholog number and its transcriptional regulation mechanism for a specific gene; and what kinds of genes have more orthologs than the others? the answers to these questions may guide the application by identifying which genes are more suitable for the phylogenetic footprinting strategy.

gene’s transcriptional regulation is correlated with the number of its orthologous genes. the regulondb database showed that  <dig>  genes are regulated by one or more tfs, among all the  <dig>  genes defined as known regulatory activities in our study. all  <dig>  genes were divided into  <dig> groups according to the number of orthologous genes they contain . the results indicated that the genes with moderate number of orthologs tended to have more confirmed regulatory activities, while the genes with many or few orthologs tended to have less known regulatory activities. we hypothesize that the genes with more orthologs play essential function in cell, thus tend to keep a consistently high expression level and probably need less regulation. we also analyzed the correlation between sigma <dig> binding motifs and the number of orthologs on operon level, and found that the operons with more orthologs tend to have sigma  <dig> binding motifs . this finding confirmed our hypothesize as sigma  <dig> factors keep essential genes and pathways operating as a “housekeeping” sigma factor  <cit> . meanwhile, genes with few orthologs usually have a specific function in their host genome; therefore, have both simple and specific regulation. in contrast, genes with a moderate number of orthologs have more responsibilities in biological diversity and have more regulation activities.

genes having more orthology information tend to be functionally necessary. we ranked all operons in the decreasing order by their number of orthology and took the top  <dig> for functional annotation analysis according to the kegg database  <cit> . the results showed that the most enriched function among them is ribosome, which is the most important and essential function in any organism . the analysis also showed that the genes involved in known metabolic pathways  according to kegg database do have significantly more orthologs compared to the others .

generation of  <dig>  rpss for e. coli k <dig> operons
the  <dig>  genes in e. coli genome fell into  <dig>  operons according to the door <dig>  database, giving rise to  <dig>  target promoters . the  <dig>  orthologous gene pairs, between e. coli and reference genomes, were extended to  <dig>  orthologous operon pairs, to facilitate the orthologous promoter sequences extraction.  <dig>  %  of e. coli operons have at least three orthologous operons with the average number as  <dig>  , indicating that phylogenetic footprinting can be applied on most of prokaryotic genes. the rapid growth of genomic sequences from multiple organisms will further enhance the reliability of this large-scale search strategy. for  <dig> out of  <dig>  operons , we simply added all orthologous promoters to their rpss, as they had no more than  <dig> orthologous operons. regarding the other  <dig>  operons , mp <dig> builds the rpss with the goal to compress promoter set without losing significance of conserved motifs . finally, we obtained  <dig>  rpss, containing an average of  <dig>  reference promoters.table  <dig> the summaries of orthologous and motif prediction on e. coli k <dig> by mp3


 cbrs by mp3
 cbrs by mp3


prediction of conserved motifs in e. coli k12
in total, mp <dig> generated  <dig>  cbrs for the  <dig>  promoters, i.e., averagely  <dig>  cbrs per target promoter . a total of 93 % of the cbrs have length from  <dig> to 22 bps, which are associated with the width of peaks on the voting curve; while some cbrs are longer than average, which may be caused by the overlap of multiple binding sites in the promoters. for those  <dig> promoters with known tfbss,  <dig>  cbrs were identified. if we only considered the top cbr for each promoter, the  <dig> cbrs cover  <dig> known tfbss, i.e., an average of three tfbss for four promoters, thus a high accuracy with low false positives. however, the  <dig> tfbss only accounted for 22 % of all  <dig>  binding sites. this was mainly because many operons are regulated by multiple tfs and have multiple tfbss. so it was worthwhile to consider more cbrs to better elucidate the motif information. we found that the top  <dig> cbrs cover  <dig>  known tfbss  and simultaneously brought more false positives. mp <dig> built motif profiles from all the  <dig>  cbrs and output those with the highest confidence level from each by a curve fitting method, i.e.  <dig>  motif profiles. these profiles can be used to identify new binding sites in other promoters or detect co-regulated operons through motif comparition.

performance comparison with existing motif-finding tools
we compared the prediction of mp <dig> with six de novo motif finding tools: bobro, mdscan, bioprospector, meme, consensus, cubic, and microfootprinter. microfootprinter is designed for phylogenetic footprinting on prokaryotic genomes and can generate orthologous promoters on its web-server; mdscan is designed for motif-finding on chip-chip data; and the others are general de novo motif-finding tools. we chose default parameters for each of them, because the comparison was performed on the genome scale thus it was unrealistic to specifically adjust parameters for each individual gene in a trial-and-error way. the prediction results of microfootprinter were obtained from its web server manually, and it gave valid prediction only for  <dig> promoters among all  <dig> promoters with known tfbss. the other six tools were tested on the rpss identified by our framework, since applying de novo motif finding tools directly on a rough promoter sequence set is obviously naïve and unreliable.

using mp <dig> and seven other tools, we calculated npc, ncc, sfs and sasp according to their best output . unlike sensitivity or specificity, these measures were capable of evaluating the overall performance of prediction. the comparison showed that mp <dig> outperformed by 98 % in npc, 88 % in ncc, 60 % in sfs and 46 % in sasp over mdscan, which is the best of the other seven tools. there are on average  <dig>  tfbss for each of  <dig> promoters according to known tfbs, and only a fraction of tfbss have been documented. therefore, we further compared the performance of these tools on their top five predictions. in this case, the improvement made by mp <dig> over the best one of other seven tools  are  <dig>  % in npc,  <dig>  % in ncc,  <dig>  % in sfs and  <dig>  % in sasp. it is worth noting that, even though microfootprinter provides much fewer results, its predictions have higher specificity. mdscan had a relatively higher performance than the other published tools. mdscan starts on an enumeration strategy on the top several sequences, which is more adaptable to the data of phylogenetic footprinting motif finding. additional performance statistics can be seen in additional file 1: table s <dig> fig.  <dig> representative statistics comparing the accuracy of mp <dig> with other tools. the statistics in  and  are calculated by taking top one and top five prediction into consideration correspondingly



performance bias of tfbss prediction according to their different locations within a promoter
interestingly, we found that mp <dig> has better performance for the documented tfbss near their downstream genes than those far from their downstream genes. specifically, we considered the − <dig> site upstream from the translation start site of a gene as a boundary, by which the whole intergenic region was divided into two parts. the region  is denoted as the near regions, and the other part of the intergenic region is called the far region. then we did the similar performance evaluation as described in above methods and results section. the evaluation results showed that the performance was much better in detecting the binding sites in the near regions than in the far regions . we believe that the possible reasons for this bias could be:  the binding sites located in the far regions have greater probability to be regulatory elements of other neighboring genes, but were computationally assigned to the target gene in mistake;  the specific binding mechanism of some tfs do not require constant binding location. hence the distance between their binding sites and the target genes may be more flexible, thus easy to be missed by mp <dig>  whose cmp clustering algorithm prefers the binding sites with constant locations.fig.  <dig> performance comparison of mp <dig> on the near and far upstream region of target genes on the top one predictions  and top five predictions  correspondingly for each promoter



it should also be noted that there are alternative transcription units inside the operons in prokaryote, and the motifs may be located on inner-operon no-coding regions  <cit> . hence, another issue in phylogenetic footprinting is how to deal with these non-coding regions within operons. considering that these motifs account for only a limited fraction of the motifs, we simply ignored these regions in mp <dig> by default to reduce the potential noise induced by adding them. for the users who are interested in this kind of motif, we suggest they manually connect the inner-operon non-coding sequences on the tail of target promoter and carry out the same motif finding analysis on mp <dig> web-server to retrieve all the conserved motifs.

mp <dig> implementation in dminda
the whole pipeline of mp <dig> has also been implanted into dminda  <cit> , which is an integrated web server for dna motif prediction and analyses using our in-house motif identification program bobro  <cit>  and the door <dig>  database containing operons for  <dig>  prokaryotic genomes. we listed all genes for the  <dig>  prokaryotic genomes and the orthologous promoter were collected using the same method on e. coli, thus users can perform this proposed motif finding framework on them in several clicks. current motif-related tools implanted in dminda, e.g. motif scanning and comparing, are available to assist the users needing to use other protocols beyond the motif prediction for specific biological hypotheses. details about the implementation of mp <dig> in dminda can be seen in additional file 1: result s <dig> & figure s <dig> 

discussion
the phylogenetic footprinting technique has several intrinsic limitations in de novo motif finding. for example, it cannot be used on genes that have almost no orthology in other sequenced genomes; and it is incapable of identifying tfbss that have no conservation properties at the sequence level   <cit> . lateral gene transfer and operon structure exist widely throughout prokaryotic genomes unlike in vertebrates. therefore, direct use of the species tree and the phylogenetic tree inferred from the targets genes, as done in current published methods, is not the best choice for prokaryotic genomes  <cit> . however, an improved phylogenetic footprinting method would be useful as it also has important applications for elucidating the underlying gene regulatory networks  <cit> . recently, novichkov et al. proposed an algorithm regpredict to generate regulons, which are defined as maximal co-regulated gene sets  <cit> . regpredict takes advantage of phylogenetic footprinting to reduce the false positives, thus improves the reliability of predicted regulon on multiple genomes.

mp <dig> was developed to overcome the drawbacks of the existing phylogenetic footprinting tools. the mp <dig> framework  has the following unique features:  full consideration of the operon structures;  new promoter collection method following a principle named as big data source, reduced final set, which not only takes advantage of high throughput genomic data, but also considers the computational efficiency;  extracting phylogenetic relationship from regulatory sequences to refine the orthologous promoter set.  pruning promoters to generate cbrs based on the weighting score on each nucleotide, which is generated by a voting strategy on six popular motif finding tools; and  a curve-fitting method to identify optimal motif profiles. based on these features, mp <dig> had a much better performance in motif finding.

for our new phylogenetic footprinting pipeline, a potential and reasonable improvement is integrating some experimental data, if available, e.g. chromatin immunoprecipitation followed by sequencing . it is a technique used for genome-wide profiling of dna-binding proteins, histone modifications, or nucleosomes; and has become an indispensable tool for studying gene regulation  <cit>  as it can provide transcription factor binding information with higher resolution, less noise, and greater coverage than traditional array-based predecessor, like chip-chip  <cit> . however, it cannot replace the computational prediction tools particularly for prokaryote. firstly, there is very small amounts chip-seq data available for prokaryote  <cit> ; secondly, chip-seq is not suitable for tfs with only a few binding sites; thirdly, the complexity of regulation can also lead to bias because tfs may not bind on their binding sites in certain environments. specifically, the score curves used in mp <dig> can be further optimized by integrating the binding signal from chip-seq, using machine learning or pattern classification. the chip-seq based peaks and cbrs identified by mp <dig> can be cross-validated by each other in application, aiming to overcome some intrinsic computational challenges in high-throughput data analyses. upon the availability of large-scale chip-seq data in prokaryote  <cit> , we believe that the information integration in our framework can further improve the performance in motif prediction and analysis.

an intuitive application of the mp <dig> motif prediction pipeline is to elucidate the genome-scale transcription regulatory network, which is one of the most important goals in systems biology. it can help infer how gene regulatory networks will respond under various conditions or with specific genetic perturbations; and to understand how different gene expression states are controlled by their underlying regulatory systems. mathematically, this is modeled as a regulon identification problem, aiming to identify all the co-regulated genes by each of regulatory transcription factors. we note that there is a limitation in the mp <dig> application. for predicted motif profiles, we found that the motif profiles composed by orthologous binding sites may not perfectly coincide with those composed by binding sites of co-regulated genes in the same genome. for example, the transcription factor argr has  <dig> known binding sites in e. coli. the orthologous binding sites from the promoters of gene argr and its orthologous showed high similarity with only eight out of the  <dig>  thus the motif logos have some differences . the reason for this phenomenon may lie in the evolution mechanism for binding sites. the differences in orthologous binding sites are caused by heredity while the binding sites upstream of co-regulatory genes may be caused by gene duplication or even random mutation, thus leading to variation in these two motif profiles. the phenomenon described above may challenge the computational application and require additional algorithm development in motif based regulon construction.

CONCLUSIONS
in this paper, we designed a new framework, mp <dig>  for phylogenetic footprinting motif identification and provide it as a web service. the framework is based on several new ideas, integrated several existing motif finding tools, conquered the existing obstacles for orthology generation, false positive elimination etc. mp <dig> first generates cbrs, which may be directly used by researchers who only care to identify the functional regulatory regions of target genes; and then produces motif profiles for those that need motif profiles for motif search and comparison. the automatic pipeline of data acquisition, processing and implantation as web server allow easy application of mp <dig> to most sequenced prokaryotic genomes. application on e. coli k <dig> genome in this study showed that mp <dig> worked better than existing motif finding tools and provides accurate results with less redundancy. we believe that mp <dig> will enhance progress toward elucidating the transcription regulation mechanism, especially for the genomes that have not been well studied. thus, mp <dig> will benefit the genomic research community, and prokaryotic genome researchers in particular. in addition, using mp <dig> with other experimental techniques and knowledge will provide more reliable and useful results for regulatory research.

abbreviations
cbr, candidate binding region; chip-seq, chromatin immunoprecipitation followed by sequencing; ic, information content; mp <dig>  motif prediction based on phylogenetic footprinting; ncc, correlated co efficient on nucleotide level; npc, performance coefficient on nucleotide level; nppv, positive prediction value on nucleotide level; nsn, sensitivity on nucleotide level; nsp, specificity on nucleotide level; rps, reference promoter set; sasp, average site performance on site level; sppv, positive prediction value on site level; ssn, sensitivity on site level

additional file
additional file 1: method s1-s <dig>  result s1- <dig>  figure s1-s <dig>  table s1-s <dig>  



