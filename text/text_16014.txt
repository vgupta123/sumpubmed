BACKGROUND
during the last years, a large number of machine learning approaches have been developed to analyze and annotate genomic sequence data. different concepts of statistical pattern analysis and modelling are successfully used for this purpose. sophisticated methods like hidden markov models  <cit> , neural networks  <cit>  or support vector machines   <cit>  became indispensable concepts and are routinely utilized in computational biology. kernel-based learning algorithms, like svm, are among the most advanced machine learning methods. as compared with probabilistic  models and classical neural networks, svm provide a well-understood regularization  <cit>  mechanism which makes learning from few examples in high-dimensional feature spaces possible. in that way, svm and related methods can effectively cope with the "curse of dimensionality", which has been difficult for the more traditional tools in machine learning. together with the kernel trick which provides a technical basis for learning in arbitrarily high-dimensional spaces, the principled approach to regularization has been the foundation for a large variety of successful applications of svms to realworld pattern-classification tasks  <cit> . however, a certain drawback of kernel methods is that, from a user's point of view, they usually behave like black boxes. once the training phase is done, it is not easy to identify the features which actually determine the quality of the classification. this fact complicates the design of such systems and an interpretation of the learnt representation. therefore additional feature selection procedures have been proposed to cope with that inherent shortcoming of traditional kernel methods. in that way, degroeve et al.  <cit>  proposed to combine svm based on traditional kernels with techniques for feature selection in order to localize mononucleotide occurrences relevant for the prediction of splice sites.

herein, we introduce oligo kernels which provide a novel approach to datamining on biological sequences, based on the powerful concept of kernel feature spaces  <cit> . our approach has two main advantages compared to previous applications of kernel methods to biological sequence analysis:  the existing methods provide either position-dependent representations based on mononucleotide occurrences  <cit>  or they consider general k-mer occurrences restricted to a completely position-independent representation  <cit> . by contrast, with our method it is possible to adjust the required level of position-dependency to any degree for oligomers of any length. this convenient feature, in turn, facilitates the modelling of positional and compositional variability of complex biological signals. on the other hand, as we shall show in the next section, traditional monomer-based representations and position-independent k-mer representations may also be realized by the oligo kernel.  furthermore, our method provides an intuitive visualization approach to present relevant oligomers and their positional variability to the user. for that purpose a suitable measure of discriminative power can be utilized to score different motifs according to their relevance for classification. oligo kernels can therefore be applied to infer characteristic sequence features which, in turn, can be used to identify functionally important signals. this property qualifies the oligo kernel as a useful datamining tool for the analysis of biological sequences.

to demonstrate the usefulness of our approach, we applied oligo kernels to analyze translational initiation sites  for escherichia coli k- <dig> because a reliable set of biochemically verified sites is available for that case. prediction of tis is not satisfactorily solved for prokaryotic genes  <cit> . for bacteria, there are a number of gene-finding tools that reliably predict the location of genes in a genome under study. essentially, these methods work by looking for open reading frames of a certain statistically significant minimal length. but while it is obvious how to identify the end position of a predicted gene, it is by no means trivial to determine the corresponding start position as start codons are not unique; they are also used to code for amino acids inside genes. systematic studies have shown that existing gene-prediction programs perform poorly when it comes to predicting the correct tis  <cit> . consequently, many start positions are incorrectly annotated in databases and, due to the concepts used for gene annotation, these errors tend to be propagated to newly annotated genomes.

although our method is based on classification of sequences we do not intend to provide a tis prediction tool in this paper. on one hand the method provides a general tool for identification and characterization of signals in biological sequences which is not restricted to tis sequences. on the other hand our datamining approach may be viewed as a prior step for constructing tis predictors. by means of an easy visual interpretation of the inferred model it can provide new insights which in turn can steer the construction of efficient predictors. we expect that this feature will in particular be useful for analysis of prokaryotic genomes for which only small sets of experimentally verified tis exist.

oligo kernels
kernel-based learning  <cit>  provides a powerful framework for many kinds of pattern analysis tasks usually encountered in statistical evaluation of experimental data. given an input space  a kernel is simply a function . it implicitly applies a usually nonlinear transformation  to elements x, x' in input space  and then computes the inner  product within a resulting feature space :

k = Φ·Φ.     

a kernel can be viewed as a similarity measure for the input space objects x and x' which is defined as an inner product of the feature space objects Φ and Φ. the concept of kernel-induced feature spaces may first be motivated by the objective to provide an adequate representation for the data, which is more suitable for the classification task at hand than the original input space . second, the so-called kernel trick suggests to perform learning in that feature space without any explicit computation of the mapping Φ, just using inner products of the feature space representatives. the inner products in turn may be computed by some realization of the above kernel function  in a hopefully efficient way. that trick may prove useful in situations where the feature space objects are rather high-dimensional and computation of Φ is costly. as will be shown below, these objects may even be functions, i.e. objects of infinite dimensionality.

for construction of a linear classifier in feature space the discriminant for the two-class problem requires a feature space weight vector w ∈  and an scalar offset b. with an explicit feature space mapping of the input elements the primal form of the discriminant is

f = w·Φ + b.     

the sign of that discriminant can be used to assign x to one of the two classes, i.e. to realize a binary classifier. by means of the kernel trick the above primal form can be replaced by its dual representation, which does not require access to any feature space elements. the basis for constructing a kernel classifier is a training set of n labelled input space examples x <dig>  x <dig> ...,xn. using these examples, we can construct a linear discriminant in feature space without explicit computation of the feature space representatives. instead we only compute inner products according to the above kernel function weighted by parameters αi in order to get the dual form of the discriminant:



where we assumed b =  <dig> for convenience. the weights αi determine how much individual training examples contribute to the discriminant. optimal values have to be determined by some suitable learning algorithm which will be outlined below.

unlike most svm approaches which just propose a kernel and do not care about the primal form of the discriminant, i.e. about interpretability, we here first propose a suitable primal representation and then apply the kernel trick in order to provide a general learning scheme for that discriminant. by means of the primal/dual-concept of oligo functions and oligo kernels we achieve both: learnability and interpretability of the proposed model. for a suitable realization of the primal form, the idea is to represent oligomer  occurrences in terms of smooth functions which preserve positional information about oligomer locations to an adjustable extent. in order to model positional variability of the underlying biological signals we introduce some measure of positional uncertainty. the degree of positional uncertainty is controlled by some smoothing parameter σ which allows the model to be selected from a continuous space of candidates between the two extreme cases of completely position-dependent and position invariant models, respectively. an important advantage of the oligo kernel over previous position-dependent kernels is that, besides the dual representation of the feature space discriminant which is suitable for learning, it also provides a primal representation which is suitable for interpretation of the learnt discriminant. therefore, classifiers based on oligo kernels not only provide a method for predicting signals in sequences but they may also help to identify relevant k-mers of any length and to analyze their positional variability. the two kinds of representations are detailed in the following.

primal representation: oligo functions
for the primal representation of the feature space discriminant  we introduce the concept of oligo functions which encode occurrences of oligomers in sequences with an adjustable degree of positional uncertainty. for that purpose, occurrences are not represented by exact  assignment of the oligomers to their observed positions, but rather by some kind of "fuzzy" assignment according to the assumed positional uncertainty. therefore oligo functions can be viewed as fuzzy membership functions  <cit> , up to an arbitrary scaling, which in the case of fuzzy membership functions restricts the function values to the range  <cit> . in that way oligo functions assign k-mer occurrences to positions in a "soft" manner. for a convenient realization we choose these functions to be mixtures of gaussians with the variance σ <dig> of the gaussians controlling the degree of positional uncertainty. thus, for an alphabet  and a sequence s which contains k-mer ω ∈  at positions sω = {p <dig>  p <dig> ...} we obtain the oligo function



with continuous position variable t which does not need to be restricted to a discrete domain so far. the smoothing parameter σ adjusts the width of the gaussians which are centered on the observed oligomer positions and therefore it determines the degree of position-dependency of the function-based feature space representation. while small values for σ imply peaky functions, large values imply flat functions with the limiting case σ → ∞ preserving no positional information at all. the effect of positional uncertainty is shown in figure  <dig> where the gaussian bumps of two distinct oligomer occurrences result in a single bump of the corresponding oligo function. consequently, for the sequence s the occurrences of all k-mers contained in  = {ω <dig>  ω <dig> ...,ωm} can be represented by a vector of m oligo functions which yields the final feature space representation of that sequence:



note, that the feature space objects are vector-valued functions, which can be stressed using the following notation:

φs = t     

where we used the shortcut . thus, the feature space representatives are curves in the m-dimensional space of all k-mers.

if we discretize the oligo functions according to the actual number of sequence positions, we would be able to assemble feature vectors of finite dimensionality, just stacking the vectors φs of function values for all positions ti considered. then, usual vector-based learning algorithms could be applied in order to infer relevant sequence characteristics. unfortunately, this approach would only be feasible for short oligomers, i.e. for small k, because already for dna sequences with l positions the number of required vector dimensions is l × 4k while for protein sequences it is l × 20k. in our application we used l =  <dig> positions and therefore we would have got nearly a million dimensions for representation of hexamer occurrences, which is prohibitive for usual vector-based learning schemes.

visualization
while oligo functions in general cannot be used directly for learning of a feature space discriminant they are well-suited for the interpretation of a learnt discriminant. the latter fact is an important prerequisite for our datamining approach which provides an intuitive insight of the kernel-based sequence model. considering the primal form of the feature space discriminant, the weight vector becomes a vector-valued function arising from a linear combination of the feature space representations of the sequences. with the learnt parameters αi we can construct the vector-valued weight function of the discriminant:



which is a curve in the m-dimensional space of oligomers. for each of the m components we have a linear combination of oligo functions where the weights αi determine the contribution from each of the n training sequences. due to its primal representation based on oligo functions, an oligo kernel classifier provides an intuitive insight into its discriminant because high positive  values of the weight function contribute to prediction of the positive  class. so the user can easily inspect the learnt representation which in turn allows him to draw conclusions about the relevance of certain oligomers and their locations in terms of their discriminative power.

in order to facilitate the interpretation of the discriminant, one may restrict the analysis to the most discriminative oligomers. this can be done by ranking the component weight functions of w = t according to their l2-norm



because higher norms indicate a more important role in discrimination, selection of the corresponding weight functions helps to keep the focus on the relevant oligomers. a similar criterion has also been suggested for the position-independent spectrum kernel in order to identify discriminative motifs which can be used to distinguish real exons from pseudo exons  <cit> .

because the feature space weight vector can be represented as a vector of functions, a suitable visualization of these discriminative weight functions provides complete access to the information which has been extracted from the data. for an overview, all discriminative weight functions wi may be discretized and stored in a matrix which may be visualized as a bitmap image using grey values or color to encode the function values. using l discrete sequence positions ti, the m × l image matrix can easily be obtained as

w = .     

for longer oligomers only a subset of weight functions may be used, which can be selected according to the above l2-norm. for a closer look on the role of single oligomers the corresponding weight functions can be visualized as usual 2d function plots. examples for both kinds of visualization will be shown in the section on results.

dual representation: oligo kernels
in the previous section we have derived a feature space representation for our biological sequences, where a certain sequence si from our dataset is represented by a vector of oligo functions, i.e. a curve  in the m-dimensional space of all k-mers. while this feature space representation is well-suited for interpretation of the discriminant, it is impractical for learning the discriminant from sequence data. for that purpose we shall utilize the dual form of the discriminant, based on oligo kernels. by means of the kernel trick the dual representation is well-suited for training and any kernel-based learning algorithm  <cit>  may be utilized. with the shortcut  an inner product of two sequence representations φi, φj can be defined as



note that the second integral is a function of the distance d = |p - q| between two oligo positions p and q. this function i is equivalent to the convolution of two gaussians with equal variance. up to some constant factor, the convolution of two gaussians is a gaussian whose variance is the sum of the original variances. therefore the integral can be calculated according to



replacing the second integral in , the oligo kernel, i.e. the inner product of two feature space representatives, can be computed according to



from the above definition of the oligo kernel, it is easy to see the effect of the smoothing parameter σ. for the limiting case σ →  <dig> with no positional uncertainty, only oligomers which occur at the same positions in both sequences contribute to the sum. in general it would not be appropriate to represent oligomer occurrences without positional uncertainty, which would imply zero similarity between two sequences if no k-mer appears at exactly the same position in both sequences. regarding the other extreme σ → ∞ with maximum positional uncertainty, position-dependency of the kernel completely vanishes: all terms of oligomers, occurring in both sequences, contribute equally to the sum, regardless of their distance. together with the normalization which is introduced below, in the latter position-independent case the oligo kernel becomes identical to the so-called spectrum kernel  <cit>  which has been proposed for position-independent representation of sequences.

regarding computational complexity of the oligo kernel, for two sequences of length l <dig> and l <dig>  respectively, the above oligo kernel  can be computed by evaluation of at most l <dig> × l <dig> exponential functions. for a speed-up of the computations these evaluations may be realized by fast table lookups. fortunately, the maximum number of l <dig> × l <dig> evaluations is hardly reached in practice, because we only have to compute terms of  for oligomers occurring in both sequences. only in cases where oligomers often occur at many positions in both sequences the complexity is rising towards o. these cases become more unlikely for longer oligomers and therefore, with an efficient implementation, the computational cost rapidly decreases with increasing oligomer length k.

normalization
according to the above derivation, the feature space representations may have different norms. here, for the representation of biological sequences, the norm of a feature space object roughly corresponds to the absolute count of the oligomer occurrences. in order to improve comparability between sequences of different length, the feature vectors should be normalized to unit l2-norm. therefore we compute the normalized oligo kernel according to



training
the basis for learning a kernel classifier is a training set of n labelled example sequences  = {, ,...,} with yi =  <dig> or yi = - <dig> for positive and negative examples, respectively. because we want to propose a general learning scheme which is even applicable to problems with small data sets, a regularized learning scheme is essential in order to prevent overfitting. many regularized learning schemes are available, among which soft-margin svms  <cit>  are usually best-known. for convenience, we here use regularized least squares classifiers  <cit> , which have been shown to provide equivalent performance on many classification problems, as compared with svms. implementation of these kernel classifiers is very simple because training can be achieved by solving a system of n linear equations, as shall be outlined below. given the set  containing n labelled sequences, with labels yi ∈ {- <dig> } contained as components in n-vector y, we shall now train a kernel classifier based on discriminant  using the proposed oligo kernel. with the kernel matrix  which contains all possible inner products of the training set examples in feature space, we realize a classifier by minimizing the λ-penalized prediction error



with respect to parameter vector α = t. by means of the regularization parameter λ >  <dig> the penalty controls the norm of the feature space discriminant in order to avoid overfitting. bounding the norm of the discriminant restricts the learning algorithm to put higher weights only on "effective" features which are important for classification. in that way learning is forced to focus on that task-specific information which can actually be drawn from the data. choosing the parameter vector α to yield a minimum of the above error, an optimal realization can be found by solving the following system of linear equations:

α = y     

where i is the n × n identity matrix. because solving the above system in general is of complexity o the computational cost of the learning algorithm is rapidly increasing for an increasing training set. in practice we observed that effective routines for matrix inversion enable training with a few thousands of examples. however, on one hand this behavior is a general shortcoming of kernel methods and recently several approximations have been suggested, which can effectively decrease the computational cost  <cit> . with these approximations training with a few  <dig> of examples becomes feasible. on the other hand, for our case study on prokaryotic tis we encountered data sets with at most  <dig> exemplary tis sequences which can even be handled with the above learning scheme.

RESULTS
datasets
in order to create a reliable dataset we utilized e. coli genes from the ecogene database  <cit>  and considered only those entries with biochemically verified n-terminus. for training, validation and testing of classifiers for both the positive and negative examples we chose the sequences according to large windows of  <dig> nucleotides  length around the candidate start codon, in order to encounter the risk of missing relevant information. the positive examples were  <dig> sequences covering a range of  <dig> nt upstream to  <dig> nt downstream of the annotated tis. for the negative examples we extracted sequences centered around a codon from the set {atg, gtg, ttg} and accepted sequences, if the codon was in-frame with one of the appropriate start sites used as positive case, if its distance was <  <dig> nt and if no in-frame stop codon occurred in between. the rationale for this approach comes from our analysis of predictions for the e. coli genome of those tools integrated into yacop  <cit> : we found that nearly two-thirds of the predictions inconsistent with the annotated tis were located within a distance less than  <dig> nt to its respective start codon . therefore we concluded that these false sites are the most difficult candidates for tis discrimination. we finally obtained a set of  <dig> negative examples with  <dig> of them being located downstream and  <dig> upstream of a tis.


prediction performance
to analyze the tis sequences by means of the proposed oligo kernel, first of all we tested the predictive power of the feature space representation as it depends on different oligomer lengths. in order to compare their discrimination performance, we trained classifiers using oligo kernels according to k-mers of length k =  <dig> ..., <dig>  for a reliable estimate of the prediction error we performed  <dig> runs for each oligomer length where each run comprises training, validation for adjusting the hyperparameters σ and λ and final testing on data which have not been used to adjust the parameters of the classifier. the latter was done on a test set which contained one third of the data. from the remaining data two thirds were used for training and one third for validation of the classifiers with respect to hyperparameter values. thus, for each run the data were randomly partitioned into training, validation and test sets of size  <dig>   <dig> and  <dig>  respectively. for validation we varied the smoothing parameter σ ∈ { <dig> ,  <dig> ,  <dig>   <dig> , 2} and the regularization parameter λ ∈ { <dig> · <dig> i|i =  <dig>   <dig> ..., 100} in order to minimize classification error on the validation set. with the optimal hyperparameter values we then trained a classifier on the union of training and validation set. finally that classifier based on optimal hyperparameters was evaluated on the test set to yield the final classification error. the mean test error over the  <dig> runs together with the corresponding standard deviation is shown in table  <dig>  additionally, table  <dig> also shows the mean optimal σ over the  <dig> runs. the table shows that the lowest error rate of  <dig>  percent has been achieved for the 3-mer kernel with a mean value  <dig>  of the hyperparameter σ which models the positional variability of the oligomers. this result indicates that the best representation does not necessarily require the lowest positional variability. note that the mean error is monotonically increasing for decreasing oligomer lengths below and for increasing lengths above the best length  <dig>  therefore we did not try to model the occurrences of k-mers for k >  <dig>  to investigate the effect of an enlarged data set, we chose additional tis sequences according to genbank annotations to yield a data set with about four times the number of examples of our original ecogene-based set. we included all non-hypothetical coding sequences from the e. coli  dataset, including those from the ecogene dataset, as positive examples. the negative examples were generated in the same way for the ecogene-based set. so we obtained an enlarged set of  <dig> positive and  <dig> negative examples. the enlarged set was randomly partitioned, as described above, with the same proportions of training, validation and test sets. the average performance over  <dig> runs with different partitions is shown in table  <dig>  unfortunately, the increased data set size resulted in a worse performance for all oligomer lengths, although an improvement would have been expected. therefore we decided not to use the enlarged data set for further analysis because we could not exclude the possibility of a large number of erroneous annotations for tis which had not been verified experimentally.

visualization
for interpretation of the learnt tis models, we applied the visualization techniques which have been described above. to visualize the feature space discriminant we first generated an overview bitmap image of the matrix w in equation  which contains the discretized functions of the primal form weight curve  as rows. the image contains the discriminative functions as horizontal lines, with one line for each oligomer. the color of a pixel indicates the level of the corresponding function at each integer position within a window of length  <dig> nt. figure  <dig> shows a  <dig> ×  <dig> pixel image which was obtained from an average over all optimal w-matrices from the above  <dig> runs using the trimer kernel. the complete matrix of function values is scaled to yield a unit maximum which is attained by the atg-function at position  <dig>  in addition, for noise reduction all matrix elements with an absolute value below  <dig>  are set to zero. in figure  <dig> four exemplary weight functions for trimers atg, gga, aaa and ttt are depicted as 2d-plots showing more detailed information. the complete set of discriminative functions for k =  <dig> can be found on the web page  <cit> .

oligomer ranking
in the following we use the terms monomer, dimer etc. instead of the more specific terms mononucletide dinucleotide etc. in order to identify the most important k-mers for the kernel-based tis prediction, we computed the l2-norm in equation  for all oligomer-specific weight functions of the learnt discriminants. the ten most discriminative k-mers are identified using the average norm over the above  <dig> runs. the resulting rankings for k =  <dig> ..., <dig> are depicted as bargraphs in figure  <dig>  the height of the bars is proportional to the average norm of the corresponding k-mer weight function and has been scaled to yield a unit maximum height for each k. for the monomer kernel we found that a is most discriminative followed by g, t, c in decreasing order of the norm. for dimer occurrences the most discriminative oligomer is gg followed by ga, ag, at, tt and aa, again in decreasing order. for the longer k-mers depicted in figure  <dig>  from the bargraphs one can identify two major groups of motifs which are most prominent: on one hand the start codon itself is an important signal for tis prediction. therefore some motifs which contain atg are associated with high norms and high positive values of the corresponding weight functions at position  <dig>  this can be observed best for the discriminative weight function of trimer atg itself .

from these motifs and the associated weight functions we can conclude that c or t at position - <dig> and a at position  <dig> seem to be characteristic for tis as they show high positive peaks at the corresponding positions . from the pentamer and hexamer occurrences one can deduce a preference for aaa or gct as a second codon. start codons gtg and ttg are not characteristic for tis and therefore the discriminative weight functions of these trimers show high negative peaks at position  <dig> which can be seen from the overview matrix image of figure  <dig> 

on the other hand oligomers contained in aaggaga or gaggaga have high rank. the corresponding discriminative functions usually put high positive weights on regions located about  <dig> nt upstream the start codon . obviously, these weight functions utilize the presence of a shine-dalgarno sequence for discrimination.

besides the two prominent groups of motifs related to start codon and shine-dalgarno sequence, interestingly, poly-a and poly-t motifs seem to be discriminative, too. as it can be seen from the discriminative functions for aaa and ttt in figure  <dig>  poly-a motifs mainly occur downstream next to the start codon while poly-t occurrences seem to be characteristic in a region ≈  <dig> nt upstream.

the corresponding discriminative functions for the ten most important oligomers for lengths  <dig> ..., <dig> can be found on the before mentioned web page.

performance comparison
in order to compare our approach with standard methods for modelling of sequence sites, we utilized inhomogeneous, i.e. position-dependent, markov models which are widely used for the estimation of positional weight matrices. the probabilistic models can easily be estimated from the data and do not require any hyperparameter optimization. for evaluation we utilized one model for each of the two classes  and assigned a sequence to that class with highest probability of the corresponding model. in the case of zero probabilities for both models, as a tie-breaking rule we assigned the sequence to that model with the smallest number of zero probability positions. classification was considered correct if the model with the smaller number was associated with the right class. for training we estimated the position-specific oligomer probabilities of the model using two thirds of the data while testing was performed on the remaining third. prediction performance on the test set was again averaged over  <dig> runs with different random partitions of the data. for comparison with a position-independent kernel we utilized the spectrum kernel  which can be obtained as a special case of the oligo kernel for σ → ∞. therefore the spectrum kernel was evaluated in the same way as the above oligo kernels. the methods were compared with the best previous oligo kernel, i.e. the trimer kernel , and with a combined oligo kernel  which incorporates all k-mers for k =  <dig> ..., <dig>  simply by adding the six different kernels. with respect to the primal representation of the discriminant, adding the kernels means to stack the vectors of oligomer-specific weight functions for different k-mer lengths. obviously this implies an augmented feature space which might combine the advantages of representations based on short and long oligomers. for each of the six added kernels we chose the smoothing parameter according to the median of the optimal values obtained from the  <dig> previous runs with single oligo kernels which resulted in values  for the length-specific smoothing parameters .

as can be seen from table  <dig> the position-dependent oligo kernels yield the best performance, while the best position-independent spectrum kernel with k-mer length  <dig> failed to discriminate tis correctly for nearly half of the data. with an average error rate of  <dig> %, performance was not much better than classification by chance, indicating the importance of position information for tis prediction. with the combined kernel ok <dig> .. <dig> our method could successfully exploit the combination of different k-mer representations and slightly improved the performance of the trimer kernel. in addition, table  <dig> shows that 0th and 1st order markov models, based on monomer  and dimer  occurrences, respectively, performed equally well. we found that for the data at hand the 0th order markov model could not be improved using higher order markov models. using markov models above order  <dig> the performance even broke down, with a resulting error of ≈ 30%. therefore in our case the markov model based representations do not provide an adequate tool for analyzing occurrences of oligomers above length  <dig>  as shown in table  <dig> even for dimers the oligo kernel provides better discrimination than the 1st order markov model and therefore it may be preferred over the more simple model. considering the occurrences of monomers the 0th order markov model performs slightly better than the corresponding oligo kernel with k =  <dig>  while theoretically the oligo kernel should not be worse, in practice it is difficult to find the optimal hyperparameters for best discrimination. performing a two-dimensional grid search for smoothing parameter σ and regularization parameter λ, it cannot be expected to find the exact global optimum. on the other hand, for monomer occurrences there seems to be less positional uncertainty, so that the smoothing parameter is not likely to improve the representation anyway. therefore the oligo kernel does not seem to be the best tool for pure analysis of monomer occurrences.

discussion
we have introduced a novel concept of datamining on biological sequences and exemplified its application on the analysis of prokaryotic translational initiation sites.

the interpretation of our results makes clear that the most pronounced signal indicating a tis besides the start codon is the shine-dalgarno region  <cit> . with our approach we found oligomers contained in aaggaga or gaggaga to be most discriminative. the corresponding discriminative functions indicate that for characteristic tis these oligomers are located ≈  <dig> nt upstream the start codon. for trimers this can be seen in figure  <dig> and  <dig>  these results correspond to known findings both with regard to composition and to localization  <cit>  and confirm the validity of our approach. the variation in spacing between the start codon and the shine-dalgarno region determined previously  <cit> , correlates well with the wider peak of the discriminative functions . in addition we observed some evidence for a downstream box, which was previously identified as an additional element modulating the expression level  <cit> . the evidence is a weak positive maximum of the discriminative function for aaa  downstream the tis. the ranking of discriminative hexamer functions  also shows a preference for the codon aaa immediately following the start codon, as proposed in  <cit> . in addition also gct seems to be a characteristic second codon as implied by pentamer and hexamer rankings in figure  <dig> 

the analysis of individual oligo functions  makes it possible to identify subtle signals: the slight decay observed in a region ±  <dig> nt around position  <dig> in the plots of the discriminative weight functions for atg and gga is due to our selection of negative examples . the weak local minima of these functions seen upstream and downstream of position  <dig> are simply caused by shifted atg and gga sites of positive examples occurring also in our negative examples. the positive signal for tat and cat at position - <dig>  is due to the prominence of the oligomer atg at position  <dig>  but also indicates a preference for t and c at - <dig>  this is also indicated by the tetramer ranking in figure  <dig> which identifies tatg and catg as discriminative oligomers.

comparing our approach with other methods we found that position-dependency is crucial for an appropriate tis representation. the position-independent spectrum kernel showed a bad discrimination performance which does not qualify that method for prediction or for analysis of tis sequences. on the other hand the 0th order markov model showed a competitive performance as compared with the monomer-based oligo kernel. thus, for the analysis of monomer occurrences the oligo kernel seems to be "oversized" and we cannot recommend its application for merely that purpose. however, we argue that most biological signals are not well-characterized by monomer occurrences. in the living cell, sequence patterns for realization of relevant signals have to be selective and recognition of the these patterns is usually robust with respect to small variations. therefore the observed patterns are more complex and show some specific variability. for that reason, in general a collection of longer oligomers, i.e. certain motifs should be more suitable for the modelling of biological signals. the oligo kernel can be used to identify these motifs and provides a tool for analyzing their positional variability. unlike markov model based representations, it is not restricted to short oligomers in practice, but may be used for k-mers of any length. by means of an effective regularization, characteristic occurrences of longer oligomers may even be found with small data sets, usually encountered in prokaryotic tis analysis. as already mentioned above, computational cost is even decreasing for longer oligomers.

we made clear that oligo functions are valuable to identify relevant signals in biological sequences. the presented dissection of tis clearly identifies those areas bearing relevant information. these findings directly influence the design of tis prediction tools e.g. with respect to the length of up- and downstream regions that have to be analyzed or the selection of discriminative oligomers whose occurrences have to be considered. attractive features of our approach are its flexibility with respect to oligomer length and position conservation. both parameters allow an easy adaptation to different biological problems. we conjecture an important role of the oligo kernel in computational biology: in addition to the application presented here, the kernel is well-suited to analyze and model splice sites, transcription factor binding sites or eukaryotic transcription initiation sites. although we only presented its application to dna sequences, also sites on protein sequences, like signal peptide cleavage sites are well suited for analysis by means of the oligo kernel. we are currently preparing a web-interface which will allow biologists to perform the analysis, as presented here, on their own sequence data.

CONCLUSIONS
we introduced the oligo kernel for datamining on biological sequences and we showed that it can provide a valuable tool for the identification and analysis of relevant signals. in the case of translation initiation sites  we could clearly deduce the most discriminative motifs and their positional variation from example sequences. these findings directly influence the design of tools for tis prediction e.g. with respect to the length of up- and downstream regions that have to be analyzed. attractive features of our approach are its flexibility with respect to oligomer length and position conservation. by means of these two parameters oligo kernels can easily be adapted to different biological problems. we showed that the position independent spectrum kernel can be viewed as a special case of the oligo kernel and that for the analysis of tis sequences the incorporation of position information is crucial. in contrast to other position-dependent sequence kernels our approach not only provides learnability of a suitable model but also an easy interpretation of the learnt representation.

authors' contributions
pm designed, implemented and tested the oligo kernel and the associated visualization method and he drafted most of the manuscript. rm accounted for biological expertise and substantial parts of the draft. mt contributed in biological expertise and prepared the datasets. bm assisted in coordination and manuscript writing. all authors read and approved the final manuscript.

figures and tables
