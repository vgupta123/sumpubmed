BACKGROUND
nowadays microarray technique has become an important and useful tool in functional genomics research. this high throughput technique allows the characterization of the gene expression of the whole genome by measuring the relative transcript levels of thousands of genes in various experimental conditions or time points  <cit> . microarray data analyses have been widely used to investigate various biological processes such as the cell cycle process  <cit>  and the stress response  <cit> .

although the microarray technology has been developed for more than a decade, typical microarray data still contain more than 5% missing values with up to 90% of genes affected  <cit> . missing values could be generated by various reasons, including technological failures, administrative error, insufficient resolution, image corruption, dust or scratches on the slide  <cit> . as many downstream analysis methods  require complete datasets, missing value estimation becomes an important pre-processing step in the microarray data analysis  <cit> .

the missing values in the microarray dataset are traditionally estimated by repeating the microarray experiments or simply replacing the missing values with zero or the row average . because these approaches are either time-consuming or leading to serious estimation errors, more advanced missing value imputation methods are needed to solve the missing value problems. in  <dig>  troyanskaya et al. published the first two missing value imputation algorithms based on the k-nearest neighbors  and the singular value decomposition   <cit> . since then, a lot of missing value imputation methods have been proposed such as bayesian principal component analysis   <cit> , gaussian mixture clustering imputation   <cit> , conditional ordered list imputation  <cit> , random-forest-based imputation  <cit>  and so on.

among the existing missing value imputation methods, the regression-based methods are very popular and contain many algorithms, including least squares imputation   <cit> , local least squares imputation   <cit> , sequential local least squares imputation   <cit> , and iterated local least squares imputation   <cit> . lsimpute estimates the missing values in the target gene by using a weighted average of the k estimates from the k most similar genes. each estimate is attained by constructing a single regression model of the target gene by a similar gene. llsimpute represents the target gene as a linear combination of k similar genes by a multiple regression model and uses the regression coefficients to estimate the missing values. sllsimpute modifies the llsimpute by estimating the missing values sequentially from the gene containing the fewest missing values and partially utilizing these estimated values. illsimpute modifies the llsimpute by not choosing the similar genes with a fixed number k but defining the similar genes as the genes whose distances from the target gene are less than a distance threshold and then runs llsimpute iteratively.

in this study, we focus on the regression-based methods because these methods have been shown to have better performances than the other existing methods in many testing microarray datasets  <cit> . to further improve the performance of the regression-based methods, we propose shrinkage regression-based methods which use a shrinkage estimator to replace the least square estimator for the estimation of the regression coefficients in the regression model. the shrinkage estimator such as the james-stein estimator has been shown to dominate the least square estimator in many statistical models  <cit> . by adopting our new regression coefficients in the regression-based methods, we showed that an improvement on missing value estimation in six testing microarray datasets could be achieved.

methods
in this study, we propose using the well-known shrinkage estimation approach to improve three existing regression-based methods  for missing value estimation. we call our proposed methods the shrinkage regression-based methods . in the following subsections, we first introduce the shrinkage estimation approach and then describe the proposed shrinkage llsimpute, shrinkage sllsimpute, and shrinkage illsimpute.

shrinkage estimation approach
one of the shrinkage estimators, the james-stein estimator, for the normal distribution is introduced here. suppose that y <dig>  y <dig>  ..., yk are independent normal random variables and these k random variables all have a common known variance, but their means are unknown and different. let yi ~ n and y = . then we have y ~ n, where θ =  and i is a k × k identity matrix. let d = , ..., dk) be an estimator of θ. under the squared error loss function

  lθ-dy=∑i=1kθi-diy2=θ-dy <dig>  

we are interested in finding estimators of θ such that the mean squared error ey  is minimized. an intuitive estimator of θ is y . however, stein  <cit>  showed that when k ≥  <dig>  there exists other estimators with smaller mean squared error than the intuitive estimator y. for k ≥  <dig>  under the squared error loss, the intuitive estimator y is dominated by the estimator

  θ^js=1-k-2sy2y, 

where sy2= ∑i=1kyi <dig> <cit> . the estimator in  is called the james-stein estimator in the literature  <cit> . with the form in , the james-stein estimator of θi is

  θ^ijs=1-k-2sy2yi. 

it is worth noting that the estimator of θi in  depends on not only the random variable yi, but also the other variables y <dig>  ..., yi- <dig>  yi +  <dig>  ..., yk because of the term sy <dig>  on the contrary, the intuitive estimator θ^i=yi does not use the other variables y <dig>  ..., yi -  <dig>  yi +  <dig>  ..., yk but only uses yi to estimate θi. it has been shown that estimators using other variables' information provide more accurate estimation for θ than the intuitive estimator does  <cit> . in fact, except for the estimator in , the estimators of the form

  θ^ijs=1-csy2yi 

all have uniformly smaller mean squared error than the intuitive estimator yi, for k ≥  <dig> and  <dig> <c < <dig> . among all the estimators of the form in , the estimator in  has the minimized mean squared error. the shrinkage estimation approach has also been shown to have good performance in interval estimation  <cit> . based on the james-stein estimator in , we developed shrinkage regression-based imputation methods.

notations
in a typical microarray data matrix, the rows are the genes under investigation and the columns are the experimental conditions or time points. the microarray data matrix is obtained by performing a series of experiments on the same set of genes. we use g∈ℝm×n to represent a microarray data matrix with m genes and n experiments, and assume m≫n which is true for microarray data. in the matrix g, a row git∈ℝ1×n represents the expressions of the ith gene in n experiments:

  g=g1t⋮gmt∈ℝm×n 

where git denotes the transpose of a column vector gi. if there is a missing value in the lth position of the ith gene, we denote it as , i.e. gi,l = gil = .

shrinkage local least squares imputation 
in the llsimpute method  <cit> , a target gene with missing values is represented as a linear combination of k similar genes. rather than using all genes in the dataset, only k genes with high similarity to the target gene are used. the procedure of selecting k similar genes is as follows. suppose that the target gene is the first gene and has a missing value α  in the first position, i.e. α = g <dig> in the matrix g∈ℝm×n. the pearson correlation coefficient is used to find the k similar genes. these k similar genes are called the k-nearest neighbor genes, which have the k largest absolute values of the pearson correlation coefficients. the pearson correlation coefficient r1j between the target gene and the jth gene is defined as

  r1j=1n-2∑t=2ng1t-ḡ1σ1gjt-ḡjσj 

where ḡj and σj denote the average and the sample standard deviation of the vector . when computing the correlation coefficients, gj <dig> is not used because it corresponds to the position of the missing value in the target gene. based on these selected k-nearest neighbor genes, a matrix a∈ℝk× and two vectors b∈ℝk× <dig> and w∈ℝ× <dig> can be formed as follows

 g1tgs1t⋮gskt=αwtba=αw1w2wn-1b1a <dig> a <dig> a <dig> n-1⋮⋮⋮…⋮bkak,1ak,2ak,n- <dig> 

where α is the missing value in the target gene g <dig> and gs <dig> …,gsk are the k-nearest nieghbor genes of the target gene g <dig>  each row of matrix a consists of the last n -  <dig> elements of one k-nearest neighbor gene gsi,  <dig> ≤ i ≤ k. the elements of the vector b comprise of the first elements of all these k-nearest neighbor genes and the elements of the vector w are the last n -  <dig> elements of the target gene g <dig>  with the matrix a, and the vectors b and w, the least squares problem is formulated in llsimpute as

  minxatx-w <dig>  

solving the above problem, the least square regression coefficients x^∈ℝk× <dig> are acquired as

  x^≜t=-1aw. 

in the llsimpute, the missing value is then estimated by

  α=btx^=x^1b1+x^2b2+…+x^kbk. 

in this study, we want to improve the performance of llsimpute by adjusting the regression coefficients in . our shrinkage llsimpute associates the llsimpute method with the shrinkage estimator to impute the missing values. our method replaces the regression coefficient estimators x^ in  by the shrinkage estimator, and then use the new estimator to estimate the missing value α in . however, we found that applying the existing shrinkage estimator in  did not always improve the performance of llsimpute. therefore, we tested different forms of the shrinkage coefficient estimators and conceived a feasible coefficient estimator to improve the llsimpute method. we proposed using the shrinkage regression coefficients

  x^ijs=1-σ2ñs2x^i 

to replace the conventional coefficients in , where σ <dig> is the variance of the coefficients , s is the norm of the coefficients , k is the row number of the matrix a and ñ  is the column number of the matrix a, which equals n -  <dig> in this case. finally, the missing value is estimated as

  α=btx^js=x^1jsb1+x^2jsb2+…+x^kjsbk 

where x^js=t.

shrinkage sequential local least squares imputation 
in the llsimpute, it does not use the information of genes with missing values since the existence of missing values hinders the use of the other observed values of that gene. in the sllsimpute method, it estimates the missing values sequentially from the gene containing the fewest missing values and partially utilizes these estimated values. the details of sllsimpute  <cit>  is described as follow. first, the microarray matrix g∈ℝm×n is divided into two submatrices: a complete matrix g1∈ℝm1×n consisting of genes without missing values and an incomplete matrix g2∈ℝ×n consisting of genes with missing values. in the incomplete matrix g <dig>  the genes are sorted by their missing rates. the first gene has the smallest missing rate and the last gene has the largest missing rate. the missing rate is calculated by

  ri=cin, 

where ci is the number of missing values in i-th gene. the imputation is executed sequentially from the first gene of g <dig>  that is, the first gene of g <dig> which has the smallest missing rate is selected as the target gene firstly. then llsimpute is applied to estimate the missing values in the target gene by finding the k-nearest neighbour genes from the complete matrix g <dig> and then using the formula in  to estimate the missing values. after filling all the missing values in the target gene, it is moved to g <dig>  then the second gene of g <dig> is selected as the target gene and repeat the same process again. by moving the genes whose missing values have been imputed to the complete matrix, the previous target genes with imputed values can be utilized for the missing value estimation of the following target gene. however, too many missing values in a gene will result in big estimation error and reusing a gene with too many imputed values will reduce the imputation performance. therefore, only the genes with missing rates less than a threshold r <dig> are reused, where r <dig> is set as the average missing rate of all genes containing missing values, i.e.,

  r0=∑i=1m-m1ci×n 

by a similar argument as for the shrinkage llsimpute, we apply the shrinkage estimator to sllsimpute. the shrinkage sllsimpute adjusts the coefficients of the regression model by the formula in  and use the formula in  to estimate the missing values.

shrinkage iterated local least squares imputation 
llsimpute and sllsimpute methods select k-nearest neighbor genes for a target gene, where k is a fixed number. however, in the illsimpute method  <cit> , it does not fix the number of similar genes selected. alternatively, it defines the similar genes as the genes whose distances to the target genes are less than a distance threshold δ . the rationale of using a distance threshold rather than using a fixed number of similar genes is that some of the k-nearest neighbor genes are already far away from the target gene and are not very similar to the target gene.

the procedure of illsimpute is as follows. in the first iteration, missing values of each target gene are filled with the row average. then a distance threshold δ  is used to select the similar genes of each target gene. finally, llsimpute method is used to estimate the missing values of each target gene. in the later iteration, illsimpute method uses the imputed results from the previous iteration to reselect the similar genes of each target gene  and applies llsimpute method to re-estimate the missing values.

by a similar argument as for the shrinkage llsimpute, we apply the shrinkage estimator to illsimpute. the shrinkage illsimpute adjusts the coefficients of the regression model by the formula in  and use the formula in  to estimate the missing values.

RESULTS
we conducted several experiments to compare the performances of our shrinkage regression-based methods and the original regression-based methods under different scenarios. in the first subsection, we introduce the benchmark datasets. in the second subsection, we describe how we measure the performance of various imputation methods. in the following three subsections, we report the comparison results for different number of similar genes used, different missing rates, and different noise levels. finally, we further compare the performances of our shrinkage regressioni-based methods and three existing non-regression-based methods.

datasets
considering the effects of dataset selection and types of microarray experiments on the performance of an imputation method, six representative datasets  were used in our simulations. they were ogawa's data from the study of phosphophate accumulation and poly-phosphophate metabolism   <cit> , bohen's follicular lymphomas data   <cit> , the data from a lymphoma study   <cit> , the data from brauer's experiments which studied the physiological response to glucose limitation in batch and steady-state cultures of yeasts   <cit> , and shapira's oxidative stress data   <cit> . we divided shapira's data into two datasets because the authors used one kind of oxidative chemical in the experiment in shapira04a, but they used another kind of oxidative chemical in the experiment in shapira04b. the six microarray datasets were used as benchmark datasets in numerical experiments to compare the performances of our shrinkage regression-based methods and the original regression-based methods. each dataset was processed by deleting the genes with missing values to generate a complete data matrix, and the details of these datasets were listed in table  <dig> 

the performance measure
a common criterion used to compare the performances of different imputation methods is the normalized root mean squared error   <cit> . from a microarray dataset, we can obtain an original data matrix m <dig> with m genes and n experiments, and then we can construct a complete matrix m1∈ℝm1×n by deleting the genes with missing values. after the complete data matrix m <dig> is established, we randomly select a specific percentage of the elements of m <dig> and regard these elements as missing values. then we estimate the missing values using various imputation methods and compare their performances using nrmse which is shown below:

  nrmse=meanstd 

where yguess and yans are vectors whose elements are the estimated values by an imputation method and the known answers for all missing entries, respectively.

performance comparison for different k values
a parameter k, the number of similar genes used, has to be determined before using two regression-based methods . since the performance of both algorithms is known to be affected by the k value used and different microarray datasets may have different optimal k values  <cit> , we tested several possible k values  on six benchmark datasets. table  <dig> listed the optimal k values for llsimpute and sllsimpute on each of the six benchmark datasets. another regression-based method  does not have the parameter k and therefore was not considered in this numerical experiment.

for each of the six benchmark dataset, we also compared the performances of the proposed shrinkage regression-based methods and the original regression-based methods for several possible k values . in our numerical experiments, missing rate for each benchmark dataset was set to be 5%. namely, for each dataset, we randomly removed 5% entries of the complete matrix to generate a matrix with missing values, and then estimated the missing values using the shrinkage and the original regression-based methods. the same procedure was run for five independent rounds and the average nrmse of these five simulations was used to compare the performances of different imputation methods.

as shown in figure  <dig>  the proposed shrinkage llsimpute outperforms llsimpute for all k values and all benchmark datasets. similarly, the proposed shrinkage sllsimpute outperforms sllsimpute for all k values and all benchmark datasets . the simulation results suggest that utilizing a shrinkage estimation approach to adjust the coefficients of the regression model can improve the performances of the original regression-based methods.

performance comparison for different missing rates
in real applications, different microarray data may have different missing rates to be imputed. it is informative to know how an imputation method performs for different missing rates. therefore, we compared the performances of the shrinkage regression-based methods and the original regression-based methods on the microarray data with different missing rates . namely, for each of the six benchmark dataset, we randomly removed x%  entries of the complete matrix to generate a matrix with missing values, and then estimated the missing values using the shrinkage and the original regression-based methods. the same procedure was run for five independent rounds and the average nrmse of these five simulations was used to compare the performances of different imputation methods. note that the optimal k value used for each benchmark dataset was listed in table  <dig> 

performance comparison for different noise levels
in real applications, different microarray data may contain different levels of noises. it is informative to know how an imputation method performs for different levels of noises inherent in the microarray data. therefore, we compared the performances of the shrinkage regression-based methods and the original regression-based methods on the microarray data with different noise levels. for each of the six benchmark dataset, we added gaussian noises with different levels into the data. the magnitudes of the noises were set in terms of the standard deviations ranging from  <dig> to  <dig>  with a step size  <dig> . in our numerical experiments, missing rate for each benchmark dataset was set to be 5% and the optimal k value used for each benchmark dataset was listed in table  <dig>  namely, for each dataset , we randomly removed 5% entries of the complete matrix to generate a matrix with missing values, and then estimated the missing values using the shrinkage and the original regression-based methods. the same procedure was run for five independent rounds and the average nrmse of these five simulations was used to compare the performance of different imputation methods.

performance comparison with three existing non-regression-based methods
we have shown that our shrinkage regression-based methods perform better than the existing regression-based methods. still, it would be interesting to know whether our shrinkage regression-based methods provide more accurate missing value imputation than the existing non-regression-based methods do. therefore, we compared the performances of our shrinkage regression-based methods and three existing non-regression-based methods  on the six benchmark microarray datasets. as shown in figures  <dig>   <dig>   <dig>  the proposed shrinkage regression-based methods outperform these three existing non-regression-based methods for almost all missing rates and all benchmark datasets. taken together, our shrinkage regression-based methods are competitive alternatives to the existing methods for microarray missing value imputation.

CONCLUSIONS
imputation of missing values is a very important aspect of microarray data analyses because most of downstream analyses require a complete dataset. therefore, exploring accurate and efficient methods for estimating missing values has become an essential issue. in this study, regression-based methods associated with a shrinkage estimation approach are proposed to estimate missing values in the microarray data. our methods take the advantage of the correlation structure existing in the microarray data and select similar genes for the target gene by pearson correlation coefficients. besides, our methods incorporate the least squares principle, utilize a shrinkage estimation approach to adjust the coefficients of the regression model, and apply the new coefficients of the regression model to estimate missing values. simulation results show that the proposed shrinkage regression-based methods provide more accurate missing value estimation for various types of datasets than the original regression-based methods do. since our proposed methods can be applied to modify any kind of regression-based methods and can provide accurate missing value estimation, they are competitive alternatives to the existing regression-based methods.

competing interests
the authors declare that they have no competing interests.

authors' contributions
wsw conceived the research topic and provided essential guidance. hw developed the alogirthm. ccc did all the simulations. hw, ccc, ycw, and wsw wrote the manuscript. all authors have read and approved the final manuscript.

