BACKGROUND
the calculation of an nmr  structure is most often realised in parallel with the assignment of noes . this task can be automatically performed in the software aria   <cit> . the aria program uses the concept of ambiguous distance restraints  <cit>  to convert multiple assignment possibilities for an noe into a single restraint. an iterative protocol allows to identify unlikely assignments and noise peaks to progressively reduce the ambiguity and clean the dataset.

in the first iteration, all assignments that are consistent with the chemical shift assignment are applied to the structure. in each iteration, the current set of restraints is used to generate a structure ensemble. statistics are performed after each iteration on each possible assignment and on how often each restraint is violated as a whole. the least likely assignment possibilities, and systematically violated restraints are removed. this results in a restraint list with fewer possibilities per restraint, and where the restraints that most likely correspond to noise peaks are removed. after the last iteration, the best energy structures are refined using a short molecular dynamics run in water  <cit> .

the current state of the protocol including ambiguous assignments and distance violations is summarised in several report files located in each iteration directory. analysing such text files is difficult since they contain a large number of data. aria was thus extended to allow the generation of an interactive contact map, which provides a detailed analysis of the restraints and restraint contributions.

analysing the quality of nmr structure is a key step into the validation of an aria calculation. in that respect, it was recently shown  <cit>  that profiles of quality scores calculated on individual residues along the biomolecular structure can be essential to detect possible sources of error in the spectral assignment. several extensions of aria were therefore implemented in order to generate postscript files describing the structural quality and the restraint violations at the residue level.

implementation
aria is written in the programming language python. the version  <dig>  of aria now also supports the python extensions package numpy  <cit>  for computationally intensive matrix operations. numpy is meant to replace the older numeric package. both packages employ optimised c and fortran libraries such as blas. additionally, aria  <dig>  requires the matplotlib  <cit>  module to plot graphics during the analysis. for setting-up a project, aria offers a graphical user interface  written in python and based on the tcl/tk and tix graphics libraries. the modular and highly object-oriented design of the program facilitates the addition of new features, such as the ones presented here.

interactive peak maps
in each iteration, the current assignments are stored in the form of a binary file that can be analysed afterwards. an additional section in the gui provides a way to read back the assignments and display them as a clickable contact map. this map is defined as a tk canvas widget and each pixel is clickable to present additional information about this particular contact. a pop-up window displays the corresponding assignments in tables that can be exported as text files. the peak map can be saved in postscript format.

quality profiles
postscript files describing rms  differences from distance bounds and individual whatif scores along the sequence are automatically created at the end of each iteration or after the final structure analysis. the graphics are plotted with the matplotlib plotting library interfaced with python. quality and rms profiles data are also stored in formatted text files for further use.

RESULTS
interactive analysis of peaks assignments
for each aria iteration, the interactive peak map displays the pairs of residues involved in one or more assignment possibilities. such maps can be generated from the current state of the assignment with three classes of restraints:  all restraints,  ambiguous restraints and  unambiguous restraints.

clicking on a pixel located at the position  on the map  opens a pop-up window  that shows a list of aria restraints involving atoms from residues i and j. it also gives information about each assignment possibility  of these restraints. multiple pixel selection is possible.

the restraints lists are displayed in tables, indicating different parameters such as the target distance, the percentage of structures in which a restraint was violated or the average distance found in the structure ensemble. a colour code indicates whether a restraint is globally violated. for each assignment possibility, the table indicates the relative weight, the effective distance as well as the description of the pairs of atoms involved.

this interactive tool allows the user to get a detailed analysis of the peak assignment procedure at each step of the aria protocol. since the results are presented as a two dimensional map, this tool significantly extends the information content with respect to the standard aria reports. moreover, the dynamic and graphical nature of the map may allow a rapid detection of the possible errors in the assignment process, or of the potential inconsistencies in the data.

per-residue structural quality
postscript files describing  the restraints, through the rms of deviations from the distance bounds, and  the structure quality, through the whatif  <cit>  scores, are generated automatically during a run. these parameters are displayed at the residue level, in the form of a profile along the protein sequence, or as a contact map for the rms deviations per residue pair.

the contact map displays the sum of the rms deviations  per residue pair. in the profiles, the sum of the rms of violations per residues and the mean values over the conformers of the whatif scores are plotted along the protein sequence . the most informative whatif scores are plotted, such as the packing quality z-score , inter-atomic bumps as well as the backbone conformation z-score.

an essential part in the validation of an aria calculation is the analysis of the quality of the nmr structures. classically, the overall number of violations or the rms deviations in addition to global whatif scores of the whole molecule are used to assess the quality of a structure. in the light of recent investigations  <cit> , it is clear that these global parameters may not suffice to readily detect errors in the local or global fold of a protein. the analysis of quality scores of each residue along the molecular sequence is essential to precisely detect possible sources of error in the spectral assignment. the automated generation of per-residue profiles for rms deviations and for whatif scores provides a highly integrated tool to rapidly identify regions of the structure that exhibit abnormal quality factors, and where restraints and assignments should be more thoroughly investigated.

CONCLUSIONS
the graphical tools described here represent a significative extension of the possibilities to analyse noe assignments and the quality of the solution given by aria. the tools were developed to allow an analysis at the residue level in an interactive way, which is critical for the assessment of the solution and the detection of errors.

availability and requirements
project name: aria  <dig> 

project home page: 

operating system: linux, mac os x, sgi

programming language: python

other requirements: numpy, tcl/tk, scientificpython

license: no license required.

authors' contributions
bb implemented the graphical tools of aria  <dig> and helped to draft the manuscript. ab participated in programming the tools. mn conceived aria, wr and mh implemented the version  <dig> of the program. tem drafted the manuscript. all authors read and approved the final manuscript.

