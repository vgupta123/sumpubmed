BACKGROUND
with the availability of large-scale protein-protein interactions  networks, comparative network analysis tools have been gaining increasing interest as they provide useful means of investigating the similarities and differences between different networks. as demonstrated in  <cit> , ppi networks of different species embed various conserved functional modules - such as signaling pathways and protein complexes - which can be detected through network querying  <cit>  and network alignment  <cit> . comparative network analysis methods allow us to transfer existing knowledge on well-studied organism to less-studied ones and they have the potential to detect potential functional modules conserved across different organisms and species  <cit> .

there exist several different types of comparative network analysis methods, among which global network alignment methods specifically aim to predict the best overall mapping among two or more biological networks. in order to obtain biologically meaningful results, where functionally similar biomolecules across networks are accurately mapped to each other, we should consider both the molecule-level similarity between the individual molecules as well as the similarity between their interaction patterns. the former is often called the "node similarity" while the latter is typically referred to as the "topological similarity." examination of conserved functional modules shows that many of the molecular interactions in such modules are also well conserved, clearly showing the importance of taking the topological similarity into account when comparatively analyzing biological networks. biological networks, such as ppi networks, are typically represented as graphs, where the nodes represent individual biomolecules  and interactions  between biomolecules are represented by edges connecting the corresponding nodes. given these graph representations of biological networks, the network alignment problem can be formulated as an optimization problem whose goal is to find the optimal mapping - either one-to-one or many-to-many - among a set of graphs that maximizes a scoring function that assesses the goodness of a given mapping. this is essentially a combinatorial optimization problem with a exponentially large search space, which makes finding the optimal mapping practically infeasible for large networks. as a result, existing network alignment methods employ various heuristic techniques to make the network alignment problem computationally tractable.

several network alignment algorithms have been proposed so far  <cit> , many of which focus on pairwise network alignment  <cit> . for example, graal  <cit>  analyzes the graphlet degree signature for two ppi networks, where it can generalize the degree of node by counting the number of graphlets for each node, and then align the two networks using a seed-and-extend approach. mi-graal  <cit>  extends graal by integrating further sources of information  to measure the similarity between two networks. pinalog  <cit>  is another example of pairwise network alignment algorithm, which constructs the initial mapping for protein nodes that form dense subgraphs in the respective networks. this initial mapping is further extended by subsequently finding similar nodes in the neighborhood. recently, a number of multiple network alignment algorithms have been proposed  <cit> . for example, smetana  <cit>  tries to estimate probabilistic node correspondence scores using a semi-markov random walk model, and then uses the estimated scores to predict the maximum expected accuracy  alignment of the given networks. given a set of networks, netcoffee  <cit>  generates all possible combinations of bipartite graphs for these networks, and updates the edges in each bipartite graph based on the sequence similarity of the proteins and the topological structure of the networks. then, the algorithm finds candidate edges  in the bipartite graphs and combines qualified edges through simulated annealing. beams  <cit>  is another recent multiple network alignment algorithm, which first extracts the so-called "backbones", or the minimal set of disjoint cliques in the filtered similarity graph, and then iteratively merges these backbones to maximize the overall alignment score.

in this paper, we propose a novel multiple network alignment algorithm based on a context-sensitive random walk  model. the employed csrw model adaptively switches between different modes of random walk in a context-sensitive manner by sensing and analyzing the present neighborhood of the random walker. this context-sensitive behavior improves the quantitative estimation of the potential correspondence between nodes belonging to different networks, ultimately, improving the overall accuracy of the multiple network alignment as we will demonstrate through extensive performance evaluation based on real and synthetic biological networks.

methods
maximum expected accuracy  alignment of biological networks
let us assume that we have a set of n ppi networks g={g <dig> g <dig> …,gn}. each network gn= has a set of nodes vn={v <dig> v <dig> …} and edges en={ei,j}, where ei,j represents the interaction between nodes vi and vj in the network gn. for each pair of ppi networks gu= and gv=, we denote the pairwise node similarity score for a node pair , where ui∈u and vj∈v, as s. in this study, we use the blast bit score between proteins as their node similarity score, but other types of similarity scores based on structural or functional similarity can be also utilized if available.

suppose a* is the true alignment of the networks in the set g, which is unknown and needs to be predicted. as in  <cit> , we can define the accuracy of a given network alignment  a as follows

  accuracy=1|a|∑ui~vj∈a <dig>  

where  <dig>  is an indicator function, whose value is  <dig> if the mapping ui ~ vj is included in the true alignment a* and  <dig> otherwise. the given measure assesses the goodness of the alignment  a based on the relative proportion of correctly aligned nodes. of course, since the true alignment is not known, the accuracy of a network alignment  a cannot be measured using , hence we cannot directly use this measure to compare different potential alignments to choose the best one. a reasonable alternative would be to estimate the expected accuracy as follows

  ea*=1|a|∑ui~vj∈ap, 

where p  is the posterior alignment probability between the nodes ui and vj given the set of networks g. based on this measure, our objective is then to predict the maximum expected accuracy  network alignment a*˜ of the networks in g as follows

  a*˜=maxaea*. 

a similar mea approach  <cit>  has been formerly adopted by a number of multiple sequence alignment algorithms, including probcons  <cit> , probalign  <cit> , and picxaa  <cit> . the mea framework has been shown to be very effective in constructing accurate alignment of multiple biological sequences, making it one of the most popular approaches for sequence alignment. recently, the mea approach has been also applied to comparative network analysis, where resque  <cit>  performs mea-based network querying and smetana  <cit>  performs mea-based multiple network alignment.

comparing and aligning networks based on context-sensitive random walk
in order to find the alignment that maximizes the expected accuracy defined in , we first need an accurate method for estimating the posterior node alignment probability p . for this purpose, we adopt a context-sensitive random walk  model, motivated by the pair hidden markov model  that has been widely used in sequence alignment  <cit> . the pair-hmm provides a simple, yet very effective, mathematical framework for estimating the alignment probability between symbols in different biological sequences. unlike the traditional hmm, which generates a single symbol sequence, the pair-hmm generates a pair of aligned symbol sequences. pair-hmm makes transitions between three different internal states m, ix , and iy , where the m state emits an aligned pair of symbols, one symbol in sequence x and the other in sequence y, while ix and iy emit an unaligned symbol in sequence x and sequence y, respectively. given two biological sequences, the pair-hmm can be used to estimate the probability whether a given symbol pair was jointly emitted at state m, hence should be aligned to each other. this probability can be computed using the forward and backward algorithms and the resulting alignment probability provides us with a measure of confidence about the  relevance between the given symbols .

one of the most important features of pair-hmm is that it properly recognizes that conserved sequence patterns and motifs in different species may contain inserted and/or deleted symbols  and therefore it specifically tries to model these indels. in a similar manner, a mathematical model that can recognize node insertions and deletions in different biological networks that contain conserved subnetwork regions and network motifs may be useful for obtaining a reliable posterior node-to-node alignment probability. recently, random walk models have been shown to be effective for estimating the node correspondence in different networks  <cit>  in a way that seam-lessly integrates both node similarity and topological similarity. however, the random walk models that were used in previous network alignment algorithms did not explicitly consider indels.

in this work, we adopt a novel context-sensitive random walk model that has been recently proposed to improve on existing models by taking such indels into account  <cit> . in a way that is conceptually similar to the pair-hmm, the csrw has three different internal states m, iu, and iv, each of which corresponds to a different mode of random walk. at the m state, the random walker simultaneously moves on both networks to enter a pair of "matching" nodes. on the other hand, at the iu state, the random walker only moves on network gu to enter a potentially "inserted" node in gu that may not have a corresponding node in the network gv. similarly, at the iv state, the random walker only moves on gv to enter a potentially inserted node in gv. transitions between states take place in a context-sensitive manner, where the random walker examines the neighboring nodes to determine the mode of random walk. for example, if there are node pairs with significant node similarity  in the immediate neighborhood, the csrw switches to the m state to make a simultaneous move on both networks and randomly enter one of these node pairs. otherwise, the csrw switches to either iu or iv and performs an individual random walk only on one of the networks. based on this random walk model, we compute the long-run proportion of time that a given pair of nodes will be simultaneously visited , which can be used to compute a probabilistic correspondence score between these two nodes, as we will describe in the following section.

estimation of node correspondence scores
suppose we want to measure the correspondence between nodes that belong to two different networks gu= and gv=, both of which are included in g, the set of ppi networks to be aligned. for every node pair , where ui∈u and vj∈v, our goal is to quantify the level of confidence - which we refer to as the node correspondence score - using the csrw model discussed earlier. for this purpose, we first construct the transition probability matrix that corresponds to the random walk. let  m be the set of node pairs  with a positive pairwise node similarity score s

  m={|s> <dig> ui∈u,vj∈v}. 

we also define the set of non-similar node pairs as follows

  i={|s= <dig> ui∈u,vj∈v}. 

let the current position of the random walker in the product graph be , where uc∈u and vc∈v. in each time step, the random walker examines the set of similar neighboring nodes n={|ui∈n,vj∈n,∈m} to determine its mode of random walk , where n is the set of neighbors of the node uc in the network gu and n is the set of neighbors of the node vc in the network gv. if there are similar node pairs among the neighboring node pairs, hence n is not empty, the random walker switches its internal state to the m state and performs a simultaneous walk on both networks, moving from  to one of the nodes

∈n. we define the transition probability for this simultaneous walk as follows

  p=s∑∈ns. 

in case there is no similar node pair around the current position of the random walker, that is n=∅, the random walker randomly changes its state to either iu or iv, and performs an individual walk on the corresponding network gu or gv. the probability that a given network will be chosen for an individual random walk is proportional to its size , which ensures that both networks are equally well-traversed at the i states. the random walker randomly moves to one of the neighboring nodes with equal probability on the selected network, while staying at the same node on the other network. based on this behavior, the transition probabilities at state iu are given by

  p=|u||u|+|v|×1|n| 

for ui∈n, and the transition probabilities at state iv are given by

  p=|v||u|+|v|×1|n|, 

for vj∈n.

based on the transition probabilities given by , , and , we can construct the transition probability matrix p for the random walk on the two networks gu and gv. given p, we can estimate the longrun proportion of time that the random walker spends in each pair of nodes  by computing the steady state distribution π. in practice, since real ppi networks typically have a relatively small number of interactions , the resulting transition probability matrix for the csrw is sparse, which makes it relatively straightforward to compute the steady state distribution using the power method.

in order to increase the computational efficiency of the proposed network alignment method, instead of using the original transition probability matrix p, we use a reduced matrix p˜. the reduced matrix p˜ is obtained by removing the rows and columns in p that correspond to node pairs in  i while keeping only the rows and columns that correspond to node pairs in  m. after the reduction, p˜ is re-normalized to make it a legitimate stochastic matrix. in practice, since the csrw is designed to spend more time at node pairs with higher similarity, the random walker spends a relatively small amount of time at node-pairs that belong to the set  i, and using the reduced matrix p˜ instead of p only minimally affects the estimated long-run proportion of time spent at ∈m. as a result, the difference in terms of network alignment performance that results from replacing the original matrix p by this reduced matrix p˜ appears to be small as shown in the supplementary material .

we make one further modification to the csrw in  <cit>  by allowing the random walker to restart at a new position at each time step with a fixed restart probability λ. note that a similar "random walk with restart" approach was used by isorank  <cit>  and isorankn  <cit> , although these algorithms do not utilize the csrw adopted in our method. we allow the random walker to select its restart position according to the pairwise node similarity, such that node pairs with higher node similarity have higher chance to be the restart position of the random walker. to this aim, we normalize the pairwise node similarity scores so that they sum up to  <dig>  our final node correspondence score vector c is obtained from a linear combination of the steady-state distribution of the context-sensitive random walker π˜  and the normalized node similarity score vector s as follows

  c=λs+π˜. 

the above formulation, obtained by allowing the csrw to restart the random walk at a new position, is especially useful when comparing real ppi networks, which are often incomplete and contain many isolated nodes. simulation results show that the incorporation of the restart scheme can make our csrw-based alignment method more robust, especially when the available topological data are either unreliable or insufficient for detecting the similarities between networks .

in order to determine the restart probability λ, we first analyze the structure of the reduced product graph of gu and gv that contains only similar node pairs included in  m. intuitively, it is desirable to increase the restart probability λ if the networks are disconnected and decrease the probability if the networks are well connected. for example, if all the nodes in the reduced product graph are completely disconnected, it is desirable to restart the random walker at every step. additionally, when we consider the following two cases -  most nodes in the product graph are connected and there are only a few disconnected nodes;  the product graph is equally divided into n connected subnetworks of identical size - it would be desirable to assign a higher λ to the latter case. based on these intuitions, we set the restart probability λ as the ratio of the total number of nodes in the top k% smallest subnetworks to the total number of nodes in the reduced product graph. in this work, we used k = 99% to determine the restart probability λ.

constructing the multiple network alignment
once we have computed the node correspondence scores in  for every pair of networks in g, we take a greedy approach as in  <cit>  to construct the multiple network alignment. the overall alignment process is as follows. first, in order to improve the reliability of the node correspondence scores, we selectively apply the probabilistic consistent transformation  defined in  <cit> . if λ is larger than a predefined threshold λt, we do not apply pct to the node correspondence scores. a large λ implies that the product graph is ill connected , in which case applying the pct would not be helpful and may in fact make the scores less reliable. this is because the pct in  <cit>  was developed based on the assumption that the product graphs for all network pairs are relatively well connected. after the potential score refinement step through pct, we begin with an empty alignment and greedily add aligned node pairs  to the network alignment, starting from the pairs with the highest node correspondence scores, until there is no other node pair left that can be added without creating inconsistencies in the network alignment. assuming that the node correspondence scores in  obtained by the context-sensitive random walk model with restart accurately reflect the true correspondence between nodes - such that the score is proportional to the posterior node alignment probability - the proposed network alignment scheme can be viewed as a heuristic way to find the mea alignment of the networks in g.

RESULTS
datasets and experimental set-up
to assess the performance of the proposed method, we tested the proposed network alignment method based on ppi networks in napabench  <cit>  and isobase  <cit> . napabench is a network alignment benchmark that consists of  <dig> different datasets, referred to as the pairwise alignment dataset, 5-way alignment dataset, and 8-way alignment dataset. each dataset contains three different subsets of  <dig> network families, each subset created using a different network growth model - cg , dmc , and dmr . each network family consists of  <dig>   <dig>  or  <dig> ppi networks depending on the alignment dataset. for network families in the pairwise alignment dataset, each family contains one network with  <dig>  nodes and the other with  <dig>  nodes. in the 5-way network alignment dataset, a network family consists of  <dig> networks with  <dig> ,  <dig> ,  <dig> ,  <dig> , and  <dig>  nodes. finally, in the 8-way alignment dataset, every network family consists of  <dig> networks, where each network contains  <dig>  nodes. to evaluate the performance of the proposed method on real ppi networks, we utilized isobase datasets  <cit> , which was constructed by integrating the following databases: biogrid  <cit> , dip  <cit> , hprd  <cit> , mint  <cit> , and intact  <cit> . isobase contains the ppi networks of five species: h. sapiens, m. musculus, d. melanogaster, c. elegans, and s. cerevisiae. currently, the ppi network of h. sapiens in  <cit>  has  <dig>  proteins and  <dig>  interactions, the ppi network of m. musculus has  <dig>  proteins and  <dig> interactions, the ppi network of d. melanogaster has  <dig>  proteins and  <dig>  interactions, the ppi network of c. elegans has  <dig>  proteins and  <dig>  interactions, and the ppi network of s. cerevisiae has  <dig>  proteins and  <dig>  interactions. in our analysis, we excluded the m. musculus network as it currently contains only a small number of interactions.

based on our simulations, we report the following performance metrics: correct nodes , specificity , mean normalized entropy , conserved interaction , coverage, and computation time. cn is the total number of nodes in the correct equivalence classes. given a network alignment, an equivalence class is defined as the set of aligned nodes, and if all nodes in the equivalence class have the same functionality the given equivalence class is said to be correct. spe is the relative number of correct equivalence classes to the total number of equivalence classes in a network alignment. for each equivalence class c, the normalized entropy can be computed by h=-1logd∑i=1dpilogpi, where pi is the relative proportion of nodes in c with functionality i and d is the total number of different functionalities in the given equivalence class. as a result, a network alignment that accurately maps functionally similar nodes, hence being functionally consistent, will have lower mean normalized entropy. ci is defined as the total number of edges between equivalence classes. we also count the total number of edges between correct equivalence classes, which we refer to as the conserved orthologous interactions , to assess the biological relevance of the conserved interactions that have been identified by the network alignment method. finally, for 5-way and 8-way alignment datasets, we measure the equivalence class coverage and the node coverage, where the former is the number of equivalence classes that include nodes from k different networks, and the latter is the number of nodes in an equivalence class whose equivalence class coverage is k. for the performance evaluation based on real ppi networks in isobase, we determined the functionality of each protein using the kegg protein annotation  <cit> . note that nodes without any functional annotation in each equivalence class and equivalence classes that consist of a single node or nodes from a single network were removed before computing the performance metrics.

we compared the performance of the proposed multiple network alignment method against a number of state-of-the-art algorithms: smetana  <cit> , pinalog  <cit> , beams  <cit> , netcoffee  <cit> , and isorankn  <cit> . netcoffee was not included in pairwise network alignment experiments, since it requires at least  <dig> networks. for multiple network alignment experiments, pinalog was excluded as the algorithm can only handle pairwise alignments. for isorankn, we set the parameter α to  <dig>  as in the original paper  <cit> . for beams, we set the filtering threshold to  <dig>  for isobase and  <dig>  for napabench as in the original paper  <cit> , and set the parameter α to  <dig> . the parameter α for netcoffee was set to  <dig> . we used default parameters for smetana , and the same parameters were used in the proposed network alignment method as well. finally, in the proposed method, we used λt =  <dig>  to determine whether or not to apply pct to the estimated node correspondence scores.

all experiments were performed on a personal computer with a  <dig>  ghz intel i <dig> processor and  <dig> gb memory.

performance assessment based on napabench network alignment benchmark
we first evaluated the performance of the proposed algorithm using the napabench network alignment benchmark and compared it to other leading algorithms. the evaluation results are summarized in table  <dig>   <dig>  and  <dig>  which show the average cn, spe, and mne of various network alignment algorithms.

as we can see in table  <dig> in most cases, the proposed algorithm yields a significantly higher cn and spe compared to other algorithms, which shows that the algorithm is capable of finding conserved nodes with both high sensitivity and specificity. furthermore, the mean normalized entropy  is also much lower, indicating that the proposed algorithm yields network alignment results that are more functionally coherent. this table shows that beams yields higher cn for the cg dataset, although its spe is lower and its mne is higher than the proposed method. both smetana and the proposed algorithm shows similar performance on the cg dataset, but we can also see that the proposed algorithm consistently outperforms smetana on the dmc/dmr datasets. multiple network alignment results obtained using the 5-way alignment dataset and the 8-way alignment dataset show similar trends. tables  <dig> and  <dig> show that, in most cases, our proposed algorithm outperforms other algorithms with higher cn, higher spe, and lower mne. for multiple network alignment, we further compared different network alignment algorithms based on their capability of predicting equivalence classes that span all networks, since one of the main goals of multiple network alignment is to find functionally homologous proteins that are conserved in the networks of all target species. simulation results show that, in most cases, our proposed method also yields much higher cn and spe as well as lower mne for equivalence classes that span all networks.

next, we compare the number of conserved  interactions identified by different network alignment algorithms. as figure  <dig> shows, the proposed method was able to identify the largest number of conserved interactions as well as conserved orthologous interactions in most cases, resulting in higher ci and coi. the performance of smetana was comparable to the proposed method, while other algorithms typically resulted in lower ci and coi. it is worth noting that more than 95% of the conserved interactions that were detected by our proposed network alignment algorithm were between correct equivalence classes . this certainly shows that our method can effectively detect biologically meaningful conserved interactions through network alignment.

we also analyzed the overall coverage of the predicted alignment results for the 5-way and 8-way network alignments. the results are shown in figure  <dig> for the 5-way alignment and in figure  <dig> for the 8-way alignment. for the 5-way network alignment, we can see that around 40% of the equivalence classes predicted by the proposed method contained nodes from all  <dig> networks. smetana shows a similar level of coverage, while for the remaining algorithms, only about 30% of the predicted equivalence classes included nodes from all  <dig> networks. the overall node coverage also shows similar trends. the 8-way alignment results summarized in figure  <dig> show that the proposed algorithm can effectively find equivalence classes with good coverage, which include nodes from a large number of networks. for example, we can see that around 40% of the equivalence classes predicted by the proposed method contained nodes from all  <dig> networks.

performance assessment based on protein-protein interaction networks in isobase
for further evaluation, we performed additional experiments using real ppi networks in isobase. table  <dig> shows the pairwise network alignment performance of the tested algorithms for several ppi network pairs. as we can see in this table, the proposed algorithm consistently performs fairly well in all cases, outperforming the other algorithms. we can make similar observations in table  <dig> which summarizes the performance evaluation results for aligning  <dig> ppi networks. the proposed algorithm attains high cn, high spe, and low mne across all cases, showing that it can effectively compare and accurately align real ppi networks. beams shows good performance on multiple alignment of real networks that is comparable to the proposed method, with a slightly lower spe and a slightly higher mne. additionally, although beams and isorankn achieve higher cn in some cases, the proposed method consistently yields higher cn than these methods with comparable spe and mne when we consider multiple network alignment results for regions that are conserved across all networks. another observation we can make in table  <dig> is that isorankn performs very well on real ppi networks compared to the other more recent algorithms. this is especially interesting, if we consider the fact that the performance of isorankn lagged behind the other algorithms according to the large-scale evaluations using napabench. one possible explanation is that, for constructing the network alignment, isorankn relies on node similarity  more strongly compared to the other algorithms. in order to find out whether this is indeed a plausible explanation, we performed network alignment experiments solely using node similarity scores , where we constructed the network alignment in a greedy manner by iteratively adding protein pairs with the highest node similarity scores. the alignment results are shown in tables  <dig> and  <dig> right below the results for isorankn . surprisingly, these results show that this simple greedy network alignment approach that uses node similarity alone outperforms isorankn in most cases and surpasses all the other algorithms in all cases. in fact, currently available ppi networks are known to be very incomplete and these network typically contain a large number of isolated nodes. they are suspected to include a large number of spurious interactions while still missing many potential protein-protein interactions  <cit> . furthermore, only a small proportion of proteins in these ppi networks have reliable functional annotations , making it difficult to reliably assess the quality of a predicted network alignment. as a result, for current ppi networks, utilization of topological similarity between networks may not be necessarily helpful for improving the overall quality of the network alignment across the entire network. moreover, since only a few large real ppi networks are available at the moment, we risk overtraining network alignment algorithms if they are mainly evaluated solely based on real ppi networks.

CONCLUSIONS
in this paper, we proposed a novel network alignment algorithm based on a context-sensitive random walk model that has been recently introduced. the csrw provides an effective mathematical framework for comparing different biological networks and quantifying the node-to-node correspondence between nodes that belong to different networks. in our proposed method, we combined the csrw model with a restart scheme, where the restart probability is automatically adjusted based on the characteristics of the networks under comparison. furthermore, the proposed network alignment algorithm employs adaptive probabilistic consistency transformation, where the pct is adaptively activated or deactivated based on the overall structure of the given networks. as we have shown through extensive performance evaluations based on biologically realistic ppi networks in napabench as well as real ppi networks in isobase, the novel network alignment algorithm proposed in this paper can significantly improve the overall accuracy of pairwise as well as multiple network alignment.

competing interests
the authors declare that they have no competing interests.

authors' contributions
conceived the method: hj, bjy. developed the algorithm and performed the simulations: hj. analyzed the results and wrote the paper: hj, bjy.

