BACKGROUND
recent advances in instrumentation, reagents, and techniques for high throughput proteomics are making it possible to simultaneously identify and compare disease, development, and treatment-related changes to the level of protein expression  <cit> . in most cases, these techniques rely on two dimensional gel electrophoresis  or liquid chromatography  to separate proteins or peptides by charge, mass, or other chemical properties followed by identification using mass spectrometry . for gel-based techniques, quantitation is performed by comparing the intensity of associated spots in gel images or by comparing the intensity of signals from appropriately excited cyanine reactive dyes used to tag the samples being compared  <cit> . for techniques using liquid chromatography, methods for quantitating expression can be grouped into two broad classes: differential labeling, and label-free lc-ms  <cit> . labeling methods such as silac, icat, and itraq use isotopic or isobaric tags to differentially label the samples being compared and paired reporter ion or isotopic peaks provide estimates of the expression ratio for identified peptides. label free methods estimate peptide abundance from a chromatographic elution profile, integrated across retention time or from the frequency with which a peptide is selected from an ms scan for msms analysis, termed spectral counting. in the former case, the integrated profile is taken to be indicative of the abundance of the associated peptide and thus a measure of associated protein abundance. in spectral counting, the methods compute protein abundance indices from the average of the associated peptide abundances based on these frequencies.

the isobaric tag for relative and absolute quantitation , has seen increased application in quantitative proteomics  <cit> . this technique uses four  isobaric reagents to label and compare four  protein samples simultaneously. these reagents incorporate chemical tags consisting of a reporter group, a balance group, and a reactive group. the reactive group attaches the tag to free primary amino groups  where reporter groups, with masses of  <dig>   <dig>   <dig>  and  <dig> daltons, are linked to the reactive group by complementary balance groups with masses of  <dig>   <dig>   <dig>  and  <dig> daltons. the compensating masses of the reporter and balance groups yield a common mass of  <dig> daltons. therefore, a given peptide, modified by any of the individual itraq reagents, appears at the same mass to charge in the ms spectrum. however, tandem ms spectra of these peptides yield, in addition to the identifying fragment ion peaks, reporter ion peaks at m/z  <dig>   <dig>   <dig>  and  <dig> resulting from the singly charged reporter groups. the relative intensities of the reporter ion peaks are indicative of the relative quantities of the associated peptide across the four samples, from which relative expression of the cognate protein is inferred.

each itraq experiment produces tens of thousands of spectra , several thousand identified peptides, and hundreds of identified proteins. bioinformatic tools and statistical methods are essential to the interpretation of these data. several data management and analysis tools have been developed to analyze these data, such as proquant, and proteinpilot, software supplied by the manufacturer of the itraq reagents, and a number of freely available tools. the software packages i-tracker  <cit>  and tandtraq  <cit>  support the analysis of itraq-generated quantitation data and the integration of that analysis with search results from mascot, sequest, and x!tandem. the i-tracker software performs reporter ion peak area calculations, isotopic impurity correction, threshold checking, and spectrum-level expression ratio calculations and links quantitations to peptide identities provided by sequest or mascot. tandtraq additionally provides a method for combining spectrum-level quantitation data from i-tracker with peptide identifications from x!tandem. another itraq data analysis tool, multi-q, provides instrument-independent processing, extracts reporter ion peak intensities, eliminates redundant peptides, and compensates for reporter ion saturation and variations in spectrum quality  <cit> . multi-q additionally provides both graphical- and web-based user interfaces. quant, a matlab-based software package for itraq data analysis, provides protein-level relative expression estimates and associated uncertainty measures using error propagation techniques  <cit> . data management tools such as the yale protein expression database  facilitate biological interpretation through the capture, display, and linking of data from proteomic experiments using a variety of experimental techniques including itraq  <cit> . extensions to the proteomics identifications database  and mzdata standards have been proposed to permit the storage of itraq reporter ion intensities  <cit> . tools such as these for data manipulation, analysis, and storage are essential to the application of itraq.

while early itraq-based studies focused on comparisons to a common reference, a variety of experimental designs have now been suggested  <cit>  and will likely grow in response to the introduction of higher throughput methods . in addition to increased complexity in experimental designs, pooling of information across experiments is needed to increase the power to detect small changes in expression and to improve estimates of the magnitude of those changes. accommodating these advances will require statistical methods that support a variety of designs and permit inference across multiple itraq experiments. recently, we proposed a model for itraq data analysis based on analysis of variance   <cit> . the approach yields a linear model in log intensities from an itraq experiment that can be analyzed using anova methods. oberg and colleagues apply this model in a study consisting of  <dig> itraq experiments and discuss the computational challenges associated with fitting thousands of model parameters in the context of missing data typical of itraq  <cit> . they emphasize the superiority of methods capable of simultaneously fitting all of the parameters to all of the data, describe the associated computational difficulties, and discuss strategies for dealing with these computational issues including subsetting, stagewise, and iterative regression. in the software described here, we attempt to address some of these difficulties using computational methods from the bayesian statistical framework.

we report on the development and application of a new software tool, iquantitator, designed to facilitate the analysis and reporting of results from itraq experiments. this tool employs a model-based approach to describe sources of variation in the observed data and bayesian inference to estimate the parameters of interest and their uncertainty, supports inference across multiple itraq experiments addressing a common hypothesis, allows both protein and peptide-level treatment-effect analysis, and produces a hypertext-linked and searchable electronic report in the portable document format .

implementation
reporter ion intensity model
in the software described here, statistical inference employs a model that links experimental observations to the technical and experimental sources of variation and provides the basis for the inference of treatment-dependent changes in protein and peptide expression. we adapt our recently reported model for the analysis of itraq data  <cit>  in which the effects of the model are derived from the steps of the experimental process. the model is given by a multiplicative expression relating reporter ion peak area to biological and experimental factors associated with that peak. log transformation of this multiplicative expression yields the following expression where the log reporter ion intensity is written as a linear combination of factors that decompose the sources of variation in the observed log reporter peak area .

   

this approach provides a framework for constructing models. for each study, the model must be tailored to capture the pertinent sources of variation and experimental effects of interest. in our previous efforts and those of oberg, this model was analyzed using anova, where the parameters are structured into batches that explain the sources of variation in the observed reporter ion peak area. all of the parameters associated with an effect of the model, for example protein effects , are considered as a batch. while it is important to understand which sources of variation explain the observations, we are primarily interested in the inferred values of those effects that include an interaction with treatment, specifically, the protein by treatment interaction effect . it is these parameter values that indicate treatment-dependent changes in protein expression. in equation , we note that peptides are considered to be uniquely assigned to a protein as indicated by the notation j, indicating that peptide j is always associated with protein i. in cases where a peptide could be assigned to more than one protein, it is eliminated from consideration prior to analysis.

examination of the model reveals the computational challenges discussed by oberg and colleagues  <cit> . the model includes a number of parameters approximately equal to  ×  and these parameters must be estimated from the nspectra × nchannel reporter ion intensities. in addition to the large number of parameters and the resulting computational costs, the inference method must contend with missing data. within an experiment, many proteins are identified by a single peptide and the peptide and protein effects for that protein cannot, using traditional anova techniques, be estimated independently. additionally, the limited overlap in proteins identified in replicate itraq experiments results in proteins that may not be observed in all experiments. in the experiments reported by oberg  <cit> , nearly 75% of the  <dig> identified proteins appeared in only one of six itraq experiments and liu, et. al  <cit>  reported that 24% of  <dig> identified proteins appeared in only one of nine itraq experiments. to overcome these difficulties we employ a statistical model that allows information sharing across levels of a given effect and employ markov chain monte carlo methods to infer parameters from the data and parameter prior distributions.

model parameter inference
parameter inference in iquantitator employs computational methods developed using the bayesian statistical framework. applying bayes theorem, the probability density of the model parameters conditioned on the observed data can be written as the product of the likelihood, the prior densities of the parameters, and integration constant. the joint posterior density of the parameters is obtained by integrating the likelihood over the prior densities. when a closed form solution of this integral is unavailable, computational methods such as markov chain monte carlo  can be used  <cit> . the markov chain constructed using these methods yields samples distributed according to the posterior distribution of the parameter vector. statistical measures of center and spread estimated from these samples can be used to characterize the parameters of interest. applying these methods to itraq data requires the construction of a statistical model describing the prior distributions for each model parameter and, potentially, hyperprior distributions for distributional parameters of those priors. the statistical model structure used here follows the recommendation of gelman  <cit>  for the analysis of anova using hierarchical regression. in this approach, all parameters of a given effect are considered as a batch and share a common prior distribution. distributional assumptions of this model are given in figure  <dig> 

the gibbs sampler implemented in iquantitator was designed to exploit the structure of the model. let xi be the ith observed reporter ion peak area, assumed distributed

  

  

where aw are parameters of the model and si are the set of parameter indices associated with peak area i. in our case, the set si gives the indices of the parameters, one from each batch, that sum to give the mean of the distribution of xi and aw ∈ {p|r|f|g|v|b|s|h}. the prior distributions for the aw are given by

  

where b gives the batch to which parameter w is assigned . under these assumptions we can write closed form expressions for the full conditional distributions for parameters and hyperparameters of the model. for each parameter aw the full conditional distribution is given by

   

where dw is the set of indices of observed reporter ion peaks whose mean depends on aw and n() gives the number of members of the set. the hyperparameters for the prior distribution of batch b are updated using

  

where hb gives the set of indices of parameters assigned to batch b. finally, the model precision parameter is updated using

  

within a batch, the update of a parameter depends only on the observed reporter ion peak areas assigned to the associated factor level. since each observation is assigned to only one parameter within a batch, during each iteration of the algorithm, all parameters assigned to a given batch are updated in parallel. for each batch, the software computes all of the sums in equation  in one pass through the data, forming partial sums as needed. once completed, all parameters in the batch are updated followed by updates to the batch hyperprior parameters μb and τb and this process is repeated for each batch. finally, the model precision is updated. throughout the batch updates, the means  are updated so that computational effort in the precision update is reduced.

software description
iquantitator is available as an installable package for the freely-available r statistical computing environment and, through scripting, can be tailored to a variety of itraq study designs. the package includes a collection of r functions for structuring input files, a gibbs sampler designed for this application, and an r/latex script used to construct hypertext-linked reports. to make use of the package, users create an r script that specifies the input files, defines the experiment, gives the statistical model and the comparison of interest, and specifies the results file names. the software is intended for use by statisticians and analysts familiar with experimental design and statistical modeling. the processing flow of a typical iquantitator application is illustrated in figure 2

data import and filtering
for each study, the user specifies the study design indicating the treatment group and sample identifier for each channel within each itraq experiment . for each experiment, the user also provides a file giving the ms/ms reporter ion measurements, and peptide and protein identities for each ms/ms spectrum. iquantitator relies on other external or vendor-supplied software to identify proteins from peptide-level tandem mass spectra , measure itraq reporter ion peak areas, and correct the peak areas for isotopic impurities in the itraq reagents. the input file is typically a table containing one line for each observed ms/ms spectrum giving the name and accession number of the associated protein, spot or fraction identifier, best peptide sequence, list of modifications, and the reporter ion peak areas for each of the itraq tags. these data are typical of that provided in the ms/ms summary reports generated by the applied biosystems software and is converted to a tab-delimited text file prior to processing. the default column names for each of these data items can be customized to match the tables produced by specific instruments and associated software.

data import and filtering is implemented in the loadmsmssummary function. in addition to the study design and a list of associated ms/ms summary files, the user may also specify contaminating proteins and protein modifications to be eliminated prior to analysis. the protein and modification filters are specified as lists of regular expressions  <cit> , one expression for each protein or modification to be eliminated from the analysis. during loading, the protein name and modification fields in the ms/ms summary files are checked against the list of filtered proteins and modifications and are eliminated from the data set prior to analysis. most often, this feature is used to eliminate experimental contaminants and peptides containing itraq-modified tyrosines. in our applications, peptides without high confidence assignments  are also eliminated during the filtering step. the confidence threshold is specified using the confthreshold argument to loadmsmssummary, and a count of spectra below threshold is provided in the summary report. additionally, spectra assigned to more than one protein, unidentified spectra, and spectra with out-of-range data are also eliminated. the remaining data is restructured as a table with one row per reporter ion peak containing, in addition to the log transformed peak area, the descriptors of that peak . additionally the software constructs a summary of the input data including: the number of spectra, unique proteins and unique peptides; the number of spectra eliminated during filtering or due to missing data; and the number of spectra observed for each reported peptide within each experiment.

statistical inference
to identify treatment-dependent, differentially expressed proteins, iquantitator employs bayesian inference using gibbs sampling as described above. this step is implemented within the processitraq function. the user supplies a statistical model, specific to the experimental design, relating log-transformed reporter ion peak areas to the treatment effects of interest and other sources of variation. the user-supplied model, expressed in a restricted version of the r formula grammar, is specified so as to capture both the comparisons of interest and the sources of variation that interfere with those comparisons. the user may also specify parameters controlling the gibbs sampler and prior distributions for the model parameters. the gibbs sampler, implemented as a c library function, is used to draw samples of the model parameter vector from its joint posterior distribution. the sampling process produces a large table, with one row per monitored parameter  and number of columns equal to the number of samples retained . the user-specified thinning and burn-in parameters control the number of mcmc iterations between stored samples and the number of samples discarded at the beginning of the sampling process, and can be used to reduce this table to a reasonable size. monitoring flags for each factor allow data collection to be selectively bypassed for nuisance parameters. to assess convergence, mcmc variable trace plots can be generated and mcmc diagnostics can be applied to the sampled parameters using existing r packages  <cit>  and functions.

statistical summary preparation
for each parameter of interest, iquantitator computes summary statistics giving a point estimate and credible interval from which the fold change estimate and its uncertainty can be determined. this step is performed in the summarizeitraq function. although the software draws samples from the joint posterior distribution for all of the parameters in the model, we focus our statistical summary only on those parameters associated with the treatment effects. in particular, we focus on the protein-treatment interaction factor, and the peptide-treatment interaction factor, typically specified in the model. for each parameter within these effects, the software estimates, using samples collected from the mcmc algorithm, the mean, median, standard deviation, and  <dig> th and  <dig> th percentiles. these values are exponentiated to give both point estimates  and credible intervals  for the protein and peptide fold change due to treatment. the protein and associated peptide summary statistics are organized into a hierarchical data structure. additionally, the software builds a map of identified peptides along the associated protein sequence. the protein accession number is used to locate the protein sequence in a user-supplied protein database file . the sequence is then included in the resulting data structure.

report preparation
the final step in the iquantitator processing sequence is the construction of a latex document  containing formatted versions of the experiment description, statistical model, data summary, and protein and peptide treatment effect summary data structures. this step utilizes the sweave automatic report generator, a component of the r utils package. sweave processes a user-supplied script containing both latex and r code and merges the output of the r code with the latex to create a .tex file suitable for document production. the resulting .tex file is then converted into a portable document format  file using the pdflatex processor. the iquantitator package includes a default sweave script that can be used as is or modified to change the form, content, or organization of the resulting report. the document is structured to provide both graphical and numerical summaries of the results with hypertext links providing quick access to document sections containing detailed analyses . the protein summary section provides a graphical and numeric summary of all identified proteins with results sorted by decreasing magnitude of expression fold change. protein names are hypertext linked to subsections within the protein details section where additional statistics, protein sequences showing peptide coverage, and peptide-level expression change summaries can be found. the protein accession number, given in each subsection of protein details, also provides a hypertext link to the ncbi protein database . clicking on this link will launch the user's web browser and direct it to the appropriate ncbi protein web page on most platforms. additionally, the summary report document can be navigated using bookmarks and searched using the search tools found in most portable document format readers such as adobe's acrobat reader  <cit> .

software was developed using version  <dig> . <dig> of the r statistical computing environment  <cit> .

simulated data sets
a set of simulated data sets was produced to further investigate the performance of iquantitator. two sets of four tests simulating studies with single itraq runs and one set of two itraq experiments from a single study were generated using a simulator developed in our laboratory for testing inference methods. biological, treatment, and technical variation can be set as desired to construct simulated protein expression profiles for individual samples. the simulator models the peptide composition of proteins, inserts post-translational modifications and treatment-dependent modifications, models loading errors, labeling efficiency, fractionation of peptides, ms intensities, peak selection logic, and reporter ion measurement noise. the resulting output is converted, via an r script, into files satisfying the input requirements of iquantitator. for this study, the simulator was configured to draw from a pool of  <dig> proteins composed of peptides from a pool of  <dig> . the peptides were randomly assigned modifications with a probability of  <dig> . both loading error and tagging efficiency were set to model ideal conditions and the peptides were distributed across  <dig> first dimension fractions and  <dig> second dimension fractions. peak selection was limited to peptides in the m/z range  <dig> to  <dig> and only the  <dig> most intense peaks in the simulated mass spectrum were processed in simulated msms. a peak was not reinterogated if already appearing in any of the  <dig> previous fractions. the ion suppression model was set as to minimize the effects of suppression and treatment, biological and technical noise were added to the output. each simulation run modeled samples from four subjects, two each from two treatment groups. channels  <dig> and  <dig> were assigned to subjects from treatment group  <dig> and channels  <dig> and  <dig> to subjects from treatment group  <dig>  each experiment dataset contained approximately  <dig> unique proteins,  <dig> unique peptides, and  <dig> spectra . four additional single-run experiments of similar design were simulated, this time including treatment-dependent modifications. when treatment-dependent modifications are included and the modified form of the protein is not observed, datasets include peptides whose expression ratio differs significantly from other peptides of the same protein. finally, one additional simulation dataset was constructed to examine the analysis of data from multi-itraq studies. in this case, a common pooled control is included in the first channel of two experiments and simulated samples from six individuals of the treatment group are assigned to the three channels remaining in each of the two experiments. the simulated data set included  <dig> proteins,  <dig> peptides, and  <dig>  spectra. of the  <dig> proteins, 47% were identified by a single peptide, and 40% were observed in only one of the simulated itraq experiments. as in the first set of single experiment cases, no treatment-dependent modifications were included.

simulated data from the two sets of four single-experiment studies and the multi-experiment study were processed with both iquantitator and an r script that mimics the log-space averaging approach used in the abi software. the log space averaging script computes raw ratios to a selected reference and normalizes the ratios to a common median. the normalized and log-transformed ratios for a given protein are averaged and then exponentiated to obtain the protein-level fold change estimates. since each of the single experiment cases included two samples from both control and treatment groups, our log-space averaging function also computes averages of paired ratios to give a single estimate of the fold change. point estimates for the protein expression fold change were taken from each approach and compared to the true expression ratio .

biological sample preparation and processing
in addition to the simulated cases, we applied iquantitator to a biological sample collected as part of an on-going study of embryonic heart development in chickens. fertile chicken eggs  were incubated at 37°c in a humidified atmosphere with hourly rotation for  <dig> to  <dig> days and staged according to the criteria of hamburger and hamilton  . hearts from hh stage  <dig>  and hh stage  <dig>  were perfused in situ with warm phosphate buffered saline, excised from the embryo and cut in half, then rinse blotted dry, flash frozen in liquid nitrogen. pooled hearts from the two stages were cryo-pulverized , then homogenized in  <dig> mm bicine, ph  <dig>  using a ground glass mortar and pestle , and centrifuged at  <dig> × g for  <dig> min at 4°c. the cytosolic fraction was obtained by centrifugation of the low-speed supernatant at  <dig>  × g for  <dig> min at 4°c . experiments were conducted in compliance with guidelines established by the institutional animal care and use committee  of the medical university of south carolina for the utilization of embryonated eggs prior to  <dig> days of age.

one hundred micrograms of total protein  from each aliquot were labeled with each of the 4-plex itraq reagents  according to the manufacturer's standard protocol. briefly, the aliquots were denatured with a sodium dodecyl sulfate solution, reduced with tris-2-carboxyethyl phosphine , and alkylated by adding s-methyl methanethiosulfonate . the aliquots were digested with  <dig> μg of trypsin  each. ten μl of  <dig> m tetraethyl ammonium bicarbonate buffer  were added to ensure proper ph during labeling. after labeling, the four aliquots were combined and fractionated by strong cationic exchange  chromatography on a waters 600-ms hplc system connected to a waters 484-ms uv detector. a polysulfoethyl a™ column   was used. solvent a was  <dig> mm kh2po <dig>  25% acetonitrile , ph  <dig> ; solvent b was similar to a but with the addition of  <dig> m kcl. a  <dig> minute gradient from 5% to 50% b, followed by  <dig> minutes at 50% b provided acceptable separation of the peptides. the flow rate used was  <dig> μl/minute, and the elution of peptides was monitored by uv at  <dig> nm. fractions were collected every  <dig> minutes. fractions were dried and stored at -20°c until further use. scx fractions containing peptides were further fractionated by c <dig> nano-reversed phase chromatography on an ultimate-switchos- probot system . the peptides were first loaded using the switchos system on a c <dig> pepmap  <dig> pre-column   using 2% acn,  <dig> % trifluoroacetic acid  at  <dig> μl/minute. after  <dig> minutes of desalting, the peptides were eluted from the pre-column onto a c <dig> pepmap  <dig> column   using the ultimate system at  <dig> nl/minute. solvent a was 2% acn,  <dig> % tfa; solvent b was 85% acn, 5% 2-propanol, and  <dig> % tfa. an  <dig> minute gradient from 5% b to 50% b, followed by  <dig> minutes at 50% b was used. peptide elution was monitored at  <dig> nm. the eluant from the reversed-phase hplc separation was mixed at a 1: <dig>  ratio with a solution of α-cyano-4-hydroxy-cinnamic acid  being continuously delivered from the syringe pump of the probot system. the mixture was spotted on stainless steel maldi plates  in a  <dig> ×  <dig> pattern. spots were collected every  <dig> seconds during peptide elution of the reversed phase chromatography run. typically, two plates were collected for each scx fraction. six mass calibration spots were manually spotted on the perimeter of the plate, and two mass accuracy verification spots were manually placed on the top center and bottom center of each plate. matrix-assisted laser desorption ionization mass spectrometry  analyses was performed on a  <dig> proteomics analyzer tandem time-of flight  mass spectrometer . one ms spectrum was acquired for each spot in positive reflector mode; subsequently the  <dig> most intense precursors from each spot were selected for tandem ms/ms sequencing. for peptides eluting in more than one spot, the interpretation method was set up to minimize repetition of the ms/ms data collection on the same precursor. ms/ms spectra were collected starting with the least abundant peptide in each fraction to maximize data quality. the raw ms/ms data were filtered using a signal-to-noise ratio of  <dig> and searched using gps explorer software  and mascot . itraq labeled n-terminal and lysine, and mmts labeled cysteine were selected as fixed modifications, while oxidation of methionine and itraq labeled tyrosine were used as variable modifications. a 70% confidence cut-off was used at the peptide level. the gallus gallus protein database used for the search was extracted from the ncbi non-redundant database downloaded from the ncbi website on may  <dig>   <dig>  the ms/ms summary report containing peptide sequence, mascot scores, protein assignment to each peptide, itraq reporter areas , and other information used in this study were generated using the gps explorer software.

tandem ms summary reports comparing stage  <dig> and stage  <dig> chicken hearts and containing  <dig>  msms spectra were processed using iquantitator. of those spectra,  <dig>  lacked a high confidence identification, and  <dig> were eliminated due to disallowed modifications  leaving  <dig>  spectra with high confidence identifications from  <dig> unique proteins and  <dig> peptides. using iquantitator,  <dig>  samples were collected from the markov chain following a burn-in period of  <dig>  updates. the samples were thinned by a factor of  <dig> leaving  <dig>  samples from which summary statistics were collected. for each protein and each associated peptide, mean, median, and 95% credible intervals were computed for each of the protein- and peptide-level treatment effects.

RESULTS
simulated data
we find that the model-based approach implemented here results in a smaller mean square error in the estimated log fold changes  when compared to individual paired estimates using the log averaging approach or when those paired estimates are averaged. this is especially evident in the second set of cases  where the log-space mean square error was found to be  <dig>  using iquantitator and  <dig>  using the log averaging approach. in these cases, a number of peptides exhibit fold changes that differ greatly from the associated protein when only one form of that peptide is observed  and the extent of modification varies across samples or treatment groups. the histograms of figure  <dig> give error distributions for the two approaches and illustrate the presence of the few cases that greatly increase the mean error in the log-space averaging approach. when the median square error is used instead of the mean square error, the few cases resulting in large errors are less important and the difference between iquantitator and the log-averaging approach is less noticable . many proteins identified in itraq experiments are associated with only a few peptides. using the log-space averaging approach, the fold change estimate for a protein makes no use of the data associated with other proteins/peptides and the overall distribution of fold changes seen in the data. the inclusion of a common prior distribution allows information to be shared across proteins and combines data across samples. in these examples, two samples from each treatment group were included in the experiment. here, we used the model to combine information from samples from each treatment group to create a single estimate of the expression change across groups. in the simulated multi-experiment case, the results from iquantitator and the log-space averaging approach were comparable. as in the first group of single-experiment cases, no treatment dependent modifications were included and, as before, the mean square errors for the two methods were similar .

while the proposed method demonstrates a lower prediction error, we must also note that the method tends to produce estimates shifted towards the null hypothesis . resulting estimates are, thus, conservative. in the model used in this study, the prior distribution is given a  <dig> mean with an unknown precision, thus indicating a prior preference for the null hypothesis. the prior specification can be adjusted to relax this preference as desired. we also note that in cases where the data is noisy and the resulting estimates in precision are small, the shift tends to increase. this effect is evident in equation  which gives the rule for updating the model effects. the update mean is a sum of the prior mean and the mean estimated from the data, weighted by the prior precision and the model precision. with noisy data, the prior precision can tend to dominate, driving the estimate toward the prior mean  and thus underestimating the magnitude of the expression change. we find that with proper selection of prior parameters, the disadvantage of the null shift tends to be balanced by the improved accuracy in the expression change estimate. adjustment of the prior specification can be used to control this balance.

chicken heart development
embryonic development is an excellent model system for evaluating a continuum of protein expression dynamics as no extrinsic manipulations are required to affect change - it is a highly integrated melody of natural processes, which minimizes experimenter-related error. while early embryonic events proceed rapidly, the later phases of development are largely characterized by overt growth of organs and tissues that approximate their more mature counter parts martinsen . we chose to compare the chick heart cytosol proteome of hh stage  <dig> vs  <dig> embryos as this time difference coincides primarily with a 3- <dig> fold increase in muscle mass. there are also more subtle, but critical changes in the conduction system and valvular structure, with the potential for detecting tissue specific isoform expression that would allow for assessing the detection limits of the itraq methodology. however, the results of the hh stage  <dig> vs.  <dig> comparison showed little difference in the heart cytosolic protein composition aside from constituents in the blood, possibly reflecting expansion of the coronary network.

to facilitate further understanding of the performance of the software described here, we also compared estimates derived using log space averaging to the estimates provided by iquantitator. in this experiment, two samples from each of two treatment groups were processed, ratios for each of the two control treatment pairs were computed for each reported spectrum with identification meeting the search criteria . each set of ratios was normalized to the median of the set. for each protein the log-space average of the normalized ratios for all spectra assigned to a given protein is computed providing a single log-ratio average for each identified protein. figure  <dig> compares the estimates provided by the two methods. from the figure we see the tendency toward conservative estimates when using iquantitator discussed above. while proteins identified by a single peptide would not normally be reported, we plot them here  to illustrate how the shift toward more conservative estimates is affected by the available information.

discussion
we report here on the development and application of a new software tool, iquantitator, designed to facilitate analysis and reporting of itraq data. the tool's model-based approach, inference using the bayesian framework, customized gibbs sampler, and r-based hypertext-linked report generator aid in the analysis of itraq data for a variety of experimental designs.

experiments involving multiple itraq runs present a number of challenges including limited coverage overlap across runs, proteins identified by single peptides, and proteins appearing in a single experiment. the statistical and computational approach employed here attempts to address many of these problems without requiring special handling. as noted above, the approach used here allows for information sharing across levels of a given model effect . for example, the treatment-dependent protein relative expression estimate is based on both the information specific to that protein and the variation in relative expression over all proteins. this sharing of information is evident in equation , the update rule for model parameters. within the model, the term gj, c represents the log difference between protein i's treatment-dependent change in expression and that of associated peptide j. when a single peptide identifies a protein, the relative expression estimate is shared between gj, c and ri, c. when peptides within the sample provide consistent estimates of the associated protein, the protein-level estimate for proteins identified by a single peptide tend to follow the peptide estimate and the posterior estimate of gj, c tends toward  <dig>  in cases where the peptide-level estimates of relative expression differ significantly from the associated protein-level estimates, as in our simulated cases involving protein modifications, the tendancy is for a more pronounced shift toward conservative estimates of relative expression. difference in estimates for proteins identified by a single peptide and those identified by more than one peptide can be seen in figure  <dig> where we see an increased tendency for estimates to shift toward the null hypothesis . in cases of increased noise or limited data, the software tends to produce more conservative estimates.

high-throughput proteomics is a complicated process involving chemical modification, instrumentation, and information processing. an objective of this effort has been the development of an approach that links the biological parameters of interest  to the observed quantities  through a model that represents the sources of variation in the experimental process. the development of a model-based inference approach eases the adaptation of the software to changing experimental designs and processes. iquantitator employs statistically-motivated inference for parameters of a model derived from the experimental process. as such, the sources of variation accounted for in the model are evident and the exponentiated value of each parameter has a clear meaning. the model includes both protein and peptide-level treatment effect estimates allowing for the identification of proteins whose expression changes in a treatment-dependent manner as well as for peptides differentially expressed  relative to the associated proteins. the model can be adapted to a variety of experimental designs, can accommodate more than one treatment group, is not restricted to a single reference channel, and can merge information across experiments.

while a variety of web-based tools have been developed, we choose to consider presentation of results using an electronic document  based on the portable document format. hypertext linking both within the document and to web resources provides many of the features of a web-based interface in a single file that can be easily distributed and viewed with a variety of document readers. the document structure chosen here allows the user to drill down from protein-level data with graphically depicted expression changes and associated uncertainty to the supporting peptide data with summaries across multiple itraq experiments. the entire document is bookmarked and searchable using the capabilities of the user's pdf reader. we believe that many additional features could be included in the e-document report through the use of embedded scripting  and forms. additionally, the design of the package allows other reporting interfaces to be incorporated. the sweave package used here can also generate html using a similar approach and existing interfaces between r and common database engines allow the possibility of pushing results directly to a data management system.

CONCLUSIONS
rapid advances in high-throughput proteomic technologies are requiring comparable advances in modeling, statistical methods, and visualization. iquantitator's process-based modeling approach overcomes limitations in current methods and allows for application in a variety of experimental designs and meaningful integration of data across experiments. additionally, inference in the bayesian framework and an efficient gibbs sampler overcomes estimation problems noted by other researchers. iquantitator is available from the authors as an installable r package.

availability and requirements
project name: iquantitator

operating system: platform independent

programming language: r, c

other requirements: the r software for statistical computing , pdflatex 

license: gnu gpl

any restrictions to use by non-academics: none

an installable r package including all source code , sample output , a document describing the installation and application of the software , an input file containing the msms summary reports from our experiment , a sample r script demonstrating the analysis of experimental data described here , and a test-case specific protein sequence file in fasta format  are provided.

competing interests
the authors declare that they have no competing interests.

authors' contributions
jhs designed and implemented iquantitator. elk proposed requirements for the reports, provided biological samples, and interpreted the results. egh designed the statistical model. kls supervised all ms sample processing and recommended features for the report. scw collected ms data. jhs, elk, kls, and scw contributed to writing the manuscript and all authors read and approved the manuscript.

supplementary material
additional file 1
installable r package file for iquantitator. this archive contains a single file that can be installed under the r statistical computing environment. installation procedures and usage are described in additional file  <dig> 

click here for file

 additional file 2
iquantitator-generated output from the analysis of the chicken heart data. this document provides an example of the iquantitator output for the data collected from the comparison of stage  <dig> and stage  <dig> embryonic chicken hearts.

click here for file

 additional file 3
iquantitator installation and usage manual. a step-by-step introduction to the installation and use of iquantitator based upon the sample data and scripts provided here.

click here for file

 additional file 4
msms summary data from the embryonic chicken heart comparison. a text file, exported from the msms summary report generated using the applied biosystems software that is the primary input for iquantitator.

click here for file

 additional file 5
r script used to create additional file  <dig>  this archive contains an r script that was used to generate the sample output  using the data found in additional file  <dig>  use of the script requires installation of the iquantitator package.

click here for file

 additional file 6
example-specific fasta file. an archive containing a fasta-formatted protein sequence file with a subset of the protein sequence database used by iquantitator, sufficient to support the example provided here.

click here for file

 acknowledgements
this project was supported by a contract from the national institutes of health, national heart lung and blood institute . egh was partially supported by nih grant number nidcr k <dig> de <dig>  this work was conducted in a facility constructed with support from the national institute of health  from the extramural research facilities program.
