BACKGROUND
high-content technologies such as dna microarrays can provide a system-scale overview of how genes interact with each other in a network context. this network is called a gene regulatory network  and can be defined as a mixed graph over a set of nodes  with directed or undirected edges   <cit> . various mathematical methods and computational approaches have been proposed to reconstruct grns, including boolean networks  <cit> , information theory  <cit> , differential equations  <cit>  and bayesian networks  <cit> . grn reconstruction faces huge intrinsic challenges on both experimental and theoretical fronts, because the inputs and outputs of the molecular processes are unclear and the underlying principles are unknown or too complex. in the previous work, we compared two important computational approaches, dynamic bayesian networks  and probabilistic boolean networks for reconstructing grns using a time-series dataset from the drosophila interaction database, and found that dbn outperforms pbn  <cit> . in this paper, we emphasize the dbn approach.

dynamic bayesian networks  are belief networks that represent the stochastic process of a set of random variables over time. the hidden markov model  and the kalman filter can be considered as the simplest dbns. however, kalman filters can only handle unimodal posterior distributions and linear models, whereas parameterization of hmm grows exponentially with the number of state variables  <cit> . several algorithms have been developed to learn structure for belief networks from both complete  <cit>   and incomplete  <cit>   datasets. structure expectation-maximization  has been developed for learning probabilistic network structure from data with hidden variables and missing values  <cit> . a structure learning algorithm has also been developed for high-order and non-stationary dynamic probabilistic models  <cit> .

a commonly used structure learning algorithm is based on reveal   <cit>  which learns the optimal set of parents for each node of a network independently, based on an information theoretic concept of mutual information analysis. however, the two-stage temporal bayes network  cannot be well recovered by application of reveal. in this work, we implemented a more sophisticated algorithm, proposed by friedman  <cit> , to learn the structure of both initial networks and transition networks, which specified a stationary correlation between two consecutive time periods. compared with murphy's algorithm, it improves performance in two ways. first, in score function, it considers time lags that may happen in biological processes. second, it fetches the relationship which gains the maximum score function in the same time period or in the two consecutive time periods. thus, friedman's dbn structure learning algorithm was used in our work and its performance in terms of reconstruction accuracy was also evaluated using synthetic gene expression datasets and a real yeast time-series benchmark dataset.

in the following sections, we first provide an introduction to dbn and existing dbn algorithms for reconstruction of grns. we then present an implementation of friedman's dbn algorithm. finally, we apply the algorithms to synthetic datasets and a real yeast benchmark dataset, and compare its performance to the commonly used murphy's dbn algorithm  <cit>  based on reveal.

methods
dynamic bayesian networks
a dbn is a probabilistic network defined as a pair  representing the joint probability distribution over all possible time series of variables x={x <dig> x <dig> ...,xn}, where xi represents the discretized-valued random variables in the network. xi is composed of an initial state of bayesian network b0=and a transition bayesian network b→= . in time slice  <dig>  the parents of xi <cit>  are specified in the prior network b <dig>  the parents of xi are those specified in time slice t and t+ <dig> in b→. the structure of a two-stage temporal bayes network  is showed in figure  <dig>  dbn theory is generally based on two assumptions. first, the process is markovian in x, i.e. p=p. the other assumption is that the process is stationary, i.e. the transition probability p is independent of t .

bayesian information criterion for dbn
given a bayesian network with structure g, parameters and the observations d, we define a structure prior that implies a prior probability on different graph structures, and a parameter prior, that puts a probability on different choice of parameters once the graph is given. by bayes rule,

 p=ppp 

where the denominator is simply a normalized factor. thus, we define the bayesian score as:

 scoreb=logp+logp 

where

 p= ∫ θgppdθg 

where p is the marginal likelihood of the data given the network 〈g,θg〉 and p is our pior.

under dirichlet distribution prior for all parameters in the network, when m→∞, we have

  logp=l-logm2dim+o 

where  is the model dimension, or the number of independent parameters in g.

this approximation is called the bayesian information criterion . n. friedman, et al. deduce bic for dynamic bayesian network in his work, which is briefly described below.

it is assumed that the dataset d is composed of nseq complete observations. the first such sequence has length ni and specifies values for the variables xl <cit> ,...,xl, which means in different time slice the number of observations can be different. with such a dataset, we can learn b <dig> from nseq observations of initial slice, and learn b→ by n= ∑lnl transactions of transition slices.

we use the following notations,

 θi,ji′,ki′= pr=ji′)θi,ji′,ki′→= pr=ji′)ni,ji′,ki′= ∑li=ji′;xl)ni,ji′,ki′→= ∑l∑ti=ji′;xl) 

where i is an indicator function which equals  <dig> if the corresponding event occurs in sequence xl, and  <dig> otherwise.

the likelihood function decomposes as:

 pr= ∏i∏ji′∏ki′i,j′,k′)ni,j′,k′×∏i∏ji∏kini,j′,k′→ 

and the log-likelihood is given by

 l= ∑i∑ji′∑ki′ni,j′,k′ logθi,j′,k′+∑i∑ji∑kini,j′,k′→logθ→i,j,k 

such decomposition implies that b <dig> is independent from b→, so we can give bic score as bic = bic0+bic→

where,

 bic0= ∑i∑ji′∑ki′ni,ji′,ki′ logθi,ji′,ki′-lognseq2#g0bic→= ∑i∑ji∑kini,ji,ki′→logθi,ji,ki→-logn2#g→ 

learning network structure
under friedman score metrics, the maximized score can be exploited by any bayesian structure learning procedure, such as hill-climbing search procedures. in this paper, we modify k <dig> algorithm, and adapt it to learn structure for dbn, as described in figure  <dig>  k <dig> algorithm was described by gregory e. cooper  <cit> . it begins by making the assumption that a node has no parents, and adds gradually with those that most increase the score of the structure. different from the k <dig> bayesian structure learning algorithm, an additional constrain must be imposed which is that the transition network structure must repeat between time slices over time. furthermore, we learn best structure of b <dig> independently of that of b→. we find the maximum score function and add a correlation between the factors in consecutive time slices or the same time slice if the relationship increases the score function. we stop adding parents to the node, when the addition of no single parent can increase the score.

existing approaches for comparison
for convenience of performance analysis in the next section, we briefly describe murphy and zou's previous work here and present results in the next section. the widely used dbn implementation developed by murphy and mian  is based on reveal  <cit> . given an unknown structure with full observations, the algorithm learns the parent set for each node independently. there are 2n such sets, which can be arranged in a lattice for the permutation of factors. the problem is to find the highest score in the lattice. the approach taken by reveal is started from the bottom of the lattice, and evaluates the score at all points in the successive level until a point is found with a score of  <dig> . zou and conzen  <cit>  proposed a method to generate a preprocessed network for potential regulators by biological interpretation of time course microarray data. it assumes that the gene with earlier initial up-regulation is the potential regulator of those with later initial up-regulation. this preprocessed network is used to narrow down the search space for murphy's dbn algorithm because it requires excessive time to find a permutation for each node even when imposing a maximum number of parents for the nodes if the network dimension is large.

RESULTS
the friedman's algorithm described in the method section was implemented based on murphy's bnt tool box . we tested four cases of dbn algorithms on reconstruction of synthetic networks. the four methods are:  zou's preprocessed networks consisting of potential regulators by biological interpretation of time course microarray data ,  murphy's dbn, implemented in conjunction with the preprocessed networks ,  friedman's algorithm , and  friedman's algorithm combined with the preprocessed networks .

precision  and recall  were used as the metrics for performance comparison. here, r is defined as ce/ and p is defined as ce/, where ce denotes true positive edges that exist in both the true network and the predicted network, me false negative edges that exist in the true network but not in the inferred network, and fe false positive edges that do not exist in the true network but do exist in the predicted network.

synthetic data
the synthetic datasets and network were generated using genenetweaver from dream  projects  <cit> . we used sub-networks of different sizes  with randomly picked factors from a high-dimensional yeast grn with  <dig> nodes and  <dig> edges. a model consisting of ordinary and stochastic differential equations and gaussian noise model was used to generate synthetic gene expression data with a total of  <dig> time points and  <dig> replicates for each time slice.

an example of the 10-gene transition network reconstructed using friedman's algorithm is shown in figure 3a. this network was converted to a grn  by forming a relationship between two genes if the two are related in time t and time t+ <dig> as the dbn theory suggests.

the second example is the grns with  <dig> genes as shown in figure  <dig> where the dashed lines indicate false positive edges, and solid lines true positive edges. the true network used to generate synthetic data in genenetweave is given in figure  <dig>  the preprocessed network includes a large number of false positive edges , resulting in a lower accuracy. the grn reconstructed by murphy& zou, as given in figure  <dig>  is a sparse network that has a lower recall, compared to the true network.

the grn reconstructed by the modified friedman method  without a preprocessed network is a dense network, as given in figure  <dig>  it is noted that the two regulators  were successfully reconstructed and they interact with  <dig> and  <dig> target genes, respectively. the grn reconstructed by the friedman method has a much higher structure similarity to the true network than murphy & zou . in method  <dig>  the preprocessed network also used friedman method to reduce the search space. the reconstructed grn is also a sparse network with only one regulator gene identified, as demonstrated in figure  <dig>  it is seen that zou&conzen's algorithm can generate a preprocessed network to narrow down the search space, which is meaningful. while it rules out around 86% of the edges from the complete network, it is also a relatively loose rule to retain a large network for the next level learning algorithm. however, when the network size becomes larger, the precision of the preprocessed network  gradually drops to the random guess precision , as shown in figure  <dig> 

a complete performance comparison of the four algorithms in terms of precision and recall is given in figure  <dig> and the corresponding data given in table  <dig>  which shows that friedman's method gives higher precision and recall than the method of murphy&zou in all four networks. these results demonstrate that friedman's method has a great potential in improving the accuracy of grns reconstruction.

real yeast benchmark dataset
we also investigated the performance of friedman's dbn algorithm in reconstruct of grns from real biological datasets. we tested it on the benchmark yeast time series dataset from spellman's experiment  <cit> , and compared it with murphy's dbn algorithm with zou's preprocessed network  <cit> , as well as a modified probabilistic boolean network algorithm  <cit> . the dataset is from spellman's experiment  <cit> , and the interactions are from saccharomyces genome database  database. the networks reconstructed by these three algorithms are showed as figure  <dig> and precision and recall are given in table  <dig>  the results show that the friedman's dbn algorithm outperforms murphy's dbn algorithms in terms of accuracy and recall. murphy's dbn algorithm shows a sparse network structure, compared with the rest. it is also found that the reconstruction accuracy from real biological datasets  is higher than that from the synthetic data.

CONCLUSIONS
in this study, we implemented friedman's score metrics for dbns by our algorithm, and applied the algorithm in reconstruction grns using both synthetic time series gene expression data and a real yeast benchmark dataset. the algorithm is able to capture the correlation between consecutive time slices in both score function and learning procedure, thus friedman's score metrics gives a higher precision and recall than the naive reveal algorithm application in the absence or presence of preprocessed network generated by zou&conzen's algorithm. this also reflects that in real biological processes, time lag regulation might better describe the true regulation between genes. also based on the testing results, the friedman's score metrics we implemented has great potential in improving the accuracy of structure prediction for grn reconstruction with complete synthetic time series data.

competing interests
the authors declare that they have no competing interests.

authors' contributions
hl implemented the algorithms, conducted network inference and performance comparison. hl and cz drafted the paper. cz, pg and ejp supervised this work and revised the paper. nw participated in algorithm development and network inference. all authors read and approved the final manuscript.

