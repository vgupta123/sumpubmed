BACKGROUND
even a single amino acid substitution, a mutation, in a protein sequence may result in significant changes in protein stability, structure, and therefore in protein function as well  <cit> . hence, accurate prediction of stability changes in protein variants is a crucially important task in computational protein design. moreover, the ability to predict stability changes may help us understand the relationship between protein mutations and inherited diseases.

as more experimental data about stability changes became available in the protherm database  <cit> , machine learning methods for predicting stability changes emerged. broadly, they can be categorised as structure-based and sequence-based methods. structure-based methods  require protein three-dimensional structure on the input which can be limiting if the experimentally solved structure is not available. thus, with the immense amounts of data coming from the genome sequencing projects, the sequence-based methods are valuable tools for studying protein variants. in this work, we focused our attention on the sequence-based methods.

traditionally, sequence-based methods make their predictions based on the amino acid identities of the mutation site and several neighbouring residues . alternatively, the mutation site and its neighbouring residues can be encoded with a set of amino acid properties to account for physicochemical differences among amino acids  <cit> . in our recent work  <cit> , we proposed a method that combines amino acid identities of the mutation site neighbourhood with evolutionary and predicted structural features.

all of the studies referenced above were able to report a high cross-validation accuracy between 77% and 86%  when classifying mutations as stabilising or destabilising . regarding the real-value prediction of stability changes, the correlation of the predicted and experimentally measured stability changes reached a correlation coefficient of  <dig>  to  <dig>  . nevertheless, an assessment study  <cit>  indicated that the prediction performance of these methods on an independent test set is considerably lower than stated in the original studies.

there might be several aspects to why currently available methods did not perform well in the independent assessment. for example, as shown in  <cit> , when the data set used for training and evaluation did not contain multiple records for measurements of the same mutation at different experimental conditions, sensitivity  of the proposed method decreased from 71% to 28%. when the evaluation was further restricted to only proteins with low sequence similarity to the training set, sensitivity reached only 15%. these findings  <cit>  suggest that currently available methods may suffer from over-fitting on the mutations and proteins that they experienced during training. however, the over-fitting problem is not apparent from the performance results reported in the original studies. this may mean that the evaluation scheme needs to be revisited.

commonly, stability changes prediction performance is evaluated using cross-validation which randomly divides all data set examples into k folds where k− <dig> folds are used for training and one fold for testing. this is repeated k times, each time with a different test fold. typically, a stability changes data set consists of  <dig>  to  <dig>  examples describing various mutations in up to  <dig> different proteins. upon randomly dividing examples of such a data set into k folds, different mutations of the same protein, and even the same residue, can be found among several folds. this means that even though a prediction method is tested on mutations unseen during training, different mutations of the same protein, and even the same residue, can be found in both training and test folds. this introduces bias if a method is designed using a data set in which correlation among different mutations of the same proteinexists. for instance, the data set compiled in this study contains  <dig>  unique mutations in  <dig> different non-homologous proteins . in  <dig> proteins which have more than one mutation record available, 78% of mutations agree with the prevailing sign of stability changes for the given protein. this number rises to 82% when we analyse mutations in each residue position with more than one mutation record available. because of this correlation in the available data, stability changes prediction methods should be evaluated solely on mutations in previously unseen non-homologous proteins.

in this study, we provided experimental evidence of the limitations of the evaluation commonly used for assessing the prediction performance. next, we proposed an evaluation scheme that can detect over-fitting on mutations in residues and proteins encountered during training. to achieve this, the evaluation is done solely on previously unseen proteins with sequence similarity below 25%. finally, to improve the prediction performance of our previously proposed method  <cit> , we identified features which led to over-fitting and further extended the model with new features. the new method bases its predictions on evolutionary and structural encodings with amino acid parameters . we compared ease-aa with currently available methods for both classification and real-value prediction of stability changes. our results show that ease-aa increases prediction performance on unseen non-homologous proteins.

methods
stability changes prediction can be viewed as a machine learning classification problem if we are only interested in the direction of the stability change: stabilising  or destabilising . if we are concerned with the real-value prediction, it is a regression problem. in this study, we proposed a method referred to as ease-aa: evolutionary and structural encodings with amino acid parameters. ease-aa encompasses two models: one trained for classification and one for regression.

predictive features for ease-aa
for machine learning prediction of stability changes, each mutation needs to be encoded with a number of predictive features. we combined evolutionary and predicted structural features with physical amino acid parameters to design ease-aa.

evolutionary features
some residues in a protein sequence are more conserved within the family of related proteins than others. notably, functionally important sites tend to be conserved. this has been previously exploited for the prediction of deleterious mutations . we introduced a range of evolutionary features for the prediction of stability changes in our recent work  <cit> . there, the best performing model included two evolutionary features: sift score  and mutation likelihood .

sift  <cit>  predicts whether a mutation affects the function of a protein. it is calculated from a scaled probability matrix of possible amino acid substitutions generated from a multiple sequence alignment of related sequences. sift scores range from  <dig> to  <dig> where scores below  <dig>  are predicted as deleterious mutations. we ran sift using the swiss-prot and trembl databases with sequences more than 90% identical to the query removed.

the feature mutation likelihood  expresses the probability of the introduced amino acid to appear in the multiple sequence alignment of related proteins. to calculate this feature, three iterations of psi-blast  <cit>  in default configuration were used to search the ncbi non-redundant database. then, m was extracted from the last position specific scoring matrix . we divided m by  <dig> for normalisation so that most values fell within the range of − <dig> and  <dig> 

structural features
it has been shown previously that stability changes prediction can be guided by observing structural properties describing the secondary structure and accessible surface area of the mutated residue  <cit> . however, structural information is not available in the case of sequence-based prediction of stability changes. nevertheless, in our recent work  <cit> , we found that predicted structural features can supplement the missing structural information. there, the best performing model included features secondary structure type  and accessible surface area  for classification and real-value prediction, respectively. we included both features in ease-aa and further extended the model with predicted disorder probability .

we used the multi-step neural network method spine-x  <cit>  for the prediction of the secondary structure type and accessible surface area of each mutation site. for the prediction of the disorder probabilities, the neural network method spine-d  <cit>  was used. since feature ss describes the mutation site as either α-helix, β-sheet, or coil, it was represented in three binary inputs . unlike in our previous work where feature asa encoded mutation site as buried or exposed, we included the real value of the predicted accessible surface area in ease-aa.

amino acid parameters
different sets of physical parameters for encoding the substituted and neighbouring amino acids have been introduced for the prediction of stability changes  <cit> . recently, calculating the difference in physical parameters between the introduced and deleted amino acids was proposed  <cit> . we followed this methodology and applied it to seven representative parameters including hydrophobicity, volume, polarisability, isoelectric point, helix probability, sheet probability, and a steric parameter . these parameters were first introduced in  <cit>  and later applied to the prediction of secondary structure  <cit> . we used the scaled values of the seven parameters from  <cit> . we refer to the predictive feature encompassing the differences of seven physical parameters for the introduced and deleted amino acids as amino acid parameters .

final set of predictive features
the final set of predictive features for ease-aa was composed of the following features: s , m , ss , asa , d , aap . compared to our previous work  <cit> , ease-aa extends the predictive model with the disorder probability  and seven amino acid parameters . moreover, we excluded 6× <dig> binary inputs describing the three and three amino acid neighbours to the left and right from the mutation site. also, ease-aa does not include  <dig> inputs encoding the identities of the deleted and introduced amino acids. this approach resulted in an overall reduction of the number of input attributes from  <dig> to only  <dig>  hence, ease-aa is presumably more robust against over-fitting.

support vector machines
support vector machines   <cit>  are machine learning algorithms which can approximate non-linear functions by mapping the inputs to a high-dimensional feature space using a kernel function and then, solving a linear problem by finding a maximum margin separating hyperplane. we adopted the radial basis kernel function because it has been shown to perform well for predicting stability changes  <cit> . to implement our method with svm, we used the libsvm library  <cit> .

the regularisation parameter c and the radial basis kernel width parameter γ need to be chosen to optimise svm performance. in the case of real-value prediction, another parameter , determining the error neglected during training, is required. for classification, a parameter setting the weight  of the penalty for training error on positive examples should be set if the number of positive and negative examples in the data set is unbalanced. for each experiment, we optimised these parameters by running a grid search using 10-fold cross-validation on the training set so that the highest matthews correlation coefficient  and lowest root mean square error  were reached for classification and real-value prediction, respectively. in the grid search, we considered all possible combinations of c ∈ {2− <dig>  2− <dig>  . . . , 215}, γ ∈ {2− <dig>  2− <dig>  . . . , 21}, and w ∈ { <dig>   <dig> ,  <dig>   <dig> , 3} for classification, and c ∈ {2− <dig>   <dig>  . . . , 26}, γ ∈ {2− <dig>  2− <dig>  . . . , 20}, and ε ∈ {2− <dig>  2− <dig>  . . . , 2−1} for real-value prediction. the range values for c, γ, and ε were taken from the libsvm grid search  <cit>  and extended to suit all methods assessed in this study. we also considered using a data-driven approach for optimising the kernel width parameter   <cit> , however, for the relatively small size of our data set, the grid search was a sufficient solution.

as mentioned above, we decided to optimise the svm performance in terms of mcc in the case of classification. mcc is a measure of prediction performance that provides more relevant information than classification accuracy in cases when the data set is severely biased against one class of examples. since destabilising  mutations prevail in the available experimental data , optimising on mcc allowed us to achieve a more balanced performance in terms of correctly predicted both stabilising and destabilising mutations.

data sets
we compiled a data set of free energy stability changes from the protherm database  <cit>  . there, a stability change is defined as the difference in the unfolding free energy: ΔΔgu = Δgu − Δgu. hence, for the classification problem, we defined stabilising mutations  to be the positive examples and destabilising mutations  to be the negative examples.

we extracted  <dig>  mutations with listed stability changes and cross-checked all the sources where the measurements came from. we found that incorrect values  had been entered from at least  <dig> sources. we corrected stability changes for all relevant  mutations in the extracted data set. next, we removed all duplicate entries of the same amino acid substitutions . if several measurements of the same mutation under the same experimental conditions were present, we averaged the stability changes and kept only a single entry. if several measurements of the same mutation under different experimental conditions were present, we kept only the measurement closest to the physiological ph  <dig>  we removed the other entries because we believe that there is not enough data to appropriately model stability changes of the same mutation under different experimental conditions. moreover, stability changes of mutations differing only in temperature and ph were highly correlated in the extracted data set.

finally, we identified  <dig> clusters of homologous sequences with more than 25% sequence similarity using blastclust  <cit> . if there were several measurements of the same amino acid substitution within a single cluster, we kept only the measurement closest to the physiological ph  <dig>  this process yielded a non-redundant data set of  <dig>  mutations in  <dig> different proteins grouped into  <dig> non-homologous clusters. we refer to this data set as s <dig>  the data set is available in additional file  <dig> 

experiments and different evaluation schemes
three different evaluation schemes were compared in this study: unseen-mutation, unseen-residue, and unseen-protein evaluation. the most commonly used evaluation of sequence-based stability changes prediction methods is on unseen mutations. there, mutations are randomly divided into training and test sets . this means that different mutations in the same protein, and even in the same residue, can be used for training and testing. because of the correlation in the available data sets, the most important drawback of the unseen-mutation evaluation is that even methods which over-fit on residue positions and proteins from the training set can achieve high prediction performance on the test set .

the unseen-residue evaluation guarantees that all mutations in the same residue position of a protein  exist either in the training or the test set . hence, methods which over-fit on mutations in residue positions from the training set are unlikely to achieve good prediction performance on the test set . the unseen-residue evaluation has been previously adopted for the design of a three-state prediction method i-mutant <dig>   <cit> .

finally, the strictest assessment we considered was the unseen-protein evaluation. in this case, all mutations in the same protein and its homologues were used exclusively for either training or testing. thus, if a prediction method cannot generalise well for mutations in previously unseen non-homologous proteins, it is unlikely to achieve a good performance under this evaluation.

training set, test set, and cross-validation folds
to achieve an unbiased evaluation, we split the s <dig> data set randomly into training and independent test sets with a ratio of  <dig> :  <dig>  we repeated this process  <dig> times producing  <dig> different training/test splits. each training set was further divided into  <dig> cross-validation folds. the ratio of positive and negative examples in the  <dig> folds and in the independent test set was kept close to that of the original data set. cross-validation using the  <dig> folds was employed to optimise the performance of the evaluated methods. then, each method was trained on the whole training set and tested on the examples in the independent test set. the whole process was repeated  <dig> times, utilising the  <dig> different training/test splits. finally, the results of the  <dig> experiments were averaged.

we compared unseen-mutation, unseen-residue, and unseen-protein evaluation schemes in this study. hence, splitting into the training and independent test sets as well as to the cross-validation folds was executed according to one of these three evaluation schemes for different experiments.

comparison with currently available methods
we compared the prediction performance of our new method  with our previously proposed method  <cit>  which also employs evolutionary and structural encodings . to further show how prediction performance varies when different evaluation schemes are employed, we evaluated another two sequence-based methods: i-mutant <dig>   <cit>  and mupro  <cit> . these two methods had also been included in an independent assessment study  <cit> . we did not compare with i-mutant <dig>   <cit>  because it predicts stability changes into three states .

to be able to asses i-mutant <dig>  and mupro under different evaluation schemes, we implemented the two methods according to their description in the original publications. therefore, rather than performing a comparison with the actual methods, we performed a comparison with the set of predictive features proposed for i-mutant <dig>  and mupro. this approach allowed us to achieve a fair comparison of all four methods by optimising the svm parameters and re-training the svm models for every experiment on the same training set.

i-mutant <dig>  bases its prediction on the occurrence frequencies of the sequential neighbourhood, hence, we refer to our implementation as seq-freq. mupro uses amino acid identities of neighbouring residues, thus, we refer to our implementation of this method as seq-neighb.

evaluation measures
the prediction performance in the classification task was assessed in terms of matthews correlation coefficient , classification accuracy , sensitivity , specificity , positive predictive value , and negative predictive value :  <dig>    <dig>    <dig>    <dig>    <dig>    <dig>  

where tp, tn, fp, and fn refer to the number of true positives, true negatives, false positives, and false negatives, respectively. furthermore, we assessed the classification performance by plotting the receiver operating characteristic  curve and calculating the area under the roc curve . a roc curve plots the true positive rate  as a function of the false positive rate  at different prediction thresholds.

for real-value prediction, performance was assessed in terms of pearson correlation coefficient  and root mean square error :  <dig>    <dig>  

RESULTS
we compared the prediction performance of the two methods from the literature, i-mutant <dig>   <cit>  and mupro  <cit>  , our previously proposed method  <cit>  , and the method designed in this study . we evaluated both classification and real-value prediction employing the s <dig> data set. to achieve a fair comparison of the four methods, each method was re-trained and had the svm parameters optimised  for every experiment.

comparison of different evaluation schemes
commonly, stability changes prediction methods are evaluated using a cross-validation where different mutations of the same protein can be randomly distributed across different folds. we believe that this approach leads to a considerable overestimation of the prediction performance for proteins with low sequence similarity to the training set. to illustrate this in an experiment, we divided our data set into training and independent test sets in three different ways following the unseen-mutation, unseen-residue, and unseen-protein evaluation schemes . in the unseen-mutation evaluation, different mutations are randomly distributed between the training and test sets, whereas the unseen-residue  evaluation guarantees that all mutations in the same residue position  exist either in the training or the test set. also, we performed a 10-fold cross-validation on the training set for each training/test split. in this case, the  <dig> folds were created by randomly dividing all mutations. this means that the cross-validation was performed in an unseen-mutation evaluation fashion regardless of the evaluation scheme used for the independent test.


seq-neighb
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

seq-freq
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

ease
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

ease-aa
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

∗ cross-validation folds were created by dividing mutations randomly 



for the independent test, we used three different evaluation schemes: unseen-mutation, unseen-residue, and unseen-protein. the unseen-mutation evaluation resulted only in a marginally lower performance compared to the cross-validation results . however, if the unseen-residue or unseen-protein evaluation was employed, the performance of all four methods decreased considerably when compared to the cross-validation results. the largest decline was for seq-neighb. in this case, the mcc decreased by  <dig>   for both unseen-residue and unseen-protein evaluations. our new method  experienced the smallest decrease in prediction performance. ease-aa's mcc declined by  <dig>  and  <dig>   for predictions on unseen residues and unseen proteins, respectively.

the receiver operating characteristic  curves in figure  <dig> compare the true positive rate of ease and ease-aa as a function of the false positive rate for the unseen-mutation and unseen-protein evaluation. we were interested in studying the decrease in the independent test performance between the two evaluation schemes. while in the case of ease-aa, the area under the roc curve  declined only by  <dig>  for the unseen-protein evaluation, ease yielded an auc decrease of  <dig> . the roc curves of ease and ease-aa for the unseen-residue evaluation were similar to those for the unseen-protein evaluation .figure  <dig> 
roc curves performance of ease and ease-aa using two different evaluation schemes. the true positive rate of ease and ease-aa is shown as a function of the false positive rate at different prediction thresholds. these are independent test results using the unseen-mutation and unseen-protein evaluation. while for ease-aa the area under the roc curve  declined only by  <dig>  when comparing the unseen-mutation and unseen-protein evaluation, ease yielded a decrease of  <dig> .



the results from the real-value prediction experiment showed the same trend in the relative comparison of the four methods under the three different evaluation schemes . prediction performance decreased when comparing the results from the unseen-mutation with the unseen-residue or unseen-protein evaluation. the smallest decrease in prediction performance was yielded by ease-aa. also, ease-aa was the best performing method in predicting real-value stability changes in previously unseen residues and unseen proteins.table  <dig> comparison of the four methods using the three different evaluation schemes for real-value prediction


seq-neighb
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

seq-freq
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

ease
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

ease-aa
cross-validation
∗
unseen-mutation
unseen-residue
unseen-protein

* cross-validation folds were created by dividing mutations randomly 



training and evaluation on previously unseen non-homologous proteins
we discovered that the unseen-mutation evaluation leads to overestimating the prediction performance for previously unseen residues as well as for previously unseen proteins . interestingly, the prediction performance on unseen residues was similar to that on unseen proteins. therefore, we employed the unseen-protein evaluation to further analyse the prediction performance of the four methods.

one of the reasons for the suboptimal performance in predicting unseen proteins could be that we optimised the four methods employing the unseen-mutation cross-validation . to optimise the compared methods more appropriately to predict stability changes in unseen proteins, we split the training set into  <dig> folds so that none of the folds shared homologous sequences .


seq-neighb

seq-freq
unseen-protein

ease
cross-validation

ease-aa

seq-neighb

seq-freq
unseen-protein

ease
independent test

ease-aa


positive  predictive value  refers to the proportion of mutations predicted as stabilising  that are truly stabilising . ease-aa yielded ppv and npv of  <dig> % and  <dig> %, respectively. these results represent absolute improvements of  <dig>  and  <dig>  percentage points when compared to seq-freq. the respective improvements compared to ease were  <dig>  and  <dig>  percentage points.

the roc curves in figure  <dig> compare the true positive rate of the four methods as a function of the false positive rate at different prediction thresholds. the figure demonstrates the benefit in terms of the number of correctly predicted positive examples upon employing our method . ease-aa achieved an auc of  <dig> , while ease, seq-freq, and seq-neighb yielded an auc of  <dig> ,  <dig> , and  <dig> , respectively.figure  <dig> 
roc curves performance of the four methods using the
unseen-protein
evaluation. the true positive rate of the four methods is shown as a function of the false positive rate at different prediction thresholds. these are unseen-protein independent test results. ease-aa, ease, seq-freq, and seq-neighb yielded the area under the roc curve  of  <dig> ,  <dig> ,  <dig> , and  <dig> , respectively.



we estimated the statistical significance of ease-aa's improvements in the mcc and auc over the  <dig> replications of independent testing using a student t-test. the null hypothesis stated that there was no statistical difference in the mcc  for ease-aa and each of the three compared methods. the p-values associated with this null hypothesis were all less than  <dig> .

the results from the real-value prediction experiment employing the unseen-protein evaluation are summarised in table  <dig>  as in the case of classification, ease-aa performed the best yielding a correlation coefficient  of  <dig>  and root mean square error  of  <dig> . these results represent relative improvements of 24% for r  and 5% for rmse  to the second method .table  <dig> real-value prediction performance of the four methods optimised for the unseen-protein evaluation


seq-neighb

seq-freq
unseen-protein

ease
cross-validation

ease-aa

seq-neighb

seq-freq
unseen-protein

ease
independent test

ease-aa


comparing the results when the unseen-mutation cross-validation  and the unseen-protein cross-validation  were used for model optimisation, there does not seem to be a considerable difference in the unseen-protein independent test performance. the only exception was seq-freq which seemed to benefit from the appropriate model optimisation. seq-freq's correlation coefficients increased by  <dig>   and  <dig>   for classification and real-value prediction, respectively.

prediction performance for different types of mutations
ease-aa outperformed the other three methods  in predicting stability changes in unseen proteins. we were interested in how this improvement varied for different types of mutations. we investigated how accurate  each of the four compared methods was in predicting mutations in residues of different secondary structure types  and accessible surface area assignments . residues were defined as exposed if at least 25% of their surface was accessible to the solvent and as buried otherwise. furthermore, we explored the accuracy of predicting mutations inducing 'small'  and 'large'  stability changes.
prediction performance of the four methods for different types of mutations. matthews correlation coefficient  of seq-neighb, seq-freq, ease, and ease-aa is shown as a function of the secondary structure type of the mutated residue, accessible surface area of the mutated residue , and magnitude of the stability change. these are unseen-protein independent test results.



overall, ease-aa achieved improvements in every category included in the comparison. moreover, since the absolute improvements were quite balanced among the different types of mutations , ease-aa yielded higher relative improvements for mutation types which appeared to be more difficult to predict for all of the four compared methods .

predictive features and the improvements yielded by ease-aa
we found that ease-aa consistently outperformed our previous work  when predicting mutations in unseen proteins. hence, we were interested in how each design step of ease-aa contributed towards the final improvement. figure  <dig> compares the cross-validation performance on the training set in terms of matthews correlation coefficient  and the area under the roc curve  for ease, ease-aa, and two 'intermediate' methods .figure  <dig> 
performance of different variations of our method during the design of ease-aa. the unseen-protein cross-validation performance  is shown for four different variations of our method. the difference between aap+d+asa+ease and ease-aa is the removal of the  <dig> input attributes defining the identities of the deleted, introduced, and neighbouring amino acids.



first, we extended ease with two predicted structural features, accessible surface area  and disorder probability . however, the improvement in the cross-validation performance was only marginal. next, the seven physical amino acid parameters  were added. the inclusion of aap yielded a relative improvement of 24%  in terms of mcc. finally, we suspected that the  <dig> input attributes encoding the deleted, introduced, and neighbouring amino acids implemented in ease may have been leading to over-fitting on residue positions encountered during training. after excluding these  <dig> inputs , there was a relative improvement of 19%  in terms of mcc.

it has been shown previously that structural features  <cit>  and amino acid parameters  <cit>  can be used for the prediction of stability changes. to our best knowledge, evolutionary features have been used only in our previous work  <cit> . therefore, we studied the relationship between the evolutionary information and experimentally measured stability changes. we plotted the median of stability changes in the s <dig> data set as a function of the pssm scores for the mutation likelihood  and conservation likehood  . this plot reveals that as the median of stability changes increases, so does the value of m, whereas the value of c decreases. hence, the relationship shown in figure  <dig> demonstrates that there is a higher number of destabilising mutations when the mutation likelihood is low and residue conservation high. on the contrary, stabilising mutations tend to prevail for mutations which are common in the family of related proteins.figure  <dig> 
relationship between evolutionary conservation and stability changes. the median of experimentally measured stability changes in the s <dig> data set is shown as a function of the pssm scores defining mutation and conservation likehood. the plot reveals that there is a higher number of destabilising mutations when the mutation likelihood is low and residue conservation high, while stabilising mutations tend to prevail for substitutions which are common in the family of related proteins.



discussion
our main interest was to asses the prediction of stability changes in previously unseen non-homologous proteins. we found that while high prediction performance can be achieved when different mutations of the same protein and residue positions are randomly divided for training and evaluation, it is challenging to predict stability changes in previously unseen proteins. therefore, our results provide experimental evidence that the commonly adopted unseen-mutation evaluation lead to an over-estimation of the prediction performance. to address the prediction of stability changes in unseen proteins, we extended our previous work  <cit>  and proposed a new method  which was able to outperform the other three methods in our comparison . for classification, ease-aa achieved a matthews correlation coefficient  of  <dig>  . for real-value prediction, pearson correlation coefficient  reached the value of  <dig>  . although such a performance may seem relatively low, these results represent relative improvements to the second best method of 50%  and 24% . we believe that one of the limiting factors in yielding more reliable predictions is the scarcity of stabilising mutations and distinct non-homologous proteins available for training. moreover, as noted elsewhere  <cit> , the variety of available experimental data is quite unbalanced .

comparing the three different evaluation schemes, all four methods achieved a considerably higher prediction performance when the unseen-mutation evaluation was used . this could be attributed to the correlation that exists among different mutations of the same residue in the available experimental data. because this correlation cannot be exploited when evaluation is done solely on residues unseen during training, prediction performance of all four methods decreased considerably upon employing the unseen-residue evaluation. the unseen-protein evaluation further guarantees that all mutations of the same protein are used either for training or evaluation. performance of all four methods changed only marginally when comparing the results from the unseen-residue and unseen-protein evaluation. this is most likely because of the absence of 'protein-wide' predictive features in the four compared methods. hence, the unseen-residue evaluation was just as challenging as the one on unseen proteins.

when comparing performance of ease-aa with our previously proposed method  <cit> , the reasons for the improvements are twofold. firstly, we excluded features encoding the identities of the deleted, introduced, and neighbouring amino acids because they led to over-fitting on residues and proteins encountered during training . secondly, we incorporated the differences in seven representative physical parameters for the deleted and introduced amino acids . for instance, the difference in the physical parameter encoding the volume of an amino acid can suggest if the mutation may induce strain in the protein structure due to the large size of the introduced residue. similarly, a change in the hydrophobicity can suggest an introduction of disturbing interactions in the hydrophobic core of the protein.

our new method adopts the evolutionary predictive features proposed in our previous work  <cit> . actually, the observation that functionally important sites tend to be evolutionary conserved has been previously exploited for the prediction of deleterious mutations  <cit> . however, there are other reasons than the location of functional sites for the existence of conserved regions. for example, conserved regions play an important part in stabilising the structure of a protein  <cit> . we demonstrated that the relationship between evolutionary predictive features derived from pssm and experimentally measured stability changes from our data set agree with these general assumptions about sequence conservation .

it seems that the most difficult mutations to predict are either located in coil and exposed residues or those which cause only small stability changes . prediction performance of all four methods in these three categories was lower than for any other category of different types of mutations that we investigated . these findings are in agreement with the results reported in a study about a neural network structure-based method  <cit> . also, it has been shown previously that different interactions govern stability changes in exposed and buried residues  <cit> . regarding the prediction of 'small' stability changes, naturally, it is harder to differentiate among subtle changes. moreover, experimental data is affected by the error of measurement which can be as large as ± <dig>  kcal mol− <dig> <cit> . hence, the strict classification of the 'small' stability changes as stabilising or destabilising can be misleading  <cit> .

overall, our new method, ease-aa, achieved improvements in all categories of different types of mutations that we investigated. moreover, ease-aa yielded higher relative improvements for the types of mutations which were the most challenging to predict for all four compared methods. these results demonstrate the robustness of the performance of our new method in predicting stability changes in previously unseen non-homologous proteins.

CONCLUSIONS
in this work, we demonstrated how performance varies depending on the evaluation scheme employed. this is most likely because the machine learning methods are prone to over-fitting on mutations in residues and proteins encountered during training. when the evaluation on previously unseen non-homologous proteins was used, currently available methods could not reliably predict stability changes. to address this problem, we designed a new method which is based on evolutionary and structural encodings with amino acid parameters . compared to our previous work  <cit> , features leading to over-fitting were removed and the model was extended with differences in seven physical amino acid parameters.

ease-aa achieved a matthews correlation coefficient of  <dig>  and was able to classify correctly 66% of the stabilising and 74% of the destabilising mutations. for real-value prediction, ease-aa achieved a correlation between predicted and experimentally measured stability changes of  <dig> . even though this performance may seem relatively low, ease-aa predicts stability changes in unseen proteins more accurately than the other three methods in our comparison. this further highlights another important finding of this study that the prediction performance of currently available methods is often overestimated due to randomly dividing different mutations of the same protein, and even the same residue, for training and evaluation.

availability of supporting data
the data sets supporting the results of this article are included within the article and its additional files. the source code of our method is available for download from http://www.ict.griffith.edu.au/bioinf/ease.

electronic supplementary material
additional file 1: data set s <dig>  the files containing the s <dig> data set, as well as training, cross-validation, and test splits are available in a white-space-delimited tabular text format. all files are compressed in a single zip archive s <dig> zip. 

 competing interests

the authors declare that they have no competing interests.

authors' contributions

lf designed the study, developed the methods, and conducted the data analysis under the guidance of bs. lf drafted the manuscript. bs and as contributed to the manuscript preparation.

