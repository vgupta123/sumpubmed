BACKGROUND
full cdna shotgun sequencing is a major approach to finding whole transcriptomes and measuring gene expression. with the advent of next-generation sequencing  technologies
 <cit>  such as  <dig>  and solexa , ngs sequencing has become popular in the study of transcriptomes especially in non-model organisms because of its cost efficiency compared to sanger. in addition, several protocols have been invented to apply ngs technologies and each protocol uses its own short dna tags or adapters attached to the ends of dna fragments for labeling or sequencing. since ngs technologies eliminate bacterial cloning, library preparation is fast and cheap without vector contamination. however, a simple protocol for  <dig> transcriptome sequencing can make artifact sequences, e.g., concatenated amplification primers. this problem can be overcome by using several amplification steps each of which uses different primers
 <cit> .

in transcriptome sequencing projects, the quality of initial data greatly affects downstream analyses and removing contamination has become one of the most important steps. to remove contamination, several software tools are available, including vecscreen
 <cit> , lucy
 <cit> , cross_match
 <cit> , seqclean
 <cit> , figaro
 <cit> , and seqtrim
 <cit> . although these programs have been used in many sequencing projects, most of them are not appropriate to detect the diverse contamination produced by several ngs-based protocols, especially those using two or more pcr amplification primers. none of them support new sequencing features such as barcodes or mids , which are used to pool different samples. many biologists also have difficulty using the programs due to complicated parameters, environment-specific operations and command line execution.

in this paper, we present a new program named estclean to clean raw sequences with seven modules that perform end sequence trimming, barcode trimming, sequencing adapter trimming, amplification primer trimming, poly-a tail trimming, vector screening and low quality region trimming. these modules can be combined based on various sequencing applications, e.g., parallel tagged sequencing
 <cit> . estclean provides a gui with a user-friendly environment to manage sequencing protocols and analysis pipelines. it also produces various summary tables and figures to aid quality control by showing trimming statistics for each module; identifying problematic reads with primer concatenation, wrongly oriented primers, and no barcodes; and assessing sequencing biases.

implementation
the most common sources of contamination in ngs-based ests are barcodes, sequencing adapters, and amplification primers. barcodes or mids  are short dna tags attached to the 5’ ends of reads in order to distinguish pooled samples. sequencing adapters are attached to both ends of dna fragments for cloning and sequencing. although the  <dig> data processing software is supposed to trim sequencing adapters, 3’ sequencing adapters often remain depending on the software version and fragment size. amplification primers are attached to both ends of cdnas to prepare cdna libraries before fragmentation. these primers are often concatenated to each other in badly designed sequencing protocols.

a semi-global algorithm is implemented to search barcodes from the 5’ end of a read sequence. if the number of mismatches and indels between a barcode and a read exceeds allowable errors, then the read is discarded. otherwise the barcode is trimmed and used to separate reads by sample. estclean uses blast
 <cit>  to search sequencing adapters and amplification primers against reads. since blast cannot align the ends of reads with sequencing errors, we extend the alignment using the banded needleman-wunsch algorithm
 <cit>  and allow a small number of unaligned bases at the ends. primers and adapters can match to the middle or ends of a read. therefore we need a different criterion for such cases. if primers and adapters match to the middle of a read, then they should match near perfectly. in this case, we use a minimum alignment length and percent identity. however, if they match to the ends of a read, they can match partially. in such cases we use three parameters: the minimum percent identity of an alignment and the minimum numbers of unaligned bases in the primer and read .

poly-a, consisting of multiple adenosines, is a stretch of a eukaryotic messenger rna  and is important for translation and stability of the mrna. the sequence of cdnas contain poly-a tail or poly-t head sequences because cdna sequencing uses reverse transcription polymerase chain reaction  with amplification primers that have poly-as to make cdna libraries. however, because amplification primers do not contain an entire poly-a tail, we need to trim as and ts before 3’ and after 5’ amplification primers respectively. the starting site of poly-as should be a certain number of bases from the end . we search for a and t in the 3’ and 5’ ends respectively and expand them toward the middle of a sequence as long as the fraction of as or ts is greater than a cutoff. if those regions are greater than or equal to the minimum length of poly-as, then they are trimmed out.

although ngs-based cdna sequencing does not use vectors for amplification, estclean has a module to screen known vectors using vecscreen
 <cit> . estclean also has a module to modify sff files to set a clean region for each read if users have sff tools. discarded read sequences from any steps can be collected and saved as a fasta file and analyzed using blast with a user-provided sequence database.

the main executable scripts of this package have been developed in perl and the user-friendly gui has been developed in java . as shown in figure
 <dig>  the gui enables users to set sequencing protocols, input their own sequences to be trimmed, set parameters for each module, and choose modules to run. to set a sequencing protocol, users input the sequences of amplification primers, sequencing adapters and barcodes. sequencing protocols can be imported and exported in the fasta format. when the cleaning procedure starts, the program puts the selected modules into a task queue and validates the parameters. the left panel of the interface displays the running status. after cleaning, estclean provides several charts and tables for summary , which are very important for quality control. the tables and charts can be stored into a project file for future use. user-defined parameters are stored in a template and can be used in future projects.

one of the unique features of estclean is to show what kind of sequencing errors are present in sequencing data. error-free reads can have pcr amplification primers forward matched in the 5’ end and/or reversely matched in the 3’ end. however, as shown in figure
 <dig>  erroneous reads have reverse and forward matched primers in the 5’ and 3’ ends respectively ; forward and reverse matches of the same primer ; forward match in the 5’ end but with unaligned bases before it ; reverse match in the 3’ end but with unaligned bases after it ; multiple forward matches ; and multiple reverse matches .

RESULTS
to demonstrate the performance of estclean, we used a real  <dig> sequencing run for drosophila melanogaster and compared to seqclean
 <cit> . seqclean is a tool that performs automated trimming and validation of ests or other dna sequences by screening various contaminants, low quality and low complexity sequences. it utilizes blast
 <cit>  to remove any sequence highly similar to a given list of vectors, adapters, primers or linker sequences that are located within 30% of total est from the 3’ or 5’ end of the sequences. the raw sequence reads were cleaned using seqclean with input.fna -c  <dig> -l  <dig> -v barcode_adapter_primer -o output.seqclean and using estclean in gui with the default parameters and non-stringent amplification primer and poly-a search . we used gmap 
 <cit>  with -d dmelchrs -d dmelchrs -f psl input.fna output.psl to map reads cleaned by estclean and seqclean, respectively, to the d. melanogaster genome . since a cleaned read is defined as an interval, let a cleaned read by estclean and seqclean be e = st and s = vw, respectively. we discarded reads mapped to multiple locations in the genome. let the alignment positions in the genome for a cleaned read by estclean be a = s′t′and a = v′w′. we then identified the best position between both alignments in 5’ and 3’ ends respectively, i.e., a = min,max]. if a cleaned read is not fully aligned to the genome, then the read is under-trimmed. otherwise, it is over-trimmed if its alignment position is not the best one, e.g., s′ ≠ min for e .

of  <dig> , <dig> reads, seqclean and estclean left over  <dig> , <dig> and  <dig> , <dig> reads respectively after cleaning. out of these,  <dig>  and  <dig> , <dig> reads were cleaned by at least 1bp. surprisingly, seqclean cannot trim a barcode sequence in the 5’ end although this sequencing protocol has a barcode, meaning that sequence reads with no barcode are artifacts. therefore, we decided to use  <dig> , <dig> reads that were barcode trimmed by estclean . seqclean trimmed  <dig>  reads while estclean trimmed  <dig>  reads. of  <dig> , <dig> and  <dig> , <dig> reads left over by the programs, gmap mapped  <dig> , <dig> and  <dig> , <dig> reads to the reference genome. estclean had more uniquely mapped reads while seqclean had more multiply mapped reads. of  <dig> , <dig> reads that were mapped uniquely and commonly by both programs,  <dig> , <dig> reads which overlap more than 40bp in the genome were evaluated .

seqclean and estclean over-trimmed  <dig>  and  <dig>  reads respectively while they under-trimmed  <dig>  and  <dig>  reads . it is interesting that estclean outperformed seqclean in terms of under-trimming, while seqclean outperformed estclean in terms of over-trimming. out of the under-trimmed reads,  <dig>  and  <dig>  were not trimmed at all. figure
 <dig> shows histograms of the lengths over- and under-trimmed by seqclean and estclean in the 5’ and 3’ ends. the cumulative difference between estclean and seqclean for given trimmed lengths shows the tendency of both programs. it is interesting that seqclean did not trim many reads about  <dig> bp in the 3’ end, which results from the sequencing adapter.

however, over-trimming may be correct trimming without knowing reference sequences. what would happen if the bases next to a sequence read in a genomic location would be the same as the first bases of sequencing adapters, amplification primers, or poly a tails? for example, if a sequence read acgtcaat comes from acgtcgga of a genome and the lower bases in the sequence read is a amplification primer, the caat should be cleaned by estclean. however gmap can align the raw read until base c and perfect cleaning of caat is evaluated as over-trimming by  <dig> bp. we expanded this observation for all of over-trimmed reads but not trimmed due to low quality scores. additional file
 <dig> shows the over-trimmed subsequences by estclean in the 5’ and 3’ ends. most of those sequences are part of sequencing adapters and amplification primers, especially poly a tails. to confirm this, we extracted trimmed subsequences of length  <dig> bases including an over-trimmed region and investigated these 6-mers. indeed, almost all are part of sequencing adapters and poly a tails:  <dig>   and  <dig>   of reads over-trimmed in the 5’ and 3’ ends, respectively .

CONCLUSIONS
since incomplete cleaning of est sequences leads to incorrect downstream analyses such as mis-assembly and inaccurate biological interpretation. it has become one of the important tasks in transcriptome sequencing. estclean has been developed to remove the different kinds of contaminants from raw sequences. it not only provides trimming and screening modules, but also useful and user-friendly features including project management and quality control of sequencing protocols and raw sequences. it can also generate a script to execute trimming modules in command line environment in order to support automated pipeline of sequence assembly processes. we compared the performance of estclean with seqclean for a real sequencing run for drosophila melanogaster. estclean outperformed seqclean in terms of the numbers of under-trimmed reads and bases. although estclean has more over-trimmed reads in this experiment, it resulted from correct trimming without knowing reference sequences.

availability and requirements
project name: estclean 

project home page:http://sourceforge.net/projects/estclean/

operating system: platform independent 

programming language: perl , java  

other requirements: blast   

license: gnu gpl 

any restrictions to use by non-academic users: license needed

competing interests
the authors declare that they have no competing interests.

authors’ contributions
jhc conceived the software function and architecture. jhc and ht implemented perl and java codes respectively. dr conducted the experiment to compare estclean to seqclean using a  <dig> sequencing run for drosophila melanogaster. ss tested the software with the real datasets and pointed out bugs and improvements. all authors have contributed to, read, and approved the final manuscript.

supplementary material
additional file 1
program.

click here for file

 additional file 2
manual.

click here for file

 additional file 3
sample data.

click here for file

 additional file 4
over-trimmed subsequences by estclean in the 5’ and 3’ end.

click here for file

 additional file 5
distribution of 6-mers in over-trimmed sequences.

click here for file

 acknowledgements
we would like to give special thanks to h. tang, j. k. colbourne, j. carter, z. lai, k. mockaitis, and z. smith at the center for genomics and bioinformatics, indiana university for valuable comments. this work was supported in part by the national institutes of health  and the national research foundation of korea grant funded by the korean government .
