BACKGROUND
protein domains are fundamental units of protein structure, function, and evolution. as a result, domain prediction is an important first step in the annotation of protein sequences  <cit> . enhancements in domain identification improve protein annotations, as domains are often associated with specific cellular functions, and novel domain predictions can either newly predict or further refine functional predictions  <cit> . furthermore, some domains are known to be associated with structures and thus their identification can be used for inferring protein structure  <cit> . domain predictions are also the starting point for a range of more sophisticated analyses, including comparative genomics of domain families in diverse organisms  <cit> , studies of the evolution of protein and domain structure and function  <cit> , prediction of protein-protein interactions  <cit>  and identification of complex evolutionary relationships  <cit> .

the majority of proteins contain more than one domain  <cit> . domains occur in different combinations, and the domain composition of multidomain proteins is critical for their specialized functions. domains do not form random combinations, and indeed a limited fraction of domain pairs and triplets are highly recurrent  <cit> . while the mechanisms that lead to new domain combinations have been extensively explored and the analysis of observed domain combinations has received significant recent attention , this information has not yet been widely used for domain prediction.

here, we exploit the tendency of certain domains to co-occur with each other in order to improve domain identification. while domains within any given sequence are typically identified by considering each domain family individually, domain co-occurrence or "context" is useful in detecting weak sequence similarity  <cit> . in particular, two domain families that frequently co-occur provide "positive context", and for a given sequence, if these domains are identified with low confidence individually, their weak signal can be amplified. similarly, domain family pairs that have never been observed provide "negative context" and their occurrences can be penalized , thereby preventing unnatural combinations of low scoring predictions and limiting false predictions.

we have developed a novel graph-theoretic framework that combines individual domain scores with pairwise scores derived from domain co-occurrence statistics, in order to find a set of domains that maximize an overall score. our approach, dpuc , uses pfam  <cit>  profile hidden markov models   <cit>  to score domains individually, along with a novel log-odds scoring system that captures the propensity of pairs of domains to be found in the same sequence. while we have developed our approach using pfam, alternate libraries of domain profiles , as well as different pairwise context scoring schemes, can be readily incorporated.

we test dpuc via rigorous benchmarks on eight organisms, ranging from bacteria , to protozoa  and metazoa . we present the first large-scale demonstration that incorporating domain context improves domain predictions in organisms across the evolutionary spectrum. overall, dpuc gains up to 11% more domains at noise rates comparable to the standard pfam's, and outperforms the recently-published method codd  which also incorporates domain context  <cit> . further analysis demonstrates that dpuc's performance improvements are due in part to penalization of negative context as well as allowing context between repeated domains. importantly, we also find that dpuc does not require much additional time beyond that necessary for pfam to initially identify domains.

we have found that dpuc is particularly effective at improving domain predictions for the genome of the poorly annotated malaria parasite plasmodium falciparum. for this parasite, we perform further testing and show that dpuc's predictions are consistent among orthologs in closely related plasmodium species. moreover, we have used dpuc to annotate plasmodium proteins and have newly identified proteins taking part in core processes such as ribosomal assembly and other rna processing events. overall, our findings in plasmodium and other genomes suggest that domain identification can be significantly improved by incorporating context, particularly for organisms with poorly understood genomes.

methods
data
pfam database
pfam  <dig> was downloaded from the website . a list of nesting families was extracted from pfam-a.seed, defining a set of "allowed overlaps" consisting of domains with overlapping amino acid ranges within a protein sequence. the domain architecture of a protein is defined as its ordered list of domains, including repeats. we parsed the pfam-a.full file to obtain the complete domain assignments to uniprot  <dig>  sequences, and thereby the domain architectures used to compute domain context scores .

proteomes
we used the proteomes of several model organisms for our testing, along with those of several parasites of medical interest. the proteomes of e. coli, m. tuberculosis, saccharomyces cerevisiae, caenorhabditis elegans, drosophila melanogaster, and homo sapiens, were downloaded from uniprot  <cit>   <dig>  , by obtaining all sequences with the organism taxon numbers  <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig>  respectively, the keyword "complete proteome" , and not including isoforms. the proteomes of the plasmodium species p. falciparum  <cit> , and p. vivax  <cit>  were downloaded from plasmodb  <dig>   <cit> , and sequences containing internal stop codons were removed. consistency of predictions on the plasmodium species were further tested by analysis on p. knowlesi  <cit> , p. chabaudi, p. berghei, and p. yoelii, which were also downloaded from plasmodb.

approach
the dpuc model
for a given protein sequence, let p be a set of candidate domains . for each domain i in p, let hi be the domain score of i, let ti be the domain score threshold for the family of domain i, and for each pair of domains i and j, let cij be the context score between i and j . let d ⊆ p be a subset of domains, and then for each domain i we define its score with respect to this set of domains as  

our goal is to find the subset of domains d ⊆ p that maximizes the "total score" Σi ∈ d si,d, constrained so that d only contains "allowed overlaps" and each domain i in d satisfies the domain threshold si,d ≥  <dig>  note that without context scores , the last inequality is reduced to the standard definition of a domain threshold. our framework can be illustrated from a graph-theoretic point of view .

formulation using ilp
we solve our combinatorial optimization problem with integer linear programming . in particular, we define a 0/ <dig> variable xi for each domain i, and a 0/ <dig> variable xij for each pair domains i and j. if variable xi is set to  <dig>  this indicates that domain i is included in our final set of predictions. similarly, if variable xij is set to  <dig>  this indicates that the pair of domains i and j are in our final set of predictions. the score of each domain with respect to the other chosen domains is given by  

our goal is to maximize  

where tf* is a pfam-specific sequence threshold . though a theoretically difficult problem, we solve this ilp via a two pronged approach based on domain elimination and using lp_solve  <dig> . <dig>   <cit> . see additional file  <dig> supplementary methods for further information on solving the ilp and relevant details about the pfam curated and domain-specific "gathering" thresholds, including the treatment of combined local and glocal domains.

dpuc context scores
we derive pairwise log-odds context scores using pfam architectures found in uniprot. these architectures are filtered to remove those that occurred in only one sequence, since they are more likely to be erroneous. let eip be the number of domains of family i in protein p, and let ep be the total number of domains in protein p. we obtain "normalized pair counts" cij as follows:  

where the sum over proteins p goes only over multidomain proteins, as single domain proteins would have zero denominators. note that the normalization given above divides the pairs from each protein by the total number of domains of that protein , to compensate for inflated counts due to proteins with many domains. while there are many possible normalization schemes, our scheme keeps domains from counting themselves, and each protein p contributes ep counts to all cij in total. these counts are turned into probabilities by setting  

where c = Σij cij, α =  <dig> is the regularization parameter , and n is the number of domain families observed in the architectures . by construction, Σij pij =  <dig>  the null model probabilities are  

since random domains appear approximately uniformly using e-value thresholds. the context scores are  

with b =  <dig>  to match the hmmer <dig> bit scores. from these equations we can derive that unobserved pairs  are always penalized, since they are assigned the same large negative score of -logb. finally, observed pairs with negative scores are instead set to zero. this way, observed pairs are never penalized. for pfam  <dig>  only  <dig> out of the  <dig>  observed pairs had negative scores that were subsequently set to zero. we also experimented with other log-odds scoring schemes ; however, most schemes did not significantly change the performance of the overall approach.

empirical analysis of dpuc runtimes
since each protein sequence is a separate problem, the problem can be parallelized over proteins. we considered the  <dig>  proteins of e. coli, m. tuberculosis, s. cerevisiae, and p. falciparum, and ran each problem on a  <dig>  ghz intel processor with  <dig> gb ram. runtime is measured in wall clock time. the standard pfam  runs in  <dig>  ±  <dig>  seconds per protein , while the dpuc overhead  runs at an additional  <dig>  ±  <dig>  s/protein. however, the runtime distributions have very long tails, as can be seen in additional file  <dig> figure s <dig>  nevertheless, we find that in 95% of the cases, the dpuc optimal solution is obtained within  <dig>  s, and in  <dig> % of the cases, the optimal solution is found within  <dig> s.

other approaches
baseline methods
we tested three non-context methods that serve as natural baselines for dpuc. the first is the "standard pfam", which uses their curated and domain-specific "gathering"  thresholds . since the standard pfam produces a single data point, we created the "pfam extended ga" method, in which the ga thresholds are shifted by constant amounts , allowing us to explore a range of noise cutoffs. lastly, the "pfam e-value" method uses domain e-value thresholds instead of the ga thresholds.

codd context method
to contrast with dpuc, we implemented two simple context approaches that filter candidate domains. the first is based on codd, which incorporates positive context information whereby a low scoring domain can be predicted based on co-occurrence with a higher scoring domain  <cit> . given a network of positive context domain pairs, a set g of pfam predictions that pass the gathering thresholds with no disallowed overlaps, and a set of candidate predictions d, this filter finds the set of final predictions p as follows. first we initialize p = g. for each domain d in d sorted ascending by e-value, we transfer d to p if d has positive context with any domain in g and d does not have disallowed overlaps with any domains in p. the second approach is a novel double positive and negative filter of our creation that we call ncodd, and is described in the additional file  <dig> supplementary methods.

testing
we developed two approaches for assessing the performance of dpuc.

estimated fdr
in our first test, we compare the number of predictions from different methods  on real and shuffled protein sequences. the key idea is that domain predictions on shuffled sequences arise by chance alone, whereas predictions on real sequences give us the total number of predictions , and their ratio approximates the false discovery rate. we shuffle the residues of each protein separately, thereby preserving the amino acid composition of each sequence as well as the length distribution over each proteome. for the context methods , we run them on the real sequence concatenated to its shuffled sequence, but only count the number of predicted domains on the shuffled portion of the sequence. therefore, we count the random predictions that might have been rewarded by positive context not only with other random predictions, but also with potentially real domains from the real sequence . the shuffling is performed  <dig> times for each sequence.

we estimate the false discovery rate  as follows. let a be the number of predictions per shuffled protein, and let r be the number of predictions per real protein. then fdr = a/r, which is a common approximation of the fdr  <cit> . to calculate the fdr of the new dpuc domains only, let an and rn be the quantities defined above when we use negative context only, and a and r when we use the e-value threshold of interest for candidate domains. the difference of the data corresponds almost entirely to the novel domains, ignoring the effect of the initial negative context elimination:  

this benchmark is only appropriate for methods in which the orientation of the domains is unimportant, as it is for the methods tested here. we note that the markov model of coin et al.  <cit>  is sensitive to the orientation of domains, so its performance cannot be measured by this benchmark; we also note that an implementation of this program is not available online. see additional file  <dig> "estimated fdr details" for further details on estimating the fdr.

ortholog coherence scores
in our second test, we measure how often domains are predicted across orthologs. the key assumption is that real domains are very likely to be present in orthologs, whereas false domains are very unlikely to be. therefore, the average "ortholog coherence" score is inversely related to the amount of spurious predictions. we chose the plasmodium species' proteins because their sequence divergence is large enough to discard "coherent" false predictions due to high sequence similarity, yet the sequences are similar enough for orthologs to be identified easily, and domain architectures are largely conserved. moreover, as we show below, our approach performs well in improving domain identifications in these species.

we computed the orthologous groups of six plasmodium species using orthomcl  <dig>   <cit> . we obtained  <dig> orthologous groups . we eliminated orthologous groups with more than  <dig> proteins to avoid constructing large alignments and to ignore the well-studied large paralogous families that are characteristic of plasmodium species . this left us with  <dig> groups with a total of  <dig>  proteins. each group was aligned with t-coffee  <dig>   <cit> , using the m-coffee special mode which combines the alignments of t-coffee, probcons  <dig>   <cit> , and muscle  <dig>   <cit> . the score of a domain is the fraction of times we observed overlapping domains  of identical family in the orthologs. the score of a method is the average domain score over all proteins .

RESULTS
we chose eight diverse and representative organisms to test our method, including human, four model organisms, d. melanogaster, c. elegans, s. cerevisiae, e. coli, and several pathogens including the eukaryotic human malaria parasites p. falciparum and p. vivax, and the prokaryotic parasite m. tuberculosis. we test our method separately on each of these organisms since they have different and sometimes extreme biases in protein lengths, amino acid compositions, amino acid coverage by domains, and domain family content .

dpuc improves pfam predictions across all tested organisms and across a range of fdrs
for a given method , we estimate its fdr as the ratio of the number of predictions made on shuffled sequences , to the number of predictions made on the real sequences only. this concatenation approach allows noise in the shuffled sequence to be boosted by potentially real domains via context . we test dpuc by varying the hmmer e-value threshold on its candidate domains. dpuc consistently enhances the performance of standard pfam across organisms and over the entire range of fdrs tested . the standard pfam produces a single data point, and notably, its fdr is non-zero for all organisms. to explore pfam's tradeoff between coverage and false positives, we vary the threshold to the hmmer e-value; this leads to fewer predictions on real sequences for the same fdr, showing that curation of pfam thresholds has added value. we also vary the pfam "gathering" thresholds by shifting them uniformly for all domain families, which performs better than e-value thresholds in all organisms except in m. tuberculosis, suggesting the pfam curated domain thresholds are less appropriate for this diverged and compositionally biased  organism than they are for model organisms. note that even when limiting the dpuc candidate domains to those predicted by the standard pfam , we see a sharp decrease in dpuc's fdr relative to the standard pfam; this improved performance can be directly attributed to the removal of false predictions using negative context scores.

the fdr as described above applies to the entire set of predictions. for dpuc with low hmmer e-value thresholds on the candidate domains, the fdr is the net effect of removing domains from the standard pfam through negative context, as well as adding new domains with positive context. since negative context alone reduces the fdr of the predictions, the fdr of the new domains must be larger than the fdr of the whole. for dpuc with e ≤  <dig>  the fdr of the new domains only  varies between  <dig> -2%, depending on the organism .

dpuc outperforms simple filters incorporating context
we implemented an alternative context method, using filters, in which context scores are not defined. the first filter emulates the method codd  <cit> , in which candidate domains pass if they co-occurred with the domains that pass the pfam gathering thresholds. interestingly, the performance of codd is similar to non-context methods in some organisms, and especially at high hmmer e-values thresholds . we tested codd using the published codd positive context network, which notably lacks context between domains of the same family, and additionally removes observed domain pairs that do not occur more often than expected from the hypergeometric distribution. we note, however, that using the codd filter with the dpuc network of positive context domain pairs improves the predictions compared to using this more limited codd network . our previous analysis suggested that a negative filter  was necessary to enhance the fdr, and indeed, our approach of a double positive and negative filter, ncodd , has better performance than codd . nevertheless, ncodd falls behind dpuc in all organisms tested, with the exception of d. melanogaster and h. sapiens, in which performance is similar to dpuc's; this could be due to the overall better annotations of these two model organisms. in p. falciparum, ncodd is too aggressive and removes predictions from the real sequences as well as from the shuffled sequences, shifting the entire curve downward relative to dpuc. these results suggest that there is added value in our setup of scores and thresholds, compared to these simpler filter formulations.

performance of chosen context scores
our context scores have a specific form  in which a pair score is logarithmically proportional to how often the domain family pair is observed in standard pfam. although these log-odds scores seem naturally compatible with the hmmer log-odds scores, it is not certain that this is the form the scores should have. to test the importance of these scores, we shuffled the positive scores , which resulted in decreased performance compared to our original context scores, but better performance than that of non-context methods . therefore, carefully choosing values for our scores is important, and our form, which weighs the evidence of co-occurrence per domain family pair, performs better than random scores from the same distribution. additional score parameter variations are discussed in additional file  <dig> "dpuc pfam parameter robustness".

dpuc increases pfam coverage
we choose a threshold of e ≤  <dig> to identify the candidate domains, which corresponds to an overall fdr of  <dig> - <dig> % across organisms; that is, this is within an order of magnitude of the standard pfam fdr of  <dig> - <dig> % . we then calculate the dpuc net percent improvements compared to the standard pfam . the number of domains increases by 4-11%, with a trend roughly inverse to the level of initial coverage in each organism . unique domain families increase by 3-6%, while repeated families increase at the higher rates of 12-40%. amino acid coverage improves by 2-8% relative to the amino acids covered by the standard pfam. however, most new predictions appear in proteins that have standard pfam domains, since there are smaller increases in protein coverage . overall, the two plasmodium species attain the highest increases in coverage, but even the best-annotated model organism, e. coli, experiences increases in coverage under all metrics .

percent increases of dpuc predictions relative to the standard pfam are given for each organism  when considering all domains, first appearance of domains in a protein, subsequent occurrences of domains in a protein, amino acids covered by a domain, and all proteins with domain predictions. 

dpuc leads to additional functional annotations
we used the multipfam2go procedure  <cit>  to obtain go annotations from our domain predictions. this program uses a probabilistic approach to determine how sets of domains imply go terms. we ran this procedure on the standard pfam and dpuc predictions, and filtered the results so that only the most specific go terms remained .

in total,  <dig> - <dig> % of proteins had new or modified go terms, depending on the organism. as we observed before with pfam coverage, the two plasmodium species attained the largest increases in go terms. we present the summary of our data in table  <dig> . the vast majority of the original go terms from standard pfam  are preserved by dpuc with e ≤  <dig>  additionally, we obtain a  <dig> - <dig> % increase in go terms that are completely new, and a further  <dig> - <dig> % in go terms that are more specific than previously existing go terms. our procedure also results in a negligible  <dig> - <dig> % of go terms in dpuc becoming less specific than their standard pfam counterparts, and  <dig> - <dig> % go terms being deleted. similarly, most proteins with go terms from standard pfam are unchanged by dpuc, but  <dig> - <dig> % of proteins have new or more specific go terms, while only  <dig> - <dig> % of proteins have fewer or less specific go terms. finally,  <dig> - <dig> % of proteins experience both increased and decreased specificity of go terms.

comparison of dpuc-based go predictions with those based on the standard pfam. values are percents relative to the number of proteins with go terms in the standard pfam per organism. each category is mutually exclusive, with "mixed" specifying that both "new or more specific" and "deleted or less specific" go terms occurred in the same proteins.

as expected, inspection reveals that most go terms that are deleted or become less specific are a consequence of either domain replacement brought upon by positive context  or domain removal due to negative context. in either case, we expect the new domain predictions to be more accurate, and the resulting removal of go terms is welcomed. interestingly, the addition of domains can also lead to go term loss, which is a consequence of the multipfam2go probabilistic model combined with incomplete training data .

domain coherence is enhanced across plasmodium orthologs
we chose to focus on the plasmodium parasites, the causative agents of malaria, due to their wide impact on human health, and also because our method showed the largest improvements in these organisms. a simple test of prediction quality is to ask if domains are predicted in orthologous sequences as well, since orthology information is not exploited by our method. importantly, ortholog co-prediction is expected to be low for false predictions and high for real domains, providing us with an alternative measure of noise that does not depend on statistical simulations.

we defined an "ortholog coherence" score between  <dig> and  <dig>  namely, the average fraction of times a domain is predicted in orthologous proteins . we looked at the proteins of six plasmodium species  with orthologs or in-paralogs in these organisms as predicted by orthomcl, and plotted these scores against their number of domain predictions per protein for the same methods tested earlier . these coherence scores may be artificially low due to artefacts in the alignments or gene models , but on average all methods should be affected equally. using dpuc with e ≤  <dig> increases domain predictions by 11% at practically the same ortholog coherence  as the standard pfam. coherence scores recapitulate our conclusions derived independently from our fdr analysis, displaying an increase in domain predictions over a wide range of ortholog coherence thresholds.

novel p. falciparum annotations
careful manual analysis of novel domain predictions on the p. falciparum proteome led to the reannotation of  <dig> proteins, either due to novel pfam domains that had not been predicted before  or due to novel pfam domains confirmed by other domain databases . our discoveries include the identification of orthologs to many core machinery proteins conserved in all eukaryotes, including those involved in ribosomal assembly and other rna processing events, which surprisingly had not been previously known . three predictions find direct support in the literature. pf11_ <dig>  the predicted "poly-binding protein-interacting protein 1" paip <dig>  has a strong yeast 2-hybrid interaction with pfl1170w  <cit> , the annotated "poly-binding protein" pabp <dig> homolog in p. falciparum. additionally, the two dead-box helicases pfe1390w and mal8p <dig> , predicted to be the orthologs of abstrakt and dbp <dig> respectively, agree with the assignments of a recently published curated list of p. falciparum helicases  <cit> . such new functional annotations can serve as starting points for developing new therapeutic intervention strategies. our suggestions have been submitted to plasmodb  <cit>  as community annotations.

these dpuc domain predictions were novel relative to the standard pfam, smart, and superfamily, and coherent predictions were present in orthomcl orthologs or in-paralogs. dpuc predictions always contained the standard pfam domains, so only the additional domain predictions are listed. the number of repeats per family is not shown.

these dpuc predictions were novel compared to the standard pfam, and were consistent with existing domain predictions from smart or superfamily . the number of repeats per family is not shown.

dpuc predictions always contained the standard pfam domains, so only the additional domains are listed, except when marked with an asterisk .

all proteins have the current plasmodb  <dig>  annotation of "conserved plasmodium protein, unknown function" except: mal8p <dig> , pfi1560c, mal13p <dig> , mal7p <dig>  "conserved plasmodium membrane protein, unknown function"; pfe1240w, pf11_ <dig> "conserved protein, unknown function"; mal13p <dig>  "nucleotidyltransferase, putative"; pf08_ <dig> "set domain protein, putative"; pff1120c "conserved apicomplexan protein, unknown function"; pf14_ <dig> "probable protein, unknown function".

discussion
we have shown that domain identification can be greatly improved across a diverse set of organisms by exploiting domain co-occurrence information. our method is more successful at increasing domains in genomes with lower domain coverage  and shows greatest improvements in the least annotated of the organisms we tested, the malaria parasites.

to our knowledge, there has been limited prior work examining the utility and systematic use of domain context for domain prediction  <cit> , and to date such approaches have not been widely adopted, nor are they publicly available. coin et al. developed a markov model framework to score the dependence between domains in a sequence. however, their work presents two versions of the markov model, each of which has opposing limitations: the first-order markov model has few parameters, but its predictive power is limited; alternatively, their kth-order markov model has more power , at the cost of an exponential  increase in parameters, which become difficult to estimate accurately and increase the computational requirements of the approach. in contrast, dpuc allows interactions between all domains, as opposed to just the previous k domains, while keeping the parameter space small, simplifying parameter estimation and reducing our program's memory usage. furthermore, the source code accompanying our work should facilitate further improvements in context-based identification of domains.

recently, a method was published  that uses a list of "favored" domain pairs to predict lower-scoring domains in p. falciparum if high scoring domains that preferentially appear with them are found in the same sequence  <cit> . we have shown that dpuc significantly outperforms such a filter , as it predicts many more domains at any fixed fdr. there are several important methodological contributions of dpuc that together explain this performance enhancement. first, our method penalizes  domain pairs that have never been observed before, whereas codd uses only information about favored domain pairs. second, our method uses domain family pair-specific log-odds scores and thresholds, while codd treats all favored domain family pairs equally. third, our method allows weak domains to boost each other in the absence of strong domains without any special treatment, while codd has to be run separately to allow candidate domains to predict each other, and with different e-value thresholds since this is much more prone to false predictions. fourth, our problem is combinatorial in nature, allowing domains with low e-values to overcome higher e-value candidates if the context is more favorable, while codd simply prioritizes candidate domains by e-value. fifth, codd uses a limited positive context network that does not include repeating domains and eliminates pairs that do not have small enough p-values derived from the hypergeometric distribution. although our benchmarks show that negative context and our more complete dpuc positive context networks are critical differences , these features alone do not explain dpuc's higher performance, suggesting that the other differences also play an important role. the importance of negative context is consistent with the fact that domain context is usually not transitive. in particular, we find that if a pfam domain a co-occurs with domains b in at least one sequence in uniprot and it co-occurs with domain c in at least one sequence, then domains b and c co-occur in at least one sequence only  <dig> % of the time; however, domain pairs that do not co-occur can readily be predicted by methods that only reward favored domain pairs.

other works, such as aidan  <cit>  and a similar work  <cit> , have also used domain context to refine domain predictions in a manner complementary to the work discussed here. in particular, while our method learns parameters from domain databases and uses these to make predictions on each protein sequence independently, aidan clusters sequences based on the original domain predictions, and refines these predictions by performing domain architecture alignments and evaluating sequence comparisons within these clusters when domains are missing or are mismatched. further, the thresholds used by aidan are tuned so less than  <dig> % of the new domain assignments are errors. the aidan approach can be used as a second step in any domain prediction pipeline, including our own, to further refine predictions by directly taking the sequence similarity of related proteins into account, and this is a promising avenue for future work.

domain context is independent of the information that hmm scores capture, since an hmm score only uses the sequence the domain encompasses, ignoring the surrounding sequence that contains the rest of the domains, while domain context allows these other domains to affect each other. these two information sources do not overlap. in other words, hmms capture so-called "vertical" information  <cit>  while domain context captures "horizontal" information. this is similar to advances in remote homology detection due to the incorporation of secondary structure predictions in addition to hmm/profile information  <cit> . fuzzy hmms  <cit>  have been proposed to model positional dependence within a domain, but currently these predictions are less tractable compared to classical hmm algorithms. we believe that incorporating horizontal information in hmm analysis will become more common, as it is evidently an important means for boosting subtle sequence signals.

we have implemented a log-odds system to score the co-occurrence of domain pairs. indeed, log-odds scores are widespread in bioinformatics, and our scoring system is inspired by the log-odds scores used in local sequence alignment   <cit> . we borrowed the concept that optimal scores ought to be log ratios of the "target" frequencies versus the "background" frequencies. broadly speaking, there are many similarities in both problems, including that they score pairs and that the searches are both "local" . however, an important assumption of the theory behind lsa is that different amino acid pairs are uncorrelated, whereas domain pair scores in dpuc are correlated, since solutions must be connected as a full clique . our framework does not handle these correlations, and while we have demonstrated empirically that log-odds scores perform remarkably well, we expect that a better theoretical foundation for our problem  will lead to scores that yield better performance. other changes in the dpuc scoring system may also lead to improvements; for example, differentiating between the two orderings of domain pairs is a promising avenue for future research, as it has been shown that many domain pairs occur in a single order  <cit> .

while we applied dpuc to pfam using hmmer <dig>  there are other tools available which could be used, including sam  <cit>  and the new hmmer <dig>  <cit> , as well as other domain databases, like smart, superfamily, and cdd. more broadly, the dpuc framework could be used to improve prediction of other protein sequence features, including signal sequences and transmembrane domains, both of which co-occur with a limited number of domains. the same underlying mathematical framework may also be applicable in other diverse settings, for example, in uncovering cis-regulatory modules, as transcription factors often work cooperatively to regulate genes. we have shown that dpuc significantly improves predictions over other models that score domains independently. we anticipate that our framework will be useful for incorporating context with other dna, rna, or protein sequence features and will find its greatest utility in the annotation of newly sequenced genomes from highly diverged organisms.

CONCLUSIONS
common domain identification methods typically consider each domain separately, and they have limited applicability when the similarity between the query sequence and known domains is very low, as is the case for poorly understood genomes. here we significantly improved domain predictions by exploiting the tendency for domains to co-occur in specific combinations. we developed an approach based on the observation that weak domain predictions are better supported if they appear in previously-observed combinations, while domain combinations that have never been observed are less likely to be valid. our method improved domain predictions in all organisms tested, including the best known model organisms. the biggest improvements were seen for the divergent organism plasmodium falciparum, the parasitic agent of malaria, for which much of the core cellular machinery remains unidentified. overall, our approach is likely to be most useful for poorly understood genomes where the need for additional annotations is arguably the greatest.

authors' contributions
ao and ms conceived and designed the approach and experiments. ao implemented the approach and performed the experiments. all authors analyzed the data, wrote, read and approved the final manuscript.

supplementary material
additional file 1
supplementary information. pdf file  that includes all the supplementary methods, results, figures and tables.

click here for file

 acknowledgements
we thank all members of the singh and llinás groups for helpful discussions about this work. we additionally thank tao yue, erandi de silva, hani goodarzi, and our reviewers for their feedback on this manuscript.

this work was supported by the national science foundation ; and the national institutes of health .
