BACKGROUND
on the extraction of metabolic pathway information
an important goal of biological text mining is to extract relationships between named biological and/or medical entities. until recently, the vast majority of research in this area has concentrated on extracting binary relationships between genes and/or proteins, most notably protein–protein interactions. however, attention is increasingly shifting towards more complex relationships, with a particular focus on biomolecular networks and pathways
 <cit> .

however, in spite of this new focus on networks and pathways, one of the most important sub-topics — the construction and curation of metabolic pathways — has largely been ignored. this is in contrast to the protein- and gene-centric focus of recent text-mining research: protein–protein interaction networks
 <cit> , signal transduction pathways
 <cit> , protein metabolism 
 <cit> , and regulatory networks
 <cit> . this protein/gene-centric focus is also enshrined in the bionlp’ <dig> shared task on event extraction, an important initiative designed to galvanize community-wide effort to address the challenges of extracting information about complex events
 <cit> .

the only system that we are aware of that has an explicit focus on extracting metabolic pathway information from free text is the template-based empathie
 <cit> , which is no longer under active development . the aim of empathie was to extract information about metabolic reactions together with relevant contextual information  from specific journals. when evaluated on a corpus of seven journal articles, empathie achieved 23% recall and 43% precision
 <cit> .

certain more generic systems may also be used for the same purpose, including the geneways system for “extracting, analyzing, visualizing and integrating molecular pathway data”
 <cit> , and the medscan sentence parsing system
 <cit> , capable of extracting relationships between a range of biomedical entities including proteins and small molecules, and evaluated on a ppi extraction task by daraselia et al. <cit> . however, neither geneways nor medscan are freely available and we are not aware of any published evaluation of their performance with metabolic pathway data.

it is interesting to note that the creators of geneways, in that system’s key publication, suggest signal-transduction pathways are an “easier target” for information extraction than metabolic pathways, and chose to evaluate its performance on the former rather than the latter
 <cit> . similarly hoffmann et al. identify the extraction of metabolic information as a “special case” that has “specific problems” associated with it
 <cit> . this perception may explain why relatively little attention has been paid to the task of extracting metabolic reactions from free text. the particular challenges that are characteristic of metabolic reaction extraction task include: 

• multiple entity types and entity mismatch. whereas protein–protein interaction networks, protein metabolism and signal-transduction pathways concern the entity-type protein, metabolic reactions involve both enzymes and metabolites. moreover, there is a mismatch between the entities that most taggers address  and the entities that we wish to tag in metabolic pathways . similar problems arise in the context of the extraction of protein–protein interactions owing to the fact that protein/gene taggers almost invariably fail to distinguish between proteins and genes. only a subset of proteins are enzymes, and whereas the distinctive nomenclature associated with enzyme names may be beneficial to the extraction process , it has been argued that identifying the names of metabolites is more difficult than some other categories of chemical name
 <cit> .

• ternary  relationships. whereas the relationships in protein–protein interaction networks and signal-transduction pathways are typically binary , metabolic relations are typically ternary . moreover, multiple substrates and/or products are commonplace, leading to further complexity. one consequence is that there is a greater potential for all the relevant entities in a metabolic reaction to be split over multiple sentences and for there to be a high incidence of anaphora usage.

one of the key themes of this paper is to address the question as to whether the extraction of metabolic reactions is, indeed, more difficult than the extraction of protein–protein interactions.

although the fully-automated construction of networks and pathways from the literature may be the ultimate goal, a more practical focus for text mining systems in the immediate future is to provide assistance to database curators and model builders. existing initiatives specifically designed to support database curation include prebind
 <cit>  and various tools
 <cit>  aligned with the task of curating flybase
 <cit> . in this context, high recall is often deemed to be of paramount importance, although excessive numbers of false positives detract from the usability of such systems
 <cit> . existing initiatives designed to assist the curation of pathway and network databases include research that addresses the curation of wnt signaling pathways
 <cit>  and an application designed to support the curation of chemical–gene–disease networks in the comparative toxicogenomics database
 <cit> .

a methodology for extracting metabolic reactions
various approaches have been utilized for extracting relationships between biological entities described in free text, broadly ranging from simple methods based on the co-occurrence of terms to sophisticated natural language processing methods. here we adopt an intermediate, rule-based and pattern-matching approach that combines lists of stemmed keywords with rules for rewarding and penalizing the occurrence of words depending on their location. our approach can be viewed as an elaboration of several existing algorithms designed to extract protein–protein interactions .

indeed, the starting point for the algorithm developed here was the simple benchmark for ppi extraction presented in
 <cit> , which looks for ordered triplets of the form “protein name/interaction keyword/protein name”. the co <dig> algorithm, available via the whatizit suite of web services
 <cit> , takes a similar approach, as does the algorithm devised by ono et al. <cit> , but with the addition of simple parts-of-speech rules.

this kind of algorithm is easy to integrate with established named-entity recognition tools. our algorithm builds on two state-of-the-art named-entity taggers: banner
 <cit>  for recognizing gene/protein names; and oscar3
 <cit>  for identifying the names of chemical entities.

however, one important difference in the algorithm we have developed arises from the intrinsic complexity of the relationships we are seeking to extract. different permutations of assigned entities within a given sentence are scored separately, although there are rules to ensure that implausible permutations are ignored. details are given in the methods section below.

in terms of performance, we might anticipate that our algorithm will give higher precision, but lower coverage, than simple co-occurrence methods; and higher coverage, but lower precision, than nlp-based methods. it is interesting to note that the simple algorithm used in
 <cit>  proved remarkably effective when evaluated against some well-regarded nlp-based approaches. when other factors are taken into account, such as execution speed and ease of installation, simple algorithms of this type are worthy of serious attention.

a metabolic reaction extraction task
when considering how to evaluate our system, we found that existing corpora — even those with many sentences that contain the names of at least two small molecules, for example genia
 <cit>  and the metabolite corpus developed by nobata and coworkers
 <cit>  — do not contain significant amounts of metabolic information relevant to our chosen target. given that we perceive support for metabolic pathway curation as the ultimate goal of our research, we chose to assess how many reactions belonging to a given metabolic pathway our system is able to extract from papers known to be relevant to that pathway. to this end, three contrasting pathways were chosen from the ecocyc database
 <cit> .

our approach to evaluation differs in two additional respects from the recent protein-centric bionlp shared task on complex relationship extraction
 <cit> : rather than abstracts alone, we use additional sections of full text articles ; and we do not use pre-annotated entities. for the shared task, gold-standard annotations of protein names were provided from the outset. it was argued at the time that this would not have a major impact on the results, whilst it was acknowledged that it detracted somewhat from the task’s “realism”
 <cit> . however, an analysis by kabiljo and coworkers demonstrated that the use of putative entity names that have been predicted using entity taggers  instead of true, gold-standard entity names  can have a surprisingly large impact on relationship extraction scores, with “a fall of around  <dig> percentage points  being commonplace”
 <cit> .

although our approach to evaluation has been previously adopted elsewhere , we acknowledge that it is “unrealistic” in that all papers are known to be relevant in advance. although this is an important caveat, we believe the identification of relevant papers  is the task of a separate information retrieval component and that our evaluation of our system’s ability to extract metabolic reactions is highly informative.

methods
existing text-mining resources
oscar3
 <cit>  is an open source tool for identifying chemistry-specific terms in free text that uses an approach that combines n-grams, regular expressions and heuristic rules with access to a chemical dictionary
 <cit> . there are relatively few competitor taggers that annotate the names of chemical entities, and oscar <dig> is arguably the most mature and widely-used of those that are freely available. it performed exceedingly well in a recent independent evaluation by wiegers et al. <cit> , retrieving well over 90% of curated chemical “actors”, and had high recall rates  when applied to a new manually-annotated test metabolite corpus
 <cit> .

although oscar <dig> is designed to tag enzymes as well as small molecules, its strategy for identifying enzyme names is limited to checking for single words with the suffix “-ase” or “-ases”. however, we found this to be inadequate in practice; in a preliminary examination of the context in which enzymes are mentioned in our training set of sentences, we discovered a significant number of cases in which the standard nomenclature was not used. for instance, consider the following sentence fragments : 

“the protein encoded by the hisf gene has an ammonia-dependent activity”

“the hisb gene product appears to be a bifunctional enzyme”

moreover, even when the name of the enzyme ends in “-ase”, it often comprises multiple words, only one of which is tagged by oscar <dig>  hence, in the sentence:

“therefore, cleavage of acetoin might occur by a reaction that is analogous to the oxidative-thiolytic cleavage of pyruvate to acetyl-coa and co <dig> catalyzed by the pyruvate dehydrogenase multienzyme complex.”

we would like to annotate the full name pyruvate dehydrogenase, or perhaps pyruvate dehydrogenase multienzyme complex, rather than just the single word dehydrogenase that oscar <dig> annotates. it is also worth noting that oscar3’s mark-up nomenclature for enzymes  is the same as that for chemical entities in general. for these reasons we decided to use a generic gene/protein name tagger in our system to identify the names of putative enzymes, rather than oscar <dig> 

nevertheless, most enzyme names do end in “-ase” or “-ases”, and there are potential benefits to taking these distinctive suffixes into account when choosing between multiple putative enzyme names .

there are several free gene/protein name taggers available. we chose banner 
 <cit> , an open source tool that applies a conditional random fields-based approach to a range of orthographic, morphological and syntactic features, on the grounds that it was the best performing tagger in our earlier, multi-corpus evaluations
 <cit> .

sentence splitting and tokenization were carried out using the apache opennlp toolkit v <dig> .3
 <cit>  with biochemical models available from the jena university language & information engineering  lab
 <cit> . all these resources are open source.

reaction extraction algorithm
given text in which the names of putative proteins and small molecules have been tagged, our algorithm proceeds in three key stages: a sentence selection phase; an entity assignment phase; and an assignment scoring phase.

sentence selection
the algorithm begins by selecting sentences containing at least two small molecules. our working assumption is that sentences of interest will contain the names of both a substrate and a product, but not necessarily the name of an enzyme; it is sometimes possible to correctly identify substrate and product even when the name of an enzyme is not found . in our training corpus , 30% of the sentences that describe a metabolic reaction  do not contain the name of an enzyme.

entity assignment
given a selected sentence, most  potential orderings of putative enzyme, substrate and product occurring within the sentence are then considered in turn, or — in the absence of a putative enzyme name — orderings of substrate and product. the possibility that the reaction has multiple substrates and/or products is taken into account during this scoring phase. consider, for example, the sentence: 

“l-arabinose isomerase catalyzes the conversion of l-arabinose to l-ribulose, the first step in the utilization of n-arabinose by escherichia coli b/r.”

here banner tags l-arabinose isomerase as a putative protein, and oscar tags l-arabinose, l-ribulose and n-arabinose as putative small molecules. ten different ways that the entities enzyme, substrate and product may be assigned to the tagged names are deemed suitable for consideration during the scoring phase. these assignments are given in table
 <dig> 

the ten assignments of e, s and p for the sentence “l-arabinose isomerase catalyzes the conversion of l-arabinose to l-ribulose, the first step in the utilization of n-arabinose by escherichia coli b/r”. given that l-arabinose isomerase is the only tagged protein, it is deemed to be the enzyme in all cases, whereas different numbers and orderings of substrates and products are possible, given the presence of three tagged small molecules . note that other potential orderings  are not considered, as they are deemed highly unlikely to occur in practice.

assignment scoring
given a sentence to which the entities substrate, product and  enzyme have been assigned, each assignment is then awarded a separate score based on the following criteria: 

• each word occurring between the first and last assigned substrate and product — the entities l-arabinose and n-arabinose in the exemplar sentence above — and that does not belong to the name of any additionally-assigned entities — l-ribulose in this exemplar sentence — incurs a small penalty .

• if a keyword is found at an appropriate location relative to one or more entities, the assignment is awarded a positive score .

• if a keyword is found in an inappropriate location, a penalty  is incurred.

• a bonus  is awarded when both a reaction and production keyword are found, provided they are in appropriate locations.

keywords fall into the following categories: reaction word stems ; production word stems ; variants of the verb catalyze; prepositions ; and the coordinating conjunction and. stemming was performed using a java implementation
 <cit>  of the standard porter stemming algorithm
 <cit> . scoring locations include: between an assigned enzyme and substrate for reaction keywords; between a substrate and product for reaction keywords, for production keywords and for the prepositions to and into; and between the last two assigned products/substrates for the word and. an example of an inappropriate location for a production keyword is before an assigned substrate.

as an example, here is the scoring for our exemplar sentence given the following assignments: 

enzyme = l-arabinose isomerase

substrate = l-arabinose

products = l-ribulose and n-arabinose

• reaction keyword conversion found between the enzyme and substrates: + <dig> points.

• preposition to found between substrate and products: + <dig> points.

• both a reaction word and a production word have been found: + <dig> points.

• word catalyzes found: + <dig> points.

• penalty for words between first and last entities: - <dig>  points.

this gives a total score of + <dig>  points.

the list of assignments is then ranked by score and the final predictions are made from this list, highest score first. multiple assignments may be used to make predictions, thereby enabling the algorithm to identify multiple reactions within a single sentence.

the keyword lists and weightings used in the algorithm were chosen as follows: 

• the reaction keyword list was assembled manually with specific reference to the nomenclature used in the enzyme commission classification
 <cit> .

• the production keyword list, together with the set of prepositions and conjunctions, were assembled manually from an examination of the literature, from our own knowledge of the field, and using a thesaurus.

• the weightings  used for each component when generating a score for a given assignment were derived from a small training corpus described below.

it is worth noting that an attempt to automatically compile a keyword list from verbs found between a tagged protein entity and a tagged small molecule in the genia corpus  proved insufficiently discriminatory to be useful, as the false positive rate was too high.

the program used to generate the metabolic reaction extraction results presented in this paper is available in additional file
 <dig> and an explanatory worked example is given in additional file
 <dig> 

training and evaluation
training corpus
a small training corpus was used to set the weighting for the various scoring rules described in the previous section. this corpus consists of sentences containing the names of at least two small molecules selected manually from the literature referenced in the ecocyc database
 <cit>  for various metabolic pathways, but excluding the specific pathways used subsequently for evaluation;  <dig> sentences were manually selected that describe at least one reaction each , together with  <dig> sentences containing the names of multiple small molecules, but that do not describe a specific reaction. it is important to note that these were the only criteria used to select sentences from the set of referenced papers. no attempt was made to exclude “difficult” sentences, hence the corpus contains the following complex sentence with multiple reactions: 

“zep catalyses the epoxidation of zeaxanthin to produce epoxycarotenoid; nced catalyses the cleavage reaction of epoxycarotenoids to produce xanthoxin ; and aao catalyses the final step of aba biosynthesis, which converts aba aldehyde to aba.”

half of the sentences  were used to manually adjust the weightings of the various scoring components described above in order to find a good combination for differentiating between true positives  and false positives . in addition, we chose a scoring threshold ; any permutation of entity assignments that gives a score below the threshold is eliminated from further consideration. the effectiveness of the chosen weightings was evaluated using the remaining set of  <dig> sentences. no attempt was made to highly optimize the choice of weightings and thresholds, as our sample size of sentences was relatively small and unlikely to be highly representative of relevant literature as a whole.

evaluation pathways
rather than create a set of manually-annotated sentences or abstracts to evaluate our method, we decided to assess performance against manually-curated pathways in the ecocyc database. this is a similar approach to that adopted by yuryev et al. <cit>  in the context of automated signaling pathway construction and rodríguez-penagos et al. <cit>  when evaluating the automated reconstruction of a bacterial regulatory network.

we chose three pathways from ecocyc and collected the original papers cited in each of these ecocyc entries: the pantothenate and coenzyme a biosynthesis pathway , shown in figure
1; and the tetrahydrofolate biosynthesis pathway  and the aerobic fatty acid β-oxidation i pathway , shown in additional file
 <dig>  all three pathways are from e. coli k- <dig> substr. mg <dig>  all reactions in all three pathways have at least one substrate, product and enzyme; some reactions have multiple substrates and/or products, but there is never more than one enzyme.
 <cit> .

we chose to annotate only the abstract and introduction of the referenced papers using our metabolic reaction system and compare the results to the relevant pathways within ecocyc. our decision to exclude the methods, results and discussion sections was in part a pragmatic one , but was also guided by previous research concerning the information content of the different sections of full-text articles. for example, shah et al. <cit>  undertook an analysis of the distribution of protein and gene names in  <dig> articles, and concluded that the abstract and introduction were the best sources of information about entities and their interactions, with the methods and, to a lesser extent, the results sections often proving problematic .

we also carried out a complementary analysis against a collection of short passages of text containing known reactions which we obtained from the reactome database
 <cit> . using the database we were able to link together metabolic reactions and the short passages of text describing them. our intention was to automate a comparison between the gold-standard reactions in reactome and the reactions extracted by our method. this required that all entities in the reaction must be present in the describing text and the entities must all be able to be trivially matched with their corresponding mentions with the text. this filtering produced  <dig> suitable passages of text with corresponding metabolic reactions.

measuring performance
to gain a rounded picture of how well our system performs, we considered the quality of its predictions for different aspects of our evaluation data: the entities  within a pathway; the metabolic reactions within a pathway; the binary relationships  within a reaction; and whole pathways.

given that primarily we compared our predictions to manually-curated pathways, rather than to gold-standard corpus annotations, we chose to adopt a similar approach to measuring performance to that of rodríguez-penagos et al. 
 <cit> . however, in our preliminary evaluation of entity tagger performance, we used gold-standard manually-annotated corpora, rather than curated pathways. in this context we were able to calculate the standard recall, precision and f-score metrics used in the majority of text mining research. consequently the main performance measures we used are: 

• recall: of the reactions/relationships/entities within a corpus of texts, the percentage that have been extracted — here ’c’ stands for ‘corpus’.

• recall: of the reactions/relationships/entities within a manually-annotated pathway, the percentage that have been extracted — here ’p’ stands for ‘pathway’.

• precision: of the extracted reactions/relationships/entities, the percentage that are correct.

• f-score: the weighted harmonic mean of recall and precision.

note that, in evaluating recall, we only take into account the primary metabolites belonging to the main route along the metabolic pathway. hence side metabolites, such as atp → adp + pi, are ignored. we took this approach because it is common practice for authors to omit details about side metabolites from published papers, leaving them to be inferred by the reader.

when judging the accuracy of named entity taggers, there is a choice to be made between “strict” matching criteria  and “sloppy” matching criteria . for example, consider the following tagged sentence fragment: 

“…is a key precursor of the <molecule > 4′-phosphopantetheine </molecule > moiety of…”

using sloppy matching criteria, credit is given for annotating phosphopantetheine, 4′-phosphopantetheine or 4′-phosphopantetheine moiety, but also for key precursor of the 4′; whereas strict matching criteria require an exact match to 4′-phosphopantetheine.

in this research we adopted sloppy matching criteria on the grounds that they have proved more informative than strict criteria in the context of gene/protein named-entity recognition in general, and of gene/protein relationship extraction in particular. with respect to named-entity recognition, in the vast majority of cases where a match was found using sloppy criteria but not with strict criteria, the core part of the entity name was correctly identified
 <cit> . strict criteria were deemed misleading because they are highly sensitive to the essentially arbitrary choices made when drawing up annotation guidelines for the evaluation corpora — for example, whether the word “mouse” is part of the protein name in the phrase “mouse oxytocin”. with respect to named-entity recognition in the specific context of relationship extraction, a manually corrected f-score was only  <dig> percentage points lower than the sloppy f-score, but  <dig> points greater than the strict f-score
 <cit> .

in the data sets used for this research there are a few examples where sloppy matching criteria arguably give a misleading impression about how well a complex entity name has been tagged. with sloppy matching, both the following examples of sub-optimal tagging score a “hit”: 

• the significant truncation of the long entity name geranyl pyrophosphate:-endo-fenchol cyclase to endo-fenchol cyclase;

• the splitting of single entity tps-d <dig> family members of conifer diterpene synthases into the two tagged entities tps-d <dig> and conifer diterpene synthases.

however, such examples are comparatively rare, and we have concluded that the number of false negatives that appear to be true negatives with strict criteria is a more significant problem than the number of false positives that appear to be true positives with sloppy criteria.

RESULTS
pre-evaluation of entity taggers
we performed a preliminary evaluation of the performance of banner and oscar <dig> on the genia corpus
 <cit> , which contains  <dig>  biomedical abstracts related to the specific topic of human blood cell transcription factors. genia was chosen because it contains annotations for a broad range of biological and chemical entities. we additionally tested oscar <dig> using the dedicated fraunhofer scai chemical corpus
 <cit> , which contains  <dig> abstracts from chemistry papers. neither tool was developed using either of these corpora: banner was trained on the biocreative corpus
 <cit> , and oscar <dig> combines knowledge-based heuristics with the chemical dictionary chebi
 <cit> .

banner scored 72% for precision, recall and f-score on genia. this is roughly in line with our expectations; it has been previously shown that a range of protein/gene name taggers perform less well on genia than on some other widely-used corpora, and that this is  attributable to the chosen annotation criteria .

the results for oscar <dig> are more interesting and are presented in figure
 <dig>  two features stand out from these results: the best performance of oscar <dig> on both corpora is worse than we had expected from results presented elsewhere
 <cit> , with peak f-scores of 62% and 48% on the fraunhofer scai corpus  and the genia corpus  respectively; and the performance on the genia corpus is significantly worse than that on fraunhofer scai.

a preliminary examination of the tagged text generated by oscar <dig> for both corpora indicated that a significant proportion of the false positives were attributable to acronyms being tagged as the names of chemicals. this is a known problem  and one that the authors advocate addressing at the level of the wider text-mining framework.

in this spirit, we developed a simple method for resolving acronyms. any putative acronym  is deemed to be a false positive unless either a) a defining chemical name is found in the text preceding it, or b) oscar <dig> gives it a confidence score of  <dig>  or more. the latter criterion is used to allow for the presence of commonly occurring molecules for which acronyms are frequently used without explicit definition . this approach achieved a significant improvement in precision at the cost of a negligible drop in recall . bearing these results in mind, we henceforth used oscar <dig> with the threshold set to zero, thereby maximizing recall.

we also used our training corpus of sentences containing the names of at least two small molecules  to assess whether, in cases where banner tags multiple protein names within a single sentence, it is advantageous to prefer names that end in “-ase” or “-ases”. of the  <dig> enzyme names in the training corpus,  <dig> end in “-ase”. as expected, the suffix “-ases” commonly occurs when a text refers to a class of enzymes in general, whereas the suffix “-ase” is used when a specific enzyme is being discussed in the context of a particular reaction.

where banner tags multiple names within a single sentence, we concluded that giving preference to names that have the ending “-ase” is potentially beneficial in the vast majority of cases. this is mainly attributable to the tendency of banner to tag multiple terms that refer to the same entity; by giving precedence to a term that ends in “-ase”, the typical effect is to select the full name of the enzyme ahead of its tagged abbreviation and/or ec number. for simplicity, we have not incorporated this approach in our current method. however, a small increase in the score assigned to putative enzymes that have names ending in “-ase” is, we believe, worth further consideration.

performance of entity taggers on metabolic corpora
we began by undertaking a standard analysis of tagger performance by evaluating their scores for all the entities in the abstract and introduction of each of the papers associated with our three evaluation pathways. results are shown in table
 <dig> 

the tagging performance of the ner tools when applied to the abstracts and introductions from papers referenced in ecocyc with respect to our three evaluation pathways. taking the banner column for the pantothenate and coenzyme a biosynthesis pathway as an example, the numbers in brackets indicate that banner correctly identified  <dig> out of the  <dig> protein names ; and of the  <dig> names it tagged,  <dig> were correct . the oscar <dig> results are with a confidence threshold of zero.

performance here is significantly higher than it was for genia. it is worth noting that, in the case of banner, the performance on this corpus is very similar to its performance on gene/protein interaction corpora such as aimed
 <cit>  and the lll training corpus created for the  <dig> lll challenge
 <cit> , for which f-scores of  <dig> % and  <dig> % were reported in
 <cit> .

relationship extraction
our metabolic reaction extraction results  for all three evaluation pathways, are shown in table
 <dig>  the same results broken down into binary interactions , along with the results for the reactome dataset, are shown in table
 <dig>  note that the number of binary pairs is larger than the number of reactions, because some reactions comprise multiple substrates and/or products. a visual summary of the complete set of results for the smallest of the three pathways  is given in figure
 <dig>  equivalent figures for the tetrahydrofolate biosynthesis and the aerobic fatty acid β-oxidation i pathways are given in additional file
 <dig>  together with a set of example sentences annotated with the putative entities and relationships extracted by our system.

taking the “correct reactions ” column for the pantothenate and coenzyme a biosynthesis pathway as an example, the numbers in brackets indicate that our algorithm correctly identified  <dig> out of the  <dig> reactions in the curated ecocyc pathway , giving 78%; and of the  <dig> identified interactions ,  <dig> were valid reactions , giving 68%. a reaction for which the susbtrate and product have been correctly assigned, but not the enzyme, is deemed correct in column two, but incorrect in column three.

numbers in brackets were calculated as for table
 <dig> 
 <dig> 

fair and meaningful comparisons within the field of biological text mining are extremely difficult; for example, a single system may give a wide range of different performances even when applied to different corpora within the same sub-domain. in this research, a prominent feature of the results  is that our algorithm performs noticeably less well on the aerobic fatty acid β-oxidation i pathway than on the other two pathways. to a significant extent this appears to be attributable to the distinctive ways that reactions in fatty acid pathways are commonly described, for example in terms of molecular addition : 

"enoyl-coa hydratase catalyzes the second reaction of the fatty acid β-oxidation, i.e., the syn addition of water to α,β-unsaturated fatty acyl-coa thioesters."

however, in the absence of a substantially larger data set, we are unable to draw firm conclusions.

notwithstanding these caveats and challenges, we note  that our results appear to be somewhat better than those achieved using the empathie system. however, no direct comparison is possible.

of the  <dig> reactions extracted from the reactome dataset,  <dig> were perfect extractions. a manual analysis on extracted reactions that matched poorly with the gold-standard reactions showed that  <dig> of the reactions in the dataset where described in a form unlikely to be used in a journal article. consider, for example, the following passage: 

"at the beginning of this reaction,  <dig> molecule of ’oxygen’,  <dig> molecule of ’h2o’, and  <dig> molecule of ’5-hydroxytryptamine’ are present. at the end of this reaction,  <dig> molecule of ’nh3’,  <dig> molecule of ’5-hydroxyindoleacetaldehyde’, and  <dig> molecule of ’h2o2’ are present."

we should, of course, be even more cautious when making comparisons between different sub-domains and where the evaluation strategies are different. nevertheless, we think it is useful to consider how the performance of our method for extracting metabolic reactions compares to that in the well-studied sub-domain of gene/protein interaction extraction. here  we briefly compare the performance of our method with the reported performance of three contrasting gene/protein interaction tools: the rule-based relex method
 <cit> , which was the best-performing method in the evaluation reported in
 <cit> ; the nlp tool akaneppi
 <cit>  trained on the bioinfer corpus
 <cit> ; and the simple baseline algorithm in
 <cit> .

the range of scores for the gene/protein extraction tools are for five corpora as evaluated in
 <cit> . the scores for our metabolic reaction extraction method summarize those in table
 <dig>  i.e. they are broken down into the same three binary interactions and the range is for the three evaluation corpora and the reactome dataset.

these results suggest both that our method performs reasonably well when placed in the wider context of biomedical relationship extraction, and that metabolic reaction extraction is more tractable than has hitherto been assumed.

there are a number of ways that the method could be improved, for example by incorporating techniques for handling negation  and resolving anaphora, and the system might benefit from using more sophisticated tools in place of our present simple strategies, such as the widely-used acronym resolving general heuristic  program
 <cit> . more generally, we should anticipate that more sophisticated nlp approaches will give better precision at the potential cost of lost recall and greater complexity. but perhaps more interesting is the fact that our relatively simple method performs so well, especially in light of prior assumptions that this is a particularly challenging sub-domain. there are several reasons why this may be the case: 

• whole reactions are commonly described in a single sentence.

• a single sentence commonly describes a single reaction and nothing else.

• entity taggers appear to be reasonably accurate in a metabolic context, with most enzyme names having the ending “-ase” or “-ases”.

• keyword lists appear reasonably discriminatory when distinguishing metabolites from non-metabolites and substrates from products.

• most reactions are described multiple times in the literature; typically at least one occurrence will be worded in such a way that the information is relatively easy to extract.

CONCLUSIONS
in this paper we have presented a simple method for extracting metabolic reactions from free text. we have shown that it successfully extracted a high percentage of reactions for two out of three pathways; the third pathway, dealing with fatty acid metabolism, proved particularly challenging owing to the distinctive way in which reactions are described . in so far as comparisons with broadly comparable methods are possible, it appears that our approach performs rather well; that, at least, is what our brief comparison with the performance of gene/protein interaction extraction methods suggests, with both precision and recall at comparable levels.

given that information about secondary metabolites such as atp is frequently omitted from source papers, we have focussed on the extraction of primary metabolites, rather than side metabolites, in the evaluations we present here. clearly, this lack of information about side metabolites in the literature is an obstacle to the fully automated construction of complete metabolic pathways using text-mining methods. however, a more realistic goal for a metabolic text mining system is to support manual curation. in this latter context, we believe our evaluations show that our method could prove immediately useful to database curators, who are already used to having to infer the side metabolites when metabolic reactions are incompletely specified in the literature.

ultimately, we believe there is one overriding implication of this research: that the extraction of metabolic reactions may be more tractable than previously assumed and therefore worthy of more widespread attention within the biological text-mining community in the immediate future.

competing interests
the authors declare that they have no competing interests.

author’s contributions
jc wrote the programs used in the experiment and analysed the results. ajs participated fully in the experimental design and analysis of the results and drafted the manuscript. in and ams contributed to the experimental design. all four authors co-edited, read and approved the final manuscript.

supplementary material
additional file 1
reactionextractor. an example java program, provided as a runnable .jar file, implementing the algorithm described in the paper. the program takes a plain text file as input and outputs all predicted reactions from the input text. running instructions are included in the archive. the open source tools described in the paper  are all included in the archive.

click here for file

 additional file 2
supplementarymaterial. an archive containing a detailed, worked example of the algorithm and the reconstructions of the tetrahydrofolate biosynthesis pathway and the fatty acid β-oxidation i pathway, together with a set of example sentences annotated with the putative entities and relationships extracted by our system.

click here for file

 acknowledgements
jc is funded by a bbsrc case studentship with industry partner unilever.
