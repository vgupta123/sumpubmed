BACKGROUND
over the past five years, developments in the technology for determining dna sequences have led to a substantial change in genome sequencing strategies. applications in microbial genomics range from re-sequencing collections of strains to non-coding rna identification, transcription start site determination, and extended metagenome studies
 <cit> . current high-throughput sequencing devices — a.k.a. “next-generation sequencing”  technology — can yield hundreds of gigabases of sequence data rapidly and at an ever-decreasing cost. however, the ratio between the production of these sequence data and computer storage capacities is steadily increasing, as is the cost of data management and analysis
 <cit> . as a consequence, the bottleneck affecting large-scale genomics projects is shifting from data generation to data interpretation. downstream from the primary and secondary levels of analysis — such as quality control, read mapping and de novo assembly — the most time-consuming and specialised tool-demanding tasks are now related to data mining and exploration. to facilitate this analysis step, flexible visualisation interfaces are required
 <cit> .

comparative genomics stands out as one of the major applications of high-throughput sequencing. in the field of microbiology, this discipline involves the elucidation of genetic traits underlying specific pathogenic phenotypes, and contributes to deciphering evolutionary relationships within large collections of isolates, with direct clinical applications
 <cit> . the most frequent strategy for comparing genome organisations is to examine synteny relationships between genomes, which is the association of gene similarity with gene ordering along the chromosomes. these data can be usefully complemented by information about polymorphism at the nucleotide level; obtained at the genome scale by ngs analyses, biodiversity data help to reveal global trends in evolutionary relationships, and structural variation events such as recombination or insertion/deletion of genomic islands.

a large number of software systems have been developed in the last decade to facilitate comparative genomic studies; they give access to diverse features, in terms of type and quantity of data, analysis methods and styles of user interfaces
 <cit>  . many are web-based applications, which tends to hinder interactivity as standard html does not enable a dynamic user experience. some of these tools are more user-friendly, either because they use advanced web protocols  or because they are based on native desktop frameworks; however, these applications are mostly limited to the visualisation of one single or few genomes and/or to limited and particular types of data representation.

here, we present a novel software application — syntview — providing the user with substantial flexibility for comparative analysis of microbial genome information. its originality stems from the combination of many features individually available in other applications: it is a web-based and desktop-capable flash software; it offers highly interactive graphical user interfaces; it is designed for the visualisation, through many complementary perspectives, of both synteny relationships and dna polymorphism data for multiple bacterial genomes. the syntview software is therefore ideally suited to the exploration of data obtained in ngs-based population genomic studies.

implementation
the syntview software was written in actionscript  <dig>  language, using the apache software foundation flex framework
 <cit>  and the associated plug-in for the eclipse™ integrated development environment . this technology allows adobe® flash software to be built, providing dynamic presentations of complex data through either web browsers or desktop clients. some interactive data visualisations were implemented using the flare library
 <cit> .

syntview was built around the following rationale: n genomes should be compared with one reference genome . depending on the mode of access to the application , genome data can be loaded either by the user using import functions  or with the help of a software administrator . these data can include complete annotated genomes and associated comparison files for synteny visualisation, or polymorphism data from ngs data sets. currently, the accepted file formats are ptt  for genome annotation, tab-delimited files for other information  and the newick format for phylogenetic trees.

the user can access the application in three different ways. first, a stand-alone client can be run using the adobe desktop application cross-platform runtime air , which will be installed automatically along with syntview, if required. this allows the users to work with their own locally stored data. alternatively, web access for multiple users can be implemented; in this configuration, syntview uses flat files stored on the web server. finally, syntview is available in combination with the genolist integrated environment
 <cit> , a multi-genome microbial database accessible on the web, which houses  <dig> bacterial genomes
 <cit> . this option can exploit the comparative genome data pre-computed in genolist.

extensive performance tests have shown that the application reached technological limits if more than ten thousand dynamic graphical objects  were used. drawing strategies were thus developed to ensure that graphical outputs remain below this upper limit, using a mix of static and dynamic objects. for instance, snp local maps come up with three display modes according to the density of polymorphic positions and the representation scale:  in the local view, snp graphical objects remain interactive  when the genome region displayed is not longer than  <dig> kb;  if the region is longer than  <dig> kb, a static drawing is computed; and  snps can also be represented as blocks that cluster a series of adjacent polymorphic positions together  — these blocks are clickable to return to the interactive local view.

RESULTS
a generic genome browser
the syntview software is built as a generic genome browser including sub-maps that hold information about genomic objects . after selecting genomes of interest, users can explore them visually by genomic location, or directly go to specific genes by name . several genomic maps can be stacked on top of each other. the user can dynamically change their respective order, adjust the scale of the maps to use the full area of the screen, and zoom in and out. organisms can be ordered according to their evolutionary relationships using a phylogenetic tree, whose branches can be graphically flipped. the user can also browse the pivot genome or the content of gene baskets through gene tables, with sorting functionalities and backward access to the graphical view.

contextual menus are associated with genes, allowing the user to compute local views around any particular gene, to get sequence information, to go to the genolist gene card , and to add genes to a gene basket that can subsequently be used for various operations on gene lists. more generally, cross-references from syntview genes to other repositories offering web services  can be implemented, as long as shared identifiers can be defined. in addition, web services can be connected to the application to perform various operations on biological objects or their relationships . symmetrically, external applications can control syntview: calling methods can be specified from their own pages that will trigger the generation of a specific syntview representation .

two specialised modules are available to explore and compare genome organisations and polymorphism data, as described below. these functions comprise a number of dedicated inter-connected graphical views: object selections in one view are automatically mirrored in another view . in addition, generic functions automatically adapt their behaviour to the context ; for instance, strain ordering can be guided either by an autoscore computation or by a phylogenetic tree.

visualisation of synteny relationships
the software can display synteny relationships between a reference genome and a set of related genomes. the synteny information is typically computed from the correspondence between proteins of different organisms  and the conservation of ordering of associated genes along the genomes. protein associations can be either externally computed by any method yielding compatible files  or obtained from pre-computed comparative data in genolist.

to represent the synteny information, a colour is randomly assigned to every gene of the reference organism; the related genes in other genomes get the same colour as the reference gene whereas orphan genes remain in black. clicking on a gene shows its local synteny: the other genomes shift into alignment with the main sequence and the non-syntenic genes fade away. protein multiple alignment, when available, can be visualised by clicking on the links between the corresponding genes: this redirects the user either to genolist or to an external alignment web service.

in addition to the local view, three global views are available. the dot plot shows synteny ruptures and chromosome re-arrangements; the matching genes can therefore be selected graphically and exported to a file. the line plot shows the organisation of syntenic groups at the chromosome level. the phylogenetic profile consists of a heat map of blastp hits sorted according to a phylogenetic tree. these views sport widgets for filtering the data display dynamically, according to criteria such as keywords, thresholds on blast reports, or the content of user-defined gene baskets.

visualisation of polymorphism information
the second specialised module of syntview is designed to visualise information about polymorphism across a large number of bacterial strains. such data are typically obtained by population genomics studies involving high-throughput genome sequencing of a collection of isolates. snps are the most frequently represented data. they must be determined independently from the syntview software, and formatted according to the documentation. we have developed our own procedures for computing such data; these procedures allow fine tuning of a large number of parameters for snp identification, and are available together with the syntview software.

the snps are computed and represented using a reference genome, to which n related strains are compared. the snp maps allow the user to navigate through polymorphism data sets, in which snps are mutually linked to cognate genes . the snps are coloured according to the type of mutation they cause  and to their location in relation to genes ; they can be shown/hidden dynamically according to these properties. sequence variations  can be represented in a dedicated view. finally, an artificial sequence consisting of the alleles at the snp positions can be determined for all the genomes or for a group of genes, so as to compute phylogenetic distances. all the types of sequences  can be exported.

many additional features are available in the polymorphism module. for instance, the sequencing coverage can be displayed, and scale options can reveal heterogeneously covered areas. strains can be grouped according to epidemiological information, phylogenetic information or other metadata to obtain snp density maps ; these metadata can also be used to arrange or represent snp tracks in the main view differentially. finally, the snps can be distinctively coloured or displayed according to their frequency of occurrence in the set of strains included in a given analysis .

discussion
the software features described in this paper illustrate only some of the main capabilities of the syntview application. a full list of its functionalities is available in additional file
 <dig> 

one of the main strengths of syntview lies in its highly interactive graphical user interface, possible due to the flash technology used to develop the software. this technology is increasingly exploited by comparative genomics applications
 <cit> . it allows the development of rich internet  applications, which escape the limitations faced by standard html websites. flash also provides advantages similar to or greater than those of other technologies : the flash plug-in is installed out-of-the-box on most computers and it is fully portable across different web browsers. although html <dig> is becoming more and more popular on the world-wide web, including for genomics applications , it is currently less cross-compatible among web browsers than flash and mostly limited to playing videos and animations, rather than rich internet applications; indeed, development environments and resources are still far more efficient when using flash/flex  than using html <dig>  in addition, the flash strategy allows us to propose a web access and a client application  simultaneously. thus, we have created a versatile solution that offers the best of both worlds: a desktop program that can easily be installed by a non-expert user, providing direct access to his local storage and file systems, without needing an it infrastructure to deploy complex web architectures; but also, a browser application that may be more intuitive for some users and allows several people to access a single instance of the software, while retaining many of the characteristics of desktop-like programs.

note that syntview is not intended for data generation: the software is focused on the dynamic exploration of genome data produced externally. in particular, syntview is not linked to any particular database, which allows the generation of plain text files that the application will interpret and subsequently represent  or the exploitation of other sources of information, such as the genolist environment.

syntview was designed to be extremely fast, and sports a user-friendly interface that is straightforward to use for biologists accustomed to graphical widgets. in particular, data exploration is facilitated by the possibility of connecting several views: indeed, in both the synteny and snp visualisations, the various representations are interactively linked together, and a user selection  in one panel dynamically triggers either a related selection or a view modification in other panels . this is a major feature that is very helpful for making sense out of large and complex data sets, in a way that is not available in most similar software, even if individual analogous views can be found . for example, interesting areas of the chromosome may be observed  using the line plot representation; it is possible to zoom in on these regions, then select the corresponding bdbh to export them, or shift with one mouse click to the local view to analyse the region in more detail. the export functionalities offered by syntview are also appropriate for further analysis, once an initial exploration has identified the data sets to be selected. the images generated by the software can be saved in png format and subsequently used in reports or publications.

numerous applications are already available for visualising comparative genomics data from microbial species, but we believe that syntview fills a gap and is more complete: it is a flexible software package, compatible with various computing environments, and uniquely integrates complementary features present, in isolation, in similar tools. for instance, the cgat java alignment viewer
 <cit>  and the gsv web package
 <cit>  are efficient for syntenic visualisations, but are restricted to pairwise genome comparisons. likewise, mizbee
 <cit>  implements an innovative multi-scale synteny browser that enables interactive exploration of various kinds of relationships, but only between two multi-chromosome genomes at a time. the cinteny
 <cit>  and genomicus
 <cit>  web sites are primarily designed for metazoa; genomicus focuses on ancestral genome reconstruction and cinteny provides on-the-fly computed, but non-interactive, synteny views. cgview
 <cit>  and easyfig
 <cit>  are highly customisable packages for producing publication-quality, but static-only, figures; the gview
 <cit>  java application is more interactive but mainly focused on the display style configuration. companion tools to the popular genome browser gbrowse, such as synbrowse
 <cit>  and synview
 <cit> , also offer interactivity albeit limited. circos
 <cit>  and brig
 <cit> , available as desktop applications, are mostly restricted to static  views. genomering
 <cit>  has an interactive web interface for visualising multiple circular genome alignments, based on an original concept of a common annotation coordinate system. gobe
 <cit>  is a web-based flash application, hence very dynamic, but it is limited to synteny information. although the mauve
 <cit>  and vista
 <cit>  packages come with useful java visualisation interfaces, they are primarily dedicated to whole genome alignments. the mgv
 <cit>  and sybil
 <cit>  suites are feature-rich web-only applications for the interactive visualisation of microbial genomic contexts, but these software do not include nucleotide polymorphism information. more recent software were developed especially to handle ngs data sets, although most do not focus on the representation of processed biodiversity information for large collections of microbial strains. they include: igv
 <cit>  and savant
 <cit>  which are both widely used; and genomeview
 <cit>  which is a feature-rich stand-alone genome browser able to cope with dozens of “ngs” genomes, but which lacks integrated circular representations. the latest version of artemis
 <cit> , an established annotation tool, in association with act
 <cit>  and dnaplotter
 <cit> , provides the user with a large set of comparative views, some of them being dedicated to bacterial population genomics studies. together, these three java applications probably come closest to matching the features provided by syntview.

syntview has been used in several genome sequencing projects. its data visualisation features help to reveal or confirm biological models. for instance, it allowed us to reproduce an observation regarding bacterial genome organisation: the location of the superintegron in vibrio species
 <cit>  . syntview was also used to analyse hundreds of bacterial strains that were illumina-sequenced and whose nucleotide polymorphism was determined, thus yielding snp heat map representations similar to those in
 <cit>  . other applications include the analysis of genomic islands visualised by the sequencing coverage representation, allowing confirmation, or otherwise, of the presence or absence of such islands, and the identification of specific deletions therein.
 <cit>  representing the same genomes and describing the specific region highlighted as the superintegron of vibrio cholerae.
 <cit> .

syntview will be further developed in several ways. first, we plan to increase the scope of the software by accommodating other types of data. in particular, syntview should enable the management of incomplete genomes for synteny representations. for ngs, we also intend to design novel views for rna-seq data  and to improve the snp representation such that it can handle multiploid organisms. as far as end-user interactions are concerned, improvements will include features such as the ability to save selected views and gene baskets in a permanent way.

CONCLUSIONS
we have developed software for the dynamic visualisation of microbial genomes, such that both synteny and dna polymorphism can be displayed. the most important asset of syntview is its interactivity, inherent to the use of the flash technology. in addition, several properties of the application facilitate efficient investigation of large data sets at the chromosome scale: for instance, its flexibility for establishing links with various user data sets and the dynamic interactions between the numerous specialised views. this innovative approach to data exploration is not possible with most existing applications, because they are more static and/or do not offer multiple views of multiple genomes.

availability and requirements
syntview is available under the gnu lgpl   <dig>  license at the following url: <http://genopole.pasteur.fr/syntview>. as the flash runtime is pre-installed in most web browsers, the application can run without any further installation. technical documentation, tutorials and demonstration sites are available at the following url: <http://genopole.pasteur.fr/syntview/documentation>.

project name: syntview

project home page: http://genopole.pasteur.fr/syntview

operating system: platform independent

programming language: actionscript 3

other requirements: adobe® flash player

license: gnu lgpl  <dig> 

any restrictions to use by non-academics: none

competing interests
the authors declare that they have no competing interests.

authors’ contributions
all authors participated in the design and testing of the application. pl also carried out the following tasks: implementation, documentation, and manuscript drafting. im wrote the final version of the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
full list of syntview features. this file provides an exhaustive description of the functionalities found in the syntview software.

click here for file

 acknowledgements and funding
we thank nicolas beaume, caroline boursaux-eude, violette da cunha, stéphane descorps-declère and other members of the bioanalyse génomique platform for testing and making suggestions about the graphical user interface. we are grateful to philippe glaser for comments on the software and the manuscript, and to annie etienne for careful proofreading of the manuscript. we thank our fellow biologists who used the application and provided some feedback.

this work was supported by institut pasteur and grants from the région ile-de-france , the agence nationale de la recherche  and the french government’s investissements d’avenir program .
