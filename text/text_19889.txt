BACKGROUND
the identification of specific differences between metabolite profiles plays a prominent role in metabolomic data analysis and can be useful for the discovery of biomarkers or the characterization of specific biological activities. hyphenated mass spectrometry methods  are among the most common analytical tools for metabolomics. most produce large datasets that are not easily interpretable using the software provided by most instrument manufacturers. the common data analysis workflow, starting from raw data, usually includes the detection of peaks, their integration, matching of corresponding peaks across datasets and subsequent multivariate analysis  <cit> . several tools enabling automation of the procedure are available  <cit> , but the overall task still proves challenging given the datasets' size, complexity, common shifts in migration times between datasets, and the need to identify metabolites. in addition, some of these tools either provide only partial solutions  or were developed for a specific type of analysis  and some alignment algorithms may not be very robust when migration time differences are large and the composition of samples is highly variable. moreover, automated peak picking and integration remains an important challenge that is complicated by the wide range of peak intensities, sometimes poor separation of compounds and the resulting distorted peak shapes, leading to multiple incorrect assignments of differences. while visual exploration of the raw data has been used to complement automated data analysis  <cit> , this often comes at the expense of convenience and versatility. direct chromatogram comparisons bypass peak picking and integration to select areas of interest from raw data or to locate differences between metabolite profiles  <cit> . to apply direct chromatogram comparisons as a complement or an alternative to the multivariate analysis of integrated peak lists, automation of the processing of raw data along with suitable visualization and metabolite identification methods are desirable. with mathdamp, we provide a complete series of such tools, capable of providing an overall view of the differences between metabolite profiles according to different criteria. the functionality of the package is demonstrated with ce-ms data, which is particularly challenging due to the more significant migration time shifts, but the tools can be used for other types of hyphenated mass spectrometry methods as well.

implementation
differences between metabolite profiles in mathdamp are highlighted by applying arithmetic operations to all corresponding signal intensities from whole raw datasets on a datapoint-by-datapoint basis. to facilitate this, the datasets are processed into rectangular matrices and normalized in terms of both migration time and signal intensities. the results are visualized on density plots  providing a global view of the differences between samples. the main features of the package are briefly outlined below. a detailed description of the implementation and usage is part of the online documentation  <cit> .

preprocessing
raw datasets are binned along the m/z dimension to a specified resolution upon loading. baselines may be subtracted by fitting the individual electropherograms to any user specified function  by robust nonlinear regression as described by ruckstuhl et al.  <cit> . however, the regression is performed in a global fashion in our implementation. following baseline subtraction, noise may be removed from individual electropherograms by leveling to  <dig> all signal intensities falling within a threshold. by default, the threshold is calculated for every electropherogram as a specific multiple  of a standard deviation of signal intensities from a specified region of the electropherogram where no signals are expected . the datasets may be smoothed by applying predefined or user specified smoothing filters to all electropherograms in the dataset. additionally, the datasets may be cropped along both the m/z and migration time dimensions.

normalization
sample datasets are normalized to a reference dataset  on a pairwise basis. for the purpose of the dataset alignment along the migration time dimension, a representative set of peaks is picked from all datasets using a modified douglas-peucker algorithm as described by wallace et al.  <cit> . raw migration times are used for all calculations. using this approach, individual electropherograms are segmented into parts determined by strategic points. initially, only the endpoints of an electropherogram are set to be the strategic points. additional strategic points are assigned recursively to a datapoint in the electropherogram with the biggest orthogonal distance from a line connecting two neighboring strategic points. this distance must be above a specified threshold to avoid picking noise-related peaks. vertical distance instead of an orthogonal distance is used in our implementation for the assignment of new strategic points. strategic points with two neighboring strategic points having a smaller signal intensity are selected as peaks. the corresponding migration times may then be calculated as centroids from datapoints falling within a specified vicinity  of the selected strategic points. the alignment of datasets along the migration time dimension is achieved by dynamic time warping  with an explicitly specified time shift  function as described previously  <cit> . any mathematical function can be specified as the time shift function. optimal parameters for the time shift function are calculated for all sample datasets by combining dynamic programming  and global optimization methods. the parameters of the time shift function are optimized to achieve the lowest sum of dp scores from all corresponding electropherograms. the dp scores are calculated by setting the partial scores to the distance between the two peaks of a subproblem . the optimized time shift function is then used to rescale the timescale on the sample dataset . signal intensities are adjusted to compensate for the compression or expansion of the peaks during time warping and thus conserve their areas. all electropherograms in the aligned sample datasets are interpolated and timepoints identical to those in the reference dataset are selected.

a standard library table  may be aligned to the reference dataset using the same procedure. the aligned standard library table can later be used to annotate the plots or for the automatic localization of the peaks of the internal standard as described below.

signal intensities in the sample datasets may be normalized according to a specified list of normalization coefficients . additionally, the signal intensities may be normalized according to the peaks of the internal standard. these peaks are then integrated in all datasets after alignment. the location of the peak of the internal standard in the reference dataset may be either specified explicitly or it may be extrapolated from the aligned standard library table. in the latter case, the user specifies only the name of the compound to serve as the internal standard.

result datasets
following dataset normalization, various forms of direct comparisons may be performed to find differences between two or multiple datasets. arithmetic operations or statistical tests are then applied to all corresponding signal intensities. the resulting dataset has the same structure and dimensions as the compared datasets. any processed, normalized, or result dataset can be easily exported as text or in binary format using mathematica's built-in data export functionality.

to compare two datasets, the simplest way to highlight differences between them is to subtract the corresponding signal intensities . alternately, dividing this difference by the larger of the two signal intensities provides a measure of the relative difference. multiplying the corresponding signal intensities of the absolute and relative difference results highlights differences significant in both absolute and relative terms . 

outlier signals within a group of datasets may be located by calculating z-scores or by quartile analysis. a specified number of outliers may be removed from a set of corresponding signal intensities prior to z-score calculation. this limits the disproportionate influence of eventual outliers on the mean and standard deviation of the set which may lead to undesirably low z-score values. the result for the quartile-based analysis, an alternative to z-scores, is calculated as a difference between a specific signal intensity value and the third quartile  or the first quartile  of the corresponding set, divided by the interquartile range. the result is set to  <dig> if the value lies between the first and the third quartile.

to compare two groups of replicate datasets, averaged datasets for both groups are calculated after normalization and these are used to generate the absolute, relative, and absolute × relative difference results. additionally, t-scores are calculated for all groups of corresponding signal intensities. the resulting dataset may be used to directly identify the differences or to filter the absolute × relative result to remove statistically less significant differences .

an f ratio  is used to find differences between multiple groups of replicated datasets. the f ratio, t-score, z-score, and quartile-based result datasets may be smoothed to suppress signals resulting from individual coinciding noise-related signal intensities. details and template notebooks for the differential analysis approaches described above are part of the online documentation  <cit> . additionally, any custom function to process corresponding signal intensities from datasets under comparison may be defined to highlight any difference or any pattern of interest.

visualization
the sample datasets and the results of differential analyses are visualized using density plots. the axes represent the migration time and m/z values. peaks appear as color-coded spots characteristic of the signal intensity . multiple datasets may also be interlaced into each other so that electropherograms corresponding to the same m/z value appear next to each other on density plot  allowing to simultaneously explore the whole profiles. for any of the different types of results, plots displaying overlaid electropherograms for time ranges adjacent to the candidate differences can be generated in a descending order of significance to facilitate visual inspection and identification of false positives . the aligned standard library table may be used to place annotation labels directly on the density plots and electropherograms to allow easier identification of metabolites .

RESULTS
preprocessing
the binning of raw datasets along the m/z dimension facilitates their processing into a rectangular matrix format. for datasets with high resolution along the m/z dimension , binning provides a significant decrease in size and resolution suitable for visual inspection. choosing a wider bin size may, however, lead to an undesirable dilution of weak signals in noise. this can be overcome by first performing the baseline subtraction and noise removal on datasets binned using a narrow binning window. the resulting datasets may then be binned to a resolution suitable for visual inspection.

normalization
a representative set of peaks is picked from the datasets for the purpose of migration time alignment. we modified the peak picking algorithm described above to use the maximum vertical distance from the line connecting two neighboring strategic points as a criteria for a new strategic point. this was done to avoid the necessity to normalize the migration time scale and the signal intensity scale prior to peak picking. however, by using the vertical distance, many datapoints within a peak fulfill the criteria of being above the vertical distance threshold. excessive strategic point selection is suppressed by specifying a minimum distance between neighboring strategic points. the minimum distance is, by default, set to a quarter of a typical peak width so that the excluded time window in the vicinity of strategic points corresponding to the peak top and to the peak base partially or almost completely overlap.

results of the migration time normalization/alignment are shown in figure  <dig>  as can be seen, the migration time shifts are significant between the original samples and the trend toward larger shifts with increasing migration time is apparent . the quality of the overall alignment procedure can be seen in figure 1b. the quality of the alignment is rather uniform over time. isolated symbols do not correspond to misaligned peaks but rather to peaks higher than the peak picking threshold present only in certain datasets.

the alignment procedure described above proved robust to the presence of a large number of non-corresponding peaks between two aligned datasets. a small number of corresponding peaks picked from the datasets proved sufficient to find the optimal parameters of the time shift function. given the robustness of the alignment procedure, missing peaks or erroneous peak picking do not significantly affect the quality of the alignment.

an iterative two-step alignment procedure proved beneficial for datasets with significant time shifts between corresponding peaks. to achieve a good alignment, a small gap penalty value is desirable to limit the number of non-corresponding peaks that are close enough in corresponding electropherograms to fall within the gap penalty and thus affect the alignment. however, when a small gap penalty is used for the alignment of datasets with large time shifts, the optimization procedure may not find the region of convergence to the global optimum. therefore, a bigger gap penalty value is used first to generate an approximate alignment. the second alignment is then performed with a smaller gap penalty value starting with the parameters of the time shift function obtained from the primary approximate alignment. the dtw implementation of mathdamp employs explicit time shift function specification. generic time shift functions  may be specified for dataset alignment. alternately, time shift functions incorporating a priori knowledge about the expected time shifts, as for example migration time normalization function for ce  <cit> , may be used. using explicit time shift functions provides the ability to control the flexibility or the rigidity of time warping. this may prove beneficial for some applications as improvement of alignment results of unconstrained dtw  <cit> , by introducing rigid slope constraints, was reported  <cit> . additionally, other existing alignment algorithms  <cit> , that could also be implemented in mathdamp, may hold advantages for specific applications.

as described above, the method to identify differences in profiles is not based on integrated peak lists and thus avoids common quantitative errors introduced by this task. it is important to realize that the described peak picking is used only for the purpose of alignment which as we described is very robust to possible peak picking errors.

data visualization
the density plot visualizations provide an overall intuitive view of the differences between samples . peaks appear as colored spots of intensity corresponding to the magnitude of the differences between samples/groups. as described above, multiple alternative approaches for highlighting a difference of interest are available. since different approaches may possess different strengths and weaknesses, evaluating them in parallel decreases the chance of missing an important difference.

the proper alignment of the datasets is a necessary prerequisite to obtain clear results. misaligned peaks can lead to ambiguous signals on the density plots  but these fortunately can be ruled out as false positives by visually exploring the overlaid electropherograms of the top candidate differences . the confirmation plots are thus an essential and easy way to identify false-positive signals since at this point there are no simple means to automate this process. specific sources of ambiguous signals and possible ways to suppress their occurrence, as well as potential strengths and weaknesses of alternative approaches, for different kinds of differential analysis, are described in more detail in the respective example notebooks which are part of the online documentation  <cit> .

the ability of mathdamp to identify specific differences in complex metabolite profiles has been successfully demonstrated, leading to the discovery of a biomarker for liver oxidative stress  <cit>  as well as facilitating enzyme activity detection and discovery in known and non-characterized proteins using non-targeted ce-ms analysis of complex substrate cocktails  <cit> . overall, the mathdamp tools can be seen as complementary to other methods that make use of integrated peak lists to find differences in profiles using downstream multivariate analysis. while both approaches may have limitations, mathdamp can considerably simplify differential analysis of metabolite profiles that are very similar and is very robust to widely varying migration times and irregular peak shape.

CONCLUSIONS
the mathdamp package is capable of highlighting differences between complex metabolite profiles according to various criteria in an automated fashion. since the whole  raw datasets are compared, the possibility of loss of information  is limited. mathdamp differs from most other existing tools by combining very robust migration time normalization with a point-by-point approach to the identification of differences in profiles, facilitates the identification of metabolites, and provides multiple different ways in which data and differences in profiles can be visualized and analyzed. moreover, the open architecture of the mathdamp modules allows user to adjust multiple options to fit particular purposes or type of analytical method and offers extensive customizability for any user willing to manipulate the mathematica code and potentially quickly implement any desirable new features. the current release does not provide quantification of compounds per se, something that is planned for future development. however, it is especially well-suited to highlight subtle differences between complex metabolite profiles.

availability and requirements
• project name: mathdamp

• project home page: 

• operating system: platform independent

• programming language: mathematica

• other requirements: mathematica  <dig>  or higher

• license: free

abbreviations
ce – capillary electrophoresis

dp – dynamic programming

gc – gas chromatography

lc – liquid chromatography

ms – mass spectrometry

tofms – time-of-flight mass spectrometry

authors' contributions
mr conceived the approach of visualizing direct comparisons between raw metabolite profiles to highlight specific differences. rb, hk, ts, tn, mr, and mt suggested desired features and algorithmic approaches. rb carried out the implementation. hk, ns, ms, ts, and mr provided experimental data and supported the evaluation of the package. the online documentation and the manuscript were written by rb and mr with inputs from all co-authors.

