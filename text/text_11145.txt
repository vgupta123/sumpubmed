BACKGROUND
this research focuses on the problem of retrieval from medline for gene queries. the ability to retrieve the correct set of documents about genes is at the foundation of a fast growing variety of text-based solutions in bioinformatics. whether the end goal is to automatically identify gene disease relationships  <cit>  or to extract relevant information about drugs and genes related to a specific disease such as cancer  <cit> , it is important to identify the associated document set accurately. effective retrieval for gene queries is particularly relevant to the expanding body of research on using medline to analyze gene clusters generated by dna microarray and oligonucleotide arrays experiments  <cit> . a single array experiment typically involves thousands of genes, often on a genome-wide scale. this makes the analysis of array expression data quite challenging. several researchers have proposed techniques using medline data for each gene. for example chaussabel and sher  <cit>  complement gene expression cluster analysis by clustering genes according to their literature profiles. kankar et al.  <cit>  statistically evaluate mesh terms from the gene literature to identify a gene cluster's topical characteristics at different levels of importance. wren and garner  <cit>  exploit literature co-occurences to evaluate the cohesiveness of gene clusters. naturally such methods for analyzing several hundred genes at a time crucially depend upon the accuracy of their underlying document retrieval functions.

a significant aspect that makes gene query retrieval challenging, and hence interesting, is the ambiguity associated with gene names  <cit> . there is a sizable and growing body of research on this gene name ambiguity phenomenon  <cit> , with particular emphasis on designing and testing disambiguation strategies. weeber et al.  <cit>  studied the various kinds of ambiguities, such as synonymy and homonymy, in locuslink  gene names. they also use the schwartz and hearst expansion algorithm to automatically create a gene disambiguation test collection. tuason et al.  <cit>  studied ambiguity in gene names for four organisms . they identify ambiguity across all organisms, within each organism and with general english words.

various disambiguation approaches can be found in the literature. liu et al.  <cit>  used a two-phase unsupervised approach to automatically train and build word sense classifiers for ambiguous biomedical terms. podowski et al.  <cit>  used a supervised approach to assign to each gene name in a medline abstract its corresponding locuslink id. they created models for each locuslink id trained using medline citations in locuslink and swissprot records. koike and takagi  <cit>  used heuristically built dictionaries for gene names and for gene family names while seki and mostafa  <cit>  explored probabilistic approaches. most recently schijvenaars et al.  <cit>  used a method involving both a thesaurus and reference descriptions for the different meanings of genes with the latter built from representative documents or from omim. their thesaurus of gene symbols, names etc. was built from five public databases such as omim and locuslink.

as indicated before, our approach is to view the problem from a retrieval perspective. initiatives such as the kdd  <dig> challenge cup  <cit> , biocreative challenge  <cit>  and trec genomics  <cit>  offer related research. however, our research is distinct both in its goals and in the experimental design. in kdd  <dig> although one task was to rank and retrieve papers in order of probability of the need for curation, the experimental conditions are significantly different from ours. for example, the collection had less than  <dig> "cleaned" full text papers from the flybase domain. in sub-task  <dig>  for the biocreative  <dig> workshop, participants were asked to "provide for, ten proteins, the articles which are relevant for annotation," along with information pertaining to go annotation  <cit> . here again the collection was limited to  <dig> full text articles from the journal of biological chemistry. moreover, as stated by the organizers, the results of the sub-task were not evaluated due to reasons such as "the limited number of participants".

in the  <dig> trec genomics track, one task was retrieval from a collection of  <dig>  medline records for  <dig> gene topics  <cit> . the  <dig> trec genomics track also had a retrieval task again with  <dig> queries but this time representing a broader variety of bioinformatics queries  <cit>  as for example queries exploring the relationship between a gene and a disease. our effort is different from these two trec efforts. although we use a dataset of  <dig>  million medline records, built chiefly from the trec  <dig> dataset, we focus on a much larger  and different query set . we use a similar, but not identical strategy, as that in trec  <dig>  to identify gold standard relevant documents. our method identifies more than double the number of relevant documents. in addition to differences in experimental design, our retrieval goal relates more directly to the needs of bioscientists using medline based evidence for the analysis of array based expression data involving thousands of genes.

in contrast to the extensive research on gene string ambiguity recognition and resolution, there are few studies where the central emphasis is on assessing the effectiveness of medline document retrieval with gene queries. disambiguation focuses on individual occurrences of gene strings in specific documents. however, although a disambiguation strategy may correctly decide that a given ambiguous string represents a gene of interest, the document may still be non relevant. this could happen for example if the gene was mentioned only in a peripheral context. retrieval on the other hand is, by definition, concerned with relevance. in the long run it may be beneficial to combine the strengths of both retrieval research and disambiguation research when working with genes. our focus in this paper is on retrieval. for each gene in our sample we begin with the set of documents retrieved via pubmed and aim at improving this set using ranking methods from information retrieval research.

pubmed, the public interface to medline, offers a sophisticated range of search functions designed within the boolean framework. however, the main option for sorting a retrieved set of documents is chronological. in other words, a pubmed query divides the medline collection into  <dig> sets: one that satisfies the query and one that does not. the former is then shown to the user in chronological order. there are no 'shades of grey' in pubmed retrieved sets. ranking documents by their relevance potential can be of significant benefit, especially when large sets of documents are retrieved – the case with many gene queries. thus our objective is to explore strategies for effectively ranking documents retrieved by pubmed. we begin with a baseline ranking strategy that uses only the terms in the original gene query submitted to pubmed. we then explore a variety of other ranking strategies assuming different levels of domain knowledge about the genes. we also study the effect of ambiguity on performance.

in recent research, chen et al.  <cit>  conducted the most extensive study to date, on gene names. exploring  <dig> species, they studied the distribution of different ambiguities including the ones studied in this research. they found, for example, that although only  <dig> % of their gene set consisted of genes with english meanings , these retrieved an additional 233% gene document 'instances' of which the majority were incorrect. we offer logically complementary research albeit one that focuses on the genes of a single genome. we present a systematic study on retrieval effectiveness, for human genes, with all of their inherent nomenclature ambiguities. specifically we present three main experiments altogether involving  <dig>  genes ). each experiment explores the effectiveness of one or more ranking queries applied to document sets retrieved for gene queries from medline. our goal is to rank relevant documents higher than the non relevant ones in the retrieved set.

RESULTS
for each gene we retrieve documents from medline by searching the disjunction of its aliases taken from the official_gene_name, official_symbol and alias_symbol fields of ll. retrieved documents are restricted to a subset of medline  consisting chiefly of the  <dig> trec genomics dataset  <cit> . 44% of the gene queries retrieve  <dig> or more documents while almost 25% retrieve  <dig> or more documents. relevant documents  are extracted from the pmid' and 'grif' fields in each gene's ll record. in trec  <dig>  gold standard documents were identified for the  <dig> gene topics using only the grif field of ll. this pool of relevance information has been noted to be incomplete  <cit> . for our collection of  <dig>  queries, our strategy extracting from both pmid and grif fields identified more than twice the number of gold standard judgments  as compared to using the grif field alone . we observe that 76% of our topics have five or less relevant documents identified through ll. this suggests that ensuring accuracy in retrieval for gene queries is a challenge and users are likely to benefit from retrieved sets ranked by relevance potential. for a given gene we compute a set of term vectors using a basic tf*idf strategy for term weighting. term vectors are computed for each retrieved medline record and for each ranking query. cosine similarity scores in  <cit>  are calculated for each ranking query vector – retrieved document vector pair. given a ranking query retrieved documents are ranked by cosine similarity to the query. the ranked sets are limited to the top ranked  <dig>  documents. we believe it is unlikely that a user would want a larger retrieved set. we measure the quality of ranking using average precision   <cit> . ap is the average of the precision scores calculated at the position of each relevant document in a ranked document list. e.g., given a ranked list where the  <dig> gold standard documents are at rank  <dig>   <dig> and  <dig>  ap is the average of precision scores  which equals  <dig> . since ap is sensitive to the rank of each relevant document we also compute  precision of the top  <dig> ranked documents . top5p is the number of relevant documents in the top  <dig> ranks divided by  <dig>  the normalization factor is included as some queries have less than  <dig> relevant documents. e.g., if a gene has only  <dig> gold standard documents then the max_top5p is  <dig> . if for such a query, all  <dig> relevant documents are within the top  <dig> positions, ntop5p =  <dig> / <dig>  =  <dig>  if instead only  <dig> are in the top  <dig>  then ntop5p =  <dig> / <dig>  =  <dig> . for queries with at least  <dig> relevant documents, ntop5p is the same as top5p.

scores are averaged across topics to yield mean ap  and mean ntop5p. ap is our primary measure. we compare five document ranking strategies. b <dig> and b <dig> are baseline strategies. s, p and sp are built from ll.

 <dig>  baseline  <dig> : this ranking query is the same as the pubmed query  without the disjunction operator.

 <dig>  baseline  <dig> : we add to the b <dig> ranking query the terms 'gene', 'genetics', 'genome' and 'oncogene'. here we hope to steer the ranking in favor of documents in the overall genetics domain. this query is motivated in part by the notion of a "query zone"  <cit> .

 <dig>  summary : we add to b <dig> the summary field of the gene's ll record. this field, when available, describes for example, the gene's function, its structure and associated phenotype information. it is generated using data from various sources  <cit> .

 <dig>  product : we add to the b <dig> query the product, preferred_product, alias_prot fields in ll.

 <dig>  summary+product : both ll summary and product information are added to the b <dig> ranking query.

unfortunately not all  <dig>  genes in our pool have both the summary and product fields in ll. a subset of  <dig>  genes have both summary and product ; a different subset of  <dig>  has no summary , while the full set is used in expt.  <dig> 

ranking results 
we first compare our five ranking strategies using the  <dig>  genes that have both summary and product fields. figure  <dig> shows the map scores for each strategy along with the 95% confidence intervals. we find that the generic query  is not that different from b <dig> in performance. but s and sp give significant gains in the range of 14% compared to b <dig> and 12% compared to b <dig>  additionally, the 95% confidence intervals for s and sp do not overlap with those for b <dig> and b <dig> indicating that the differences are statistically significant at the  <dig>  significance level. p is weak even when compared with b <dig> although it does not hurt performance when added to s . figure  <dig> shows the corresponding mean ntop5p scores for each strategy. again we see that s and sp are significantly different from b <dig> and b <dig> at the  <dig>  significance level. improvements are around  <dig> % and 8% compared to b <dig> and b <dig> respectively.

for more detailed analysis, figure  <dig> displays difference graphs for ap scores where differences are calculated against b <dig>  the genes are distributed into  <dig> bins defined by b <dig> ap score. we see that as b <dig> performance drops approximately below  <dig> , the other ranking strategies generally become increasingly beneficial. in fact the best strategy, sp yields increases in ap from  <dig>  to  <dig>  from the 4th bin onwards to the right. assessed against the baseline averages, this bin range showing significant improvements, spans  <dig> / <dig>   of the genes. again we see that p is not effective.

in general, our best strategies, sp and s, do significantly better than b <dig>  for sp, the percentage improvements start at  <dig> % for ap  and  <dig> % for ntop5p . thus our gene specific strategies perform better than the generic ranking strategy. not surprisingly, we observe that it is difficult to make improvements when b <dig> performance is already quite reasonable. the question we now face is, given a gene query, can we predict whether its b <dig> performance is going to be sufficient? in other words, can we identify genes for which our sp ranking will generate improvements? we return to this question later in the paper.

results for ambiguous genes
a significant emphasis in recent research is on exploring and understanding the extent and variety of ambiguity in gene terms. thus we examine the merits of our ranking strategies within particular genes that are referenced by ambiguous terms. we explore three varieties of ambiguity. these are not mutually exclusive, since a given gene search term may be ambiguous in more than one way. we remind the reader of the distinction between a gene and its component gene terms . ambiguities are determined at the search term level. a gene is considered ambiguous if at least one of its search terms is ambiguous.

different genes – same gene terms
gene terms sometimes refer to more than one gene. for example, the gene term frapl refers to both a mouse gene and a rat gene. another example is apah <dig>  which is a search term for a human gene but also is an alias for the mouse gene nudt <dig> .this type of ambiguity has been studied by several researches  <cit> . for each term in our  <dig>  gene searches, we count the number of ll records in which it occurs. . a gene term occurring in more than  <dig> ll record is considered ambiguous. a gene with such a search term is considered ambiguous. using this criteria,  <dig>  of the  <dig>  genes  are tagged as ambiguous. results for these  <dig>  genes are presented in figures  <dig> & <dig> under 'duplicate genes'. we see that sp and s, still the best, improve map by  <dig> %  &  <dig> %  and mean ntop5p by  <dig> %  &  <dig> %  compared with b <dig> . since the 95% confidence intervals do not overlap, the improvements offered by both strategies are statistically significant at the  <dig>  significance level.

gene terms with english language meanings
the second variety of ambiguity is one where the gene term also has a general english language meaning. we identify such terms by a simple lookup of wordnet  <cit> . we eliminate instances where the meanings contain words such as gene, genome, enzyme, amino acid, which point back to a genetics related meaning.  <dig> of the  <dig>   genes in our pool have at least one gene term with a general english meaning. the results for this subset are shown in figures  <dig> & <dig> under 'english genes'. here the s strategy takes the lead, especially in ntop5p. it gives  <dig> %  improvement in map and  <dig> %  improvement in ntop5p over b <dig> . except for map w.r.t. b <dig>  all improvements are statistically significant at  <dig> . sp also performs very well. however, the differences in map and mean ntop5p are in general not statistically significant at the  <dig>  level.

gene terms with other meanings in medline
there are also gene terms with other biological meanings  <cit> . for example, the gene term acr has many different biomedical meanings including albumin/creatinine ratios, acquired cellular resistance and acute to chronic ratio .meanings such as anomalous cosmic rays also appear in medline. the correct gene meaning we seek is acrosin .other researchers have explored this aspect, especially in the context of expanding abbreviations  <cit> . in particular schwartz and hearst  <cit>  published an algorithm that allows one to recognize short form-long form pairs appearing as a  in text where a is a short form and b is its corresponding long form. we choose this algorithm over the others  <cit>  because of its simplicity and speed. it is also equivalent in effectiveness to most of the other approaches  <cit> .

we process the retrieved documents for each gene through the schwartz and hearst algorithm looking for possible expansions for each term in that gene's search.  <dig> / <dig>  genes  have at least  <dig> component gene term with more than  <dig> long form identified. these are considered ambiguous. this approach is not without limitations, since the algorithm relies on the presence of a  structures in the texts with a representing the gene term and b recognized correctly as a possible expansion. results for this subset of  <dig>  genes are shown under 'bio genes' in figures  <dig> & <dig>  the sp strategy,  gives a  <dig> %  improvement in map and  <dig> %  improvement in mean ntop5p over b <dig> . the figures also indicate that the improvements are significant at the  <dig>  significance level. we also estimate the extent of ambiguity at the gene level, which we call ambiguitybio. for a gene g it is defined as follows:

ambiguitybio =  <dig>  if |expansions| =  <dig> ∀i ∈ n

ambiguitybio = ∑i∈n|expansions| otherwise

where |expansion| is the number of long forms for gene term gi found by the algorithm and gi,i n are the search terms in the pubmed query for gene g.

summary of ambiguity analysis
with two of the three varieties of ambiguity, sp is significantly better than b <dig> and b <dig> in map and ntop5p. the scores for eng seem to lag behind both in map and ntop5p. when we consider map, dg seems easier to accommodate. we note that the gene sets overlap across these ambiguities. there are  <dig> genes that are in eng and bio,  <dig> in eng and dg,  <dig>  in dg and bio. thus for example,  <dig> % and  <dig> % of the eng genes also fall into the bio and dg categories respectively;  <dig> % and  <dig> % of the bio genes are also in eng and dg respectively.

performance versus retrieval set size
ranking results without ll summaries 
we now focus on the  <dig>  genes  which do not have a summary field in locuslink. can we use some other strategy to rank documents for these genes? we do have the b <dig> ranking query . but, is there a more effective generic query, perhaps one that better represents the kinds of summary statements made about genes? to explore this we take the m most frequent words  from the summary fields available for the  <dig>  genes  and form a generic query. as with b <dig>  the gene names are added which tailors the ranking query to each gene. since m is a parameter that needs to be set, we divide our dataset of  <dig>  genes randomly into a training set of  <dig>  genes for training and  <dig>  for testing. the training set was used to find the optimal value of m which was varied from  <dig> to  <dig> in steps of  <dig> and from  <dig> to  <dig> in steps of  <dig>  unfortunately none of our automatic generic strategies improve performance beyond the b <dig> strategy. . hence we only try b <dig> and b <dig> strategies on the test set of  <dig>  genes. note that pubmed only ranks chronologically and hence comparatively our b <dig> and b <dig> performances, where ranking is by relevance potential, are themselves of value.

predicting b <dig> performance
we now return to the question left unanswered when discussing the results of experiment  <dig>  for a given gene can we predict its b <dig> performance? observe in figure  <dig> that as b <dig> performance becomes higher than approximately  <dig> , our s and sp ranking strategies degrade performance. if we can identify such cases up front with reasonable accuracy, then we may avoid using the sp or s ranking strategies inappropriately. we examine four characteristics of our gene topics  to see if they can be used to predict b <dig> performance. we begin by looking at correlations  for the set of  <dig>  genes . prior to calculating these, since the values for ambiguitybio and n are skewed, we apply a log transformation ) on these values. the transformed values are referred to as n' and bio'. note that both eng and dg are binary values. if the gene has at least one search term with an english meaning it gets a  <dig> for eng, otherwise a  <dig>  likewise, a gene with at least one term shared with another gene gets a  <dig> for dg, otherwise a  <dig>  n' has the strongest correlation with b <dig> score, followed by bio'. thus n' has the most potential for predicting score. having selected n', bio' is redundant as a feature given its strong correlation with n'. similarly given the observed dependencies between n' on the one hand and eng or dg on the other, we do not consider these two ambiguity properties either for prediction purposes. as an aside, one advantage with using only n' is that it is readily understood and measured . thus we run a simple least square regression model with one independent variable  using the equation:

score = β <dig> + β <dig>  n'+ ∈

where β <dig> is a coefficient, βois a constant and ∈ the error term. table  <dig> details the regression results. the coefficients are significant at extremely small p .also the model is powerful with an adjusted r-square of  <dig> . thus we may be able to effectively predict the b <dig> ap score.

to test this calibrated model we exploit the natural split in our collection of genes. the regression model was developed on the set of  <dig>  genes of experiment  <dig>  we use the non-overlapping, naturally held out set of  <dig>  genes  as our test set. we are specifically interested in predicting if the b <dig> score for each test gene is likely to be higher than  <dig>  or not. from figure  <dig> observe that if b <dig> ap score is approximately  <dig>  or higher, it is best not to do any other kind of ranking. in the test set there are  <dig> / <dig>   genes with b <dig> score >  <dig> . the default  decision that all genes will have scores ≤  <dig> , gives an accuracy of  <dig> . in contrast the regression results applied to the test data gives an accuracy of  <dig> , an improvement of  <dig> %. these encouraging results indicate that it may be possible to predict the level of b <dig> performance given just the size of the retrieved set. these conclusions will be tested further in future research.

results with an overall strategy 
combining the results obtained thus far, the overall strategy we propose for an arbitrary gene is to use sp to rank its retrieved set. ranking by the s strategy is the next option. if summary is not available then we rank using the b <dig> strategy. in figures  <dig> and  <dig>  'b2+sp+s' shows map and ntop5p scores of this combined strategy on our full set of  <dig>  genes . compared to our two baseline strategies, we see statistically significant improvements  in both performance measures. observe that as pubmed only ranks chronologically our b <dig> result is itself a contribution. the ranking goal is a challenging one given that in our dataset less than 7% of the retrieved documents are known to be relevant. additionally, we are able to improve ranking by  <dig> % to  <dig> % using our combined strategy even though about half of the genes in our collection do not  have summary information in ll. as this information accumulates in ll/entrez gene, we expect our overall performance to improve. as a refinement to our overall strategy, we may use the results from our regression model to identify genes for which ranking by b <dig> is preferred. this refinement will be tested in future research.

CONCLUSIONS
we explored the relative effectiveness of five different post pubmed retrieval ranking strategies for human gene queries. we conclude that the combination of locuslink summary and product information  along with the gene name and aliases may be used to effectively rank retrieved documents. this conclusion is consistent with other research where some form of curated knowledge has been used to improve performance as for example the work of koike and takagi  <cit> . a ranked list of documents for each gene is provided on our web site  <cit> .

interestingly, using product names without summary is ineffective. this could be because the product names are more prone to being ambiguous. we find that in the absence of summary information, our manually designed generic query targeting the genetics domain combined with the gene names is the best. we were not able to automatically build a more effective 'generic' query.

our locuslink strategies are significantly more effective than baselines even when faced with ambiguity. the english ambiguity problem is the most challenging and is also fortunately the least prevalent. finally, retrieved set size may give us a way to predict which genes are best handled by the b <dig> strategy. this could also be the basis of gene query clarity scores akin to research in  <cit> . we observe the presence of genes with very low b <dig> ap scores  that are not identified as having any ambiguity using our methods. either our ambiguity detection methods are inadequate or there are other facets impeding retrieval. we plan to explore other detection approaches as seen for example in  <cit> .

for any approach to be successful it is important for it to be robust. one criteria for robustness in our context is that s and sp continue to be relatively the best strategies even as the number of gold standard documents changes. to test this aspect we repeated our tests of the five ranking strategies using the relevance judgments from the latest locuslink file . we did this with the  <dig> human genes that were common to the locuslink files from  <dig>  and  <dig> and that had both summary and product information available. the  <dig> locuslink file provides us with  <dig>  relevance judgments as opposed to  <dig>  in the  <dig> version. thus, we now have more than one-and-a-half times the number of relevance judgments. it is important to state that the retrieved sets for each gene were kept the same as before. that is the only difference between the two sets of experiments is that we now have one-and-a-half-times the number of relevance judgments. figures  <dig> and  <dig> show the performances of our  <dig> strategies on the  <dig> genes using both relevance judgment sets. we see that the relative ordering of our strategies still holds in terms of both map and mean ntop5p score with s and sp performing the best. as before, the improvements offered by s and sp over the baseline strategies are statistically significant at the  <dig>  level. we also conducted a small expert user evaluation study. we randomly selected  <dig> gene topics and pooled together the top  <dig> ranked documents retrieved by the b <dig> and sp strategies for each topic. we then randomly assigned different topics to each of our  <dig> experts and had them judge documents for relevance. we found that the difference between sp and b <dig> in terms of ntop5p is 10%. this is similar to the results from other experiments.

an analysis of the probable causes of error raises some interesting observations. we observe three probable causes of failure with our sp strategy. firstly, there are relevant documents without abstracts. sp favors documents with abstracts . e.g., the gene a2m  has a gold standard document  which has no abstract. this is ranked at position  <dig> by b <dig> and  <dig> by sp. in our dataset 25% of the gold standard instances that have abstracts are in the top  <dig> ranked documents  while the corresponding percentage for gold standard instances without abstracts is only 15% . another probable cause of error is the varying themes in the documents. since the sp strategy is dominated by the locuslink summary, this strategy favors documents that reflect a similar theme. for an example of an error where themes do not match, the gold standard document with pmid  <dig> for the gene cenpb  talks about isolating a novel human homolog to the gene whereas the ll summary is primarily a description of the gene's function. this document is ranked 17th by sp and 2nd by b <dig>  a third probable cause of error is the high rank given to some documents that mention the correct gene but in the context of another organism. e.g., for the gastrin gene ,  <dig> of the top  <dig> ranked documents  are not about humans. these are not in the gold standard set for the gene. one way of dealing with this problem may be to consider only those documents that have the mesh term 'human' , assigned to them. although far from conclusive, these observations give us directions for more rigorous error analysis in the future.

we deliberately kept the ranking model simple using only traditional tf*idf vectors and cosine similarity. this allowed us to focus on other dimensions in this research. clearly retrieval models such as language models with or without feedback may be tried. having obtained encouraging results with the trec dataset, we will now consider the full medline database. we also plan to work with genes from other genomes. we will also explore other sources for gene descriptions such as omim. these may offer interesting avenues for genes without ll/entrez gene summaries.

