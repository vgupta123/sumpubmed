BACKGROUND
this work investigates a large number of different methods for producing an automatic classification of structural domains of proteins based on all-against-all pairwise structural similarity scores. we produce candidate classifications and compare them to the human expert-curated classification scop  <cit> . perhaps the earliest attempt at automatic classification of protein structures was by holm and sander  <cit> , who produced the fssp database, consisting primarily of a tree obtained by applying hierarchical clustering using the pairwise structural similarity scores among a sequence representative set  <cit> . later, dietmann et al  <cit>  refined fssp by introducing the notion of domain  <cit> . more recent work by gewehr et al.  <cit>  and others  <cit> , focused on the problem of assigning new, unclassified domains into their correct pre-established fold classes. other authors  <cit>  compared a set of pairwise similarity measures computed by various structure comparison methods to the scop  pre-existing classification, to investigate the causes of divergence between automatically determined pairwise structural similarity and expert-curated classification. in particular, the comparison between fssp, scop and cath, by hadley and jones  <cit> , makes use of fssp pairwise scores between protein chains which are present in all three databases, as fssp does not use domain as the classification unit. although these studies advanced the understanding of divergence between automatic similarity and expert-curated classification, improvement of automatic classification procedures was not their primary objective.

our earlier work  <cit>  pointed to structural variations within scop folds as a main cause of divergence between automatic and expert-curated classifications. intra-fold structural variation affects the measured structural similarity both within and between folds. the measured similarities are often not uniform among domains within a fold and the average similarity among domains within one fold can be different from that within another fold. we investigate different partitioning strategies in an attempt to accommodate such uneven similarity distributions. in particular, we investigate dendrogram cutting strategies as a potential means of isolating both tightly clustered, homogeneous folds and more heterogeneous ones, using a single procedure.

one source of potential confusion in the literature is the failure to explicitly consider the fundamental difference between mathematical properties of a similarity score matrix compared to a classification or partition. mathematically, each can be represented as an m by m matrix where m is the number of protein domains. unlike a pairwise similarity score matrix which can be any square matrix, a "partition matrix" is made of  <dig> or  <dig> elements indicating when two domains are in the same  or different  clusters of the partition. the partition matrix can always be transformed into a block-diagonal form by sorting the rows and columns appropriately, reflecting a property related to the definition of a partition itself. a partition of a set of domains is comprised of non-overlapping clusters, meaning that if a and b are in the same cluster, while b and c are also in the same cluster, then a and c are necessarily in that same cluster, a type of transitivity here called the "partition constraint". this property may be absent in a pairwise similarity matrix.

building a classification by clustering based on pairwise similarity scores is essentially the same thing as transforming the pairwise similarity matrix into one which satisfies the partition constraint. clearly, this process may force some domain pairs originally considered as dissimilar into the same cluster while other, similar pairs would be forced into different clusters. in many studies comparing the automatically determined pairwise similarities and a structural classification database  <cit> , the effect of the presence of the partition constraint was not explicitly considered. some of the reported discrepancy between similarity scores and classifications may potentially result from the failure of the similarity scores to satisfy this constraint. in the present study, we eliminate this factor by first converting the pairwise similarity dataset into a partition  and then comparing the two partitions.

the derivation of a partition from a set of pairwise similarities is not a trivial process, but involves several distinct steps of computations, requiring careful analysis. here, particular attention will be given to hierarchical clustering methods and dendrogram cutting strategies. we obtain a partition from pair-wise similarity scores by first transforming the similarity measure into a distance measure, applying various standard hierarchical clustering methods, obtaining a dendrogram, or binary cluster joining tree, and in the final step, applying a strategy which removes the root node and successively lower level nodes leaving behind a set of trees corresponding to the clusters in the partition. the pairwise similarity scores are provided by vast  <cit> , sheba  <cit>  and dali  <cit> , three distinctive and efficient approaches for measuring structural similarity.

RESULTS
performance of hierarchical clustering as tree building methods
we generated pairwise similarity scores between all pairs of domains in the scop c class using three different structure alignment methods, vast, sheba and dali, and using two different similarity metrics for each method, altogether yielding  <dig> similarity matrices. we used four different hierarchical clustering methods  to build dendrograms. the dendrograms were cut using seven scop-independent strategies and three scop-dependent strategies. finally, two different criteria for terminating the tree cutting process were investigated. we stopped the cutting either when a 1% false positive rate  was reached or when the number of clusters matched the number of folds in the scop c class, which is  <dig> for the current dataset. the true positive rate at 1% false positive rate  and the number of clusters in each partition, resulting from these various partitioning approaches, using the 1% fpr termination criterion, are reported in tables  <dig> and  <dig> 

Â§direct pw is the direct pairwise comparison between pairwise similarity scores and scop folds in the c class, and does not involve clustering.

# the group to which the strategy belongs.

trees generated by ward's method result in better performance. the tpr <dig> values obtained for ward's clustering method are, with one exception, always higher than for the average, complete or single linkage method. the simplest, level cut strategy with ward's method achieves an average tpr <dig> of 50% across all six structure comparison scores. complete or average linkage clustering constitute the next best alternatives to ward's method, with average tpr <dig> across all similarity scores and structure comparison methods, of 32% and 29% respectively. single linkage clustering shows uniformly the most divergence from scop. not only does ward's method achieve the highest average tpr <dig> value, but the values vary less across different similarity scores and structure comparison methods, than do those for complete, average and single linkage, suggesting that ward's is more satisfactory for this application.

with other tree cutting strategies the trend among various clustering methods is the same. for the largest size cut strategy, ward's method gives an average tpr <dig> value of 61%, at least 10% better than for the three other clustering methods. again, complete and average linkage give similar average tpr <dig> values, while single linkage is very low in comparison. in view of the clearly superior results with ward's method, we investigate tree cutting strategies using that method alone.

performance of tree cutting strategies
in the following, the performance of tree-cutting strategies is analyzed. the  <dig> tested tree-cutting strategies fall into four groups according to their tpr <dig> values , and are represented by the longest branch cut , level cut , largest size cut  and mutual information cut  strategies. figure  <dig> illustrates the comparative performance among these representative tree cutting strategies, for the vast number of matched residues similarity score.

among the four scop-independent tree cutting strategies shown, "largest size cut" achieves the best performance with its roc curve dominating all other scop-independent roc curves. moreover, "largest size cut" roc curve is the closest to that for mutual information cut, a strategy which attempts to maximize the agreement of the partition with scop at each step. similar results  were seen for sheba and dali similarity scores.

the longest branch cut group  contains the strategies of lowest performance, e.g. tree skewness strategy, as indicated by their respective mean tpr <dig> values. longest branch cut strategy results in one of the lowest agreements with scop, in particular for fpr values below 30% . above this fpr level, its performance becomes more acceptable relatively to the upper bound given by the mutual information cut. this strategy seems to make more sense when inter-cluster distance is high, i.e. for highest nodes of the tree. but it behaves much worse than others when the inter-cluster distance is reduced, as its roc curve is closer to the main diagonal than the roc for other strategies. in the lowest part of the tree, inter-cluster distances vary only slightly so that the longest branch criterion for choosing among the many possibilities, the next sub-tree to be cut might not be discriminative enough.

level cut and maximum entropy cut strategies form another group  characterized by middling performance. their grouping is explained by the fact that these strategies perform comparably at low fpr values and their average tpr <dig> values are comparable. higher variability among the tpr values for maximum entropy cut strategy is noted, however. indeed, for vast and sheba, level cut strategy is better than maximum entropy cut, as a rule, with dali number of matched residues  score the only exception. the highest tpr <dig> for the maximum entropy cut strategy  is obtained with the nres metric, while the lowest value  is obtained by vast pcli.

the third, largest size cut strategy group  also includes the tree completeness cut, and highest tree cut strategies and corresponds to scop-independent strategies of highest performance, with average tpr <dig> values ranging from  <dig> to 61%. the tree height and tree completeness are closely related to the number of leaves, i.e. the size of the tree. these results indicate that of these three topological properties, the size is a better measure, for the purpose of creating partitions that agree with scop. this is true for partitions of small size , but also when the number of clusters is large .

the fourth group  is made up of mutual information cut and best tpr/fpr ratio cut strategies, all of which make direct use of the scop fold partition and thus are not useful for an independent classification. the poor performance of the best tpr cut strategy  indicates that strategies which ignore the false positives will not generate scop-like partitions.

the size of each partition is reported in table  <dig>  and shows a large variation in the number of clusters depending on the hierarchical clustering method. single linkage always leads to partitions with a high number of clusters, in fact close to the total number of domains m, when fpr is kept low at 1%.

comparison of partitions
the relative organization of automatically generated partitions can be understood by first finding a distance measure between two partitions and then displaying the partitions in a distance preserving graph. the distance between partitions , computed as the total number of disagreements about whether or not a pair of domains is in the same cluster, is reported in the table  <dig>  in this exercise, partitions with exactly  <dig> clusters were compared, including the scop fold partition.

*partitions obtained from automatic methods, are identified by three letter code. the first letter in the name of each automatic partitions indicates the structures comparison method , the second letter, the score , and the third letter indicates the level cut  or largest size cut  strategies. scop corresponds to the c class fold partition of the manual classification scop.

average distances  among partitions within a given comparison method , are uniformly lower than distances between these latter and scop, by almost a factor two. partitions from vast tend to be slightly more heterogeneous than those from dali or sheba. on average, automatic partitions from the three comparison methods are similarly distant from scop. similarly, for a given cut strategy, the average distance among its partitions is consistently smaller than the distances from those automated partitions to scop . further, largest size cut partitions are half as distant among themselves as are those of level cut strategy. the pattern of distances confirm that the largest size cut partitions are much closer to the scop fold partition than level cut partitions, as also seen using the roc curves.

*Î-distance as defined in method, eq.  <dig> 

â average or maximum distance among partitions of a particular structural comparison program, or of a tree-cutting strategy. average distance among sheba partitions for example, is obtained by averaging across all sheba similarity scores and tree cutting strategies. average distance among largest size cut partitions for example, is obtained by averaging across all similarity scores of structure comparison programs vast, sheba and dali.

automatic partitions are identified by three letter code used in table  <dig> 

"others" refers to other automatic partitions.

*Î-distance, as defined in methods, in 1000s.

fpr  â false positive rate 

tpr  â true positive rate 

a convenient, intuitive representation of the organization of these partitions is obtained using multi-dimensional scaling, a technique which embeds the  <dig> partitions into a low-dimension euclidean space so that the pairwise distances are approximately preserved. figure  <dig> represents the automatic and scop fold partitions in a 2-dimensional space. automatic partitions are well-separated from the scop fold partition, which appears isolated. largest size-cut partitions are generally closer to scop than are level-cut partitions, and are also less spread.

comparison of cluster size distributions
in addition to the number of clusters in a partition, the distribution of cluster sizes may be of interest in selecting an appropriate classification. figure  <dig> shows the cluster size distribution for six automatically generated partitions and for scop. for comparison, a partition of the same number of domains randomly assigned to  <dig> clusters with equal probability is shown. this distribution was approximated by a poisson distribution with a mean value of 1330/ <dig> â  <dig> .

we observe first that all partitions, including scop, have lower median cluster size and greater spread of size than for random. there is evidently sufficient signal strength within the similarity score matrix to influence the size distribution. second, the 75th percentiles for automated methods tend to be larger than for scop, while the scop distribution shows larger positive skewness, with a greater number of unusually large clusters. third, there is some uniformity in the size distribution within tree cutting strategies, with largest size cut showing somewhat higher 75th percentiles and less skewness than do the level cut distributions. level cut distributions are closer the scop distribution in terms of median, 75th percentile size and the larger number of outliers, than the largest size cut distributions.

the largest scop fold , is in fact, split by all strategies and methods as none include a cluster with  <dig> domains. largest size cut strategy intentionally eliminates outliers of large size, thereby creating more clusters of intermediate sizes, with greater spread  than for level cut. the level cut generates a few large size outliers but the clusters are smaller, typically. this is consistent with the observation made earlier that the level cut behaves like the maximum entropy cut at small fpr ranges. using partitions of  <dig> clusters, we find fpr values higher than 1% for level cut strategy but lower than 1% for largest size cut strategy , indicating that a trade-off must be made in matching the size distribution as well as maximizing the tpr in relationship to the scop partition.

identification of dispersed folds
the spanning cluster of a scop fold is the smallest cluster in the dendrogram which spans or includes all domains in that fold. the excess span of that fold  are the domains from other folds that are included in its spanning cluster. a homogeneous cluster is a cluster which includes only domains from a single scop fold. the size of the excess span and the size of the largest homogeneous cluster are given in table  <dig> for each fold in scop c class for three different dendrograms. these two measures allow comparison of each dendrogram to scop on a fold by fold basis, and can highlight regions of agreement or disagreement between the two systems. when the excess span is zero and the largest homogenous cluster is 100% of the fold size, the dendrogram and scop are in perfect agreement for that fold. a hypothetical tree-cutting strategy could potentially isolate this particular sub-tree to form a cluster exactly matching that fold.

ward hierarchical cluster tree generated using nres metric for vast, sheba and dali.

*ndom, the number of domains in the fold.

#nfam, the number of families in the fold.

Â§excess span size is span less ndom; span is the number of domains contained in the smallest cluster containing all domains of the fold.

â int is the size of the intersection of the excess spans for vast, sheba and dali.

+largest homog. cluster is the ratio of the size of the largest homogeneous cluster of the fold to the size of the fold itself, expressed as percent.

$nc is the minimum number of homogeneous clusters in the fold, across vast, sheba and dali.

table is sorted in ascending order of minimum excess span size, then in the ascending order of int, and then by the average largest homog. cluster size value for the three methods in the descending order.

the first  <dig> folds reported in table  <dig> are in perfect agreement with dendrograms of all three structure comparison methods vast, sheba and dali. together they comprise  <dig> of  <dig> domains in the c-class. the next  <dig> folds  agree perfectly with the dendrogram of at least one structure comparison method. thus  <dig> out of  <dig> scop folds in the c class are consistent with the dendrogram built from at least one pairwise structural similarity measure.

structure comparison methods differ in the consistency of their associated dendrogram with the scop folds. dendrogram derived from each similarity score method disagree with scop for various folds. forty-eight folds  disagree for the vast tree,  <dig> for the sheba tree, and  <dig>  for the dali tree, according to this criterion.

we consider a fold to be highly dispersed if it disagreed with trees of all three structure comparison methods. there are  <dig> such folds  and they are reported in table  <dig>  row 62â <dig>  none of these  <dig> folds could be obtained as a homogeneous cluster, thus each contributes to the loss of agreement between any automatic partition and the scop fold partition. for these  <dig> folds, the intersection of their excess span was computed, and reported in table  <dig>  column labelled int. int is a measure of the disagreement with scop that remains even if all three dendrograms were combined. thirty-one out of  <dig> folds give rise to a positive int, meaning that same domains contributed to their dispersion within trees. these  <dig> folds therefore contribute to the remaining distance between the automatic and expert-curated partitions, regardless of tree cutting strategy or structure comparison method used.

dispersion caused by low structural similarity within folds
to examine such dispersed folds in detail, we select two examples. figure  <dig> schematically represents the situation of fold c. <dig> within each dendrogram. instead of forming one homogeneous cluster including all domains of the fold, c. <dig> consists of mainly two homogeneous clusters set far apart in the tree. between these two homogeneous clusters, domains from other c class folds intervene, in particular from c. <dig>  thus, one homogeneous cluster of fold c. <dig> is considered more similar to domains from fold c. <dig> than to other domains from fold c. <dig>  and this situation pertains to all three structure comparison methods.

this pattern of structural similarity measures is further analyzed based on structural superposition of domains. figure  <dig>  and  <dig>  superpose domain pairs from the same homogeneous cluster, and show the degree of structural similarity typical within cluster. the structural superposition of the domains from different homogeneous clusters of c. <dig> is shown in figure  <dig> . the low similarity observed here is mainly due to the difference of the n terminal features, with the  <dig> layer a/b/a feature typical of this fold present in both domains. figure  <dig>  is the structural superposition of a domain from c. <dig> with one from c. <dig>  again, the strands and helices making the  <dig> layer a/b/a feature are well aligned.

in figure  <dig>  the structural superposition  of domains from different folds produces even a better alignment than the superposition  of domains from two different clusters within the same c. <dig> fold. the disagreement between automatic and expert-curated classification, arises directly from the low similarity within fold c. <dig>  and the substantial similarity to domains of another fold. it becomes impossible to merge the two distinct homogeneous clusters of fold c. <dig> without including domains from c. <dig> as well.

as another example, we select fold c. <dig>  one of the largest in the dataset, and a highly dispersed fold. the intersection of spanning clusters for this fold includes three domains from the single fold c. <dig>  cellulases, which are partial barrels. fold c. <dig> is found to be easily identifiable by all three similarity methods . figure  <dig> shows two tim barrel fold structures and one cellulases structure. tim barrel structures are easily recognizable and are not likely to be confounded with any other folds by the human expert. the typical tim barrel structure d1clxa_  appears to be more similar to the cellulases structure d1dysa_ , than to another tim barrel, d1a4ma_ , by all three structure comparison methods. tim barrel structure  has  <dig> strands although two of them are much longer and two are much shorter than the rest making the barrel somewhat distorted, compared to the typical tim barrel structure . the lower similarity between a typical tim barrel domain and another member of that fold, compared to the similarity of a c. <dig> domain to the typical tim barrel, means that automated clustering methods cannot separate these two folds perfectly. the structural distinctions between the two folds are evidently too subtle to be detected by these structure comparison methods.

discussion
there are two approaches for comparing results from automatic structure comparison methods to an expert-curated reference classification such as scop. one can either directly compare the pairwise structural similarity measures to a similar measure derived from the reference partition, or produce a partition from the pairwise structural similarity score and compare it to the reference partition. we adopted the latter approach in this study, as we expected that enforcing partitioning constraints would introduce a new element that is not present in the pairwise similarity measures alone.

we explored a variety of methods for obtaining automatic partitions from pairwise structural similarity measures computed by vast, sheba and dali. specifically, four different hierarchical clustering methods were used to construct dendrograms or binary trees, which were then cut into sub-trees by ten different tree-cutting strategies, to produce partitions. the results show that the combination of ward's method with the largest size cut strategy has best agreement with scop among all combinations of clustering methods and tree-cutting strategies explored so far.

trees generated by ward's method result in partitions agreeing better with scop folds, than those generated by single, complete or average linkage, regardless of the tree cutting strategy applied. clusters formed by ward's method tend to be highly concentrated around a mean, as they are formed so that the variance within the cluster is minimized. this suggests that scop folds are constructed based on the cohesiveness of the group as a whole rather than on similarity of individual pairs. this may be a more appropriate view of folds than as complete sub-graphs where every structure is related to every other structure as suggested by complete linkage clustering. although average linkage produces clusters which are organized around a constructed mean, it does not minimize the variance around this mean, in contrast to ward's method. its lower performance relative to ward's method strengthens the view of folds as structurally cohesive groups of domains. the mediocre results obtained by single linkage emphasize even more the suitability of the notion of structural cohesiveness in modelling folds. indeed single linkage folds can be seen as minimum spanning trees, which do not necessarily require structural cohesiveness.

largest size tree cutting strategy and those associated with it, such as highest tree cut and tree completeness cut, achieve much better agreement with scop, than other scop independent strategies. in particular they out-perform the "standard" level cut strategy. this is an unexpected result and suggests that the fold size was perhaps an implicit criterion, among others, in the formation of scop folds and that large groups of protein structures were split even when their internal similarity was higher than the internal similarity of smaller sized group of proteins. the small spread of the sizes of scop folds shown in figure  <dig> supports this notion. on the other hand, a highly structurally distinctive fold such as tim barrel  which is highly populated relative to the majority of folds and easily, visually recognizable, form an exceptionally large cluster.

the best combination of hierarchical clustering and scop independent tree cutting strategy e.g. ward's method with either largest size, tree completeness or highest tree cut, resulted in an average tpr <dig> values  that are only slightly above the average agreement of 57% achieved by comparing pairwise similarities directly, without clustering, to scop folds partition, using the same set of scop c class domains. this suggests the idea that the persistent discrepancy between automatically determined similarity and scop is most likely not due to the partitioning constraint, even though all possible partitioning strategies, such as most recently developed clustering techniques in  <cit>  for example, have not been examined. figure  <dig> provides additional evidence supporting this view. it shows that automatic partitions produced by introducing partitioning constraints into pairwise structural similarity measures, cluster together in the space of partitions, far away from the expert-curated classification scop implying that automatic structure comparison methods agree well with each other, and that there might be irreducible differences between them and scop.

automatic methods vast, sheba and dali obtained 71%â76% tpr <dig> using the combination of ward's method and the mi cut strategy which maximizes the agreement with scop. this is higher than the maximum 65% and 67% obtained by the largest size cut and the direct pairwise comparison scheme, respectively, on the same set of the scop c class protein domains. as the mi cut strategy proceeds with prior knowledge of scop folds information, this range of agreement is close to the maximum obtainable between automatic classification and manually curated scop dataset, regardless of the partitioning procedure. the inherent level of disagreement can be seen from the number of scop folds for which the spanning cluster exceeds the size of the fold, in table  <dig> 

examination of two such folds corroborates the findings of our previous paper  <cit>  that some scop folds includes structural variation causing measured similarity between members of the same fold to fall below that between members of related, but different folds. indeed, the distance matrix in figure  <dig> shows that fold c. <dig> displays this pattern, due to low similarity among domains from its distinct homogeneous clusters, and a high similarity with domains from a different fold c. <dig>  the superpositions in figure  <dig> ,  and  <dig> , indicate that in all cases, be it intra or inter-cluster, all three structure comparison methods aligned the structural feature defining the fold, and yet intra-cluster structural similarity is higher than inter-cluster structural similarity. regarding the tim barrel fold, a detailed study by nagano et al.  <cit>  also characterized the fold as highly diverse, although using the cath  <cit>  database. thus, structural variation within folds, shown in  <cit>  as the main cause of divergence between automatic and expert-curated classifications, does not disappear even after satisfying the partitioning constraint. this strengthens our previous findings and emphasizes the importance of properly handling the structural variation in order to reduce the gap between automatic and expert-curated partitions. we also have underlined some relationships between distinct folds. the domains which correspond to the excess span of a dispersed fold could be seen as evidence suggestive of a evolutionary relationship among folds, as discussed by lupas et al  <cit> . domains from fold c. <dig>  which are excess span of tim barrel fold, are actually variants of tim barrels.

finally, in the light of this analysis, we think that future improvements to automatic protein structures classification would likely come by explicitly identifying common structural cores. pairwise similarity scores alone appear to be limited in that regard, so techniques involving multiple structural alignment will likely be needed.

CONCLUSIONS
the level of agreement between manual and automatic classifications varies with clustering methods and tree partitioning strategies. however, the best agreement reaches similar upper bound than when structural pairwise similarity is compared directly to the manual classification. therefore divergence between automatic and manual classifications is not eliminated by the introduction of partitioning constraints.

our observations are based on scop c class, but are likely valid for other classes as well, as c class domains contain both types of secondary structure elements, alpha helix and beta strand, and are the most difficult to classify due to higher confusion among them compared to the all alpha or all beta classes  <cit> . our exploration of potential classification procedures of proteins based on structural similarity is complementary to the analysis done in our previous paper  <cit> . the modular structure of the proteins has been accounted for by using a database of structural domains defined in scop although this domain parsing may be at variance with other domain parsing such as that in cath  <cit> , or those based on amino acid sequences in cdd <cit> , prodom  <cit>  or pfam  <cit> . we did not address this issue here. notwithstanding efforts made in this present work, there is still a discrepancy between the results of the automatic structure comparison methods and the scop classification. based on the maximum attainable tpr of about 76%, roughly one quarter of the c class domains are not classified by scop according to measured global structural similarity. as we previously suggested, the main reason is that global structure similarity cannot entirely account for the characteristic local structural features on which the scop classification is based. future research should be aimed at finding algorithms able to automatically extract such evolutionarily conserved, common local structural features of domains. as observed by chothia and lesk  <cit> , in proteins having low sequence identity and the same biochemical function, only about half of secondary structures are conserved. the remaining challenge is to identify the conserved half!

