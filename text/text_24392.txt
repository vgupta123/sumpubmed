BACKGROUND
pathways may be broadly described as models that characterize movement of material through a network of molecular species and processing steps. they serve as the basis upon which much of the new field of systems biology must build. many tools have become available over the last  <dig> years for enabling biological pathway construction  <cit> . their construction has been stimulated by the growth in information resulting from adoption of new laboratory tools accompanying high-throughput data acquisition, such as mass spectroscopy  <cit> . the process of constructing pathways requires ready access to information in the form of experimental data of a quantitative nature.

in general, the field of metabolomics involves inducing perturbations to the ongoing state of living systems and subsequently monitoring changes to compounds at specific time points. the interactions among components of a pathway are then inferred by a variety of techniques, including metabolite fingerprinting and profiling, and by comparison between organisms that have been genetically perturbed or subjected to altered nutritional states  <cit> . to serve as a resource for designing pathways, we have constructed an on-line database resource, named pathway, from which metabolomic data may be obtained. in addition to kegg reference lipid metabolic pathways, the pathway database contains lipidomic, microarray, and protein array data acquired by member laboratories of the lipid maps  consortium. the shared goal of these member laboratories is to characterize the lipid metabolite component of cellular metabolism  in the mouse and in humans  <cit> . pathway also contains annotations derived from kegg ligand compound and kegg ligand enzyme  <cit> .

the pathway editor is the initial application of the biopathways workbench project. the biopathways workbench is an on-going effort of lipid maps to build a programming toolkit, applications, and a database for creating, managing, visualizing, and editing signaling and metabolic pathways. the biopathways workbench makes extensive use of the connectivity that is possible between data sources provided by the internet and the local file system of a user. the toolkit includes capability for read-only access to pathway and other databases, and for reading and writing different file formats.

brief descriptions of the biopathways workbench and the pathway editor during early development have been presented previously  <cit> .

implementation
the pathway database
pathway is implemented as a relational database, using oracle9i enterprise edition release  <dig> . <dig> . <dig>  running on a sun fire  <dig> server and maintained at the san diego supercomputer center, university of california - san diego by the lipid maps consortium's bioinformatics core. at the time of writing, the database contains lipid maps experimental data acquired from treatments of raw  <dig>  cells, a cell line derived from macrophage tumor cells  <cit> . the cells were treated with kdo2-lipid a, a purified component of bacterial lipopolysaccharide  which may be responsible for much, if not most, of the pro-inflammatory response to lps. lps mimics processes of a similar nature occurring in many disease states and conditions, including inflammation, atherosclerosis, and altered growth  <cit> . lipids from treated cells were extracted and quantified by member laboratories of lipid maps. pathway also includes microarray and protein array time course measurements  <cit> . descriptions of experimental protocols, as well as experimental data in other formats, may be viewed and downloaded from  <cit> . all of the information contained with the pathway database is found elsewhere and is collected in a single database for convenience. pathway is accessed by means of the pathway editor program and is not intended to be accessed through other means.

the pathway editor program
the pathway editor is written in the java programming language and is downloaded as a java web start application from the lipid maps website  <cit> . web start is a feature of the java runtime environment  distributed by sun microsystems . the current download requires prior or co-installation of jre v.  <dig> . <dig> or later version. web start checks the originating web site for updates automatically, and subsequently accesses them, with a minimum of interaction required of the user. prior installation of libsbml  <cit>  is required on the part of the user. depending upon the operating system, the downloaded pathway editor application includes sbml  v  <dig> . <dig> dynamic link libraries  <cit>  for use on windows desktops  or java native interface libraries for use on mac os x desktops , as well as sbml java files and other open-source libraries in java. these open-source libraries are described elsewhere in this paper. the program is digitally signed to increase acceptability by security-conscious internet users.

the pathway editor appears as native look and feel applications on microsoft windows and apple macintosh operating systems. modern graphics accelerator hardware  is required. a link to a tutorial on use of the pathway editor may be found on the pathway editor download page  <cit> .

design of the pathway editor
the design of pathway editor follows the model/view/controller  design pattern  <cit> . the model is composed of biopathways workbench classes that access files and databases. the documentwindow class represents the controller, with which the user interacts to select information and to set view preferences. the view includes the vispathwaypanel class, which draws and presents pathway diagrams to the user. in typical usage, a pathway object containing layout information and time course data is created in the biopathways workbench and conveyed to the documentwindow and the vispathwaypanel, and returned to the workbench for updating or storage in the file system. alternatively, a pathway may be constructed by combined use of the documentwindow and vispathwaypanel and sent to the workbench for transmittal to the user's file system.

the pathway editor constructs pathway objects using a standardized object vocabulary that includes small molecules, proteins, nucleic acids, experiments, and time course datasets. code representations of nodes and interactions within a pathway are called participants, and contain information that is used for drawing on the vispathwaypanel . node participants may also contain experiment data.

complete pathway diagrams may be saved as .path files in xml format for future viewing in the editor, or as image files of the drawing surface in various formats.

additional implementation details are described in the results section.

RESULTS
pathway database
the focus of data management in pathway is the experiment, identified by an experiment id  and its associated metadata . an experiment contains all of the measurements and compounds or gene symbols for treatments performed by a particular laboratory on a particular date in the form of sets of time course data, or datasets. a dataset consists of a string representing a treatment type and a series of time points . the dataset contains one or more measurements at each time point. time units are considered as part of the enveloping experiment, while measurement units are contained within the dataset.

the pathway database also contains references to small molecules as identified by lipid maps structure database identifiers  <cit>  and to kegg small molecule compound ids, to kegg protein compound ids, and to gene symbols referenced by entrez gene  <cit> . microarray and protein array measurements within the database are associated with both a protein compound id and a gene symbol. that is, the pathway editor treats array data as belonging to proteins. nucleic acid annotations are not currently found in pathway.

when experiments are loaded into the pathway database, each dataset becomes associated with a corresponding small molecule id, protein id, or combined protein identifier plus gene symbol identifier. the dataset of a compound thus becomes linked to the characteristics of the compound, such as small molecule category, molecular weight, synonyms, comments, and the external database identifiers described in the preceding paragraph. further details on experiments and datasets may be found in the on-line tutorial  <cit> .

the pathway database contains kegg reference metabolic pathways for lipid metabolism. the components of the pathways are parsed from kegg xml files originally written in the kegg markup language , and include pathway name and compound or protein name assigned to pathway nodes, node connectivity and stoichiometry, their respective map coordinates, and kegg database ids for kegg ligand compound and kegg compound enzyme  <cit> . if the kegg compound has been identified as equivalent to a structure contained in the lipid maps structure database  <cit> , the pathway database characterization of the node in the kegg pathway also contains the pathway small molecule or protein id described in the previous paragraph, allowing access to all annotations available for that molecular entity.

visualization and data management
a view of the pathway editor showing a sample lipid maps pathway  is shown in figure  <dig>  a drawing area in the lower portion of the window frame comprises most of the display. drawing is performed using jogl   <cit>  to simulate a three dimensional display. the display of time course data for every node, for all nodes of a particular type, or for individual nodes may be configured as either heatmap or line chart. heatmaps permit more efficient usage of screen space than line charts. above the drawing area is a toolbar containing buttons that may be clicked to provide many commonly-used functions . the user may move scroll horizontally or vertically across a plane in 3d space perpendicular to the user's line of sight using scroll bars. above the toolbar, and topmost in the frame, is a menu containing common program interface menus, as well as specialized submenus.

view preferences, such as node/interaction color, shape, font size, and others may be configured by a preference assignment dialog accessed from the popup menu, or by global preference assignment dialogs accessed on the view menu.

the program also uses the jfreechart code package  <cit>  to generate high-quality charts in separate frames for close inspection of data.

downloading pathways
the user may initiate a session with the pathway editor in a number of ways. perhaps the most powerful mode may be entered by downloading a pathway. a pathway file in the biopathways workbench format  may be downloaded from the lipid maps website server  <cit>  by means of a dialog presented via the file menu . .path files are built using the pathway editor and contain a listing of the nodes and processes of a pathway, along with their geometrical layout and pathway database identifiers of compounds referenced by each node. the files may also contain experiment ids, if a pathway designer desires. the presence of an experiment id directs the editor to download all datasets for the experiment from the pathway database. if the experiment happens to be a microarray or protein array experiment, only the time course data for specific gene symbols that are referenced in the file are downloaded, because of the large number of datasets in these kinds of experiments. the editor traverses each participant in the pathway, and determines whether a pathway database identifier for the participant compound is present in the list of compounds in each experiment. if data is found, datasets are copied from the experiment to the participant object that is represented by the node. the data is displayed in the drawing area along with the pathway . the default display format is heat map; this may be changed to line chart as desired for each node, or for all nodes of any type. .path files on the user's machine may also be accessed.

kegg pathway files may be downloaded directly from pathway, again using a dialog available through the file menu . if the database representation of the kegg pathway is cross-referenced to pathway compound identifiers, experiment data is assigned by the pathway editor in a manner similar to lipid maps .path files. however, references to experiments are not contained within kegg pathway files, and experiment data must be accessed in separate steps .

nodes on the drawing surface of the pathway editor are of four types, following kegg terminology: small molecule, protein, nucleic acid, or unknown . each node  may contain a referenced compound id. protein nodes may also contain a list of one or more gene symbols. processes, or interactions that connect nodes, are of type metabolic, signaling, or unknown . these compound ids, symbols, and types may be assigned using dialogs accessible via mouse buttons and top menu items.

the user assigns compounds  to nodes by accessing a database search dialog and searching the pathway database. the search may utilize compound and synonym names or fragments of names. once assigned, the pathway database compound id and compound metadata becomes associated with the node. compound metadata is updated automatically from the database whenever a .path file is downloaded or opened.

nodes are created by combined use of toolbar buttons and mouse actions. to create a node in any part of the drawing area, the node create button in the toolbar is pressed and the drawing area is clicked. to connect nodes, the node connect button is pressed, a node is selected, and, keeping the mouse button pressed, the mouse is moved to a second node, and the mouse is released. the resulting interaction, or process, may be assigned information using the mouse and pop-up dialogs, in a manner similar to nodes.

within the pathway editor, experiments are managed independently of pathway components. when an experiment is presented to the pathway editor, the pathway editor automatically associates datasets with nodes containing the compound id or gene symbol for the dataset. experiments may be downloaded from the pathway database separately from pathways , or may be accessed from the local file system. in the latter instance, the files may be in lipid maps data file format , or the files may be in comma-separated value  format and constructed by the user by way of another program, such as a spreadsheet application  <cit> . the csv format does not contain database identifiers . such numerical identifiers are created and assigned by the pathway editor as necessary. in the case of compounds , identifiers are assigned on the basis of 1: <dig> correspondence between names in the csv file and node labels in the pathway. microarray or protein array data in csv files is identified by a node type designation of protein, in combination with a gene symbol.

assigning a compound to a node
during the process of constructing a pathway, a user constructs a node of the desired type, and assigns a compound to a node by searching pathway for the name of a compound or gene symbol, using a compound information dialog for the node type. once found and selected, the pathway database id for the compound and/or gene symbol then becomes incorporated into the participant object that is contained in the local pathway. if experiment data is loaded in the program, the program then automatically traverses the experiment data contained within the internal pathway object and assigns datasets containing the same database compound id or gene symbol to the participant contained within the node for display.

a user accepts placement of the compound in the node on the basis of whether the measured data that is presented meets with expectations according to domain knowledge, including early or late responsiveness to a stimulus, and the magnitude of the response. measured absolute values and ratios may be inspected, and the presentation changed, by right-clicking on an interaction glyph and selecting from a pop-up menu with the mouse, or alternatively, by accessing menu items on the tools menu for the window. for microarray experiments, the presented data includes statistical p-values of the significance of biological replicates , technical replicates , or treatment significance  on the select tab of the node information dialog .

a menu item in the view menu enables animated bar charts for visualization of time-dependent changes for each node in the display. this allows dynamic comparisons of the magnitude and direction  of changes to compounds in the system under study.

the user is further aided in the process of compound assignment by having the ability to change the visibility of entire experiments, of datasets for individual compounds, and of datasets for individual gene symbols in the display, as desired. the user may choose to reject assignment of a compound to a node because of poor reproducibility of measurement, or may reject an individual experiment because of inconsistency within the experimental data, thus accepting the compound.

further information on the compound may be obtained by double-clicking a table row containing an identifier in the databases tab of the compound's information dialog, as in figure  <dig>  the action causes the user's preferred browser program to open a web page presenting database information from lipid maps, kegg, or entrez gene for that identifier.

sbml
the pathway editor reads and writes systems biology markup language  models through level  <dig>  version  <dig>  <cit> . sbml species and reactions can be assigned to pathway nodes and interactions. when saving an sbml model, the lipid maps pathway layout is contained within the model as an annotation. this layout is automatically utilized when the file is subsequently read. if a pathway layout is not found, the user may select an automated layout feature patterned after that for jdesigner  <cit> , or the user may manually select nodes from a list and paste them on the drawing surface one at a time. interactions are automatically drawn, utilizing lists of sbml species and reactions contained within the model.

the sbml plugin in pathway editor is designed to be fully compatible with the sbml specification  <cit> . mathematical expressions relating sbml species, parameters, and compartments can be written and viewed. of particular interest is the ability to enter and read miriam annotations  and sbo  references  <cit>  in user-selectable table and list format. upon double-clicking on a row in the table, the user is presented with the database web page for the compound in the user's browser, in a manner similar to database references presented for .path files, above.

discussion
tools for constructing and editing pathways require drawing on readily available information of various types. features of the pathway editor that assist in providing this information are: first, it provides simultaneous access to time course  and microarray measurements, as well as protein array data. intermediates in pathways are identified with reference to compound names as defined by an ongoing effort to standardize lipid nomenclature   <cit>  as well as to common names of lipids, and to gene symbols. compounds that are present in kegg databases  <cit>  are also identified. performance of additional steps to acquire data is not necessary, as may be the case with other pathway analysis tools that require access to diverse sources. second, it provides automated access to annotations and to experimental data, incorporating automated updating. third, users may create and edit new and existing pathways by adding and deleting nodes and processes. users may incorporate their own metabolites and measurements during pathway construction. lastly, access to new databases and input/output of new pathway model types is facilitated by a program structure that was designed with this in mind from the beginning. to our knowledge, this combination of features in a single program is unique to the pathway editor.

of the several tools available, vanted  <cit>  may perhaps come closest to the functions of the pathway editor; however, its use of on-line databases is limited to kegg, and experimental data must be loaded into the program from files. display of heatmaps is not supported. finally, the compatibility of vanted with sbml specifications is incomplete .

biologicalnetworks  <cit>  is a cross-database application that integrates disparate organisms and data types, but access to metabolomic data is not provided. pathwayexplorer  <cit>  maps gene expression data to pathways, displaying the data in heatmap format, but does not allow for manipulation of the pathway, or creation of new pathways. thus, the pathway editor represents a significant contribution to the list of current tools for pathway construction.

small molecules in the pathway database are annotated with reference to lipid maps lipid identifiers and kegg small molecule ids. in some cases, the precise stereochemistry of a measured lipid may not be known because of ambiguity in structure assignment  <cit> . the time course data for such compounds is nevertheless included in pathway, with this proviso, to serve as placeholders until more precise determination of structures is made.

for constructing pathways de novo, the pathway editor currently depends upon user interaction. the process of pathway construction relies heavily on domain knowledge. however, the focus of the pathway editor is on access to data, its graphical representation, and annotation. it is hoped that its appealing visual design, richness of features, simplicity of default preferences, and responsiveness, as well as similarity of the descriptive terminology used by the program  with laboratory methodology, will support facile use of the pathway editor by experimenters.

future enhancements to the pathway database
pathway is enhanced with additional experimental data as it is acquired and validated. currently, lipid maps laboratories are using several types of primary macrophages from mice as target systems. raw  <dig>  subcellular fractions are also being studied. lastly, treatments with different agents, including an inhibitor of cholesterol metabolism, compactin, in conjunction with kdo2-lipid a, as well as models for minimally modified ldl   <cit>  are under way or planned.

enhancements to the biopathways workbench and the pathway editor
the biopathways workbench component of the pathway editor interfaces with the pathway database and with the local file system. it converts textual and numeric information into data structures that can be transferred to the rest of the application. these data structures represent concrete biological entities and comprise the core of a vocabulary which can be extended as necessary as other databases are accessed and new analysis features are incorporated in the pathway editor and other applications.

a number of extensions to the pathway editor, making use of biopathways workbench toolkit classes, are planned. support for additional pathway model file formats, such as biopax  <cit>  will be available in the near future. provision of access to other experiment databases is anticipated. we are also working on providing a form of the program that does not require a connection to the internet. the ability to perform statistical analyses that are important in the systems biology field will be added. lastly, more extensive use of 3d graphics, particularly in the area of compartmentalized localization of processes and interchange of compounds between compartments, is also anticipated.

investigators may contact the authors to discuss requests to add on-line access to their data and compound databases in the pathway editor.

CONCLUSIONS
the pathway editor provides a user interface that features multiple functions for rapid pathway construction, including access to multiple pathway diagrams and experimental data sets; a focus on annotation, including references to standardized lipid nomenclature as well as common lipid names; and automatic updating of experimental data and annotations through connectivity to an online database. this rich feature set is not available in any existing pathway drawing tool.

availability and requirements
project name: biopathways workbench

project home page: 

operating systems: windows, apple mac

programming language: java

other requirements: java  <dig>  or higher; installation of libsbml

license: freely available

restrictions to use by non-academics: none

authors' contributions
rwb wrote pathway editor code, proposed features of the pathway editor, designed the pathway database, and drafted the manuscript; dc designed the pathway database and critiqued the manuscript; am proposed features of the pathway editor and designed the pathway database; jl designed the pathway database; dn wrote pathway editor code, proposed features of the pathway editor, and designed the pathway database; ss proposed features of the pathway editor and critiqued the manuscript. all authors read and approved the final manuscript.

