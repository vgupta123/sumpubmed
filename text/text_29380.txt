BACKGROUND
recent years have seen an increase in the use of electronic medical records  by healthcare providers  <cit> . these records contain patient-related information such as signs,  symptoms, diagnoses, treatments, and tests. the primary use of emrs is to support the care process, but the secondary use of emrs for clinical research is increasing. in most emrs, the majority of information is unstructured free text, making information retrieval challenging, although several automatic systems have been developed that can index, extract, and encode clinical information from the emrs  <cit> . one particular challenge in analyzing free-text emrs is to distinguish positive diagnoses by the physician from things that have been excluded or ruled out. similarly, information about the past medical problems and also a family history is often found in the emrs and should ideally be identified as such. in order to extract meaningful information such as medical problems or clinical conditions, it is important that automatic systems do not only identify them but also take into account the context of the identified information.

previous approaches on identifying contextual properties of clinical concepts can be classified into rule or regular-expression based techniques, machine-learning techniques, or a combination of both. chapman et al.  <cit>  developed a rule-based system called negex that determines whether a specific medical condition is present or absent within a narrative. the system uses two sets of trigger phrases: one to identify true negations and a second to identify pseudo-negations, i.e., phrases that seem to indicate negation but instead denote double negations such as not ruled out. the system was evaluated on discharge summaries where it achieved a precision of  <dig> % and a recall of  <dig> %. another system, called negfinder  <cit> , used grammatical parsing and regular expressions to identify negated patterns occurring in medical narratives, achieving a specificity of  <dig> % and a sensitivity  of  <dig> % on discharge summaries and surgical notes. elkin et al.  <cit>  assigned a level of certainty to identified concepts in emrs based on a rule-based system to decide whether a concept has been positively, negatively, or uncertainly asserted. the system achieved  <dig> % sensitivity,  <dig> % specificity, and  <dig> % precision on medical evaluation notes. huang et al.  <cit>  used regular expressions with grammatical parsing to identify negated phrases. on radiology reports, the system achieved a sensitivity of  <dig> %, a specificity of  <dig> %, and a precision of  <dig> %. the context algorithm  <cit>  is based on the negex algorithm and apart from identifying negations it also identifies whether a clinical condition is present, historical, or hypothetical, and whether the clinical condition is experienced by the patient or someone else, e.g., a family member. the system achieved an average precision of 94% and an average recall of 92% when evaluated on six different types of medical reports. kilicoglu and bergler  <cit>  showed that speculative language can be recognized successfully using linguistically oriented approaches. they extended lexical resources with syntactic patterns and introduced a simple weighting scheme to estimate the speculation level of the sentences. the system achieved a precision of 85% and a recall of 86%. recently, reeves et al.  <cit>  created a system, med-ttk, to identify and classify temporal expressions in medical narratives. the system achieved a precision of 85% and a recall of 86% on clinical notes.

in machine-learning approaches, goldin and chapman  <cit>  experimented with naïve bayes and decision trees to determine whether a concept is negated by the word not in hospital progress notes and emergency room notes. agarwal and yu  <cit>  used conditional random fields  to detect negation cues and their scopes. the best crf model achieved a precision of 99% and a recall of 96% on detecting negation cues, and a precision and recall of 95% on detecting their scopes in clinical notes. morante and daelemans  <cit>  first used a classifier to identify negation signals and then used four classifiers to find the full scope of the negation signals. three of the classifiers predicted whether a token was the first, the last, or neither in the scope sequence. the fourth classifier was a meta-learner that used the prediction of first three classifiers to determine the final scope. on bioscope clinical documents  <cit> , the system achieved a precision of 86% and a recall of 82%, and 71% of negation scopes were correctly identified. cruz díaz et al.  <cit>  improved on morante and daelemans  <cit>  by using different classifiers. the system achieved a precision of 92%, a recall of 90%, and 88% of the negation scopes were correctly identified. to detect speculation, the system achieved a precision of 85%, a recall of 63%, and 63% of speculation scopes were correctly identified. light et al.  <cit>  estimated that 11% of the sentences in medline abstracts contain speculative fragments. they used a substring matching method and support vector machines  to determine whether concepts in the text are described as facts or as speculation. for the matching method, they identified  <dig> strings that suggest speculation and marked a sentence as speculative if their system found any of these strings in the sentence . the svm classifier achieved a precision of 84% and a recall of 37% whereas substring matching achieved a precision of 55% and a recall of 79%. velldal  <cit>  used a disambiguation approach and svm-based classifiers to label sentences as certain or uncertain. their best system achieved a precision of 89% and a recall of 85%. goryachev et al.  <cit>  compared two adaptations of regular-expression based algorithms, negex and negexpander, with two classification methods, naïve bayes and svm, trained on discharge reports. it was observed that regular-expression based methods show better accuracy than the classification methods. uzuner et al.  <cit>  developed a statistical assertion classifier, stac, by using lexical and syntactic context in conjunction with svm to classify medical problems in emrs into four categories: positive, negative, uncertain, and alter-association. stac was compared to an extended version of the negex algorithm and showed better performance. the  <dig> i2b <dig> nlp shared task  <cit>  focused on finding the temporal relations in clinical narratives. while machine-learning and rule-based systems showed good performance, the systems using combination approaches produced the best results.

the type of clinical documents has a noticeable impact on the performance of systems that identify contextual properties of clinical concepts. clinical documents differ in many ways, such as structure, grammaticality, and use of standard and non-standard abbreviations. overall there does not seem to be a clear winner between machine-learning and rule-based systems. the rule-based and hybrid systems appear to perform slightly better than machine-learning approaches. in theory, rule-based systems can be adapted rather easily for different clinical text than for which they were developed. one of the limiting factors of a rule-based approach is the use of a fixed scope which may lead to misclassification. the machine-learning based approaches may not perform as well if they are tested on a different clinical text than they were originally trained on  <cit> . adapting such approaches for new clinical text will therefore require a new training set.

most work on identifying contextual properties of the clinical condition has been done on the english language. recently, the negex algorithm was adapted to detect negations in swedish  <cit>  and french  <cit>  clinical text. to our knowledge, no method is yet available or adapted for dutch clinical text.

this study has two objectives: to adapt the well-known context  <cit>  algorithm  to the dutch language and to create a dutch clinical corpus which is annotated for negation, temporality, and experiencer. context, along with its predecessor negex, is one of the most widely used algorithms in the field. it was chosen for its simplicity, ease of adaptability, and proven good performance on various types of english clinical text. the adapted context algorithm, dubbed contextd, and the anonymized dutch clinical corpus described here will be made publicly available for research purposes  <cit> .

methods
this section provides details of the erasmus medical center  dutch clinical corpus annotated for the three contextual properties negation, temporality, and experiencer. we also describe the original context algorithm and its adaptation to the dutch language.

emc dutch clinical corpus
the anonymized corpus includes four types of clinical documents to capture different language use in the dutch clinical setting.general practitioner entries 

this set consists of entries from the ipci database  <cit> , a longitudinal collection of emrs from dutch general practitioners  covering more than  <dig>  million patients throughout the netherlands. each entry in the ipci database pertains to a patient visit to the gp. these entries are not always grammatically well-formed text, and often follow the well-known soap structure   <cit> . the resulting database contains a broad range of information, including indications and following prescriptions for therapy, referrals, hospitalization and laboratory results. the structured information, such as diagnosis codes, is stored in a tabular format and the unstructured information is stored as free-text. only the unstructured free-text was included in the corpus.

specialist letters 

these are letters written by a medical specialist – for example a cardiologist – and they are also procured from the ipci database. the purpose of these letters is to report back to the gps after referral and consult in the hospital, updating them in relation to diagnostic deliberations and therapeutic strategies. these letters are in the form of scanned copies or summaries entered by the gp. these letters are also not always grammatically well-formed.

radiology reports 

this set consists of the reports taken from the radiology department of the erasmus medical center, the netherlands. these reports contain descriptions and conclusions derived from diagnostic imaging as requested by medical specialists  or general practitioners. these reports are intended for communication between doctors and radiologists. the text is mostly generated by using an automatic speech recognizer  and therefore usually has proper grammar and structure by prevailing conventions of the radiology department. the radiologists have the option to manually update the text generated by the asr which increases the probability of typos.

discharge letters 

this set consists of patient discharge letters taken from the erasmus medical center. they serve a purpose comparable to the specialist letters in updating the gps on everything that has occurred during the admission period including all outcomes and remaining problems. these letters are well-formed because of their intended external use  and continuity of care.



to select text from the above mentioned sets, we first created a list of dutch medical terms taken from the unified medical language system   <cit> . the umls contains medical terms in  <dig> different languages, including dutch. however, umls has limited coverage of terms in the non-english languages. from over  <dig> source vocabularies in the umls, only four contain dutch language terms. only umls terms belonging to one of  <dig> umls semantic types, mainly representing diseases, symptoms, and drugs, were included in the list. a list of semantic types is presented in additional file  <dig>  the final term list contains  <dig>  dutch terms, including synonyms and lexical variants that were present in the umls. for each of the four sets, documents containing at least one umls term were randomly selected to be included in the corpus. we used case-insensitive exact string matching to find the umls terms in the documents. table  <dig> summarizes the characteristics of the four document types.table  <dig> 
statistics of the four document types in the emc clinical corpus



type
no. of documents
no. of recognized umls terms
no. of words per document*
*median .



each of the recognized terms in the corpus was annotated for the three contextual properties: negation, temporality, and experiencer. the definitions of the properties are adopted from the context algorithm  <cit> .negation

this property has two values, ‘negated’ or ‘not negated’. a clinical condition or term is labeled as ‘negated’ if there is evidence in the text suggesting that the condition does not occur or exist, e.g., ‘there was no sign of sinus infection’, otherwise it is ‘not negated’.

temporality

the temporality property places a condition along a time line. there are three possible values for this property: ‘recent’, ‘historical’, and ‘hypothetical’. a condition is considered ‘recent’ if it is maximally 2 weeks old. conditions that developed more than 2 weeks ago are labeled as ‘historical’. a condition is labeled as ‘hypothetical’ if it is not ‘recent’ or ‘historical’, e.g., ‘patient should return if she develops fever’  <cit> .

experiencer

clinical text may refer to subjects other than the actual patient. the experiencer property describes whether the patient experienced the condition or someone else. for simplicity, we have defined only two possible values for this property: ‘patient’ or ‘other’, where ‘other’ refers to anyone but the actual patient, e.g., ‘mother is recently diagnosed with cancer’.



the corpus was annotated by two independent annotators. they were provided with a guideline explaining the process and each of the contextual properties in detail, with examples. an expert who was familiar with all four types of clinical text resolved the differences between the annotators. the annotations were limited to the conditions previously identified using our custom dutch umls terms. in the netherlands, retrospective research with anonymized patient data does not fall under the scope of the wmo ), and does not have to be approved by a medical ethics committee for the ipci data, the access was approved by the ipci governance board .

we split each of the four document sets in our corpus into a development set and an evaluation set . the development set was used to tune the algorithm and the trigger lists. to account for possible overfitting of the algorithm on the development set, the performance of the algorithm was assessed on the evaluation set, which was used only for the final testing.

the context algorithm
the context algorithm  <cit> , an extension of negex  <cit> , is based on regular expressions and lists of trigger terms to determine the values of three contextual properties of a clinical condition: negation, temporality, and experiencer. the algorithm searches a sentence for triggers before or after the pre-indexed clinical condition. the default value of a property  is changed if the condition falls within the scope of the trigger term. the default scope of a pre-trigger is from the right of trigger term to the end of the sentence, whereas the default scope of a post-trigger begins leftwards from the trigger term to the beginning of the sentence. the default scopes are overruled if a termination trigger is found before the end of the scope. for each property value , the context algorithm maintains four lists of triggers: pre-triggers, post-triggers, termination triggers, and pseudo-triggers. pre-triggers precede the location of a clinical condition in the text, e.g., no signs of viral infection. in this example, viral infection is the clinical condition and no signs of is the pre-trigger. post-triggers follow a clinical condition, e.g., viral infection is ruled out. in this example, ruled out is a post-trigger. in both of these examples, the condition viral infection will be negated because it falls within the scope of the pre- and post-triggers. termination triggers limit the scope of a pre- or post-trigger. finally, there are phrases that look like triggers but do not act as such, e.g., no change. these are added to a pseudo-trigger list. the input to the algorithm is a sentence with marked clinical conditions. first, default values are assigned to the contextual properties of each clinical condition. the default values are then updated using the following algorithm:find all trigger terms  in the sentence

for each of the trigger terms found ○ if the term is a pseudo term, skip to the next term

○ otherwise:

▪ find the scope of the trigger term

▪ assign appropriate contextual property values to all marked clinical conditions within the scope.





several implementations of the context algorithm are available online  <cit> .

contextd: context for dutch
the context algorithm uses pre-defined english trigger terms to determine the value of the contextual properties. we first attempted a fully automated translation of these triggers into dutch using google translate  <cit> , but the results appeared not to be comprehensive enough. a native dutch speaker, who was also familiar with clinical texts, then checked all automatically translated terms, and added all possible variations of a trigger term.

the contextd algorithm expects a sentence with marked conditions as its input. we used the dutch sentence splitter in the apache opennlp library  <cit>  to split the text into sentences. using our custom umls dutch term list and case-insensitive exact string matching, we marked all the umls terms in the sentences.

contextd works like the original context algorithm in using the trigger lists to find the values of contextual properties. the java implementation of context  <cit>  with the translated triggers was used as a starting point. using the development set, we iteratively refined the dutch trigger lists and made a number of other modifications as described below:

gp specific rules
the general practitioners often negate the existence of a clinical condition by putting a minus sign after the term, e.g., fever-. we added a couple of rules to catch such occurrences  of negation in the gp text.

combined triggers
the value of a contextual property sometimes cannot be identified by a pre-trigger or a post-trigger alone, such as nooit  and is weg . a similar weakness is also reported by chapman et al.  <cit>  for triggers not and no. for example, in the sentence ‘hij heeft verder nooit medicijnen gebruikt die de tinnitus beinvloeden ’, the trigger nooit is negating the use of medication but not the condition tinnitus. some of the triggers translated from the english cannot be directly applied to the dutch text because of the different word ordering in both languages. such triggers have to be split before they can be applied. there are situations where a combination of two triggers is essential. since there is no notion of dependency or connection between different trigger types in the original context algorithm, we introduced a few rules that look for a combination of triggers to be present in order to identify the correct value of a contextual property. for example, in the sentence ‘nooit urineweginfecties doorgemaakt’, the triggers nooit  and doorgemaakt  combined suggest a negation for the term urineweginfecties. the pre-trigger nooit alone did not increase performance and hence was removed from the trigger list during the development.

scope of trigger terms
contextd uses different scopes depending on the trigger term. the default right-scope starts from the right of the trigger term and ends at the end of the sentence. the default left-scope starts leftwards from the trigger term and ends at the beginning of the sentence. we experimented with different scopes for different types of clinical text, which resulted in modifying the default scope for gp entries to  <dig> words and for specialist letters to  <dig> words. the default scope is overridden if a termination trigger appears before the end of the scope. for gp entries, which are mostly grammatically unstructured, some punctuation, such as comma and semicolon, were added as termination triggers to limit the scope of triggers. for specialist letters, only colon and semicolon were added to the termination triggers.

temporality module
the original context algorithm has very few triggers to identify whether a clinical condition is historical. we added a temporality module that implements several regular expressions to look for evidence for historical events on both sides of the clinical term. an adjusted left and right scope was also implemented in the module to avoid getting false positives. the regular expressions used in the temporality module along with a brief description of the rules are presented in additional file  <dig> 

evaluation
we computed precision , recall , and f-measure  for each of the three contextual properties.

for the negation property, terms that were assigned the value ‘negated’ were taken as the positive class and terms that were marked ‘not negated’ as the negative class. similarly, for the experiencer property, terms marked as ‘patient’ were taken as positives, ‘others’ as negatives. for the temporality property, which has three values, each value was considered as the positive class against the other two combined . a true positive was defined as a term that was correctly assigned to the positive class, a false positive as a term that was incorrectly assigned to the positive class, and a false negative as a term that was incorrectly assigned to the negative class.

we used cohen’s kappa  <cit>  to calculate the agreement between both annotators for each of the three contextual properties. because the umls terms were already marked in the sentences, the inter-annotator agreement was calculated for the labels only.

RESULTS
this section provides the annotation results of the emc dutch clinical corpus and the performance of the contextd algorithm.

table  <dig> shows the inter-annotator agreement for each report type in the corpus. according to the altman classification  <cit> , kappa is very good for ‘negated’ and ‘recent’ values , moderate-to-good for ‘historical’ values, and moderate for hypothetical values. the kappa for the experiencer property is very good except for in the radiology reports where a moderate agreement is observed. the lowest kappa score  of  <dig>  is observed for the specialist letters for the value hypothetical. because there was no hypothetical term in the discharge letters, no kappa was calculated for this property value.table  <dig> 
inter-annotator agreement on contextual properties in the emc clinical corpus



document type
negated
recent
historical
hypothetical
patient


table  <dig> shows, for each report type, the distribution of the values of the three contextual properties. the distribution of the negated terms does not vary much between different report types. historical conditions occur more frequently in specialists’ letters and discharge reports, 8% and 6% respectively, in comparison to gp entries  and radiology reports . this can be explained by the fact that specialist and discharge letters often include descriptions of the patients’ past medical history. hypothetical terms are absent in discharge letters and infrequent  in the other report types. the value other for the experiencer property is also found infrequently  in all report types.table  <dig> 
distribution of the contextual property values in different types of clinical documents



document type
total
negation
temporality
experiencer
negated
not-negated
recent
historical
hypothetical
patient
other


table  <dig> shows the number of english triggers used by the original context algorithm and the number of dutch language triggers used by contextd. about 60% of the english triggers were translated one-to-one into dutch. for the remaining english triggers, several possible dutch translations were added resulting in a much larger number of dutch triggers. for example, for the english negation trigger ‘never had’, three equivalent dutch triggers were added: ‘nooit gehad’, ‘had nooit’, and ‘hadden nooit’. all the original triggers from context were translated to dutch without particular issues.table  <dig> 
number of english and dutch trigger terms for each contextual property



contextual property
english triggers
dutch triggers


table  <dig> shows the performance on the evaluation set of the context algorithm using only automatically and manually translated dutch triggers  and of the contextd algorithm after all modifications . the baseline performance of the algorithm was poor on the historical terms and could not identify a single hypothetical term. the experiencer property was the easiest to assign, which is reflected in the high baseline performance. for the negation property, the precision was high for all report types but the algorithm missed many negated terms, i.e., recall was low. for the final contextd, the recall was considerably improved for negation and historical values on all report types. although the performance was improved for hypothetical values on specialist letters and radiology reports, overall it remained poor.table  <dig> 
results on the evaluation set using only the translated terms from english to dutch  and the final contextd results with modifications 


precision
recall
f-score

property value
total
baseline
final
baseline
final
baseline
final

recent

historical

hypothetical

patient


the contextd algorithm utilized  <dig> unique triggers to identify negated terms,  <dig> unique triggers to identify historical terms,  <dig> unique triggers to identify hypothetical terms, and  <dig> unique triggers to identify other terms across all report types. among the  <dig> unique triggers for the negation property, the trigger term ‘geen’  was used most frequently. the most used triggers for the temporality property and the experiencer property were ‘status na’  and ‘moeder’ , respectively. a list of all unique triggers and their frequency of occurrence in the evaluation set is given in the additional file  <dig> 

table  <dig> shows an analysis of  <dig> randomly selected false negatives for different contextual property values in the evaluation set. in 40% of the errors, the evidence trigger was missing from our trigger list. for instance, in the entry ‘fam.anamn blanco voor trombose…’  the trigger blanco voor was missing, resulting in misclassifying the negated concept trombose as not negated. these errors can be prevented by adding triggers to the contextd trigger lists. it is important to note here that some of the trigger terms causing these errors  were intentionally not added in the triggers list to avoid too many false positives. in 19% of the errors, a pre- or post-trigger alone could not correctly identify the property value of a term. these errors may be prevented by rules that combine pre- and post-triggers along with the distance to the actual term  or rules restricting the scope of a particular trigger. for example, in the sentence ‘ochtendstijfheid: nee nachtelijk rugpijn: nee, wel zonne-allergie…’ , the concept ochtendstijfheid could have been identified by adding: nee as a post-trigger with a maximum scope of  <dig> words in 17% of the errors, the sentences were too complex to identify and generalize any trigger or pattern. for example, in the sentence ‘flinke ruizen drukpijn colon erge pijn in flank sinds een aantal dagen dacht zelf aan niersteen advies’ , the concept niersteen  is hypothetical. the possible trigger dacht zelf  could not be used because of its negative impact in terms of false positives. in 8% of the errors, a variation of the trigger  was used. the remaining 16% of the errors were due to miscellaneous reasons, such as typos , sentence splitting errors, or the trigger being in another sentence than the condition.table  <dig> 
error analysis of false negatives in the evaluation set



error
negated
historical
hypothetical
patient
total

total


table  <dig> shows an analysis of  <dig> randomly selected false positives for the different property values. the hypothetical and patient values had less than  <dig> false positives, so all those available were included in the analysis. in 37% of the errors, the scope of the evidence trigger wrongly included the condition. for example, in the sentence ‘conclusie geen oogheelkundige verklaring voor de hoofdpijn’ , the pre-trigger geen is wrongly negating the concept hoofdpijn although it has a limited scope. annotation errors caused 14% of the errors. half these annotation errors were because the annotators failed to pick the historical trigger ‘status na’  resulting in those terms being labeled as either recent or hypothetical. two ambiguous triggers for the experiencer property  caused 14% false positives. some of the regular expressions in our temporality module caused 11% of the errors because they were either not specific enough or were missing some variations in the text. for example, in the sentence ‘… geen dyspnoe wel net influenza gehad ferro en vit c als < <dig> weken niet beter revisie…’ , the temporality module identified  <dig> weken  close to the concept influenza and wrongly labeled it as historical. these types of errors could be avoided by looking for extra evidence such as net  and relational operators such as < in combination with the time. in 9% of the false positives, the error was due to missing pseudo triggers. for example, in the sentence ‘met requip niet minder krampen en wel zwabberig,…’ , the pseudo-trigger niet minder was missing in the trigger list, resulting in wrongly classifying krampen as negated. the remaining 15% errors were due to several other reasons.table  <dig> 
error analysis of false positives in the evaluation set



error
negated
historical
hypothetical
patient
total 

total


table  <dig> shows a comparison of the performance of the final contextd algorithm and the original context algorithm. the original context algorithm was evaluated on six different english clinical document types  <cit> . for the comparison, we have selected two document types which appear similar in both studies. an absent precision or recall means that the results could not be calculated because the sum of true positives and false positives or the sum of true positives and false negatives was zero  <cit> . for the negation property, both algorithms have the same f-score for the radiology reports, but contextd appears to perform somewhat better on the discharge letters. for the historical property, no comparison could be made for the radiology reports since no f-score was provided for the context algorithm. for discharge letters, the context algorithm performs better. the low performance of contextd is due to the high number of false positives  of which many are annotation errors. for the hypothetical property, no comparison on the same document type could be made since for the radiology reports no results were provided for the context algorithm, and for the discharge letters no hypothetical terms were present in the dutch corpus. for the experiencer property, both algorithms performed equally well.table  <dig> 
comparison of the original context algorithm for english with the adapted contextd algorithm for dutch


context 
contextd 

category
document type
precision
recall
f-score
precision
recall
f-score
for context, the results are taken from  <cit> . only the similar document types in both studies are selected for comparison.



discussion
in this paper we describe and evaluate contextd, an algorithm to identify contextual properties of medical terms in dutch clinical text. to develop and test contextd, we have also created the emc dutch clinical corpus, with annotations for the three contextual properties negation, temporality, and experiencer.

the emc dutch clinical corpus covers four different types of electronically stored clinical text: entries from the general practitioner, radiology reports, and two sets of medical letters after outpatient treatment  or hospital admission . the combination of these texts can be considered a representative selection of the documented medical process in the broadest sense, including the patient’s first interactions with the general practitioner, referrals and advanced  diagnostics in the hospital, and ultimately reporting back to the general practitioner after polyclinic consult or discharge after hospital admission.

although the gp entries have the smallest size among the four document types in our corpus, they contain more umls terms than the discharge letters, which are the largest in size. this can be explained by the fact that our dutch term list was small, containing mainly common clinical terms, which are more likely to be mentioned in gp records. the statistics shown in table  <dig>  therefore, do not give a realistic view on the occurrence and coverage of clinically relevant terms in different dutch clinical texts. a more complete dutch term list would have identified many more terms in the clinical text.

the corpus was annotated by two independent annotators. looking at the differences between the annotators a few observations can be made. medically-schooled annotators are prone to using information outside the context and also make considerations based on prior knowledge concerning the natural course of a condition. on various occasions, one annotator labeled a term as historical based on the assumed chronicity of the disease. at times, annotators had different opinions about keywords such as ‘status na’ , which suggests a longer existing condition. one annotator considered such cases as a part of medical history and often labeled the terms as historical whereas the other annotator sometimes labeled the terms as recent and sometimes as historical because of the uncertain time frame. the annotators often differed on the assignment of hypothetical values to terms, e.g., for terms that were part of a differential diagnosis. in the sentence ‘differentiaal diagnostisch werd gedacht aan appendicitis of diverticulitis’ , one annotator labeled appendicitis and diverticulitis as recent, reasoning that if they exist they exist now, whereas the second annotator labeled both terms as hypothetical. the inter-annotator agreement for ‘patient’ is low for the radiology reports , which can be explained by the very low number of non-patients . with such highly imbalanced class distributions, even a small number of annotation disagreements can result in a low kappa value.

contextd baseline results showed poor performance for ‘historical’ and ‘hypothetical’ values . the recent and patient values, which were the default values for the temporality and experiencer properties, showed good results. the final contextd results  show the improvements especially for the negation and historical values. the most difficult category turns out to be the hypothetical value for the gp entries where the algorithm failed to correctly identify a single hypothetical value. only few hypothetical terms were contained in the corpus, even less in the training set that we used to expand our trigger lists. we did not find many consistent patterns in the training set to identify hypothetical terms effectively. about a third of the errors in the evaluation set were due to the missing trigger ‘bij’ , which did not occur in the training set. the rest of the errors were due to the sentences being too complex to identify and generalize a trigger or a pattern.

although we had a much larger list of dutch triggers compared to the english triggers, only a small number of trigger phrases accounted for the majority of the detected terms . this finding is consistent with findings in other languages  <cit> . out of  <dig> possible dutch triggers for the negation property, only  <dig> negation triggers were actually found in the evaluation set. the error analysis on the evaluation set suggested a number of new triggers to identify negations, historical, hypothetical, and experiencer property across all report types. some of these triggers were intentionally not included in the trigger lists because they decreased rather than improved performance on the development set. a similar problem of some triggers negatively affecting the result was also found in the swedish study  <cit> .

although some automatic and linguistically motivated approaches exist to detect the scope  <cit> , the default scopes used in contextd are approximate due to lack of full grammaticality in the clinical text. apart from the standard termination triggers, some additional constraints such as punctuations were added to limit the scope of triggers in gp entries and in specialist letters. the scope for negation was varied in length but never extended past the sentence boundary. thus, negations that stretched over sentence boundaries were missed. the value of contextual properties may depend on the section of the clinical text, e.g., a symptom described in the previous history section will become historical regardless of how it is phrased. this information was not provided to the contextd algorithm and as a consequence terms may have been wrongly classified. as mentioned above, annotators sometimes used prior medical knowledge concerning the natural course of a condition to label a value of the contextual property, e.g., assigning historical value to a term for which the chronicity is assumed. finding the right value for such terms is difficult for algorithms like contextd, which rely solely on the information present in the direct neighborhood of the term. no effort was made in contextd to separate patient-reported symptoms  and suspected diagnoses from the actual diagnoses made by the physician. the suspected diagnoses are usually hypothetical whereas symptoms and actual diagnoses are not, a distinction which requires understanding of the text and therefore is difficult to make for contextd-like approaches. it is also important to note that the context algorithm is a simple algorithm meant to identify simple expressions using trigger lists, and was never expected to capture all attributes. we used case-insensitive exact string matching to find the umls terms in the documents. any variation of a term such as a spelling mistake is likely to be missed by this approach. the same can also be true for the trigger terms. it is also to note that the terms with linguistic variability may occur in variable contexts, which may require some adjustments in the trigger scope or in the regular expressions.

the contextd algorithm showed good performance in identifying negation and experiencer contextual properties. the performance for the historical and hypothetical  properties can be further improved by adding new triggers found in the evaluation set. we observed some errors due to sentence splitting with apache opennlp  <cit> , which is trained on regular natural language text. retraining the sentence splitter to work better with the dutch clinical text, especially for the gp entries and specialist letters, would resolve some of the issues related to the missing context. the radiology reports and discharge letters are grammatically well structured; therefore, deep sentence parsing and using rule-based or machine-learning techniques to estimate the trigger scopes for these reports can be employed. to determine historical and hypothetical concepts better, it is important to incorporate information about the specific parts of clinical text  in the algorithm. an extended assertion model that supports multiple values of negation is required to deal with speculation, e.g., the disagreements on diseases in the differential diagnosis.

CONCLUSIONS
the contextd algorithm showed good performance in identifying terms with negations and identifying who has experienced a particular medical condition across all four report types. the temporality property appears to be the most difficult one and methods to identify this property need to be further developed. the anonymized emc dutch clinical corpus, which was annotated for the three contextual properties negation, temporality, and experiencer, is the first publically available dutch clinical corpus and can serve as a useful resource for further algorithm development.

additional file
additional file 1: 
regular expressions and the rules used in the temporality module.




competing interests

dr. schuemie is an employee of janssen research & development. the authors declare that they have no competing interests.

authors’ contributions

za carried out the experiments, and drafted the manuscript. ep and jak were involved in trigger translation. nk helped with the temporality module. all authors participated in the analysis. mjs, jak, and mcjmc supervised and coordinated the project and revised the manuscript. all authors read and approved the manuscript.

this study was supported by the vici project  <dig> of the netherlands organization for health research and development zonmw. we would also like to thank prof. j.a.n. verhaar from the department of orthopedics, prof. s.e.r. hovius from the department of plastic surgery, and prof. g.p. krestin from the department of radiology for allowing us to use the data.
