BACKGROUND
in the realm of systems biology, mathematical modeling is essential to unravel the hidden principles underlying complex biological phenomena  <cit> . among various mathematical modeling frameworks, the boolean network is particularly useful for modeling large-scale biomolecular regulatory networks as it is a parameter-free logical model and thereby we can avoid parameter estimation which is often a critical limitation in mathematical modeling of such large-scale networks . once a boolean network model is obtained, the converging state characteristics of the modeled network can be investigated by identifying attractor states which were known corresponding to cell phenotypes . finding attractors of interest is, however, an np-hard problem  since we have to search the full state space and this is only possible for small networks with less than about  <dig> nodes  <cit> .

to tackle such a problem, there have been several attempts to reduce the original boolean network model by eliminating some nodes or logically simplifying boolean functions , or focusing only on point attractors  <cit> . another attempt was partitioning the original large boolean network into smaller blocks and reconstructing the original attractors by integrating the local attractors of partitioned blocks  <cit> . however, none of these could resolve the fundamental problem of computational complexity since both the reduced network and the partitioned subnetwork are still too large in most cases of biological networks. even if the reduced network is small enough to search the full state space, the resulting attractor states of the reduced network can be different from the attractor states of the original network . the existing partitioning approaches retain the complicated logic of the original network even after partitioning such that the whole set of attractors can still be found from the partitioned subnetworks. we found that the fundamental limitation of the previous partitioning methods lies in this point. to overcome such a limitation, we propose a different approach in this paper. the main idea is focusing only on particular phenotypic attractors of interest and simplifying the boolean update rules of the original network by introducing some constraint equations such that the particular attractors are not affected. in this way, we can efficiently reduce the original large network. then, we further partition the reduced network hierarchically and find out the local attractors of each partitioned subnetwork. we can finally obtain the global attractors for representing the particular phenotype in the original network by sequentially concatenating the local attractors. our approach is based on the previous concept of strongly connected component   <cit> , but the main difference is that our approach can efficiently find out the particular phenotypic attractors of interest by hierarchically partitioning the reduced network obtained by simplifying the state update rules using some constraint equations, whereas the previous approach attempts to partition the original network while retaining all the complicated state update rules and thereby results in still a large subnetwork even after partitioning.

we validated the usefulness of our approach by applying it to several large and complicated biological boolean network models.

methods
in this section, we describe the procedure of finding global attractors for the phenotype of interest from a large and strongly connected network and explain how to hierarchically partition the network into smaller-size subnetworks. we then describe a way of constructing the global attractors by sequential concatenation of local attractors of the subnetworks.

procedure for construction of global attractors by concatenating local attractors
let us consider that a large and complicated synchronous boolean network is given and the states of nodes in the network are updated by logic functions or threshold  functions. our goal is to find attractors for a phenotype of interest  in the given network. the idea is to transform the original update rules into simplified update rules by fixing the state values of some nodes  and to convert the original network into a simplified network using the simplified update rules. after hierarchically partitioning the simplified network into their sccs , the local attractors of each scc can be found by using a full search algorithm . finally, we can find the global attractors by concatenating the local attractors . each step of the procedure is as follows:step 1- <dig>  determine the fixed state values of nodes for external environment. the environment is a stimulus, a tumour-promoting microenvironment or perturbation of a node as in  <cit> . nodes for representing the environment are referred to as “external nodes”.

step 1- <dig>  insert the fixed values of the external nodes into the system of update equations. applying step1- <dig>  we can obtain the fixed state values of some nodes, which are different from the external nodes and referred to as “secondary-external nodes”. as a result, the original update rules are divided into two parts. the first is the set of external and secondary-external nodes  with their fixed values. the other is the new update rules for those nodes except esens, which are called as “the semi-simplified update rules”. we refer to the two parts as “the external condition” . examples for step  <dig> are given in s.example  <dig> in additional file  <dig> ,  <dig>   <dig>   <dig> and  <dig> for details).fig.  <dig> the overall procedure of the proposed method. the steps explain how to find the attractors for a phenotype of interest in a given boolean network step by step. the environment of the network defines the external condition in step <dig>  the consistent activation of nodes for representing the phenotype provides the phenotype condition in step <dig>  where the desired global attractor states for the proliferation phenotype must satisfy the constraint equations . the network with the fully-simplified update rules  is partitioned in step <dig>  concatenating the local attractors obtained from each partition yields the global attractors of the fully-simplified network in step <dig>  finally, in step <dig>  the global attractors of the original network can be found by combining the global attractors of the simplified network in step <dig> and the fixed state values of esens  and pspns 




step 2- <dig>  determine the nodes and their fixed state values for the definition of the phenotype. we consider networks with a node that is the phenotype as in  <cit> . for instance, in case that the network has the state update rule, proliferation* = p <dig> & myc & !p <dig>  the network is said to have the node for proliferation, where the symbols * and  denote the next time step and the logic operators , respectively. consistent activation of the phenotype is defined by both nodes and their fixed state values, which are referred to as “phenotype nodes and values”. for the update rule, proliferation* = p <dig> & myc & !p <dig>  the phenotype nodes are  with fixed values . therefore the desired global attractor states for the proliferation phenotype must satisfy the constraints  = . the step is described in detail in additional file  <dig> 

step 2- <dig>  insert the fixed values of the phenotype nodes into the semi-simplified update rules. after applying step 2- <dig>  we can obtain the fixed state values of some nodes, which are neither esens nor phenotype nodes and referred to as “secondary-phenotype nodes”. consequently, the semi-simplified update equations are divided into three parts. the first is the set of phenotype and secondary-phenotype nodes  with their fixed values. the second is constraint equations, which are introduced due to the constraints in step 2- <dig> and explained in s.example  <dig> in additional file  <dig>  the third is the new update rules for nodes except both esens and pspns, which are called as “the fully-simplified update rules”. the three parts are referred to as “the phenotype condition” . examples for step  <dig> are given in additional files  <dig>   <dig>   <dig>   <dig> and  <dig>  note that if update rules are defined by threshold  functions, then constraint equations are changed to constraint inequalities as in the scp network of the result section and s.remark  <dig> of additional file  <dig> 

step  <dig>  construct the hierarchical partition of the network corresponding to the fully-simplified update rules. note that this partition is for nodes except both esens and pspns not for all nodes in the original network. the partition is referred to as “the hierarchical partition for the phenotype ” as in fig.  <dig> step <dig> and this step is explained in the construction of hpfp section below. examples for step  <dig> are shown in fig.  <dig> and the result section.fig.  <dig> phenotype nodes and hpfp. arrows and blunt arrows denote activation and inhibition, respectively. dotted circles means sccs. a-b the original network has five sccs. c partition obtained from  <cit> . d the hpfp is obtained under the assumption that x
 <dig> is phenotype and  are the phenotype nodes




step 4- <dig>  find the local attractors of subnetworks in the hpfp.

step 4- <dig>  construct the global attractors of the hpfp  by sequential concatenation of the local attractors satisfying the secondary-phenotype equations. step  <dig> is explained in detail in the section of ‘how to concatenate the local attractors of subnetworks?’ and additional files  <dig> and  <dig> 

step  <dig>  combine the global attractors of the hpfp with fixed values of esens and pspns as shown in step <dig> of fig.  <dig>  after applying step  <dig>  we can obtain all the desired phenotype attractors of the original network. examples for such phenotype attractors are given in additional files  <dig>   <dig>  4-, 5- and  <dig> 




construction of hpfp
let us explain how to construct the hpfp introduced in step  <dig> above. the layers of the hpfp are referred to as categories. the first category consists of sccs with zero indegree as the scc v
 <dig>  in fig.  <dig>  the n-th category  consists of sccs satisfying two conditions: every link into sccs in the n-th category comes from nodes in the k-th categories  and sccs in the n-th category have at least one input link coming from nodes in the -th category. the hpfp is defined as the union of the hierarchical categories, each of which is also partitioned by sccs. the hpfp has a simpler structure than the partition of the original network as the hpfp is not a partition of the original network but of the network simplified by the fully-simplified update rules.

for instance, let us assume that there exists a boolean network in fig. 2a, which has five sccs in fig. 2b. applying the methods in  <cit> , the boolean network is partitioned as in fig. 2c. the goal of the partition in  <cit>  is to make a framework for finding all attractors of the original network without fixing a particular phenotype. however, we are interested in construction of other partition  for finding particular attractors which represent a phenotype of interest. for simplicity, we assume that there exist no external, secondary-external and secondary-phenotype nodes. in addition, we assume that x
 <dig> is a phenotype with the update equation x1*=f1x2x <dig> 


and that the phenotype nodes are  with one secondary-phenotype equation

0 = x
3 = f
 <dig> 

hence, the nodes x
i and the links connected to x
i are removed from fig. 2c, thus changing fig. 2c into fig. 2d. therefore, the first category of the hpfp in fig. 2d comprises v
 <dig>  = {x
 <dig>  x
 <dig>  x
 <dig>  x
9} and v
 <dig>  = {x
4}, which have a zero indegree. the sccs v
 <dig>  = {x
 <dig>  x
11} and v
 <dig>  = {x
5} in the second category are the unique sccs with links connected to the nodes in the first category. comparing the two hierarchical partitions in fig. 2c and d, we can find that the hpfp is simpler than the partition that can be obtained from previous methods  <cit> .

how to concatenate the local attractors of subnetworks in the hpfp?
let us explain, through an example, how to sequentially concatenate the local attractors of subnetworks in categories of the hpfp in fig. 3a for the construction of the global attractors of the hpfp. the algorithm for the concatenation is described in detail in additional file  <dig>  our explanation is focused on concatenation from the hpfp, so that we do not take into account the external, phenotype, secondary-external and secondary-phenotype nodes, and secondary-phenotype equations. however, when applying our approach to biological networks in the results section, these were taken into account. the hpfp is given with the fully-simplified update rules in additional file  <dig>  in the following, we describe the sequential concatenation step by step .fig.  <dig> concatenation of local attractors. a the hpfp has three categories and five sccs v
 <dig> , v
 <dig> , v
 <dig> , v
 <dig>  and v
 <dig> . each arrow denotes the change from one state to another state at the next time step. the update rules for the network in additional file  <dig>  b there exist three attractors ,  <cit>  and  <cit>  in v
 <dig> . in this figure we consider the local attractors of subnetworks in the hpfp with starting signal  generated from the two nodes x
 <dig> and x
 <dig>  c
 v
 <dig> in = {x
1} denotes the set of nodes sending input signal into the scc v
 <dig>  = {x
 <dig>  x
4}, where the input signal is  <dig>  with period  <dig> and v
 <dig>  has a unique attractor . d
 v
 <dig> in = {x
2} and v
 <dig>  = {x
 <dig>  x
 <dig>  x
7}. the input signal coming from x
 <dig> into v
 <dig>  is  <dig>   <dig> with period  <dig>  the scc v
 <dig>  has a unique attractor, which is cyclic with length  <dig>  e v <dig> 
in = {x <dig>  x <dig>  x6} and v <dig>  = {x <dig>  x9}. the input signal coming from  into v <dig>  is cyclic with period  <dig>  the scc v <dig>  has a unique attractor which is acyclic. f
 v
 <dig> 
in = {x7} and v <dig>  = {x <dig>  x11}. the input signal coming from x <dig> into v <dig>  is cyclic with period  <dig>  the scc v <dig>  has a unique attractor which is acyclic. g table for all the local attractors of subnetworks in the hpfp with the signal  in v
 <dig> . the second column denotes the local attractor  of v
 <dig>  = {x
 <dig>  x
2}, where each state in the attractor has its position denoted by the order in the first column. h sequential concatenation of the local attractors in the table. this yields the unique global attractor of the hpfp, which is cyclic with a period of  <dig> and has the local attractor 〚 <dig>  01〛 in v
 <dig> 





step  <dig>  find local attractors in the first category. there exists only one subnetwork v
 <dig>  = {x
 <dig>  x
2} in the first category as it is the unique subnetwork with no input links. then v
 <dig>  has the update rules defined by x
 <dig> and x
 <dig> in additional file  <dig>  which yield three local attractors a〈1〉 = 〚 <dig>  01〛, a〈2〉 = 〚00〛, a〈3〉 = 〚11〛 in additional file  <dig>  here the symbol 〚 <dig>  01〛 denotes a cyclic attractor of length  <dig> and 〚00〛 a point attractor in fig. 3b. in the next, we find global attractors containing the cyclic states a〈1〉 for x
 <dig> and x
 <dig>  similarly, the process for obtaining global attractors that include a〈2〉 and a〈3〉 is presented in detail in additional file  <dig> 

step  <dig>  find local attractors in the second category. there exist two subnetworks v
 <dig>  = {x
 <dig>  x
4} and v
 <dig>  = {x
 <dig>  x
 <dig>  x
7} in the second category with input signals from the first category.

step 2- <dig>  find local attractors of v
 <dig> . due to v
 <dig> in = {x
1}, the subnetwork v
 <dig>  = {x
 <dig>  x
4} gets the input signal 〚 <dig>  0〛 generated from the state values of x
 <dig> in the attractor a〈1〉. note that change of the starting value of the input signal while preserving the order  cannot affect the local attractors, which is proved in s.theorem  <dig> in additional file  <dig>  then we have a unique local attractor of v
 <dig> in ∪ v
 <dig>  = {x
 <dig>  x
 <dig>  x
4}, which is 〚 <dig>   <dig>   <dig>  010〛 in fig. 3c and additional file  <dig>  therefore, the local attractor of v
 <dig>  = {x
 <dig>  x
4} becomes 〚 <dig>   <dig>   <dig>  10〛 in fig. 3g.

step 2- <dig>  find local attractors of v
 <dig> . as in step 2- <dig>  using the update rules for v
 <dig>  = {x
 <dig>  x
 <dig>  x
7} with the input signal 〚 <dig>  1〛 generated from v
 <dig> in = {x
2}, we have a unique local attractor of v
 <dig> in ∪ v
 <dig> , which is 〚 <dig>   <dig>   <dig>   <dig>   <dig>  1001〛 in fig. 3d and additional file  <dig>  therefore the local attractor of v
 <dig>  = {x
 <dig>  x
 <dig>  x
7} becomes 〚 <dig>   <dig>   <dig>   <dig>   <dig>  001〛 in fig. 3g.

step  <dig>  find local attractors in the last category. there exist two subnetworks v
 <dig>  = {x
 <dig>  x
9} and v
 <dig>  = {x
 <dig>  x
11} in the last category with input signals from the first and second categories.

step 3- <dig>  find local attractors of v
 <dig> . using the update rules for v
 <dig>  = {x
 <dig>  x
9} with the input signal 〚 <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  010〛 from v
 <dig> in = {x
 <dig>  x
 <dig>  x
6}, we have a unique attractor of v
 <dig> in ∪ v
 <dig> , which is cyclic with length  <dig>  <dig> , <dig> , <dig> , <dig> , <dig> , <dig>  


in fig. 3e and additional file  <dig>  therefore the local attractor of v
 <dig>  = {x
 <dig>  x
9} becomes 〚00〛 in fig. 3g.

step 3- <dig>  local attractors of v
 <dig> . using the update rules for v
 <dig>  = {x
 <dig>  x
11} with the input signal 〚 <dig>   <dig>   <dig>   <dig>   <dig>  1〛 from v
 <dig> in = {x
7}, we have a unique attractor of v
 <dig> in ∪ v
 <dig> , which is 〚 <dig>   <dig>   <dig>   <dig>   <dig>  100〛 in fig. 3f and additional file  <dig>  therefore the local attractor of v
 <dig>  = {x
 <dig>  x
11} becomes 〚00〛 in fig. 3g and additional file  <dig> 

step  <dig>  construct the table with all the local attractors obtained from a〈1〉. we construct the table in fig. 3g, in which the first column denotes the order of states of each local attractor in the second column to the sixth column. the second column denotes the local attractor 〚 <dig>  01〛 of v
 <dig>  = {x
 <dig>  x
2}. even though there are no states in the cells of the second column from the order  <dig>  the second column is considered to be filled with states  <dig> and  <dig> with a period of  <dig>  for instance, the states in the 3rd and 4th cells are  <dig> and  <dig>  respectively. similarly, the third column is filled with states  <dig>   <dig>   <dig> and  <dig> with a period of  <dig>  repeating this process completes the table.

step  <dig>  construct the global attractor from the table. the concatenation of states in the i-th row of the table becomes the i-th state of the global attractor of the hpfp. therefore, concatenating states from cells of the table in a row yields the unique global attractor of the hpfp with a period of  <dig>  where the period is the least common multiple of periods of the five local attractors:  <dig>   <dig>   <dig>   <dig> and  <dig> 

finally, we obtain the unique global attractor by sequentially concatenating the local attractors that include the local attractor a〈1〉 in fig. 3h and additional file  <dig>  and confirm that the concatenated states become the global attractor by applying the original update rules in additional file  <dig> 

RESULTS
to demonstrate the effectiveness of our framework in practice, we applied our method to three biological network models for finding attractors responsible for proliferation or apoptosis phenotypes: the first was a mitogen-activated protein kinase  model  <cit>  with  <dig> nodes and  <dig> links, the second was a colitis-associated colon cancer  model  <cit>  with  <dig> nodes and  <dig> links and the last was the simplified cancer pathways  model  <cit>  with  <dig> nodes and  <dig> links. in general, boolean update rules are classified into two types: one is defined with logic functions and the other with threshold functions. the mapk and cacc networks have update rules that correspond to the first type. the scp network has update rules corresponding to the second type.

mapk network
the mapk model has four stimuli  and three phenotypes  as in fig.  <dig>  the cascades in the mapk network are strongly interconnected and the maximum number of nodes of the sccs in the network is  <dig> as shown in additional files  <dig> and . therefore, due to computational complexity, the previous methods  <cit>  based on sccs is not useful for this mapk network.fig.  <dig> mapk network. the network denotes a mitogen-activated protein kinase  network with  <dig> nodes and  <dig> links in  <cit> . the pink and blue nodes denote stimuli and phenotypes, respectively




proliferation attractors of the mapk network
in order to find global attractors for proliferation of the mapk network, we used the same simulation condition r <dig> in s <dig> dataset of  <cit> : erk perturbation with setting the values of the four stimuli to zero. inserting the fixed values  =  of the external nodes into the update rules for the mapk network in additional file  <dig>  we found the external condition: the external, secondary-external nodes  and the semi-simplified update rules for nodes except esens in additional file  <dig>  due to the update rule, proliferation* = p <dig> & myc & !p <dig>  inserting the phenotype values  =  of the phenotype nodes into the semi-simplified update rules, we found the phenotype condition: the phenotype and secondary-phenotype nodes , the fully-simplified update rules for  <dig> nodes and the two secondary-phenotype equations max|akt= <dig> !akt&p53= <dig> in additional file  <dig>  the fully-simplified update rules yield the hpfp for proliferation in fig.  <dig> where the hpfp has  <dig> categories and the sccs has four nodes at most whereas the scc in the original network has  <dig> nodes. the yellow boxes on the three nodes p <dig>  max, akt in fig.  <dig> denote the nodes included in the two secondary-phenotype equations, where the three nodes are referred to as “the equation nodes”.fig.  <dig> simplified mapk network for proliferation attractors. when finding attractors for proliferation in the mapk model, the original update rules for mapk network is divided into two parts. the first is fixed state values of esens and pspns. the second is the simplified update rules for nodes  except both esens and pspns. the network in this figure is the hierarchically partitioned network with the simplified update rules for the nodes n. there exist only two sccs v
 <dig>  and v
 <dig>  that have more than one node. the nodes in v
 <dig>  and v
 <dig>  are colored with green and red, respectively. the yellow boxes denote the nodes used in the constraint equations 




the sccs with more than one node in the hpfp are v
 <dig>  = {grb <dig>  pkc, egfr, plcg} and v
 <dig>  = {p <dig>  p <dig>  gadd <dig>  mtk1}. the fully-simplified update rules for  yield that v
 <dig>  has the unique attractor 〚 <dig>   <dig>   <dig>   <dig>  1101〛 in additional file  <dig>  where the computing time was  <dig>  s by using a pc with  <dig> ghz cpu and 32g ram. the signal coming from {plcg} in v
 <dig>  is transmitted to v
 <dig>  = {ras} with the formula ras* = plcg and the signal from {ras} becomes the input signal to v
 <dig>  = {map3k1_3} with map3k1_3* = ras. as a result, v
 <dig>  has a unique attractor 〚 <dig>   <dig>   <dig>   <dig>  0〛. the unique input signal from {map3k1_2} to v
 <dig>  yields a unique attractor of v
 <dig> , which is the point attractor 〚0000〛 for  in additional file  <dig>  in this case, the computing time was  <dig>  s. inserting the state values of the point attractor into the fully-simplified update rules in additional file  <dig>  we have pten*=p53= <dig> akt*=!pten= <dig> max*=p38= <dig>  and then max|akt= <dig> !akt&p53= <dig>  


hence the secondary-phenotype equations were satisfied for the local attractors of the seven subnetworks


v
i, <dig>  v
 <dig>  = {pten}, v
 <dig>  = {max}, v
 <dig>  = {akt}.

note that the remaining eight subnetworks in fig.  <dig> do not affect the states of the equation nodes . therefore, we can construct the table in fig. 3g and found a unique global attractor for proliferation, which is cyclic with a period of  <dig> in additional file  <dig>  we confirmed that the set of cyclic states becomes a global attractor of the original network by applying the original update rules in additional file  <dig> 

apoptosis attractors of the mapk network
to find global attractors for apoptosis phenotype in the mapk network, we used the simulation condition r <dig> in s <dig> dataset of  <cit> , which is fgfr <dig> perturbation with setting the values of the four stimuli to zero. the fully-simplified update rules yield the hpfp for apoptosis in fig.  <dig>  where the hpfp has  <dig> categories and each scc has two nodes at most. we obtained a unique global attractor for apoptosis, which is cyclic with a period of  <dig> in additional files  <dig> and  <dig> fig.  <dig> simplified mapk network for apoptosis attractors. when finding attractors for apoptosis in the mapk model, the original update rules for mapk network is divided into two parts. the first is fixed state values of esens and pspns. the second is the simplified update rules for nodes  except both esens and pspns. the network in this figure is the hierarchically partitioned network for the nodes n with the simplified update rules. there exist only two sccs v
 <dig>  and v
 <dig>  that have more than one node. the nodes in v
 <dig>  and v
 <dig>  are colored with green and red, respectively. in this case there exist no constraints, so that there are no yellow boxes as in fig. 5





cacc network
the cacc model has one input  and two phenotypes  as in fig.  <dig>  the cacc network model is strongly interconnected with the maximum number of nodes of the scc in the network is  <dig>  as described in additional file  <dig> and .fig.  <dig> cacc network. the network denotes a colitis-associated colon cancer  network with  <dig> nodes and  <dig> links in  <cit> . the pink circle denotes the input node, the adenomatous polyposis coli  protein that represents premalignant intestinal epithelial cells when consistently activated. the cyan nodes denote phenotypes




proliferation attractors of the cacc network
under the strong tumour-promoting microenvironment  for premalignant intestinal epithelial cells  as in  <cit> , we applied the proposed method to find global attractors for proliferation in the cacc network with the update rules in additional file  <dig>  inserting the external values  =  of the external nodes into the cacc update rules in additional file  <dig>  we found the external condition: the external and secondary-external nodes  and the semi-simplified update rules for nodes except esens in additional file  <dig>  due to proliferation* =  & ! with the secondary-external value fos =  <dig>  inserting the values  =  into the semi-simplified update rules, we found the phenotype condition: the phenotype, secondary-phenotype nodes , the fully-simplified update rules for three nodes  and no secondary-phenotype equation in additional file  <dig>  the fully-simplified update rules yield the hpfp for proliferation in fig.  <dig> and the hpfp has one category with one scc v
 <dig> , which has three nodes. the fully-simplified update rules for the three nodes  yield that v
 <dig>  has two attractorsfig.  <dig> simplified cacc network for proliferation attractors. the network denotes the simplified cacc network for nodes except esens and pspns with the simplified update rules when finding attractors for proliferation in the cacc model


fig.  <dig> simplified cacc network for apoptosis attractors. when finding attractors for apoptosis in the cacc model, the network denotes the hierarchically partitioned cacc network for nodes except esens and pspns with the simplified update rules. there exist four sccs with more than one node, which are represented with different colors:v
 <dig>  = {ifng, ctl}, v
 <dig>  = {socs, jak, stat3}, v
 <dig>  = {ccl <dig>  mac, tnfa, tnfr, ikk, ikb, nfkb}and v
 <dig>  = {p <dig>  pten}. the yellow boxes denote the nodes used in the constraint equations & =  <dig>  casp8|casp9 = 1)


  <dig> , <dig> , <dig> , <dig>  in additional file  <dig>  therefore we found two global attractors for proliferation in additional file  <dig> and , which are confirmed by applying the cacc update rules in additional file  <dig> and .

apoptosis attractors of the cacc network
under the same condition for proliferation attractors of the cacc network above, the fully-simplified update rules yield the hpfp for apoptosis in fig.  <dig>  we applied our method to the cacc network and found that there exists no global attractor for apoptosis in the cacc network in additional files  <dig> and  <dig>  since the simulation condition  =  denotes the strong tumour-promoting microenvironment  for premalignant intestinal epithelial cells , the non-existence of global attractors for apoptosis can be expected.

scp network
the simplified cancer pathway model has six inputs  and one phenotype  as shown in fig.  <dig>  the cascades in the original network are strongly interconnected with the maximum number of nodes of the scc is  <dig>  as described in additional file  <dig> and . the state vector  =  describes the normoxic microenvironment with the plenty of nutrients and growth factors  <cit> .fig.  <dig> scp network. the network denotes a simplified cancer pathways  network with  <dig> nodes and  <dig> links in  <cit> . the pink and cyan nodes denote input and apoptosis phenotype, respectively




we considered the apoptosis phenotype under the same microenvironment in  <cit> . inserting the external values  =  into the scp update rules in additional file  <dig>  we found the external condition: the external, secondary-external nodes  and the semi-simplified update rules for nodes except esens in additional file  <dig>  the secondary-external value caspase8 =  <dig> yields apoptosis*=sgncaspase8+caspase9=sgncaspase <dig>  


note that apoptosis = <dig> if and only if caspase9 =  <dig>  which is also equivalent to  =  and the constraint inequality 0 < -akt + p53-bcl_2-bcl_xl since caspase9* = cytoc/apaf <dig> and cytoc/apaf1* = sgn. as a result of the external condition, the set of esens satisfies the constraint inequality and becomes the set of all nodes in the scp network in additional file  <dig>  then there are no pspns, no secondary-phenotype inequalities and no fully-simplified update rules.

therefore the vector of the fixed values of the  <dig> nodes  is the unique attractor for apoptosis under the microenvironment. we confirmed that the concatenated state vector becomes the global attractor by applying the scp update rules to additional file  <dig> 

resolving the two problems: large size and strong interconnection
we summarized in table  <dig> the aforementioned results obtained for the mapk, cacc and scp networks. the three biological networks have a large number of nodes that are strongly interconnected. the first two networks have nodes for representing proliferation and apoptosis phenotypes, but the last has a node for only apoptosis.table  <dig> the symbol #a denotes the number of a. and the symbol max #nodes in sccs denotes the maximum of the numbers of nodes in strongly connected components




the column with the title #external and phenotype nodes in table  <dig> shows that the number of nodes for a given external environment and a phenotype of interest are independent of the size and degree of interconnection. we found that the number of sccs in the hpfp is approximately proportional to the number of categories as the number of categories gets increased. even if the original networks are strongly interconnected and the number of categories and that of sccs in the hpfp are high, the number of nodes in sccs in the hpfp is small enough such that full search of the state space can be performed to find local attractors and therefore we can find global attractors for the phenotype in the original networks by concatenating the local attractors.

in particular, in the case of the scp network, the set of esens becomes the set of all the  <dig> nodes in the scp network with no secondary-phenotype inequalities, which explains why the number of categories, that of sccs and the maximum are all zero in table  <dig>  the scp network does not include a node for proliferation, thus we could not find attractors for proliferation phenotype.

comparison of our method with the reduction and random sampling methods
previous methods based on sccs for finding all global attractors cannot be applied to the three networks in table  <dig> due to the large size of networks. to deal with such a problem, two methods are usually used: reduction method and random sampling method, which were compared with our method for the mapk, cacc and scp networks.

under the condition r <dig> in s <dig> dataset of  <cit>  used in the proliferation attractors of the mapk network section, the reduction method yields two attractors for proliferation phenotype, which are cyclic with a period of  <dig> in s <dig> dataset of  <cit> . however, we found that the mapk update rules under the same condition result in the unique attractor for proliferation, which is cyclic with a period of  <dig> in additional file  <dig>  such different results show that the reduced network obtained by the reduction method does not preserve the attractors of the original network, even though the periodic property of attractors is preserved. in addition, under the condition r <dig> in s <dig> dataset of  <cit> , such difference was also found between s <dig> dataset of  <cit>  and additional file  <dig> 

reduced update rules are given for a reduced cacc network in  <cit>  and we used the update rules to find attractors for proliferation of the reduced cacc network in additional file  <dig>  we compared the proliferation attractors obtained by the reduced update rules with the proliferation attractors obtained from the original cacc network by using the proposed method. as a result, we did not find such a difference between s <dig> dataset of  <cit>  and additional file  <dig>  however, the reduced method has a disadvantage that the attractors obtained by reduced update rules for reduced networks do not have the information on states of all nodes in the original networks.

under the condition  =  in s <dig> dataset of  <cit> , the random sampling method and our method yield a unique attractor for apoptosis phenotype, which is a fixed point attractor in s <dig> dataset of  <cit>  and additional file  <dig>  even though a random sampling method  can provide an estimate of global attractors of large-size networks while compromising the computational complexity, such an approximation cannot guarantee to find all global attractors for a phenotype of interest. however, our method can always guarantee the full search result even for a large network.

validation of the proposed algorithm
to show that all attractors in a given network can be found by applying our method, we applied our method to two boolean networks with known attractors. the first network is shown in fig. 3a and it has  <dig> nodes with the update rules in additional file  <dig>  where the network has neither input nor output nodes. this network is suitable for the validation of concatenating local attractors obtained from hpfp without considering esens and pspns. by applying a full search algorithm to this network, we could find all attractors and, as a result, we confirmed that these attractors are exactly the same as we found by applying our method .

for the validation of pspns as well as the concatenation, the second network is adopted from  <cit>  and it has  <dig> nodes. this network has two cyclic attractors of length  <dig> and  <dig>  both representing cell proliferation, as shown in fig. 3c and supplementary table s <dig> in  <cit> . to find out all attractors representing cell proliferation in this network model, we have applied our method to this network and could obtain the same attractors , as shown in fig. 3c and supplementary table s <dig> in  <cit> .

discussion
previous approaches of partitioning a large boolean network model to resolve the computational complexity issue preserve the regulatory links of the original network to identify all the attractor states from the partitioned network. the primary point we noticed is that we have to simplify the state update rules and reduce the regulatory links to obtain small subnetworks of practically computable size. for this purpose, we focused only on a set of attractors for a particular phenotype of interest and developed a novel algorithm that can efficiently find out the attractor states from the hierarchically partitioned subnetworks obtained by simplifying the state update rules and replacing some regulatory links with constraint equations while preserving the particular attractor states. in contrast with the previous approaches, the proposed approach can result in small and simplified subnetworks of computable size. an important point is that we can always find out all the attractors corresponding to the phenotype of interest in the original large network by sequentially concatenating the local attractors that are obtained from the hierarchically partitioned subnetworks.

the limitation of our approach is that we cannot find out all attractors at the same time using this approach. however, in many practical case studies, only a few particular phenotypes are of interest and therefore, by applying the proposed approach to each particular phenotype, we can find out all attractor states of interest. another limitation is that our approach is based on synchronous update rules, so it is currently not applicable to the boolean network models based on asynchronous update rules. this remains as a future study.

from the case studies where we applied our approach to the three large biological network examples as well as small and medium size networks , we found that the resulting subnetworks  are composed of seven nodes at most. of course, we cannot guarantee such a small size subnetwork in all cases, but we can always obtain much smaller subnetworks compared to previous approaches since our approach simplifies the state update rules in a practical way. moreover, we can further reduce the subnetwork size if any other biological information on the molecular state of a node in the converging phenotypic feature is available. as there are many other biological networks that are different from the networks employed in this study, it remains as a future study to further investigate the power of our method by using extensive simulation-based analysis of synthetic networks with respect to various topological properties such as different size, level of interconnections, etc.

when we hierarchically partition a network, we simplify the state update rules by considering the fixed state values of marker nodes in the attractor states. as a result, the state space after the hierarchical partitioning becomes a subset of the state space of the original network. so, we cannot measure the basin of attraction to the particular phenotype of the original network in our framework. however, some modification of our framework might be able to resolve the problem. this also remains as a future study.

CONCLUSIONS
although boolean network modeling is becoming popular in modeling large-scale biological regulatory networks, looking for attractors for converging state analysis is still challenging for large networks due to computational complexity. there have been some attempts to resolve this problem by partitioning the large network into smaller subnetworks and reconstructing the global attractors by concatenating the local attractors obtained from each subnetwork, but the resultant subnetworks were still too large in most cases and therefore not much useful in practice. so, in this study, we have developed a novel approach of identifying a set of global attractors for a particular phenotype of interest by hierarchically partitioning the original large network such that the resulting subnetworks are small enough to guarantee that the full search of the local attractors of them is possible. we have applied the proposed method to several biological networks and confirmed its usefulness.

throughout the hierarchical partitioning, we can obtain the hierarchical partitioned structure of the original network with the fixed state values of some nodes. such structural information on the network might be also useful in identifying certain target nodes to control the phenotypic behavior of a biological network. for instance, we can use this information to find out control target nodes, the perturbation of which results in preventing the convergence of the dynamical network state to the particular attractor state of interest. this is an important subject for a future study.

additional files

additional file 1: definition of external and phenotype nodes. 


additional file 2: attractors for proliferation in the mitogen-activated protein kinase  model. 


additional file 3: attractors for apoptosis in the mitogen-activated protein kinase  model. 


additional file 4: attractors for proliferation in the colitis-associated colon cancer  model. 


additional file 5: attractors for apoptosis in the colitis-associated colon cancer  model. 


additional file 6: attractors for apoptosis in the simplified cancer pathways  model. 


additional file 7: example of how to find the phenotype attractors in hpfp. 


additional file 8: explanation of how to concatenate the local attractors of subnetworks in the hpfp. 


additional file 9: attractors for apoptosis in the mapk network. 


additional file 10: attractors for apoptosis in the cacc network. 


additional file 11: attractors for proliferation in the reduced cacc model. 


additional file 12: validation of the proposed algorithm for two small and medium networks. 


additional file 13: attractor in the logical t-cell signaling model. 




abbreviations
cacccolitis-associated colon cancer

esensexternal and secondary-external nodes

hpfpthe hierarchical partition for the phenotype

mapkmitogen-activated protein kinase

pspnsphenotype and secondary-phenotype nodes

sccstrongly connected component

scpsimplified cancer pathways

we thank sang-min park for his help in developing the programming code of finding attractors and also je-hoon song for his help in preparing the figures.

funding
this work was supported by the national research foundation of korea  grants funded by the korea government, the ministry of science, and ict & future planning . it was also supported by a grant of the korean health technology r&d project, ministry of health and welfare, republic of korea , the kustar-kaist institute, kaist, korea, and the kaist future systems healthcare project from the ministry of science, ict and future planning.

availability of data and materials
the data supporting the results of this article are included and cited within the article and its additional files.

authors’ contributions
conceived and designed the experiments: s-mc and k-hc. performed the experiments: s-mc analyzed the data: s-mc and k-hc. wrote the paper: s-mc and k-hc. both authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
