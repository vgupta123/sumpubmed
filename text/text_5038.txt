BACKGROUND
an important intermediate step in modeling the three-dimensional structure of a protein is to accurately predict its secondary structures  <cit> . most often, the secondary structures are classified into three general states, i.e., helices , strands , and coils . correspondingly, success of secondary structure prediction is typically measured by the q <dig>  accuracy. many machine learning methods, including statistics analysis, neural networks, hidden markov chain, support vector machines, have been developed to predict secondary structures. correspondingly, there are many secondary structure prediction servers available, including gor <dig>  <cit> , psi-pred  <cit> , phd  <cit> , sam  <cit> , porter  <cit> , jpred  <cit> , spine  <cit> , sspro  <cit> , netsurf  <cit> , and many others. the modern secondary structure prediction servers can generate prediction results with close to 80% q <dig> accuracy.

compared to the general three secondary structure states, the dssp program  <cit>  has more detailed classifications by assigning secondary structures to eight states, including 3- <dig> helix , α-helix , π-helix , β-stand , bridge , turn , bend , and others . the 8-state secondary structures convey more precise structural information than 3-state, which is particularly important for a variety of applications. for example, accurate 8-state secondary structures predictions can restrict the variations of backbone dihedral angles within a small range according to the ramachandran plots  <cit>  and thus reduce the search space in template-free protein tertiary structure modeling. moreover, differentiations among 3- <dig> helix, α-helix, and π-helix in secondary structure prediction aid to assign residues and fit protein structure models in cryo-electron microscopy density maps  <cit> . unfortunately, most of the secondary structure prediction software packages or servers only provide 3-state predictions.

to the best of our knowledge, very few methods have been developed for the 8-state secondary structure prediction. pollastri et al.  <cit>  extended their 3-state prediction method to sspro <dig> for 8-state secondary structure prediction. the reported q <dig> accuracy of sspro <dig> is 62-63%  <cit> . a more recent prediction method of the 8-state, raptorxss <dig>  developed by wang et al  <cit> , has reported  <dig> % q <dig> accuracy through the use of conditional neural field  models. table  <dig> shows the prediction accuracy of raptorxss <dig> on several popularly used secondary structure prediction benchmarks, including cb <dig>  casp <dig>  manesh <dig>  and carugo <dig>  although nearly 70% q <dig> accuracy is achieved, the prediction accuracies of different states vary significantly. in particular, the prediction accuracy of g, i, b, and s are very low, mainly due to the fact of their relatively infrequent appearance in protein data banks , whose distribution is shown in figure  <dig>  the low prediction accuracies in these states limit the application of 8-state secondary structure prediction in practice.

prediction accuracies for 3- <dig> helices , π-helices , β-bridges , and bends  are particularly low due to their low appearance frequencies.

most current secondary structure perdition methods do not rely on similarity to known protein structures; in other words, these methods are de novo, where the secondary structure prediction is based on sequence information only. however, we cannot neglect the fact that many protein sequences have some degree of similarity among themselves. actually, over half of all known protein sequences have some detectable similarity  to one or more sequences of known structures  <cit> . around 75% was reported as the percentage of those newly deposited protein structures in the pdb database showing significant similarity to previous deposited structures. consequently, taking advantage of structural similarity of proteins with sequence similarity may lead to significant improvement of protein structure prediction. in fact, the latest version of porter  <cit>  has used homology-based templates for 3-state secondary structure prediction  <cit> . porter has been reported to achieve prediction accuracy improvement when known structures with >30% sequence similarity are available and even reach theoretical upper bound of secondary structure prediction when such sequence similarity is higher than 50%.

in this paper, we investigate the template-based method for 8-state secondary structure prediction. we extract structural information from known structures of chains with certain sequence similarity to build structural templates. then, the structural information contained in the templates is incorporated  together with sequence and evolutionary information for neural network training and validation.

in the case where structural information from the structural template is not available for a residue, context-based scores estimating the favorability of that residue adopting a secondary structure conformation in the presence of its neighbors in sequence are used instead. the fundamental idea of the context-based scores is based on the fact that the formation of secondary structure exhibit strong local dependency, particularly, residues in a protein sequence are strongly correlated in different sequence positions in coils, β-sheets,  <dig> helices, α-helices, and π-helices. we extract statistics to derive context-based scores from a large training data set. these context-based scores are then incorporated as sequence-structure features together with sequence, template, and evolutionary information in neural network training process for 8-state secondary structure prediction.

we test our template-based 8-state prediction method on several popularly used benchmarks including cb <dig>  manesh <dig>  and carugo <dig> as well as the casp <dig> targets. the prediction accuracies for the eight states are analyzed.

methods
the protein data sets
we use the protein chain dataset cull <dig> generated by the pisces server  <cit>  on 10/21/ <dig> for neural network training and cull <dig> for context-based scores generation. cull <dig> contains  <dig>  protein chains with at most 25% sequence identity and  <dig> a resolution cutoff, and cull <dig> contains  <dig>  protein chains with at most 50% sequence identity and  <dig> a resolution cutoff. we eliminate very short chains, whose lengths are less than  <dig> residues, since the psi-blast program  <cit>  is usually unable to generate profiles for very short sequences, and very large chains whose lengths are greater than  <dig>  residues. we also eliminate residue samples with undetermined secondary structures.

public benchmarks, including cb <dig>  <cit> , manesh <dig>  <cit> , carugo <dig>  <cit> , and the recent casp <dig> targets  <cit> , that are popularly employed as benchmarks for 3-state secondary structure predictions, are used to benchmark our method in 8-state predictions.

template construction
encoding
we use a window size of  <dig> residues for input encodings. each residue is represented with  <dig> values from the pssm  data,  <dig> extra input to indicate if the residue window overlaps c- or n-terminal,  <dig> value for degree of similarity, and  <dig> values for structural information from template or context-based secondary structure scores  <cit> . hence, a total number of  <dig> values are used to describe each residue

context-based scores
the types and conformations of nearby residues play a critical role in secondary structure conformation that a residue may adopt  <cit> . in particular, the hydrogen bonds between residues at positions i and i +  <dig>  i and i +  <dig>  and i and i +  <dig> lead to the formation of 3-10-helices, α-helices, and π-helices, respectively. residues in contacting parallel or anti-parallel β-sheets are connected by hydrogen bonds in alternative positions. moreover, the formation of interactions within coils beyond nearest neighbors appears not to contribute with statistical significance in determining coil structure  <cit> . hence, correlations among residues provide significant information in predicting secondary structure.

in this method, we will extract statistics of singlets , doublets , and triplets  residues at different relative positions from protein sequences in cull <dig> dataset. these statistics represent estimations of the probabilities of residues adopting a specific structural state when none, one, or two of their neighbors in context are taken into consideration, respectively.

the observed probabilities of the ith residue ri in a singlet , doublet , and triplet  adopting a specific structural state ci are respectively estimated by

 pobsci|ri=nobsnobs, 

 pobsci|riri+k=nobsnobs,and 

 pobsci|riri+k1ri+k2=nobsnobs. 

here nobs, nobs, and nobs are the weighted observed number of singlet , doublet , and triplet  with ri adopting conformation ci in the protein structure database. nobs, nobs, and nobs are the weighted observed number of singlets, doublets, and triplets. the observed numbers will be calculated as

 nobs= ∑protein ∑jpssmjri, 

 nobs= ∑protein ∑jpssmjri*pssmjri+k, 

 nobs= ∑protein ∑jpssmjri*pssmjri+k1*pssmjri+k <dig>  

 nobs= ∑protein ∑jcj=cipssmjri, 

 nobs= ∑protein ∑jcj=cipssmjri*pssmjri+k,and 

 nobs= ∑protein ∑jcj=cipssmjri*pssmjri+k1*pssmjri+k <dig>  

where pssmjri is the pssm frequency for residue type ri at the jth position of a protein sequence.

correspondently, the context-dependent pseudo-potentials are generated using the derived statistics of correlations between each residue and its nearby neighbors based on sippl's potentials of mean force method  <cit> . according to the inverse-boltzmann theorem, we calculate the mean-force potential usingletri,ci for a singlet residue ri adopting structural state ci,

 usingletci,ri=-rtlnpobsci|riprefci|ri. 

here r is gas constant, t is temperature, and prefci|ri is the referenced probability. in our method, we will employ the conditional probability approach described in  <cit>  to estimate the referenced probability by

 prefci|ri= ∑jcj=cinobs/ ∑jnobs. 

similarly, the mean-force potentials udoubletci,riri+k and utripletci,riri+k1ri+k <dig> for residue adopting structural state are

 udoubletci,riri+k=-rtlnpobsci|riri+kprefci|riprefci|riri+kpobsci|ri 

and

 utripletci,riri+k1ri+k2=-rtlnpobsci|riri+k1ri+k2prefci|riri+k2prefci|riri+k1pobsci|riprefci|riri+k1ri+k2pobsci|riri+k2pobsci|riri+k1prefci|ri, 

with the corresponding referenced probabilities,

 prefci|riri+k= ∑jcj=cirj+k=ri+knobs/ ∑jnobs, 

and

 prefci|riri+k1ri+k2= ∑jcj=cirj+k1=ri+k1rj+k2=ri+k2nobs/ ∑jnobs, 

respectively.

then, the context-dependent pseudo-potential for ri will be

 uci,ri=usingletci,ri+ ∑kudoubletci,riri+k+ ∑k <dig> k2utripletci,riri+k1ri+k <dig>  

these pseudo-potentials are incorporated as context-based scores representing sequence-structure features in neural network training when structural information from templates is not available.

neural network model
we incorporate two phases of standard feed-forward neural network training for the 8-state secondary structure prediction. the first phase is the primary sequence-structure prediction and the second phase is the structure-structure refinement. the numbers of hidden nodes in the first and second networks are  <dig> and  <dig>  respectively. figure  <dig> shows the encoding diagram and the two-phase neural network architecture. each neural network is trained to predict the secondary structure state of a residue in the middle of the residue window.

performance measures
the prediction accuracy is calculated as the average of the seven prediction scores. we use both q <dig> and sov <dig>  scores to measure the qualities of our 8-state secondary structure predictions.

n-fold cross validation
to obtain a reliable estimate of the 8-state secondary structure prediction accuracy, we use 7-fold cross validation on cull <dig>  we randomly divide the chains in cull <dig> into  <dig> subsets with approximately the same size, such that five subsets are used for training, one for testing, and one for validation.

RESULTS
upon the selection of the best alignment with similarity less than 95% for all protein chains in the cull <dig> dataset, the final q <dig> seven-fold cross validated accuracy after applying the template-based 8-state prediction reaches  <dig> %. table  <dig> lists the q <dig> and sov <dig> accuracies of 7-fold cross validation for each state.

discussion
as shown in table  <dig>  the prediction accuracies for different states vary largely due to the very unbalanced appearing frequencies of the eight states in protein structures. in this paper, we are particularly interested in the effectiveness of structural templates in improving the prediction accuracies of those states with low accuracy in prediction without templates. from cull <dig>  we create five subsets of chains that have structural templates with similarity level in intervals of , , , , and , respectively. then, 7-fold neural network trainings are carried out for each subset and the average cross validation prediction accuracy for each state is reported in table  <dig> 


CONCLUSIONS
we describe a template-based approach to enhance 8-state secondary structure prediction accuracy in this paper. our computational results show that the secondary structure templates, even obtained from sequence with only 20%~30% sequence similarity, can help improve the 8-state prediction accuracy. overall,  <dig> % q <dig> accuracy and  <dig> % sov <dig> accuracy are achieved in 7-fold cross validation. the effectiveness of using structural information in templates has been demonstrated on popular benchmarks including cb <dig>  casp <dig>  manesh <dig>  and carugo <dig>  more importantly, when good templates are available, the prediction accuracy of less frequent secondary structure states, such as 3- <dig> helices, turns, and bends, are highly improved, which are suitable for practical use in applications.

a webserver  implementing 8-state secondary structure prediction is currently available at http://hpcr.cs.odu.edu/c8scorpion.

competing interests
the authors declare that they have no competing interests.

authors' contributions
yl conceived the context-based scoring method. ay implemented the method and carried out the computation. ay and yl performed the result analysis. both authors read and approved the final manuscript.

declarations
publication charges for this work were funded by nsf grant  <dig> to yl.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2014: selected articles from the third ieee international conference on computational advances in bio and medical sciences : bioinformatics. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/15/s <dig> 
