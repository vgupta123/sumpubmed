BACKGROUND
in this era of explosive genomics development and next-generation sequencing  data, genome-wide association study  is central to characterizing complex traits and diseases  <cit> . however, the vast majority of genetic variants associated with complex traits identified by current gwas approaches explain only a small amount of the overall variance of these traits in the underlying population  <cit> . some of the reasons for this have been extensively studied, including trait identity problems, sample collection, population resampling and epigenetic variation  <cit> . from the perspective of computational methodology, one prominent limitation of widely used methods is due to the fact that gwas usually analyzes one single nucleotide polymorphism  at a time  <cit> . admittedly, the single-snp approach is useful and  computationally efficient . however, this approach does not account for collective effects among snps  indicating a phenotype or a disease  <cit> . in genetics, these effects arise from the phenomenon epistasis, where the expression or effect of one gene depends on the presence of one or more other genes  <cit> . the roles of snp interactions have been widely acknowledged in the research community. hence, a number of computational methods for detecting snp interactions have been developed in recent years  <cit> . these detected snp interactions often illustrate epistasis interactions that better explain the phenotype from the genotype  <cit> .

the major challenge in snp interaction detection using the whole genome-scale data is computing time  <cit> . it may not be feasible to enumerate all possible two-order interactions in whole genomic scale with typical computational resources, let alone calculating high-order snp interactions  across the whole genome. even with improved computational strategies and resources, multiple testing in computing is likely more problematic. researchers have developed several methods to address this issue in detecting and exploring snp interactions  <cit> . briefly, these methods use four strategies: exhaustive search, heuristic search, sampling, and two-stage search. this exhaustive search strategy examines all possible snp interactions to make sure that no candidates are missing, which is extremely costly in computational time. plink  <cit> , uses a classic logistic regression and odds-ratio contrast to infer epistasis, which provides a baseline of snp interaction detection. boost presents data in the boolean format and conducts boolean computation to speed up the search process  <cit> . the heuristic search, e.g. edcf  <cit>  sets several rules to prune the search space, which consumes less time than the exhaustive search, but may lose some true snp interactions. the sampling strategy applies statistics-based sampling processes to avoid the brute-force search. beam uses markov chain monte carlo  in bayesian partition to infer high-order interactions in case–control data  <cit> , then its following version beam <dig> incorporates linkage disequilibrium  information into bayesian partition  <cit> . the two-stage search strategy separates the two search processes by first filtering out candidates and then identifying interactions, such as snpharvester  <cit>  and trm  <cit> .

although there are multiple methods for snp-interaction detections, several challenges still remain open to conquest:high-order  snp interaction is rarely handled. given the extremely high computational cost in high-order snp interaction detection in gwas  <cit> , nearly all the existing methods ignore high-order epistasis, which are highly important in many cases  <cit> , especially in quantitative trait analysis  <cit> . it was demonstrated that high-order epistasis is critical in metabolic networks in yeast  <cit>  and e. coli  <cit> . specific interactions have uncovered two-gene to four-gene interactions showing differential pleiotropic effects on branching and flowering in arabidopsis  <cit> , which cannot be easily detected by standard two-way tests.

 continuous traits in genotype-phenotype relationships. nearly all the existing computational methods are designed for categorical phenotypes in case–control gwas analysis. to our knowledge, no other existing methods can effectively handle high-order interactions in continuous traits.



to address these issues, we developed the bayesian high-order interaction toolkit , a novel bayesian partition computational method and tool for detecting snp interactions. the proposed approach first builds a bayesian model on both continuous data and discrete data, and then extends the model to partition multiple-phenotype data. when compared with other methods on both simulation data and real data, the key strengths of our developed approach are as follows:  with the advanced bayesian model using mcmc search, bhit can efficiently explore high-order interactions.  bhit can handle both continuous and discrete phenotypes, and the interaction within or between phenotypes and genetic data can also be detected. we have applied bhit to both simulation datasets and experimental soybean oil/protein content datasets, and we were able to obtain high accuracy and reliable results on both datasets. based on bhit, we also developed a general-purpose bhit pipeline to meet the demands of detecting high-order interactions between genotype and phenotypes for various species.

methods
let y be the continuous trait with g samples in the population, y = . x contains observed genetic variations and r is the total number of variations, x = . assuming traits are conditional dependence on associated genetic variations, yi are independent of each other following a gaussian distribution, as shown in the example illustrated by fig. 1; hence, we assume y can be divided into m clusters based on values of the quantitative trait. let i be indicators, i = , indicating group membership of each xi. h is the total number of groups , which means we partition all r genetic variations into h groups by i. we assume m is the total number of combination configurations of x{i = 1} that are associated with y, where x{i = h} represents all the x in the h-th group, . in the example of fig.  <dig>  m equals to  <dig> by the values of quantitative traits. in genotype, only four genes inferred in group  <dig>  is associated with y; all the other groups such as x{i = h} are independent groups, which are clearly not associated with phenotypes.fig.  <dig> bayesian scheme in model relationship between traits of target population and genetic variations. a traits are presented as y, e.g., oil or protein content of soybeans, and genetic variations are presented as x, e.g., snps. x
 <dig> to x
 <dig> are the related binary genetic variations , and they are inferred as group  <dig>  which is associate with phenotype . b based on values of quantitative trait, y can be divided into  <dig> clusters: cyan, black, blue and red, each corresponding to one circle. within each cluster, y follows a gaussian distribution. the four gaussian distributions can have different means and variances. in this case, x
 <dig> to x
 <dig>  four of r genetic variations x = {x
 <dig> …,x
r} can be divided into  <dig> independent clusters of combination configurations , and they have a clear pattern associated with y. hence, the combination of x
 <dig> , x
 <dig> 
x
 <dig> and x
 <dig> can be treated as one genetic variation interaction. in contrast, if the genotype clusters overlap with each other significantly in the phenotype space, there is no evidence for such a genetic variation interaction



the goal of the method is to infer p, which is partitioning relationships between the genotypes  and phenotypes , and the relationship is depicted by grouping dependent genotypes and phenotypes in the same groups . given partition indicator i, the likelihood is illustrated as :  <dig> py,x|i,h=py|xi=1∏h=1hpxi=h|i=∏m=1mpym|xi=1=m∏h=1hpxi=h|i 

where x{i = h} represents all the x in the h-th group, and y{m} represents all the y in the m-th cluster. for p we used the multinomial distribution method and dirichlet prior as the bayesian partition model in our study  <cit> . assume that there are ch possible combination values in the h-th genetic variation group ; thus, m = c <dig>  in the h-th group, suppose for every yi , x{i = h} has the probability p <dig> to be the first combination value, p <dig> for the second combination value, … , pch for the last combination value, and ∑j=1chpj= <dig>  then the conditional likelihood for the h-th group of genetic variations is pxi=h|p <dig> …,pch,i=∏j=1chpjnj where nj denotes the number of the rows in fig. 1a taking the j-th value in x{i = h}. however, we do not know the pj. so we assume they are random and used the dirichlet prior on them:  <dig> p~dirichletα1…αch:pp <dig> …,pch|α <dig> …,αch=1bα∏j=1chpjαj− <dig> 

where bα=∏j=1chΓαjΓ∑j=1chαj , α=α1…αch and Γ = ∫0∞tx − 1e− tdt.

so we have  <dig> pxi=h,p <dig> …,pch|i=∏j=1chpjnj×dirichletα1…αch=1bα∏j=1chpjnj+αj− <dig> 

by integrating p we have:  <dig> pxi=h|i=∫ppxh,p,…,pch|idp=∏j=1chΓnj+αjΓαjΓ∑j=1chαjΓ∑j=1chnj+αj 

for p we use the gaussian distribution with conjugate priors on mean and variance. suppose there are gm rows  in y{m} , and they are i.i.d. to follow a n distribution. we further use conjugate priors , μm|σm2 ~ n, σ02 ~ inv − χ <dig>  the resulting posterior distribution of |y{m} is then a n~inv−χ2μnσn2κnνnσn <dig> distribution , where: y¯=y¯m, μn=1κnκ0μ0+ny¯, κn = κ0 + n, νn = ν0 + n. and σn2=1νnν0σ02+n−1s2+κ0nκny¯−μ <dig>  s2=1n−1∑i=1nyi−y¯ <dig> 

using the relationship pym=pμσ2ympμ,σ2|ym, we can compute the marginal distribution of the data as :  <dig> pym|xi=1=12πnκ0κnΓνn/2Γν0/2ν0σ022v0/2/νnσn22vn/ <dig> 

this form of the marginal distribution is then used to compute formula .

the joint posterior of the targeted p was defined as p ∝ ppp, and the metropolis-hasting algorithm applying mcmc  <cit>  was used to sample from this posterior distribution and make the inference on i. considering that different i’s may represent the same grouping of x, for example, i = { <dig>   <dig>  3} is the same as i = { <dig>   <dig>  2} so we order the group label increasingly, and thus i = { <dig>   <dig>  2} is not allowed.

bhit algorithm
the details of the bhit algorithm is shown below:step  <dig>  initialization. choose i0 = , genotype matrix x, and phenotype matrix y; then h <dig> equals to r, means each genetic variation makes one group by initial partition; set the maximum number of iterations t with the current iteration t = 0; set the burn-in number of iterations b , choose i only when mcmc gets convergency.

step  <dig>  calculate initialized likelihood p <dig> by  .

step  <dig>  for iteration t, sample it randomly, get a candidate it′, and calculate likelihood of pt ' .

step  <dig>  calculate the defined acceptance ratio. α=pt'y,x|it',ht'/pty,x|it,ht 

step  <dig>  if α ≥  <dig>  then accept the candidate by setting it + 1 = it '; otherwise, accept the candidate with probability α. if the candidate is rejected, set it + 1 = it instead. meanwhile, set t = t +  <dig> 

step  <dig>  check whether iteration t is smaller than burn-in number t; if not store it.

step  <dig>  check whether iteration t meets threshold t; if not go back to step 3; or select output it.



simulation setup
considering the additive and non-additive effects, we used four different epistasis models as introduced in  <cit>  to test epistasis on single continuous trait, and then proposed four additional sophisticated dependency models to mimic scenarios of epistasis detection on different types of phenotypes. in addition with calculating statistical powers on type- <dig> errors of epistasis and dependency models, two null-models are constructed to calculate type- <dig> errors of bhit.

simulation on epistasis models
epistasis models were designed to check the epistasis detection on single quantitative trait. epistasis models 1– <dig> were generated upon the genotypes depicted by discrete numbers , and the quantitative phenotypes dependent with the genotype were depicted by continuous values. each model contains one group of ground truth loci predefined interacted together according individual types of interaction as work  <cit>  in genotype, and other loci are independent with each other as the background. the quantitative trait is simulated based on the genotype of ground-truth loci combination following normal distribution. increased quantitative level was assigned to the specific genotype combination of ground-truth loci, and marginal effect of each ground-truth locus individually ranges from very small to zero. the odds tables of epistasis models are demonstrated in additional file 1: tables s1–s <dig>  effect parameter θ sand α are determined using the same procedure in  <cit> .

model  <dig> demonstrates additive effects of paired interactions in genotype. this model contains two ground-truth loci, each of which contributes to the quantitative trait independently; furthermore, addictive effects accumulate when both loci occur. model  <dig> is analogous with model  <dig>  but the addictive effect is presented only when both loci have at least one ground-truth allele. model  <dig> is a threshold model in which each of the two loci contributes to the quantitative trait independently, but both loci presented simultaneously do not further increase the quantitative trait. model  <dig> contains three ground-truth loci interacting together.

we used r to generate different marginal effects and dependencies. first, we used defined minor allele frequency  to determine the raw ratio of three genotypes as major allele homozygous , heterozygous , and minor allele homozygous . then the allele of buried ground-truth epistatic locus was selected to be altered under different settings of linkage disequilibrium . by looking up the odds table of corresponding models in additional file 1: tables s1–s <dig>  ground-truth epistatic locus can be kept by probability under the corresponding ratio; otherwise, the allele of the locus can uniformly change to other allele randomly.

contrast with case–control phenotypes construction in  <cit> , the dependent quantitative phenotype is simulated as follows: for each genotype combination of altered ground-truth epistatic loci, the individual normal distribution was built using the rnorm function in r with mean  <dig> and standard deviation one. then the normal distribution was placed in a related index of genotype combinations, which corresponds to the continuous phenotype.

fifty data sets for each epistasis model were simulated under each setting, where minor allele frequencies  were chosen in { <dig> ,  <dig> }. simulation datasets of models 1– <dig> consist of  <dig> and  <dig> observations, and model  <dig> consists of  <dig> and  <dig>  observations. each dataset has  <dig> simulated genotype variation linked by  <dig> loci with different settings of ld effect r in { <dig> ,1}, and the ground-truth loci  are buried in them.

simulation on dependency models
we designed dependency models 5– <dig> to simulate multiple high-order dependencies in both discrete and continuous phenotypes. we used d to denote discrete column of data and c to denote continuous column of data. in dependency models, genotypes are illustrated as d, and phenotypes could be illustrated as different numbers of d and  c.

discrete and dependent data sets were generated by selecting the number of different discrete values possible, then raising that value to the power equal to the number of data sets to be generated, and generating for each of those values in a probability of occurrence. in order to make it obvious that the data are related, the first value was made to be 80 % of all the values, and the rest of them were the remaining 20 %.

independent continuous data were generated by r’s rnorm function, which selects values from a normal distribution in each column of continuous independent data set generated. dependent continuous data were generated by r’s mvrnorm function to sample from a multivariate normal distribution.

to generate a mix of discrete and continuous dependent data sets, the defined number of discrete data sets was generated following the same routine as stated earlier. afterwards, for each unique group of discrete data generated , we generate continuous data separately for each, hence making the discrete and the generated continuous data dependent on each other.

model  <dig> contains nine discrete columns and nine continuous columns. among them, d <dig> and d <dig> are discrete columns independent of all the other columns. c <dig> and c <dig> are continuous columns independent of all the other columns. there are four dependencies buried in the model:  d <dig> and d <dig> are dependent on each other in the discrete columns;  c <dig> and c <dig> are dependent on each other in the continuous columns;  discrete columns d <dig> and d <dig>  continuous columns c <dig> and c <dig> are also dependent on each other;  discrete columns d <dig>  d <dig>  and d <dig>  continuous columns c <dig>  c <dig>  and c <dig> are dependent on each other. the posterior distribution matrix is given as additional file 1: table s <dig> and shows that the independent columns were in partitions by themselves  and all of the dependent columns were in partitions with each other. the generated partition of model  <dig> is {c1} ∪ {c2} ∪ {c <dig>  c4} ∪ {d1} ∪ {d2} ∪ {d <dig>  d4} ∪ {c <dig>  c <dig>  d <dig>  d6} ∪ {c <dig>  c <dig>  c <dig>  d <dig>  d <dig>  d9}.

model  <dig> contains one discrete column and four continuous columns. all these columns are independent. the generated partition is {c1}∪ {c2}∪ {c3}∪ {c4}∪ {d1} as posterior distribution matrix in additional file 1: table s <dig> 

model  <dig> contains ten discrete columns and ten continuous columns. there are seven dependencies buried in the model:  d <dig> and d <dig>  d <dig> and d <dig>  and d <dig> and d <dig> are three groups dependent on each other corresponding to the discrete columns;  c <dig> and c <dig>  and c <dig> and c <dig> are two groups depending with each other corresponding to the continuous columns;  discrete columns d <dig> and d <dig>  and continuous columns c <dig> and c <dig> are dependent on each other;  discrete columns d <dig> and d <dig>  and continuous columns c <dig>  c <dig>  c <dig>  and c <dig> are dependent on each other. the generated partition is {c <dig>  c2}∪{c <dig>  c4}∪ {d <dig>  d2} ∪ {d <dig>  d4}∪ {d <dig>  d6} ∪ {c <dig>  c <dig>  d <dig>  d8}∪ {c <dig>  c <dig>  c <dig>  c <dig>  d <dig>  d10} as posterior distribution matrix in additional file 1: table s <dig> 

model  <dig> contains eight discrete columns and eight continuous columns. among them, discrete column d <dig> and continuous column c <dig> are independent. there are four dependencies buried in the model:  d <dig>  d <dig>  and d <dig> are dependent on each other in the discrete columns;  c <dig>  c <dig>  and c <dig> are dependent on each other in the continuous columns;  discrete column d <dig> and continuous column c <dig> are dependent on each other;  discrete columns d <dig>  d <dig>  and d <dig>  and continuous columns c <dig>  c <dig>  and c <dig> are dependent on each other. the generated partition is {c1} ∪{d1}∪{c <dig>  c <dig>  c4}∪ {d <dig>  d <dig>  d4} ∪ {c <dig>  d5}∪ {d <dig>  d <dig>  d <dig>  c <dig>  c <dig>  c8} as posterior distribution matrix in additional file 1: table s <dig> 

in simulation,  <dig> datasets for each dependency model were simulated under each setting. models 5– <dig> consist of  <dig>   <dig>   <dig> and  <dig>  observations, respectively, and these numbers representing variations are defined in parsimony to illustrate the relationships.

simulation on null models
null models were generated under hypothesis that no phenotypes are associated with genotypes. in null models, the discrete genotypes were composed with one group of two dependent loci, one group of three dependent loci and ninety-five independent loci. null model  <dig> has two independent phenotypes both independent with genotypes while null model  <dig> only has one phenotype independent of genotypes, which makes it comparable with other existed methods as plink. null models were generated as dependency models. each null model generated  <dig> datasets in each setting of simulation with different samples of  <dig>   <dig> and  <dig> 

computational experiment setting
for experiments on simulation, bhit, plink, edcf, and sixpac ran on biocluster operating from the university of missouri, which is a 64-bit linux platform with  <dig> cpu and 2 t memory; boost  ran on a 64-bit windows  <dig> platform with  <dig>  ghz intel cpu and 8 g ram. experiments on experimental data also ran on biocluster operating from the university of missouri.

bhit parameters were set as follows: for epistasis models 1– <dig>  the mcmc iteration in bhit was set at  <dig>  times of running and  <dig>  times as the built-in procedure. the mcmc iteration of epistasis model  <dig> was set at  <dig>  and  <dig>  times as the built-in procedure. for dependency models  <dig>   <dig>  and  <dig>  the number of mcmc iterations was set at  <dig>  and the built-in procedure was set at  <dig>  for dependency model  <dig>  the number of mcmc iterations was set at  <dig>  and the built-in procedure was set at  <dig> 

RESULTS
bhit software implementation and pipeline
we implemented the bayesian partition algorithm on both categorical and continuous data in the bhit  software on the linux computing platform using c++. bhit requires a user specifying the minor allele frequency  as the prior and uses the plink ped and map file format. for long runs in big whole genome data, bhit also provides intermediate status output and input in benefits stepwise running in big whole genome data. compared with plink’s minutes computing on simulation epistasis models of hundreds variation, the typical computing time of bhit is about 1 h on a single cpu.

the bhit pipeline for general species is shown in fig.  <dig>  in the preprocessing stage, missing data imputation methods should be applied to estimate missing entries in the genotype data if any. then snp with maf less than  <dig>  is filtered out. all the genotype data should be converted to the appropriate data format by plink-recodea. if the input has continuous trait values, whether, the data should be checked by the kolmogorov–smirnov test to confirm whether they follow the normal distribution or not. after that, both genotype and phenotype data should be combined together and converted to the bhit file format by the perl script provided at the bhit website. in order to handle genome-wide snps, we provide three strategies to use bhit in the pipeline. strategy a has a two stages:  feature selection methods  are used first to filter all the snps and run bhit only on the filtered set of snps. strategy b runs bhit on individual chromosome, one at a time. strategy c focuses on snps located in protein-coding regions and/or certain regions that users define. this pipeline is applicable to any species with appropriate genotype and phenotype data.fig.  <dig> pipeline of bhit high-order interaction detection. firstly the pipeline preprocesses raw genotype data by missing data imputation and maf filtering, and then checks raw continuous phenotype data to confirm whether it follows the normal distribution by the kolmogorov–smirnov test. both genotype and phenotype data should be combined together and converted to the bhit file format. bhit is applied upon these data via different strategies and validates its results in the end



simulation results on epistasis models
we used the epistasis model based simulated datasets to compare capability between bhit and other currently available tools for case–control pair-wise interaction detection. in this study, we applied the representative methods plink   <cit> , plink-fast , boost  <cit> , edcf  <cit> , and sixpac  <cit>  on the simulation datasets. we also used plink on quantitative trait dataset directly. we also set bhit running it once and then three times to fully use its mcmc properties. to accommodate the setting of plink, boost, edcf, and sixpac on pair-wise effects detection only, we decomposed the high-order effects to multiple pair-wise effects, e.g., detecting the complete set of all three pair-wise relations ab, ac, and bc, which is counted as detecting the three-order relationship abc successfully. in epistasis model, the statistical power of these methods is defined as the fraction of the generated datasets on which only topmost results given by the method matches the ground truth. for triple runs of bhit, the statistical power is defined as the fraction of the generated datasets on any of the three outputs of bhit matching the ground truth. we chose  <dig>  as the threshold for the posterior probabilities to determine the dependency for each loci and phenotype.

we extensively explored the simulation settings on maf and ld variants for epistasis models 1– <dig> in table  <dig> and additional file 1: figure s1–s <dig>  first, we considered the genotyped genetic variations to be exactly ground-truth loci where ld equals  <dig>  an idealistic and unrealistic situation. when maf equals  <dig> , nearly all the methods designed to detect pair-wise epistasis could effectively detect models 1– <dig> in various marginal pair-wise effects with no ld effects. for three-order interactions of model  <dig>  plink failed to detect high-order interactions, while boost and edcf significantly lost its power to effectively detect the three pair-wise interactions decomposed from the three-order interaction. however, bhit was highly effective in detecting both two-order and three-order interactions on all four of these models. through multiple runs of bhit, we could perfectly detect nearly all of these interactions in all the simulation datasets of these models. when changing the settings of maf to  <dig>  with a perfect ld effect, plink could still work on all of these epistasis models fairly well. boost and edcf decreased their power in pair-wise interactions of models 1– <dig> with lower maf. bhit maintained relatively high detection power in pair-wise interactions and showed good performance in detecting three-order interactions in model  <dig>  then we introduced the ld effect as r equals  <dig>  in the simulation datasets to mimic a more realistic scheme. comparing with no ld effects, plink, boost and edcf showed significant performance shortfalls in models 1– <dig> with maf settings at either  <dig>  or  <dig> . we also applied sixpac in all these simulations but it failed in all the models, which may be due to its inability to provide block distances in the simulation datasets. ld effects also decreased detection power of bhit. however, for three-order interactions of model  <dig>  bhit showed much more tolerance with these effects as it nearly detected all the interactions with or without ld. bhit’s ability could easily be enhanced by multiple runs.table  <dig> simulation results on epistasis models 1–4

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
simulation results of statistical power on each of four defined models in each simulation setting. each simulation contains  <dig> simulation datasets generated by each model. the sample sizes of models 1– <dig> are set as  <dig> and  <dig>  and the sample size of model  <dig> is set as  <dig> and  <dig> . the ld between variations and ground-truth loci is set as  <dig> or  <dig> . the maf is set as  <dig>  or  <dig> . bold shows highest statistical power



simulation results on dependency models
in order to demonstrate the potential of detecting more sophisticated dependency relationships within the data, we proposed four additional dependency models both on snp  and different types of quantitative phenotypes  and discrete phenotypes. since no public software to our knowledge can detect such multiple dependencies of both discrete and continuous data simultaneously, we only ran bhit once, thrice and ten times to evaluate the performance.

other than detecting loci in epistasis models, the statistical power of dependency models is defined by detecting the correct relationships of the correct corresponding variations, which is challenging.

for dependency models, bhit showed its remarkable capabilities in detecting multiple dependencies both in discrete and continuous datasets detailed in table  <dig>  while no other publicly available tools can handle these data. for model  <dig>  the dependencies were correctly detected  <dig>  % in  <dig> simulation datasets by a single run of bhit, and the detection power increased to  <dig>  % in  <dig> and  <dig>  % in  <dig> by running bhit for triple and ten runs. for models 6– <dig>  bhit correctly detected nearly all the dependencies  in all  <dig> simulated datasets. with multiple runs of bhit, all the interactions in simulated datasets of dependency models could be detected.table  <dig> simulation results on dependency models 5–8

simulation results of statistical power on each of four defined models. each simulation contains  <dig> simulation datasets generated by each model



simulation results on null models
different from epistasis models and dependency models, no phenotypes are associated with genotypes in null models. the statistical power of null models in bhit is defined as the fraction of the generated datasets showing no dependencies between phenotype with any genotype, and the statistical power in plink is defined as the fraction of the generated datasets showing no association found. as shown in table  <dig>  in null model  <dig> only  <dig>  % of  <dig> datasets in each simulation at least one phenotype were incorrectly inferred as associated with given genotypes with the settings of  <dig> samples in bhit, and this number decreased to  <dig>  and  <dig>  % with settings of  <dig> and  <dig> samples. in null model  <dig>  the phenotype was incorrectly inferred as dependent with given genotypes in only  <dig> ,  <dig>  and  <dig>  % of  <dig> datasets in each simulation setting of  <dig>   <dig> and  <dig> samples. comparing with same datasets running by plink , plink-fast , plink which works on the quantitative trait, bhit obviously got confidential results in null models with different settings of samples.table  <dig> simulation results on null models

simulation results of statistical power on null models. each simulation contains  <dig> simulation datasets generated by each model, the setting of each simulation of each models differs in samples  as  <dig>   <dig> and 5000



in the simulation studies, bhit demonstrated its excellent capabilities and potential in comparison with other epistasis detection methods on both type- <dig> and type- <dig> errors. on pair-wise interactions with/without additive effects, bhit could get same good results as boost and edcf in high maf, and outperform them by a large margin in a lower maf. with various settings of maf and ld, bhit showed its robustness on high detection power by adopting the proper setting of prior on maf as a bayesian partition, which other methods  neglect. besides pair-wise interactions, bhit could also obtain excellent results in three-order interactions, while other methods were not designed to handle. benefiting from the flexible statistics frameworks, bhit could detect these dependencies very effectively with various types of phenotypes in simulation datasets. by checking validity by null models, bhit showed good results in distinguishing no associations in simulation datasets.

results on soybean quantitative traits studies
soybeans represent one of the most important agricultural crops providing nutrition and sustenance to humans and household animals. among its hundreds of agricultural traits, oil and protein content of its seeds are among the most interesting of its composition traits both for farmers and breeders. we used the soysnp50k iselect beadchip snp array  <cit>  as the genotype, and  <dig> plant introduction  lines with the oil and protein contents phenotyped in  <dig> . all the snps are mapped to genes by soybean knowledge base   <cit> . for oil and protein contents are highly correlated, we only choose oil content as the phenotype in bhit running. we applied all three strategies of the bhit pipeline in this research. strategy a is a two-stage strategy, i.e., to choose snp subsets by feature selection of lasso, filtering all the snps first and then apply bhit on significant snps detected by lasso. strategy b uses bhit on individual chromosomes, one at a time. strategy c is mainly focused on protein-coding regions, which only applies bhit on known protein qtl regions and oil qtl regions. in all strategies, bhit was set to running  <dig> , <dig> times of mcmc, and set  <dig>  as the burn-in period to guarantee the convergency,  <dig>  was chosen as the threshold for the posterior probabilities to determine the dependency for each loci and phenotype.

preprocessing on soybean data
there is no missing value in soysnp50k iselect beadchip snp array, and each snp in the array is only chosen with threshold that maf larger than  <dig> . both quantitative phenotypes of soybean oil/protein data are accepted as normal distribution hypothesis by kolmogorov–smirnov test.

epistasis results on soybean quantitative traits studies by strategy a
in strategy a, we first used lasso to get  <dig> snps related to protein and oil content, and then we ran bhit  <dig> times on this subset. we got  <dig> snp-snp interactions related to oil/protein content traits, including  <dig> two-order interactions,  <dig> three-order interactions,  <dig> four-order interactions and  <dig> five-order interaction. table  <dig> gives a general view of the most interesting bhit results obtained by using strategy a. the snp interaction pair in index one is located in chromosome seven at positions  <dig> , <dig> and  <dig> , <dig> . the major allele homozygous and minor allele homozygous genotypes could divide the oil content phenotype significantly with p-value  <dig>  × 10−  <dig> by t-test. considering that minor allele homozygous pairs are expected to appear  <dig>  % in the background, the observed minor homozygous pairs appeared  <dig>  times higher than the set percentage for background appearance. this bias may be due to breeding selection. when mapping to soybean genes using soybean knowledge base , both snps are associated with individual genes glyma07g <dig> , a kog-oxysterol-binding protein functioned in lipid transport process, and glyma07g <dig> , a kog-dehydrogenase -steroid dehydrogenase). both genes function in the steroid biosynthetic process are located in chloroplast stroma. index two shows a three-order interaction with index one and another snp located in location  <dig> , <dig> of chromosome six, which is mapped to gene glyma06g <dig> . this gene is glycerol-3-phosphate acyltransferase , which is also located in the glycerolipid metabolism pathway , functioning in lipid transport and located in endoplasmic reticulum. another promising three-order interaction across chromosomes is index  <dig> positioned at  <dig> , <dig> in chromosome  <dig>  and  <dig> , <dig> and  <dig> , <dig> in chromosome  <dig> . the statistical significance p-value reaches  <dig>  × 10−  <dig> by t-test between triple-major allele and triple-minor allele. these snps are associated with glyma19g <dig> , a glutamate synthase  functioned in glutamate synthase  activity; glyma19g <dig> , an ap2-erebp transcription factor in the lipid biosynthetic process; and glma16g <dig> , an abi3/vp <dig> transcription factor located in chloroplast. all three genes are related to the oil biosynthesis process.table  <dig> snps identified by strategy a using bhit in soybean data

fig.  <dig> genotype division on oil/protein phenotype by strategy a on snp gm07_15667842_t_c and gm07_15662403_c_t. y presents the protein content; x presents the oil content, and each point represents the phenotype of one sample in the soybean population. genotypes of the samples are depicted using pairwise snp combinations in different shapes and colors, where  <dig> and  <dig> represent major and minor alleles in homozygous, respectively, while  <dig> presents heterozygous. the numbers in parentheses show the number of samples and percentage. we can see the genotype  <dig>  and  <dig>  have clear phenotype  features

fig.  <dig> genotype division on oil/protein phenotype by strategy a on snp gm07_15667842_t_c, gm07_15662403_c_t and gm06_42883965_t_c. y presents the protein content; x presents the oil content, and each point represents the phenotype of one sample in the soybean population. genotypes of the samples are depicted using pairwise snp combinations in different shapes and colors, where  <dig> and  <dig> represent major and minor alleles in homozygous, respectively, while  <dig> presents heterozygous. the numbers in parentheses show the number of samples and percentage. we can see the genotype  <dig>  and  <dig>  have clear phenotype  features

fig.  <dig> genotype division on oil/protein phenotype by strategy a on snp gm16_1481641_g_a, gm19_38897850_c_t and gm19_39737193_t_c. y presents the protein content; x presents the oil content, and each point represents the phenotype of one sample in the soybean population. genotypes of the samples are depicted using pairwise snp combinations in different shapes and colors, where  <dig> and  <dig> represent major and minor alleles in homozygous, respectively, while  <dig> presents heterozygous. the numbers in parentheses show the number of samples and percentage. we can see the genotype  <dig>  and  <dig>  have clear phenotype  features



epistasis results on soybean quantitative traits studies by strategy b
in strategy b, we split the soysnp50k data into  <dig> parts by their chromosomes, and then ran bhit separately on each of these individual chromosomes. several interesting interactions were detected among the results and are detailed in table  <dig>  an interesting snp pair is located on chromosome five at position  <dig> , <dig> and  <dig> , <dig> , which are annotated by glyma05g <dig>  an enzyme ec  <dig> . <dig> , which is a plus-end-directed kinesin atpase, and glyma05g <dig>  a homologous gene opi <dig> in medicago truncatula, which is involved in phospholipid biosynthesis, respectively. this pair of snp interactions directly connects to oil content phenotype. the individual p-values of both snps are  <dig>  × 10−  <dig> and,  <dig>  × 10−  <dig> respectively, but the combined p-value reached  <dig>  × 10−  <dig>  another three-order interaction related to protein synthesis phenotype is located on chromosome  <dig> at position  <dig> , <dig>   <dig> , <dig> and  <dig> , <dig> , which are annotated by glyma13g <dig> and glyma13g <dig>  glyma13g <dig> is a subtilase family protein acting in the serine-type peptidase activity, and glyma13g <dig> encodes enzyme ec  <dig> . <dig>  acting in peptidylprolyl isomerase. the individual p-values of snps are  <dig>  × 10−  <dig>   <dig>  × 10−  <dig>  and  <dig>  × 10−  <dig>  respectively, but their combination results in a p-value of  <dig>  × 10−  <dig>  the most significant four-order interaction detected by this strategy is located in chromosome ten at positions  <dig> ,648;  <dig> ,284;  <dig> ,445; and  <dig> , <dig> , contained in three genes glyma10g <dig>  glyma10g <dig> and glyma10g <dig>  glyma10g <dig> is a pyruvate kinase participating in the fatty acid biosynthetic process, glyma10g <dig> has a homologous gene fatty acyl-coa reductase three in medicago truncatula, while glyma10g <dig> is a glycosyl hydrolase superfamily protein. the p-values of individual snps are  <dig>  × 10−  <dig>   <dig>  × 10−  <dig>   <dig>  × 10−  <dig>  and  <dig>  × 10−  <dig>  respectively, and the combined p-value reaches  <dig>  × 10−  <dig>  we also detected a 7-order interaction on chromosome five at positions  <dig> , <dig>   <dig> , <dig>   <dig> , <dig>   <dig> , <dig>   <dig> , <dig>   <dig> , <dig>  and  <dig> , <dig> . these snps are annotated by gene glyma05g <dig>  glyma05g <dig>  glyma05g <dig> and glyma05g <dig>  among them, glyma05g <dig> is ec  <dig> . <dig>  sirohydrochlorin ferrochelatase, while glyma05g <dig> is included in the pre-mrna cleavage complex ii protein family, and glyma05g <dig> is an ec  <dig> . <dig>  alkane 1-monooxygenase. the p-values of these individual snps are around  <dig>  but their combined p-value reaches  <dig>  × 10−  <dig> table  <dig> snps identified by strategy b using bhit in soybean data

fig.  <dig> genotype division on oil/protein phenotype in individual chromosome wild by strategy b on snp gm05_34107233_a_g and gm05_40523205_a_g. pair-wise interaction result. y presents the protein content, x presents the oil content, and each point represents the phenotype of one sample in the soybean population. the genotypes of the samples are depicted in different colors. in genotypes  <dig> and  <dig> each present major alleles and minor alleles in homozygous, while  <dig> presents heterozygous. the numbers in parentheses show the number of samples. different from fig.  <dig>  we only draw the homozygous genotypes in blue and red dots, which divide the phenotypes well

fig.  <dig> genotype division on oil/protein phenotype in individual chromosome wild by strategy b on snp gm13_28866067_a_g, gm13_28868130_a_c and gm13_29473740_t_c. three-order interaction result. y presents the protein content, x presents the oil content, and each point represents the phenotype of one sample in the soybean population. the genotypes of the samples are depicted in different colors. in genotypes  <dig> and  <dig> each present major alleles and minor alleles in homozygous, while  <dig> presents heterozygous. the numbers in parentheses show the number of samples. different from fig.  <dig>  we only draw the homozygous genotypes in blue and red dots, which divide the phenotypes well

fig.  <dig> genotype division on oil/protein phenotype in individual chromosome wild by strategy b on snp gm10_47616648_c_t, gm10_47618284_c_t, gm10_47730445_g_a and gm10_47753689_g_a. four-order interaction result. y presents the protein content, x presents the oil content, and each point represents the phenotype of one sample in the soybean population. the genotypes of the samples are depicted in different colors. in genotypes  <dig> and  <dig> each present major alleles and minor alleles in homozygous, while  <dig> presents heterozygous. the numbers in parentheses show the number of samples. different from fig.  <dig>  we only draw the homozygous genotypes in blue and red dots, which divide the phenotypes well

fig.  <dig> genotype division on oil/protein phenotype in individual chromosome wild by strategy b on snp gm05_8688492_t_c, gm05_8714882_g_a, gm05_8715355_c_t, gm05_8800108_c_t, gm05_8800879_c_t, gm05_8817375_t_c and gm05_8904128_a_g. seven-order interaction result. y presents the protein content, x presents the oil content, and each point represents the phenotype of one sample in the soybean population. the genotypes of the samples are depicted in different colors. in genotypes  <dig> and  <dig> each present major alleles and minor alleles in homozygous, while  <dig> presents heterozygous. the numbers in parentheses show the number of samples. different from fig.  <dig>  we only draw the homozygous genotypes in blue and red dots, which divide the phenotypes well



epistasis results on soybean quantitative traits studies by strategy c
in this strategy c, we ran bhit on a subset of  <dig> snps from soy50ksnp array, which overlapped with the protein coding regions and known qtl regions related to protein/oil contents . then we ran bhit for about  <dig> times on this subset using either oil or protein phenotypes. table  <dig> presents some interesting identified interactions. the first and most interesting interactions among them were identified in  <dig> loci across two chromosomes located in position  <dig> ,627;  <dig> , <dig> of chromosome eight, and  <dig> ,446;  <dig> , <dig> of chromosome  <dig>  the first snp  is located in gene glyma08g <dig>  mapped, which has an arabidopsis homology at3g <dig>  and an ubiquitin-protein ligase. at the sequence level, the polymorphism makes the major allele nucleotide guanine  replaced by the minor allele nucleotide adenine , which causes the 73th amino acid of the protein change from glycine  to arginine . the added positive charged arginine may have significant impact on the protein conformation and function. the second snp  is located in gene glyma08g <dig> , which causes the 31st amino acid change from alanine  to valine . the function of this gene is unknown. the third snp  is located in gene glyma19g <dig> , which also causes amino acid change from glycine  to arginine . this gene has the arabidopsis homolog at3g <dig> , which encodes an oxalyl-coa synthetase and is required for oxalate degradation and normal seed development processes. the fourth snp  is located in gene glyma19g <dig> , which causes amino acid change from valine  to isoleucine . this gene has the arabidopsis homology at1g <dig> , a trna -methyltransferases. this transferase is involved in trna processing in chloroplast and cytoplasm. it was found that protein glyma08g <dig>  containing snp <dig> and protein glyma19g <dig>  containing snp <dig> were predicted to interact by proprint  <cit> . we predicted their protein structures by mufold  <cit>  . then we docked the two predicted structures using grammx  <cit> . interestingly, the distance between the residue containing snp <dig> and the residue containing snp <dig> was shorter than  <dig>  % of all the paired distances between the two structures, as shown in fig.  <dig>  this suggests that the epistatic interaction between the two snps may play a role in the interaction between the two proteins.table  <dig> snps identified by strategy c using bhit in soybean data

304928
fig.  <dig> protein-protein interaction on predicted protein structures containing snp <dig> and snp <dig>  snp <dig> is located in the protein glyma08g <dig>   and snp  <dig> is located in the protein glyma19g <dig>  . the polymorphism sites  are located at the interface of the interaction



many of the snp-associated genes in table  <dig> are highly related to oil content according to the literature. it is known that ubiquitin processes  have significant influences on fatty acid compensation  <cit>  . intracellular composition of fatty acid could affect the processing and function of enzymes in connection with the ubiquitin–proteasome pathway, which might be a common physiological approach to regulate protein degradation  <cit> . under the control of a corn ubiquitin promoter, positive expression of puroindoline a and b  proteins in transgenic corn could significantly increase the seed oil content  <cit> . it is also well known that acyl-coenzyme a  synthase  catalyses the conversion of free fatty acid to acyl-coa ester, and is, therefore, necessary for many pathways of fatty acid and lipid metabolism  <cit> . researchers have successfully improved fatty alcohol by manipulating the coa synthase in fatty alcohol biosynthesis pathway in engineered e. coli  <cit> , and they also succeeded improving fatty acid ethyl esters in saccharomyces cerevisiae  <cit> . although there is no direct report on the role of trna-methyltransferase  in oil synthesis in plants, a product of trna-methyltransferase, s-adenosylhomocysteine was shown to have a metabolic link with the fatty acid metabolism in alzheimer’s disease  <cit> . the potential interaction between glyma08g <dig> and glyma19g <dig> links the ubiquitin and acyl-coa synthase through nad/fad-dependent dehydrogenases  <cit> .

we also checked the neutral mutation hypothesis by using a dataset by tajima’s d statistics using dnasp software version  <dig>   <cit> . the tajima’s d value of the region is  <dig>  , which significantly rejected null hypothesis of neutrality and meets the prior knowledge of soybean as a human cultivated plants, may undergo the balancing selection.

CONCLUSIONS
epistasis is a common phenomenon in many complex biological processes of various organisms, which has been known to be related to quantitative traits in plants  <cit> . from the evolution perspective, epistasis and natural selection shape the mutational architecture of complex traits  <cit> . epistasis may cause hidden quantitative genetic variation in natural populations and could be responsible for the small additive effects, missing heritability and the lack of replication, which are typically observed for human complex traits  <cit> . towards this direction, our computational method, tool and pipeline enable researchers to explore epistasis and may elaborate on what specific epistasis, especially higher-order epistasis, play a role in a complex trait.

seed oil content and protein content are both polygenic traits controlled by several gene loci in soybeans, which represent a major source of dietary nutrition and an increasingly valuable feedstock for industrial applications  <cit> . however, due to overlapping biosynthesis pathways and alternative nutrition distribution, seed oil content shows strong negative correlation with seed protein content, i.e., improvement of one trait is often achieved at the expense of the other  <cit> . quantitative genetic analyses and qtl mapping based studies have suggested that both seed oil content and protein content are governed by the additive effect of genes involved  <cit> . many of the qtl alleles with positive and negative effects on oil content are often dispersed among genotypes  <cit> , which suggests that accumulation of the positive alleles from different genetic backgrounds could eventually lead to the development of genotypes with higher seed oil content or protein content  <cit> . by computing tajima’s d, multiple alleles are actively maintained in the gene pool of a population at frequencies above that of gene mutation. the significance level of positive tajima’s d also supports the hypothesis that the samples we used are indeed under the balancing selection with genetic polymorphism conserved by multiple alleles, not simply by genetic drift. with snp array data and ngs data, we could directly focus on the trait study at the nucleotide level, instead of the qtl level, which could give us much more detailed information and guidance on molecular breeding. some of our predicted epistatic interactions could serve as hypotheses for molecular breeding design.

we mainly focus on biological interpretation of epistasis at the gene level. the trait associated coding region polymorphism at the gene level may change the biochemical property and the protein structural conformation, which could cause significant functional and phenotype changes. according to our analysis, these changes are indeed associated with the trait change quantitatively. breen demonstrated that epistasis is pervasive in protein evolution by considering amino-acid usage. in this theory, epistasis as the primary factor in molecular evolution, provides the primary conceptual framework to describe the tempo and mode of long-term protein evolution  <cit> . another possible explanation arose from hemani’s work  <cit> , which indicates that epistatic interactions can allow deleterious mutations to persist under selection and these interactions can abate the depletion of additive genetic variation. in our cases, soybean has been cultivated for thousands of years. some of the epistasis that we identified by bhit could be a result of protein evolution under human breeding selection. in particular, the differences on protein conformation in different genotypes may cause differences in protein-protein interaction, which could alter the interaction between ubiquitin-protein ligase and oxalyl-coa synthetase, as an example. these important biochemical changes in the oil biosynthesis pathway may finally affect the phenotypes of oil/protein content quantitatively. it has been noted that some of the snps in an identified epistatic interaction are close to each other in the genomic sequence, which may be due to ld instead of epistasis.

the key advantage of bhit is its advanced flexible setting on detecting high-order interactions on both discrete and continuous data. in contrast to other methods designed to detect only pair-wise interaction, bhit does not restrict the computational models to two-order dependencies, and dependencies in different orders could be uniformly chosen by adopting larger likelihood following using a mcmc search. even though mcmc could obtain the global maximum in theory, multiple runs of bhit may overcome the local maximum in practice. in addition, the search convergence could be easily judged by checking the changing status of likelihood with the need to be determined empirically in other model-free methods. the design of likelihood computation between both discrete and continuous attributes gave bhit’s capability on both case–control and complex quantitative trait analysis. in contrast to other model free machine-learning based methods, the deployed bayesian framework could fully use the prior knowledge of minor allele frequency, which benefits bhit to become much more adaptive in different settings of datasets. in simulation studies on epistasis models, in comparison with other existing methods, bhit can maintain high efficiency in various settings of sample numbers, maf and ld effects. another key advantage of bhit is its capability to deal with continuous phenotypes as quantitative traits. in both simulation studies on dependency models and soybean study of oil and protein content traits, bhit is versatile and robust in detecting multiple dependencies simultaneously.

in comparison to beam and beam <dig>  which were developed in detecting high-order epistasis from discrete genotypes in single case–control phenotype, bhit expands beam by building a flexible framework to detect multiple high-order epistasis in case–control and/or quantitative phenotypes. our work is also different from zhang’s work  <cit>  on pleiotropic and epistatic eqtl, which also used the idea of bayesian partition, in that a) zhang’s work aimed at eqtl module identification while bhit is a general framework for gwas analysis; b) zhang’s work focused on association with genotype and continuous traits as eqtl, while bhit could detect association between genotype and traits, both continuous and categorical; c) zhang’s work mainly handled pair-wised interactions, while bhit can detect high-order interactions. with the bayesian method’s strengths and flexible settings, bhit demonstrates its great capabilities and potentials in detecting both pair-wise and high-order interactions in gwas datasets both on discrete and continuous data.

the bhit pipeline is developed to apply bhit for general purpose of research on any species and any traits with appropriate data. due to detecting multiple orders of interaction, bhit demonstrates its capability on thousands genetic variations by thousands samples on single cpus in plausible time. to handle even bigger datasets genome wide, three different computational strategies in computational experiment were implemented in the bhit pipeline to address the computational intensive nature of bhit bayesian computation. strategy a screened additive effects first by feature selection method, penalty-based regression lasso in our soybean quantitative trait study, this two-stage strategy may have ignored several true-positive epistasis, but it was able to fully use all the snps in the genome scale. the application in experimental datasets successfully found cross-chromosome epistasis. strategy b’s individual chromosome computing was able to fully use all the candidate snps in one chromosome, but it neglected the cross-chromosome epistasis. the nearby snps in one chromosome might over-estimate epistasis because of linkage disequilibrium. strategy c enables users to use prior-knowledge to select snps first, eliminated the computation by only applying bhit on protein-coding regions in known qtl in our study. results obtained by this strategy could be well explained at the protein level but it obviously lost some information both in the non-coding regions and non-qtl regions. besides soybean oil/protein traits, high order interactions exist in many other species and traits. the bhit pipeline can be applied in detecting high-order interaction between genotype and phenotype in other species with appropriate data and strategy. even with advanced computational technologies and strategies, bhit still requires high computational resources within the whole genome dataset. we are working on developing an effective approximation algorithm as well as the parallel and gpu version of bhit to advance genotype-phenotype research.

additional files
additional file 1: table s <dig>  odds table of epistasis model  <dig>  table s <dig> odds table of epistasis model  <dig>  table s <dig>  odds table of epistasis model  <dig>  table s <dig>  odds table of epistasis model  <dig>  table s <dig>  p in dependency model  <dig> partition. table s <dig>  p in dependency model  <dig> partition. table s <dig>  p in dependency model  <dig> partition. table s <dig>  p in dependency model  <dig> partition. figure s1: statistic power of model  <dig> with sample size  <dig>  figure s2: statistic power of model  <dig> with sample size  <dig>  figure s3: statistic power of model  <dig> with sample size  <dig>  figure s4: statistic power of model  <dig> with sample size  <dig>  figure s5: statistic power of model  <dig> with sample size  <dig>  figure s6: statistic power of model  <dig> with sample size  <dig>  figure s7: statistic power of model  <dig> with sample size  <dig>  figure s8: statistic power of model  <dig> with sample size  <dig> . 

additional file 2: table s <dig>  qtl regions related to protein/oil contents 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

jw, dx, and jz participated in the research design and wrote the manuscript; jw developed the software; jw performed the computational benchmark studies; htn, bv and hs provided the experimental data and biological input. tj and yl provided computational input. all authors read and approved the final manuscript.

