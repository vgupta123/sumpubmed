BACKGROUND
over seventy five years ago, dr. kenneth raper described the awesome life history of dictyostelium discoideum  <cit> . this social amoeba grows vegetatively while subsisting on bacteria in the soil, until it exhausts the food supply. starvation triggers a coordinated process of chemotaxis, aggregation and multicellular development and differentiation of tens of thousands of individual cells. dictyostelium, over the decades, has become a genetic model organism for myriad biological phenomena, including multicellular development, kin recognition, bacterial discrimination and innate immunity  <cit> .


dictyostelium has also been at the leading edge of genomics era research. the genome of d. discoideum was among the first eukaryotes to be queued for  sequencing  <cit> , and the developmental transcriptome was explored in the early days of gene expression microarrays  <cit> . since then, next-generation rna-sequencing  has vastly increased the ease and resolution of transcriptome studies . and now, researchers are using chip-seq to define gene regulatory networks and short-read whole genome sequencing of chemical mutants to dissect genetic pathways  <cit> .

these technological and experimental advances continue to drive the need for new and better approaches to data management and analysis. the sheer volume of ngs output requires data management that is stable and scalable. scientific best practices dictate that analyses should be rigorous, reproducible and traceable. software solutions to these challenges typically are designed for data scientists and computational experts. however, these designs often fail to consider the needs, but also the limitations, of many non-computational life scientists who generate and consume the data. to foster the most creative research and efficient collaborative environment, life scientists should be engaged in the entire process; know where their data resides and how it has been processed; and be empowered to explore their data themselves, to ask questions and test hypotheses as they arise.

in collaboration with the dictyostelium group at baylor college of medicine, university of ljubljana developed the original dictyexpress , a web application designed for exploration of transcriptomics datasets  <cit> . dictyexpress  allowed users to select among experiments and specify genes to analyze; visualize the expression time courses of those genes; identify gene clusters; examine pre-processed differential expression datasets; and perform gene ontology -term enrichment analysis.

the distinguishing feature of dictyexpress  was its interactivity. each visual analytics module was linked to the others, such that selecting a gene or genes in one module propagated to the others, triggering new analyses where necessary. for example, when the user selected differentially expressed genes in the volcano plot, the temporal profiles of these genes appeared in the time course module, and go enrichment terms updated automatically. gene selection was supported in all visualization modules of dictyexpress, and in this way enabled a variety of workflows and entry points to exploring the data.

the original dictyexpress was developed in flash  and relied on an ad-hoc python-based backend for data access. addition of new data was not supported for the user and required manual changes of the database on the server side. end users were precluded from developing new pipelines, as well as tracing the results of bioinformatics analyses. further, extending the platform to include other species was complicated by inflexibility on the server side.

in this paper we report dictyexpress , a reinvention of the original with an entirely new software architecture and extended functionality . from the original version  <cit>  we retain the name, several data presentation modalities and the concept of interactive visual exploration. everything else has changed. the new dictyexpress is bundled with genboard, a data management and preprocessing web application. the entire suite has been rewritten in javascript, html <dig> and css <dig> on the client side and a high-level python web framework  and in-house data flow engine on the server side. the user may now upload raw next-generation sequencing data, trigger the computational pipeline for mapping, estimation of transcript abundance and computation of differential gene expressions, and then use dictyexpress to explore and share the results. once published, or upon the user’s preferences, results may be marked as public and immediately made available to the general audience.
fig.  <dig> the landing page of the dictyexpress web application invites public and subscribed users. from the url , this public page provides access to published ngs data




the new dictyexpress has been adopted as a tool of choice to analyze gene expression data among many prominent labs in the dictyostelium community. as of this submission, the web app has been viewed by over  <dig> unique visitors and stores the data from over  <dig> dictyostelium  experiments. access to dictyexpress is reciprocally linked to dictybase, the home page of the central repository for dictyostelium genome data and experimental resources . every individual gene details page at dictybase includes a link to dictyexpress, facilitating access to expression profiles, and each gene selection in dictyexpress is linked to the corresponding page in dictybase. below, we provide essential details of our implementation framework and describe the functionality of the new dictyexpress. we pay particular attention to the interactive data analysis, and how this feature promotes exploration, discovery and insight generation. we also discuss how the framework could be extended to support other organisms, projects and data types, some of which is already underway.

implementation
the dictyexpress web application is part of a larger data analysis software framework . the backend section of the framework manages the data and executes the analysis pipelines. data are stored on a file server , mongodb database  and postgresql database . access to the data and analysis pipelines is managed through restful api of the django application framework. this accepts requests from the clients, and schedules analytic tasks to workers. on the client  side, the framework includes two applications: genboard for data and pipeline management, and dictyexpress for interactive analyses. both genboard and dictyexpress are implemented in javascript, html <dig> and css <dig>  and make use of the following javascript libraries: angularjs, version  <dig> . <dig>  ; bootstrap, version  <dig> . <dig>  ; c <dig>  version  <dig> . <dig>  ; d <dig>  version  <dig> . <dig>  ; and flot, version  <dig> . <dig>  .
fig.  <dig> the software behind dictyexpress and genboard incorporates a state-of-the art technology stack in a modular framework. the blue boxes indicate the user interface layer, with web applications running in javascript, and a python api for programmatic access. the green boxes represent the data layer, including the dataflow engine, restful api and libraries of bioinformatics tools and pipelines. beneath these sections are unshaded services layers, including file sharing, database and server systems, and workload managers. the vertical pink column represents the glue that connects the various layers and facilitates the seamless interaction between technologies




we developed an asynchronous data management platform to trigger different analysis tasks that may depend on results of prior processing steps. the dataflow engine supports defining analysis tasks and dependencies, parallel execution, and status reporting that is used for monitoring on the client side. the genboard application is meant to serve data owners and curators as a user interface for the dataflow engine. genboard has a familiar dashboard-like layout for data upload, annotation, analysis process automation and monitoring. meanwhile, the dictyexpress application is responsible for the presentation of results, and serves as the entry point for visualization and exploration. dictyexpress visualizations rely on a chassis of three external libraries—c <dig>  d <dig>  and flot—which have been extended substantially with interactive capabilities. our aim was to make all visualization modules interactive and interconnected, such that a user can click a line on a line graph, a branch in a dendrogram, or a dot on a scatter plot, and in this way select the underlying data point. the selection is instantly propagated to all the other modules.

overall, the implementation codebase includes about  <dig>  lines of javascript and  <dig>  lines of python. the dataflow and bioinformatics components of the project are open source and available at github .

RESULTS
a new software framework
the redesign and ground-up recoding of the dictyexpress web-application improved the software in numerous ways. from the end-user’s perspective, the interactive data visualizations offer more features and interactivity than before. thus users can explore many facets of ngs-based gene expression  data more easily. the companion genboard application facilitates data management and processing, providing tools to ensure traceability and reproducibility of bioinformatics results. both applications sit atop a framework that enhances data processing performance, and is extensible to virtually any data analysis use-case .

let us illustrate the communication between components of the framework through an example. consider that a user uploads raw rna-seq data  with the end goal of displaying gene expression time-course profiles. the user would sign into genboard , upload the raw data and enter the relevant parameters and metadata. the data are transferred to the server and trigger the execution of quality control. next, through the gui, the user instructs genboard to run mapping and compute gene expression values. these computations run on the server, and, if available, can be distributed over parallel processors to speed-up the execution time. while the computation takes place, genboard offers an interface to monitor the progress. finally, the user can bundle individual data objects, e.g. time-course reads files from sequential biological samples. upon completion of the computation, the expression data become available on dictyexpress. access is restricted by default to the author of the data, who may then grant permissions to project partners or make the data public. any analysis may be shared via the url.
fig.  <dig> genboard is the data management graphic user interface. here users can create a new project, upload raw and processed data files, specify analysis algorithms and parameters, and link one step of the analysis process to another. a the user may search/filter among all existing projects based on the project name or descriptive tags. from this page a user may also create a new project . c within a chosen project, the users find all of the data, input and output files associated with their bioinformatics analysis. these may be filtered by name, type, etc. clicking on a file name in the table navigates to a data details page , while clicking on an analysis link in the table navigates to that analysis process 




interactive and interconnected visualizations
dictyexpress consists of various visual analytics modules. each module supports the selection of genes—represented by points, lines, branches, etc.—depending on the type of plot . gene selections propagate to other modules, are revealed by highlights, and in some cases, trigger new analyses on the fly. such functionality is referred to as brushing-and-linking  <cit>  and is an essential component of tools for interactive visual analysis. the current dictyexpress includes the following modules: 

experiment and gene selection. a table lists in each row projects with available data. each project is comprised of a collection of read counts pertaining to a particular experiment. for example, a project might include multiple rna-seq replicates of the wild type strain ax <dig>  the user engages with this module by selecting a project , then specifying one or more gene by free text or upload of a gene list text file. gene inputs, which benefit from auto-complete suggestions, then appear in all other modules. this module also records the work history, allows linking to specific genes in dictybase and facilitates data downloading.
fig.  <dig> visual analytics modules of the dictyexpress web application. all modules are interactive and interconnected, such that selections and perturbations in one module propagate to the others





expression time courses. in dictyostelium biology, researchers often explore the changes in gene expression levels over developmental time. in this module, a line graph displays profiles as normalized read count  versus time . the x-axis scales automatically to accommodate the experimental sampling regime. for studies of non-coding rna, selection of these molecules initiates a second line plot with an appropriately scaled y-axis  <cit> . the user can select one or more genes by clicking or dragging across the expression profile curves. such selections then propagate to all other modules, highlighting data on the selected genes. the user may also discover which genes are most similar to a selected gene. the "find similar" pop-up menu enables the user to choose among various methods for scoring of distance between gene profiles. distances are calculated across the transcriptome in real time, resulting in a table of similar genes that may be appended to the visualization modules. tool tips provide gene-wise information when the user hovers the mouse over any profile.


hierarchical clustering. genes are clustered based on their expression profiles and the results are shown in a dendrogram, with branches that terminate as heatmaps to illustrate the level of gene expression at different time points. users may choose one of three methods for distance scoring: euclidean distance, pearson’s correlation or spearman’s correlation, as well as branch linkage criteria. this module allows users to interpret the relative similarity of genes within a gene set, and to select genes for further examination by highlighting selected branches.


gene ontology enrichment. genes included in the experiment and gene selection module are analyzed for go term enrichment. the results table includes enrichment statistics and go terminology. users may select any of the enriched terms to discover the complete set of associated genes.


differential expression. a volcano plot is a type of a scatter plot that helps in identification of diffferentially expressed genes. fold change  is presented on the x-axis , while statistical confidence, derived from the false discovery rate  increases along the y-axis . thus the further any gene sits from zero, the larger the fold change and greater the statistical confidence. the datasets displayed in this module are selected and computed in genboard, usually using bayseq  <cit> . by default, the data available represents differential expression between prespore and prestalk cells, and users may toggle between d. discoideum and its sister d. purpureum  <cit> . genes from the experiment and gene selection module are highlighted in the volcano plot. the user may click or draw a box around any other data points to append to or replace the gene selection. the volcano plot also supports selection of genes from the plot.


experiment comparison. the time courses of one or more genes may be compared across different experiments. users may choose additional experiments to be plotted along with the row-wise selection from the experiment and gene selection module. time course profiles may be colored by gene or experiment. the same interactivity experienced in the expression time course module applies here.


jbrowse. an implementation of the popular javascript genome browser enables viewing gene structure and sequence. jbrowse supports numerous custom tracks, such as chip-seq counts  <cit> , non-coding rna-seq read coverage  <cit> , and wgs variant analysis  <cit> , depending on the experiment and user permissions.




the jbrowse module and ncrna sub-module are novel additions relative to the original version of dictyexpress. besides the new software architecture and entirely rewritten code base, the level of interactivity has also been augmented by including more clickable features and user-controls via pop-up modules.

available datasets
dictyexpress showcases published transcriptomics datasets including developmental time courses of d. discoideum  and d. purpureum  <cit> ; ax <dig> development on nitrocellulose filters or during cyclic-amp pulsing in suspension  <cit> ; and wild type ax <dig> compared to various ax <dig> gtac mutant strains  <cit> . transcriptomics datasets also extend to taxonomic comparisons between p. pallidum, d. fasciculatum, and d. lacteum  <cit> . further, the application hosts the first comprehensive catalog of ncrna abundance during development  <cit>  and whole genome variant analysis of chemically mutagenized strains  <cit> . these data will remain open to the community for browsing and exploration. in the future, datasets will become available as they are published.

biological insights: real-life example workflow
the principal goal of dictyexpress is to provide biologists, who may not have advanced computational skills, the ability to derive novel insights from high-throughput data. we achieve this by providing the user a set of familiar, interconnected data visualization modules. a biologist may start with a question about the expression pattern of a favorite gene  in a certain dataset, and proceed by visualizing the gene in other datasets, or by selecting other genes in any of the other modules. explorations of this type may result in new hypotheses, many of which can be tested in silico prior to wet-lab verification. the visualizations can be captured, saved and communicated to colleagues by copying the url of any given screen.

in the accompanying example , we illustrate a simple route to discovering additional candidate target genes of the developmental regulator gtac  <cit> . the analysis begins by confirming the gtac-dependence of the target gene csaa, then identifies other genes with similar temporal expression profiles, and finally examines the behavior of one interesting candidate, abcg <dig>  in various gtac− mutant backgrounds. the example illustrates how a researcher may progress from initial knowledge about a gene of interest to a novel, testable hypothesis. several other examples can be viewed as video animations in the supplemental material, or online at https://www.youtube.com/watch?v=9aybghdjmqy.
fig.  <dig> example dictyexpress workflow. the workflow leads a user from a question to a novel insight and testable hypothesis




CONCLUSIONS
new experimental approaches continue to fuel dictyostelium research, and many of these rely on high-throughput sequencing analysis  <cit> . dictyexpress and genboard enable the broad adoption of next generation sequencing based inquiries. the reinvention of dictyexpress yielded an application that is easy to use, addresses many common analysis tasks, and may be extended to meet future needs. the inclusion of genboard offers biologists a solution for or data management and processing, to complement the exploratory analyses of dictyexpress. the entire information flow, from raw sequence data to hypothesis testing and novel insights, can now be accomplished in an intuitive and efficient workspace.

the new system architecture and technology stack are designed to evolve to keep pace with experimental, sequencing, and bioinformatics advances. we envision an ongoing process of improvement as technology and users demand. already we are eyeing updates such as providing programmatic access via api for data management and bioinformatics support that will appeal to data experts. we also plan to expand bioinformatics support and dataflow capabilities by leveraging open source contributions.

abbreviations
chip-seqchromatin immunoprecipitation sequencing

fcfold change

fdrfalse discovery rate

gogene ontology

ncrnanon-coding rna

rna-seqrna sequencing

wgswhole genome sequencing

