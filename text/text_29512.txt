BACKGROUND
transcription factors  are special dna-binding proteins, which are commonly recognized by rna polymerases for transcription initiation. under certain physiologic conditions, tfs regulate expression levels of downstream genes effectively by binding to specific dna fragments in the promoter regions. such a process is closely related to important biological processes such as activation of cell cycle, regulation of differentiation, and maintenance of immunologic tolerance etc  <cit> . generally, according to their structure and function, tfs can be grouped into four classes:  tfs with basic domains ,  tfs with zinc-coordinating dna binding domains ,  tfs with helix-turn-helix , and  tfs with beta-scaffold factors . it is well known that interaction mechanisms of tfs and motifs differ for different types of tfs  <cit> . therefore, it is a momentous task to identify and classify tfs for protein functional annotation and interaction mechanism investigations in this post genome era.

traditionally, a transcription factor, as a special case of dna-binding protein, is identified and classified by biochemical experiments, which can be time-consuming and costly, and difficult to apply to a large scale. to overcome these defects, computational approaches are often used. kumar et al. developed a support vector machine method to identify dna-binding proteins <cit> . hwang et al. constructed a web server for prediction of dna-binding residues in dna-binding proteins, where three machine learning methods  were implemented <cit> . cho et al. built up a hidden markov model to find out possible dna binding sites for zinc finger proteins <cit> . as for transcription factors, blast methods were applied in most cases  <cit> . we have also constructed a simple model based on the nearest neighbor algorithm  for tf prediction in our previous work <cit> .

in this paper, support vector machine  and error-correcting output coding  algorithm were utilized for tf identification and classification respectively. svm is a method of machine learning with minimum structure risk, and it is generally employed for classification of two classes. ecoc is a method originated from information and communication engineering field, and it is commonly used to solve multi-class classification problems. protein domains have been used as prediction signatures for protein-protein-interaction <cit> , protein structures <cit> , and protein sub-cellular locations <cit> . on the other hand, some proteomics studies indicated close correlation exists between functional sites  and protein functions  <cit> . therefore, we chose protein domains and functional sites as features to represent proteins and constructed a detector to distinguish tfs from non-tfs through a svm method. subsequently, a classifier based on ecoc algorithm was built to categorize tfs into four classes mentioned above. after building the detector and classifier, jackknife tests were used to assess performance of these two programs. in order to further investigate the efficiency of our approach, comprehensive comparison among blast, nna, and svm methods was carried out for tf identification, and comparison among blast, nna, and ecoc was executed for tf classification. a web server was implemented to facilitate the use of these two tools.

RESULTS
identification of transcription factors
a detector was constructed based on a linear svm model to distinguish tfs from non-tfs. we built a training data set excluding those proteins that were not annotated with any protein domains or functional sites. this training set contained  <dig> tfs and  <dig> non-tfs . each item of the dataset was denoted with a 4758-dimension feature vector .

jackknife cross validation test was used to evaluate capability of the detector, because the jackknife cross validation test was regarded as the most objective and rigorous  <cit> . the jackknife cross validation test was operated as follows: first, for each protein in the whole training dataset, the detector was trained on the rest of the dataset  then the trained detector was applied to predict the protein's attribute . four measures were calculated for subsequent analysis:  the true positive,  the false positive,  the true negative,  the false negative. the true positive and the true negative were correct predictions for tfs and non-tfs respectively. a false positive occurred when a non-tf was predicted as a tf and a false negative occurred when a tf was predicted as a non-tf. finally, the true positive rate, true negative rate, and total success rate were calculated by the following formulas:

  {truepositiverate=tptp+fntruenegativerate=tntn+fptotalsuccessrate=tp+tntp+fp+tn+fn 

here, the "true positive rate" is the percentage of tfs predicted correctly; the "true negative rate" is the percentage of non-tfs predicted correctly; and the "total success rate" is the overall percentage of correctly predicted items . furthermore, we performed the jackknife test in several conditions, where positive and negative items were mixed in different proportions to simulate tf distribution in the natural world. the rate of positive items versus negative ones was changed from 1: <dig> to 1: <dig>  with  <dig>  as the step size, where the negative ones was randomly picked from the overall non-tfs datasets. svm method was carried out for each condition in a jackknife way. results were shown in table  <dig>  when the numbers of positive and negative items were the same, the true positive rate reached  <dig> %, and the true negative rate achieved  <dig> %, which meant the detector had good performance for both tf and non-tf identification. when the negative item number increased from  <dig> to  <dig>  the accuracy of the detector did not change drastically according to the true positive, true negative rate, and total success rate. tests with different mixture rates showed that the method presented here was strong and robust.

comparison among blast, nna and svm algorithms
in order to survey performance of the detector further, comparison among blast, nna, and svm algorithm was carried out with the dataset mentioned in paragraph of identification of transcription factor . accuracy was calculated for positive and negative datasets respectively by the following formulas:

  {accuracyforpositiveset=correctlypredictedpositiveitemstotalpositiveitemsaccuracyfornegativeset=correctlypredictednegativeitemstotalnegativeitems 

in the blast method, the query protein was identified as the same category as its best hit when searching similarity in the whole dataset excluding the protein itself. while in nna method, a protein was assigned to a category with the nearest distance . the distance function was defined as:

  d=xi.xk‖xi‖‖xk‖ 

where, xi·xk is dot product of xi and xk, ||x|| is the modulus of a protein vector x. as shown in table  <dig>  for the positive set, accuracy obtained by blast and nna method was around 72% and 82%, which was lower than svm method by about 14% and 4% respectively. while in the negative set, accuracy acquired by blast, nna, and svm method was about 74%, 93% and 91% respectively. in essential, blast and nna algorithms sort an unknown item through attributes of a local item . hence, detectors based on these two algorithms incline to group an item into a category with a larger size. in our tf identification scenario, the number of negative set was much larger than that of the positive set, so items were more probably to be identified as negative by nna method. therefore the accuracy of identifying negative samples by nna method was slightly higher than svm algorithm. however integrated survey for both positive and negative sample indicated that svm performed better than blast and nna methods in a dataset with balanced positive and negative item numbers . therefore, we think performance of svm is superior to blast method and comparable to the nna method.

classification of transcription factors
for classification of transcription factor, the ecoc algorithm was combined with svm method to build a multi-class classifier, which was used to categorize tfs into four classes: tfs with basic domains, tfs with zinc-coordinating dna binding domains, tfs with helix-turn-helix, and tfs with beta-scaffold factors. in our work a dataset containing  <dig> tfs with known class information was built. it included  <dig> basic-tfs,  <dig> zinc-tfs,  <dig> helix-tfs, and  <dig> beta-tfs . each tf included in the dataset was presented with a 4758-dimension feature vector. finally, in order to assess power of the multi-class classifier, the jackknife test was used to evaluate performance of both ecoc and one-against-all algorithm , in both algorithms the svm method was employed as the basic binary classifier, and either the one-against-all or ecoc was utilized as the framework to link basic binary classifiers. the jackknife test was done as in the following: for each item in the dataset, its category was predicted using the parameters trained from the remaining items in the dataset excluding itself. then the success rates of the four classes were calculated for the two algorithms. equations used for success rates were given as below:

  {success rate for basic−tf=correctly predicted basic−tftotalbasic−tf success rate for zinc−tf=correctly predictedzinc−tftotalzinc−tfsuccess rate for helix−tf=correctly predictedhelix−tftotalhelix−tfsuccess rate for beta−tf=correctly predicted beta−tftotalbeta−tfsuccess rate for overall=correctly predicted tftotal tf 

results of the one-against-all and ecoc algorithm were listed in table  <dig>  compared with the one-against-all algorithm, accuracy of ecoc algorithm increased notably. the success rates were improved  <dig> %,  <dig> %,  <dig> %, and  <dig> % for basic-tf, zinc-tf, helix-tf, and beta-tf respectively. for overall accuracy, the error rate was reduced from  <dig> % to  <dig> %. this comparison demonstrated that the ecoc method surpassed the one-against-all method for tf classification.

comparison among blast, nna, and ecoc algorithms
in order to investigate performance of the multi-class classifier further, comparison of blast, nna, and ecoc algorithm was executed with the dataset described above . blast and nna methods were performed in similar ways as described in the section of comparison among blast, nna, and svm algorithms. at last, each category of tfs and total success rate was calculated for blast, nna, and ecoc algorithm through formulas  <dig>  as shown in table  <dig>  success rates of all four tf classes were elevated to some extent when the ecoc approach was employed. detailed analysis found that when comparing blast to ecoc algorithm, the maximal performance enhancement occurred in the basic-tf class, with a success rate lifted from  <dig> % to  <dig> %. when comparing nna and ecoc algorithm, the biggest improvement appeared in the beta-tf class with a success rate raised from  <dig> % to  <dig> %. these results illuminated that ecoc method did have strong power in error correcting and fine tuning performance in multi-class categorization. when the whole dataset was considered, accuracy of blast and nna was about 83% and 92%, which was around 15% and 6% lower than ecoc method respectively. this demonstrated that ecoc method outperformed greatly the blast and nna methods in tf classification.

implement
a web server for the detector and classifier has been constructed to facilitate the application of the two tools. currently, two data types are supported by the server: swiss-prot ac numbers and protein sequences in fasta format. for protein with swiss-prot ac numbers, information of protein domains and functional sites for the protein was extracted from the interpro database. for a new sequence that is not covered in interpro database, we used a program named interproscan to screen its potential protein domains and functional sites. interproscan is a program developed by embl-ebi. it combines different protein signature recognition methods into one system. input of the program is a protein sequence with fasta format and its output is a result file that contains interpro entries of the sequence. default parameters of the program were used in our research. for more detailed information of the program, please refer to webpage of interproscan <cit> . currently, we have downloaded the program and combined it with our transcription factor tools. users are required to provide an email address when submitting a new task. after the task is done, a reminding email will be sent to the user automatically.

CONCLUSIONS
in this paper, an automatic detector was built for tf identification and a multi-class classifier was constructed for tf classification. results of our work indicated that protein domains and functional sites were valid features for tf identification and classification. moreover, our research was carried out on datasets with removed redundancy of sequence similarity, which meant our methods could provide beneficial supplement to sequence-similarity-based algorithms, such as the blast method, for tf identification and classification. we also believe that ecoc algorithm will have a broad application in life science, for example, classification of protein quaternary structures, categorization of kinase and prediction of protein subcellular localization etc. the detector and classifier implemented in our web server can be utilized as effective tools for tf discovery and annotation, especially for proteins with little previous knowledge. although the two tools presented here can identify and classify tfs accurately when they have some protein domains and/or functional sites available, the two tools can not predict a protein with no protein domain or functional site annotated since this information are required in order to represent the protein in a vector. however, we believe that the impact of this limitation may become less significant since more protein domains and functional sites are obtained by biological experiments and more programs can get them directly from the protein sequences with better accuracy.

for tf identification, the svm algorithm was employed to build the detector and performance of the detector was fairly good. further investigations on datasets with different sample mixtures showed that the detector was robust and stable. moreover, with protein domains and functional sites, both nna and svm methods perform notably better than the blast method. the svm method is comparable to the nna method for tf identification.

for tf classification, a brand-new algorithm called ecoc was introduced and employed for tf classification. in order to investigate the power of ecoc algorithm, comparison was executed in following two levels: in the first level, the ecoc algorithm was utilized as a connection framework for multi-class and was compared with a general multi-class connection algorithm named one-against-all, where the svm method was used to build basic binary classifier for both algorithms. comparison on this level showed that the capability of ecoc was outstanding and it surpassed the general connection algorithm for multi-class classification problems. in the second level, the ecoc was combined with svm as the underlining method and was compared with the blast and nna method. comparison on this level indicated that the ecoc algorithm did have strong power in error correcting and fine tuning performance in multi-class categorization. considering results of the two levels, we concluded that the ecoc combined with svm was a powerful tool for tf classification.

