BACKGROUND
next generation sequencing is nowadays routinely applied in almost every field of biomedical research  <cit> . to cope with the resulting high-throughput but error prone reads, the base quality  <cit> , which corresponds to the position-specific error probability, is widely used and accepted. unfortunately, the raw base quality from the illumina default basecaller  is inaccurate  <cit> ; thus a number of basecallers aimed at achieving better performance have been developed. they either apply a model-based strategy  or use supervised learning approaches with an additional training set such as phix <dig> reads spiked into the run . these approaches in general give a more accurate base quality as well as introduce fewer sequencing errors, but they require access to the fluorescence intensity data, which is often discarded since the storage facilities for such data is beyond the capacity of most laboratories. alternative base quality recalibration tools such as gatk  <cit>  and reqon  <cit>  attempt to find the error pattern from the raw base quality, and reassign each base a recalibrated base quality to reflect the real error probability. however, these tools mostly are designed for typical coverage data and are untested for minor allele detection in very high sequence coverage .

there are many applications involving high sequence coverage data where minor alleles are of biological interest, e.g. heteroplasmy in mitochondrial dna  <cit> , heterozygous alleles in polyploidy organisms or in pool sequencing  <cit> , and somatic mutations with low minor allele frequency  in early development in cancers that change over time  <cit> . the detection of mtdna heteroplasmy has developed extensively in recent years, from simply setting a cutoff on read counts that satisfy some base quality requirement   to more sophisticated use of raw base quality with the logarithm likelihood ratio approach  <cit> . here, we propose a base recalibration tool to increase the sensitivity of minor allele detection while avoiding most sequence error hotspots. we also compare our base recalibration tool with others and discuss why they fail to accurately distinguish minor alleles from sequence errors.

we mainly compare our approach to the widely used gatk base recalibration  <cit> ; reqon  <cit>  is another base recalibration tool, unfortunately, the severe memory demands of reqon preclude use with vey high sequence coverage data. some applications such as de novo genome assembly can also benefit from error correction tools , but we exclude the comparison to such tools because they edit the bases directly instead of reducing the base quality scores, thereby precluding direct comparisons to our method. more importantly, such methods assume explicitly that there are sequence errors in reads contributing to low frequency kmers, which is not the case for true minor alleles of low level frequency. our method also uses an additional training set spiked into the run , however these basecallers recalibrate the raw fluorescence data to both reduce sequence errors and improve the accuracy in base quality, while our method recalibrates the measured base quality scores and thus affects the base quality only.

implementation
sequencing error is often highly correlated with the machine cycle, observed nucleotide, nucleotide observed in the previous machine cycle, and read direction, and the goal of base recalibration is to remove systematic errors related to these conditions. our approach, called segreg  works in two steps. in the first step, it divides bases in the spiked in training set  into various groups, where a group is a combination of the following relevant conditions:whether it is the first or second read from paired-end reads

the machine cycle

the current observed nucleotide 

the observed nucleotide in the previous machine cycle



segmented regression is then applied to each group according to the empirical base quality, which is calculated within the group by assuming all differences from the consensus sequence are sequence errors, excluding positions with known minor alleles. the segmented regression is given by: mina <dig> b <dig> a <dig> b <dig> bk∑xr_i<bkwi*xe_i−a0*xr_i−b02+∑xr_i≥bkwi*xe_i−a1*xr_i−b <dig> 

where y0 = a0*x + b <dig> and y1 = a1*x + b <dig> are two lines and bk is the break point, xr_i is the raw base quality, xe_i and w_i is the corresponding empirical score and the number of bases of xr_i respectively. for a typical pair ended library with read length  <dig>  the bases in the training set are divided into  <dig> groups , and in some groups w_i can be small, which makes xe_i inaccurate ; we thus mask those groups with w_i <  <dig> from downstream analysis. as shown in additional file 1: figure s <dig>  a number of bins  have only a few bases, resulting in inaccurate estimates of empirical base quality, and hence these are masked. however, many bins have a sufficient number of bases for an accurate estimate of empirical base quality, especially for intermediate range of base quality scores which are of most interest .

figure  <dig> gives four examples of the results of segmented regression randomly selected from the thousands of groups. segmented regression assumes that there is a linear relationship of raw quality score with the recalibrated score; we show below that assuming a more complicated relationship, such as a quadratic relationship, does not improve the performance of the method. we also assume that the background error rate of the basecaller is underestimated, which has a larger effect on higher base quality scores. for example, suppose there is a systematic error with error rate  <dig>  underestimated by the sequencer. then for the raw quality score of  <dig> , the recalibrated score is  <dig>  , while for the raw quality score of  <dig> , the recalibrated score is  <dig>  . in the second step, segreg once more assigns each base from the user’s data to one of these groups, e.g. j, and uses the bk_j and the regression lines y0_j and y1_j of the respective group to map the raw phred score to the recalibrated score. the source code is publicly available at https://github.com/sendru/segreg.fig.  <dig> four random examples of segreg recalibration. bases are divided into groups based on the criteria described in the text, and in each group segmental regression is applied. the correspondence between raw and empirical phred scores is plotted as dots for bases of the same group and the breakpoint is chosen by the regression algorithm, with the two segments regressed to dots of the same color. if the dot  shown in the plot is based on less than  <dig> observations, the corresponding empirical base quality is imprecise and hence is not considered in the regression analysis



RESULTS
simulation
we first use simulation data for the comparison of segreg with other approaches. although any simulation is a simplification of real data, it has the advantage over real data in that all sequence errors and true minor alleles are known beforehand, whereas with real data it is not possible to distinguish all true minor alleles from sequence error hotspots, even in very high coverage data. for example, a common way of generating true minor alleles is to mix samples with different consensus sequences in different ratios and focus on the positions that differ in the consensus sequences as the only true minor alleles , but real samples may also contain true minor alleles which are then falsely considered to be sequence errors, thereby skewing the evaluation of the method. the simulated sequences were generated by simseq.  <cit>  in brief, thirteen complete mtdna genome sequences representing the major haplogroups in modern humans were downloaded from ncbi and used as the templates for simulated reads ; the sequence coverage is about 4000x. by pair-wise alignment between the revised cambridge reference sequence  and the respective template sequences, all reads were aligned to the correct position in the rcrs by crossmap  <cit>  without misalignment issues. additionally, we applied different training sets for gatk results: gatk <dig> used dbsnp <dig>  <cit>  for known snps as the control; gatk <dig> used the polymorphic sites of all  <dig> template sequences as the control; gatk <dig> used the polymorphic sites of the respective template sequence  as the control; and gatk <dig> used bwa  <cit>  for alignment and dbsnp <dig> as the control, which represents a general use of gatk. we used the frequency-weighted squared error   <cit> , which is defined as the sum of the squared errors between the predicted base quality and the empirical base quality, weighted by the relative frequency, to compare the accuracy of these tools. the recalibrated base quality in one of the simulations  from different methods, as well as the raw quality scores , are compared to the empirical scores in fig.  <dig>  in general, the fwse is relatively high , because simseq generates many bases with the lowest base quality , which has a higher empirical base quality, and none of the methods can improve it. gatk <dig> has a larger fwse than gatk <dig>  which reflects the misalignment issue; with more knowledge of the actual genetic variants, gatk can improve the accuracy of recalibrated base quality as gatk <dig> has a lower fwse than gatk <dig>  and gatk <dig> has a lower fwse than gatk <dig>  our method, segreg, has the lowest fwse, which probably reflects both the direct regression on the multiple conditional probability in our model, as well as the simplicity of the error model generated from simseq, which is based on mtdna sequence data .fig.  <dig> recalibrated base quality scores generated from different methods for simulated data. for each method the recalibrated scores are compared to the empirical scores; the ideal  line is shown in each plot. the frequency-weighted squared error  is also given for each method. raw: sequence generated by simulation ; seg: this study; gatk1: dbsnp  <dig> is used as known database of snps, no misalignment issue ; gatk2: snps in the entire dataset of  <dig> mtdna genome sequences, no misalignment issue; gatk3: the actual genetic variants  for just the particular mtdna genome sequence are used, no misalignment issue; gatk4: dbsnp <dig> is used, with potential misalignment issues 



figure  <dig> gives the complete comparison of the  <dig> simulations. the relationships shown in fig.  <dig> still hold in general with a few exceptions: in the template belong to haplogroup l <dig>  there are  <dig> snps missing in dbsnp 142; as a result, both gatk <dig> and gatk <dig> has a larger fwse value than the raw base quality, which means with an inappropriate database as the control, gatk can actually produce results that are worse than the raw base quality. gatk <dig> is not always better than gatk <dig>  as shown for haplogroup d <dig>  which together with the fact that gatk <dig> is always better than gatk <dig> reflects the impact of the choice of control snps on the results obtained with gatk. when compared to the fwse from raw base quality and from segreg, gatk has more variance in all settings, especially for african haplogroups , which may result from the fact that the reference genome  belongs to haplogroup h <dig>  which is mostly distributed in european populations.fig.  <dig> the fwse for different base recalibration approaches applied to simulations based on  <dig> different mtdna templates. the haplogroup for each mtdna template is given on the x axis. the methods for comparison are the same as fig. 2




in these simulations there are no true minor alleles in the data, i.e. any differences between reads and the consensus sequence are sequence errors. to simulate true minor alleles, we randomly selected a small portion of the reads from one template and mixed them with reads from another template, after correctly aligning them to the rcrs as described before. a total of  <dig>  pairwise mixture samples were generated with an average sequence coverage of  <dig> and  <dig>  % mixture, resulting in  <dig> minor alleles as the true set. note that not all the reads that differ from the consensus sequence at a true minor allele site will reflect true minor alleles. for example, suppose all bases have an error rate of  <dig> , so the observed frequency of reads with different bases due to sequence error is  <dig> /3 =  <dig>  . as a result, at a sequence coverage of  <dig> we expect about  <dig> reads from sequence error and about  <dig> reads  from true minor alleles. we also need to consider the sampling variance, for example, with  <dig>  % of reads randomly chosen from the second template, the actual mixture rate for all  <dig> minor allele  ranges from  <dig> to  <dig>  %. in real applications, the variance should be even greater, given sequence error hotspots, pcr bias in gc rich regions and illumina strand bias, etc.

additional file 4: figure s <dig> shows the distribution of fwse in the simulated mixtures. the pattern is very similar to that for the previous simulation: gatk shows relative large variance and a few outliers. the snp database used as the control for gatk does not appear to greatly influence the minor allele calling, as the frequency distribution of minor alleles that are included in dbsnp  <dig> does not differ from the distribution of minor alleles that are not in the database .

to see whether the recalibrated base quality provides an improvement in minor allele calling, we first assign every minor allele site a value, which can be written as ∑xiei, where x_i is the number of reads covering that site whose base quality score is i, and the e_i is the error rate corresponding to the phred score i. we then compared the  <dig> lowest values among the  <dig> true minor allele sites  to the  <dig> highest values among the remaining sites . the frequency distributions of the weakest true minor alleles and strongest sequence errors are shown in fig.  <dig>  as explained above, true minor allele sites are also covered by reads due to sequence errors, and a few additional reads from the true minor allele does not have a strong impact on the frequency distribution. however it is still surprising that gatk downgrades the base quality in the true minor allele sites. apparently gatk assigns a lower base quality to minor alleles that are not at inferred snp sites. such a strategy is fine for snp calling in reasonable sequence coverage, but it is detrimental for minor allele detection. moreover, since reads from minor alleles constitute a very small portion of the total reads, the difference is not apparent in the fwse. segreg, on the other hand, does not introduce such a bias and leaves the actual calling of snps to the downstream tools.fig.  <dig> frequency distribution of the base quality from each method. blue line: the average frequency distribution of true minor alleles with the  <dig> weakest signals; red line: the average frequency distribution of sequencing errors with the  <dig> strongest signals . note that with gatk the weakest true minor alleles in general have lower recalibrated base quality scores than the strongest sequencing errors, while with segreg the distributions of recalibrated base quality scores are more similar for the weakest true minor alleles vs. the strongest sequencing errors



to give an objective evaluation of these tools, the logarithm likelihood ratio   <cit>  was applied to the recalibrated score for minor allele detection. briefly, llr gives a likelihood ratio for each site; we then set cutoffs to the ratio as the classification model, which gives conditional positive  and conditional negative  outcomes respectively. formally, the true positive rate is defined as ∑truepositive∑conditionalpositive and the false positive rate is ∑falsepositive∑conditionalnegative. using different cutoffs of the llr, we then get the receiver operating characteristic  curve of the different recalibration tools . the fact that gatk has a smaller area under the roc curve compared to the raw base quality confirms that gatk actually worsens the minor allele calling, even though it has a smaller fwse.fig.  <dig> receiver operating characteristic  curve for llr from raw base quality  and recalibrated base quality  scores



we additionally used the simulation data for parameter tuning in applying llr based-segreg to identify minor alleles. for the  <dig> minor alleles produced in the artificial mixtures, the maf estimated from raw read counts and that estimated by maximum likelihood are both highly correlated with the real maf . additional file 6: figure s <dig> shows the maximum llr from sequence error at different sequence depths; increasing sequence depth results in higher raw quality-based llr, but this pattern disappears after recalibration with segreg, indicating that segreg reduces this systematic bias. moreover, a cutoff of llr >  <dig> rules out almost all minor alleles due to sequence error. for a given site maf, the llr distribution for different sequence coverage is given in additional file 7: figure s <dig>  in brief, for minor alleles with site maf around 1 %, a sequence coverage of  <dig> is needed for distinguishing such minor alleles from sequencing error; for site maf around  <dig>  % a sequence coverage of  <dig>  is needed; and a sequence coverage >  <dig>  is needed for site maf around  <dig>  %.

although any simulation is a simplification of real data, there are a number of insights that arise from knowing the true minor alleles vs. the sequence errors. first, for a given minor allele frequency there can still be substantial variation in the number of covered reads with the minor allele , which can contribute to difficulties in distinguishing true minor alleles from sequence errors. second, even with a constant observed maf, llr separates true minor alleles from sequence errors at different rates depending on the sequence coverage. third, the maximum llr  from sequence error increases with the sequence coverage . these observations would not arise from real data, where true minor alleles cannot be distinguished with certainty from sequence errors.

real sequence data
we next used phix <dig> dna  for comparison. briefly, reads from spiked-in phix <dig> in one illumina hiseq <dig> run were extracted, resulting in a total of  <dig>  million reads without pcr duplication and an average coverage of about  <dig> . two previously reported polymorphic sites   <cit>  were also detected and masked from the downstream analysis. the consensus sequence was called and used as the reference to control for misalignment issues. the result of gatk and segreg are shown in additional file 2: figure s <dig>  along with results for segreg where we only used half of the data for the training set. all three methods improve the base quality to high accuracy; however note that gatk implementation is atypical. first, it does not have the misalignment issue; and second, all of the occurring genetic variants are included in the control snp database . note also that using half the data for the training set produces acceptable results, although the performance of segreg improves with more reads in the training set .

we also applied quadratic regression to the phix <dig> data  to obtain recalibrated base quality scores, however quadratic regression does not provide an overall improvement. part of the reason is that there are only a few bases in many bins , which makes the empirical base quality inaccurate. moreover, the overall linear relationship between the recalibrated and the raw base quality also appears to provide important information.

a common assumption used in general snp calling pipelines is that all low frequency differences from the consensus sequence are sequence errors. any application that explicitly  or implicitly  uses this rule will be biased against detecting true minor alleles. we also show that fwse is not an appropriate measure for comparing different methods, since reads from the minor alleles constitute a very small portion of the total reads, and hence the best way to compare different measures is using the roc curve, which in turn requires knowing the true minor alleles.

the phix <dig> phage is cultured from a single strain, and thus in many applications any differences between reads and the consensus are assumed to be sequence errors. however, as found both in our study and previously  <cit> , true minor alleles exist with a frequency around 25 % at positions  <dig> and  <dig>  to further investigate whether there are additional true minor alleles, we applied segreg independently to  <dig> runs of phix <dig> sequences  from different illumina platforms  and different sequence callers and analyzed them with the llr approach. overall, the true minor alleles are expected to be observed in different runs, although weak signals might not be detected in every run. the observed minor alleles with llr >  <dig> were further divided into several groups: cpg site ; c- > t mutation  where c is the major allele and t is the minor allele except cpg sites; t- > c mutation ; c- > a mutation ; a- > c mutation ; and g- > c mutation ; t- > a mutations were not considered as none were observed. additionally, we applied a strand bias test  <cit>  and a mann-whitney u test on the position within the read, called posranksum, to these minor alleles, requiring sb <  <dig>  and posranksum > - <dig> . minor alleles in cpg sites are the only group whose minor alleles all passed these two tests, suggesting they are true minor alleles, while c- > a mutations decreased from  <dig> to  <dig> and g- > c mutations from  <dig> to  <dig> after applying these filters, indicating they are caused by sequencing errors. the large quantity of sequence errors in c- > a mutations also means that the illumina chemistry has a high error rate in distinguishing a from c, which might explain the fact that a- > c mutations have a relative large llr score and are almost unchanged after additional tests , suggesting it is the main source for sequence error hotspots. the llr distribution for each group of minor alleles is shown in fig.  <dig> fig.  <dig> boxplot of the llr distribution for different types of minor alleles  observed in  <dig> runs of phix <dig>  results from the strand bias and position rank sum tests are also shown, as follows, with the number of alleles in parentheses: cpg, minor alleles on cpg sites; p <dig>  cpg after sb <  <dig> and posranksum > - <dig> filters; ct, c- > t mutations excluding cpg sites, where t is the minor allele; ct <dig>  ct after filters; tc, t- > c mutations; tc <dig>  tc after filters; ca, c- > a mutations; ca <dig>  ca after filters; ac, a- > c mutations; ac <dig>  ac after filters; gc, g- > c mutations; gc <dig>  gc after filters. no a- > t minor alleles were observed



although strand bias test and position rank sum test are effective to remove false minor alleles, the resulting minor alleles after filtering still have a low transition to transversion ratio , indicating that most of them are still sequence error hotspots. in additional file 9: table s <dig>  we additionally set the cut-off to > <dig>  in maf and compared minor alleles in these runs. the strand bias test and position rank sum test look reasonable since minor alleles filtered by these tests are sequencer/basecaller specific, and concentrated in the region 3012– <dig> near two ggt motifs , which is reported to be an error prone pattern  <cit> . four minor alleles from ac mutations are likely to be sequence error hotspots as discussed before. besides the two previous reported minor alleles , we additionally report two sites that by our criteria harbor true minor alleles . the only position that is unclear is position  <dig>  but its maf is very close to the cutoff . although these two additional suggested minor alleles are likely to be true minor alleles, overall there are too few minor alleles in the phix <dig> data to give a meaningful roc curve.

we next applied segreg-based llr to  <dig> mtdna genome sequences  <cit> , and compared our results to a previous llr pipeline  <cit> . with mtdna, the transition to transversion  ratio can also be used as an indicator of error rate for large datasets, as mtdna mutations show a strong excess of transitions over transversions  <cit> . the sequencing coverage of the  <dig> mtdna samples ranges from  <dig> to  <dig>  with median sequence coverage of  <dig>  we found  <dig> minor alleles with a ti/tv ratio of  <dig>  from the previous llr pipeline  <cit>  . using segreg-based llr as shown in additional file 10: figure s <dig>  we found  <dig> minor alleles with ti/tv ratio  <dig> , which means we found  <dig> times more minor alleles while keeping the error rate at the same level. some of this discrepancy is due to the fact that the previous pipeline uses additional criteria to identify true heteroplasmies vs. potential contamination and nuclear inserts of mtdna , whereas our pipeline only tries to distinguish true minor alleles  from sequence errors. however, if we take the same number of minor alleles  with the highest llr, the ti/tv ratio is above  <dig> . since heteroplasmies represent ongoing mutation and the ti/tv ratio declines when sequences from longer evolutionary distances are compared  <cit> , the apparent two levels of ti/tv ratio in additional file 10: figure s <dig> might reflect heteroplasmies and contamination/numt effects respectively. to further validate that the ti/tv ratio is meaningful in this context, additional file 11: figure s <dig> shows the ti/tv distribution among these  <dig> samples for inferred true minor alleles vs. sequence errors.

CONCLUSIONS
detection of minor alleles with low frequency in very high coverage  sequence data is still a challenging task, mainly because both a good model for sequence errors and an accepted “gold standard” for calling true minor alleles with low level frequency in real sequence data are lacking. despite these limitations, our method segreg offers several improvements compared to gatk. first, the gatk baserecalibration modulo requires the indelrealignment modulo to run properly for the user’s data, which is often computationally infeasible for very high sequence coverage and thus introduces additional bias. by contrast, segreg merely requires a training set  to align correctly, which is relatively fast and easy to achieve by mapping reads to the consensus sequence. second, as we shown in the simulations , the performance of gatk depends greatly on the control database of known snps, and in many applications there will be additional snps in the data. segreg, on the other hand, only requires the genetic variants of the spiked-in control sequence, ). while it is likely that there are additional true minor alleles in phix <dig>  especially in cpg sites, , the very low maf for these sites , means they introduce little bias in the empirical base quality calculation. lastly, but most importantly, the conditional error model in gatk can be represented by pre|a <dig> …,a_n=∑covi*pre|ai 

where a_i are conditions used in the model, and cov_i are covariant functions for each condition. gatk estimates pr independently and uses machine learning for covariants, while segreg estimates pr directly from the training data. while segreg requires more reads in the training set than gatk, as the performance is decreased if segreg is trained on only half of the reads , nevertheless segreg exhibits greatly improved performance in minor allele detection.

we also show that fwse is not appropriate for evaluating different base quality recalibration tools in terms of minor allele detection, since some tools such as gatk improve the overall precision of snp calling at the cost of failing to detect low frequency minor alleles. however, a thorough comparison of segreg and other base quality recalibration tools would need true minor alleles in real sequence data; in the absence of such data, we relied on simulation data for such comparison. by comparing the segreg-based llr results from different runs of phix <dig> dna, minor alleles that are likely to be true minor alleles, such as those at cpg sites due to the elevated mutation rate at such sites, are mixed with minor alleles that are likely to be sequence error hotspots in illumina reads, such as a- > c mutations. since repeated runs for a single strain such as phix <dig> has mixed signals from both true minor alleles and sequence error hostspots, distinguishing these remains a challenge for further studies.

nevertheless, our method segreg does improve detection of mtdna heteroplasmies. a commonly-used approach for detecting such minor alleles is to set a cutoff in maf to a high level and concentrate on significant minor alleles only, thereby missing true minor alleles with low maf. by using the ti/tv ratio as an additional error indicator for mtdna, our results for maf >  <dig>  % shows the same level of error rate as maf > 1 % from the previous pipeline  <cit> . this improvement is due to the improved performance of segreg-based llr . additionally, the ti/tv ratio  provides useful information in distinguishing different sources of minor alleles in mtdna. overall, segreg-based llr provides investigators with a new and more accurate approach for identifying true minor alleles in high coverage sequence data.

