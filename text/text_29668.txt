BACKGROUND
over the past decade, evidence from numerous high-throughput genomic platforms reveals that even though less than 2% of the mammalian genome encodes proteins, a significant fraction can be transcribed into different complex families of non-coding rnas   <cit> . other than micrornas and other families of small non-coding rnas, long non-coding rnas  are emerging as potent regulators of gene expression  <cit> . originally identified by guttman et al.  <cit>  from four mouse cell types using chromatin state maps as a subtype of lncrnas, long intergenic non-coding rnas , are discrete transcriptional unit intervening known protein-coding loci. recent studies demonstrate the functional significance of lincrnas. however, it remains a daunting task to identify all the lincrnas existent in various biological processes and systems.

whole transcriptome sequencing, known as rna-seq, offers the promise of rapid comprehensive discovery of novel genes and transcripts  <cit> . with the de novo assembly software such as cufflinks  <cit>  and scripture  <cit> , a large set of novel assemblies can be obtained from rna-seq data. several programs have been used to facilitate the cataloging of lincrnas from rna-seq assemblies. for example, li et al.  <cit>  used codon substitution frequency  score  <cit>  to identify lincrnas from de novo assembled transcripts in chicken skeletal muscle. pauli et al.  <cit>  took advantage of phylocsf score  <cit>  followed by other filtering steps to identify lincrnas expressed during zebrafish embryogenesis. cabili et al.  <cit>  also used phylocsf program to eliminate the de novo assembled transcripts with positive coding potential and identified ~ <dig> lincrna loci in  <dig> human tissues. however, the extremely high computational times demanded by phylocsf, may become the bottleneck for handling millions of assemblies generated from high throughput sequencing. furthermore, neither csf nor phylocsf provides publicly available tools that can be readily integrated into the lincrna identification workflow. therefore, ab initio reconstruction of a reliable set of lincrnas through computational method remains a daunting task. there is an urgent need for such a standalone tool to accurately and quickly distinguish lincrnas from extremely large dataset. previous studies showed that supervised machine learning method, especially support vector machine , may represent a potential solution for accurate identification of lincrnas and protein coding gene transcripts . for example, conc   <cit> , cpc   <cit> , and potrait  <cit>  have been developed to discriminate pcts and ncrnas in general. however, the performance of these programs is largely dependent on datasets; for instance, conc is slow on analyzing large datasets  <cit> , which may limit its usefulness in the transcriptome data analysis. cpc works well with known pcts but may tend to classify novel pcts into lincrnas if they have not been recorded in the protein databases used by cpc  <cit> . portait was specifically designed for the neglected species such as fungus et al.  <cit> . moreover, their performance on the identification of lincrnas has not been evaluated.

in this study, we present a new svm-based classifier and a standalone tool, iseerna. it demonstrated high accuracy, balanced sensitivity and specificity for both lincrna and pct datasets. it also outperforms others by running several order-of-magnitudes faster, thus representing an ideal tool for lincrna identification from transcriptome sequencing data.

methods
standard input file formats
to be compatible with de novo assembly software, such as cufflinks and scripture, which use gtf/gff or bed file format, we set these three formats as default input file formats for iseerna. this will allow easy integration of iseerna into the transcriptome data analysis workflow. the detailed information about the file formats can be found at ucsc genome browser .

svm settings
in order to build svm models for iseerna, we used libsvm  implementation  <cit>  with radial basis functional kernel which was shown to be the best kernel to deal with this task  <cit> . during the training, svm was set as binary classifier with the two classes being lincrnas  and pcts . optimized svm parameters c and gamma were obtained by using the accompanying grid.py script with  <dig>  randomly selected instances from the training dataset. to obtain the best performance model, 10-fold cross-validation was used. in addition, two models were trained and tested separately using species specific datasets for human and mouse, respectively.

phylocsf and cpc settings
iseerna was benchmarked against two other classification programs: phylocsf and cpc. these two programs were installed locally and executed with default parameters. for phylocsf, a score of  <dig> was used as the classification parameter. for cpc, uniref <dig>  <cit>  was employed as protein database and the default classification model developed by its authors was used.

performance measurements
to evaluate the performance, accuracy  and matthews correlation coefficient   <cit> , an indicator used in machine learning as a measure of the quality of binary  classification, were calculated; and receiver operating characteristic  curves were generated.

the following equations were used for calculating sensitivity and specificity:

  sensitivity=tptp+fn 

  specificity=tntn+fp 

  mcc=tp*tn-fp*fn 

where tp, fp, tn and fn are the numbers of true positives , false positives , true negatives  and false negatives .

RESULTS
gold-standard datasets
the quality of the training data is ultra-important for building an accurate svm model. in order to obtain a pool of high quality lincrnas and pcts as gold-standard datasets , we collected lincrnas and pcts annotated either as "known" or "novel" from human and vertebrate analysis and annotation    <cit>  project. these lincrna annotations were manually curated and supported by some experimental evidences such as spliced cdnas and ests et al., thus providing an ideal source for lincrnas. we further filtered the data with the transcript length . next, for lincrnas, we eliminated those transcripts that were annotated as pcts by refseq  <cit> ; similarly, for pcts, we only kept those transcripts that have consistent annotations in both havana and refseq. as a result, we created a gold-standard dataset with a total of  <dig>  transcripts for human, including  <dig>  lincrnas and  <dig>  pcts. a total of  <dig>  transcripts were collected for mouse, including  <dig> lincrnas and  <dig>  pcts. in order to generate the training and testing datasets from this gold-standard dataset, we randomly selected half of the lincrnas and roughly equal number of pcts to form a balanced training dataset. we therefore obtained a training dataset with  <dig>  lincrnas and  <dig>  pcts for human, and a second one with  <dig> lincrnas and  <dig> pcts for mouse . the remaining lincrnas and pcts in gold-standard dataset were combined to form two testing datasets for human and mouse separately.

feature selection
selecting appropriate features is one of the most critical steps to build a svm classifier. many features have been used in distinguishing ncrnas from pcts. these can be classified to three categories: conservation, open reading frame  and nucleotide sequences-based  <cit> . we employed those features that have demonstrated good potential to differentiate pcts from ncrnas in general considering lincrnas share some common sequence properties with other classes of ncrnas. as a result, a total of  <dig> features in three categories were used to build our svm models. the first class of feature is conservation. many studies have demonstrated that lincrnas are less conserved than pcts in general  <cit> , making this a suitable feature for distinguishing them. to calculate the conservation score, we first downloaded the base-resolution phastcons  <cit>  score files from ucsc; the scores of all nucleotides were then collected and averaged to obtain the conservation score for each transcript. the homolog search based features were among the most popular features for ncrna classification but not employed for the following reasons. first, many novel pcts are not collected in the protein database so that they tend to be mis-classifed as ncrnas; second, it showed strong correlation with the conservation score , which did not further improve the performance when conservation is used. lastly, it is very demanding in terms of computational time so that it tremendously reduces the performance of svm classifier. two open reading frame  related features were selected as the second class, i.e. orf length and orf proportion defined by the length of an orf divided by the total length of the transcript. we reasoned that a true lincrna transcript, compared to pcts, is more likely to have a low-quality orf reflected by either a short orf or a small proportion. txcdspredict program from ucsc genome browser was employed to calculate the orf for each transcript; the other seven features constitute the third class including frequencies of seven di- or tri-nucleotide sequences , which contribute the most to the overall performance. some other nucleotide based features were not employed due to their weak classification ability  <cit> . we found that all the three classes were useful to some extent in distinguishing lincrnas and pcts when used alone; and exon conservation score and orf proportion showed the highest discrimination power among all the features. .

performance evaluation
using roc, we first evaluated the performance of iseerna when using three classes of features independently or in combination. as shown in figure  <dig>  each class is capable of distinguishing but the combination of all features led to the best performance. this justified the need of using all  <dig> features for building the trained svm models for iseerna. during the training, iseerna presented a  <dig> cross-validation accuracy of  <dig> % and  <dig> % on training datasets of human and mouse respectively. when applied the trained models on the testing datasets, iseerna showed an accuracy of  <dig> %  on lincrnas and  <dig> %  pcts for human testing dataset . similarly, iseerna correctly predicted  <dig> %  lincrnas and  <dig> %  pcts for mouse testing dataset .

we further evaluated iseerna performance on several benchmark datasets collected from published studies. the first dataset is a collection of experimentally validated functional lincrnas . iseerna successfully identified these transcripts as lincrnas with 100% accuracy. we then applied iseerna on a collection of  <dig>  human lincrnas identified from de novo assembled transcripts  <cit> , iseerna correctly predicted  <dig> %  of these lincrnas . these results further demonstrated the high accuracy of iseerna for the identification of lincrnas.

comparison to other methods
next we compared iseerna performance with phylocsf and cpc. since the number of well-annotated pcts is much higher than that of lincrnas, in order to have a fair comparison, we created a balanced comparison dataset from the gold-standard dataset collected before . this dataset includes all  <dig>  lincrnas and  <dig>  pcts selected from the human testing dataset which did not appear in the training dataset. when iseerna, cpc, and phylocsf were applied on this dataset, at the default thresholds, iseerna demonstrated the best overall performance measured by mcc  followed by cpc  and phylocsf . iseerna also showed the highest specificity  . additionally, iseerna displayed a better sensitivity  compared to phylocsf , but lower than cpc  . we have to point out that phylocsf failed to give scores for  <dig>  lincrnas in the comparison dataset; thus the calculation of the prediction accuracy and cpu time for phylocsf was based on the remaining  <dig>  lincrnas . in addition, we plotted the distribution of the phylocsf scores  and found that the optimal cutoff to achieve the best performance was  <dig> instead of  <dig> as in default. at this cutoff, phylocsf displayed a high sensitivity of  <dig> % but the specificity was dramatically reduced to  <dig> %.

a phylocsf failed to calculate the score for  <dig> lincrnas; the accuracy and cpu time were thus calculated based on  <dig> lincrnas.

b uniref <dig> was used as the protein database.

c m, minute; s, second.

d to save the running time, we split the comparison dataset and ran phylocsf on  <dig> nodes in parallel. the reported cpu time was the sum of the execution time on all nodes.

to strengthen the above findings, we generated roc curves  and calculated the area under the curve  which measures the overall performance of a method under different thresholds. the auc of iseerna is above  <dig>  indicating an excellent classifier. compared to the auc of cpc  and phylocsf , iseerna further demonstrated the best overall performance with balanced sensitivity and specificity.

to test the efficiency of iseerna, we next recorded the computational times for these three methods on the comparison dataset. overall, iseerna showed several order-of-magnitudes faster than phylocsf and at least  <dig> times faster than cpc . this suggests that iseerna is more suitable for processing large amount of transcripts from high-throughput transcriptome sequencing data. this advantage together with accepting gff/gtf/bed as input file format makes iseerna an ideal program that can be smoothly integrated as part of a lincrna annotation pipeline for high-throughput transcriptome data analysis.

web implementation
next, to facilitate the use of iseerna, we implemented it as a user-friendly web server with free accessibility at http://www.myogenesisdb.org/iseerna . the current web server provides trained svm models for two species, human and mouse. the input file of the iseerna web server can be in gff/gtf or bed format. users can either input their data into the text area of the web server or upload their input file . the web server can process thousands of transcripts simultaneously. the outputs include sequence id, predicted category and a non-coding score ; the score is highly correlated with prediction accuracy , for example, a  <dig>  iseerna non-coding score corresponds to approximately 95% possibility of the transcript to be non-coding.

discussion
in this study, we report a lightweight svm-based program, iseerna, designed for computational identification of lincrnas from high-throughput transcriptome sequencing data. we have provided not only a standalone program that can be integrated into the transcriptome data analysis pipeline but also a web server for those with limited bioinformatics support to use it independently. compared to similar programs, iseerna directly support the file formats widely used by the rna-seq assemblers, and it also has demonstrated the best performance in terms of the prediction accuracy for both lincrnas and pcts and the computational time. we think this stems from the following improvements we have made in terms of feature selection, training dataset used and optimization of the computational method:  iseerna was uniquely trained in a species-dependent manner. by using species-specific lincrna and pct training datasets, we have built two separate svm models for human and mouse respectively. however, iseerna also allows users to build additional customized models for the species of their interest with the increasing number of species-specific lincrnas discovered at a rapid speed;  iseerna was trained with a balanced dataset containing approximately equal number of lincrnas and pcts. this has avoided the overfeeding of protein coding data and potential bias during the performance evaluation thus leading to accurate prediction with a balanced sensitivity and specificity.  compared to cpc, iseerna does not use any homolog based features  derived from homolog search results. as novel pcts are likely omitted in the database, these features showed bias towards lincrnas which may explain why cpc achieved a higher sensitivity but a comparatively lower specificity . in addition, iseerna employed seven sequence based features which were not considered by cpc.  unlike phylocsf, which is solely based on conservation for evaluating the coding potential of a transcript, iseerna integrates multiple features. our results demonstrated that phylocsf had difficulty in making clear discrimination between lincrnas and pcts. even at the optimal threshold ,  <dig> % pcts were wrongly classified as lincrnas . however, the classification performance was clearly improved by integrating more features in iseerna . furthermore, phylocsf failed to calculate the scores for some of the havana annotated lincrna transcripts , this further limits its application on lincrna identification.

CONCLUSIONS
in conclusion, we have implemented a highly accurate and reliable tool, iseerna, for high throughput screening of lincrnas from transcriptome sequencing data. we provided not only a web server for small dataset but also a standalone program that can be integrated into a bioinformatics pipeline for complex transcriptome data analysis. iseerna demonstrates high performance with high accuracy and balanced sensitivity and specificity for both lincrnas and pcts. this makes it a valuable tool for lincrna studies.

competing interests
the authors declare that they have no competing interests.

authors' contributions
ks, hw and hs conceived the study, designed and implemented the software; xc, pj and xs participated in software design and provided technical assistance. ks, hw and hs wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
details of conservation score and the blastx score for the comparison dataset.

click here for file

 additional file 2
comparison of the potential for each feature on the discrimination of lincrnas  from pcts . the calculated feature values were normalized to values between  <dig> and  <dig>  each feature can distinguish lincrnas from pcts to some extension. exon cons  and orf proportion shows the highest discrimination power among all the features.

click here for file

 additional file 3
scatter plot of iseerna the prediction accuracy and noncoding score.

click here for file

 acknowledgements
funding: this work was supported by general research funds from the research grants council of hong kong, china ; cuhk direct grant . national natural science foundation of china  and natural science foundation of jiangsu province in china  to xs.

declarations
the publication costs for this article were funded by the university grants committee of the government of the hong kong special administrative region, china, under the general research funds .

this article has been published as part of bmc genomics volume  <dig> supplement  <dig>  2013: selected articles from iscb-asia  <dig>  the full contents of the supplement are available online at http://www.biomedcentral.com/bmcgenomics/supplements/14/s <dig> 
