BACKGROUND
dna microarrays are a powerful tool for monitoring the expression of tens of thousands of genes simultaneously  <cit> . affymetrix genechips are widely used microarrays with a collection of  <dig> –  <dig> probe pairs called a probe set that measures the expression of each transcript. the probe pairs comprise a perfect match  and a single base mismatch  to the target mrna region.

genechip microarrays use a statistical algorithm in the microarray suite  <dig>   to estimate the variance among probe pairs within a probe set and to compute an expression index that represents transcript abundance  <cit> . the mas  <dig>  algorithm uses the one-step tukey's biweight estimate to compute the signal intensity for each probe set, and employs the wilcoxon signed-rank test to assess the detection calls and p-values for a single array analysis  <cit> . the algorithm uses normalization and scaling techniques to correct for variations between two arrays  <cit> . the comparison analysis of two arrays results in data matrices such as change p-value, change, and signal log ratio. in the case of replicate sample analysis, the two sample statistical tests such as the student t-test or the mann-whitney test can be used to test the hypothesis whether the signal intensity values for each probe set are significantly different in the treatment group compared with the control group. such statistical tests are not ideal for finding significant genes, because only a few replicate samples  are usually used in the microarray experiments. determining the most appropriate statistical method for detecting differentially expressed genes in genechip replicate data remains a challenging issue.

several methods have been developed to improve the sensitivity and selectivity for detecting significant genes in genechip microarray experiments. the widely used algorithms include the robust multiarray average   <cit> , the model based expression index/intensity  implemented in dchip software  <cit> , and the positional dependent nearest-neighbor model   <cit> . these algorithms effectively deal with the 'probe effect', that is, some probes in a probe set tend to give higher values than others  <cit> , through re-computing of the signal intensity for each probe set using the processed image data exported from affymetrix microarray suite or genechip operating software . these methods rely solely on the quantitative data, i.e., signal intensity for the comparison analysis. however, qualitative data such as detection call are also important parameters in detecting significant genes. using a threshold fraction of present detection calls can ultimately eliminate the unreliable probe sets while preserving the most significant ones  <cit> . a combination of a qualitative parameter  and two quantitative parameters  reduces greatly the false positives, while using a single parameter has a greater than 30% false positive rate  <cit> .

here we present a software tool called affyminer that uses both the quantitative and the qualitative data metrics for detecting differentially expressed genes in genechip data. in addition, affyminer has functions for connecting gene annotation information and gene ontology  descriptions to the detected significant genes for better biological interpretation of the results.

implementation
software design
user requirements
these requirements were established from discussions with the users of our microarray core facility over the past three years.

• compatibility with the data formats exported from affymetrix mas or gcos. the exported data contain probe sets, signal detection, signal value, signal log ratio, change, change p-value, etc.

• provide the user the flexibility choosing different data metrics and different threshold values for filtering for differentially expressed genes.

• incorporate statistical analysis for the selection of significant genes.

• facilitate exploratory analyses such as clustering analysis.

• incorporate information from gene ontology and metabolic pathways.

• have easy-to-use graphical interfaces and provide ready-to-publish charts and tables.

architecture
based upon the user requirements and our experience in using commercial and open source microarray analysis software packages such as genespring  <cit>  and bioconductor  <cit> , we designed affyminer to include two functional modules, genefinder and gotree, and interfaces to third-part programs . these modules can analyze genechip data separately or consecutively. for example, the gene list generated by genefinder can be used by gotree. two popular open source software programs, cluster and genmapp, were chosen for clustering and pathway analysis, respectively.

algorithms
genefinder
the algorithm implemented in genefinder uses both the qualitative and quantitative measures of transcript performance, including detection, change, signal log ratio, and the statistical results. to determine significantly up-regulated genes in an experiment with multiple replicates of treatment and control samples the following steps are used: 1) eliminate the probe sets with signal detection calls of "absent" in the treatment samples; 2) select the probe sets with signal change calls of "increase"; 3) eliminate the probe sets with a signal log ratio below a threshold defined by the user; and 4) remove the probe sets with a p-value above a threshold defined by the user .

the algorithm for detecting significantly down-regulated genes is as follows: 1) eliminate the probe sets with signal detection calls of "absent" in the control samples; 2) select the probe sets with signal change calls of "decrease"; 3) eliminate the probe sets with a signal log ratio above a threshold defined by the user; and 4) remove the probe sets with the p-value above a threshold defined by the user.

gotree
the gene ontology  consortium produces structures of biological knowledge using a controlled vocabulary consisting of go terms  <cit> . go terms are organized into three general categories, biological process, molecular function, and cellular component. the terms within each category are linked in defined parent-child relationships that reflect current biological knowledge. all genes from different organisms are systematically associated with the go terms, and these associations continue to grow in complexity and details as sequence databases and experimental knowledge grow  <cit> . go provides a useful tool to look for common features shared within a list of genes.

the high-level description of the algorithm in building the go tree is as follows, 1) read the output file generated by genefinder; 2) write in an array the go ids and their corresponding affymetix probe set ids; 3) find the go path ids for each go id in the array and add the go path ids to each element in the array; 4) sort by the go path ids and compute the sum of the probe sets associated with each node; 5) build the entire tree based on the go path ids and write in each node the go term, go id, and the number of probe sets.

programming
affyminer was programmed in visual basic  .net on the microsoft .net platform. vb .net is the latest version of the microsoft visual basic language. it has many attractive features, such as easy of use, fully object-oriented, and true visual development  <cit> .

RESULTS
affyminer includes genefinder, gotree, and interfaces to cluster and genmapp as shown in the main window of affyminer . the brief descriptions of affyminer and its modules are available in this window. to illustrate the functions of affyminer, we will use affymetrix drosophila genome  <dig>  array data, produced in the aging experiment with caloric restricted drosophila, where there are  <dig> control replicates and  <dig> treatment replicates for each time point.

genefinder
genefinder has two programs: significant genes for finding differentially expressed genes satisfying the user defined criteria, and annotation for linking gene annotation information with the gene list.

significant genes
the significant genes program has interactive interfaces to set up parameters, upload input files, and define the output, respectively. the parameter-setting window contains three frames for setting up the number of replicates, the direction of a robust change, and the data metrics for detecting differentially expressed genes. affyminer limits the maximum number of replicates to five. this is a reasonable assumption because the reproducibility of affymetrix genechip array data is high and most publications use two to three replicates in their experiments. the data metrics consist of signal detection, signal change, signal log ratio and statistical test. the user can choose the data matrices and threshold values for each analysis.

as shown in figure  <dig>  three treatment replicates and three control replicates were used for example analysis. the radio button increase was checked, which means finding significantly up-regulated genes. in the frame "please select the criteria for filtering significant genes", the signal detection level was set to  <dig>  meaning the present calls in the signal detention value are required to be present in all the  <dig> treatment replicates. the number of the signal change calls was set to  <dig>  which means that at least  <dig> increases are required in the  <dig> change calls for any given probe set considered significant. the threshold for average signal log ratio was set to be  <dig> , which requires about a  <dig> -fold increase of the signals in the treatment samples compared with the control samples. the p-value for the statistical significance was set to be  <dig> . the above settings can be changed dynamically.

the next step is to upload the input file and select columns corresponding to specific samples  and data metrics . the input file is a text file exported from affymetrix gcos, containing the results of single array analyses and pairwise array comparison analyses. if the significant test box was checked in the parameter setting window , the result of the statistical tests or other analysis methods such as rma need to be added to the text file with two columns corresponding to the p-values and the change direction, respectively. the change direction is specified by the "up" in the field of change direction for the up-regulated gene and "down" for down-regulated genes. clicking the "back" button returns to the first window if the parameter settings need to be changed. clicking the "search" button starts the analysis process. figure  <dig> shows the significant genes found by the significant genes program in genefinder.

annotation
the annotation program links the annotation information with gene lists, and generates a user-defined table with quantitative data such as signal log ratio and qualitative data such as annotation information. the netaffx annotation file needs to be in the csv  format, which can be downloaded from the affymetrix website  <cit> .

the input file for the gene list can be the result generated by significant genes or any text file with a column corresponding to affymetrix probe set ids. once these two files are uploaded, the data items in the output table can be chosen from the left list box. if not ideal, the user can remove the selected items from the right list box, which will not be shown in the output table.

the table resulting from the annotation program is shown in figure  <dig>  where average signal log ratio, target description, gene title, gene ontology, and protein family were selected.

gotree
gotree takes as input two files. the first file called gopath consists of the information about the hierarchical structure of go terms, whereas the second file contains the list of significant genes and their go term associations. the gopath file was generated from the chipinfo program, which can be downloaded from the web  <cit> . to run chipinfo, the gene information file downloaded from the affymetrix website is required. the go tree generated from affyminer is shown in figure  <dig>  each node is labeled with the corresponding go term, go id, and the number of genes associated. for example, line  <dig> of the gene ontology tree as shown in figure  <dig> indicates the node represents behavior in biological process with go id  <dig> and  <dig> probe sets on the significant gene list associated with this go term. the tree can be expanded or clipped by clicking on the small square boxes. a window displaying the affymetrix ids associated with the go term will pop up when the number is right clicked.

interfaces to cluster and genmapp
both cluster and genmapp programs need to be downloaded and installed on the local computer . go to the websites,  and  to download cluster and genmapp, respectively. in the main window, clicking the button "set path ..." will set up the path to the corresponding program file . clicking the button cluster or genmapp will run the program for analysis.

applications
affyminer has been tested by multiple users and their feedback has been incorporated into its current version. results analyzed by affyminer have been presented in several publications  <cit> . in the following example, we describe a case study using affyminer to compare the lists of differentially expressed genes detected by affyminer and the rma method.

our group  studied the gene expression changes in the retroperitoneal white adipose tissue  in mice fed trans- <dig>  cis- <dig> conjugated linoleic acid   <cit> . the affymetrix mouse genome  <dig>  <dig>  microarrays were used to detect the expression changes of about  <dig>  transcripts. mice were sampled  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  or  <dig> days after being fed control or  <dig> % t10c <dig> cla diets, generating  <dig> time points in total. at each time point, the rp-wat tissues of ten control and ten t10c <dig> cla-fed mice were harvested in groups of five mice each to provide two control and two treatment samples for microarray analysis.

to detect differentially expressed genes the transformed rma expression values were analyzed using an empirical bayes linear model  <cit> . a total of  <dig> genes were found significant on day  <dig> by the rma approach. we used the same dataset and ran affyminer with the following parameter settings: for increase,  <dig> present calls in the treatment samples,  <dig> increase calls for signal change, average signal log ratio being  <dig> ; for decrease,  <dig> present calls in the control samples,  <dig> decrease calls for signal change, average signal log ratio being - <dig> . affyminer found  <dig> differentially expressed genes. the number of overlap genes found by affyminer and rma is  <dig> . moreover, all seven genes validated by the quantitative rt-pcr were found by affyminer as well as rma  <cit> .

discussion
microarray technology has revolutionized the analysis of gene expression. the challenge associated with this high throughput technology is the statistical analysis and biological interpretation of microarray data. affyminer was developed to address these issues through finding genes with significant changes in gene expression, and linking these genes with the annotation and gene ontology information. functionally, affyminer has overlap with other existing programs, but has the distinguishing features discussed below.

affymetrix data mining tool  can filter genes of interest based on the thresholds of certain quantitative and qualitative parameters, but not as powerful as affyminer in this aspect. affyminer takes full advantage of the range of the different data metrics available from mas  <dig> . affyminer provides the flexibility to choose different data metrics  and to set threshold values for analyzing differentially expressed genes. this flexibility is very important since there is not a single analysis method that outperforms other methods of analyzing microarray data  <cit> . it is evident from the different gene lists generated by affyminer and the rma based approach. incorporating the qualitative data metrics such as detection and signal change would increase the selectivity of detecting differentially expressed genes  <cit> .

genepicker has certain functions similar to those in affyminer  <cit> . genepicker was developed for the analysis of replicates of affymetrix gene expression microarrays. the genepicker analysis is done through defining analysis schemes, data normalization, t-test/anova, and change-fold chang-analysis, and the use of change call, fold change, and signal mean ratios. genepicker provides a comparison of noise and signal analysis scheme for determining a signal-to-noise ratio in a given experiment, which is not available in genefinder. however, genefinder uses one more data matrix, i.e., detection. as mentioned earlier, genefinder also has the function of incorporating gene annotation information with expression data, which is not available in genepicker.

the affymetrix netaffx gene ontology mining tool can create a graph of go terms associated with the input probe sets. however, the graph is very difficult to read as compared with the one generated by affyminer . affyminer has the flexibility of displaying the go tree at different levels and the probe sets associated with the go terms can be viewed easily. another go tool called gosurfer was developed for the go analysis of affymetrix genechip data  <cit> . gosurfer associates user input gene lists with go terms and visualizes such go terms as a hierarchical tree. gosurfer compares two lists of genes in order to find which go terms are enriched in one list of genes but relatively depleted in another. gosurfer can not map genes from a single list onto the go descriptions. in this regard, gotree and gosurfer complement each other in the analysis of gene ontology.

CONCLUSIONS
as a whole, affyminer fills an important gap in finding differentially expressed genes from affymetrix genechip microarray data. affyminer effectively deals with multiple replicates in the experiment, provides users flexibility choosing different data metrics for detecting significant genes, and is capable of incorporating various gene annotations. affyminer has been used for analyzing the genechip data for several publications, which has reduced the time and effort needed to compare data from multiple arrays and to interpret the possible biological implications associated with significant changes in a gene's expression.

availability and requirements
• project name: affyminer project

• project home page: http://bioinfo-srv <dig> awh.unomaha.edu/affyminer/ <cit> 

• operating system: microsoft windows  <dig> or later

• programming language: visual basic .net.

• other requirements: .net framework  <dig>  or later. it can be downloaded from our website  <cit>  or microsoft website  <cit> .

• installation: to install affyminer, double click on affyminerinstaller.msi and follow the instructions.

• any restrictions to use by non-academics: yes, contact the author gl for details.

authors' contributions
gl conceived of the study, participated in its design and coordination, and drafted the manuscript. tn carried out the implementation. yx participated in the design and testing and helped to draft the manuscript. mf helped to draft the manuscript.

