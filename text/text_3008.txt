BACKGROUND
understanding the relationships amongst the elements involved in biologic interaction networks, such as the functioning of cellular metabolism, is a relevant problem in systems biology. in the words of  <cit> , “diagrams of interconnections represent a sort of static roadmaps, but what we really seek to know are the traffic patterns, why such patterns emerge, and how we can control them”. having a formal description of the interconnections and a methodology to perform software simulation on how these patterns are, should help in orientating in vitro experimentation. under this regard, causality can play an important role in finding chains of reactions that connect the parts of the system of interest, e.g. for determining causal correlations among molecules that are not apparently correlated. in general, the proposed models of complex systems code a lot of information and determining possible correlations and causal dependencies may be not straightforward or computationally expensive.

we focus here on metabolic networks, i.e. the set of the cellular biochemical pathways involved in energy management and in the synthesis of structural components. biochemical pathways are typically composed of chains of enzymatically catalyzed chemical reactions and are interconnected in a complex way. starting from the composition of local, well understood behaviour, the study of the overall emerging behaviour of metabolic networks appears difficult.

we apply techniques from formal methods and from computational logic in order to develop an abstract qualitative model of metabolic networks, focussing on causality. keeping in mind both expressiveness and ease of use, we aimed at providing: i) a minimal notation to represent causality in biochemical interactions, and ii) an automated tool allowing the human expert to easily vary conditions of the in silico experiment. we introduce a simple and skeletal notation, inspired by biochemical reactions, to emphasize the causality aspects we are concerned with. the choice of relying on computational logic, which “provides a straightforward and intuitive representation of human reasoning”  <cit> , has appeared particularly suitable in the multidisciplinary context of our work. on the one hand, it should be palatable to biologists, since very close to the biochemical intuition. on the other hand, it has a direct computational counterpart, which computer scientists can build upon in order to devise the needed analysis tool.

in our notation, biochemical reactions are given an abstract representation: we only record which are the relations between the source and the target elements of each single reaction, e.g. between two molecules m and n and the molecule p they produce. in turn, p can become a source molecule in another reaction and so on and so forth. in other words, we abstract away from quantities, stoichiometric proportions, kinetical or thermodynamics parameters that are involved in the production of p. noticeably, we also abstract from the actual dynamics of reactions. intuitively speaking, we project reactions on a “flat” temporal scale so that the availability of m and n is never spoiled after the production of p, and other metabolites can be caused by m and n. this is also an abstraction over quantities, since “infinite copies” of m and n result always available. because of the abstraction, the reaction leading to p actually represents the possibility for p to be generated, or caused, in vivo, by the presence of m and n. indeed, the model gives an over-approximation of the set of the actual pathways, possibly including some pathways that could be actually prevented, for instance, by the lack of a suitable quantity of reactants or by an inadequate temperature. the payoff of the abstraction adopted is in terms of expressiveness of the language and effectiveness of its computational counterpart. abstracting from quantitative issues may prevent reasoning about some of the dynamical features of chemical objects. however, it makes possible to take into consideration some aspects of those systems  whose kinetical and thermodynamical parameters are scarcely known.

chains of causal reactions can be, step by step, automatically deduced. to this aim, we exploit an analogy between logical implications and chemical reactions, by interpreting the reaction of m and n that produces p as a logical clause stating that m and n imply p. our method is supported by a computational logic counterpart, based on a prolog implementation of a bottom-up semantics. this allows us to compute the set of all the metabolites that can be produced as consequences of a given set of rules and starting from a set of initially available metabolites. this is step-wise determined by repeatedly adding the metabolites that can be immediately caused by the application of the rules to the set of the so-far produced metabolites. we then relate the computational construction with the original model and prove convergence properties of the process.

despite the abstract working hypotheses adopted, our framework has revealed sufficient to provide meaningful approximations of the possible chains of reactions during experiments. moreover, the approach facilitates thinking and revising the biological model itself, by making easy to vary both the components of the initial state and the clauses that rule reactions.

the proposed approach can serve as a sort of “what-if” analysis, repeatedly exploring different scenarios, each one derived from a different set of working hypotheses. our tool allows us to rapidly evaluate the impact of changes in the hypotheses on a particular observable outcome. thus, we obtain an interactive and effective analysis, that can be used to differentiate the most promising causal relations deduced, which deserve to be tested in vitro, from those that instead can be pruned.

we have validated our approach by studying the robustness of the metabolic network of e. coli k <dig>  selected genes have been knocked-out by disabling the rules regarding the corresponding encoded enzymes. results are coherent with the actual biological behaviour, observed in vitro and reported in  <cit>  and in the “geno base” (), a database entirely dedicated to e. coli k- <dig> 

this paper is organized as follows. next, we will discuss related work and then present our formal framework, illustrating how biochemical processes can be represented inside it. results about experiments with the metabolic network of the e. coli k- <dig> metabolic genotype follow. conclusions are followed by a section methods, in which we report on the techniques used.

related work and comparison
our work can be included in the recent research trend which exploits well established theories and techniques from formal methods in order to support the interpretation of the big amount of the raw biological data now available. by using logic, we slightly diverge from the line of research in which biological modelling is inspired by the use of concurrent models. concurrency theory offers a wide choice of models naturally expressing causality, that is one of its essential notions. nevertheless, causality is a natural notion also in the logic framework. concurrent models are focussed on the description of the dynamic behaviour of whole systems. considering these aspects can be computationally demanding. this has led us to the choice of an even more abstract model, where – as mentioned above – the notion of time is abstracted away. an abstraction similar to ours can be performed a posteriori on a concurrent model, for instance by resorting to static analysis techniques, which offer static approximations of the dynamic behaviour. usually, static techniques extract information by systematically inspecting the specification of the dynamic behaviour of systems. in our approach instead, we want to infer information by directly inspecting the set of reactions, modulo the abstractions we discussed above, thus skipping the specification of the chemical dynamics. resorting to static techniques represents a typical way to drastically reduce the computational cost due to the study of all the possible dynamic evolutions of a system. the price to pay amounts to a loss of precision, since they usually provide over-approximations of the behaviour.

among the several formalisms developed in concurrency theory and applicable to systems biology, we recall below the most relevant for our purposes. petri nets  <cit>  offer a way to graphically represent the structure of distributed systems. they have been successfully applied to the modelling of metabolic pathways and simple genetic networks . they model pathways and networks in terms of their dynamic evolutions.

process calculi describe interactions and communications between independent agents or processes. the underlying idea is that a biological system can be seen as concurrent systems. in particular, π–calculus  <cit>  and ambient calculus  <cit>  have been transferred from theoretical computer science setting to the biology setting, leading to suitably extended biological versions of them, such as the biochemical stochastic π-calculus  <cit>  and bioambients  <cit> . also a version of ccs, rccs  <cit>  has been introduced to address biological issues. other calculi have been instead specifically defined for biological modelling, such as κ-calculus  <cit> , brane calculi  <cit>  and beta binders  <cit> . chemistry has been already invoked explicitly in the process algebraic context many years before the coming of systems biology. in  <cit> , an abstract machine based on the chemical metaphor is introduced: states are chemical solutions where floating molecules can interact according to reaction rules. rules specify how to produce new molecules from old ones.

closer to our approach is the work presented in  <cit> , where the authors apply a causal semantics of the π-calculus in order to describe biochemical processes. the process computations that can be obtained quite accurately capture and reflect the behaviour of biological systems and causality has a key role in enhancing precision in such simulations. our starting point is quite similar, but in our model the description of biological systems is given in terms of molecular entities and reaction rules that implicitly code the causal relationships, and hence the possible pathways. the causal semantics in  <cit>  is based on an enhanced form of transition systems  <cit> , that makes it possible to capture truly concurrent aspects like causality in an interleaving setting, like the process algebraic one. there are also other proposals, introduced with the same aim, see for instance the distributed transition systems in  <cit> .

it is interesting to observe that our results could be comparable with the one obtained by using a quite efficient static technique like control flow analysis   <cit> , applied to the π-calculus. in these settings, a reaction between m and n that produces p can be abstractly modelled as the synchronization of the process m and n on a shared channel c, with a process p as a continuation. notice that in this case the full expressiveness of the π-calculus and, in particular, name-passing seems not to be needed. in its simplest form, cfa considers as effective all the communications that might occur through given shared channels, disregarding their actual viability, due for instance to synchronization dynamics. in modelling reactions in such a way, also cfa would not consider the possible consumption of reactants. under this regard, our approach can offer an analogous result, within a more skeletal and abstract setting. having an over-approximation of the exact behaviour of a system, both in the case of static analysis and in our framework, means that all those events that the prediction does not include will never happen, while when included, the events can happen, i.e. they are only possible.

another recent proposal that shares some similarities with our approach is the one based on the biochemical abstract machine biocham  <cit> , which also offers a formal modelling environment for biochemical processes, oriented towards qualitative aspects. it is based on a rule-centered language for specifying biochemical systems. differently from our approach, biocham semantics takes into consideration the dynamics of systems and provides tools for querying temporal properties of these systems by using computation tree logic. refraining from dealing with quantities, biocham offers explicit controls on reactant consumption during reactions and, by default, all the possibilities are considered. this suggests further developments for our approach, where, currently, only the case of no consumption is admitted. the reason for this choice is effectiveness: in this way, branching semantics is avoided.

still close to our approach and also to biocham is pathway logic , where rewriting logic is used for modelling biological processes. rewrite rules describe local changes and the molecular patterns that cause them. rules can be concurrently applied and this corresponds to the actual possibility of biological compartments to independently evolve. this offers a basis for in silico experiments and for advanced forms of symbolic analysis. we choose an alternative approach, by not resorting to a concurrent semantics, that is not in accordance with our aims.

amongst the computational logic tradition, which largely influences our proposal, it is interesting to cite some recent proposals based on abductive logic programming.

complexity of bio-networks, understood as lack of complete knowledge, has been addressed by means of the capability of making assumptions provided by abduction. this approach has been applied to gene networks in  <cit> , with motivations similar to ours. that proposal is based on a combination of abduction and induction: abduction allows inference from observable effects  and therefore it is used to generate hypotheses, while induction has the aim of learning general rules from these abduced hypotheses. the representation language has been ad-hoc devised. the predictive accuracy increases with the number of training examples. this methodology has a richer representation language than ours and aims at addressing a different class of problems in a different experimental setting. differently,  <cit> , and then  <cit> , are based on a quite general class of languages, extended to deal with the biological context. these language, also known as action or event calculi, are suited to describe the non-monotone evolution of a dynamical environment, and specifically biological networks. abduction is again used as an expressive means to compute/deduce explanations for missing information due to the dynamical nature of the world. although perhaps more expressive than our approach, these proposals deal again with an explicit treatment of the dynamics of the systems, differently from our proposal that strives for simplicity in order to address, even approximately, causality in very large metabolic networks.

finally, it is important to refer to the wide usage of graphs as representation language, traditionally close to biologist experience. amongst the huge set of papers adopting graphs to model bio-networks, our work is closer to those that use arcs and nodes to directly represent reactions. for instance, an approach quite corresponding to our logical view of reactions – as far as the abstraction level is concerned – is in  <cit> . there, starting from a chosen qualitative interpretation of biochemistry analogous to ours, the authors focus on the topology of metabolic networks, aiming at defining a representative measure of network activity, the synthetic accessibility . this notion has also been tested for predicting viability of mutant strains with accuracy results comparable to ours, although under a different perspective.

RESULTS
a constructive formalisation of metabolic causality
we clarify our interpretation of the metabolic causal relations by introducing the notation used to represent biochemical reactions. we consider the assumptions on which such idealised notatation relies, discussing why, according to our aims, these assumptions can be considered viable working hypotheses. such a notation represents our adopted formalisation of the biochemical reactions. then, under the chosen hypotheses, we give a formal account of the fact that a metabolite, hereafter also called reactant, is caused by a network. in the section methods, we will present the computational counterpart of the formalisation and we will relate the computational construction with the adopted model.

from biochemical reactions to causal relations
let us consider a biochemical reaction written in the classical notation:

  mm+nn→pp+qq 

m, n, p and q are the species involved and m, n, p and q the corresponding stoichiometric coefficients. expression  indicates that, when the reaction occurs, a certain amount of m and n becomes a certain amount of p and q according to the stoichiometric proportions. besides stoichiometry, in order to exhaustively characterize a chemical reaction, one should take into account a number of factors related to thermodynamics and kinetics that represent the propensity for a reaction to occur and the rate at which reactants eventually become products.

since we are interested in investigating causality relationships only, we can omit the description of many of the factors cited above. then, we can give an abstract representation of  as follows:

  m∘n→p∘q 

we call such an expression a reaction rule. it simply states that the presence of both m and n represents the possibility for p and q to be produced or caused. if applicable, i.e. it is known that the premises m and n are producible by a network, then also p and q are producible. informally speaking, a standard dynamical reading of  would be:

  m∘n→m∘n∘p∘q 

indeed, not considering the evolution of the network, reactants are not consumed at any step.

the description of causal relations within a metabolic network can be made by defining a set of metabolites initially present i and a set of reaction rules r that describe how new metabolites can be produced. initial metabolites are represented in the form of rules with no premises like → p.

example 1
let us consider an experiment about a pathway occurring in an environment providing α-d glucose, glycerol and oxygen. by using suitable acronyms like glc, gly and o <dig>  respectively, the initial conditions of such an experiment i will include:

 → glc 

 → gly 

 → o <dig> 

moreover, let us imagine that the overall process to be described includes  the upper part of the glycolytic pathway. then, the set r will contain reaction rules like:

  glc6p→fru6p 

  fru6p∘atp→fru16p∘adp 

  fru16p→gap∘dhap 

  dhap→gap 

  gap→dhap 

  gap∘nad→bpg13∘nadh 

where the acronyms glc6p, fru6p, fru16p, gap, dhap, nad, nadh, bpg <dig> stand for glucose 6-phosphate, fructose 6-phosphate, fructose <dig> -bisphosphate, glyceraldehyde 3-phosphate, dihydroxyacetone phosphate, nad+, nadh and  <dig>  bisphosphoglicerate, respectively.

the rules , , ,  and  together, and  describe the reaction catalyzed by the enzymes phosphoglucose isomerase, 6-phosphofructo 1-chinase, fructose bisphosphate aldolase, triose phosphate isomerase, glyceraldehyde 3-phosphate dehydrogenase, respectively. note that a reactant appearing on the right side of the operator → may well appear on the left side in another rule.

we eventually decompose the rules into simpler monadic rules, e.g.  will be written as:

  m∘n→p 

  m∘n→q 

this transformation is causality preserving in the sense of the following proposition.

proposition 1
let m <dig> ○ … ○ mm → p <dig> ○ … ○ pn be an applicable rule, i.e. m <dig>  …, mn are producible, and then p <dig>  …, pn are producible. then, also the simplified rules m <dig> ○ … ○ mm → pi, with i =  <dig>  …, n, are applicable in any order, and their application makes p <dig>  …, pn producible, as well.

the above proposition holds because causality behaves in a monotone way, since the application of subsequent rules cannot spoil the fact that any metabolite is producible.

the fact that a reactant is caused by a network is made precise by means of the following definition relating the metabolite to the chain of reactions that have made it exist, starting from an initial state i and according to a set of rules r.

definition 1
given a set of rules r, an initial state i, and a reactant a let us consider the following construction:

 er,i={     aa⊥    if→a∈iif   a1∘…∘an→a∈r  and  er,i≠⊥  ∀i∈ otherwise 

then, any er,i ≠ ⊥ is an explanation for a under r and i.

the construction is non-deterministic , indeed there may be different ways to cause a metabolite.

false positives and false negatives: a problem of approximation
we here briefly discuss on the precision of our approach. as explained above, our approach is intended to offer an over-approximation of the dynamic behaviour of metabolic pathways. the existence of an explanation gives us indications about the possibility of the production of the metabolite, according to the many relaxing assumptions adopted. this means that we can have false positives, i.e. it is possible to predict in silico the production of metabolites that cannot be produced in vivo. this presence is expected as a consequence of abstraction and of over-approximation. however, the experimental results reported in the final part of the section give accuracy rates, i.e. a measure of approximation, comparable with those obtained by other well-known approaches in the literature.

on the contrary, up to the adequacy of the adopted biological model, we do not expect false negatives, i.e. metabolites that can be produced in vivo but have no explanation in silico, as stated by the following claim.

claim
if there is no explanation for the production of a certain metabolite a, then a cannot be producible in vivo.

the intuition supporting our claim is based on the following reasoning: if ad absurdum the metabolite a is actually producible in vivo, then there is a certain set of biochemical reactions that can be applied starting from an initial set of metabolites. starting from the same reactions and applying to them the abstractions illustrated above should lead us to the explanation we are looking for.

note that experimental evidence of the possible production of a metabolite in vivo but not in silico, should suggest the need of a revision of the adopted biological model.

the set of reactants that can be “motivated”, in the sense above illustrated, by an explanation starting from an initial pool of given reactants and a specific set of rules can be automatically determined. amongst the different and equivalent approaches that could have been used, we follow a logic-deductive interpretation, along the line of the explanatory approach adopted. for further details, see section methods.

experiments
we have applied our approach to a biological model based upon the e. coli k- <dig> metabolic genotype proposed in  <cit>  and  <cit> . this group of genes represents a subset of the whole genome of e. coli k- <dig> that includes genes encoding enzymes involved in energetic and biosynthetic metabolism. using our formalism, we have represented the metabolic network composed by the enzymes encoded by the selected gene set and the metabolites involved in the catalyzed reactions. we have obtained a list of about  <dig> causal rules. we have performed some in silico “what-if” experiments and compared the obtained results with the correspondent in vitro counterpart, excerpts of which are reported in the following. the experiments have been carried out on a tool , briefly presented in section methods.

mutually essential genes
in this in silico experimental session we performed a gene knock-out mimicking an homologous in vitro experiment presented in  <cit> . there, the authors silenced two target genes of e. coli k- <dig>  that encode for two enzymes involved in the krebs cycle . they found those genes “mutually essential” for the production of succinyl-coa, i.e. sucab and succd could be knocked-out individually, but not simultaneously in order to achieve succinyl-coa production. succinyl-coa is a critically important metabolite involved in several biochemical pathways leading, e.g., to energy production and peptidoglycan biosynthesis .

in order to simulate this gene knock-out, we have removed the rules corresponding to the reactions catalysed by α-ketoglutarate dehydrogenase and succinyl-coa synthase. then we have set the starting experimental conditions, including in the initial state all the metabolites that the cell is assumed to uptake from the external environment. checking for the presence of succinyl-coa at the end of the computation, we found that this metabolite was not produced  only when both the target genes  were simultaneously turned off. this reflects what actually happens in vitro.

in silico gene knock-out
we have performed other in silico gene knock-outs and compared our results with the information contained in the “geno base” (), a database entirely dedicated to e. coli k- <dig>  in this database genes are classified according to various criteria, among which their essentiality, i.e. their capability of causing cell death, when turned off. in our in silico knock-out experiments we tried to test gene essentiality verifying whether or not our in silico knock-out mutants exhibit features typically pertaining to living cells. we assumed that these characteristics should reasonably include the production of atp , the production of reduced coenzymes nadph and nadh and the production of not dispensable structural components, such as the cell wall . we have performed our in silico knock-out experiments over a sample of  <dig> genes of our set, each time removing the rules corresponding to the enzyme encoded by the silenced gene and checking for the presence of the observed elements at the end of each computation. we interpret the results as a prediction on the viability or not viability of the knock-out mutant under analysis. in our experimental setting , we slightly extend the notion of false positives and negatives introduced in the first part of the section and we say that a true positive occurs when a knock-out mutant results viable both in silico and in the in vivo counterpart, while a true negative occurs when a in silico knock-out mutant is not viable both in silico and in vivo, a false positive occurs when a viable in silico knock-out mutant has an in vivo counterpart which is not, and a false negative occurs when an in silico knock-out mutants is not viable, while its in vivo counterpart results viable. note that this assignment has been arbitrarily chosen. to evaluate the performance of our method and compare it with similar approaches we use a performance measure taken by  <cit> , that measures the number of true predictions – both positive  and negative  – on the overall ones. note that our definitions of false positives and false negatives differ from those proposed in  <cit> . this difference has been taken into account in calculating the accuracy a defined below.

definition 4
let tp, tn, fp, fn be the number of true positives, true negatives false positives, and false negatives, respectively. we define accuracy a as

 a=/ .

our experiments give the following results:

 {     tp=102tn=13fp=17fn= <dig> 

as reported in  <cit> , the accuracy of the synthetic accessibility approach therein presented ranges from 60% to 74%, while another approach for metabolic networks, i.e. the flux balance analysis  <cit> , has an accuracy that ranges between 62% and 86%. we found  <dig> false positives, resulting in an accuracy of about 87% over this specific experiment. these differences are probably strongly influenced by the way data sets are interpreted and by which cases are included in the data sets. however, the obtained results make us confident that our approach is reasonably accurate.

to give an intuitive idea of the experiments, we just report in table  <dig>  some examples of true positive, true negative and false positive cases . the symbols + or − stand for the presence or absence, respectively, of the observed elements in the in silico results.

the presence of false positives  is expected in our framework, as a consequence of the abstraction and of the over-approximation we used in our model. this corresponds to the fact that something that has influence on viability and that is potentially producible in silico, it is not actually produced in real life. finally, note that, in the experiments carried out, we have found no false negatives. this makes us confident of the correctness of the adopted biological model.

CONCLUSIONS
in metabolic networks, metabolites are produced from a set of initial metabolites, through a set of chemical reactions. these reactions produce intermediate metabolites that can be both products or reactants. we have introduced a simple and skeletal notation to describe these networks in terms of molecular entities and reaction rules that specify their interactions and that implicitly code possible causal dependencies amongst reactions. this notation permits us, on the one hand, to give to chemical reactions an abstract and intuitive representation where quantitative aspects are abstracted away; on the other hand, this representation can be straightforwardly translated into an input for the tool we developed, paving the way for in silico experiments and further tool development. to this aim, we have exploited the analogy between reaction rules and logical implications, that allows us to automatically deduce chains of causally related reactions by means of a logical-based tool. even though we do not consider the dynamic evolution of metabolic networks, our model is sufficient to give information on which metabolites can be possibly produced and how and, therefore, to give hints on the possible flows of reactions.

moreover, our methodology makes it possible to reason about the model itself, by allowing us to vary both the initial conditions and the rules. it is easy to program such modifications and evaluating the impact of changes in the hypotheses is quite immediate, because the tool quickly reacts to the queries . the what-if approach satisfies the need to simulate and investigate the behaviour of not fully known metabolic networks under different working hypotheses. in particular it allows us to perform perturbative experiments, whose results are not trivial to predict. in fact, if the studied network is complex enough, it results unfeasible to a priori estimate the effects produced by a local perturbation on the overall network. finally, we have applied our methodology to the metabolic network of the e. coli k- <dig> metabolic genotype. the in silico experiments presented reflect the in vitro ones. the results obtained up to now show our method not to underperform analogous ones. noticeably it is ground on a formalism that provides efficient and straightforward implementations.

our ultimate goal for further investigations is that of supporting a heuristic process of searching causal explanations of metabolic phenomena, with in mind the “emphasis on hypothesis-driven research in biology” advocated in  <cit> .

