BACKGROUND
the emergence of young research fields such as systems biology and network medicine  <cit>  reflects some exciting changes in biomedical investigators’ view of biology and practice. particularly, it has been increasingly recognized that thinking in networks may lead to novel scientific insights and findings  <cit>  that the traditional reductionism approaches cannot grant  <cit> . the recent development of experimental techniques  also provides unprecedented opportunities for biomedical investigators to construct numerous biological networks at different levels and scales; for instance, protein-protein interaction networks  <cit> , gene regulatory networks , functional rna networks , and metabolic networks  <cit>  can be found in a number of databases or knowledge repositories nowadays  <cit> . all such previous efforts provide a solid basis for further advancing our understanding of biological systems and the associated outcomes qualitatively or quantitatively.

graphical models have long been considered as a natural mathematical representation of biological network for various quantitative analysis tasks such as parameter inference . specifically, given a biological network structure and experimental observations of certain variables associated with network nodes, it is often of significant interest to determine the unknown coefficients associated with network edges. for instance, to understand the responses of a biological network  to different environmental signals , edge coefficients are likely to vary under different conditions and thus need to be estimated under each condition for the same given network structure  <cit> . in such a scenario, although the structure of the corresponding graphical model is known and fixed, concerns about the accuracy and reliability of parameter estimates often raise due to, e.g., the existence of unobserved node variables . in practice, latent variables are not uncommon due to various technical limitations, ethic issues, financial affordability, and so on  <cit> . therefore, a natural question to ask is: what is the remedy that enables us to obtain reliable parameter estimates for a given graphical model structure with partially observed variables?

to the best knowledge of our authors, the aforementioned important question has rarely been tackled before in the context of quantifying unknown model parameters of biological networks; and in this study, we make the very first attempt to address this question from the structural identifiability point of view. by the definition in miao et al.  <cit> , an unknown model parameter is structurally identifiable if it can be uniquely determined for a given model structure under the assumptions that sample size is sufficiently large and data quality is not of concern. of course, one can also take the effects of sample size and data noise into consideration and conduct the so-called practical identifiability analysis  <cit> ; however, this is out of the scope of this study as practical identifiability analysis is not feasible at certain experimental design stage when real data are not available. on the contrary, structural identifiability analysis allows us to detect flaws in model structure and observation scheme before data collection, and thus should be investigated first. our solution to the question mentioned at the end of the previous paragraph is thus a strategy that identifies a minimum number of unobserved nodes, for which the associated node variables should be observed in experiments such that all unknown parameters become structurally identifiable. this is a useful and cost-effective remedy if some of the model parameters are not identifiable given the original observation scheme, and we thus name it the structural identifiability-based optimal observation remedy .

since biological networks can be represented by many different types of mathematical or statistical models, it is impossible to devise the sioor strategy for every different model type in one study. therefore, we consider a linear structural equation model  <cit>  here because it is a representative graphical model type and has been widely applied in various disciplines including systems biology . a number of previous studies have investigated the parameter identifiability problem of sems, but the majority of these studies only derived theoretical criteria or conditions for identifiability verification, including pearl’s back door and front door criteria  <cit> , brito and pearl’s generalized instrumental variable criterion  <cit> , tian’s accessory set approach  <cit> . only a few studies proposed computerizable identifiability analysis approaches, including drton’s condition  <cit>  and foygel’s half-trek criterion  <cit>  , sullivant’s computer algebra method and the more recent wang’s identifiability matrix method  <cit> . more importantly, all such criterions and methods assume that the observation strategy is given , and none of them considered the remedy strategy if a given observation strategy does not grant identifiability to all unknown model parameters. the focus of this study is thus to investigate how to choose a minimum number of nodes that are not observed in the original observation strategy for additional experimental measurements such that all unknown model parameters become identifiable. this study leads to a general and computerizable solution to the sioor problem for the first time.

more specifically, in the case that a given observation strategy of a biological network cannot grant identifiability of all unknown parameters in the corresponding sem due to the existence of unobserved variables, we propose a dynamic programming  approach to search for all possible sioor strategies. the proposed approach is a generic and computerizable method that can deal with recursive sems. it should be stressed that sioor strategy does not involve any power or sample size calculation and thus cannot be compared with the traditional experimental design approaches  <cit> . also, it should be stressed that the observability problem in control theory is different from the sioor problem because the aim of observability analysis is to determine the internal states of a system from its external outputs  <cit> . for clarification purpose, we also compare liu’s graphic approach for observability analysis  <cit>  with our sioor strategy in this study.

this article is organized as follows. in the methods section, the structural identifiability-based optimal observation remedy problem is mathematically formulated. we then propose a dynamic programming approach with theoretical justification to solve the problem for recursive sems. in the results and discussion section, we describe our algorithm implementation and validate the proposed method using selected benchmark networks. also, a real substructure from the influenza virus a  <cit>  keeg pathway is chosen as an example to illustrate the application of the proposed method in practice.

methods
in this section, several key concepts and definitions are introduced for solving the sioor problem, including observation strategy , cardinality of observation strategy  <cit> , and identifiability gain . the design of the dynamical programming algorithm is also described. in addition, we provide the necessary theoretical justification for the proposed method.

problem formulation
a directed biological network can be denoted by g = , where v denotes the node set and e denotes the edge set. let v
i  denote the i-th node, and y
i denote the variable associated with v
i. if y
i is a linear function of the remaining node variables, the corresponding sem can be specified as follows, yi=∑j≠icijyj+εi,i,j= <dig> ⋯,n, 


where c
ij denotes the coefficient associated with the directed edge v
j → v
i, and ε
i denotes the disturbance error term that follows a certain distribution  with mean zero. for simplicity, all disturbance error terms are assumed to be independent. by definition, e specifies the structure of the coefficient matrix c = [c
ij], i.e., c
ij =  <dig> if no edge exists in e from v
j to v
i for i ≠ j. when a network structure contains one or more loops, g is a directed cyclic graph  and the corresponding sem is called a non-recursive model; otherwise, g is a directed acyclic graph  <cit>  and the corresponding sem is called recursive. although drton’s condition  <cit>  and foygel’s half-trek criterion  <cit>  are applicable to the identifiability analysis of non-recursive sems, the identifiability of parameters on a loop may be still inconclusive. due to the lack of mature structural identifiability analysis techniques for examining every unknown parameter of a non-recursive sem, this study focuses on recursive sems  only.


definition  <dig> . given a graph g = , its observation strategy can be denoted by a binary vector o=ov1⋯ovnt, where ovi= <dig> if node v
i is observed and ovi= <dig> if v
i is unobserved. 

observation strategy is important to parameter identifiability. in general, for a given network structure, the more observed nodes an observation strategy contains, the more likely all model parameters are identifiable. however, more observed nodes are usually associated with a higher experiment cost, so it is also desirable to reduce any unnecessary cost. the goal of sioor is thus to improve a given observation strategy by observing a minimum number of originally unobserved nodes such that all nonzero parameters in c become identifiable. for this purpose, let p denote the vector of all nonzero parameters in c, and let d denote the vector of identifiability status of every element in p. that is, if p
i is locally or globally identifiable , d
i = 1; otherwise, d
i = <dig>  when all the parameters in a model are locally or globally identifiable, this model is called identifiable. consequently, the sioor problem can be formulated as follows  <dig> minobservedvi∑i=1novi,subjecttod= <dig>  


where ∑i=1novi is the total number of observed nodes in an observation strategy o, and  <dig> denotes a vector of ones. for clarification, we stress that the observation measurements are for the random variables associated with network nodes, and we assume  of them are observed in the original observation strategy, where n denotes the total number of nodes and 0 < m ≤ n.

the objective function above is minimized with respect to the originally unobserved nodes, subject to the constraint d =  <dig>  during the minimization process, it needs to be repeatedly verified whether all parameters have become identifiable . for this purpose, an efficient algorithm for structural identifiability analysis of sems is needed. here we consider the identifiability matrix method proposed by wang et al.  <cit> . briefly, structural identifiability of parameters can be verified by examining the number of solutions to the symbolic polynomial identifiability equations generated by wright’s path coefficient method  <cit> . to avoid the expensive symbolic computation involved in reducing such identifiability equations, the identifiability matrix method proposes to derive binary matrices from symbolic polynomials and thus enable us to determine the number of solutions via several simple matrix operations. it is noteworthy that wang’s work  <cit>  does not explicitly handle colliders involving bidirectional arcs when generating identifiability equations with wright’s method, however, the identifiability matrix method is still applicable here as we do not consider bidirectional arcs in dags.

identifiability gain and must-be-observed nodes
the optimization problem in the previous section is combinatorial in nature. therefore, if the number of the originally unobserved nodes  is not small, enumerating all the 2m different possible observation strategies over these nodes will be computationally expensive. we thus need an efficient algorithm such as dynamic programming to obtain the solutions. for this purpose, a few more definitions need to be introduced first.


definition  <dig> . given a set of identifiability equations, an identifiability equation ie is redundant with respect to that set if it can be expressed as a linear combination of the equations in that set.


definition  <dig> . given an observation strategy o for a network g, one symbolic polynomial identifiability equation can be generated for each pair of d-connected  <cit>  observed nodes using, e.g., wright’s path coefficient method. then the total number of non-redundant identifiability equations is called the cardinality of o, denoted by f. 

the wright’s path coefficient method generates identifiability equations for recursive sems by calculating the covariance between two node variables, which is equal to the sum of the products of edge coefficients along each d-connected path, i.e., ievivj:covvivj=∑pathk∏edgelθl. after removing all redundant identifiability equations and redundant monomials, the identifiability result of each parameter can be determined by theorem  <dig> in  <cit> . that is, if the number of non-redundant identifiability equations is less than the number of unknown parameters, then the parameters have an infinite number of possible values within the parameter space and are thus unidentifiable; otherwise, the parameters have a limited number of solutions or even a unique solution and are thus at least locally identifiable  <cit> . let n
u denote the total number of unknown parameters in p. for every parameter in p being locally or globally identifiable, the inequality f ≥ n
u should hold according to theorem  <dig> in  <cit> . therefore, the optimization problem can also be formulated as follows  <dig> minobservedvi∑i=1novi,subjecttofo≥nu, 


where the calculation of f is a key challenge because it depends on specific network structure and observation strategy and thus has no closed-form solution. we thus introduce the following definition.


definition  <dig> . given a network g = , let o
 and f) denote an observation strategy and its cardinality, respectively. let v
i be an unobserved node in o
, and only v
i becomes observed in a new observation strategy o
 with the observation statuses of other nodes remaining unchanged. let f) denote the cardinality of o
. then the identifiability gain of observing v
i, denoted by g), is calculated as g) = f) − f). 

by definition, g) is the difference in cardinality between two consecutive observation strategies o
 and o
. that is, after v
i becomes observed in o
, we need to find out the number of newly added non-redundant identifiability equations. first, if another node v
j  is observed in both o
 and o
 and there exists a wright’s path  <cit>  of length  <dig> connecting v
i and v
j, it can be shown that the newly added identifiability equation, denoted by ie, is non-redundant . however, if the length of every wright’s path between v
i and v
j is greater than  <dig>  the identifiability equation ie is not always redundant, and it depends on both the node’s observation status and the structure of the network. here we introduce the concept of detour-path before we further elucidate the redundancy issue. consider a dag g =  and two d-connected observed nodes v
i and v
j. assume that there exists a wright’s path p
ji between v
i and v
j as well as an observed node v
k on p
ji, and the direction of p
ji is from v
i to v
k and then to v
j. now let p
ki and p
jk denote the two segments of p
ji, then p
ki entering node v
k has an arrow pointing into v
k while p
jk exiting node v
k has an arrow pointing away from v
k. however, if there exists another wright’s path between v
k and v
j, denoted by p˜kj, which has no any other observed nodes besides v
k and v
j and has an arrow pointing into v
k, then v
k is a collider with respect to p
ki and p˜kj. thus, we call the wright’s path segment p
jk the detour-path, and call v
i, v
j and v
k the upstream node, the downstream node, and the collider node of the detour-path p
jk, respectively. by definition, a detour-path can have only one downstream node and one collider node but may have one or more upstream nodes. moreover, multiple detour-paths can share the same upstream node, the same downstream node or the same collider node. several examples are given in fig.  <dig> to illustrate the concept of detour-path.fig.  <dig> four examples for illustrating the detour-path concept, where observed nodes are colored green and unobserved nodes are colored grey. a a simple detour-path; b two detour-paths p
jk, p
nk share the same collider node v
k and upstream nodes v
i, v
o; c two detour-paths p
jk, p
nk share the same collider node v
k, upstream nodes v
i, v
m and edge e
jk; d two detour-paths p
jk, p
nk share the same upstream node v
i and downstream node v
j





in addition, when an upstream node v
i is shared by two or more detour-paths that have the same downstream node, v
i is called a shared upstream node; otherwise, v
i is called an exclusive upstream node. note that a detour-path can have both exclusive and shared upstream nodes in the same time, and the collider node of one detour-path can be an upstream node of another detour-path. consider two detour-paths that have no exclusive upstream nodes, if they share the same downstream node and at least one upstream node, or one upstream node of one detour path is the collider node of the other detour-path, then two detour-paths are intersecting. one can tell that if pjk <dig> intersects with pjk <dig> and pjk <dig> intersects with pjk <dig>  then pjk <dig> also intersects with pjk <dig>  then we consider a downstream node v
j, let s_idp denote all the intersecting detour-paths, and let s_sun denote all the shared upstream nodes of s_idp. similar to a single unknown parameter, the coefficient product wp=∏edgelθl of a wright’s path p can be deemed as a single parameter and one can tell its structural identifiability based on identifiability equations. if a detour-path p has at least one exclusive upstream node, then the wright’s coefficient wp of p is globally identifiable . also, for a group of intersecting detour-paths, if the node number of s_sun is equal to or greater than the number of intersecting detour-paths in s_idp, then the wright’s coefficient of each detour-path in s_idp is globally identifiable .

given a dag g = , consider two observed nodes v
i, v
j and an unobserved node v
u. v
u may not be on any wright’s paths between v
i and v
j. for this case,if only v
u becomes observed in o
, then for each observed node v
i in o
, one can check whether the identifiability equation ie is redundant according to lemma  <dig> . that is, when none of the wright’s paths between v
i and v
u contains detour-paths, ie is redundant if and only if each wright’s path between v
i and v
u passes at least one observed node other than v
i and v
u; otherwise, ie is redundant if and only if the wright’s coefficient of each detour-path between v
i and v
u is globally identifiable in o
 and each wright’s path between v
i and v
u passes at least one observed node other than v
i and v
u. if v
u is on a wright’s path between v
i and v
j, and the sufficient and necessary condition for one of the identifiability equations ie and ie being redundant is similar to lemma  <dig> and given in lemma  <dig> . note that it can be determined whether the wright’s coefficient of a detour-path is globally identifiable according to lemma  <dig> and lemma  <dig> 

based on lemma  <dig> and lemma  <dig>  we propose a novel graphic method to calculate the identifiability gain g). let des
i denote the descendant node set of v
i, anc
i denote the ancestor node set of v
i, rel
i denote the set of nodes that are not included in des
i or anc
i. moreover, let bound
i ⊂ anc
i denote the boundary node set, in which every node has at least one outgoing edge to a node in rel
i. then we can calculate g) by removing the following edges from the original graph g: i) all the incoming edges to the observed nodes that are not collider nodes of detour-paths in anc
i; ii) all the outgoing edges from some observed nodes in des
i and rel
i and these observed nodes are not the collider nodes of the detour-paths whose wright’s coefficients are unidentifiable in o
; and iii) all the outgoing edges from the observed nodes in bound
i to nodes in rel
i, and then we get a new graph denoted by g '. let n
w denote the total number of the observed nodes that are connected with v
i via any wright’s path in graph g '. furthermore, one can tell from the edge-removal operation that there still exist some redundant identifiability equations in g ', because the following two types of redundancy cases have not been considered in the edge-removal operation: v
i is the downstream node of an arbitrary detour-path, and v
i is on a wright’s path between two observed nodes in g '. let n
r denote the number of redundant identifiability equations in g '. according to the topological structure of g ' and the node’s observation status, we can obtain n
r based on lemma  <dig> and lemma  <dig> . it can be shown that the identifiability gain is g) = n
w − n
r .

for a given dag g and an observation strategy o
, different unobserved nodes may associate with different identifiability gains. naturally, our strategy is to choose the unobserved node in o
 with the maximum identifiability gain if it becomes observed in o
. however, we also recognize that, to assure that all model parameters are at least locally identifiable, certain nodes of a dag must be observed if they are unobserved in an observation strategy . for convenience, we call such nodes the must-be-observed  <cit>  nodes, and let o0m denote the observation strategy, in which only the mbo nodes are observed.


lemma 1
given a dag g = , an observed node
v
i, and an unobserved node
v
u
in
o
, if only
v
u
becomes observed in
o
, the identifiability equation
ie is non-redundant if there exists a wright’s path of length  <dig> connecting 
v
i
and 
v
u.


lemma 2
if a detour-path 
p
has one or more exclusive upstream node, the wright’s coefficient 
wp of p
is globally identifiable.


lemma 3
for a group of intersecting detour-paths, if the number of the shared upstream nodes in 
s_sun
is equal to or greater than the number of intersecting detour-paths in 
s_idp, then the wright’s coefficient of each detour-path in
s_idp
is globally identifiable.


lemma 4
given a dag g = , an observed node
v
i, and an unobserved node
v
u in o
, if only
v
u
becomes observed in
o
, there exist two cases:
each wright’s path between v
i and v
u passes at least one observed node other than v
i and v
u when none of the wright’s paths between v
i and v
u contains detour-paths;

each wright’s path between v
i and v
u passes at least one observed node other than v
i andv
u, and the wright’s coefficient of each detour-path between v
i and v
u is globally identifiable in o
 when certain wright’s paths between v
i and v
u contain detour-paths.




then the identifiability equation ie is redundant if and only if one of the above conditions holds.


lemma 5
given a dag g = , two
d-connected observed nodes
v
i
and
v
j, and an unobserved node
v
u
in o
, if v
u
is on a wright’s path between v
i
and v
j
and only v
u
becomes observed in o
, there exist two cases:
each wright’s path between v
i and v
j passes at least one observed node other than v
i and v
j when none of the wright’s paths between v
i and v
j contains detour-paths;

each wright’s path between v
i and v
j passes at least one observed node other than v
i and v
j, and the wright’s coefficient of each detour-path between v
i and v
j is globally identifiable in o
 when certain wright’s paths between v
i and v
j contain detour-paths.




then one of the two identifiability equations ie and ie is redundant if and only if one of the above conditions holds.


theorem 1
given a dag g =  and an unobserved node v
i
in an observation strategy o, let g ' denote the sub-graph after the edge-removal operation. then the identifiability gain is g = n
w − n
r, where n
w
denotes the total number of the observed nodes that are connected with v
i via any wright’s path in graph g ', and n
r
denotes the number of redundant identifiability equations in graph g '.


lemma 6
for a given dag g = , the following nodes must be observed to assure that all the parameters of the corresponding sem are at least locally identifiable
the nodes with an out-degree 0;

the nodes with an out-degree 1;

the nodes with an in-degree  <dig> and an out-degree less than  <dig> 




dynamic programming strategy
let o0g denote a given observation strategy. if some of the mbo nodes are not observed in o0g, o0m should be incorporated into o0g according to lemma  <dig>  therefore, the initial observation strategy, denoted by o
, should always be o0=o0m|o0g, where the or operator is an element-wise operation. for example, for a dag with six nodes, if o0m=101000t and o0g=011000t, then o0=111000t.

the dynamic programming strategy starts with the calculation of the cardinality of o
 )) based on theorem  <dig>  specifically, let r be the number of observed nodes in o
, v
o_r be the r-th observed node in o
, and o
{v
o_ <dig>  …, v
o_r} be the observation strategy in which only the first r observed nodes in o
 are observed. then fo0=∑r=1r−1gvo_r+ <dig> o0vo_1…vo_r can be calculated according to theorem  <dig>  note that the order at which v
o_r is selected into o
{v
o_ <dig>  …, v
o_r} will not change the observation strategy {v
o_ <dig>  v
o_2} = o
{v
o_ <dig>  v
o_1}) and thus have no effect on the value of f).

the second step of our dynamic programming strategy is to define stages and their associated states. let s denote the number of unobserved nodes in o
, and let v
u_s  denote the s-th unobserved node in o
, then the dynamic programming procedure can be divided into s +  <dig> stages. for illustration purpose, we consider a simple example with  <dig> unobserved nodes, as shown in fig.  <dig>  the 0-th stage is actually the initialization step as described in the previous paragraph, and it has only one state, i.e., o
. at the first stage, there are s =  <dig> different states; that is, only one of the unobserved nodes {v
u_ <dig>  v
u_ <dig>  ⋯, v
u_5} in o
 will be selected to observe. at the second stage, since one of the five unobserved nodes has been selected at the previous stage, there are only four unobserved nodes for selection and thus four states exist . therefore, as shown in fig.  <dig>  except for stages  <dig> and  <dig>  each subsequent stage has one less states than its previous stage; also, the upper triangular region  is empty because the selection order of unobserved nodes does not affect the eventual observation strategy so the inclusion of such states in the upper triangular region is redundant. one can tell that the proposed stage and state definitions satisfy the optimality principle of dynamic programming .fig.  <dig> schematic illustration of the stages, states and state transition costs in the proposed dynamic programming strategy




the third step is to compute the state transition costs for searching the optimal state transition path. according to the definitions of stages and states, there may exist several different states at the s-th stage that can transit to the same state at the -th stage. for instance, four states v
u_ <dig>  v
u_ <dig>  v
u_ <dig> and v
u_ <dig> at the first stage can transit to v
u_ <dig> at the second stage, as shown in fig.  <dig>  the state transition cost from state v
u_i to state v
u_j  between two consecutive stages is just the identifiability gain g{…, v
u_i, …}), where o
{…, v
u_i, …} means that v
u_i is observed in o
. then the cardinality of an observation strategy can be computed by adding f) and all the state transition costs along the state transition path. since the goal of the dynamic programming strategy is to search for the optimal observation strategies, when there exist multiple transition paths from state v
u_i in o
 to state v
u_j in o
 , the transition path associated with the maximum identifiability gain will be chosen; that is, fovu_jk+1=maxvu_i,i≠jgvu_jovu_ik+fovu_ik, where ovu_ik is a convenient notation for o
{…, v
u_i, …}.

the dynamic programming strategy above can be mathematically described in eq. , and we have implemented this strategy in r ,  <dig> fovu_s1=fo0+gvu_so <dig> s= <dig> ,…,s,fovu_jk+1=maxvu_i,i≠jgvu_jovu_ik+fovu_ik,k= <dig> ,⋯&k≤s− <dig>  


it should be stressed that it is not necessary to finish all the s iterations as shown in eq. . once the cardinality fovu_ik at the k-th stage becomes equal to or greater than the number of unknown parameters n
u, the dynamic programming process will stop and we get the sioor strategies.

RESULTS
overview of the framework
observation strategy design is an under-investigated problem for biological networks, despite the fact that a variety of biological networks have been actively constructed and used in numerous benchside or bedside studies. however, the existence of latent variables is a common problem due to cost, technical or other limitations, and has significantly hampered our capability to quantitatively investigate and understand such networks via, e.g., key network parameter estimation from experimental data. identifiability analysis has long been recognized as a powerful tool to assure the accuracy and reliability of parameter estimation techniques; however, identifiability-based observation strategy design for biological networks turns out to be an unexplored field despite its substantial importance to biological network studies like structure identification.

to the best knowledge of our authors, this is the first study that tackles the problem of identifiability-based observation strategy design for biological networks described by linear sems. first, we introduce several new concepts such as cardinality of observation strategy and identifiability gain and mathematically formulate the identifiability-based optimal observation problem. second, for a given network structure, the key idea is to turn a minimum number of unobserved nodes in the original observation strategy into observed such that the number of non-redundant identifiability equations becomes greater than or equal to the number of unknown model parameters . by counting the number of non-redundant identifiability equations, we avoid performing actual identifiability analysis on sem and the proposed method is thus computationally efficient. third, by defining the concepts of stage division and state transition, a dynamic programming strategy is proposed to solve the maximization problem without involving any time-consuming symbolic computation or matrix operations  <cit> . fourth, an efficient computing algorithm is proposed to calculate the identifiability gain of each unobserved node in a given observation strategy. more specifically, the computing process is significantly simplified by counting the number of observed nodes that connect with the node of concern via wright’s paths after removing certain edges from the original graph.

it takes a non-constant time to compute the node identifiability gain in each iteration, and the algorithm complexity depends on the number of observed nodes. furthermore, the number of iterations of the dynamic programming algorithm does not depend on the total number of nodes, but the number of unobserved nodes in the original observation strategy. let s denote the number of unobserved nodes and t denote the number of observed nodes in the original observation strategy, then the computation complexity of the dynamic programing strategy is o.

implementation and verification
the flowchart of the proposed algorithm for searching the structural identifiability-based optimal observation remedy is shown in fig.  <dig>  we have implemented the dynamic programming algorithm in r, and all the source codes and examples are freely accessible at https://github.com/hongyu-miao/sioor.fig.  <dig> flowchart of the proposed dynamic programming algorithm




here we describe several important technical details of the implementation. first, at the state transition step, i.e., fovu_jk+1=maxvu_i,i≠jgvu_jovu_ik+fovu_ik, if there exist multiple transitions that produce the same f), our current implementation chooses only one such transition to update the next-stage observation strategy. if needed, the r code can be slightly modified to enumerate all optimal observation strategies. second, since the boundary node set is just a subset of the ancestor node set for a given node, the processing of the boundary nodes is incorporated into the processing of the ancestor nodes in the current implementation.

in order to verify the implementation, synthetic dags can be generated for this purpose, like the two dag examples in fig.  <dig>  the first dag contains  <dig> nodes and  <dig> edges, and it has only a single input node and a single output node. moreover, the first example considers a special initial observation strategy  to illustrate the capability of the proposed method to design optimal observation strategy from scratch. the second dag has multiple input and output nodes, and it considers a more general situation, that is, there exists both observed and unobserved nodes in the initial observation strategy. we analyzed the two examples using the proposed algorithm, and used the identifiability matrix method  <cit>  to verify that the obtained observation remedies do grant  identifiability to all model parameters.fig.  <dig> two dag examples for algorithm implementation validation, where the green nodes are unobserved and the blue ones are observed in the initial observation strategy. a a dag with a single input and a single output; b a dag with multiple inputs and multiple outputs




applications to real biological networks
since it is impossible to cover all the biological networks in various databases and knowledge repositories  <cit>  in one study, we choose the biological network associated with influenza a virus  <cit>  as an application example for illustration purpose. iav can infect birds as well as mammals including human, and it has been one of the major infectious pathogens that have caused millions of human deaths. it is thus of great scientific significance to systematically understand iav infection and immune response mechanisms. therefore, matsuoka et al.  <cit>  manually curated a comprehensive database, called flumap, for depicting the influenza virus life cycle at the molecular level from over  <dig> previous publications. there are mainly five modules in flumap: virus entry, virus replication and transcription, post-translational processing, transportation of virus proteins, and packaging and budding. given the critical role of virus replication in influenza virus life cycle, numerous experimental studies  have made attempts to understand virus replication mechanisms and their clinical implications. thus, we choose to focus on the iav replication module and analyze its observation strategy.

since iav replication involves many different biomolecules and complex interactions, it is usually infeasible to observe all such components and their interactions in one study. the question of concern here is how to choose a minimal number of nodes in fig.  <dig> to observe such that all the model parameters become at least locally identifiable. note that fig.  <dig> is derived from matsuoka’s work  <cit> , and consists of  <dig> nodes and  <dig> edges; for simplicity, the catalyzers and inhibitors in this network are treated as reactants.fig.  <dig> an application example based on the influenza a virus replication module, where all nodes are initially unobserved and in green color





a relevant concept, called observability, has been previously investigated by liu et al.  <cit>  for complex dynamic systems. although observability analysis also deals with observation strategies considering the existence of latent variables, it is very different from identifiability analysis in two aspects: 1) the focus of observability analysis is not model parameters but how to infer the unobserved state variables from experimentally measured outputs of a system; 2) the graphical approach proposed by liu et al. was developed for the so-called balance equations based on mass-action kinetics, the model structures of which are very different from static linear sems. however, it is of interest to compare the identifiability-based observation results with those of the observability-based method. for this purpose, we assume that all the nodes in fig.  <dig> are initially unobserved. after applying the proposed dynamic programing method, we get the optimal observation strategy shown in fig.  <dig> for achieving parameter identifiability. the optimal observation strategy produced by liu’s observability approach is shown in fig.  <dig>  according to fig.  <dig> and , one can tell that the identifiability-based observation strategy contains  <dig> observed nodes and  <dig> unobserved nodes, while the observability-based strategy contains  <dig> observed nodes and  <dig> unobserved nodes. that is, for the iav replication module, the system internal states can be inferred from a few observed output nodes if a balance equation model is used; however, it needs much more observed nodes to achieve parameter identifiability if a linear sem is used. such an observation is not only due to the different goals of observability and identifiability analyses, but also the differences in the underlying model structures used in observability or identifiability analyses.fig.  <dig> the optimal observation strategies for the influenza a virus replication module based on a identifiability and b observability, where the yellow nodes are observed and the green nodes are unobserved




moreover, besides the nodes with an out-degree  <dig> or  <dig> as mentioned in lemma  <dig>  the identifiability-based observation strategy is also likely to select the nodes with a high out-degree as unobserved nodes; for instance, the two unobserved nodes viral_rna and np in fig.  <dig> have the highest out-degrees  <dig> and  <dig>  respectively. this is because, if an unobserved node has a high out-degree, this node is connected with many out-neighbor nodes; when its out-neighbor nodes are observed, there will exist multiple wright’s paths that connect such out-neighbor nodes and pass this unobserved node, and the corresponding identifiability equations thus contain the parameters associated with the out-edges of this unobserved node such that these parameters can be identifiable. interestingly, the observability-based strategy tends to select the nodes with a low out-degree as observed nodes, for example, all the nodes with  <dig> out-degree are observed in fig.  <dig>  it is because the nodes with an out-degree  <dig> in a dag are usually the final products of chemical reactions, instead of reactants, and thus the internal states associated with other nodes can be easily inferred based on the balance equations if all the final products of chemical reactions are measured.

CONCLUSIONS
in this study, we address an important problem for biological networks: the design of observation strategies for all edge coefficients being identifiable. linear sems are used as the mathematical representation of biological networks, which allows us to formulate the problem as a constrained optimization problem. a dynamic programming strategy was then developed to solve the constrained optimization problem to obtain the optimal observation strategies at the cost of turning a minimal number of unobserved nodes into observed. the proposed solution is novel and efficient because it avoids both symbolic computation and matrix operations as used in other studies, and we provided necessary theoretical justifications for the proposed algorithm. as verified by multiple examples , the proposed solution is generic and can be applied to an arbitrary dag  without bidirectional edges.

we also recognize that many real biological networks are dynamic, nonlinear, or have feedback loops, which are beyond the capability of the method developed in this study. however, this study provides a basis for determining the identifiability-based optimal observation remedy for more complex biological networks, and we expect to tackle the more challenging problems in the future.

additional file

additional file 1: theoretical justifications for identifiability gain computation. 




abbreviations
semstructure equation model

dagdirected acyclic graph

sioorstructural identifiability-based optimal observation remedy

iavinfluenza a virus

dpdynamic programming

osobservation strategy

igidentifiability gain

dcgdirected cyclic graph

