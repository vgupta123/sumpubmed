BACKGROUND
recent high-throughput and whole-genome experimental methods create new challenges in data analysis and visualization. gene expression and protein microarrays output hundreds of thousands of data points that can be used for prediction of gene function over the entire genome. however, there are serious and fundamental challenges in the analysis of these data. microarray data contain substantial experimental noise and as our knowledge of biology is incomplete, no perfect gold standard exists for verification of microarray analysis methods.

in order to determine gene/protein relationships and functions from microarray data, methods must be robust to noise and must identify groups of genes that may be functionally related. statistical methods, such as clustering, attempt to identify data patterns and group genes together based on various distance metrics and algorithms. the lack of a true gold standard makes it impossible to verify the absolute accuracy of any clustering method. several statistical approaches have been presented for assessing cluster quality  <cit> , but these are all either internal validation methods or methods that rely on incomplete external standards such as mips  <cit>  or gene ontology  <cit>  functional protein classifications. further, these methods do not address the issue of identifying specific problems within clusters of microarray profiles or assessing the relationships between clusters of genes. well designed visualization methods are capable of aiding in these tasks by helping to bridge the gap between raw data and the analysis of that data  <cit> . to perform more comprehensive cluster analysis, statistically integrative, dynamic, noise-robust data visualizations are required to complement purely analytical evaluation methods.

existing visualization tools do not include methods to statistically and dynamically evaluate clusterings of genes. several tools can display expression data in various static ways suitable for publication  <cit>  or provide useful dynamic views of tabular data  <cit> , but are not specifically intended for cluster analysis. javatreeview  <cit>  and the hierarchicalclusteringexplorer  <cit>  dynamically display hierarchically clustered data for analysis and vxinsight  <cit>  displays the result of a built-in clustering algorithm in an interactive 3d topology, but none are able to display results of other clustering methods for analysis. treemap  <cit>  provides an innovative way to visualize hierarchically clustered data as well as data organized in the context of the go hierarchy, but is not intended for cluster analysis. new tools such as genexplorer  <cit>  provide an interactive method for visualization and analysis of microarray data on websites, but do not focus on the task of cluster analysis. several tools, including the multiexperimentviewer  <cit>  and genesis  <cit> , provide multiple methods of performing clustering as well as some visualization methods to analyze the resulting clusters. commercial tools, such as genespring  <cit>  and spotfire  <cit> , offer various statistical and visualization tools for general analysis, but neither offer visual methods specific to analyzing the results of clustering algorithms. therefore, there is a need for a visualization-based methodology designed specifically to statistically and dynamically evaluate clusters produced by the variety of available algorithms and software tools.

here we present a suite of interactive microarray analysis methods that integrate relevant statistical information into visualizations for the purpose of assessing the quality and relationships of clusters in a noise-robust fashion. our methodology is general and can be used to analyze the results of most clustering algorithms performed on either protein or gene expression microarray datasets.

RESULTS
noise robust visualization
microarray data contain a substantial amount of noise; therefore, visualizations must facilitate tasks like pattern identification and outlier detection in a noise-robust fashion. microarray data span a rather large and noisy numerical range, so traditional microarray visualizations use a cutoff value that specifies where maximum saturation occurs. while this is necessary in order to see variation around zero, it obscures variation in highly over or under expressed areas . at a minimum this cutoff value should be dynamically controlled by the user so that they have the ability to see both types of variation. several currently available tools include this ability, as does our method, but while the ability to change the cutoff value helps to increase dynamic range and decrease the effects of noise in visualizations, it fails to address the entire problem. traditional visualization methods essentially display the euclidean distance between gene expression profiles, a measure that is not robust to outliers. distance metrics more robust to noise, such as a rank-based spearman correlation coefficient, can be used for numerical analysis of microarray data. we propose a rank-based visualization method to serve as the complement to these noise robust distance metrics .

our method performs a rank transform on each gene by sorting the gene's expression levels, then ranking the experiment for each gene with the lowest expression  <dig>  the next lowest  <dig>  and so on to the highest expression which is ranked n- <dig>  where n is the number of experiments. each experiment is then displayed as a grayscale percentage of rank/. in this display, the experiment with lowest expression for each gene is colored black, the experiment with the highest expression is colored white, and the intermediate experiments gradate between them in shades of gray.

in addition to being more robust to noise, this rank-based visualization allows users to easily see patterns of shape/trend that are not apparent in traditional visualizations. clustering algorithms that use a rank-based distance metric will group together genes based on their pattern of expression which can result in clusters that look very nonuniform when traditionally displayed . however, in our rank-based visualization it is clear that these genes do belong together because they share expression profiles with the same shape/trend.

while the example in fig.  <dig> is an extreme case, this rank-based visualization approach is useful in a variety of biological settings. for example, in many time series data sets it is useful to observe changes in expression over time in response to some process such as environmental changes, drug introduction, or cell cycle phase. in particular, a group of genes which all rise in expression over a period of samples in a cell cycle experiment, but whose absolute expression levels are not the same will appear heterogeneous when displayed traditionally. however, when displayed using our rank-based method, the pattern of expression is much clearer, which can aid users to identify biologically meaningful trends of expression . genes exhibiting a coherent progression of shape/trend over time may be co-regulated. thus, it is important to identify trends and not just examine similarities of absolute expression level.

assessing cluster quality
while multiple statistical methods have been developed for assessing the quality of clusters produced by different algorithms  <cit>  the most appropriate clustering algorithm choice depends on the dataset, distance metric, and goal of the analysis  <cit> . due to the limitations of these methods, it is important to effectively display clustered data in a manner that allows researchers to examine the variation and consistency of the results of different clustering algorithms. we propose two new visualization techniques that can be used to assess overall cluster quality, and also identify individual outliers and other anomalies in the data quickly and efficiently.

first, to analyze the overall cohesion of each cluster, we developed a "difference display" method. for each cluster, we display the cluster average bar to show the general expression of the cluster as a whole. we calculate the vector of the cluster average  from the vectors of expression profiles of each gene, , for each cluster containing m genes with expressions measured over n experiments using the standard formula:



each gene's expression is displayed as a difference, , from the cluster average, :



thus if a gene is shaded green in an experiment, it is expressed lower than the cluster average for this experiment, and if shaded red it is expressed more in an experiment than the cluster average for that experiment. in this visualization a cluster that is relatively dark is more uniform since the genes are generally close to the average . individual genes that differ from the average more than others will stand out as brighter than their neighbors, which allows for easy visual detection of outliers . thus, this visualization allows researcher to easily identify genes that do not fit well with the cluster's expression profile, and thus may be functionally distinct from the rest of the cluster.

second, in addition to assessing overall cluster quality and identifying gene outliers, it is important to look at variation of individual experiments within each cluster. we calculate the standard deviation, s, of each experiment, j, within a cluster in the normal manner:



where m is the number of genes in the cluster,  is the cluster average for experiment j, and gi, j is the expression level of gene i in experiment j. we display the standard deviation of each experiment within the cluster below the cluster average bar. here black indicates a standard deviation of zero and white indicates higher standard deviations, saturating at a user defined cutoff value. this allows a user to quickly identify high and low variation experiments on a per-cluster basis . high variation experiments may imply that the genes in this cluster were less related under those particular experimental conditions.

visualizing clusters in this difference display method allows users to see variations in expression level that may be biologically significant that are not visible in traditional visualization methods. for example, the data shown in fig.  <dig> is the glycolysis cluster  from  <cit> . when viewed traditionally this cluster appears very homogenous and consistent. however, when viewed as a difference from the cluster average, we can observe that in the region of highly under-expressed experiments some genes are more expressed than the average while others are less expressed than average . this suggests that the cluster could be split into two smaller clusters that would be even more homogenous. in this example  <dig> of the  <dig> genes indicated by the red box, but only  <dig> of the  <dig> genes indicated by the green box are annotated to glycolysis. the genes in the green box are better categorized as more generally related to alcohol metabolism than to glycolysis in particular . traditional visualization is unable to show this type of biologically meaningful variation in highly over or under expressed regions.

assessing cluster relationships
in addition to assessing the quality of clusters produced by an algorithm, it is also important to understand how the clusters and genes in different clusters relate to each other. clusters with similar overall expression profiles may functionally interact with one another. one method to show high level cluster-to-cluster relationships is to calculate a hierarchical clustering using only the averages of each cluster. we can then hierarchically arrange the cluster averages and display the dendrogram relating the averages to each other . as this method only creates a hierarchy for the cluster averages, rather than for individual genes as in the case of hierarchical clustering of the entire dataset, it allows us to show cluster relationships for arbitrary clustering algorithms.

however, this dendrogram of averages fails to show the relationships between genes in different clusters. it is important to examine gene-to-gene and gene-to-cluster relationships to assess whether or not genes are included in the most appropriate cluster. in order to view the lower level relationships among genes in clusters we can project high dimensional microarray data into a lower dimensional space such that genes with similar expression profiles are spatially closer to each other than genes with different expression profiles. we use principal component analysis  to define the axes of a three-dimensional space to project the genes and clusters onto. pca has been used previously in microarray data analysis for dimensionality reduction to facilitate easier analysis and comparisons  <cit>  and to identify patterns of noise  <cit> . our method is interactive and navigable which allows users to examine individual genes and view relationships between clusters as they separate out spatially.

to perform pca on the microarray datasets, we use singular value decomposition . svd decomposes an m × n matrix of the full microarray data, x, into three additional matrices:



where m is the number of genes and corresponds to rows of the matrix, and n in the number of experimental conditions and corresponds to the columns of the matrix. we use the eigengenes, or principal compenents , defined in the rows of vt as the axes for our pca visualization. the position of each gene in that space is determined by the corresponding column of uΣ. the square of the singular values, contained on the diagonal of Σ, correspond to the variance included by each pc such that the percent of variation, p, captured by the kth pc is determined by:



in this formulation, the singular values are in decreasing order, meaning that the first pc includes more variation than the second, and so on. thus, using the top  <dig> pcs includes the most variation possible in a three dimensional projection. we would expect that well-formed clusters would separate out the most when using the top pcs as the axes of projection. however, in some data sets the top pcs are not the most appropriate space for projection. for example, in the spellman et al. cell cycle data set  <cit>  using our tool we can see that the first pc does not show the "banded" pattern typical of ordered cell cycle data, which the second, third, and fourth pcs do display . accordingly, a projection into the first two pcs does not separate out cell cycle regulated genes/clusters spatially . this is consistent with previous pca analysis done by alter et al.  <cit>  which identified the first pc of this data as highly correlated to noise rather than meaningful information. our method allows the user to dynamically specify which pcs define each axis, which allows exploration of which pcs are most appropriate for analysis and identification of potential noise-correlated patterns in the data. in the case of spellman et al. cell cycle data, we can use the 2nd, 3rd, and 4th pcs for projection, which leads to much better spatial separation . in this projection, we can see that each phase of the cell cycle spatially separates in temporal order around the origin and that the g <dig> and m phases appear opposite each other, which is consistent with the underlying patterns of expression for cell cycle genes. our projection of genes and clusters into a space defined by user selected pcs allows the user to view and analyze relationships on both a cluster-to-cluster basis and a gene-to-gene basis.

multiple simultaneous views and scaleable architecture
in our system each of the visualizations described above are dynamically linked to each other, so that selections, colorations, etc. are shared among views. this allows users to perform tasks in conjunction with one another. for example, using the difference image visualization and the pc projection, users can assess the quality of a clustering as well as the relationship between clusters very easily .

our implementation of these methods is both modular and scalable. although all of the visualizations share a common data structure for dynamic linking, each visualization is displayed in its own panel, allowing for easy addition or removal of new visualization components. each of the panels is fully scalable for use on both desktop/laptop size displays as well as large display walls. the ability to use these visualizations on large, high-resolution displays facilitates collaboration among researchers and allows users to view greater portions of their datasets simultaneously .

CONCLUSIONS
statistical clustering of microarray data is vital for identifying groups of genes that may be functionally related. however the high level of noise in microarray data and the lack of a gold-standard for comparison deeply complicate the evaluation of clustering algorithms. here we have presented a set of visualization methods geared specifically toward evaluating clustering of microarray datasets. our rank-based method allows for more noise-robust visualizations of expression levels, our difference display method facilitates visual assessments of general cluster quality as well as outlier detection, and our pc projection method allows for visual assessments of cluster relationships. our methodology integrates meaningful statistics into an interactive and noise-robust data visualization package for use in analyzing the results of clustering algorithms. through several examples we have demonstrated the effectiveness of these methods to aid researchers in the analysis of the results of clustering algorithms by facilitating noise-robust assessments of cluster quality and cluster relationships. we believe that more statistically integrative and targeted visualization methods can benefit not only cluster analysis, but many other important data analysis problems in genomics.

implementation
our methodology has been implemented in genevand . genevand is written in java and is cross platform for use on windows, linux/unix, and macintosh operating systems. we use java3d  <cit>  to display the pc projections and piccolo  <cit>  to display the expression profiles. the java matrix library   <cit>  is used to perform the svd calculation. the genevand package is designed in a modular way to allow future extensions and inclusion of additional information and visualizations.

the executables and source code of genevand can be found at .

authors' contributions
mah and ncd originally conceived the visualization techniques presented and were responsible for initial implementations. mah created the final implementation of genevand and drafted the manuscript. kl provided advice and aided in the scalability of the methods to large scale displays and helped draft the manuscript. ogt provided advice and opinions key to the development of the methods and helped draft the manuscript. all authors read and approved the final manuscript.

