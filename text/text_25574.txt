BACKGROUND
computational biologists are dealing with a growing range of genomic datasets, including microarray  and ultra high-throughput sequencing  data. an increasing number of biological studies involve multiple, distinct, and high-throughput assays to characterize samples of interest. novel and flexible visualization methods are needed to integrate these various data sources and combine them with annotation data from biological databases such as ensembl  <cit> .

genome browsers such as the ensembl genome browser  <cit> , ncbi entrez map viewer  <cit> , and ucsc's golden path genome browser  <cit>  enable upload and visualization of experimental data but have limited plotting options, do not provide data analysis capabilities of the displayed data, and are too far removed from the environment used to conduct statistical analysis. other tools linking genome annotation to experimental data are mostly limited to a specific data type or rely on the genome browser's viewers for visualization. statistical viewer  <cit>  for example facilitates interpretation of linkage and association data by providing a plug-in for data upload to the ensembl genome browser.

the x:map  <cit>  genome annotation database and its companion software package exonmap enable integrated visualization of experimental data and genome annotation but it is specific to exon arrays and requires a local installation of the ensembl database. it does not currently support visualization of multiple datasets and does not represent alternative splicing structures.

the main drawback of the tools described above is that they are not programmatically accessible and cannot be integrated into an analysis pipeline requiring batch processing. in addition, the required data upload step does not scale well for large and complex datasets.

the statistical programming environment r  along with the bioconductor project  provide a plethora of methods and tools to analyze and visualize data. the software package described in this paper, genomegraphs, builds on this functionality by providing an integrated api for direct visualization of data from a variety of sources. genomegraphs allows complex customization to facilitate a more complete integration and representation of genomic datasets.

implementation
graphic composition
genomic dataset objects
we developed genomegraphs as an add-on package for the statistical programming environment r  <cit> . it utilizes the s <dig> class system and represents each genomic data type as a specific class. the root class gdobject provides basic functionality for display of data that can be mapped onto the genome . all data-type specific classes extend gdobject and corresponding display functionalities are built on top of this class. an example is the genericarray class which represents gene expression microarray and arraycgh data. this class takes a matrix of intensities as input which can easily be extracted from expresionset objects as produced by the bioconductor affy package. another example is the generegion class which represents strand-specific genes in a given genomic region. quantitative genomic data, such as data from arraycgh and tiling array experiments, frequently have associated segmented data. segmented data are represented by the segmentation class. additional classes exist that represent ideograms, genomic axes, and legends. regions of interest can be highlighted on the plot by using objects of the rectangleoverlay class. once gdobjects are created, they can be visualized in one plot using the main plotting function, gdplot.

the main class, of which all other drawable classes are subclasses of, is the gdobject class. the gene, transcript, and generegion classes are subclasses of gdobject and represent annotation data that are retrieved on-line from ensembl upon creation of these objects. the third set of classes represent experimental data such as microarray and copy number data which can both be modeled using the genericarray class. probe-level exon array data can be represented by the exonarray class and base-specific values such as nucleotide conservation scores among different species are represented by the basetrack class.

new technological developments to characterize cellular states may need novel representations. classes representing these new data types can be easily added to genomegraphs and if the corresponding drawing methods are defined, the new data structures can be plotted using gdplot along with data from existing classes.

genome annotation retrieval from ensembl using biomart
genomegraphs relies on the biomart package  <cit>  to retrieve genomic annotation information on-line from ensembl using biomart web services  <cit> . the annotation information retrievable through biomart ranges from gene annotation, transcript isoforms to snp data. this information can be retrieved from the most current release of ensembl or from archived releases. by using biomart, there is no need for a local database installation of ensembl, greatly facilitating the software installation procedure.

custom genome annotation tracks
ensembl contains annotation of a limited number of eukaryotic genomes. any custom genome annotation can be visualized in genomegraphs by constructing instances of the annotationtrack class. for instance, genomic annotation encoded in gff files can be easily used to create a custom annotationtrack object for visualization. to use the annotationtrack class, region start and end positions need to be given, as well as how these regions are to be grouped.

mapping of user data to genomic coordinates
genomegraphs is a visualization tool and as such does not provide mappings of user supplied data to the genome. instances of the class gdobject take as input genomic coordinates provided by the user who is responsible for ensuring that these coordinates match the relevant genome annotation. to get the chromosomal coordinates of the data, users can either rely on the annotation provided by the platform which generated the data or on independently created mappings to the genome.

RESULTS
example i: arraycgh and exon array data
in this first example, we illustrate how different genomic datasets can be visualized together in an integrated genomegraphs graphic. we use arraycgh and affymetrix exon array data and plot these together with genomic annotation from ensembl.

we first load the genomegraphs package and one of its example datasets. this dataset contains copy number data and segmented copy number data, as well as exon array data for a small genomic region. once the data are loaded, a gdobject is created for each data type, namely a segmentation object containing the copy number segments, a genericarray object containing the raw copy number data, an ideogram object representing the relevant chromosome we are plotting, a genericarray object containing the exon array data, and a genomeaxis object for the genomic coordinate axis.

> library

> data

> seg = makesegmentation)

> copynumber = makegenericarray)

> ideogram = makeideogram

> expression = makegenericarray)

> genomeaxis = makegenomeaxis

in a next step, genomic annotation information is retrieved on-line from ensembl using the biomart package. we first connect to the ensembl biomart database and select the human  dataset. then, we retrieve gene structures on the forward and reverse strands of the region we want to visualize.

> minbase = 180292097

> maxbase = 180492096

> mart = usemart

> genesplus = makegeneregion

> genesmin = makegeneregion

in a last step, the gdplot function is called to plot instances of gdobject that were created above. the objects are given to gdplot as a list and the order in the list will determine the plotting order from top to bottom. a minimum and maximum base position are also given as arguments to restrict the visualization to this particular genomic region. the plot produced from this example is shown in figure  <dig> 

> gdplot, minbase = minbase, maxbase = maxbase)

example ii: transcript isoforms and exon array data
in a second example, we show how probe-level exon array data from the affymetrix genechip® human exon  <dig>  st platform , can be plotted along with gene models from affymetrix as well as gene and transcript annotation from ensembl. the data of the exon array are not plotted at the exact chromosomal location of the probes in order to clearly visualize alternative splicing events. most of the exons are represented on the human exon  <dig>  st platform by four probes. the location of these four probes are equally spaced in the data plots. each exon is separated by a vertical line and the exons are linked to their genomic location by connecting lines. this visualization makes it easy to relate alternative exon usage, as observed in the exon array data, to known alternative transcript isoforms in ensembl . the region highlighted in the plot shows the exon that is not expressed in the samples. to generate this plot, we first create the different subclasses of gdobject, namely: title, exonarray, gene, transcript, and legend objects. in addition, we make a custom annotation track using the annotationtrack class.

> data

> title = maketitle

> col = colorramppalette))

> exon = makeexonarray, nprobes = unrnprobes,

   dp = displaypars, displayprobesets = false)

> affymodel <- makeannotationtrack)

> gene = makegene

> transcript = maketranscript

>legend = makelegend,

      fill = c, cex =  <dig> )

in a second step, we use the rectangleoverlay class to create a highlighted region followed by the gdplot function to produce the integrated plot.

> roverlay = makerectangleoverlay,

   dp = displaypars)

> gdplot, minbase =  <dig>  maxbase =  <dig>  overlay = roverlay)

the plot generated in this second example is shown in figure  <dig> 

example iii: short read sequencing and tiling array data
in the final example, we show how complex and diverse sets of data can be integrated to facilitate joint analysis and draw biological conclusions by presenting data from various published datasets on yeast. first, we construct a list where each gdobject represents either annotation or a publicly available dataset. we have plotted data from ensembl, an illumina sequencing dataset  <cit> , affymetrix tiling array data  <cit> , nucleosome position data  <cit> , and conservation data across  <dig> related species  <cit> .

> data

> str = seqdataex$david  == 1

> biomart = usemart

> plist = list),

   makegenomeaxis),

   "+" = makegeneregion),

   "nagalakshmi" = makebasetrack)),

   "david +" = makegenericarray),

   "david -" = makegenericarray),

   "lee" = makebasetrack),

   "conservation" = makebasetrack))

having constructed the list of elements we wish to plot, we now set up an overlay, using the rectangleoverlay class, to highlight a region of interest. finally, we plot the result using gdplot. although configuring and designing the initial plot may seem laborious, once we have this basic structure we can easily produce plots for all regions of interest.

> roverlay = makerectangleoverlay, dp = displaypars)

> gdplot

the plot produced in this third example is shown in figure  <dig> 

CONCLUSIONS
genomegraphs is a versatile and extensible visualization package in r, which is well suited to create integrated displays of diverse experimental datasets and genomic annotation information. by using the biomart package, annotation information is retrieved directly from ensembl and there is no need to install and maintain annotation databases locally. custom annotation tracks can also be created by using the annotationtrack class. finally, genomegraphs provides the user with tight integration into r providing immediate access to a wealth of statistical methods.

the software package comes with a vignette which is an executable document that demonstrates how to use the package. the examples described in this paper are also included in the vignette and can be executed after installation of the package. more complex features are also demonstrated in the vignette. future versions of the package will include more flexibility in terms of plotting parameters and plotting novel features such as visualizing snp information as annotated by ensembl and stacked sequencing read representations.

availability and requirements
genomegraphs is an open source software package under the artistic- <dig>  license and has been contributed to the bioconductor project. the software and source code are available for download from . this document was produced using r- <dig> . <dig> and genomegraphs version  <dig> . <dig> available at the following url: . the package has been tested and run on os x, windows, and a variety of linux systems. genomegraphs depends on the following software packages xml, rcurl, and biomart, which can be downloaded from bioconductor or installed from r using the  script. the versatility of genomegraphs visualization relies on the powerful r plotting package grid  <cit> . each gdobject is plotted in an individual viewport from the grid package. grid is typically installed together with the base installation of r.

authors' contributions
sd and jb developed the software package. ps and sd provided scientific advice and the resources to develop the software.

