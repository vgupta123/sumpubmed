BACKGROUND
markov random fields  are a popular tool for estimating relationships between genes, finding regulatory pathways, and visually depicting genetic networks. estimating sparse, high-dimensional undirected graphical models, or markov networks, linking a set of p genes measured on n samples has been well studied for the gaussian graphical model   <cit>  and also the binary or categorical ising model  <cit> . as many high-throughput genomic data sets such as counts observed in next generation sequencing data, are not approximately gaussian or binary, existing methods for graphical models are greatly limited. to address this, a recent line of work has proposed a parametric family of graphical models based on univariate exponential family distributions with a rich theoretical foundation  <cit> . these models can be used to estimate genetic networks from a variety of data types: gene expression networks based on rna sequencing via poisson-family graphical models, mutation and aberration networks via ising graphical models, and epi-genetic networks via gaussian graphical models. in this paper, we introduce an r software package, xmrf, that encodes models and estimation techniques for fitting exponential family markov networks to high-throughput genomics data as well as software to pre-process genetic data and visualize the resulting genetic networks.

methods
recently, we proposed a novel class of mrf models  <cit>  constructed by assuming that all node-conditional distributions are univariate exponential families. these then yield a class of models appropriate for a variety of data types such as counts, categorical, continuous, and skewed continuous variables found in high-throughput genomics data. further, we proposed a simple way of learning the network structure of these exponential family mrfs by maximizing the penalized node-conditional likelihoods; these methods come with strong theoretical guarantees for sparse graph estimation as discussed in  <cit> . as the models are constructed via exponential families, the so-called neighborhood selection problems for each node reduce to that of an ℓ <dig> penalized and possibly constrained generalized linear model   <cit> .

suppose x= is a random vector, with each variable xi taking values in a set x. suppose g= is an undirected graph over p nodes corresponding to the p variables; the corresponding graphical model is a set of distributions that satisfy markov independence assumptions with respect to the graph. then, conditioned on all other variables, xs is distributed according to an exponential family distribution  <cit> : e=σ−1θstt), where θst is the weight parameter denoting an edge between xs and xt, t is the sufficient statistics function, and n is the neighborhood, or set of edges extending out from, xs. this gives the following conditional density: p=exp{θst+∑t∈nθsttt+h−b}. based on the hammersley-clifford theorem, these conditional densities give the following joint density, or mrf, over the set of nodes to form our exponential family graphical model: 
  <dig> p=exp∑s∈vθst+h+∑∈eθsttt−a. 

here, a is a log-normalization term ensuring that p is a proper density. we then fit this model using penalized conditional maximum likelihood estimation which corresponds to a neighborhood selection problem for the sth node of the following form: 
  <dig> minimizeθ∈c1n∑i=1n−txsθs+θs,∖s,tx∖s−hxs+λ∥θs,∖s∥ <dig>  

here, c is the constraint region of the parameter space as discussed further for specific examples in  <cit> . notice that this cooresponds to fitting a penalized glm.

in the xmrf package, we implement the neighborhood selection graph estimation technique by proximal or projected gradient descent using warm-starts over the range of regularization parameters, λ. note also that each node-neighborhood problem is completely independent and can hence be computed in parallel; this is achieved using the default parallel support and the snowfall package  <cit>  in r. the max-rule is used to construct the network from all neighborhood estimates. selecting the sparsity of the network corresponds to selecting λ. we implement two data-driven approaches to do so: stars which is computed over a range of λ values  <cit> , and a stability-based approach for a single value of λ which for every edge, computes the proportion of times the edge is selected in the model  over many bootstrap re-samples  <cit> . our package also implements gibbs samplers to simulate data for our exponential family mrf models. finally, our package includes functions for pre-processing sequencing data  <cit>  and includes a host of network visualization and network manipulation strategies through a dependency on the igraph package  <cit> . our package is developed under statistical computing environment r and compatible to be executed in version  <dig> . <dig> or later.

RESULTS
to estimate the network structures from different types of high-throughput genomics data, our package consists of one main function, the xmrf() function, for which many families of distributions are possible, xmrf: the ggm for family of gaussian graphical models, the ism for ising models, pgm, tpgm, spgm, lpgm for poisson families of models as described in  <cit> . for genomic networks based on sequencing data, we recommend using the lpgm variant, but all methods are described in the package vignette. table  <dig> summarizes each of the main families in our xmrf() function as well as our recommendation for which family to use for various types of high-throughput genomics data.
lpgm or spgm
ggm
ism


the xmrf() function will return an object of gms class representing the fitted models. the gms object contains the list of fitted networks, the stability of each fitted network, the full regularization path, and the index of the optimal network. the default plot method of gms class enables drawing the learned network in graphical format and saves the output to a pdf document. the package also includes plotgml function to write the learned network in graph modeling language, which can be imported to cytoscape  <cit>  for further visualization customization.

choosing the right graphical model for genomics data
the development of high-throughput technology, such as microarray, snp array, array-cgh, methylation array, exome-sequencing, and rna-sequencing, has generated a wide variety of genetics data. each of these genetics data varies in data types. for example, next generation sequencing  data are read counts; expression profiles from microarray and methylation array are continuous values; mutations and cnvs are usually represented in binary, with value one represents the gene is mutated, amplified or deleted in the patient, or value zero otherwise . to accurately estimate the underlying network structure from these data types, one needs to apply the right network inference algorithm based on the platform-specific data distribution.

in xmrf, data are modeled using their native distribution instead of normalizing the data to follow a gaussian distribution. to accomplish this, our package implements methods for three families: gaussian graphical models , ising models , and poisson family graphical models including regular poisson graphical models  as well as several variants of the poisson family of models such as the truncated poisson , sub-linear poisson , and local poisson   <cit> . note that  <cit>  proposed all these variants of the poisson family as the regular poisson graphical model only permits negative conditional dependencies between nodes; each of these variants relaxes restrictions resulting in both positive and negative conditional dependencies. for genomic networks based on sequencing data, we recommend using the lpgm variant as proposed in  <cit> , noting that this local model closely approximates the proper mrf distribution of the spgm formulation  <cit> .

poisson graphical model for ngs data
count data generated by next generation sequencing  is a good example of why parametric families of markov networks beyond gaussian graphical models are needed. this read count data is highly skewed and has large spikes at zero so that standardization to a gaussian distribution is impossible. here, we demonstrate through a real example how to process ngs data so that we can use poisson family graphical models to learn the network structure. our processing pipeline is given in  <cit>  and encoded in the processseq function of the package.

the level  <dig> rna-seq  data consisting of  <dig> breast invasive carcinoma  patients from the cancer genome atlas  project  <cit>  was obtained. the set of  <dig> genes with somatic mutations listed in the catalogue of somatic mutations in cancer  were further extracted  <cit> . the data was prepared and stored as the brcadata data object included in the package. the values in this data object are the normalized read counts  obtained from tcga data download portal, representing the mrna expression profiles of the genes. the data matrix is of dimension pxn. figure  <dig> shows that the data is more appropriate for poisson family graphical models after being preprocessed with the processseq function as given in the following code snippets:
fig.  <dig> distribution of tcga brca rna-seq data before  and after  preprocessing. the latter gives a distribution more appropriate for poisson family graphical models





to estimate the underlying network structure of the count-valued data, xmrf implements four different models from the poisson family graphical models: regular poisson graphical model  that only permits negative conditional dependencies, truncated poisson , sub-linear poisson , and local poisson   <cit> . the latter three models are variants of the poisson family that relax restrictions as imposed in a regular poisson model, resulting in both positive and negative conditional dependencies  <cit> . tpgm should be used if one wants to truncate the large counts observed in ngs dataset. alternatively, spgm implements a sub-linear truncation for the ngs data which gives a softer reduction on large counts. lpgm is a faster algorithm that approximates the markov network while preserving both positive and negative relationship  <cit> .

in practice, we choose lpgm since it is the fastest and most flexible way to capture both positive and negative dependencies  <cit> . as an example, we applied xmrf functions to study the relationships between  <dig> genes with somatic mutations cataloged in the cosmic cancer gene census database. gene expression data measured via rna-seq for  <dig> samples was acquired from the cancer genome atlas . the processseq function was used to process the sequencing data so that our poisson graphical models are appropriate  <cit> . the estimated network, fig.  <dig>  includes multiple associations reported in published literature, such as the associations of foxa <dig>  ccnd <dig>  and pbx <dig> with gata <dig>  link between erbb <dig> and cdk <dig>  and others. these results validate the utility of our methods and algorithms implemented in the package for finding gene interactions.
fig.  <dig> inferred relationships between cancer census genes from tcga breast cancer patients. the width of edges reflects the strength of inferred relationships





gaussian graphical model for expression arrays
when genomics data is profiled with microarrays, such as with mrna arrays, mirna arrays, or methylation arrays, gaussian graphical models should be used to estimate the network structures. similar workflows as presented in last section can be applied to fitting gaussian markov networks to data that approximately follows a multivariate gaussian distribution.

here, we give an example of the work-flow of learning gene networks associated with kidney renal clear cell carcinoma  from tumor patients  <cit> : 
obtain gene expression data for kirc, profiled with mrna microarray.

obtain data for only tumor samples.

filter genes so that the top  <dig> % of variable genes remain.

use the xmrf function to learn the network structure. note that it is always good practice to visualize the data to confirm the distributional family before model fitting. in this example as shown in fig.  <dig>  the data follows a gaussian distribution and thus fitting a gaussian graphical model is appropriate.
fig.  <dig> distribution of mrna expression profiled with micrarray from kirc tumor samples



write the network in gml format and view the network via cytoscape .
fig.  <dig> kirc expressed gene networks estimated by ggm via xmrf for mrna expression data





code snippets for the above work-flow are provided as follows:



ising graphical model for mutation data
to fit markov networks to binary data, the xmrf function with method=~ism~ can be used. in this section, we give an example of fitting an ising model to simulated data with a lattice graph as well as estimating interactions among mutated genes in tcga lung squamous cell carcinoma  samples  <cit> .

learning a lattice graph from simulated data
in the following example, a multivariate binary data matrix of  <dig> observations that will give a  <dig> ×  <dig> grid graph will be simulated. our xmrf ising model is fit to infer the lattice network from simulated data. models were fitted over a path of  <dig> regularization values. stars stability selection with  <dig> iterations were used to select the optimal network. figure  <dig> shows that the estimated optimal network shown  is almost identical to the true simulated network . this result shows that the ising graphical model implemented in our package could correctly identify the relationships between variables from binary data.
fig.  <dig> results of fitting an ising model to simulated multivariate binary data. the true simulated grid is plotted in  and . the estimated graph structure via xmrf is plotted in  and 





estimate lusc mutation networks
in this section, we estimate the relationships among mutated genes in  <dig> lung squamous cell carcinoma  patients from the tcga project  <cit> . we obtained the data via gettcga from tcga2stat package. a total of  <dig> genes for lusc patients were obtained. genes with a mutation rate of less than  <dig> % in the cohort or with an undefined gene name were filtered out before analysis. this left data with  <dig> genes and  <dig> patients. similar to the work-flow applied on simulated data presented, ising models were fit across  <dig> regularization values, and the optimal network was selected from  <dig> iterations via the stars approach.



the estimated mutated gene networks for lung squamous cell carcinoma viewed from cytoscape is shown in fig.  <dig> 
fig.  <dig> lusc mutated gene networks estimated by ising model’s xmrf




tuning parameter selection: network sparsity
our xmrf package implements two data-driven methods to determine the sparsity of a fitted network. the first method is the stability selection over many bootstrap samples for a single regularization value  <cit> . the second method is the stars selection, which is computed over a range of regularization values to select a network with the smallest regularization value that is simultaneously sparse and reproducible in random samples  <cit> . in this section, both of these methods are demonstrated for an example using the local poisson graphical model .

stability selection
here, we demonstrate the stability selection technique to learn the network sparsity for networks estimated via the lpgm method.

we simulate a scale-free network with  <dig> variables and  <dig> observations. we determine the network sparsity based on the stability score, which retains network edges that are estimated in more than  <dig> %  of the  <dig> bootstrap repetitions . the code is given below:



results for the code above are shown in fig.  <dig>  it shows that the estimated network structure  is equivalent to the true network structure . note that stability selection is the default way to determine network sparsity in xmrf.
fig.  <dig> simulated network from xmrf.sim  and inferred network estimated via xmrf with network sparsity determined via stability selection 



stars selection
if users want to fit a network over a series of regularization parameters instead of a single lambda as shown in last section, a numerical vector of regularization values should be given for the lambda.path parameter of the xmrf function.

another option to study the markov networks over the complete regularization path is to let our xmrf method decide the path from a null model  to the full model . in this case, the xmrf function will compute the maximum lambda that gives the null model and the minimum lambda that gives the full model for each of the parametric familes employed. the maximum lambda is computed based on the input data matrix, and is the maximum element from column-wise multiplication of data matrix  normalized by the number of observations. based on the maximum lambda value, the number of lambda  and the minimum lambda , sequence of appropriate lambda values will be computed.

stability selection via stars seeks to select the lambda value out of the regularization path which yields the most stable network . specifically, the variability of each fitted network is measured based on the stability of edges inferred from the bootstrap samples. the network with the smallest penalization and variability below the user specified cutoff  is selected as the final optimal network.

in the following example, we fit the xmrf to learn the same simulated scale-free network of  <dig> nodes from  <dig> observations along a path of  <dig> regularization parameters.



visualization and data exportation
to enable users to visualize the inferred network in graphical form, xmrf includes three plotting functions with slight variations to serve different purposes. first, the default plot function of the gms class will draw the optimal inferred network and save it to a pdf file with the following command:



second, the plotnet function allows users to plot a specific network with specific layout. for example, to plot the simulated network and the inferred network in fig.  <dig> with the same layout, the following commands can be used:



the third plot function allows users to view the inferred network in other graph visualizing software such as the cytoscape. the plotgml function will write the network in the graph modeling language  format which then can be imported to cytoscape. for example, with the following command:



CONCLUSIONS
we have developed an open source r package that allows users to learn the network structure from data acquired from various high-throughput genomics technologies. our tool is the only software that allows data to be modeled using their native distribution instead of normalizing the data to follow gaussian distribution as most other statistical models require. in addition, the parallelization of our algorithms provides an efficient tool for computing large-scale networks.

from the international conference on intelligent biology and medicine  <dig> indianapolis, in, usa. 13- <dig> november 2015

