BACKGROUND
targeted mutations in mice have been successfully employed for understanding gene function, testing hypotheses and developing treatments for human genetic disorders . in particular, mouse models are used to uncover disease mechanisms underlying neurocognitive disorders such as autism or schizophrenia. by modifying candidate genes that cause specific mental disorders in mice, correlations between targeted mutations and behavioral phenotypes are identified making mouse models a valuable tool for neuroscientists. measures of social interactions and behavior in mouse models are crucial read-outs. however, manual documentation of behavioral complexity in mice remains highly subjective and may not provide reproducible results. furthermore, the frame-by-frame assessment of long video tape recordings is time-consuming and still constitutes a bottleneck in large-scale studies. in this respect, high-throughput behavioral screening systems can overcome the aforementioned weaknesses of manual assessments.

from a technical point of view, automated simultaneous tracking of two or more individuals and online classification of their interactions and behavior are challenging tasks. while tracking is straightforward when all individuals are spatially separated, task automation is complicated when animals directly interact. in this case, additional knowledge about shape or texture has to be taken into account to separate individual shapes. a straightforward method to keep track of individuals during interactions is to label each subject with a unique marker, i.e., by bleaching  <cit> , color  <cit>  or rfid technology  <cit> . labeling, however, has a direct impact on the environment and frequently provides a sensory  stimulus and, thus, it may influence an individual’s social behavior.

when markers are omitted, automatic assessment of social interaction is challenging. several approaches have been proposed to tackle this problem. identification of individuals has been addressed by ellipse fitting  <cit> , watershed segmentation  <cit>  or particle filters  <cit> . in some of these studies, camera images are complemented by additional sensor data such as infrared  <cit>  or depth sensing  <cit> . generally, using complementary modalities enhances tracking reliability but involves additional hardware and demands a careful calibration. all these approaches, however, do not incorporate prior knowledge about the anatomy and motion patterns of the individuals to be tracked.

model-based tracking systems have been designed for different animals, specifically drosophila  <cit> , bees  <cit>  and mice  <cit> . in order to provide a reliable tracking routine, the anatomy of the animals is modeled by connected rigid primitives representing the head, thorax, abdomen or wing. the model parameters allow to document complex motion patterns and furthermore provide information about the orientation and distance for each individual body part, which in turn allows more complex behavioral state and body pose categorizations. thereby, the degree of generalization constitutes a crucial trade-off between the time needed to adapt the model to a specific scenario and the performance achieved in specific cases.

in this paper, we pursue a different strategy by automatically building a model during runtime that facilitates tracking when individuals interact closely. in the first step, shape information of the individuals is learned and documented in a catalog as long as they are spatially separated. the second step involves training of an active shape model  using the previously defined shape catalog to separate the individuals when they are in close proximity. the benefit of this procedure is twofold: first, the shape information gathered in the first step constitutes a-priori knowledge that helps to keep track of the individuals in challenging conditions and, secondly, the asm eigenvalues provide additional information about behavioral states. therefore, the proposed method provides features to identify specific conditions and social interactions. moreover, all manual interaction that is required before the tracking process  is completed within a few seconds.

the proposed method is validated by comparing manual annotations with estimated position of head and tail landmarks as well as viewing directions of pairs of mice  interacting in three different environments. from the set of tracking parameters and the eigenvalue data, social and non-social interactions are classified. the approach presented shows wide agreement between manual labeling and automatic classification. this allows for a substantial increase of experimental throughput in behavioral assessment automation with only a minimum level of user intervention.

methods
animals
all animal procedures were approved by local authorities  and in compliance with european union legislation  and recommendations by the federation of european laboratory animal science associations . c57bl/ <dig> mice  were housed in groups of both sexes .

experimental setup
the tracking and phenotyping experiments were carried out in a rectangular open field arena with a size of  <dig> cm ×  <dig> cm or a standard cage with a size of  <dig>  cm ×  <dig>  cm. the animals were recorded with a panasonic wv-cp <dig> camera providing a spatial resolution of 768× <dig> pixels at  <dig> frames per second from a top-view. first, the open field was prepared in two different setups where two female c57bl/ <dig> mice were placed. in a first setup the arena was equipped with wooden walls painted in a dark blue with moderate reflectance providing a poor contrast to the black mice to simulate challenging tracking conditions . second, the walls were covered with white paper which considerably reduced reflectance and enhanced contrast conditions . the second setup provides much better preconditions for automated tracking and behavioral phenotyping. however, the white background and altered illumination conditions may provoke considerably different patterns of behavior and stress  <cit> . consequently, an automated assessment should ideally cope with both scenarios. in a third setup, mice were placed in a cage  and the scene was recorded with the same camera. a male-male and male-female combination was considered. especially the male-female setup provides a higher variability of close interactions posing a particular challenge for the tracking system.
fig.  <dig> three different arena setups. a first setup: two female mice in an open arena with slightly reflecting walls and reduced contrast. b second setup: walls are covered with white paper providing enhanced contrast and reduced reflections. c third setup: pairs of mice male-male/male-female in a cage




video data and manual annotation
in order to validate tracking and behavioral phenotyping performance, two videos, each with a length of  <dig> min and two videos, each with a length of  <dig> min were recorded and processed: video  <dig>  using the first setup, video  <dig>  with optimized contrast and reflectance conditions, video  <dig>  with two male mice in a cage and video  <dig>  with a male and a female mouse in a cage. the ground truth of position and orientation of both mice was manually labeled for each video. the manual assignment includes the nose tip, tail base and the viewing direction. furthermore, grooming and mating behavior was documented . the manual assessment also included keeping the identity of each mouse to assess the tracker’s ability to assign the correct identities to both animals during interactions. to reduce the effort of labeling, every fifth frame was labeled in each video, resulting in a total number of  <dig>  manually labeled video frames. annotations were made with a matlab program specially designed for labeling nose, tail, ears and the viewing direction.

social behavior classification
based on several previous studies, we adopted a list of behaviors and social interactions  <cit>  that are based on positional data, viewing direction and shape characteristics . social interactions  are identified according to the tracking results as defined in  <cit> . this categorization defining interactions have shown good agreement with human ratings  <cit> . mating behavior  was evaluated for video v <dig>  the first three conditions are based on positional information whereas categories  <dig> and  <dig> also include relative angles between the viewing directions. self-grooming  was found to be evident for mouse models in the context of autism  <cit>  and can be identified according to the outer mouse segmentation when observed from a top-view.
fig.  <dig> social  and non-social  conditions. conditions c1-c <dig> are determined by positional data settings, c <dig> and c <dig> additionally incorporates relative angles and c <dig> is characterized by the outer shape of the mouse body




validation
to compare the performance, the miceprofiler tracking software  <cit>  served as benchmark for the proposed method. the miceprofiler is a sophisticated software system based on physics engines  <cit>  that has been evaluated comprehensively  <cit> . tracking accuracy of the proposed method was validated by computing the euclidean distances 
  <dig> dfnose,{usm,mp}=pfnose,gt−pfnose,{usm,mp} 


and 
  <dig> dftail,{usm,mp}=pftail,gt−pftail,{usm,mp} 


between the key landmarks nose pfnose and tail base pftail as estimated by the proposed unsupervised learning method  or the mice profiler  and the corresponding manually labeled ground truth  where f denotes the f-th frame. analogously, the angular deviation 
  <dig> Δφf{usm,mp}=φfgt−φf{usm,mp} 


between labeled and estimated viewing direction was evaluated. based on the tracking results, the interactions 1– <dig>  were automatically identified according to positional data and viewing angles provided by both tracking algorithms. for the self-grooming condition c <dig>  additional shape related data has to be considered. in the current implementation, the mice profiler system does not incorporate this information. the automated identification of c <dig> is therefore evaluated only for the proposed method.
fig.  <dig> processing pipeline of the tracking routine. the method consists of three subsequent blocks: a preprocessing, b separated individuals: segmentation and shape learning c individuals crossing: using deformable models to segment individuals during interactions




preprocessing: background separation
a static background is presumed for the proposed algorithm. the focus is put on the individuals actively moving within the scene whereas the background is removed. first, the frames are converted to grayscale and temporal illumination inhomogeneities are removed for each frame separately by dividing each pixel intensity by the mean image intensity and scaling back to an adequate intensity range. the static background is eliminated by taking the pixel-wise median over time and subtracting it from each frame. note that background subtraction is a common way to separate objects from a scene  <cit>  and was demonstrated to work well as long as the background is static and the contrast is good enough  <cit> . the automatic thresholding worked well for all the videos that we tested. however, if the automatic setting fails for any reasons, it can be adapted manually.

blob extraction
the shapes acting in the foreground, in the following referred to as blob objects, correspond to the individuals moving. to obtain a precise delineation of these blobs, a simple thresholding routine  <cit>  is applied. remaining artifacts can be removed by defining a minimum blob size b
min which can be set arbitrarily by the user before the tracking routine is initiated.

morphological operations
for the following shape extraction and learning routines , the tails of the animals are removed. the rationale is twofold: firstly, the tails are frequently disappearing in the binary segmentation  <cit> . the shape matching algorithm thus may fail when matching animal shapes with and without tail. the second point is that the relative orientation of body and tail are rather uncorrelated. shape variances to be learned for the active shape model are thus getting much more complex for shapes where the tail is included.

as nose and tail points are easily switched when analyzing mice shapes, detecting the tail position provides additional information as it indicates the orientation of the segmented body.it is thus employed to enhance the robustness of orientation estimation during shape matching . a series of morphological operations is performed on the binary segmentation m to localize the tail base . first, the tail is extracted by subtracting the result of a morphological opening from the original segmentation . finally, the tail base is given by the center of the intersection of the dilated tail  and the body . the structural element s is chosen as open disc of radius r
s. note that the radius r
s depends on the diameter of the tail and should be chosen accordingly.
fig.  <dig> tail base localization. a series of morphological operations – is applied to localize the tail base. it is obtained from the center of the intersection of the body  and the dilated tail 




separated individuals: shape learning process
the preprocessing step yields blob objects where each blob may contain one or two individuals. in a next step, a catalog of shapes is built. the first step in catalog building is the identification of blobs where the individuals are entirely separated and do not cross or touch. the set of video frames where both individuals are separated is denoted with f
s and the set comprising the remaining frames analogously with f
c.

initializing the learning process
initially, the user selects a representative separated mouse shape  from an arbitrary frame that is to be tracked. the boundary 
  <dig> x=x <dig> y <dig> …xn,ynt 


obtained from the corresponding blob object is referred to as reference shape. subsequently, the user marks meaningful boundary landmarks, i.e. head, tail and ear positions . in a second step, all boundaries extracted from f
s are mapped to the reference shape using the shape context matching and the inner-distance as proposed by ling and jacobs  <cit>  and as described in the next “shape matching” section. as nose and tail base of the matching may be easily switched, the matching is aligned to the tail base that has been localized using the previously described morphological operations . if the tail base cannot be localized, i.e. through occlusions, then the orientation is aligned according to the previous frame.

shape matching
belongie et al.  <cit>  proposed a shape matching procedure based on a log-polar histrogram. for each contour point p
i=t, the distribution of the remaining contour points is represented by the log-polar histogram 
  <dig> hi=#q≠pi:∈bin, 


where b
i
n denotes the k-th bin of the log-polar space. the costs of matching two points p
i and p
j are given by the χ
 <dig> test 
  <dig> c=12∑k=1nhi−hj2hi+hj. 


note that due to the logarithmic distance scaling, the cost function is more sensitive to nearby contour properties. minimizing the total costs 
  <dig> h=∑ic), 


where π is a permutation, finally yields an optimal bipartite graph matching providing the desired correspondences for the graph matching. a detailed description of the algorithm and a corresponding implementation, is available in belongie et al.  <cit> .

however, the shape context matching relies on euclidean distance measures. anatomical conditions of animals, such as the flexibility of the spine, allow for a high variance of shape delineations. a straightforward extension which is less sensitive to articulations has been proposed by ling and jacobs  <cit> . there, the euclidean distance is replaced by the inner-distance, defined as the shortest path between landmark points within a shape silhouette  <cit> . the relative angle between two points is replaced by the inner-angle, which is defined as the angle between the tangent at the starting point p and the initial direction of the shortest path  <cit> . these modifications allow for a better matching performance for animal shape silhouettes and are therefore employed for the proposed shape learning process. particularly, the inner-distance matching proved to be very successful for tracking mice from a top-view  <cit> .

shape catalog
as long as both individuals are separated, position and orientation can be directly estimated by matching each blob boundary to the reference shape using the shape context algorithm in combination with the inner-distance measure as described in “shape matching” section. point correspondences of head, tail and ear positions are exemplarily shown in fig.  <dig> for different mice shapes and the reference shape they are mapped to. the viewing direction is estimated from the line going through the nose point and the midpoint between both ears . in doing so, the estimated viewing direction only depends on the relative head position instead of the whole body alignment as i.e. done by hong et al.  <cit> .
fig.  <dig> five matching examples. left: reference shape where tail, nose and both ears are marked, right: boundaries matched to the reference shape using the algorithm proposed by ling and jacobs  <cit> . the viewing direction  is given by the straight line connecting the midpoint between both ears and the nose




in a next step, in order to learn variations of animal shapes, a catalog is created. however, it cannot be guaranteed that the matching produces plausible correspondences. as this mismatching tends to have higher matching costs, only shapes and corresponding images in f
s, where the total matching costs h  are below a predefined threshold ρ
max, are added to the catalog. the threshold level has to be defined by the user before the tracking routine is initiated. high matching costs are often related to slight offsets of the placed landmarks. the threshold therefore constitutes a trade-off between a high variability and plausibility of the shape data and has to be chosen with caution.

finally, the line connecting head and tail points is aligned to the vertical axis for each shape of the catalog. eliminating whole-body in-plane rotation from the shape model and working exclusively on vertically aligned shapes allows to drastically reduce the complexity of shape variation while maximizing shape-relevant information in the model’s eigenvectors.

occlusion events: separation of individuals
when two individuals are close together, the segmented blob object covers both individuals. to separate their shapes, an asm is trained using the shape and image information that has been previously stored in the catalog.

active shape model
the asm was originally proposed by cootes al.  <cit>  and is closely related to active contour models as introduced by kass et al.  <cit> . in contrast to active contour models, the deformation is restricted to shape variations that are previously learned from a training set. from the landmarks x of the s training images the covariance matrix 
  <dig> sx=1s−1∑i=1sxi−x¯xi−x¯t 


is computed where 
  <dig> x¯=1s∑i=1sxi. 


is the mean shape of the training set. consequently, any shape from the training data can be approximated by 
  <dig> x≈x¯+pb 


where p= denotes the matrix whose columns are given by the eigenvectors p
i and b= is a vector of weights. thus, any shape can be approximated by a linear combination b of the eigenvectors. as the eigevectors are orthogonal, 
  <dig> b=ptx−x¯ 


allows forming shapes that are closely related to the instants of the training set. to maintain plausibility of the resulting shape, the range of the coefficients b
i is typically restricted to the interval 
  <dig> −mλi≤bi≤mλi. 


where λ
i denotes the i −t
h eigenvalue and m determines the range of the model parameters. the segmented mouse shapes exhibit a high degree of freedom as their orientation can be arbitrary. a considerable reduction of complexity can be achieved by consistently aligning the shapes in a predefined orientation. here, the axis connecting tail base and nose points is aligned to the vertical axis where the nose points downwards . the first three eigenvectors obtained from the unsupervised learning routine using the vertical alignment are shown in fig.  <dig> demonstrating the dominant variations of the mouse shapes. in particular, these refer to bending left, bending right, compressing and stretching for the first two eigenvectors and the third eigenvector encodes more complex variations.
fig.  <dig> first three eigenvectors of the covariance matrix. the first indicates a left or right turn, the second squash and stretch and the third eigenvalue comprises only slight variations that are difficult to interpret




the number of eigenvalues taken into consideration depends on a predefined parameter f
v specifying the variance that contributes to the shape approximation. it is given by the smallest t where 
  <dig> ∑i=1tλi≥fv∑iλi. 


the deformable shape model is based on extracting and normalizing the first derivatives g
i of the intensity profiles orthogonal to the contour landmarks. if we assume that g
i is gaussian distributed, computing the mean profile g¯ and the profile covariance matrix s
g allows adapting an unknown shape g by minimizing the mahalanobis distance 
  <dig> dm=tsg− <dig> 


which is equivalent to maximizing the probability that g originates from the gaussian distribution  <cit> . the optimal fit along the profile is obtained from an iterative search  <cit>  where the model is shifted and sampled along the normal vector minimizing d
m in eq.  <dig>  finally, the model constraints provided by the training set are applied to the updated landmarks  <cit> .

initialization and adaption of the asm
during mouse interactions, the asm is positioned and oriented according to the previous frame. subsequently, a constant number of iterations is alternatingly performed for each asm in order to adapt segmentation results to the current frame. to avoid that both models merge together, the iterative search along the profiles is restricted to landmarks outside the overlapping area whereas the remaining landmarks are kept in place until the model constraints are applied to the updated landmarks. this strategy on the one hand allows to handle occlusions and on the other hand avoids a gradual attraction of both shapes. the asm adaption is consequently driven by the landmarks outside the overlapping area where the shape is delineated by clear edges.

exemplarily, the initial segmentations and the results after  <dig> and  <dig> iterations for each asm are shown in fig.  <dig> for three successive video frames. between two consecutive video frames, there is only a slight movement of the animals. thus, only a limited number of iterations n
max has to be performed for asm adaption in each frame.
fig.  <dig> iteration steps during shape optimization. first column: final segmentation of frame n
o− <dig>  second to fourth column: next frame n
o and the asms after  <dig>   <dig> and  <dig> iterations 




identity preservation
assigning the correct identity to each mouse is a crucial point for studying social interactions and is a challenge when both mice are close together or partially occluded. since an asm is built for each mouse, it keeps track of the identity of an individual during occlusion events. if both mice are spatially separated, the identity is assigned according to the maximum overlap between shapes of successive frames.

RESULTS
parameter settings
one of the most important parameters of the proposed method is the threshold ρ
max directly affecting the size of the shape catalog. it constitutes a trade-off between shape plausibility and variability of the training dataset. if, on the one hand, the threshold is chosen too low, only few variations are learned from the catalog. if, on the other hand, matching costs are too high, the landmarks nose and tail base might not be identified satisfactorily and thus, the training data might not be representative. in order to empirically determine an appropriate value for ρ
max, we evaluated the mean error 
  <dig> ε=12∑f=1ndfnose,usm+dftail,usm 


of nose and tail positions for different values of ρ
max in video v <dig>  the results for ε and the corresponding size of the training dataset are shown in fig.  <dig>  the minimum error is achieved for ρ
max= <dig> where approximately half of the candidate shapes are included into the catalog. as ρ
max depends on the number of frames and landmarks of the asm, we define the ratio c
v as the number of samples taken for training divided by the total number of samples. according to the experiments shown in fig.  <dig>  the algorithm performs best if c
v is set to approximately  <dig>  meaning that 50% of the shape matchings are used for the shape catalog. although for c
v< <dig>  there is a clear decrease in the error rate, within the interval  <dig> ≤c
v≤ <dig>  the error ε changes only marginally in a low subpixel range. the optimization potential for c
v is therefore assumed to be rather low around c
v= <dig> .
fig.  <dig> tracking error ε  and the size of the shape catalog  for different choices of ρ
max. the optimum is achieved for ρ
max= <dig> which corresponded to approximately half of the shape candidates . evidently, the error changes only marginally around c
v=  <dig> , so that the influence on the error is assumed to be rather low




the number of radial and angular bins for the shape matching routine were chosen as proposed by belongie et al.  <cit> . likewise, the asm was configured with common settings  <cit>  . the number of iterations, however, should be determined with respect to the sampling rate and the maximum movement of the tracked individual between successive frames. generally, higher values provide a better adaptivity of the asm but also involve higher computational costs. in our setup, we considered n
max= <dig> iterations to be more than sufficient for the mice movement.

tracking performancefig.  <dig> three different crossing events in video v <dig>  in sequences # <dig> and # <dig> the asm robustly keeps track of both individuals during collision. a switch of the identities occurs in sequence #3




the tracking performance of the proposed unsupervised learning approach was compared to the miceprofiler  <cit> . for this purpose, the miceprofiler was carefully configured according to the tutorial provided by the authors. we empirically determined binary threshold and mouse model scale parameters that performed best. due to slightly varying lighting conditions, the threshold had to be adapted during the video to maintain reasonable binary segmentations. instead of the nose, the physics model implemented in the miceprofiler software keeps track of the head position. we therefore estimated the optimal extension of the straight line from the shoulder to the head position  <cit>  that minimizes the mean distance to the nose position given in the ground truth. the same strategy was applied for the tail base position by extending the straight line from the belly to the tail position. the viewing angle was extracted from the line connecting shoulder and head positions. in order to evaluate the positional and angular tracking performances of the proposed method and the miceprofiler, precision plots are shown in fig.  <dig> for the estimated nose and tail positions as well as the viewing angle. precision plots show the percentage of frames  where the deviations of the position or viewing angle is below a given threshold  from the ground truth  <cit> . the miceprofiler was evaluated in two different configurations. in a first setup , the model has been placed properly at the beginning of the video and was left without interventions until the end. as the authors point out that the miceprofiler sometimes has problems with contact and overlap, in a second setup , manual readjustment of both mouse models were performed after each direct interaction. in all precision related evaluations, identity switches were corrected for usm, mp <dig> and mp <dig>  respectively, and do not affect the precision plots.
fig.  <dig> precision plots showing the tracking accuracy for the tail and nose positions as well as the viewing angle




the miceprofiler had considerable problems in keeping the correct orientation, which significantly improved in case of user intervention after interactions. regarding the open field setup, the optimized contrast brought no improvement in tracking precision for both algorithms. for mp <dig>  precision was even less accurate for the tail base position in the enhanced setting. a clear improvement could be observed for the viewing angle. for usm and mp <dig>  precision increased by approximately  <dig>  for deviations of up to  <dig> degrees. the proposed unsupervised learning scheme clearly outperformed the miceprofiler in all setups  regarding tracking precision of head and tail landmarks as well as the estimated viewing angle.

the number of identity switches occurring for usm, mp <dig> and mp <dig> are given in table  <dig> for v1- v <dig>  the proposed algorithm provokes considerably less switches than the miceprofiler. likewise, contrast conditions had a major impact on identity preservation for both algorithms, respectively. an example where mouse identities are switched by the usm is illustrated in the third row of fig.  <dig>  the poor contrast between both mice provokes a rotational shift of the asms in frame no.  <dig> which continues until mice identities are switched in frame no.  <dig> 



automatic recognition of behavioral states
we compared the automatic behavior classification of the conditions c1-c <dig> based on the positional and angular data proposed by chaumont  <cit>   identified by the tracking algorithms  and labeled in the ground truth . to evaluate the time evolution of the interactions, we compared the duration of c1-c <dig> found by the different methods in five minute intervals for both videos . the error of duration estimation 
  <dig> eci{usm,mp <dig> mp2}=tci{usm,mp <dig> mp2}−tcigttcigt 
fig.  <dig> automated detection of social and non-social interactions. a, b duration of social interactions c1–c <dig> in video  v <dig> and  v <dig> estimated by the tracking algorithms  compared to the ground truth. c, d duration of the self-grooming condition c <dig> in video  v <dig> and  v <dig> estimated by the tracking algorithms  compared to the subjective assessment. e pca space of the first  <dig> s of mouse no.  <dig> in video v <dig> spanned by the first and second eigenvector. self-grooming conditions are colored in red, all remaining samples are blue





was averaged over all time intervals, where tci{usm,mp <dig> mp2} denotes the duration of event c
i estimated by the procedure usm, mp <dig> or mp <dig> and tcigt the duration of c
i derived from the ground truth. considerable differences between mp and usm were observed for nose to nose and following events. although nose to nose contact was observed for about  <dig> s in v <dig> and  <dig> s in v <dig> according to the manually labeled landmarks, it was never recognized by the miceprofiler . likewise, the condition c4: following behavior was rarely recognized by the miceprofiler in v <dig> . for all categories, a higher accuracy was observed for the usm.

the mating condition c <dig> was identified for the male-female setup in video v <dig>  figure  <dig> exemplarily illustrates the tracking results for the mating condition  as well as the results of the automatic recognition . the video frames demonstrate the challenges for the tracking algorithm. it is remarkable that although there is a high level of occlusion, the asm works well and delineates the real mice shapes. however, as both asm are pretty close together, the mating condition is prone to identity switches as shown in table  <dig>  for the usm,  <dig> of the  <dig> switches occur directly after the mating condition. likewise, the automatic assessment seems to provide a good approximation of the ground truth . in contrast, the miceprofiler couldn’t cope with such a high level of occlusion and thus, it was not able to recognize condition c <dig> 
fig.  <dig> automatic assessment of the mating condition c <dig>  a sequence involving the mating condition. b duration of the mating condition c <dig> in video v <dig> estimated by the tracking algorithms  compared to the ground truth




the self-grooming condition c <dig> was identified from the eigenvalue configuration, it was therefore only evaluated for usm. a support vector machine  was trained in order to identify the duration of the self-grooming condition from the eigenvalues describing the outer boundary of the segmentation. consistently, validation was performed for each five minute time interval and training from the remaining time of the same video. the svm was configured with an rbf kernel and was weighted according to the ratio of previously labeled self-grooming to non-grooming conditions in the training set. in video v <dig>  a low error of e
usm= <dig>  was achieved, whereas for v <dig>  e
usm= <dig>  seems rather error-prone but might be due to the high imbalance of the self-grooming condition c <dig> over time. exemplarily, the pca space of mouse no.  <dig> for the first  <dig> s is shown. grooming conditions are indicated by the red color and non-grooming in blue. evidently, self-grooming conditions correspond to a low value of the second eigenvalue indicating a stooped body posture .

discussion
behavioral screening of manipulated mice is a crucial step for understanding gene function and developing treatments for genetic disorders. in this contribution, we developed an algorithm to automatically track two mice in an enclosed area which makes it possible to automatically assess their social behavior. we implemented a prototype in matlab which is not fully optimized yet requiring approximately  <dig> hours computation time for a  <dig> min video on a intel i <dig> with  <dig>  ghz and  <dig> gb memory. despite the comparatively high computational costs, the algorithm is well-suited for large-scale studies due to the accurate tracking results and the low level of necessary user interventions. with respect to tracking accuracy, the number of identity switches and the phenotyping results, the proposed procedure clearly outperforms the recently developed miceprofiler. furthermore, due to the iteratively optimization of the asms, occlusions can be handled adequately, a feature that is not supported by the miceprofiler yet. nevertheless, it has to be noted that the miceprofiler provides a comfortable solution to assess and to readjust the model landmarks in a frame-by-frame manner and considerably speeds up manual assessments  <cit> .

model-based tracking approaches often struggle with appearance variations of the scene. pose variations and shape deformations are among the key challenges for tracking algorithms. in order to tackle these problems, the proposed unsupervised learning algorithm gathers training data during runtime. this has the advantage that appearance variations can be learned from the scene and are thus handled robustly. the procedure showed a high level of robustness even for poor contrast and reflectance conditions. moreover, the method is able to deal with complex situations during tracking, for example occlusions as illustrated in sequence no.  <dig> in fig.  <dig>  as the shape database is built during runtime, the method should principally work with arbitrary species, although parts of the processing pipeline, e.g. the tail detection routine, are specialized for rodent species. upcoming studies will therefore focus on the method’s generalizability and a more general formulation of the processing pipeline. we expect that the tracker should also be able to cope with insects such as drosophila, ants and various larvae.

an important feature of the proposed method is continuous documentation of shape information during runtime. the eigenvalues reliably indicate self-grooming behavior which is an important non-social parameter showing high relevance e.g. for autism or huntington’s disease  <cit> . the high tracking precision of head and tail landmarks, the viewing angle and additional shape information allows an automated and comprehensive assessment of social interactions and non-social behavior. it was demonstrated that behavioral classification was very close to the ground truth which was derived from the manually annotated video frames. texture descriptors and spatio-temporal features  <cit>  may provide further complementary information for automatic classification and may also increase robustness, which will be considered in future work. we also plan to extend and refine the list of behavioral states as it is not claimed to be exhaustive. for example behavioral conditions such as fighting were not seen in our videos. more complex behavioral states will be addressed in future publications to allow for a more detailed analysis.

although a high level of tracking precision was achieved, a manual validation of the results is still necessary. it has been observed that, even for optimized contrast conditions, one switch between individuals’ identities occurred during tracking. in this context, the concept of texture-based fingerprints as proposed by pérez et al.  <cit>  might help to enhance robustness. the procedure does not track individuals, but aims to assign their identities after a successful segmentation. thus, it could be applied after processing the collisions to correct these switches post-hoc, thereby considerably decreasing the time needed to manually monitor correct identity assignments.

CONCLUSIONS
mouse models have shown high relevance for understanding genetic and mental diseases and for assessing the efficacy of various therapeutic strategies. a reliable tracking algorithm that requires only minimum user intervention is a crucial prerequisite for any high-throughput behavioral analysis. in this paper, we propose an unsupervised learning procedure which copes with direct mouse interactions, occlusions and poor contrast conditions. as training data is gathered during runtime, only minimal user input is required to initiate the tracking process. the proposed method was found to track head and tail landmarks precisely and, furthermore, enables identification of non-social conditions such as self-grooming which is a crucial parameter for several mice models. overall, the proposed method shows substantial potential to automate behavioral screening of mice and other animals.

abbreviations
asmactive shape model

rfidradio-frequency identification

