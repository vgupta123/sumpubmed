BACKGROUND
phylogenetic trees are increasingly used to visualize comparative information in an evolutionary context  <cit> , e.g. comparing strands of viruses and genes within different clades to find new ways of classifying and differentiating groups of leafs within a tree. a wide variety of visualization and annotation tools have been developed in the past  however none of them are intended for integrative and comparative analysis.

information that can be interpreted in a phylogenetic context is growing rapidly, creating a continuous need to find new ways to integrate, process and deliver this new information. furthermore, there is also a demand to explore, compare, display and interpret trees using information not directly contained in these trees, such as taxonomy, geography, and traits, among others  <cit> .

treelink was designed with those needs in mind, enabling an easy and automated procedure that links data sources to nodes and topologies, which in turn allow the construction of comparative representations that can be explored and extracted.

representation of large phylogenies and clustering of nodes has also proven to be difficult in epidemiology and evolutionary research  <cit> , where large and complex trees are used for exploration and pattern analysis. a novel clustering algorithm was developed that groups and divides clades and sequences within a tree topology based on their divergence measure, resulting in characteristic and representative sets that simplify phylogenies and reveal similarity.

implementation
the main design directives behind treelink were:  ease of use  automation  fast performance  scalability  aesthetics.

the application’s first step is to provide automated data integration and visualization for additional renderings of the tree. the main features include:

data integration
data integration from standard datasets is executed by linking the leaf label to a key in the dataset. once the integration process is finished, the aggregated information is displayed by hovering over the nodes. the corresponding table can also be shown for additional operations.

classification and cross-reference
the application comes with  <dig> general purpose functions based on data integration. the user can visualize and cross-reference specific attributes from the dataset by searching for them inside the leafs or by selecting them on the table. an annotated visualization is then rendered by the software showing the distribution of those fields on the tree . classification is accomplished by selecting a categorical trait or property loaded from the dataset, which is distributed and displayed along the leafs of tree.
fig.  <dig> phylogenetic visualizations. left: hiv subtype consensus tree. right: hiv consensus tree classified by the country field of a dataset



sequence extraction and visualization
sequence information in fasta format can also be linked to the selected phylogeny for extraction and visualization purposes. by selecting leafs and internal nodes, the user can visualize or export the subset of genomic or proteonomic sequences into a new file.

clustering and tree simplification
treelink also includes a clustering and tree simplification component called treeclus, based on a novel algorithm that divides and clusters phylogenetic topologies based on a dissimilarity measure calculated from the evolutionary distance of the branches ). this function can be used for detecting characteristic subgroups within a given topology for differential analysis in evolution, e.g. discerning subtypes in viral phylogenies  <cit>  and classifying taxa.

ancestral reconstruction and phylogeography
phylogeographic inference from tree topologies and datasets is implemented in the treemap component, through ancestral character state reconstruction  <cit>  for different evolutionary models: linear parsimony with a delayed and accelerated transformation rule, and a likelihood approach  <cit> , for cases assuming some version of brownian motion. the resulting tree and states can then be plotted on a map, where the movement of states is animated proportional to evolutionary time.

RESULTS
output
the main outputs of treelink comprise of browser viewable and downloadable svg graphics for the following results: 
visualizations of attribute searches or a classification by a field

fasta files from a subtree or leaf

tabulated files of the sequences and their cluster

clustered tree visualizations

ancestral reconstruction visualizations

phylogeography visualizations



software comparison
a major point of difference between treelink and alternative software   is its automated data integration process, that doesn’t require formatting or pre-processing on datasets to fit input requirements. other existing tools require manual annotation of meta-data to associate or attach information to selected tree elements. treelink overcomes these requirements by using standard dataset formats as an integration source, relieving the user of tasks like manual annotations on the leafs and permits integrating associated data directly from the sources of data collection, given that csv is a popular export format of sql-based databases, excel and other spreadsheets.

another upside includes the amount of fields that can be linked to the tree, allowing up to  <dig> different fields to be integrated. performance and flexibility distinctions include the ability to navigate and interact with the tree by selecting subtrees and creating diverse visualizations almost instantaneously after the initial data integration step with the same data source.

the design based on simplicity requires little training or knowledge of the tool, labels are annotated automatically with corresponding legends and attributes can be search directly into the tree. an short interactive tutorial found on the site gives a quick overview of the main functions and use of the tool. a short manual is also included for additional knowledge on the limitations and capabilities of treelink.

the development on the javascript d <dig> library proves to be an additional benefit, allowing a more interactive visualization and navigation of large trees, it also enables to use its diverse visualization capabilities and its data-driven approach to dom manipulation. the additional sub-components such as clustering, ancestral reconstruction and phylogeographic mapping exhibit some of the applications that can be built on top of treelink and the d <dig> library.

worked examples
sequence extraction data integration of fasta files and phylogenetic trees can be useful for selection and extraction of sequences of interest. by selecting an internal node or individual leafs, sequence ids are stored in internal variables that can be later used to link, visualize or extract a list of genomic or proteonomic sequences .
fig.  <dig> sequence extraction. sequence visualization of an internal node selection



hiv subtyping hiv gene sequencing and phylogenetic inference is used to identify and classify hiv- <dig> subtypes  <cit> , and phylogenetic clustering has proven to be a powerful tool to understand the forces that shape patterns of viral sequence diversity  <cit> . in the following example the clustering algorithm is executed on an hiv- <dig> tree resulting in a divided and clustered representation that reveals the different subtypes it holds .
fig.  <dig> clustering. phylogenetic clustering of european hiv- <dig> subtypes



phylogeography phylogeography studies the historical processes that could be responsible for geographic distributions of individuals  <cit> . in this example an hiv subtype b consensus tree was linked to a dataset that contained the countries of each sequence. ancestral character reconstruction was performed by a maximum parsimony algorithm  <cit>  that assigned states for the ancestral nodes. then the result was linked and plotted on a geographical map to visualize the movement of country states in accordance to the tree structure .
fig.  <dig> phylogeographic plotting. hiv subtype b consensus tree plotted in central and south america



CONCLUSIONS
treelink is a comprehensive open-source solution for rendering and integrating datasets into phylogenetic trees. it supports all operating systems and has an html <dig> version for the widest possible audience. file support includes the most popular formats like newick and csv, generating interactive trees that incorporate analytics in scalable vector images. it can also be used as a library to extend and complement with additional functions and methods, and can be easily integrated into existing web applications.

availability and requirements
project name: treelinkproject website: http://www.treelinkapp.comproject github: https://github.com/allendecid/treelinkprogramming language: javascriptlibraries: d <dig>  jqueryrequirements: a modern browserlicense: mit

additional file
additional file  <dig> 
clustering algorithm. the clustering algorithm, along with the mathematical explanation based on graph theory. pseudo-code included. 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

ca designed, developed the algorithms, prototypes, coded and integrated the package into multiple platforms. ca and es conceptualized the idea and the design of the software. cl provided technical insight and guided the development and structure of the paper. all authors read and approved the final manuscript.

