BACKGROUND
micrornas are a family of ~22-nucleotide small rnas that regulate gene expression at the post-transcriptional level  <cit> . mirnas play important roles in a number of key biological processes including developmental timing  <cit> , tissue growth  <cit> , apoptosis  <cit>  and hematopoietic differentiation  <cit> . to date,  <dig> mirnas have been identified in  <dig> different species   <cit> . most of these mirnas are considered to share a similar biogenesis mechanism: firstly, transcribed rnas form hairpin like structures  that are incorporated into the microprocessor and cleaved into pre-mirnas  <cit> . the pre-mirnas are then exported to the cytoplasm with the help of carrier proteins such as exp- <dig>  <cit> , where they are cleaved into small mirna duplexes  by dicer  <cit> . these small mirna duplexes are unwound by helicase into two independent strands--the passenger strand and the guide strand. the former is usually quickly digested while the latter is loaded into an argonate -containing protein complex known as risc  <cit> .

these mature mirnas target multiple sites, producing translation repression and gene silencing; thus, identification of mirnas and their targets can aid understanding of regulatory processes. most mirnas have been identified using techniques such as molecular cloning, northern blot or real-time pcr. more recently, high throughput sequencing has been adopted as a means of rapidly identifying larger numbers of mirnas. however, a single run is still relatively expensive, detection efficiency is as low as  <dig> in  <dig>   <cit> , and there is no guarantee that a run will identify any new sequences  <cit> . an additional limitation of all experimental methods is that they are inherently biased towards mirnas that are highly or ubiquitously expressed and mirnas expressed at low levels or in limited cell types may not be readily recovered <cit> .

the use of computational prediction tools can complement experimental studies by  identifying additional putative mirnas that may not be detected by standard experimental methods and  in the case of high throughput sequencing experiments, serving as a useful pre-sequencing step to determine the possible yield from such a study.

many analytical methods for mirna prediction already exist and employ a variety of approaches. based on the approach used, these methods can be broadly classified into three categories.

in the first category, it is assumed there is some evolutionary constraint that conserves mirnas across different species. in such methods, a sequence and/or secondary structure homology search is first applied between the primary sequences and known pri-mirnas. then several other parameters such as minimum free energy  or the number of base pairs are considered in order to further filter the candidates. software using this approach include: miralign <cit> , rnamicro <cit> , mirpred <cit> , mirseeker <cit> , mircheck <cit> , mirscan <cit> , palgrade <cit> , mirfinder <cit>  mireval <cit>  and mirnaminer <cit> . these methods are effective for identifying mirnas from the sequence that are closely conserved in related species; for identification of mirnas in more divergent sequences or mirnas that are structurally distinct from previously identified sequences, these tools are less effective.

the second category attempts to identify key structural or compositional features of mirna sequences that can be used to distinguish putative mirnas from a broader range of candidate sequences. mirank <cit>  uses random walks to generate a pool of most probable mirnas from a sequence, based on the properties of all possible sequence triplets and the mean free energy  of the predicted hairpin structure. this approach can correctly identify many mirnas but also predicts many false positives. a similar situation occurs with bayesmirnafind, which uses a bayes classifier to analyze properties of sequence composition and structure, primarily defining structural features in terms of the distribution of paired and unpaired bases in the hairpin structure <cit> . in this case, the large numbers of false positives are removed by an additional filtering step to reduce the results to a more manageable size. the drawback is that the method is computationally intensive and analyzing sequences longer than a few hundred base pairs can take a prohibitively long time.

in the third category, prediction tools have been developed recently that try to consider the problem from a biological perspective. both microprocessor svm and mirna svm attempt to identify important features of drosha processing sites for mirnas prediction. when used in combination with other mirna prediction software, these tools can provide an additional validation layer for putative mirnas and have achieved high sensitivity in an analysis of the human genome <cit> .

the limitation of all of these prediction tools is that they either are relatively species or mirna family specific, or that they are computationally expensive and can only analyze small numbers of short sequences in a reasonable time. as more mirnas have been identified, the number of homologous families and the diversity of the sequences has increased. this is supported by recent reports on the discovery of different mirna maturation enzymes in different species, e.g,  <dig> different dicer proteins have been reported in arabidopsis <cit>  and two were reported in droshophila <cit> , indicating that the mirna use different pathways in different species <cit> .

with the advent of high throughput sequencing, there is a need for mirna prediction software that can support such studies by analyzing large numbers of genome scale sequences in a reasonable time and which can be applied to a broad range of species without retraining. in this work, we first reviewed experimental studies that identified physical characteristics of the mirna, pre-mirna and pri-mirna and which were found to influence the biogenesis process and the generation of mature mirna. based on these characteristics we defined a number of parameters to describe a sequence and used them as input to an svm. we trained two svms against experimentally verified plant and mammalian sequences from mirbase and a third svm against all experimentally verified sequence data from mirbase data and evaluated these models against a range of positive and negative sequences to evaluate predictive abilities.

implementation
secondary structure prediction
secondary structure prediction was performed using unafold  <cit> . ct2out  was used to transform the results from ct format to a text representation of the structure which was subsequently parsed out by our software. the formed hairpins were also subject to the restriction that the total stem length could not be longer than  <dig> nt to stop the formation of additional unstable pairing at the base of the stem.

parameter selection
the parameters used as input to the svm were defined in terms of the pri-mirna, pre-mirna & mirna sequences. the pre-mirna was defined as the processed product of the microprocessor complex in the nucleus while the pri-mirna was the combination of pre-mirna and its flanking sequences prior to processing. mirbase doesn't contain true pri-mirna sequences but entries often have flanking sequences of variable length and so these were included in the analysis. sequences containing these flanking regions are subsequently referred to as partial-pri-mirnas or ppri-mirnas for short. a ppri-mirna sequence was considered to consist of five distinct components <cit> : the basal segment, the lower stem, the upper stem, the top stem and the terminal loop , although the upper stem and the terminal loop were the only features that were present in all ppri-mirna sequences. we also defined the internal loop to be the largest bulge that occurred on either strand of each of the double stranded features and included additional parameters that were defined in terms of this feature.

we first reviewed previous experimental studies that identified sequence features that influenced processing of pri-mirna into mature mirna . based on this, a set of  <dig> biological related parameters were defined that described various features of the mirna, pre-mirna, ppri-mirna sequences and also for the five individual ppri-mirna components. as a first step, these parameters were classified as one of five categories: descriptive ; size , stability , sequence  and structure . these parameters are summarized in figure  <dig> 

svm training data
positive data: all  <dig> experimentally verified mirna sequences in mirbase release <dig>  were screened for inclusion in the positive data set. in mirbase, the reported secondary structures were predicted by a variety of rna folding software packages. therefore, for consistency, all mirna secondary structures analyzed in this study were recalculated using unafold. structures with budding stems or with mirna located in the terminal loop were excluded, leaving a total of  <dig> sequences.

based on the species category used in mirbase, the remaining  <dig> experimentally verified pri-mirna sequences were further separated into metazoa, viridiplantae and viruses and used as positive input data for three corresponding svms ; the mirnas corresponding to these three groups were renamed as animal , plant  and virus  respectively. another svm model named overall was trained from all ev mirnas and used for global predictions or for predictions on sequences not belonging to any of the three groups. a schematic of the mirna prediction pipeline is shown in figure  <dig> 

negative data: the selection of a suitable negative dataset is important for a well trained svm classifier. if the sequences are too artificial, e.g. completely random, then there is a risk that the svm will not be well trained to distinguish between different categories of real biological sequences. conversely, if the negative dataset is too similar to the positive dataset, the svm will be unable to find a way to adequately distinguish between these two data. we investigated several different types of negative sequences and finally selected negative sequences with ppri-mirnas that were identical to the positive sequences, but with modified mature mirnas that had a start position that was located on the same strand as the real mirna but which was randomly shifted by at least 5-bp from the true start position . these type of negative sequences were called random-start sequences.

positive data to negative data ratio: since the negative dataset had identical pri-mirnas to the positive dataset, there was a risk of under or over-training the svm. we therefore tried training the svm with different ratios of positive and negative training data ranging from 1: <dig> to 1: <dig> for each group to examine the effect on performance. these different ratios are subsequently referred to as 'levels' in this report. each level contains the same ev positive dataset but differs in the number of negative sequences that were included in the training data. so, level  <dig> contained positive and negative sequences in the ratio 1: <dig>  level  <dig> in the ratio 1: <dig> and so on.

svm models: three svm prediction models, animal, plant and overall were trained based on the data listed above. we also attempted to train a model based on virus sequences, but there was insufficient data to do this. however, since all virus mirnas in mirbase are associated with animal viruses, we also used the animal model to see whether it was effective at predicting virus mirnas. to see the effect of sample number on svm training, models with only  <dig> randomly selected ev mirnas and  <dig> negative sequences were also trained but their accuracy was much lower than the four models trained with the full dataset .

parameter filtering
parameter filtering was applied independently for the animal and plant groups. of the  <dig> parameters in the initial set,  <dig> were removed after being flagged as unsuitable for svm input. an additional  <dig> were removed prior to filtering because the sequences in the negative dataset were based on the positive sequences and were indistinguishable between the datasets. this left a set {p} of  <dig> parameters . we then used a greedy algorithm to investigate whether there was a subset of {p} that was capable of discriminating between negative sequences and true mirnas without significant loss of specificity or sensitivity, first of all the remaining  <dig> parameters were used in turn to independently train the svm using three sets of  <dig> ev sequences as positive datasets, and three sets of  <dig> random-start sequences as negative datasets. the  <dig> highest scoring  parameters, averaged over the three datasets, were then retained as a set {s} of seed parameters. every element si of s was then used as a seed for a parameter chain of length two  and each parameter was investigated in turn. the  <dig> highest scoring pairs were then retained as a set of seed chains for the next round to identify the highest scoring parameter triplets. this was repeated until the  <dig> highest scoring chains for all  <dig> parameter chains had been estimated and no further parameters were remaining. a plot of chain length versus accuracy was then generated to identify the highest scoring chain length. it was found that for each  <dig> parameter chain, the highest score was obtained for the parent chain of length  <dig>  furthermore, the first  <dig> parameters were identical in each chain for each model and so they were selected as the filtered subset.

range filtering
to investigate the effect of windowing parameters prior to svm training we generated a distribution for each parameter for the ev sequences. using spss http://www.spss.com/ we tested windows with 5%/95%, 1%/99% and  <dig> %/ <dig> % limits and any sequence with values falling outside these limits was rejected. we finally selected  <dig> %/ <dig> %, which passed  <dig> % of the data. the sole exception was the mfe of the pri-mirna structure for which we applied the constraint that mfe <- <dig> kcal/mol . this reduced the overall percentage to  <dig> % but improved the accuracy of prediction as it removed many relatively unstable structures associated with ppri-mirnas in the negative dataset.

support vector machine 
the svm was implemented using the libsvm library <cit>  with a perl binding module http://search.cpan.org/~lairdm/algorithm-svm- <dig> /lib/algorithm/svm.pm.

svm training
the svm was trained against the data described above using 2×, 50× & 100× cross-validation with default values for γ and c. datasets were then optimized for γ and c using the grid selection approach recommended by the libsvm authors <cit> .

svm performance was measured using accuracy, sensitivity and specificity according to the following definitions      

where tp = number of predicted true positives, tn = number of predicted true negatives, fn = number of predicted false negatives and fp = number of predicted false positives. some of the mirpara predictions correctly matched mirbase entries, but were lacking one or more nucleotides from either end of the sequence. since the goal of the software is to identify potential mirna sequences for further study, predicted sequences with up to three nucleotides missing from either end of the true sequence were considered positive matches.

test data
mirpara short sequence  test data
to investigate the performance of the three models in an ideal situation, a series of  <dig> randomly selected ev sequences were used as the positive datasets. a length of  <dig> nt was chosen since this length is sufficient to capture most real pre-mirnas. the performance was tested independently for all three models, and for each model three different sequence sets were tested. for the negative controls, 100nt fragments were randomly selected from three different nucleotide sequences which were downloaded  from the ncbi website http://www.ncbi.nlm.nih.gov/. these random sequences were then passed to unafold for secondary structure prediction and any sequences that formed a hairpin structure were added to the negative dataset.

the accession numbers were as follows:

animal: homo sapiens ;

plant: arabidopsis thaliana ;

virus: epstein barr virus , marek's disease virus  and rhesus lymphocryptovirus ;

overall: homo sapiens , arabidopsis thaliana  and epstein barr virus .

mirpara long sequence  test data
to test the ability of mirpara to extract mirnas from long sequences, three different groups of  <dig> positive and negative data sets were used. each positive sequence consisted of the original ppri-mirna sequence from the mirbase entry with a 5000-nt flanking sequence on each side. to find the flanking sequence, a perl script was used to blast each ppri-mirna against the ncbi database to identify the parent sequence; the long sequence with the 5000-nt flanking regions was then extracted from this parent. the roc curve negative data was created in the same way as the negative dataset for the 100nt sequence test.

accuracy versus sequence length
to investigate whether there was any correlation between sequence length and accuracy a series of sequence datasets were generated ranging in length from  <dig> to  <dig> in 50nt increments. these sequences were identical to the mirpara long sequence  dataset but with different size flanking sequences to generate the required sequence size. mirpara was run against each set and the accuracy was calculated.

virus genome sequences
to test the prediction ability against genome sequences, the three full length virus sequences used in the short sequence test were submitted directly to mirpara and prediction results compared to experimentally verified entries in mirbase. genome lengths were: epstein barr virus , marek's disease virus  and rhesus lymphocryptovirus 

other rna testing data: to see whether the trained model could distinguish between mirna and other types of non-coding rnas, mirpara was tested against rrna and trna sequences. human rrna sequences were downloaded from the ncbi website with the following accession numbers: 18s rrna, 28s rrna,  <dig> s rrna, 5s rrna.  <dig> human trnas were downloaded from the genome trna database http://gtrnadb.ucsc.edu/ <cit> .

data for comparison with other mirna prediction software
to compare mirpara with other mirna prediction software, three types of  <dig> test sequences were used:

1) known mirnas. here 'known' refers to mirnas that were identified before the earliest mirna prediction software that was used in this study and would therefore have been available as training data to all the programs. this group was therefore constructed from ev mirnas available in mirbase <dig>   and which were also present in mirbase <dig> ;

2) new mirnas. this consisted of  <dig> ev mirnas extracted from mirbase <dig>  which were not present in mirbase <dig> , these mirnas were tagged as "new" in this release;

3) negative sequences. these 100-nt fragments were randomly extracted from the same sequences as described above in "mirpara short sequence test data"; equal numbers of mirnas were generated from animal, plant and virus sequences respectively.

all test sequences were randomly selected.

a complete list of identified mirna/pri-mirna prediction software is given in additional file table s <dig>  as the goal of this study was to identify mirna, packages that only predicted pre-mirna were not considered. of the five packages we found, mirfinder <cit>  proved to be too slow to analyze the large test data set and mirank <cit>  couldn't be tested as it requires the commercial software package matlab with the bioinformatics toolbox. the three remaining packages were miralign <cit> , bayesmirnafind <cit>  and mireval <cit> . bayesmirnafind was further selected to test the mirna prediction performance among different species because its prediction algorithm does not rely on sequence homology searches. the ppri-mirna for the randomly selected test sequences were submitted to each program without modification. in this test, mirpara was used to report exact mature mirnas rather than most probable coding region, i.e., the test sequence was only considered a true positive if the predicted start and stop position exactly matched the start and stop position of the mirbase entry.

benchmarks: to examine the performance of mirpara with sequence length, a series of test sets containing different length sequences were created. each set contained  <dig> sequences randomly selected from mirbase and data sets were created for  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> & 10000nt sequences. the different lengths were created in the same way as the long sequence  test data but using different size flanking regions. the run times were recorded on a macbookpro with dual core p <dig> cpus @  <dig>  ghz and  <dig> gb memory running ubuntu release  <dig> .

perl scripts
a combination of perl scripts were used for the sequence preparation, svm training and mirna predictions with the trained model. the complete scripts are available from our website http://www.whiov.ac.cn/bioinformatics/mirpara.

RESULTS
i-mirpara construction
parameter filtering
to investigate the effect of number of parameters, parameter filtering was used to see whether a subset of key parameters existed that could retain the accuracy of the full set of  <dig> parameters . parameter selection was performed separately for the overall, animal and plant models and a key set of  <dig>   <dig> and  <dig> parameters for the overall, animal and plant models respectively were identified that provided a significant improvement in the accuracy of the trained svms compared to the full set of parameters .

a similar set of key parameters was selected for the three different models although these parameters covered all categories  <cit> . however, most of the parameters selected in the different models overlap with at least one other model, and half of the parameters are shared amongst all three models . in particular, nucleotide content and gc content in both mirna and pre-mirna were selected for all three models.

svm training and testing
using the selected parameters, three different svm models, overall, animal and plant, were trained as described in the materials and methods. the animal model was also used to classify the virus sequences. these models were then tested with positive  and negative  data .

cross validation results are shown in table  <dig> and rocs curves for the models trained at different levels are shown in figure  <dig> . as the level was increased from  <dig> to  <dig>  there was a slight increase in predictive ability which was likely a consequence of the similarity between the positive and negative datasets.

cross validation results at different levels for the overall, animal & plant models

all three models demonstrated good prediction capability. surprisingly, the animal model applied to the virus data also showed good performance; this might be because, compared to the other datasets, the virus dataset contains a relatively small set of sequences from a narrow range of viruses and contains less variation.

ii-testing mirpara against small fragments
we first examined how well the trained models performed against a series of ~100-nt fragments, which are of sufficient length to contain a pre-mirna sequence and represent an ideal scenario. for each of the animal, plant, virus and overall sequence sets, three groups of negative sequences comprising 100-nt fragments were generated, subject to the requirement they each form a hairpin structure . at the same time, three groups of  <dig> randomly selected ev sequences were used as positive controls and predictions were generated for all twenty levels.

the results are shown in roc plots. . in each case, slightly better predictions are obtained when equal numbers of positive and negative data are used. thus, for the following sections, level  <dig> was used for predictions unless stated otherwise. overall and animal return the best predictions with slightly worse results for plant and virus.

the plant model showed marginally worst performance. the reason for this difference isn't clear, but it may be a consequence of the plant dataset containing mirnas from a wider range of species  as well as the presence of additional small rnas that only exist in plants. for example, trans-acting sirna  has only been reported in plant <cit>  and it needs mirna to trigger the production of sirna, which means the ta-sirna and mirna share parts of the same processing pathway.

iii-testing mirpara against other types of non-coding rnas
we next considered whether mirpara could distinguish between mirna and other types of non-coding rna molecules by considering test datasets of human rrna and trna sequences. as many of these sequences also contain structural and sequence composition features that are hairpin like and, given the different functions of these molecules, it is important to test the ability of software to differentiate these types of rna

rrna
rrnas are components of the ribosome and play an important role in protein synthesis. although the structure and the function of rrna are widely different from mirna, 5s,  <dig> s, 18s and 28s rrna have average lengths of 121-nt, 156-nt, 1869-nt and 5035-nt respectively, all of which are long enough to contain pri-mirna like structures. candidate human rrnas were downloaded from the ncbi website as described in the materials and methods. mirpara did not predict any mirnas in the 5s,  <dig> s and 28s rrnas but for the 1869-nt 18s rrna sequence,  <dig> pre-mirnas and  <dig> mirnas were predicted. however, two of these predictions matched entries in mirbase and the third showed high homology to another entry. this is consistent with the results from an earlier experimental study to identify mirna identification that used rrna as the control and which also cloned two positive sequences from this negative set <cit> .

trna
trna transfers amino acids to growing polypeptide chains at the ribosomal site of protein synthesis during the translation process. it possesses primary, secondary and tertiary structure and so could conceivably be misidentified as mirna by mirna prediction software. to test this,  <dig> trna candidates were downloaded from the ucsc trna database and mirpara was used to predict mirnas at levels  <dig> to  <dig>   <dig> and  <dig> pri-mirnas were identified by mirpara at level  <dig> and level  <dig> respectively. several of these false positives contained regions that formed highly stable hairpins and which also contained perfect matches to almost complete segments of mature mirna entries in mirbase.

iv-testing mirpara prediction against long fragments
the ultimate goal of our prediction software is to identify true mirnas from long genome fragments. mirpara achieves this by cutting a long query sequence into a series of 500-nt fragments with a 200-nt overlap and analyzing each fragment in turn . these values were chosen because most pre-mirna fragments are less than 200nt and stable ppri-mirna structures are generally formed from nucleotides located in a single region, rather than from interactions between two distant sequences. the program was tested against three groups of  <dig> positive sequences, each containing one true ev pri-mirna, with 5000nt flanking sequence on either side .

the results are shown as roc plots  and are noticeably better than the results for the short sequences. the difference arises because the flanking sequences contain additional positive and negative candidates that are classified by the software. for all three models and all four test sets, the software gave consistently good prediction results.

we also tested the software against three virus genomes. full length sequences for epstein barr virus , marek's disease virus  and rhesus lymphocryptovirus  were submitted to mirpara and prediction results compared to mirbase entries for these viruses. results are shown in figure  <dig>  notably, for rhesus lymphocryptovirus,  <dig> additional mirnas were predicted that were subsequently confirmed in the following release of mirbase.

v - comparison with other mirna prediction software
we next compared our software to other mirna prediction software using a set of test data that examined their ability to  correctly predict true known mirna,  make predictions for new mirnas and  reject false mirna. a list of all identified mirna prediction software identified in the literature is given in additional file table s <dig>  since the goal of our software was to predict mirna, we did not consider packages that only predicted pre-mirna. of these, three programs - miralign <cit>  and mireval <cit>  based on homology searches) and bayesmirnafind <cit>   were finally selected. .

the prediction results are summarized in figure  <dig>  all three packages could reject negative sequences but only mirpara and mireval appeared able to classify true positives effectively. although mireval correctly predicted 100% of the sequences, one of its prediction strategies is to check a test sequence with sequences in mirbase. mirpara predicted around 80% of the known mirnas which was significantly better than the ~60% and ~20% that were predicted by miralign and bayesmirnafind respectively. however, the performance of these two packages in these tests is below what had been reported by the authors in their original publications. nevertheless, the test sequences were randomly selected, rather than in a way which would yield some advantage to our software. one possible explanation is that these programs were trained against limited subsets of the full mirbase release; bayesmirnafind was trained against a broader range of mammalian sequences and returned the best results of the three. it therefore seems likely that the remaining two software packages would return improved results when tested against more specific mammalian datasets.

mirpara also proved to be the most effective in predicting new mirnas. the sequences in the "new mirnas" dataset were experimentally validated new submissions in mirbase <dig> , i.e., none of these new mirnas were used during the training of mirpara . mirpara predicted ~50% of the new mirna entries in mirbase <dig> . the corresponding percentage for the homologous searching based packages was very low, around 1% for miralign and 3% for mireval. the performance of bayesmirnafind was slightly better  but still very low compared to mirpara. a complete list of new predictions that were not present in mirbase <dig>  but which were verified in subsequent releases are given in additional file table s <dig> 

two predictions are shown in figure  <dig> along with some of the calculated parameters . figure 8a shows the prediction for cel-let- <dig>  figure 8b shows the prediction for rlcv-mir-rl1-14- <dig> in rhesus lymphocryptovirus that was subsequently verified in release  <dig> of mirbase.

calculated parameters for the predictions shown in figure  <dig>  only parameters that were selected by parameter filtering are shown.

vi - benchmarks
mirpara is designed for analysis of genome scale sequences. we therefore examined the performance by analyzing a series of sequence sets ranging in length from  <dig> to  <dig>  we also examined the accuracy for each dataset to ensure there was no size effect beyond what was observed with the 100nt sequence set and longer sequences. figure 9a shows the benchmark results. the non-linear increase in run time as a function of sequence length is due to the number of secondary structures that are predicted. nevertheless, the program can analyze a 10000nt sequence in less than a minute with an off-the-shelf laptop and full length genome sequences can be analyzed in a few hours. one concern was whether accuracy might tail off as the sequence length was increased due to the formation of more complex secondary structures. figure 9b shows a plot of accuracy against sequence length for sequences up to 10000nt and there is no evidence of dependency on sequence size.

discussion and 
CONCLUSIONS
we have developed a new software tool, mirpara, for the prediction of mirna and pre-mirna sequences from dna or rna sequences of any length. there are three major differences between our approach and previously reported methods. first, rather than defining a broad range of parameters to describe the sequences, we examined results from experimental studies to determine parameters that appeared to be most relevant to the mirna maturation process. these parameters were then used as inputs to a support vector machine . second, instead of training a single model for all sequences, we trained three different svm models, overall, animal & plant. . finally, training separate models allowed us to use a significant portion of the data in mirbase, rather than restricting ourselves to subsets of the data. all three models showed good performance with high specificity and sensitivity and the animal model was also effective at predicting virus sequences.

a parameter filtering step was included to examine whether accuracy could be used by using a subset of parameters. interestingly, step identified features that had previously been considered irrelevant in the characterization of pri-mirna, pre-mirna and mirna. there has been much debate as to whether nucleotide content <cit>  and gc content <cit>  are critical for mirna processing. however, in this work, we found that nucleotide content for all  <dig> bases as well as gc content were key parameters for identification of both pre-mirna and mirna sequences . this is possibly because the svm is combining these parameters in the training process, rather than analyzing them independently, which was the approach used in earlier studies.

additionally, our results indicate that the size of mirna secondary structure, length_upperstem, is more important than the length of mirna----milength. this result seems reasonable because dicer, the enzyme that cleaves pre-mirna into an mirna duplex and thus determines the length of mirna, only interacts with dsrna, i.e., if there are some features that are involved in the determination of cleavage length, they are more likely to be related to the secondary structure of the mirna.

another interesting result was the selection of parameters describing properties of the upper and lower stem in the pri-mirna. although this isn't consistent with the observation that the length of these features vary greatly amongst different pri-mirna sequences, with several sequences failing to incorporate these features, the majority of the selected parameters are related to the unpaired bases in the region, i.e., these unpaired bases might contribute to some relevant structural feature that is important for slicer complex recognition or processing. however, this is purely speculative and further study is necessary and beyond the scope of this report.

comparisons with other currently available mirna prediction software  found mirpara was the most effective at identifying a broad range of known mirnas and outperformed other packages in identification of new mirnas. however, there is no information available about what training sets were used on the most current versions of these other software tools and it is likely they will give better performance when identifying mirnas in specific mammalian sequences or retrained with different datasets. for more general analysis of genome sequences however, our software appears to be the most accurate and can analyze full length genome sequences with no upper limit on size.

the goal of developing the software was to complement hts experiments and mirpara is primarily designed for use in wet-lab studies to screen long sequences for putative mirnas as well as pre-testing mirnas of interest to reduce bench search range. because the mirna maturation process is still not fully understood, it is not possible to identify the mirna within the parent pri-mirna with 100% certainty. this is a problem that exists with all mirna prediction software. for example, mirnabayesfind provides the user with large numbers of candidate mirnas, many of which are overlapping. nevertheless, each individual prediction, even when overlapping, is considered a mature mirna prediction. on the other hand programs such as mialign, which assume the presence of some degree of sequence homology, are able to precisely identify mirna candidates, but at the expense of rejecting many true mirnas. thus, rather than reporting individual mature mirna predictions and their specific cleavage sites, we consolidate overlapping mirna predictions into a single predicted mirna coding region. additional file figure s <dig> shows an example where mirbase prediction results are combined with hts data  <cit> ; multiple mirbase predictions are clustered around multiple sequencing reads to define a region or mirna 'hotspot' within the pri-mirna that is generally no more than a few nucleotides wider than the real mirna. these results are more straighforward to interpret, particularly for very long sequences and identifying these most probable mirna coding regions allows smaller primer pairs sets to be used for sequencing cloned fragments and identifying the true mirna fragments.

availability and requirements
mirpara is an effective tool for locating mirnas coding regions in genome sequences in a species specific manner. the software uses an svm approach to train against known animal, plant and virus mirna sequences in mirbase and can be easily retrained against more specific datasets or new releases of mirbase as they become available. the software can be run on a standard desktop computer and analyze full length genome sequences in a matter of hours. mirpara is written in perl and can be run as a standalone application or as a remote service on a webserver. both packages and source code can be accessed via our website http://www.whiov.ac.cn/bioinformatics/mirpara/. although mirpara can parse any length sequences, we have set an upper limit 500-nt for the online version. for longer sequences users can run the standalone application.

abbreviations
mirnas: micrornas; svm: support vector machine; ago: argonate; risc: rna induced silencing complex; mfe: minimum free energy; ta-sirnas: trans-acting small interference rnas; ppri-mirnas: partial primary micrornas; ev: experimentally verified; hts: high throughput sequencing; ebv: epstein barr virus; mdv1: marek's disease virus; rlcv: rhesus lymphocryptovirus

authors' contributions
yw wrote the mirpara perl scripts, trained the svm models and did the data testing and analysis, built the mirpara online websites and wrote the manuscript. bw wrote a java version of the software which will be released shortly. hl participated in mirpara website building and implemented the remote service on the server. sr organized the data set, performed data analysis, wrote additional data analysis software and wrote the manuscript. all authors read and approved the final manuscript

supplementary material
additional file 1
supplemental material.

click here for file

 acknowledgements
we would like to thank dr james t. adams for helpful comments regarding data analysis and preparation of this manuscript and two anonymous authors for their critical comments during the review process. this work was supported in part by the national basic research program of china ministry of science and technology   the innovative program of the chinese academy of sciences 
