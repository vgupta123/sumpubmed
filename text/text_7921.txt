BACKGROUND
introduction
the study of evolution is a study of patterns of change, but also of conservation, the latter being typically easier to detect and characterize. moreover, elements conserved across many species were probably present in their last common ancestor and preserved through selection pressures, so that these conserved elements probably play a major role in the fitness of the organisms. biologists have long studied patterns of conservation in dna sequences: first pairwise sequence similarity in large databases , then multiple sequence alignments and phylogenetic reconstruction, and finally the reconstruction of ancestral sequences, an avenue of enquiry that has seen much activity of late . recently, researchers have also started to look for characteristic patterns of change across a collection of species–an example being the discriminating subsequences of angelov et al.  <cit> .

all of these efforts aim at recovering what one could term genomic signatures–subsequences that best characterize the evolutionary history of the given group of organisms. the original use of the term "genomic signature" referred to the spectrum of dinucleotide frequencies gathered from the entire genome of organelles and of some prokaryotes  <cit> . since then, it has been used for genome-wide gene expression data  <cit> , protein-based  comparisons  <cit> , genome-wide localization of transcription factors   <cit> , and many other variations. these uses all share a genome-wide scope and a particular technique for capturing conservation and/or divergence in the genome. recovering such signatures would enhance our understanding of genomic evolution as well as provide an important tool in biomedical research.

the focus to date in evolutionary genomics has been on dna sequence evolution, in part because of the nature of the available data  and in part because of their relative simplicity. the assumed model of evolution has been a simple process of point mutation and gap-forming indels. however, other processes affect the evolution of a genome, including large-scale events that rearrange genes along the chromosomes, introduce new genes, or remove existing ones. rearrangements, in particular, interfere with our ability to align sequences: for instance, a single inversion  can make two sequences unalignable under the mutation and indels model.

as more and more genomes are fully sequenced, interest in reconstructing complete ancestral genomes has grown; pevzner's group, for instance, has published extensively on the topic in the context of vertebrate genomes , as has a group headed by haussler and miller  <cit> . however, while rearrangements such as inversions, transpositions, translocations, and others are complex and powerful operations, our models for them remain poorly parameterized, often reduced to the simplest case of uniform distributions. under such models, reconstruction of ancestral genomes for organisms that exhibit significant divergence  remains poor, mostly due to the enormous number of equally "good" evolutionary scenarios  <cit> . it is therefore natural to turn once again to genomic signatures, this time formulated in terms of a rearrangement  model.

in this paper we introduce a measure of similarity defined between two genomes with respect to a third. the key idea is the introduction of the third genome, which allows us to take into consideration the evolutionary paths from the two genomes under study to the third, thus basing our measure of similarity on the evolutionary history of the two genomes rather than just on their current configuration. naturally, these evolutionary paths are not unique under current models and thus a number of ancestral states can be reached on the way from the two genomes under study to the third genome. we call these states rearrangement signatures and further distinguish those that are farthest from the third genome  as maximum rearrangement signatures. although the concepts introduced here apply to any rearrangement operation, we study these signatures under the operation of inversion, the most commonly used rearrangement operation in work to date  <cit> . we show that maximum signatures carry much information about ancestral genomes and that they can often be computed within a reasonable amount of time in spite of the very large search space. we use simulations under a wide variety of conditions to show that the maximum signatures pinpoint the true ancestral genome, either recovering it outright or producing one very close to it, and to show that these signatures can be used to reconstruct reliable phylogenies, all using a polynomial-time heuristic that runs much faster than a full exhaustive search.

notation and definitions
as is usual in the study of rearrangements, we represent a chromosome of n genes by a signed permutation on the elements { <dig>   <dig>  ..., n}. given a signed permutation π, an inversion r is a permutation that, when applied to π, reverses the order and the sign of a segment of π that begins at the ith gene and ends at the jth one. thus, if we write the identity permutation as  <dig>  ..., i -  <dig>  i, i +  <dig>  ..., j -  <dig>  j, j +  <dig>  ..., n, then r becomes  <dig>  ..., i -  <dig>  -j, -, ..., -, -i, j +  <dig>  ..., n. r π denotes the application of inversion r to permutation π. for signed permutations π and π', the  edit distance d  is the minimum number of inversions needed to transform π into π'. we say that a sequence of permutations π <dig>  π <dig>  ..., πd forms an edit path if for all πi,  <dig> ≤ i <d, we have d = 1; each inversion applied along this path is then deemed an edit inversion. taking each πi to be a vertex and linking two vertices with an edge whenever the corresponding permutations occur consecutively on an edit path creates an edit path graph. the relation "is on the edit path from" thus induces a partial order, the edit partial order, or epo. we denote the epo between π <dig> and πd as epoπ <dig>  or epoπd . so if we have π <dig> =  <dig> - <dig> - <dig> and π <dig> =  <dig>  <dig>  <dig> then an edit path between them might visit permutations π <dig> = - <dig> - <dig> - <dig> and π <dig> = - <dig> - <dig>  <dig> before reaching π <dig>  figure  <dig> shows the epos for  <dig> - <dig> - <dig> and - <dig>  <dig>  <dig> 

we are interested in the intersection of epos, which will yield the desired inversion signatures. for a set of k +  <dig> permutations, one of which is the reference permutation called the locus, an inversion signature is the permutation corresponding to a vertex in the intersection of the k epos from each of the other k permutations to the locus.

definition  <dig> the set of all inversion signatures for permutations π <dig>  ..., πkwith locus πl is sπl=v∩epoπl∩⋯∩epoπl), where v denotes the set of vertices of graph g.

whenever the context is unambiguous, we shall simply write sπl for sπl . similarly, the signature graph on π <dig>  ..., πk with respect to πl is the graph epoπl∩epoπl∩⋯∩epoπl. an inversion signature πs ∈ sπl is thus a permutation that embodies some of the commonality between the k other permutations with respect to πl, in the sense that they all possess an edit path to πl that passes through πs. a maximum signature is a signature in sπl that is as far away from πl  as possible.

definition  <dig> the set of all maximum signatures is sπl∗={πs∈sπl|for all π′s∈sπl,d≥d}.

a maximum inversion signature is thus a permutation that represents the "maximum commonality" between the k permutations: it is as close to these k permutations as possible while still being part of all edit paths to πl. from a biological perspective, this edit path from πl to the signature can be thought of as the evolution that happened before speciation, or the pattern of change that the k sequences have in common.

as with the special case for steiner points called the median  <cit> , we find it helpful to name the case with k +  <dig> =  <dig>  for this case we have two permutations πa and πb and an ancestor locus πl and we call sπl∗  the pairwise maximum signature.

in figure  <dig> we have πa =  <dig> - <dig> - <dig>  πb = - <dig>  <dig>  <dig>  and πl =  <dig>  <dig>  <dig> . the signature graph is outlined in bold. the signatures in this case are - <dig> - <dig> - <dig> - <dig> - <dig>  <dig>   <dig>  <dig> - <dig>  and the trivial signature πl =  <dig>  <dig>  <dig>  the only maximum signature is also the only maximal signature - <dig> - <dig> - <dig> 

methods
we begin with an investigation of rearrangement-based genomic signatures as defined above, then give procedures for signature-based phylogenetic and ancestral reconstruction.

computing signatures
definition  <dig> can be restated inductively in terms of edit paths that move from the locus πl towards the other permutations π <dig>  ..., πk. we say that some permutation π has a common edit inversion r with respect to π <dig>  ..., πk if we observe d - d =  <dig> for  <dig> ≤ i ≤ k.

definition  <dig> the locus πlis an inversion signature for permutations π <dig>  ..., πk. if permutation π is an inversion signature and r is a common edit inversion with respect to π <dig>  ..., πk, then rπ is also an inversion signature.

thus, starting at the locus , one can enumerate all signatures by repeatedly applying every possible common edit inversion to the current collection of signatures; maximal signatures are those signatures for which no common edit inversion exists and maximum signatures are the largest of these maximal signatures . common edit inversions form the basis for the mgr algorithm of bourque and pevzner  <cit> , who used a greedy algorithm that picks a single path by always choosing the common edit inversion that provides the largest number of common edit inversions at the next step.

the signature space is of course very large. in particular, if the two permutations of interest are just one inversion apart, then the space of all signatures can be roughly the same size as the inversion epo between one of the permutations and the locus–and that is, in expectation, exponentially large in the pairwise distance.  we use the greedy heuristic of mgr to construct maximal signatures and show that it often returns the maximum signature. it is not optimal, however: consider the permutations πa = - <dig>  <dig> - <dig>  <dig> - <dig>  <dig>  πb =  <dig>  <dig>  <dig>  <dig> - <dig>  <dig>  and πl =  <dig>  <dig>  <dig>  <dig>  <dig>  <dig>  in the signature graph of figure  <dig>  vertices that can be produced by the greedy heuristic are highlighted, none of which are a maximum signature.

noninterfering independent sets
we say that a set of edit inversions on a permutation π commutes iff applying every inversion in the set always yields the same permutation τ, regardless of the order in which the inversions are applied. 

definition  <dig> a set of n inversions on π with respect to τ is noninterfering if and only if it commutes and applying these inversions in any order reduces by n the inversion distance between π and τ.

commuting and noninterfering inversions offer a way to reduce the search space in computing a median or in examining all sorting paths: for a set of size n, it is enough to look at a single ordering of its inversions rather than at all n! possible orderings  <cit> .

the concept of noninterfering inversions extends naturally to our framework with a defined ancestor.

definition  <dig> a set of inversions r is mutually noninterfering for πa and πb with locus πl if it is noninterfering for πl with respect to πa and also for πl with respect to πb.

such mutually noninterfering sets form the basis for another greedy algorithm: we repeatedly find and apply to πl sets of mutually noninterfering inversions until there are none left. mutually noninterfering sets can be found very quickly, so a greedy algorithm based on this approach runs very fast. we use this particular greedy heuristic in our experiments.

signature-based tree reconstruction
since signatures are just nodes along evolutionary paths, they can be used as internal nodes in a process of phylogenetic reconstruction. we begin with a naïve algorithm to illustrate the basic approach.

the idea is to overlay the epos from each of the leaves π <dig>  ..., πk to the locus πl and construct a tree representative of the resulting structure. consider the set of these epos, o = {epoπl|  <dig> ≤ i ≤ k}; our algorithm constructs a tree from the current version of o, iteratively choosing a node from pairwise intersections of graphs in o and updating o to reflect this choice. specifically, at iteration i,

 <dig>  select from o a vertex πs that maximizes d ;

 <dig>  if the vertex selected in the previous step belongs to the intersections of pa, pb ∈ o, then create a node in the tree to be the parent of the subtrees represented by pa and pb;

 <dig>  in o replace epoπl  and epoπl  with their intersection.

this algorithm yields a tree without internal node labels, because epos are not closed under intersection, so that a node in the tree may represent two graphs from o that no longer have a least upper bound.

our second algorithm overcomes this problem; in addition, it yields implicit edit paths from the leaves to the root that join at the internal nodes. in this improved version, we maintain the invariant that elements of o are always epos. thus only the third step of the iteration is affected, and replaced by the following:

• in o replace epoπl  and epoπl  with epoπl .

step  <dig> in each iteration is obviously the computationally intensive one; our implementation for this step uses the mgr heuristic.

distance-based bound on signature size
we develop an upper bound based on pairwise distances to help us evaluate our greedy signature methods in the experimental phase. denote by a, resp. b, the inversion distance between the locus and πa, resp. πb, and by d the inversion distance between πa and πb.  now consider some arbitrary signature πs for this triple and denote its size, or distance from the locus, by c; figure  <dig> depicts the situation. as all distances are edit distances, we can write a - a = b - b and, by the triangle inequality, a + b ≥ d; combining the two, we get

 a≥d+a−b <dig>  

with the symmetric version for b. without loss of generality, assume a ≥ b; then we get

 dc≤a−, 

the desired upper bound.

RESULTS
we demonstrate the use of pairwise inversion signatures for ancestral reconstruction and for phylogenetic reconstruction through extensive simulations. we first show that, under certain reasonable conditions, maximum signatures coincide with ancestral genomes most of the time, then proceed to show that, under more stringent conditions, maximum signatures always coincide with ancestral genomes. since no polynomial-time algorithm for computing maximum signatures is known at present, we show that our heuristics perform well, both in terms of accuracy and running time, even when applied to larger genomes . finally, we show that the signature method use for phylogenetic reconstruction produces trees comparable in quality to neighbor-joining while providing ancestral reconstructions along the way.

maximum signatures as ancestral genomes
our experiments for ancestral reconstruction simply use triplets of genomes generated from an ancestral genome by generating three evolutionary paths, using randomly chosen inversions. the locations of these inversions is distributed uniformly at random, but their lengths are distributed according to one of two possible distributions: uniform and normal. the lengths of the edges from the ancestor to the three leaves are chosen in both a balanced manner and several skewed manners. all of our experiments used  <dig>  repetitions unless stated otherwise and the results presented show averages over these  <dig>  tests.

we present most of our results in the form of tables. tables  <dig> through  <dig> group columns by the percentage of the length of the longest simulated path p in the triplet. for instance, column two of table  <dig> shows the percentage of true ancestors that are within  <dig>  <dig> × |p| inversions away from a maximum signature . the rows in these cases are labeled by the edge length as a percentage of the genome size.

# of ops as
# of ops as
# of ops as
# of ops as
# of ops as
the first set of tables apply to triplets where all edges have the same length . table  <dig>  for normally distributed inversion lengths, shows that the simulated ancestor is a maximum signature most of the time, even when the evolutionary rates are extremely high. when the rates are already high 10% of the genome size, 97% of the true ancestral genomes are maximum signatures. the table also shows that  the true ancestor is within  <dig> inversions from a maximum signature more than 90% of the time. table  <dig> shows similar, but slightly weaker results for uniformly distributed inversion lengths.

the next set of tables examines the influence of the size of the genome. table  <dig> shows that the accuracy scales well.

in addition, we tested genomes of size 100; the results are shown in table  <dig> 

computing maximal signatures
the exhaustive algorithm rapidly reaches its limits: for genomes of size  <dig> with edge lengths of  <dig>  computations already take on the order of hours instead of minutes. table  <dig> shows favorable results for exhaustive computation of maximum signatures on such genomes. we now proceed to compare these results with those of our new maximal signature algorithms. under most circumstances, the true ancestor is found by such maximal signature computations. table  <dig> shows that the bourque-like approach and the approach based on noninterfering inversions fare well with respect to the exhaustive search, the latter dropping off first. table  <dig> shows results for the two greedy methods on genomes of size  <dig>  for reasonable rates of evolution , we again see that the true ancestor is found most of the time.

finally, we tested on genomes of more realistic sizes, but of a size usually considered forbidding for ancestral inference–up to  <dig>  genes. with  <dig> random events per edge the bourque-like computations take just under  <dig> minutes, while for  <dig> random events they take under  <dig> hours. the accuracy remains very high: in 99% of the  <dig> trials with  <dig> random events per edge, the signature returned is within  <dig> inversions of the true ancestor, while in 66% of these trials, the signature returned is in fact the true ancestor. the approach based on noninterfering inversions is by far the fastest, taking under a half a minute for each of these trials, even with  <dig> random events per edge. using  <dig> random inversions per edge, we found that 97% of the  <dig> trials gave an ancestor within  <dig> inversions of the true ancestor, while 57% gave the true ancestor. with  <dig> events per edge, 91% gave an ancestor within  <dig> inversions of the true ancestor, while 15% gave the true ancestor.

the largest genomes we tested had size  <dig>  and  <dig> operations per edge, and  <dig>  with  <dig> operations per edge. all trials gave a signature within  <dig> inversions of the true ancestor, while 90% gave one within  <dig> inversions, all running in under  <dig> minutes per trial for size  <dig> and  <dig> minutes per trial for size  <dig>  these speeds are enormously higher than methods such as mgr or median-based reconstructions, yet the accuracy is also much higher. thus, by focusing on the characteristic  patterns of inversions, we are able to win on two fronts at once, mostly because we avoid the confusion and long explorations associated with multiple reconverging paths.

skewed trees
the true ancestor will not always be equidistant from the leaves and the locus. while large amounts of skew can sometimes move an ancestor farther from a maximum signature, the true ancestor usually remains very close to a maximum signature.

we call the number of random inversions from the locus to the true ancestor c and the number of random inversions from the true ancestor to each of the leaves a and b. we fix a to be 10% of the total length and vary c and b from values equal to a up to  <dig>  times a. table  <dig> shows that, for genomes of size  <dig>  the true ancestor is a maximum signature in most cases and that almost as often it is a maximal signature found by the bourque-like greedy method. our maximum signature method appears slightly more robust to skew on one of the child branches as opposed to skew on the branch to the locus.

tree reconstruction
we simulated evolution over  <dig> trees to test our signature-based tree reconstruction method. we found that our method  reconstructs the true topology most of the time and that any error remains very small. the trees were constructed using the birth-death model and the mean of the normally distributed edge lengths was varied from  <dig> to  <dig> operations with a standard deviation varying from  <dig> to  <dig>  the mean of the normally distributed inversion lengths was varied from  <dig> to  <dig> with a standard deviations varying from  <dig> to  <dig>  the generated trees have from  <dig> to  <dig> taxa and are distributed as shown in figure  <dig> 

two methods were used for choosing a locus. the first method used the true root of the tree given by the simulation , while the second method used a random leaf as the locus. with the true root as the locus, we found that 94% of the trees were reconstructed perfectly, while  <dig> of the  <dig> remaining trees had a robinson-foulds error of  <dig>  giving an average rf error of  <dig> . with a random leaf as the locus, we found that 85% of the trees were reconstructed perfectly, while  <dig> of the  <dig> remaining trees had an rf error of  <dig> and  <dig> of the last  <dig> had an rf error of  <dig>  giving an average rf error of  <dig> .

using the true root as the locus demonstrates that the pairwise signature contain a great deal of information about the phylogeny. using a random leaf as the locus demonstrates that such information remains recoverable even when the choice of locus is arbitrary , justifying our initial claim that comparing two genomes with respect to a third tremendously enriches what can be had from a direct pairwise comparison.  our tests for phylogenetic reconstruction are obviously of limited scope, meant to exemplify the usefulness of the method rather than provide a full evaluation; and the method itself is subject to many obvious improvements 

tightness of the upper bound
finally, we present experimental results suggesting that our upper bound is on average very tight and then use the bound to show that the greedy signatures, used for ancestral reconstruction of genomes too large for the exhaustive computation, are indeed close to a maximum signature. since the computed ancestor is bracketed within this bound, our results imply that the maximum signature is very close to the true ancestor with high probability.

the upper bound was computed for each trial in table  <dig>  for each of the sets of  <dig> trials, the average difference between the upper bound and the maximum signature was  <dig> ,  <dig> ,  <dig> ,  <dig> , and  <dig>  for trials with  <dig>   <dig>   <dig>   <dig>  and  <dig> percent respectively. for the length-dependent data from table  <dig>  the average difference stays between  <dig>  and  <dig> . table  <dig> indicates similar performance for experiments run on skewed triplets. the tests from table  <dig> give average differences from  <dig>  up to  <dig>  for the bourque-like method and differences from  <dig>  up to  <dig>  for the noninterfering inversions method. only one of the tests from genomes of size  <dig> did not match the upper bound for the greedy method.

CONCLUSIONS
in any study of evolutionary changes, the challenge is to distinguish global patterns from a background of many local changes–or, to put it another way, to find commonalities among many equally plausible evolutionary paths that lead to the same modern organism. we have proposed an approach to this problem that focuses on intermediate states along such paths in the setting of a speciation event and seeks to return the last  states from which both species of organisms could still have been derived. this approach offers multiple benefits: the focus on intermediate states translates readily into one on ancestral reconstruction; the study of paths going through a fork  stresses the role of evolutionary history rather than just final states; and the search for the most recent states that are part of the fork naturally separates common evolutionary changes  from individual variations . although finding such signatures appears hard, we gave an efficient heuristic that does very well through an extensive range of simulations. our signatures are based on inversions, since inversions are the best studied of the various genomic rearrangements to date, but the concept readily extends to any other rearrangement operation or family of such operations.

competing interests
the authors declare that they have no competing interests.

