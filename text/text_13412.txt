BACKGROUND
the huge amount of genomic, transcriptomic and related data has allowed for a fast reconstruction of an increasing number of genome-scale metabolic networks, e.g.  <cit> . in the absence of detailed kinetic information, constraint-based modeling and analysis has recently attracted ample interest due to its ability to analyze genome-scale metabolic networks using very few information  <cit> . constraint-based analysis is based on the application of a series of constraints that govern the operation of a metabolic network at steady state. this includes the stoichiometric and thermodynamic constraints, which limit the range of possible behaviors of the metabolic network, corresponding to different metabolic phenotypes. applying these constraints leads to the definition of the solution space, called the steady-state flux cone <cit> :


  c={v∈rn∣sv= <dig> vi≥ <dig> for alli∈irr}, 

where s is the m×n
stoichiometric matrix of the network, with m internal metabolites  and n reactions , and the vector v∈rn gives a flux distribution. furthermore, irr⊆{ <dig> …,n} denotes the set of irreversible reactions in the network, and rev={ <dig> …,n}∖irr
denotes the set of reversible reactions.

the flux cone contains the full range of achievable behaviors of the metabolic network at steady state. various approaches have been proposed either to search for single optimal behaviors using optimization-based methods  <cit>  or to assess the whole capabilities of a metabolic network by means of network-based pathway analysis  <cit> .

flux coupling analysis  is concerned with describing dependencies between reactions  <cit> . the stoichiometric and thermodynamic constraints not only determine all possible steady-state flux distributions over a network, they also induce coupling relations between the reactions. for instance, some reactions may be unable to carry flux under steady-state conditions. if a non-zero flux through a reaction in steady-state implies a non-zero flux through another reaction, then the two reactions are said to be coupled . fca has been used for exploring various biological questions such as network evolution  <cit> , gene essentiality  <cit> , gene regulation  <cit> , analysis of experimentally measured fluxes  <cit> , or implications of the structure of the human metabolic network for disease co-occurrences  <cit> . having a time efficient implementation of fca is important in such studies.

after introducing the main existing algorithms for flux coupling analysis, we propose in this paper a new algorithm which significantly speeds up the calculation of flux coupling. our algorithm is based on two main principles. first, we reduce the stoichiometric model as much as possible when parsing the stoichiometric matrix. second, we use inference rules to minimize the number of linear programming problems that have to be solved. we prove the efficiency of our algorithm by successfully competing with the most recent approach  <cit> . we show that fca can now be quickly performed even for very large genome-scale metabolic networks.

approaches for flux coupling analysis
several algorithms were developed to calculate flux coupling between reactions. for a comparison among the existing approaches, the reader may refer to  <cit> . in the following, we focus on flux coupling methods based on solving a sequence of linear programming  problems. these methods have proved to be significantly faster than other algorithms.

definitions
we give a short overview of the important concepts we will use throughout this paper. first, we formally define blocked reactions in a metabolic network.

definition  <dig> 
given the steady-state flux cone c, let i∈{ <dig> …,n}
be a reaction. if vi= <dig>  for all v∈c, reaction i is called blocked, otherwise i is unblocked.

in the following, we assume that the flux cone is not trivial, i.e., not all reactions are blocked. next, we define the coupling relationships between reactions.

definition  <dig> 
let i,j be two unblocked reactions. the coupling relationships →= <dig> ↔= <dig> ∽ and ↦
are defined in the following way:


•i→=0j if for all v∈c, vi=0
implies vj= <dig> 

•
i↔=0j if for all v∈c, vi=0
is equivalent to vj= <dig> 

•
i∽j
if there exists λ≠0
such that for all v∈c,vj=λvi.

•
i  ↦  j
if there exists v∈c
such that vi=0
and vj≠ <dig> 

reactions i and j are fully  coupled if the relation i∽j
 holds. otherwise, i and j are uncoupled.

note that i∽j
 is equivalent to j∽i
. in addition, i∽j implies i↔=0j, which in turn is equivalent to .

as shown in  <cit>  the reversibility type of reactions is a key concept in flux coupling analysis.

definition  <dig> 
a reversible reaction i∈rev
is called fully reversible if there exists a flux vector v∈c
such that vi≠0
and vj=0
for all j∈irr. otherwise, reaction i is called pseudo-irreversible.

using the reversibility type of reactions, we define the following reaction sets which will be used to determine the cases where flux coupling can occur between reactions.


•frev={i∣i
is fully reversible},

•
prev={i∣i
is pseudo-irreversible and there exist v + ,v−∈c
such that vi+> <dig> vi−<0},

•
irev={i∣i∉frev∪prev and vi≠ <dig> for some v∈c},

•
blk={i∣i
is blocked }.

note that the above reaction sets are disjoint and their union is equal to the set of all reactions, i.e., blk ∪ irev ∪ prev ∪ frev={ <dig> …,n}.

as the classification of reactions according to their reversibility types has been treated elsewhere  <cit> , we focus on calculating the flux coupling between reactions given the reaction sets blk, irev, prev and frev. first, we briefly review the main existing flux coupling methods based on linear programming. afterwards, we present our new method to speed up the flux coupling analysis.

flux coupling finder
the flux coupling finder  algorithm  <cit>  determines blocked reactions as well as coupled reactions by solving a sequence of linear programming  problems. the fcf algorithm requires that each reversible reaction is split into two irreversible reactions, one forward and one backward. this may hamper the application of fcf to determine flux coupling in large genome-scale metabolic networks. indeed, splitting reversible reactions results in an increase in the number of variables  by |rev|
. since the fcf algorithm solves four lp problems to identify the maximum and minimum flux ratios for every pair of reactions, the total number of lp problems that have to be solved is very large. furthermore, the fcf algorithm does not compute directly coupling relationships between reactions. a post-processing step is needed to deduce couplings between reactions  from those between reaction directions . more importantly, the fcf algorithm explores exhaustively all possible reaction pairs. this leads to a very big number of lp problems that have to be solved. this strategy may not scale well for genome-scale models of complex microorganisms which involve a large number of reactions.

reversibility-based flux coupling analysis
to cope with the drawbacks of the fcf algorithm, we used the reversibility type of reactions to develop an improved version  of the original fcf method  <cit> . when looking for coupled reactions, wrp-fcf applies linear programming only in those cases where coupling relationships can occur  <cit> . namely, given two unblocked reactions i and j, we have exactly three cases where a flux coupling is possible between i and j:

flux coupling between reversible reactions
if i,j∈prev or i,j∈frev, i→=0j,i↔=0j and i∽j
are equivalent. more importantly, only the stoichiometric constraints determine whether i→=0j holds, independently of the thermodynamic constraints.

assume that blocked reactions have been identified beforehand and their respective columns in the stoichiometric matrix have been removed. consider the following lp problem


  max{vj:sv= <dig> vi= <dig> ≤vj≤1}, 

and let v∗ be an optimal solution. according to proposition  <dig>  in  <cit> , i→=0j if and only if vj∗= <dig> 

flux coupling between irreversible reactions
if i∈irev and j∈prev, we only have to check whether i→=0j. the other coupling relationships cannot occur. let v1
resp. v <dig> be optimal solutions of the two lp problems


  max{vj:sv= <dig> vk≥ <dig> k∈irr,vi= <dig> vj≤1},min{vj:sv= <dig> vk≥ <dig> k∈irr,vi= <dig> vj≥−1}. 

then i→=0j if and only if vj1=vj2= <dig> 

flux coupling between irreversible reactions
if i,j∈ irev, in analogy with the fcf algorithm, we determine upper and lower bounds uij and lij such that 0≤lijvj≤vi≤uijvj for all v∈c by solving the lp problems


  lij=min{vi:sv= <dig> vj= <dig> vk≥ <dig> k∈irr},uij=max{vi:sv= <dig> vj= <dig> vk≥ <dig> k∈irr}. 

comparison of lij
and uij
allows us to determine whether reactions i and j are coupled using the following rules:


i→=0j  if and only if lij≠0
,

j∽i
if and only if lij≠ <dig>  uij≠0
and lij=uij.

the improved version wrp-fcf does not make an exhaustive computation for all pairs of reactions and does not require a reconfiguration of the metabolic network. accordingly, not only is the number of lp problems used by wrp-fcf smaller than the number solved by fcf, but also the lp problems used by wrp-fcf are simpler than those employed by fcf. for mathematical proofs, the reader may refer to  <cit> .

feasibility-based flux coupling analysis
linear programming can be solved by enumerating a set of adjacent feasible solutions such that at each solution the objective function improves or is unchanged. accordingly, searching for a feasible solution can be faster than computing an optimal solution  <cit> . based on this observation,  <cit>  proposed the ffca approach for flux coupling analysis transforming the optimization-based lp problems used in the wrp-fcf method into feasibility-based lp problems. the authors compared ffca with other available flux coupling algorithms, and showed that ffca is slightly faster than wrp-fcf.

methods
before using linear programming to calculate flux coupling between reactions, we preprocess the metabolic network in order to i) reduce the number of variables and constraints of the subsequent lp problems and ii) classify reactions according to their reversibility type. the network reduction is mainly based on the removal of trivially blocked reactions and the merging of the stoichiometric columns corresponding to trivially coupled reactions  <cit> . for this, one can use the kernel of the stoichiometric matrix. alternatively, we can apply the following reduction rules which require a simple parsing of the stoichiometric matrix and are not time consuming. this strategy allows avoiding potential numerical instabilities related to the computation of a basis of the kernel.

preprocessing
certain metabolites, called dead-end metabolites <cit> , are produced  by some reactions without being consumed  by other reactions. this concept is illustrated in figure  <dig> where the dead-end metabolite h is produced by reaction  <dig> without being consumed by any of the remaining reactions.


as stated below, reactions which are consuming or producing dead-end metabolites are blocked.

observation  <dig> 
let k∈{ <dig> …,m}
be a metabolite. then, the following hold:


if there exists a reaction i such that ski≠0
and skj=0
for all j≠i, then reaction i is blocked.

if there exists a set of reactions i⊆irr
such that ski>0
 for all i∈i
and skj=0
for all j∉i, then all reactions i∈i
are blocked.

in each of these cases, k is called a dead-end metabolite.

certain metabolites are involved in exactly two reactions. for instance, in the network metnet depicted in figure  <dig>  metabolite e is produced/consumed only by reactions  <dig> and  <dig>  the following observation states that the fluxes through reactions involving such metabolites are proportional to each other.

observation  <dig> )
let i and j be two reactions such that, for some metabolite k∈{ <dig> …,m}, ski≠ <dig>  skj≠0
and skl=0
for all l≠i,j. then, reactions i and j are either blocked or fully coupled.

the identification of dead-end metabolites and their corresponding blocked reactions allows us to reduce the number of metabolites and reactions that matter for identifying coupled reactions. as stated in the following observation, the removal of the rows  in the stoichiometric matrix corresponding to dead-end metabolites  does not influence the flux coupling between reactions.

observation  <dig> 
let d be a set of dead-end metabolites and let b be a set of blocked reactions. for convenience, suppose b={s +  <dig> …,n}. let s′
be the submatrix of s formed by the rows sk∗
with k∉d
and the columns s∗l
with l∉b. let irr′=irr∖b. then, for all pairs of reactions i∉b
and j∉b,


•i→=0j if and only if vi′= <dig> implies vj′= <dig>  for all v′∈rs such that s′v′=0
and vp′≥0for allp∈irr′.

•
i∽j
if and only if there exists λ′≠0
such that vj′=λ′vi′, for all v′∈rs with s′v′=0
and vp′≥0for allp∈irr′.

the next observation shows that two fully coupled reactions can be represented by only one column in the stoichiometric matrix, without altering the flux coupling between reactions.

observation  <dig> 
let k,l
be two reactions such that for all v∈c,vl=λvk
for some λ≠ <dig>  for convenience, suppose l=n
and λ> <dig>  let s′
be the m×
matrix defined by s∗p′=s∗p for all p≠k,l
and s∗k′=s∗k+λs∗l. let irr′=∖{l}
if l∈irr, and irr′=irr
otherwise. then, for all pairs of reactions i≠l
and j≠l,


i→=0j if and only if vi′= <dig> implies vj′= <dig>  for all v′∈rn− <dig> such that s′v′=0
and vp′≥0for allp∈irr′.

i∽j
if and only if there exists λ′≠0
such that vj′=λ′vi′, for all v′∈rn− <dig> with s′v′=0
and vp′≥0for allp∈irr′.

note that when applying the reduction rules of observations  <dig> and  <dig>  further metabolites and reactions may fulfill the conditions of observations  <dig> and  <dig>  accordingly, we apply these reduction rules in an iterative way. as an illustration, the reduction of the network metnet depicted in figure  <dig> involves two iterations. in the first one, metabolite h and reaction  <dig> are removed, the pairs of reactions  and  are merged and metabolites a and e are removed. in the second iteration, the equivalent reactions  are merged and metabolite g is removed. the preprocessed network depicted in figure  <dig> contains only four metabolites and nine reactions.

certain fully coupled reactions could not be identified using observation  <dig>  the following lemma proves that all fully coupled reaction pairs can be deduced from the kernel kern={v∈rn∣sv=0} of the stoichiometric matrix after the removal of all blocked reactions.

lemma 1
let 
be a metabolic network with n unblocked reactions. for a pair of reactions 
the following are equivalent:


i∽j.

there exists λ∈r∖{0} such that vi=λvj, for all v∈kern.

proof
⇐" immediate.

"⇒" since i∽j, there exists λ≠0
such that vi=λvj
for all v∈c. assume by contradiction that there is v∈kern
such that vi≠λvj
and let l={l∈irr∣vl<0}. since every reaction is unblocked, for every l∈l
there exists g∈c
with gl= <dig>  let w=v−∑l∈lvlg. clearly, w∈kern
and wl>0
for all l∈irr, thus w∈c. however, wi≠λwj, contradicting i∽j. the required statement follows. □

in analogy with the wrp-fcf and ffca approaches, we identify the reversibility type of reactions in order to apply linear programming only in those cases where coupling relationships can occur  <cit> . here, we use the procedure for reaction classification described in  <cit> . note that applying the above reduction rules beforehand reduces the number of variables and constraints in the lp problems used for the classification of reactions.

based on the results above, we propose to apply the preprocessing procedure given in table  <dig> before identifying coupled reactions using linear programming. we show later that the preprocessing step turns out to be crucial for obtaining an efficient flux coupling algorithm.


algorithmic improvements
in certain metabolic networks, the conversion of a set of substrates into a set of products can be made by different reactions having the same stoichiometry. a simple example of such reactions are isoenzymes which make the same conversion of substrates into products. this concept is illustrated in figure  <dig> where both reactions  <dig> and  <dig> convert c into d in the same way. this holds also for reaction  <dig> and the merged equivalent reactions  in figure  <dig> showing that the network preprocessing may simplify the identification of such alternative conversions. the flux coupling of such reactions is trivial using the following lemma.

lemma  <dig> )
let i,j∈irev
and k,l∈prev∪frev
be four reactions. then, the following holds:


• if s∗i=αs∗j
for some α> <dig>  then i↦p
and j↦p
for all p∉blk.

• if s∗i=αs∗j
for some α< <dig>  then p↦i
 for all p∉blk∪{j}
.

• if s∗i=αs∗k
for some α≠ <dig>  then i↦p
and p↦i
for all p∉blk
and q↦k
for all q∉blk∪{i}.

• if s∗k=αs∗l
for some α≠ <dig>  then k↦p
and p↦k
for all p∉blk∪{l}
and l↦q
and q↦l
for all q∉blk∪{k}.

proof
the proofs of the four statements are similar. we only consider the first one. suppose s∗i=αs∗j
for some α>0
and let us prove i↦p. let p∉blk. there exists v∈c
such that vp≠ <dig>  let w∈rn such that wi= <dig> wj=αvi + vj
and wq=vq
for all q≠i,j. we have w∈c,wi= <dig> wp≠0
and so the claim follows. □

the next observation states that metabolites which are involved only in irreversible reactions and consumed or produced by exactly one reaction define trivial directional couplings between these reactions.

observation  <dig> )
let k be some metabolite such that skl=0
for all l∈frev∪prev. let p={i∣ski>0}
and n={j∣skj<0}. if card=1
=1), then i→=0j  for all ∈p×n.

since directional flux coupling is a transitive relation, the flux coupling between many reactions can simply be deduced from dependencies between reactions whose flux coupling has been determined beforehand. this allows us to significantly reduce the total number of lp problems to be solved. examples of such inferred flux couplings are given in figure  <dig>  according to the tdc rule, we have →= <dig>  by solving the lp problems , we obtain 10↦. we can easily conclude that 10↦.


for some pairs of reactions, we need to solve at least one lp problem. the optimal solution not only determines the flux coupling between the considered pair of reactions, but also allows one to determine many other uncoupled reactions.

observation  <dig> 
let v∈c
be a steady state flux vector and let i={i∣vi=0}
and j={j∣vj≠0}. then i↦j
for all ∈i×j.

in general, most irreversible reactions are uncoupled to each other. accordingly, the lp problems  used to determine coupled irreversible reactions are often unbounded. this limits the use of the feasibility rule, which requires the calculation of a feasible flux vector. in order to optimally use the feasibility rule, instead of solving the lp problems  to decide whether two irreversible reactions i,j∈irev are coupled, we propose to solve the bounded lp problems


  lij=min{vi:sv= <dig> vj= <dig> vk≥ <dig> k∈irr},lji=min{vj:sv= <dig> vi= <dig> vk≥ <dig> k∈irr}, 

and to use the following scheme:


i→=0j  if and only if lij≠0
,

j∽i
if and only if lij≠ <dig>  lji≠0
and lij=1/lji.

the following observation states that removing a fully reversible reaction does not alter the flux coupling between irreversible reactions.

observation 7
let k∈frev
be a fully reversible reaction. for convenience, suppose k=n. let s′
be the m×
matrix defined by s∗p′=s∗p for all p≠k
and let irr′=irr. then, for all pairs of reactions i∉frev
and j∉frev,


i→=0j if and only if vi′= <dig> implies vj′= <dig>  for all v′∈rn− <dig> with s′v′=0
and vp′≥0for allp∈irr′.

i∽j
if and only if there exists λ′≠0
such that vj′=λ′vi′, for all v′∈rn− <dig> with s′v′=0
and vp′≥0for allp∈irr′.

let s∗rev be the submatrix defined by the columns in s corresponding to the reversible reactions and let t be the dimension of kern. based on observation  <dig>  we can remove up to t independent fully reversible reactions without altering the flux coupling between irreversible reactions. since certain fully reversible reactions may change their reversibility type after the deletion of a fully reversible reaction, we first remove a randomly chosen reaction i∈frev
together with the coupled reactions with i. we calculate the impact of this deletion on the dimension of kern. if this dimension decreases by  <dig>  the deletion is maintained; otherwise the removed reactions are restored to the network. this is repeated until t independent fully reversible reactions and their coupled reactions are removed. we assume that the flux coupling between fully reversible reactions is determined beforehand.

based on the above results, we propose the fast flux coupling calculator  to determine coupled reactions. the main steps of the f2c <dig> algorithm are given in table  <dig> 

RESULTS
the f2c <dig> algorithm has been implemented within the matlab environment, using clp  as the underlying linear programming solver. for benchmarking, we analyzed the following genome-scale metabolic networks: escherichia coli, ijr <dig>  <cit> , saccharomyces cerevisiae, ind <dig>  <cit> , methanosarcina barkeri, iaf <dig>  <cit> , mycobacterium tuberculosis, inj <dig>  <cit> , escherichia coli, iaf <dig>  <cit> , homo sapiens, recon  <dig>  <cit>  and escherichia coli, ijo <dig>  <cit> . for the numerically sensitive parts, a tolerance level of 10e- <dig> was set. all computations were performed using a single intel xeon  <dig>  processor on a 64-bit debian linux  <dig>  system.

as pointed out in the previous section, part of the performance gain of f2c <dig> over previous fca algorithms stems from the fact that the preprocessing steps reduce the network size. this affects the running time on two levels: there are fewer reaction pairs and the lp problems to be solved have reduced size. the dramatic effect of the preprocessing steps on the network size is presented in table  <dig> 


the algorithmic improvements further reduce the number of lp problems to be solved. a direct performance comparison between the ffca and f2c <dig> algorithms  is summarized in table  <dig>  in all cases, f2c <dig> outperformed ffca by several orders of magnitude. in  <cit>  it has been shown that ffca is more efficient on genome-scale metabolic networks than other flux coupling algorithms.


for the f2c <dig> algorithm, trt includes the time  required for the preprocessing step. computation times are given in days , hours , minutes  and seconds .

for an intuitive, visual representation of the individual improvements’ impact on the algorithm’s performance, a more in-depth analysis has been performed on the recent metabolic network of e. coli, ijo <dig>  four different sets of improvements were cumulatively switched on, and the linear programs solved were plotted for each case . to better highlight the relevant differences, the following modifications were applied to the results. first,  <dig>  reactions identified as blocked were removed from the images. this is a common preprocessing step in most fca algorithms. secondly, the order of reactions was permuted such that the reactions in irev, prev and frev are clustered together. additionally, in each of these three clusters, the fully coupled reactions were moved towards the end of the segment.

and frev
regions. colors: black - an lp problem is solved for the corresponding  pair of reactions; gray - the corresponding lp problem is not solved due to one  reactions being eliminated from the network ; white - corresponding lp problem does not get solved due to an algorithmic improvement.

CONCLUSIONS
we have presented the new flux coupling algorithm f2c <dig>  which outperforms previous methods by orders of magnitude. flux coupling analysis of genome-scale metabolic networks can now be performed in a routine manner. a software tool f2c <dig> is freely available for non-commercial use at https://sourceforge.net/projects/f2c2/files/.

abbreviations
f2c2: fast flux coupling calculator; fca: flux coupling analysis; ffca: feasibility-based flux coupling analysis; fcf: flux coupling finder; lp: linear program; tdc: trivial directional coupling; tfc: trivial full coupling.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
the f2c <dig> algorithm was designed by all authors, based on ideas from al and ld. the implementation and computational experiments were done by ld. the first draft of the manuscript was written by al, and revised by ld and ab. the final document was approved by all authors.
