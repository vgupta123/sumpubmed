BACKGROUND
as prokaryotic species diverge, their gene order is increasingly fading away, except in rare locations where a few genes retain their neighborhood. such observations gave rise to the concept of genomic context  <cit> . accordingly, it is assumed that a small number of genes remain adjacent either because their expressions occur at the same time, or because they encode proteins that are constituents of the same molecular machine  or involved in the same cellular function  <cit> . these genes that remain persistently adjacent in constantly moving genomes form synteny blocks. in a recent work  <cit> , we have identified such synteny blocks in a large and diverse set of nearly  <dig> microbial genomes using a three-step process. in step one, we compared each protein encoded by a completely sequenced genome with all other available microbial proteomes in order to identify the full set of homologous proteins they share. in step two, we outlined an approach allowing the identification of bona fide orthologues among all recognized homologues when comparing many pairs of genomes. this second step is based on an adaptation of the method designed by wall et al.  <cit>  to compute the reciprocal smallest distance  that separates the homologues present in a pair of genomes. step three allowed further research among the correctly identified orthologues to pinpoint those that belong to a minimal unit that is conserved in each pair of genomes, i.e., a pair of positional orthologous genes  that remain adjacent in each genome. then, after extending these minimal units as far as possible, it becomes feasible to assess the relative amount and size of synteny blocks in close and distant species. such synteny blocks are appealing candidates in the study of the mechanisms of genome evolution and in the verification of the functional annotation of neighboring genes. accordingly, visualizing these blocks in a large number of genomes at various taxonomic distances help to study their features. in this paper, we describe how to assemble all these synteny data in a relational database  and we develop a tool  to visualize all conserved synteny blocks in a large number of completely sequenced prokaryotic genomes.

implementation
synteview was designed to display homology and gene context data that are organized in a relational database, syntebase, described in detail below.

creating a relational database for synteny data and populating its tables with a dedicated suite of softwares and other tools
we installed postgresql  <cit> , one of the most advanced open source relational database management systems, on a linux platform and used it to create syntebase, which is made up of five tables . the database can be further populated with home-made data using the different tools we developed . alternatively, one can directly use the syntebase version we built for our own usage .

step one: searching for homologues
raw data extracted from public genomic databanks  were organized into two tables. the genome table contains information for the  <dig> prokaryotic genomes that were compared. the gene/protein table contains many features of their  <dig> , <dig> encoded proteins, such as amino acid sequence, length, species name, location of encoding gene, etc. an exhaustive comparison of all these proteins led to the identification of all homologues. a complete suite of programs  was used to compare each pair of proteomes using the following criteria: a pair of aligned proteins was retained as a couple of homologues if their e-values were smaller than 10- <dig>  and if the alignment extended for at least 80% of the length of the shorter matching protein  <cit> .

step two: identifying orthologues among the collected homologues
we further adapted the reciprocal best blast hit approach  <cit>  to analyze the blast results obtained in the first step. the best rsd orthologous pairs were determined in each comparison of two proteomes as follows. protein a encoded by genome ga and protein b encoded by genome gb form the best pair of orthologues if the distance separating a from b is smaller than the distance separating both a from any other protein encoded by gb and b from any other protein encoded by ga. we automated this search . the data obtained were used to populate the ortho table .

step three: identifying positional orthologous genes among the collected orthologues
once populated, the first three tables were used to identify the synteny blocks. we devised a specific sql query  to discover the pairs of adjacent orthologous genes . then, blocks of size greater than  <dig> were detected by progressive accretion of blocks of size  <dig> which shared a common pair of orthologues . these computed data were entered in the neighborpairs and synteny blocks tables, respectively .

architecture of synteview
to implement synteview, we applied an object oriented programming paradigm using the java programming language  <cit> . in this way, synteview may be run either as a java webstart application or as a local application . in both cases, synteview can be used to query syntebase through a web service , or used to query a local synteny database . the web service mode allows the user to visualize the precomputed data that are present in our version of syntebase. to do so, synteview connects to the synteview web service to retrieve synteny data present in syntebase. the local access mode will be useful for those who wish to work online, with home-made computed data. this mode requires the local installation of the data base management system postgresql  <cit> , and the creation of a committed syntebase-like database that must be populated with home made synteny data after applying the following mandatory requirements to visualize these data. synteview requires information on proteins , genomes , and synteny blocks . note that it does not matter how the data are organized in the underlying local database. synteview parameters can be set to retrieve the data it needs. however, while synteview is independent of the name of the selected fields, their order is of importance for correct functioning. components required to set up a local database are described in detail in the additional file  <dig>  once the custom-made database has been built, synteview can connect to it, after the settings, including connection information  and all the mandatory queries have been filled out.

RESULTS
visualizing synteny data with synteview
the whole set of synteny data that was stored in syntebase was further examined using synteview. this tool was designed to provide a wealth of information on each positional orthologous gene, to be user-friendly and customizable. for example, the user can choose the set of genomes to be studied by defining either an array of species names or a taxonomic sampling. the procedure used to visualize synteny between a reference species s <dig> and a set of species  is straightforward. the user first chooses a reference species, in the "select reference genome panel" by selecting nodes in the species tree . clicking on a node produces a list of all the species that are its leaves . then, the reference species is chosen by clicking on the species name in this list. next, the set of compared species is determined by means of the "select compared species" tab . as previously noted, the user browses the taxonomic tree of prokaryotes. when the user clicks on one node of the tree , all the descendants of this node appear in the bottom panel. to choose one or several species, a drag and drop of the selected names will move the corresponding species into the right panel. this can be repeated several times, until the required set of species is selected. when this step is accomplished, clicking on the "start data retrieval process" button on the bottom of the panel will launch the visualization step. the speed of this process depends on the number and nature of the chosen species. once the retrieval process is completed, all regions of each compared genome become accessible for visualization in a scrollable window using the following features as shown in fig.  <dig>  each line corresponds to a genome. the first line from the top  shows gene adjacency in the chromosome of the reference species. dark blue  and yellow  rectangles stand for genes belonging to a synteny block that is conserved in at least one other species. gray rectangles are genes of this reference genome that do not have any pogs in the set of compared genomes. respective gene names are labeled on each rectangle. the following lines contain the different species that are compared to the reference genome. synteview automatically sorts the chosen species by their taxonomic proximity to the reference genome. for each gene of the reference genome, columns contain the orthologous genes belonging to a synteny block found to be conserved in the different analyzed genomes with their respective names. the same color code  helps to discriminate the strand of their respective location on each genome. the number of genes present in a block is displayed when the cursor is run over this block. note that synteny blocks in compared genomes are defined exclusively with respect to the gene order in the reference genome. thus, in a synteview window of synteny blocks, the apparent proximity in compared genomes does not imply that they are as physically close in these genomes as their pogs are in the reference genome. by opening the settings panel  the user accesses a dialog box where it is possible to modify various default parameters. for example, clicking on the "database" tab allows the user to choose the retrieval mode . once these various parameters have been customized, it is possible to navigate along the reference genome to estimate the density of the synteny blocks present in the other genomes. for example, and as expected, comparing e. coli with the other gammaproteobacteria reveals a rather high density of gene conservation. the bottom blue background shape portrays this rate of conservation in the compared genomes as a histogram .

using synteview for comparative analysis of gene context
information about any annotated gene is immediately available by clicking on the corresponding rectangle. this opens, to the left of the window, the "gene information" panel  in which, for the selected gene, its genbank pid, its name, the species name and the replicon to which it belongs are given; the function of its product , and its exact location on the chromosome are also mentioned. this information panel also contains a text field which permits simple queries such as a search for a protein function, a gene name or a pid in the analyzed genomes, as well as a search for synteny blocks containing at least x adjacent genes and having orthologous genes in at least y species. moreover, clicking on a gene delivers complete information on its neighbors. for instance, it is possible to estimate the various levels of conservation of detected operons when comparing organisms separated by various taxonomic distances. while the operon histidine is rather well conserved in proteobacteria , the neighboring clusters of genes involved in the o-specific lipopolysaccharide biosynthesis  and the production of extracellular polysaccharide colanic acid , which are located at a short distance and on the other strand, are rapidly fragmented to a scarce number of 2– <dig> genes such as the rml genes in pseudomonas aeruginosa . in addition, clicking on the "get sequences" button in the information panel opens a dialog box. synteview shows the sequence of the clicked gene in the first tab and that of its orthologues in the second tab in fasta format. this further allows downloading of all these amino acid sequences for future work.

using synteview for comparative analysis of multiple views
synteview was also designed to allow complex studies by means of easy and simple operations. for example, looking at a peculiar set of species makes it possible to immediately visualize new assortments of synteny blocks. this is done simply by selecting a new reference species by clicking on a species name on the left of the display and/or by changing the list of compared genomes. moreover, contrary to challenging tools , synteview allows global analyses of the synteny data using various points of view. scrolling up and down the same window, one can assess the level of conservation of gene order at various taxonomic depths, the relative density of the synteny blocks along the whole genome, the relative size of the blocks, and the respective events of gene insertion/deletion in close and distant species.

using synteview to quantify synteny data
besides being a visualization tool, synteview can display various kinds of histograms which are computed on-the-fly. for example, the percentage of species displaying pogs in the same synteny block in the reference species is automatically computed and displayed as a histogram . it is also easy to display the distribution of the size of synteny blocks which are conserved between genomes by selecting a pair of species and clicking on the histogram button in the left toolbar. this histogram may be saved for further use by selecting the "save as" button located in the contextual menu in the window. table  <dig> summarizes the data obtained when comparing the model organism bacillus subtilis with various bacteria and archaea. it appears that the number of genes present in conserved synteny blocks depends on the phylogenetic  distance between species. indeed, the mean size of synteny blocks is close to  <dig>  genes when comparing two closely related bacteria such as the bacillaceae b. subtilis and oceanobacillus iheyensis, whereas it diminishes to nearly  <dig> when comparing a bacterium  and an archaeon , although these genomes encode a similar range of proteins . likewise, the longest block ranges from  <dig> to  <dig> for the same species comparisons.

the average size  of synteny blocks is dependent on the taxonomic distance separating a pair of genomes that have been compared at the level of their genetic context.

a the size of the b. subtilis proteome is  <dig> 

discussion
synteview was designed to allow fast and easy visualization of the conservation of gene adjacency in many genomes for which orthology and neighborhood data were computed and stocked in a dedicated relational database syntebase. our goal was to develop a flexible yet powerful tool to work directly with home-computed data obtained after comparing large and diverse sets of species. indeed, our tool can be easily installed on any personal computer endowed with one of the main operating systems . moreover, synteview can be customized in many aspects. in particular, it can be used with another, home-made, database in place of syntebase. we observed that among the other tools to visualize synteny data  <cit>  that have been designed to be locally installed, not one is adapted to the use of the abundant genomic data for prokaryotic species. contrary to these previously published softwares  <cit> , synteview allows the user to compare the gene order in many different genomes in the same window. finally, the strict relationship between syntebase and synteview allows their user to enlarge the study of gene order by means of specific queries on syntebase. in addition to the visualization of synteny blocks, it is possible to obtain productive information through various requests such as "how many genes are involved in a neighbouring relationship, for each pair of genomes?"

CONCLUSIONS
we anticipate that we will be inundated by thousands of completely sequenced genomes in the next few years  <cit> . our tool syntebase/synteview has been designed to support such large sets of prokaryotic data. this tool will serve to quickly evaluate the conservation of gene order in newly-published genomes as soon as they have been compared to those already analyzed.

availability and requirements
• project name: synteview/syntebase

• project home page: 

• operating system: windows, linux, macos x 

• programming language: java

• other requirements: java  <dig> 

• license: gnu gpl

• any restrictions to use by non-academics: none

• perl scripts: available on request

abbreviations
pogs: positional orthologous genes; rsd: reciprocal smallest distance; sql: structured query language.

authors' contributions
fl wrote the different programs necessary to collect all synteny data and to build up the relational database and the visualizing tool. he is responsible for the website. the three authors participated in the design of the experimental approach, the conception of the tools, and the data analysis. together, the three authors wrote this manuscript.

supplementary material
additional file 1
synteview user guide. this guide helps the user in 1) installing synteview, 2) using synteview, 3) adapting syntebase/synteview to his/her own purposes. it is available at 

click here for file

 additional file 2
sql query computing pogs. this file contains the sql query for computation of pogs using syntebase. the main idea is to join the ortho table with itself, and to take only the tuples which form a gene quadruplet where each vertical pair is made up of orthologues and each horizontal pair consists of adjacent genes in their respective genomes.

click here for file

 acknowledgements
fl is a phd student supported by the french ministry of research. this work was funded by the cnrs  and the agence nationale de la recherche . we gratefully acknowledge stéphane descorps-declère for his help in designing the genome comparison pipeline and mary bouley  for her aid in improving the quality of our manuscript.
