BACKGROUND
the proliferation of pathway databases--e.g., kegg  <cit> , wikipathways  <cit> , biocyc  <cit> , and mousecyc  <cit> --are useful for understanding the relationship between genes, proteins and other molecules in living organisms. however, the effectiveness of these databases is hindered by issues such as incompatible data formats, inconsistent molecular representations, inconsistent molecular relationship representations, inconsistent referrals to pathway names, and incomprehensive data from different databases. these difficulties call for an effective integration of these databases.

there are many approaches to integrate pathways. for example, pathway commons and pathcase  <cit>  can be considered as taking the "aggregator" approach. in this approach, a common access method and data format are adopted or developed for a set of pathways imported from a collection of source databases. the aggregator approach does not perform any unification of the underlying pathways--viz., if n source databases each contains information on a particular pathway, that pathway is presented by the aggregator as n separate pathways. on the other hand, genmapp  <cit> , cytoscape  <cit> , and pathvisio  <cit>  can be considered as taking the "converter" approach. basically, these tools support the import and export of biological pathways in a variety of formats, even though these tools are designed mainly for exploring, visualizing, and editing biological pathways. lastly, pathwayapi  <cit>  can be considered as taking the "full unification" approach. in this approach, pathways in different source databases that are meant to represent the same pathway are merged and molecular objects mentioned in the different source pathways that are meant to represent the same objects are matched. this approach is technically more difficult than other approaches; but it has the advantage of presenting a more coherent and comprehensive view of the pathways.

very recently, stobbe et al.  <cit>  compared the genes, ec numbers and reactions of five frequently used human metabolic pathway databases. they found that the overlap between these databases is surprisingly low. more importantly, their results show that each of the five networks compared provides a valuable piece of the puzzle of the comprehensive reconstruction of the human metabolic network. this discovery is a strong motivation for the "full unification" approach mentioned above. stobbe et al. further suggested that, for an effective integration, one needs to standardize the metabolite names and identifiers and to resolve the conceptual differences between the databases.

besides the databases that focus specifically on pathway data integration, some protein functional interaction databases have also extended their collection to pathway data. for example, consensuspathdb  <cit>  integrates different types of functional interactions from heterogeneous interaction data resources and pathway databases for three organisms.the distinct difference in their primary focus results in an obvious difference between consensuspathdb and intpath. consensuspathdb collects pathway data from many databases but dose not appear to produce integrated pathways--even when the same pathway is present in different sources, they are still listed individually without merging. how to merge the different instances of the same pathways among and within the source pathway databases is the major concern of intpath. unlike consensuspathdb, intpath mainly focuses on the integration of pathway-gene and pathway-gene pair relationships, with the aim of solving the problem of inconsistencies and incomprehensiveness among different pathway databases. the definition of "gene pair" in this paper is the gene-gene relationship in pathways, the relationship type of the two components in each gene pair is described in table  <dig> 

explanations of the types of relationships in intpath are given below.

in this paper, we take this full unification approach in building intpath, the integrated pathway gene relationship database for model organisms and important pathogens. this approach was also taken earlier by soh et al.  <cit>  when they integrated general human pathways into pathwayapi. intpath differs from pahtwayapi in several aspects. in terms of content, a different set of databases and multiple organisms are considered in intpath. in terms of data extraction, intpath extracts all pathway data directly from the xml files of each source database and the whole process is highly automated. therefore, intpath provides integrated and unified pathway information on a much larger set of organisms and it can be extended to include many other organisms in a short time. in contrast, pathwayapi integrated only human pathways. also, for all the organisms included in intpath, a regular update of each organism can be maintained. in terms of pathway data integration, intpath not only looks for related pathways between databases but also within each source database; this integration approach provides more unified, meaningful and comprehensive integrated pathway-gene and pathway-gene pair relationships information. in contrast, pathwayapi only looks for related pathways between databases but not within the same source database. moreover, intpath also provides more features and tools. it not only supports web service but also a full-featured web interface. more analysis tools based on pathway data have been provided--like "analyze distance" and "identify pathways"--and more analysis functions and tools will continue to be added on intpath in future releases.

the incompatible data formats of different databases seriously inhibit effective and compatible information retrieval. in kegg, pathways are represented in kgml format and soap . in wikipathways, pathways are represented in gpml format; recently it begins to support web service  <cit> , allowing users to access the data through api calls; and the biopax format is also supported. in biocyc and mousecyc, the pathway data are primarily represented in the biopax format. in intpath, we overcome this limitation by extracting the pathway gene relationships from these different databases and convert these various complicated xml-based formats into simple tab-delimited text files.

inconsistent molecular representations significantly lower the effectiveness of pathway information retrieval. different databases maintain different naming conventions on the nodes of their pathways. in kegg, the names of the nodes  in the pathways can be kegg entry name, kegg ortholog  id, etc. the graphic names on kegg pathway map can be gene symbol , enzyme commission  number, etc. in wikipathways, the nodes' "textlabel" are given gene symbol , gene name, protein name, ec number, etc. in most cases the nodes can also be given entrez id, ncbi accession, ensembl gene id, ensembl protein id, uniprot assession, etc. and some times nodes in wikipathways are only given "textlabel" without any database reference id. mousecyc  <cit>  mainly uses mgi id and also includes the corresponding gene symbol, uniprot accession, etc. biocyc  accession number is mainly used to represent nodes in the pathways while corresponding gene symbol, gene name , entrez id, and uniprot accession number are sometimes included. inconsistent molecular relationship representations may also cause confusion when referencing pathway information from different repositories. in kgml , the relationships between molecules are represented as pprel, ecrel, pcrel, gerel, etc. in gpml , the relationships can be inhibition, activation, protein complexes, enzyme complexes, acetylation, phosphorylation, etc. in biopax , when transformed into the sif format, the relationships can be sequential_catalysis, co_control, interacts_with, in_same_compont, metabolic_catalysis, etc. these inconsistencies cause troubles for researchers wishing to refer to pathway information in a large-scale manner across different databases. therefore, some normalization technique is needed to convert the nodes and edges from different pathways in different repositories into a common representation. in intpath, we overcome the above two limitations by normalizing the pathway gene representations and gene relationship representations from different databases into unified intpath gene and relationship representation. the unified intpath gene id for homo sapiens is hgnc symbol, mus musculus is mgi symbol, saccharomyces cerevisiae is systematic name, and mycobacterium tuberculosis h37rv is tuberlist rv number. the unified intpath gene relationship representations are listed in table  <dig> 

inconsistent referrals to pathway names are another source of confusion that substantially reduces the effectiveness of retrieving information on the same pathway from different databases. for instance, kegg may refer to a pathway as "glycolysis/"gluconeogenesis", and wikipathways may name it as "glycolysis and gluconeogenesis". for another example, wikipathways contains a pathway with the name "cholesterol biosynthesis", while biocyc has many corresponding pathways such as "cholesterol biosynthesis iii ", "cholesterol biosynthesis ii ", "cholesterol biosynthesis i", and "superpathway of cholesterol biosynthesis". therefore, a unified pathway naming system may reduce the confusion when referring to the same or similar pathway information from different databases.

furthermore, the comprehensiveness of data from different databases is another limitation of these pathway databases. by the term "incomprehensiveness", we mean that each single biological database is not a comprehensive representation of biological knowledge that is considered by experts to be accurate  <cit> . we reveal the incomprehensiveness of current databases via analysis on the agreement of the common pathway between these different databases. in intpath, these inconsistencies and incomprehensiveness issues are solved by the integration approach.

data
we choose several representative data sources--kegg  <cit> , wikipathways  <cit> , biocyc  <cit> , and mousecyc  <cit> --for our analysis and integration. these data sources are selected because they are representatives of very different kinds of curation efforts. currently, the following organisms are included in our intpath database : homo sapiens, mus musculus, saccharomyces cerevisiae and mycobacterium tuberculosis h37rv. for each organism included in intpath, the pathway data are collected from three representative databases:  <dig>  kegg;  <dig>  wikipathways;  <dig>  one of the following four databases--yeastcyc, humancyc  <cit> , and mtbrvcyc from the biocyc collection  <cit> ; and mousecyc  <cit> . the four pathway/genome databases --mousecyc, yeastcyc, humancyc, mtbrvcyc--are generated and recorded in a very similar way, but the pgdbs of different organisms are maintained and curated by different groups.

mousecyc is curated by the jackson laboratory; it is a new, manually curated database of both known and predicted metabolic pathways for the laboratory mouse  <cit> . yeastcyc is a tier- <dig> pgdb from the biocyc collection  <cit> ; it is curated by sgd curators in stanford university. pgdbs in tier  <dig> have received more than one year of literature-based curation by scientists. mtbrvcyc and humancyc  <cit>  are tier- <dig> pgdbs from the biocyc collection; they are generated by the pathologic program and received moderate curation . wikipathways is maintained by a community of users via a wiki-style platform  <cit> . kegg database is curated independently by a single lab from published literature  <cit> .

methods
extraction and normalization of pathway-gene and pathway-gene pair relationships
the first step of extracting information from pathway databases is downloading the xml files. to automatically download the hundreds of kgml files of each organism on the kegg ftp site, we use a simple spider program written in perl. for biocyc and mousecyc, the biopax files--and for wikipathways, the gpml files--are compressed into a single package which can easily be downloaded manually.

extracting the pathway-gene and pathway-gene pair relationships from kgml is accomplished using an in-house java program, which extensively uses regular expressions to retrieve specific information from the kgml files. a kgml file consists of entries like "</entry>", "</relation>" and "</reaction>"; in each entry there is either entry information of the nodes , groups  or relationships . using regular expressions we can specifically obtain the genes of each pathway and the relationships between each gene, and then link these genes according to the relationships. for genes belonging to complexes , the binary gene pairs are generated based on the matrix model.

an alternative way of retrieving kegg pathway genes and gene pairs is by calling the kegg api, which enables users to easily use their programs to get access to the kegg database. however, the api is not well updated  <cit> . the kegg api does provide a function that can retrieve gene relationships from this database, though the results returned are kgml entry ids, not exactly as we have wanted. although calling the kegg api would work in theory as described in  <cit> , we turn to mining kgml directly and achieve the same good results.

extracting pathway-gene and pathway-gene pair relationships from a gpml file is also accomplished using a strategy similar to mining kgml files. mining a gpml file is much more difficult due to its wikistyle; and there are slight variations among individual gpml files even in the same organism, like some key tags may be in upper case in one file but lower case in another, random insertions of whitespace character, etc. due to these variations, the regular expressions used for performing the extraction must be very robust. in gpml files, the information of genes and proteins are stored in a "</datanode>" entry where, if the node is a gene or protein, the type of the entry is set to "geneproduct". the information of relationships  are stored in a "</line>" entry. the linkage of "</datanode>" entry and "</line>" entry is mainly accomplished by their "graphid". a "</line>" entry usually records which two "</datanode>" entries it links to through the records of two corresponding "graphid" of the "</datanode>" entries. using this information we can retrieve the relationship of two genes linked by a "</line>" entry. this relationship--like inhibition, activation, etc.--can be regarded as equivalent to the "pprel" relationship in kgml.

if the genes belong to certain complexes , their "groupref" id are recorded in some "</datanode>" entries; and genes with same "groupref" id are in the same group . all possible pair-wise relationships among members of a group are generated based on the matrix model. these relationships, derived from such a group, are mainly binary relationships among members in a protein complex or enzyme complex. they can thus be regarded as equivalent to the "group" relationship in kgml. this strategy works well for most gpml files; but, for some individual files, there is simply no "graphid" in the file and, only positional information of each entry is recorded. this causes difficulty in retrieving the corresponding gene relationships. attempts have been made to retrieve the pair-wise relationships based purely on the positional information; but these attempts also introduce a substantial amount of noise. therefore we do not use this noisy information.

retrieving gene relationships from biopax files is mainly by using the paxtools java programming library  <cit>  in combination with our own simple java program. by transforming a biopax  file into the sif format, we get both a node file and an edge file. then a simple node mapping is made to retrieve gene relationships. these pair-wise relationships have no indication of the source pathway name. we need to map these relationships to their corresponding pathways. mousecyc and biocyc provide a file that clearly records all the genes in each pathway. using this information, we are able to map the gene relationships to their corresponding pathways.

converting the relationship of genes in complexes  into binary gene pair relationships may not be the most ideal format for some users, who wish to refer to the original protein complexes information in pathways. for kegg and wikipathways we also maintain a "group-gene list" which specifically retains the original format of genes in the groups. the groups in this "group-gene list" are not integrated, as we have done for the pathway-gene and pathway-gene pair relationships, since maintaining this "group-gene list" is mainly to prevent information loss and to give users more precise original information that may not be easily reconstructed from the integrated pathway-gene pair relationships. we normalize the gene ids in the "group-gene list" to intpath unified gene ids and store the list in a simple text file. users can download this list along with other pathway-gene and pathway-gene pair relationships in the form of compressed text files from intpath.

normalization of gene names is done using gene id mapping files downloaded from a variety of databases including ncbi  <cit> , kegg  <cit> , uniprot  <cit> , hgnc  <cit> , mousecyc  <cit> , biocyc  <cit> , and biomart  <cit> . the gene relationships from different databases are mapped to the intpath unified relationships listed in table  <dig> 

evaluation of normalized pathway genes and gene pairs from different databases
after we have obtained the pathway-gene and pathway-gene pair relationships from different pathway databases, agreement among the databases can be analyzed. these agreement analyses are crucial for the downstream applications of intpath. we examine the agreement among the different pathway databases in three aspects:  agreement of genes and gene pairs in different databases,  agreement of the pathways in different databases, and  agreement of genes and gene pairs of the same pathway in different databases.

after normalization the statistics about pathway number, gene number and gene pair number in each of the source databases can be found in table  <dig>  to calculate the agreement of genes and gene pairs in different databases, we obtain all the non-redundant genes and gene pairs  in different databases. we then calculate how many genes and gene pairs are common between two databases being compared. the jaccard coefficient between two datasets being compared is calculated. results are shown in the form of pie charts in figure  <dig> and  <dig>  the detail statistics are listed in table  <dig> and table  <dig> 

summary of the number of pathways, genes, and gene pairs after normalization from different databases.

summary of the number of overlap genes, number of unique genes, and jaccard coefficient among three representative databases.

summary of the number of overlap gene pairs, number of unique gene pairs, and jaccard coefficient among three representative databases.

to analyze the agreement of the pathways in different databases, we only look at the pathway names in different databases, and calculate how many pathways two databases have in common. to find similar pathway names, we implement a "longest common substring" algorithm. our program can detect similar pathway names very accurately; detailed techniques will be explained in the following section. in this analysis we only search the related pathway between databases rather than within databases. the results are presented in figure  <dig> 

the two experiments above are analyses at the database level. next, to analyze--at the pathway level--the agreement of genes and gene pairs of the same pathway in different databases, we calculate the overlap of the genes and gene pairs in the chosen pathway in different databases. the results are summarized in table  <dig> 

this table shows the calculation of gene/gene pair differences and overlap between the different source databases for the same chosen pathways.

integration of pathway-gene and pathway-gene pair relationships
from the analyses above, we realize the lack of comprehensiveness and consistency of different pathway databases at both the database level and the pathway level. hence, we should use the integrated information from all the databases rather than rely on any single source. the inconsistent referrals to pathway names further strengthen the necessity of integrating the pathway-gene and pathway-gene pair relationships from different databases into one unified and comprehensive information source.

to find all related pathways both among and within databases which have inconsistent referrals to pathway names , we implement a refinement of the longest common substring  algorithm to identify related pathway names. lcs was shown by  <cit>  to be superior for identifying related pathways in different databases, compared to approaches based on large overlap of genes and interacting gene pairs.

the common lcs algorithm based on dynamic programming works like this: when comparing two strings, the more similar they are, the higher alignment score they have. in our program, the alignment score is the number of aligned characters. we also compute the alignment ratio, which is two times the alignment score divided by the sum of the length of the two strings. to identify the related pathway names in two databases' pathway name lists , we iterate each name in the list x and search against all the names in the list y; for each name in x, we report the best hit in y. "best hit" means that, for each name from x, when searched against all the names in y, the one that gets the highest alignment ratio is reported as the best hit for this round. we do not use the alignment score to report best hits because the alignment ratio proves to perform better. this is because some related pathway names do not have very high alignment scores due to the short length of two strings, but the similarities of the two strings can be revealed accurately by the high alignment ratio when compared to other not-so-similar long strings in a single round of search. for example, suppose the name xa is very short and is searched against the name list y. suppose there is a very similar short name y a which aligns all characters in xa except one character. suppose there is also a very different but long name y b which aligns all characters in xa. it is obvious that the alignment score xa - ya is lower than the alignment score xa - yb, while the alignment ratio of xa - ya is the higher of the two. thus using the alignment score to report the best hit is not as good as using the alignment ratio.

from many background experiments, we realize that relying only on best hits can result in some noise, since many pathway names in the list x may not have any related pathway names in the list y. our strategy is to introduce more stringent requirement to increase the precision of the reported best hits. we require that either of the following two additional  conditions to be satisfied:

 <dig>  alignment score >the length of shorter string -  <dig> & alignment ratio >=  <dig> , or

 <dig>  alignment ratio > <dig> 

combined with this additional requirement, our program achieves high precision and recall in identifying related pathway names. nevertheless, a small number of pathways which do not describe the same pathway, but have very similar names, are still incorrectly identified by the methods described above as related pathways. "vegf signaling pathway" and "egfr <dig> signaling pathway", "t cell receptor signaling pathway" and "b cell receptor signaling pathway", etc. are examples of this kind of mismatches. our approach to solve this problem is by using a "error-prone words pair list" to filter potential mismatches. for example, if in a candidate related pathway pair, one pathway name has one partner of an "error-prone words pair" and the other pathway name contains the other partner in the "error-prone words pair", this pair of candidate related pathways is discarded by our program. this approach successfully gets rid of mismatched pathways without compromising the identification of related pathways. although a little manual curation is needed for initializing the "error-prone words pair list", the curation work load is much less after the first time, since only a few changes or supplementations of "error-prone words pair list" are needed when processing different groups pathway names. moreover, it is suitable for many different pathways in different organisms.

we run our program to compare pathway names within each database and between the databases. after obtaining all the related pathways, our program uses a disjoint set data structure to store all the identified related pathways and then groups together all the related pathways under a general pathway name. the general pathway name is chosen as the shortest pathway names from among the identified related pathways. the shortest pathway name is usually suitable to be the name of the integrated pathway. however, in some cases, the shortest name contains "suffix" or "prefix"--like "i", "ii"--that causes the integrated pathway name to give the wrong idea of describing only a specific aspect of the integrated pathway. so our program removes such suffixes and prefixes when generating integrated pathway names. in addition, there are also a small number of cases where several similar pathways are included in one pathway name--an example is shown in the last row of table  <dig>  in these cases, the shortest name is not appropriate as the name of the integrated pathway. for these small number of cases, we replace the keyword of the integrated pathway name to cover more pathway information. after all the processing steps described above, we can be sure that the integrated pathway names in intpath is correct and accurate. the numbers of identified related pathway names are listed in table  <dig>  the number of pathways, average number of genes per pathway, and average number of gene pairs per pathway in each database, before and after this integration, is given in table  <dig> 

the table shows several examples of the same pathways with inconsistent referrals to pathway names in different databases.

summary of the number of identified related pathways within and among databases.

the table below shows the number of pathways from major pathway databases before and after integration.

intpath web interface and web service
intpath is developed using jsp and mysql. the web service is created and published using axis <dig> 

RESULTS
extraction and normalization of pathway-gene and pathway-gene pair relationships
in order to overcome the limitation of incompatible data formats, we directly extract from the xml files  of each pathway database and obtain the gene relationships. to deal with inconsistent molecular representations, we normalize the gene representations into a unified gene id. the intpath unified gene id  is compatible with the gene names used in most public repositories. a summary of the number of pathways, genes and gene pairs from different databases after normalization is given in table  <dig>  to tackle inconsistent molecular relationship representations, we also normalized the relationships of different databases into the intpath unified relationship types as shown in table  <dig> 

evaluation of normalized pathway genes and gene pairs from different databases
after obtaining the normalized pathway-gene and pathway-gene pair relationships, we are able to analyze the comprehensiveness and agreement among the different pathway databases on different aspects.

the results from analyzing the overlap of genes and gene pairs in different databases are presented in pie charts in figures  <dig> and  <dig>  the detailed statistics are summarized in tables  <dig> and  <dig>  these results prove that the overlap of genes and gene pairs in different databases are very low. this result is in accord with similar experiments done on human pathway databases  <cit> .

from the results on the overlap of the pathways in different databases we can see there is also a strikingly low overlap of pathways among the different databases; see figures  <dig>  this demonstrates the obvious low level of comprehensiveness in the databases analyzed, also in accord with the experiments on human pathway databases described in  <cit> .

zooming in from the database level to the individual pathway level, we analyze the agreement of genes and gene pairs of the same pathway in different databases. the results are listed in table  <dig>  the agreement of different databases at the pathway level is also not as high as we expected , which proves the low level of consistency between these databases on the same pathway.

the comparative analyses from the above three aspects clearly exhibit the incomprehensiveness and inconsistency among the pathway databases. this suggests that the integration of the extracted and normalized information from different databases into a unified and comprehensive resource is very necessary.

integration of pathway-gene and pathway-gene pair relationships
the results above demonstrate that relying only on a single source of pathway information from any of the databases is not reasonable. moreover, we have also discovered the problem of inconsistent referrals to pathway names. table  <dig> lists some examples of the same pathway under inconsistent names in different databases. those are just a few typical examples; there are many pathways with similar situations which need to be properly addressed. therefore, it is of great necessity to integrate all the pathway-gene and pathway-gene pair relationships from different databases into a comprehensive and unified source.

in the integrated pathways, all the related pathways with inconsistent names should be merged.  the inconsistent referrals to pathway names are partially caused by the different levels of emphases on the same pathway in different databases. one database  may emphasize on some very specific aspects of a certain large pathway; so this large pathway is broken up in this database into different pathways with similar/related names, yet all describing the detailed aspects of the original large pathway; see table  <dig>  however, the other two databases may emphasize on a more general level and, therefore only use a general and often shorter pathway name. when merging pathways from different databases into integrated pathways, we should unify the different levels of emphases. we decide to choose a more general level rather than a detailed level.  when merging the same pathways with different levels of emphases in different databases, if we have already merged one detailed-level pathway into a general-level pathway, all other related detailed-level pathways in the databases should be merged into this general-level pathway. after merging all the related pathways we should use a general pathway name  to represent the integrated pathway.  the distinct differences between our integrated pathway gene relationships and conventional pictorial pathway map indicate a more general level is suitable. we are primarily focusing on gene relationships, but not on other the relationships in the pathways  in this version of intpath. this emphasis results in less enthusiasm on the detailed level of individual pathways, and we lack sufficient information  to emphasize on the detailed level in most cases.  the common problem of gene relationships is the sparseness in each pathway; and putting emphasis on the detailed aspect of certain pathway could render the data in a single pathway too sparse to be useful.

for the reasons listed above, we should merge all the related pathways under the same general name into one comprehensive pathway . and after merging, we should use the general pathway name which is usually the shortest name among all the comparing pathway names.

the results of identified related pathways both within and among databases are summarized in table  <dig>  from the number of related pathways within databases, we find biocyc and mousecyc emphasize more on the detailed aspect of pathways; therefore, more related pathway names are identified. in intpath, all the related pathways within and among databases are grouped together with the integrated pathway name. the number of pathways, average number of genes per pathway and average number of gene pairs per pathway, before and after integration, in the four intpath included organisms are given in table  <dig>  the statistics listed in table  <dig> clearly show that in integrated pathways there is a significant increase of average node degree , which means significant increase of gene relationships of each gene on average in the integrated pathways. there is also a considerable increase of average no. of gene pairs per pathway in the integrated pathways, which indicates richer gene relationships on average in each pathway. in some sense, the integration approach partially solves the sparseness of pathway-gene relationships in mousecyc and biocyc.

we accomplished in intpath the integration of pathway-gene and pathway-gene pair relationships, achieving compatible data formats, consistent molecular representations, consistent relationship representations, consistent referrals to pathway names and comprehensive data.

intpath web interface and web service
the web interface of intpath comprises the following parts: home, gene list analysis tools , api toolkit, statistics, tutorial, and download. in order to facilitate convenient access of intpath data through local programs, the api functions are also supported by intpath web service. an overview of the intpath system is shown in figure  <dig>  the core functions of intpath are represented in figure  <dig>  an explanation of each part is given below.

home: it is to introduce the objective of intpath, what the major contribution of this database is and what the specific problems that we wish to solve through this database are. we also indicate the analysis tools supported in this database, the publications related to these analysis tools, and which species are currently included in our database. this home page of intpath is a summary of the general information of the database.

identify pathways: the function of "identify pathways" uses the hyper-geometric test to find the most significant pathways given an input gene list. through this tool, users can have a clear insight of which pathway is most related to the input gene list. for each result returned, details like p-value are also given.

analyze distances: the function of "analyze distances" is to tell the similarities between the two input gene lists from a pathway perspective. to perform the distance analysis, first the hyper-geometric test is used to find the most significant pathways of the two input gene lists, then the floyd-warshall algorithm is used to calculate the "distances" between the two pathways. string ppi datasets  is used in the distance calculation between two pathways in the current version of intpath . the "distances" provide a reference in telling the relationships between two specific pathways, and it can be very useful, e.g., in identifying how "far" it will take for a normal pathway to transform into a diseased pathway. for a detailed explanation of "analyze distances" and its application in biomedical research, please refer to methods described in  <cit> .

statistics: this statistics section gives users an overall insight of intpath. users can easily get the following statistics: number of genes, number of gene pairs, number of integrated pathways, number of original kegg pathways, number of original wikipathways pathways, number of original biocyc pathways, and number of source databases. the default option is "all statistics" which displays all the statistics listed above.

api toolkit: we provide powerful as well as flexible api functions of our intpath database. users can both call the api functions using their local programs through intpath's web service or using api functions by directly retrieving information through intpath's web interface. the following api functions are supported, getgeneid, getdbpathways, getpathway, getpathwaygenes, getgenepathways, getpathway-interactions, getpathwaydifference, getintpathgenes, getintpathgenepairs and getintpathpathways. the explanation and user guide of each api function can be found in the tutorial page.

download: some users may have other requirements of data analyses that are not met by intpath in the current version. some users may also have different application purposes of intpath. to cope with a variety of needs, we release all our intpath data in this "download" section, where users can obtain all intpath data in two different formats:  text format , this compressed package includes three text files,  the integrated pathway-gene relationships,  the integrated pathway-gene pair relationships and  the normalized group-genes list; and  sqldump format , which is based on the integrated data we have prepared and stored in  <dig> tables in each sqldump .

discussion
comments on wikipathways
the "wiki-style" of wikipathways makes this database more casual than other databases. it is good for the community to freely maintain and share knowledge through wikipathways. on the other hand, it causes many problems for automatic information retrieval. one of the limitations is the slight inconsistency among the formats of gpml as mentioned before--some key tags can be upper or lower cases. gpml is more different from other xml formats. gpml emphasizes more on pictorial information; therefore, most of the objects on the file are more likely to be recorded for their positional information. worse, some gpml files even do not have a "graphid" record; and for these gpml files, whole information of certain pathways is given by the positional information on the pathway map. for these gpml files, judging the relationships between two genes is solely dependent on the positional information. it may be easy for the human eye to look at the pictorial format of the pathway map; but it is hard for computer programs to retrieve accurate information automatically. attempts on spatial clustering have been made. but these attempts also introduce a substantial amount of noise. therefore we decide to discard this noisy information at the current stage.

recently, wikipathways begins to support web service and biopax. we have tried solving the problem mentioned above using wikipathways web service and directly extracting from biopax format; but no improvement has been achieved.

web service has not solved the problem of those gpml files that do not have "graphid" record. for example, our program fails to extract reliable gene relationships from the pathway "mm androgen receptor signaling pathway wp252_35669" by calling the wikipathways api function "find interactions". it is supposed to find interactions defined in wikipathways' pathways. in our experiments, it works in finding interactions in other pathways. extensive experiments have been made using different ways to call the "find-interactions" function. yet nothing related to the wp <dig> pathway is returned. on the png graph we can see there are lots of interactions in this wp <dig> pathway. these kinds of experiments have been attempted many times on several pathways. all have failed to find the "interactions" or gene relationships in the specific pathways that lack "graphid" entry.

we turn to biopax files which have recently been supported on wikipathways for a solution. we specifically run our program on the pathway biopax files whose corresponding gpml files do not have "graphid" records. our program successfully retrieved gene relationships from biopax files in biocyc and mousecyc, but not on these specific biopax files in wikipathways . we also try to visualize those specific biopax files on cytoscape; but no relationship can be visualized from these files.

the gene id problems in wikipathways is also quite serious. there are two places to retrieve gene id information from the gpml "</datanode>" entry, one is from "textlabel" and the other is from "<xref database"ids. usually gene ids in "textlabel" are gene symbol, while gene ids in "<xref database" can be the gene ids from different public databases, like entrez, ensembl, uniprot, and so on. getting gene id information from both of these two fields is necessary. it is not uncommon for the wikipathways database to have errors and problems in both fields. in most cases, erroneous gene ids from "textlabel" also do not have any information in "<xref database". the erroneous gene ids can be gene symbols or ec numbers that cannot be found in the target organism to which the pathway map belongs; they can also be common gene names without any information in "<xref database", or they can be just upper- or lower-case flaws. in our program, both information from the two fields,"textlabel" and "<xref database" are retrieved. for gene ids where information from both of these fields are problematic, manual curation is adopted to deal with them, generally by removing them from intpath.

access, update and extension of intpath
intpath and all its data have been released online at http://compbio.ddns.comp.nus.edu.sg:8080/intpath. as some studies are already using data in intpath  <cit> , we believe our work here can facilitate a variety of works that need to refer to pathway information.

intpath heavily depends on source pathway data from all the pathway databases and most databases update quite frequently. the important question is: can we keep our data updated in a timely fashion? the answer is: yes.

the "intpath data preparation" program is streamlined and automated in performing the extraction, normalization, integration processes and directly outputing into mysql databases and text files. for organism already included in intpath, running the program for each update takes a short time; and we will maintain a regular update of intpath in the long term. another key question is whether we can extend our approach to other organisms. currently, we have already included four organisms--s. cerevisiae, m. tuberculosis h37rv, h. sapiens and m. musculus--and we will include more in future releases of intpath. extending the methodology to include other organisms just needs modifying the regular expressions for extracting gpml and kgml files; preparing the gene id mapping files; manually correcting some possible errors of the gene ids introduced by the source databases  and, if necessary, updating the "error-prone words pair list"; and reviewing integrated pathway names. therefore, the whole process of including other organisms in intpath takes a short time. we will include more model organisms and important pathogens in intpath in future releases.

outlook of intpath
in the near future, more functions and analysis tools will be supported in intpath--for example, clustering algorithms for microarray studies using the intpath data as background knowledge, visualization tools of interaction and relationship, more powerful algorithms to identify pathways given user-specified input gene lists, and more api functions. moreover, in this version of intpath we only take gene relationships into account; in a future version, intpath will also consider other important relationships in the pathways--like protein-compound relationships, compound-compound relationships, and so on. meanwhile, in future releases, more organisms will be included. we wish our continuing effort can make intpath one of the most useful databases in pathway studies that can benefit a variety of related researches.

CONCLUSIONS
the five limitations of current pathway databases that hamper effective use of pathway information have been overcome in this work. we solve the problem of incompatible data formats in different databases by extracting the pathway-gene and pathway-gene pair relationships. the limitations of inconsistent molecular representations and inconsistent molecular relationship representations have been overcome by our normalization of the data into common gene name representations and common relationship types which are compatible with other database. the problems of inconsistent referrals to pathway names and incomprehensive data from different databases have been solved by the integration of pathway-gene and pathway-gene pair relationships into a unified and comprehensive data source.

we achieve compatible data formats, consistent molecular representations, consistent relationship representations, consistent referrals to pathway names and comprehensive data in our intpath database for several organisms--viz., h. sapiens, s. cerevisiae, m. musculus and m. tuberculosis h37rv. intpath can maintain a regular update in these organisms and, the methodology we describe here can be applied to other organisms straightforwardly.

we believe intpath will not only facilitate convenient access of the integrated pathway gene relationship data for model organisms and important pathogens but also greatly boost data analysis and application to many related studies through the analysis tools and api functions provided in the database.

competing interests
the authors declare that they have no competing interests.

authors' contributions
this work was jointly conceived, planned, and written up by limsoon wong and hufeng zhou. the analytical experiments were performed by hufeng zhou. the intpath data were prepared by hufeng zhou. the intpath database web interface was designed and implemented jointly by hufeng zhou, jingjing jin, bo yi, haojun zhang as follows. hufeng zhou prepared the relational databases of all the included organism's data in mysql. jingjing jin provided the draft codes of analyze distances, identify pathways and parts of api functions of intpath web interface supporting pathwayapi data. hufeng zhou improved and rewrote the draft codes provided by jingjing jin, except the codes of the floyd-warshall algorithm. hufeng zhou implemented the rest parts of the intpath web interface. hufeng zhou and haojun zhang identified the seralizable-file bug of the draft codes and, together improved the web interface response speed of intpath api online toolkit. hufeng zhou prepared and collected protein-protein interaction data and the serializeable files for all the included organisms. hufeng zhou and bo yi developed the intpath web service. hufeng zhou and michal wozniak configured the draft codes for linux and identified missing packages and bugs of the draft codes.

