BACKGROUND
a physical map is a linear ordering of a set of overlapping clones in a genomic library. physical maps are obtained from processing the signatures or fingerprints of all the clones in a library. fingerprints can be generated by digesting clones with one or more restriction enzymes, or by hybridizing them to a carefully designed set of dna probes. the computational problem is to build an overlap map of the clones that is consisted with the fingerprint data  <cit> .

physical maps have been historically one of the cornerstones of genome sequencing projects. for instance, in clone-by-clone sequencing, first a physical map is constructed; then, a minimum-cardinality set of overlapping clones that spans the genomic region represented by the physical map, called minimal tiling path , is selected. finally, the clones in the mtp are sequenced one by one  <cit> . the clone-by-clone sequencing method has been used to sequence several genomes including c. elegans  <cit> , a. thaliana  <cit> , h. sapiens  <cit> , and o. sativa  <cit> . in several recent whole-genome shotgun sequencing projects, physical maps have also been employed to validate and improve the quality of sequence assembly  <cit> . this validation step has been used, for example, in the assembly of m. musculus  <cit> , g. gallus  <cit> , and o. anatinus  <cit> .

the rapid market penetration of next-generation sequencing instruments  is expected to bring physical mapping back to the center stage of genomics. next-gen sequencing technologies produce massive amounts of short reads   <cit>  and therefore the de novo assembly of the whole eukaryotic genomes is extremely challenging  <cit> . arguably, the only realistic approach at this time is clone-by-clone sequencing, where each clone in the mtp is sequenced using next-gen technology, and the assembly is carried out separately clone by clone .

in addition to their prominence in sequencing projects, physical maps can also provide a robust infrastructure required by many applications in genomics such as marker assisted breeding  <cit> , map-based cloning of a set of genes of interest  <cit> . and est mapping  <cit> .

physical maps can be built from data obtained by restriction digestion or hybridization experiments  <cit> . in the former case, overlaps between clones are determined by a statistical method, then clones are arranged in an order that is consistent with the restriction fingerprint data  <cit> . in the latter case, clone-probe associations  are used to find an arrangement of the probes such that clones can be ordered consistently  <cit> . in practice, however, hybridization experiments rarely use single probes. due to the time and cost involved, hybridizations between probes and clones are typically carried out for a pool of probes . in this work, we assume that only clone-pool associations  are available.

nowadays almost all physical mapping projects that are based on restriction fingerprint data rely on a tool called fingerprinted contigs   <cit> . fpc implements an algorithm called consensus band  that constructs a physical map using a combination of greedy and heuristic approaches. at the core of the cb algorithm, clones are assigned to contigs based on a coincidence score, called sulston score, which measures the probability that two clones share a given number of restriction fragments  according to a binomial probability distribution  <cit> . two bands are considered shared if their sizes are within a given tolerance value. two clones are declared overlapping if their sulston score is below a given cutoff threshold. for each contig, fpc builds a cb map, which is a coordinate system to which clones are aligned.

fpc does not attempt to resolve all the conflicts arising in the assembly of the physical map, but instead provides interactive features for manual editing. although manual editing appears to be an unavoidable final step in any physical mapping project, this process is tedious, very time-consuming and requires a significant expertise. obviously, the better the initial quality of the physical map produced by the algorithm, the smaller is amount of manual work involved.

our contribution
with the objective of producing more accurate physical maps, here we propose a novel algorithmic pipeline that is capable of integrating both restriction and hybridization fingerprints. we note that the availability of both types of data is common in large-scale genomic projects. in this paper, the hybridization fingerprint data is obtained by hybridizing pools of short oligonucleotide probes to a bacterial artificial chromosome  clone library  <cit> .

while the typical use of fpc is to process the entire set of fingerprinted clones at once , a compartmentalized assembly is feasible when hybridization fingerprint data is available. in the compartmentalized approach, we first pre-cluster clones based on their hybridization fingerprints. the purpose of the pre-clustering step is to group together clones that are more likely to be truly overlapping thus mitigating the effect of the noise in restriction fingerprint data, which is responsible for producing mis-assembled contigs  <cit> . then, a "local" physical map of the clones in each cluster is built based on the restriction fingerprint data. finally, all the local maps are merged into the final global physical map, which is pruned afterwards to remove redundancies and/or inconsistencies. an illustration of the compartmentalized and standard assembly is shown in figure  <dig> 

given the trust of the scientific community in fpc, we decided not to "reinvent the wheel" but include some of its modules in our algorithmic pipeline as subroutines. in order to integrate fpc in our workflow, some minor changes to its source code had to be carried out. we use fpc to compute the local assemblies on each cluster of clones; we also employ jointly fpc and a novel algorithm described later to merge contigs iteratively. fpc's merge process is based on shared bands between contigs, whereas our algorithm is based on shared clones between contigs. in general, the strategy behind the design of our assembler is "be conservative first". for example, in the beginning of the assembly process, we merge contigs only when there is strong evidence that they overlap while later we allow riskier moves.

we tested our assembler extensively on several data sets. in the experimental section, we report results on the assembly of the physical map of two important crop plants, namely rice and barley. real fingerprinting data is available for both plants, but real hybridization data is available only for barley, while rice hybridization data was simulated in silico. we constructed physical maps using standard and compartmentalized assembly for both plants, and evaluated different pre-clustering strategies for our assembler. we compared the accuracy of the maps produced by the two methods using a variety of metrics. we also compared the rice maps to the manually edited physical map of rice. our evaluations show that the compartmentalized assembly produces significantly more accurate maps than maps produced by the standard assembly. in addition, our method is capable of detecting and isolating clones that would induce chimeric contigs if used by the standard assembly.

RESULTS
algorithm
pre-clustering of clones
during the pre-clustering phase, clones that are more likely to be overlapping are assigned to the same cluster. we pre-cluster clones according to hybridization and/or restriction fingerprint data. below are four pre-clustering approaches we implemented and analyzed.

pre-clustering based on hybridization fingerprint data 
in hyb, overlapping clones are detected via an overlap score based on hybridization fingerprint data. consider two clones ci and cj that hybridize to at least one of the probes in probe pool p. in this case, we say that p is a positive pool for ci, cj and that there is a positive concordance between the two clones. if both clones hybridize to none of the probes in probe pool q then we say that q is a negative pool for ci, cj and there is a negative concordance between the two clones. if one clone hybridizes to a probe pool but the other does not, then we say there is discordance between the two clones.

our overlap score is based on two observations. first, observe that positive and negative concordance weigh in favor of clone overlaps, whereas discordance weighs against it. second, observe that the strength of the positive concordance between two clones should be inversely proportional on the number probes in the pool. in fact, the probability that the two clones hybridize to the same probe  increases as the size of the probe pool decreases. vice versa, the strength of the negative concordance between two clones should be directly proportional on the number probes in the pool. this is because as the negative pool size increases, the size of the region that the clones might occupy gets smaller and smaller .

based on these observations, we propose the following positive-negative concordance  score, which is defined between two clones ci and cj.

  

where pi and pu are the intersection and union of positive pools for the pair of clones ci, cj; ni and nu are the intersection and union of the negative pools for the pair of clones ci, cj; and |p| denotes the size of pool p. the pnc score ranges between zero and two, inclusively.

any clustering algorithm can be used in combination with the pnc score. for simplicity, we used the single-linkage hierarchical clustering  <cit> . consequently, disjoint  clusters were generated .

we performed extensive comparative evaluations of the proposed pnc score with other popular overlap scores, such as sulston score  <cit> , algebraically corrected sulston score  <cit> , mott score  <cit> , weighted shared bands score, and positive concordance score. the latter two scores are defined as follows. the weighted shared bands score of two clones is defined as the total weights of their shared bands. the weight of a band b is the fraction between total number of bands of all clones and frequency of bands of size between , where t is the tolerance value. the weight of a band is inversely proportional to its frequency. the positive concordance score of two clones is defined as the fraction between the intersection and union of their positive pools .

in order to assess the quality of the overlap scores, we collected all pairs of rice clones whose positions in the rice genome are known. for each pair we computed the overlap scores mentioned above and the overlap size. then we computed the distribution of true positive rate  and false positive rate  for various overlap score and overlap size thresholds. the tpr and fpr can be computed as following.

  

where tp, fp, tn, and fn are true positive, false positive, true negative, and false negative overlaps as defined in figure  <dig>  clone pairs whose overlap size is lower than the overlap size threshold, but greater than zero are ignored in this computation in order not to penalize/favor for missing/detecting "small" overlaps. then, we fixed the overlap size threshold, and we computed the receiver operating characteristic  curve to plot the distribution of tpr and fpr as a function of the overlap score thresholds. the roc curves for each overlap score are shown in figure  <dig> and figure  <dig> for overlap size thresholds of  <dig> kb and  <dig> kb, respectively. observe that the pnc score outperforms the other scores in both cases. the improvement over the other scores is much higher with lower overlap size threshold values .

soft pre-clustering based on hybridization fingerprint data 
when probes are sparsely distributed in the genome, most clones have many more negative pools than positive pools. this generates negative concordances between many clone pairs whether they overlap or not. in addition, since the probability that a probe occurs in the overlap between two clones is very small, we expect only very few clone pairs to show positive concordance. consequently, the pnc score will be close to one for most of the clone pairs whether they overlap or not.

in this case, a soft clustering might be more appropriate. in soft clustering, clones are assigned to multiple clusters when there is not sufficient evidence for a unique assignment. initially, an empty cluster is generated for each pool. then, clones are assigned to the clusters that correspond to their positive pools, i.e., clones that belong to the same pool are assigned to the same cluster. finally, the clustering is finalized based on the restriction fingerprint data. when shyb is used, redundant clones and/or redundant contigs can be present in the merged physical map. additional steps are performed downstream to eliminate this redundancy .

pre-clustering based on restriction fingerprint data 
when no hybridization fingerprint data are available, one could consider pre-clustering clones based on the restriction fingerprint data. note that the similarity between clones' fingerprints will be evaluated again during the actual contig assembly, so it is not obvious that pre-clustering using only restriction fingerprint data would bring any improvement in accuracy. for this choice of pre-clustering, we used the single-linkage hierarchical clustering to generate disjoint clusters by assigning clones with similar restricting fingerprint into the same cluster.

random pre-clustering 
we expect that a random pre-clustering would bring no benefits in the final assembly, so we can use rand as a baseline on which to assess the efficacy of the other pre-clustering strategies on the compartmentalized method. the distribution of sizes of random clusters is based on the distribution of sizes for clusters generated by hyb method. as shown in figure  <dig>  the histograms of random and non-random cluster sizes are very similar.

in random clustering, first, the size of a cluster is determined randomly based on the size distribution of a cluster generated by hyb method and then clones that are not previously assigned to a cluster are assigned to this cluster randomly until the cluster size is reached. this step is repeated until all clones are assigned to some cluster.

physical map construction
the first step in the compartmentalized method is to run fpc independently on each clone set  obtained in the pre-clustering phase. observe that clone sets are not necessarily disjoint. since fpc does not offer all of its functionalities in batch mode, we instrumented it so to enable batch mode processing of functions such as end-merger, dqer, and rebuild-contigs. we also added a user remark to identify questionable clones . a clone is called q-clone if more than 50% of its bands do not align to the cb map   <cit> . no other modification to the internal code of fpc was performed. fpc's key parameters such as cutoff, tolerance, and fromend can be set by the user as usual. the proposed compartmentalized method consists of six phases as described below.

a. initial contig assembly
fpc's build-contigs procedure is run on each clone set. this step generates a "local" physical map for each clone set, composed of contigs and singletons. clones that are completely contained in other clones are buried by fpc. after the contig assembly, all the local physical maps are concatenated into a single project. when a soft pre-clustering is used, a complication is that fpc cannot handle multiple instances of a clone with the same name. we resolve this problem by adding a distinct suffix so that we can distinguish multiple copies of the same clone. the renaming process is transparent to users and in the final physical map, all clones will have their original  names.

b. redundancy removal
if soft clustering is employed in the pre-clustering step, the process of concatenating local physical maps can result in redundant clones and contigs.

we call a contig redundant if all of its clones  are completely contained in another contig. by computing the number of common clones between all contig pairs, redundant contigs are detected. in a group of several identical contigs, only one of them is kept alive. all q-clones that belong to a redundant contig are moved to the singleton set.

we call a clone redundant if either  it is a singleton and it also occurs in a contig or  it occurs multiple times in the set of singleton clones or  it occurs multiple times in the same contig. in a group of several identical clones, only one of them is kept alive.

c. fpc processing
in this phase, the main fpc procedures are run iteratively on the merged map as discussed in  <cit> . steps - are repeated until convergence. for more details on fpc functionalities, see  <cit> .

 resolve q-clones
we run the fpc procedure dqer that reduces the number of q-clones in an attempt to split the incorrectly merged contigs. dqer runs the cb algorithm on contigs that contain more than q% of q-clones, where q is an input parameter.

 merge contigs
we execute the fpc procedure end-merger that merges two contigs a and b if m distinct pairs of end clones, one of which is in a and the other in b, match each other with a sulston score lower than the cutoff value. a clone in a contig is an end clone if it is within fromend cb units from one of the ends of the contig, where fromend is an input parameter  <cit> . to avoid making wrong merges early in the process, we run end-merger with increasingly lower values of m .

 eliminate redundant contigs and clones
see phase b.

 rebuild contigs
we execute the fpc procedure rebuild-contigs at this point because end-merger does not update the cb map . rebuild-contigs executes the cb algorithm on the current version of the contigs in order to improve the clone ordering.

 resolve q-clones
see step .

d. post-processing
in this fourth phase, we merge contigs with a novel algorithm described below and then we remove possible redundancies present in the physical map. steps d2-d <dig> are repeated a few times until convergence. phase d is needed only when soft clustering is used in the pre-clustering step.

 eliminate redundant q-clones
a redundant q-clone is a q-clone that occurs as a non-q-clone in another contig. the removal of redundant q-clones is performed only in this phase, since dqer resolves most of the q-clones in the fpc processing phase .

 merge contigs
recall that end-merger merges two contigs if a given number of their end clones overlap with a sulston score lower than the cutoff. however, in the compartmentalized method, contigs may still share several common clones. contigs that share a large number of clones should be merged, so we designed an algorithm called merge-similar-contigs that works as follow. for all contig pairs  for which s = cj ∩ ck ≠ ∅, the probability that they share clones in s  model) is

  

where m is the multiset of all clones in the physical map, and  is the number of copies of the i-th element in s. given these probabilities and a specified threshold tp, we build a directed acyclic graph g = , where v is the set of contigs that share at least one clone with some other contig, and e = {|p ≤ tp and |u| ≤ |v|}. when p ≤ tp and |u| = |v|, source and destination of the edge are selected according to the lexicographical order of names of u and v. we merge contig u to contig m, where

  

merge-similar-contigs is run until no further merging is possible. as in step , the threshold tp is increased at each iteration until it reaches a user-supplied maximum .

 eliminate redundant contigs and clones
see phase b.

 move redundant clones to the singleton set
after merging contigs, there may be still some clones that occur in multiple contigs. since the location of these clones in the physical map is ambiguous, they are moved to the set of singletons.

e. singleton processing
up to this phase, singleton clones that belong to distinct clone sets have not being processed. in order to check whether singleton clones are overlapping, an additional round of contig assembly is performed by running fpc's build-contigs procedure on the singletons set.

f. finalizing
in this phase, some final adjustments are carried out on the physical map. specifically, we reorder the clones  and try to resolve any q-clone introduced in the last phase .

implementation
the compartmentalized assembler is implemented in c/c++ and perl. contig assembly is performed by fpc, which is implemented in c  <cit> . our software tool compiles and runs under linux and mac os.

dataset
we used the genomic data of two plants, namely barley and rice, to compare our compartmentalized approach to the standard fpc assembly.

for barley, we used oligospawn <cit>  to design  <dig>  36-mer oligonucleotide probes from a dataset of  <dig>  barley unigenes obtained from harvest website  <cit> . a unigene is obtained as a product of assembling several ests. probes were grouped in  <dig> pools of usually  <dig> probes each, with a maximum of  <dig> overgos in a single pool.

the barley bac library screened against the pools of overgos is a morex library covering  <dig>  genome equivalents  <cit> .  <dig>  bac clones were detected as gene-bearing after the hybridization experiment with the probes. figure  <dig> shows the histogram of number of occurrences of the barley clones in the probe pools. as shown in the figure, the majority of the barley clones occur in a few pools only.

restriction fingerprint data of gene-bearing bac clones of barley were obtained by using high information content fingerprinting  as part of our nsf funded project . exactly  <dig>  of these clones were successfully fingerprinted . the average insert size of these clones is  <dig> kb, and the average number of bands is  <dig> 

since the barley genome has not been sequenced yet, we had to resort to an organism with a known genome for our comparative evaluations. we used agarose gel-based restriction fingerprint data and the manually edited physical map of rice obtained from arizona genomic institute  <cit>  for this purpose. the restriction fingerprint data were real, but the hybridization fingerprint data were obtained by carrying out the hybridization of rice bac clones to 36-mer rice oligonucleotide probes in silico.

we used oligospawn to design 36-mer unique oligonucleotide probes from rice unigene dataset  obtained from ncbi  <cit>  containing  <dig>  unigenes. for about 70% of unigenes, at least one unique probe was designed. we generated  <dig> pools of rice oligonucleotide probes by randomly selecting  at most  <dig> probes in each pool. the histogram of the probe pool sizes is shown in figure  <dig> 

to model the hybridization, we decided that if a probe had a perfect match to a bac clone with  <dig> or more consecutive bases , we considered it a positive hybridization. we also introduced noise in the hybridization experiment . to model the noise, fn% of clone-probe hits were discarded to generate false negative, and fp% of clone-probe pairs that did not hybridize were considered positive to generate false positive hybridization errors.

in order to carry out the hybridization of rice bac clones to oligonucleotide probes in silico, we obtained the sequences of rice clones indirectly by uniquely locating their bac end sequences  obtained from arizona genomic institute  <cit>  on the rice genome.

there were  <dig>  rice bac clones for which bac-end sequences  were available, but only 65% of them had both bess sequenced. in order to uniquely locate bac clones in the rice genome, we blasted the bess against the rice genome  and filtered out low-scoring blast hits. we set e-value and word size parameters to 1e- <dig> and  <dig>  respectively. we also enabled filtering and allowed gaps. if a bac clone had at least one pair of good blast hits, it was selected for further analysis. for each selected bac clone, we checked all possible pairs of left and right bes hits. the coordinates were assigned only when there was only one pair for which  the hits were on the same chromosome,  the distance between them was consistent with the typical length of a bac clone, and  the orientations of the alignment for the two ends were opposite to each other. if more than one pair met the criteria , we declared that the location of that clone in the genome was ambiguous, thus could not be determined. following this procedure, we obtained  <dig>  rice bac clones for which the sequence could be uniquely determined.

we verified the correctness of this procedure by matching the sequences obtained by our method against the small subset of  <dig>  bac clones sequenced by the international rice genome sequencing project   <cit> . when we aligned the sequences obtained by our method against the actual sequenced bac clones using mummer  <cit> , only  <dig> % of the sequences turned out to be misaligned.

the final dataset contained clones for which a unique location in the rice genome was determined and the restriction and hybridization fingerprint data were available. it contained  <dig>  clones , where the average insert size is  <dig> kb and the average number of bands is  <dig> 

we applied both the standard and compartmentalized method to the rice and barley data. we generated a compartmentalized map of rice for each pre-clustering method . since the purpose of pre-clustering with restr and rand are just to demonstrate the performance of the method when no additional information is available, we generated compartmentalized maps of barley for shyb and hyb methods only. the compartmentalized maps of rice with hyb and shyb rely on in silico hybridization fingerprint data that contains 5% false positive and false negative hybridizations. on the rice clones, the thresholds for pnc and sulston score used in hyb and restr were  <dig>  and 1e- <dig>  respectively. on barley, the threshold for pnc score used in hyb clones was  <dig> . no parameter was needed for shyb and rand. statistics of clusters for other choices of parameters are reported in table  <dig>  the tolerance parameter used in the compartmentalized assembler is the same one that was used in the standard method. this is because the tolerance should be set according to the quality of restriction fingerprint data  <cit>  and both methods use the same data. the cutoff parameter is also the same in both methods because the cutoff only depends on genome size  <cit>  and genome composition  <cit> . we set these two parameters according to the specifications of the physical mapping projects of rice  <cit>  and barley .

physical map statistics
according to the statistics in table  <dig>  the compartmentalized assembler produces physical maps, which contain fewer q-contigs, but also more contigs and singletons than the maps produced by the standard method. as expected, our compartmentalized assembler is more "stringent" than the standard method because it restricts clones that are in different clusters from being assembled in the same contig. this stringency reduces the number of mis-assembled  contigs as will be discussed in evaluation i in comparative evaluations of rice physical maps section.

the statistics of the compartmentalized maps of rice obtained by applying restr or rand in the pre-clustering phase and the standard map are almost identical. the maps themselves were also almost identical, which suggests that the compartmentalized assembly with restr and rand perform like the standard method, i.e., pre-clustering with restr and rand brings no benefits. this conclusion was somewhat expected because no additional information is exploited in restr and rand.

we also observe that about  <dig> % of the singletons in the standard map of rice are also singletons in the maps using shyb and hyb pre-clustering. for barley, about 92% and 93% of the singletons in the standard map are also singletons in the maps using shyb and hyb pre-clustering, respectively. when we analyzed the extra singletons in the rice map obtained with shyb pre-clustering, we determined that about 81% of these extra singleton clones were misplaced in the standard physical map of rice . in addition, 99% of the misplaced clones in the standard map of rice are singletons in the hyb rice map. the analysis demonstrates that our method is capable of detecting and isolating problematic clones.

comparative evaluations of rice physical maps
since the genomic coordinates of the clones in the rice physical maps are known, more precise comparative evaluations can be carried out for this organism. specifically, we report on four evaluation metrics to compare the rice physical maps produced by the compartmentalized and standard method, as well as the manually edited map. we were unable to evaluate the quality of the contig assembly in the manually edited physical map of rice , since most of the clones in this map cannot be uniquely located in the rice genome.

evaluation i 
in this evaluation, we assess the quality of the contig assembly. we considered a contig to be of high quality when most  of its clones were truly close to each other in the genome. in order to objectively measure the quality of each contig in the map, we first grouped the clones according to their locations in the genome. each pair of clones in a given contig were assigned to the same group if they were on the same chromosome and the distance between them was smaller than a predefined threshold. our tests showed that the choice of specific value for the threshold  does not have an impact on the grouping. this suggests that clones are assigned to different groups usually because they reside on different chromosomes . in the following evaluation, we show results based on grouping with  <dig> kb threshold.

after grouping the clones in each contig, we computed the contig score, which is defined as the percentage of clones in the largest group. for example, a contig score of 90% means that 90% of the clones in a contig are on the same chromosome and relatively close to each other. then, an assembly score of the whole map was computed as the weighted mean of the contig scores for all contigs in the physical map, using the contig size  as the weighting factor. the assembly score of each map is shown in table  <dig>  the results show that the compartmentalized method produces better maps than the standard fpc method when we employ a pre-clustering based on hybridization fingerprints. as discussed earlier, pre-clustering using restr or rand produces results almost identical to the standard map. in this evaluation, we also computed the number of misplaced clones and mis-assembled contigs in each physical map. when the large majority  of the clones in a contig belong to a single group then the other clones in that contig are called misplaced. a contig is called mis-assembled if it contains at least one misplaced clone. as shown in table  <dig>  the maps using hyb/shyb pre-clustering have fewer misplaced clones and mis-assembled contigs than the standard method. we also observe that using the hyb pre-clustering we obtain much fewer misplaced clones and mis-assembled contigs than using the shyb option.

a further analysis showed that the set of misplaced clones in the maps using shyb/hyb pre-clustering is completely contained in the set of misplaced clones in the standard map . moreover, the map using hyb isolates  <dig> % of the additional misplaced clones in the standard map to the singleton set. this analysis shows that our method can detect and isolate clones that are otherwise misplaced by the standard method. these misplaced clones are usually responsible for connecting contigs that are not truly overlapping and therefore creating chimeric contigs if left in the assembly.

evaluation ii 
it is well known that due to the noise in the restriction fingerprint data, determining the correct ordering of the clones is a challenging problem  <cit> . nonetheless, since we have the coordinates of rice clones, we can compute a clone ordering score for each contig. we define the ordering score of a contig as the absolute value of the pearson product-moment correlation coeffcient between the ranking of its clones in the genome and their order in the contig.

the rankings of clones in the genome are obtained from their coordinates if they belong to the same chromosome. if two clones belong to two different chromosomes then the clone with lower chromosome number has lower ranking than the ranking of the other. for this evaluation, we computed a global ordering score for each physical map as the weighted mean of the ordering score of all contigs in the physical map, using the contig size as the weighting factor.

the results in table  <dig> show that the compartmentalized method produces contigs whose the clone ordering is more accurate than the standard fpc method. among the compartmentalized maps, the rice map using hyb has the maximum global ordering score. from our experience, we conjecture that the global ordering score is inversely correlated with the number of mis-assembled contigs.

evaluation iii 
as mentioned above, the minimal tiling path  of a physical map is a critical component of clone-by-clone sequencing projects  <cit> . the quality of an mtp critically depends on the overall quality of its physical map. in this evaluation, first we computed an mtp for the all rice physical maps by using the most recent version of fpc  with default parameters. then, we compared the number of the mtp clones, the coverage of the mtp clones on the genome, and the percentage of the consecutive mtp clones that truly overlap on the genome.

the results shown in table  <dig> illustrate that all maps use approximately the same number of clones, but the genome coverage for the mtp of the rice hyb map is 1% higher than the mtp of the standard fpc map. we also observe that in the physical map obtained by the standard method a higher number of the consecutive mtp clones do not actually overlap on the genome. in other words, the mtp of the standard map contains more gaps than the mtp for the rice hyb and shyb maps.

evaluation iv 
in our final evaluation, we focused on the set of clones that overlap in the genome. for each pair of clones that are actually overlapping, we checked whether they were in the same contig  or not . if one or both clones were in the singleton set, this pair was added to the singletons count. only clone pairs that overlap by at least  <dig> kb were considered in the evaluation because, fpc can join two clones only if they overlap by at least 70% of their length   <cit> .

the results in table  <dig> show that although the true positive rate in the rice standard map is higher than the compartmentalized map using hyb or shyb, the former suffers from a much higher false negative rate. we also observe that the manually edited physical map is much better than both compartmentalized and standard physical maps. this is not surprising given that the manually edited physical map of rice is the result of years of curation from experts. in closing, we should keep in mind that this evaluation metric favors physical maps with smaller number of contigs. in the extreme, the pathological physical map in which all clones were assigned to one single contig would beat, according to this evaluation, all the maps considered here.

comparative evaluation of barley physical maps
since the barley genome has not been sequenced yet, none of the evaluations discussed above can be carried out. we were able, however, to obtain from the institute of plant genetics and crop plant research  a list of  <dig> sets of bac clones that are known to hybridize to a single oligonucleotide probe. the list was extended to  <dig> sets of bacs by incorporating bac-gene deconvolution data obtained from the barley genetic map. the assumption is that the clones in each set should overlap each other because they are all positive for a single probe. in practice, this is not necessarily true for all the clones in the sets due to noise in the hybridization experiment, or because bac clones overlap a repeat region or a gene family. although this evaluation is not 100% reliable, it was the best validation of the barley map available.

the evaluation was carried out as follows. for each clone set identified by a probe, we first computed the contig id that contains the majority of the clones in the set. then for all clones in the set, we computed the number of clones that were either in that contig , or in another contig , or in the singleton set.

the results shown in table  <dig> illustrate that the barley hyb has the fewest errors among all barley maps. in other words, the compartmentalized method with hyb is able to isolate some clones to the singleton set that would have otherwise been misplaced by the standard method.

we also computed the number of gaps in the physical maps of barley. if a set of clones that should belong to one contig is distributed in more than one contig, we record this event as a gap. more precisely, for each list of clones that are assumed to be overlapping, we computed the number of contigs that they belong to and computed the number of gaps for each list. according to the results, barley hyb has  <dig> gaps, barley shyb has  <dig> gaps, and the standard map has  <dig> gaps. the results show that number of gaps correlates with the fn rate of the maps.

CONCLUSIONS
we proposed a novel compartmentalized approach to the construction of physical maps from fingerprinted clones. the compartmentalized method exploits both the restriction and hybridization fingerprint data, which allows it to construct more accurate physical maps. consequently, we argue that the compartmentalized method reduces the amount of manual editing that is an inevitable step in any physical mapping project. additionally, we showed that the mtp produced from the compartmentalized physical map is more reliable, and that should help clone-by-clone sequencing projects and de novo sequence assembly with short reads. the software is available in the public domain at .

authors' contributions
sb developed the method, performed the in silico hybridization, generated the experimental results, and wrote the manuscript. tjc was involved in developing the method and writing the manuscript. sl was involved in developing the method, generating the experimental results, and writing the manuscript.

supplementary material
additional file 1
supplementary tables.doc. contains two supplementary tables. the first table shows the percentage of cases that two clones which are in same contig, but assigned to different clusters are on the same chromosome or not. the second table lists misplaced clones in rice hyb, rice shyb, and rice fpc standard maps.

click here for file

 acknowledgements
this project was supported in part by nsf career iis- <dig>  nsf dbi- <dig> and usda csrees barley-cap .

the authors would like to thank the members of prof. carol soderlund's group, in particularly dr. william nelson for helpful discussions regarding fpc. they are also grateful to the people in prof. rod wing's lab, in particularly dr. andrea zuccolo and josé luis goicoechea for their help with rice bess and physical map. finally, the authors would like to thank dr. ming-cheng luo for providing the fingerprinting data of barley.
