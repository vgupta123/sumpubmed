BACKGROUND
recent progress in sequence technology has revealed whole genome sequences of various species, such as human and mouse, leading to the production of comprehensive databases of gene sequences. elucidation of gene functions is one of the most important issues in the so-called post-genomic sequence era and many scientists are actively tackling it. although some results are presented as numeric or character string data, most of the results are published in literatures. projects which aim to improve the usability of gene information include gene ontology   <cit>  and reference sequence   <cit> . steady progress with principal parts of these projects are due to the manual curations by many experts. the goal of the go project is to produce controlled vocabularies which can then be used to classify genes automatically. refseq aims to provide a comprehensive and non-redundant database containing not only sequences but also other related information. although these secondary or higher-level databases are very useful to survey the information of many genes, the daily incorporation of all publicized data into the databases is impossible. we therefore need to use primary databases such as pubmed  <cit>  to get the latest information. many recent approaches using natural language processing techniques have been reported  <cit> . pubmed, which contains abstracts and other bibliographic information, is one of the most important literature databases for the biological and medical sciences. however, it is very large in size, containing over  <dig> million citations. reading all related abstracts in such a huge database is almost impossible. we usually have to repeatedly enter keywords in a trial-and-error manner when looking for useful records. in order to collect necessary literatures efficiently, new software is required.

we developed new software to address this requirement based on the following strategies. first, most of the abstracts contain the important sentences which capture the main points of their respective article. second, in many cases, the importance is decided by the relationship between gene names and common words. for example:

c-kit is constitutively activated in various tumors.

c-kit expression increases in various tumors.

c-kit expression is observed in various tumors.

although all of these sentences indicate the relationship between c-kit  and various tumors, the relative importance of their meanings is different and determined by the underlined words. we presume that extracting and reading the important sentences prior to reading whole abstracts would reduce the task of literature searching. one noteworthy point is that the importance of each sentence depends on the reader's interest. if the reader is interested in the development of an anti-cancer drug which functions as the inhibitor of c-kit, the first sentence would be more important than the second one because the drug should not achieve an anti-tumor effect if c-kit is not active. on the other hand, if the reader wants to develop antibody-based drugs which target c-kit, the second sentence would be more important than the first because the number of molecules on the cell surface should be more crucial than whether it is active or not. although this example shows the difference of predicator, some noun  might be important for another user. from another viewpoint, a sentence that reports experimental result might be important for one user, but another one that describes the background might be of interest to another user. thus, the importance of each sentence depends on the user's interest. in this report, we introduce a web-based software, the pubmed sentence extractor , which parses huge pubmed abstracts, and then extracts and displays the co-occurrence sentences of gene names with other keywords.

implementation
keyword extraction
pse identifies words as keywords in sentences with gene names after filtering out the less valuable words. the filtering is carried out by using a stopword list based on statistical and heuristic methods. the list is complied using a metric commonly found in information retrieval systems combined with a method described below.

 <dig>  pubmed abstracts were retrieved using "result" as a keyword because it was postulated not to be biased in particular fields of articles. the term frequency  for word i in abstract j ) is calculated as follows:

tf=frequency of word i in abstract jnumber of all words in abstract j
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqacigacagaaeqabaqabegadaaakeaacqwg0badcqwgmbgzdaqadaqaaiabdmgapjabcycasiabdqgaqbgaayjkaiaawmcaaiabg2da9maalaaabagaeeozaymaeeocainaeeyzaumaeeycaenaeeydaunaeeyzaumaeeoba4maee4yammaeeyeaknaeeiiaaiaee4ba8maeeozaymaeeiiaaiaee4dacnaee4ba8maeeocainaeeizaqmaeeiiaaiaeeyaakmaeeiiaaiaeeyaakmaeeoba4maeeiiaaiaeeyyaemaeeoyaimaee4camnaeeidaqnaeeocainaeeyyaemaee4yammaeeidaqnaeeiiaaiaeeoaaogabagaeeoba4maeeydaunaeeyba0maeeoyaimaeeyzaumaeeocainaeeiiaaiaee4ba8maeeozaymaeeiiaaiaeeyyaemaeeibawmaeeibawmaeeiiaaiaee4dacnaee4ba8maeeocainaeeizaqmaee4camnaeeiiaaiaeeyaakmaeeoba4maeeiiaaiaeeyyaemaeeoyaimaee4camnaeeidaqnaeeocainaeeyyaemaee4yammaeeidaqnaeeiiaaiaeeoaaogaaaaa@88f1@

inverse document frequency  for word i ) is calculated as follows:

idf=log⁡enumber of total abstractsnumber of abstracts containing word i
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqacigacagaaeqabaqabegadaaakeaacqwgpbqacqwgkbazcqwgmbgzdaqadaqaaiabdmgapbgaayjkaiaawmcaaiabg2da9igbcygasjabc+gavjabcegannaabaaaleaacqwglbqzaeqaaowaasaaaegabaqp9labb6gaujabbwha1jabb2gatjabbkgaijabbwgaljabbkhayjabbccagiabb+gavjabbagamjabbccagiabbsha0jabb+gavjabbsha0jabbggahjabbygasjabbccagiabbggahjabbkgaijabbohazjabbsha0jabbkhayjabbggahjabbogajjabbsha0jabbohazbqaaiabb6gaujabbwha1jabb2gatjabbkgaijabbwgaljabbkhayjabbccagiabb+gavjabbagamjabbccagiabbggahjabbkgaijabbohazjabbsha0jabbkhayjabbggahjabbogajjabbsha0jabbohazjabbccagiabbogajjabb+gavjabb6gaujabbsha0jabbggahjabbmgapjabb6gaujabbmgapjabb6gaujabbeganjabbccagiabbeha3jabb+gavjabbkhayjabbsgakjabbccagiabbmgapbaaaaa@8bb9@

the term frequency – inverse document frequency  score for word i ) is calculated using the maximum value of tf according to the following equation:

tf - idf = maxj ) × idf

the words found in more than  <dig> % of the abstracts and whose tf-idf scores were less than  <dig>  were saved. next, the words included in more than 1% of the abstracts and whose tf-idf scores were more than  <dig>  were listed. the words suited for keywords in the latter list were removed manually and the remaining list was saved. the two lists were merged and saved as the stopword list . sl <dig> contains  <dig>  words. sl <dig> is used for both the creation of a gene name dictionary and the extraction of common words.

after establishing sl <dig>  each word in the abstracts is compared with sl <dig>  if the word is not included in sl <dig>  the occurrence is counted, recorded and displayed as a pull-down list. the counts of some plural forms obtained by adding a final "s" are merged with their singular forms. twenty to twenty-five percent of the total words are selected as keywords with sl <dig> if pse searches whole sentences . to reduce the number of keywords, pse only searches sentences which contain gene names as keywords.

compilation of a gene name dictionary
pse first extracts sentences containing gene names by using a dictionary which was created without any learning algorithm to properly evaluate whether each word or phrase is a gene name or not. this key component of our system was compiled from entrezgene  records  <cit> . two stopword lists  were used for reducing the number of false positives and expanding aliases of gene names to improve recall in the compiling process, as detailed below.

gene name information was extracted from entrezgene records. the records which have "official symbol" and originating from human, mouse and rat were used. aliases and symbols were extracted from each record and a series of aliases were created based on several rules. for example:  add/remove hyphen/space, convert arabic number into roman number if the name ends with a number ,  trim the name if it contains some specific words . then, each word or phrase was compared with sl <dig> and another stopword list  described below, and the word or phrase, which did not match with one or both of them, was added as an alias after being converted into uppercase. one final consideration is the homonymous gene names of common words, e.g. yes, which generate many false positives. therefore, elimination of homonyms for common words is important. three sets of abstracts containing around  <dig>  records were retrieved using "cancer and kinase", "autoimmune" and "hypertension" as keywords, respectively, and the candidate words of gene names were marked. browsing the results, we created two additional lists, an ordinary stopword list  and an adjacent pattern list , based on the incorrect assessments. sl <dig> contains  <dig> words and phrases, and pl <dig> contains  <dig> words and suffixes. sl <dig> and sl <dig> are used for compiling the dictionary and pl <dig> is used for the actual extraction from the pubmed abstracts.

gene name extraction
the three steps  are carried out during gene name extraction. prior to these steps, additional stopwords are extracted from each abstract with the aim of reducing the number of false positives caused by the acronyms of some proper names, e g. chemical compounds and diseases. these stopwords are only applied to each abstract to avoid reducing the recall. the detail is as follows.

each abstract is split into sentences and stopwords are extracted first. if a word is in parentheses or located between two commas, the adjacent word is compared with pl <dig>  this comparison is carried out using a backward match. for example, if "osus" is in pl <dig> and the phrase, "systematic lupus erythematosus  ", is found in the current sentence. because the terminus of "erythematosus" matches with "osus", the word, "sle", is ruled out as a candidate for a gene name. this process is effective to remove many acronyms of chemical compounds, disease names and so on. the exclusion using pl <dig> is applied to each abstract independently. in contrast, sl <dig> and sl <dig> are applied to all records.

after the extraction of stopwords, gene name extraction is carried out. starting with the top of the sentence,  <dig> continuous words are compared with the dictionary and are phased out if the phrase does not match. all letters are converted into uppercase prior to the comparison in case of more than two words. to improve the precision, the following rules are applied to single words;  a word containing non-alphabetical letters or more than one uppercase letters at the beginning of the sentence, or  a word that is not consisting entirely of lowercase letters and not located at the front of the sentence. if a word matches one of these rules, it is converted into uppercase and compared with the dictionary. therefore, pse cannot detect single words containing only lowercase letters as gene names.

system implementation
pse is written with perl and php, and runs on unix. a user retrieves pubmed abstracts in xml format and registers them into the system. during the registration process, pse splits the whole abstract into sentences, assigns each sentence an id, counts the number of keywords, searches for gene names and records the sentence id for each gene symbol. although these steps appear to take time, the following process is so fast that users would not feel stress. users select a gene symbol and a common word from pull-down menus, and pse displays the extracted sentences and related information. because these sentences and information are linked to whole abstracts and external web sites, such as entrezgene, refseq and omim  <cit> , users can obtain more information on interesting genes and sentences. although pse has no rule for assigning homonyms, it can display a list of them in case of incorrect assignments. using the list, users can select the correct symbol and get information on the correct gene. this program also contains a simple text search function. therefore, users can search co-occurrence sentences with any keyword in the registered abstracts.

RESULTS
detection sensitivity of gene names
the detection sensitivity of gene names of pse was evaluated using two sets of forty abstracts randomly selected from the whole pubmed. the precision, recall and f-measure were 77–78%, 45–66% and 57–71%, respectively . in order to collect an extensive and rich collection of mammalian gene names, we retrieved  <dig>  abstracts using the following keywords, "gene and disease and activation". two sets of forty abstracts were randomly selected from this set and used for another evaluation. the precision, recall and f-measure were 86–93%, 58–65% and 69–76%, respectively . pse was also evaluated with the genia corpus  <cit> . the precision, recall and f-measure were 63%, 65% and 64%, respectively . homonyms were not considered in this evaluation.

exploring of cancer related genes
to demonstrate the usefulness of this program, we show an example of exploring cancer related genes.  <dig>  pubmed abstracts were retrieved using "cancer and overexpression" as the keywords and registered into pse. pse found  <dig>  gene names in the abstracts, of which  <dig> gene names were included in more than  <dig> sentences . figure  <dig> is a screenshot of the page selecting a gene name and a common word. one pull-down list of genes displayed many well-known cancer-related genes with parentheses showing the number of sentences containing each gene name. another one is the pull-down list of common words. it contained many words relating to the gene function, e.g. growth, apoptosis, metastasis and so on.

when erbb <dig> and metastasis were selected in the screenshot shown in figure  <dig>  we automatically get the result shown in figure  <dig>  figure 3a is the front part of the result. this part shows information about the gene and the links to the external resources, entrezgene, omim and refseq. figure 3b is the back part. the selected keywords including synonyms of erbb <dig> are highlighted. the number at the end of each sentence is the pubmed id that links to the whole abstract. figure 3b indicates that occasionally, sentences are not relevant to the information being sought . thus, while the user will still have to manually scan the result set, the aim of pse is to shorten the sentences that the user will have to sift through. users can obtain the information on the relationship of erbb <dig> and metastasis even if they cannot come up with the words, erbb <dig> and metastasis.

discussion
we developed a web-based text mining software for use within an intranet. because the response time was few seconds under the following test condition, less than  <dig>  abstracts using a standard pc, amd athlonxp  <dig> and  <dig> mb ram, we believe that our software can be developed for actual use.

pse has the following four advantages over a basic pubmed search;

1) pse can extract sentences which imply gene function or its role, effectively, because pse uses one gene name and one common word as two keywords. in addition, pse evaluates the existence of keywords for individual sentences, but the popular pubmed search evaluates that at the record-level. therefore, the relationship between the two keywords is considered to be more significant from the result of pse than from pubmed. because of these advantages, users can read the extracted sentences, and extrapolate relationships between genes and their functions or roles, prior to reading whole abstracts. it will reduce the overall searching task and help to get necessary records more efficiently.

2) pse displays the lists of gene names and common words. there is a limit to the number of appropriate and various keywords thought by users, and this process fully depends on their knowledge and search technique. the lists are considered to be useful for them not only to select keywords but also to cover the knowledge and search skill. in addition, they may help users to find unexpected roles or functions of genes, and get new idea and strategies.

3) pse considers synonyms and variations of gene names. eight sentences were shown in figure 3b. if only "erbb2" was used as a search keyword, only two sentences would be extracted and the others would be missed. this example shows that consideration of synonyms and variation is a powerful function.

4) pse links to external databases such as omim, entrezgene and refseq. because there are various well-organized and high-quality information in these databases, users can get an overview of each gene including sequence information. it is noteworthy that the link to sequence information would ease the combination with other systems, e.g. microarray, similarity search and so on.

based on these four advantages, we believe that pse is a useful tool for collecting literature information about gene efficiently.

in the previous version of pse  <cit> , we only used the dictionary to extract gene names. the new version of pse employs the dictionary and additional rules, sl <dig>  sl <dig> and pl <dig>  because the precision was significantly improved from 48% to 77% by this modification, the addition of other rules was quite effective. the choice of the dataset affects on the evaluation. the precision of ev <dig> is better than ev <dig> and the variation was caused by the difference in gene name frequency. it seems that ev <dig> is fair but far from practical, but ev <dig> is one of the most considerable examples to use. we think user would feel the latter sensitivity in the practical use. the precision of ev <dig> is slightly worse than ev <dig> and ev <dig>  this difference is caused by the discrepancy in criteria between genia and pse, and the false negatives of genia. assignment of homonyms is another important issue and is not yet regarded by our system.

CONCLUSIONS
we developed pse in order to extract useful records efficiently from pubmed while focusing on gene information. this system has the following four advantages: the reduction of the amount of records in the result set, the showing of keyword lists, the consideration for synonyms and variations in gene names, and the links to external databases. we believe that pse is helpful in collecting useful literatures efficiently in order to find research targets. pse is intended to be used in a small intranet and it is freely available under gpl licence as additional files to this manuscript.

availability and requirements
pse is freely available under the gpl license as additional files to this manuscript . it runs on unix platform and requires php, perl and apache.

authors' contributions
ty designed and programmed the software and wrote this manuscript.

supplementary material
additional file 1
pse package. this gzip compressed tar archive is a complete pse package. it includes the programs, instruction and sample data.

click here for file

 acknowledgements
i thank to mr. takayuki onuma and ms. reina matsumoto for their comments, discussions and continuous support. i am also grateful to drs. yasuhiko koezuka and raymond wan for their comments, which greatly improved this manuscript.
