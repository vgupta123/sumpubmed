BACKGROUND
since their inception in the early 1990s, dna microarrays have revolutionized many areas of biological research. they are a fast and relatively inexpensive tool used for genome-wide studies of gene expression, epigenetic modifications, binding sites of dna-binding proteins, copy-number variation as well as for resequencing projects. their success is largely due to the ever growing number of features that can be represented on a single array, allowing for the simultaneous investigation of a large number of genomic loci.

yet the large number of features, and a concomitant increase in the number of experiments conducted , also poses the problem of finding the data of interest. essential to any microarray experiment is thus the filtering of the large data matrix, the aim is to find  submatrices  with common characteristics. furthermore, assigning statistical significance values to the features  is a very common task. a large number of different methods have been developed for automated as well as exploration-driven analysis of complex data, some of them specific to the field of microarray analyses, others are more general in application.

however, most of these methods are available only as stand-alone programs or proof-of-concept implementations. during a normal microarray experiment, several of these methods have to be used in combination. which methods are used and in what order depends on the nature of the data, the experimental conditions and on observations made during the analysis itself. thus, bioinformaticians need an integrative framework combining many of these methods to be able to efficiently analyze their data. such a framework must also allow the quick addition of new methods and support their development via rapid prototyping.

brb-arraytools is such an integrated software system developed by biostatisticians  <cit> . it is an add-in to microsoft excel under the microsoft windows family of operating systems. among the tools are algorithms for normalization, the computation of differentially expressed genes, cluster analysis, and class prediction. brb-arraytools focuses mainly on the development of new statistical methods for expression data analysis.

emma  <dig> provides a wide collection of algorithms and a database to store, retrieve, and analyze genome-wide datasets in a miame and mage-ml compliant format  <cit> . for the user it features a web interface, however no offline version is available. emma's main emphasis is the analysis of mage-compliant data. it is fully open-source offering a large number of various analysis algorithms encompassing preprocessing and normalization, statistical methods for the detection of differentially regulated genes, various cluster algorithms and visualization features. the user can setup pipelines that allow automatic analysis.

the gene expression profile analysis suite  offers a similar approach to the analysis of microarray data as emma  <cit> . it also provides a web-based interface. its main strength is the multitude of tools offered ranging from preprocessing to functional profiling.

the tm <dig> suite of tools consist of four major applications, microarray data manager , spotfinder, microarray data analysis system , and multiexperiment viewer , as well as a minimal information about a microarray experiment -compliant mysql database  <cit> . mev is a microarray data analysis tool written in java. it is free, open-source software incorporating algorithms for clustering, visualization, classification, statistical analysis and biological theme discovery. mev offers a number of visualizations. however, it does not allow users to interactively explore data through the combined use of several different linked plots and does not offer many possibilities for using meta information to enhance visualizations.

the importance of appropriate visualization methods for microarray data has long been recognized. a framework for the visual integration of additional meta-information of gene expression data was introduced in  <cit>  and demonstrated in an application of the heat colormap. the enhanced heatmap showed the clear advantages of the integration of supplemental data from different sources for the visual exploration of microarray data.

as the raw experimental data is the biologists' most valuable resource, researchers want to be able to perform their analyses in-house, preferably on their personal computer. the size of modern datasets also makes repeated transfers over the network infeasible.

mayday
mayday  <cit>  is a platform-independent framework for data analysis and visualization. written in java, it can be installed locally or run without any installation as webstart application. mayday provides efficient core data structures as well as a powerful plugin management system which allows for fast extension via custom plugins. a large number of plugins is already available, covering such areas as clustering, classification, and visualization. all methods presented here are implemented in java except for the import from affymetrix cel files .

clustering is one of the most common tasks in microarray analyses. mayday offers several clustering methods with different optimization criteria. besides the well-established partitioning methods such as k-means and som  <cit> , hierarchical clustering methods such as upgma, wpgma and neighbor-joining are available. all clustering methods can be performed with a wide range of distance measures .

offered visualization tools should be of great assistance in interpreting the results of microarray experiments. among the most commonly used ones are heatmaps, boxplots, ma scatter plots and histograms. thus, mayday's main strength lies in visualization and visualization-driven data exploration. data can be visualized in many different ways, including profile  plots, box plots, scatter plots and heatmaps. all mayday plots can be exported as publication quality files, using different bitmap formats  as well as the scalable vector graphics format . the different views on the data are linked so that interaction with a profile plot is reflected in a simultaneously opened heatmap, for instance. meta-information can be used to enhance the plots, i.e. add additional data to the visualizations. these can come from clusterings  or external sources , or can be the result of statistical tests applied within mayday, such as p-values. these can, for instance, be used to add additional columns to mayday's heatmap, to sort the heatmap's rows, to add transparency or a second color dimension or to change the height of rows according to their significance. furthermore, users can inspect all meta information associated with the probes in a tabular view, sort the table by any meta information column, or use meta information to filter probes.

finding significantly differentially expressed genes is one of the core functions offered by mayday. a host of different methods are already available  and can be combined with correction methods for multiple testing. anova analyses are supported as well.

implementation
the current version of mayday offers many enhancements and new features. the core structures were optimized and rewritten to improve performance and simplify the addition of new functionality. among the new features are the ability to create a hierarchical structure within datasets, a much-improved user-interface with customizable profile previews, matrix operations such as merge and split, new statistical methods for the identification of differentially expressed genes , online data transformations  and many more. see figure  <dig> for an overview of mayday's user interface. some of the highlights will be presented in the following sections.

automated processing
since many analysis steps are common to the first-level analysis of virtually all microarray data, mayday offers a powerful processing pipeline construction framework allowing for the automation of such tasks and their rapid application to new data sets. pipelines can be stored persistently and shared with other users.

dynamic filtering
a dynamic filtering framework has been integrated into mayday, to create so-called dynamic pro-belists. by chaining together any number of filter-ing modules and logical operators, arbitrarily complex filters can be created in an easy to use graphical editor. a large number of modules are available for filtering on expression values, meta data, feature names, the content of other  probelists or similarity measures . dynamic probelists react to changes in the underlying data and are updated accordingly.

new clustering methods and visualizations
while k-means is one of the most used clustering algorithms in microarray analyses, new methods have been developed that overcome some of k-means deficits and have been shown to give good results. one such method is quality-threshold  clustering  <cit> , now available in mayday. instead of a predefined number of clusters, the input parameter is the desired quality  of clusters to be found. we have implemented a graphical interface that aids users in determining the correct parameter values for their dataset, depending on the distance measure of choice. furthermore, a density-based clustering  <cit>  method has been added. clustering result quality can now be assessed using silhouette plots and different clustering methods can be compared with each other or with a partitioning defined by a priori knowledge.

to speed up hierarchical clustering of large datasets, we included an efficient implementation the rapid neighbor-joining algorithm  <cit> . the trees produced by all hierarchical clustering methods are now stored and can be attached to heatmap plots in addition to being displayed in separate viewers using different layout algorithms.

we extended the idea of sequence logos  <cit>  to visualize the general direction of expression within experiments: the profilelogo plot shows stacked probe expression bins, scaled to their frequency within each experiment. expression bins are defined by thresholds, e.g. for up and down-regulated genes. histogram plots have been implemented to gain insight into the distributions of statistical and experimental values, as well as meta data values attached to the data.

selected probes resp. genes in each plot can be used as the basis for database queries in a large number of public databases, among them ncbi, ensembl, gene ontology, kegg, and pubmed.

machine learning
training, evaluation and application of classification models of numerous different types are further applications of mayday. for dimensionality reduction and identification of marker genes several feature selection methods are available. the machine learning techniques are provided using the weka  <cit>  library which has been integrated into mayday. in addition, the gene mining plugin provides a number of methods to select genes separating classes among the experiments.

project management
mayday's projectdb implements central and organized storage of datasets and can be used for data mining purposes. as back-end it can either use apache derby  <cit>   or dedicated database management systems . datasets can be organized in projects and project states, allowing to take snapshots of different stages of their analysis. the graphical projectdb browser provides previews of each object, including profile plots and boxplots of the experimental data. the data can also be queried directly using an interactive shell.

alternatively, mayday implements a snapshot file format that can be used to save the current state of a data set including meta-information, de-fined clusters, hierarchical clustering trees etc. the snapshot format is specifically designed for fast data storage and retrieval while still being a very space-efficient compressed representation of the data.

programmers' access
bioinformaticians will especially like our programmers' access to the data. we have a tightly integrated efficient r shell that integrates the full functionality of r  <cit>  and its wealth of available packages and thus allows the application of third-party methods directly on mayday's data. r processes can also be connected to mayday over the network allowing complex calculations to run on a powerful workstation or cluster and communicating with a mayday instance running on the researcher's laptop, for instance. furthermore, all gene expression data and meta information currently opened in mayday can be queried using standard sql, including the possibility to create new views and custom tables. these shells both feature syntax-highlighting editors with persistent history, greatly increasing programmers' productivity .

cross-dataset analyses
time series analyses as well as replicate studies often require researchers to compare different datasets, e.g. to find systematic shifts in expression over time.

mayday now offers a specialized view for this purpose in addition to the cross-dataset analyses possible with our r and sql command-line interfaces.

integrated analyses - systems biology
for integrative pathway analyses, biochemical pathways from several sources, including kegg  <cit>  and metacyc  <cit>  can be visualized as networks. the expression data of enzymes and concentration data of metabolites can be summarized and visualized on the network in different forms, including profile plots and heatmaps.

gene annotations can be imported from external databases. we currently offer direct support for the gene ontology  <cit>  and kegg databases. gene identifier mapping can be done automatically using the picr  <cit>  service.

RESULTS
application study: dynamic architecture of the metabolic switch in s. coelicolor
to demonstrate the new functionalities of mayday, we present here an analysis of a large time series in streptomyces coelicolor. for streptomycetes it has proved very difficult to identify the key regulators that control expression of the pathway specific regulators. mayday was used to monitor the expression dynamics of the bacterium in a time series dataset with unprecedented resolution.

a custom-designed affymetrix array containing  <dig>  probe sets interrogating genes, intergenic regions, and predicted noncoding rnas was used to study the gene expression in mostly hourly intervals starting at  <dig> h after inoculation, up to  <dig> h  <cit> . altogether,  <dig> time points were studied. phosphate was depleted in the medium at  <dig> h.

all oligos of the probe sets were mapped to their genomic locus on the chromosome or on one of the two plasmids of streptomyces coelicolor. for each probe set the start and end genomic coordinate together with the strand orientation were written to a tab-separated file.

within mayday we imported data from  <dig> cel files using mayday's r interpreter. for normalization we used the robust multi-array average method   <cit>  as provided in the affy <cit>  package of bioconductor  <cit> . we imported genomic locus information from the tab-separated file described above for later steps in the analysis.

using a custom processing pipeline, we automatically compute regularized variance for each probe and then apply a filtering step to create a probe list of most variant probesets. of  <dig>  probesets,  <dig> remain after filtering with a regularized variance threshold of  <dig> .

based on this probelist of variant probesets, we create a new dynamic probelist to select only those probes that, apart from being the most variant, interrogate protein coding genes , and query the plus strand of the sco genome .  <dig> probesets remain. changing any of the filter parameters automatically updates all plots based on the dynamic probelist.

the time series sampling reflects the development of streptomyces coelicolor from early growth phase to stationary phase. accordingly, the expression differences between the samples taken at two consecutive time points should, in general, be smaller than those between samples from time points that lie further apart. furthermore, the differences between time points should reflect the rate of change in the metabolic state of the culture. to assess this hypothesis, we performed a hierarchical clustering of the transposed matrix, i.e. clustering of the experiments, using the most variant genes. we used the euclidean distance and mayday's implementation of the rapid neighbour-joining algorithm  <cit> . the resulting cluster tree is visualized along with a heatmap in figure  <dig>  as expected, the early  and late time  points are at the outermost leaves of the tree and consecutive time points are clustered very closely together. the tree nicely depicts the consecutive points of time along the growth curve of the organism. it also shows the major expression change occurring between  <dig> and  <dig> hours after inoculation. this largest expression change coincides exactly with the time of complete phosphate depletion in the fermenter.

since the heatmap suggests the existence of distinct groups of genes within the probelist, we use qt clustering with a diameter of  <dig>  and use the resulting clusters to color a profile plot showing the z-scored profiles of the genes . the dynamic architecture of the metabolic switch is clearly visible with different groups of genes being up-resp. down-regulated in a successive order of time points .

the heatmap also shows that there are some genes that clearly separate the time points 46- <dig> from the earlier ones. using the genemining plugin, we search for those genes that optimally separate these two groups of experiments . of the  <dig> genes in the dynamic probelist described above,  <dig> belong to the list selected by the quartet mining algorithm. these genes all exclusively belong to the actinorhodin pathway, a genomic cluster of genes .

the experimental data also contains optical measurements of the amount of actinorhodin produced. combining scocyc  <cit>  pathway information, expression values and external measurements of actinorhodin levels, we produce an interactive visualization of the actinorhodin pathway . on first glance, it is obvious that spectrometrically measured actinorhodin concentration rises in response to the upregulation of several enzymes in this pathway. interesting target compounds for analysis can be selected from the pathway image for further wet-lab investigation.

since the dataset used here is part of a larger experiment where biological replicates were produced in separate fermentation runs, we decided to investigate whether we could detect systematic differences between these replicates. figure  <dig> shows mayday's time series alignment tool with one of the qt clusters as an example. the genes in that cluster are up-regulated one hour later in the second fermentation  than in the reference fermentation . this time shift could be traced to a one-hour delay in phosphate depletion in the second fermentation.

discussion
mayday is a comprehensive platform for the analysis and the visual exploration of microarray data. according to allison et al.  <cit>  the most important statistical components of a microarray experiment analysis involve the following steps: design, preprocessing, inference or classification and validation. during the last years analysis of microarray data has become highly sophisticated, new methods are published almost daily. these range from preprocessing and normalization to novel statistical and machine learning methods. a software that wants to keep pace with these developments has to provide possibilities to enable the rapid integration of new methods as well as making them as usable as possible.

an important focus of exploration of high-dimensional data, such as microarray data, lies on visualization. the advantage of our design is the tight integration of both analysis and visualization as well as the various visualization techniques themselves.

this combination of automatic and visual analysis leads to a visual analytics approach that provides more insights in the structure of the data. we think that with mayday such a visual analytics approach for the analysis of high-dimensional microarray data has been realized.

CONCLUSIONS
we present a very versatile open-source framework for efficient microarray data analysis, designed for biologists and bioinformaticians. all common tasks of microarray analyses are already covered and the wide range of functionality from the already existing plugins can swiftly be extended with new plugins written in java, ad-hoc scripting interfaces facilitate rapid prototyping of new algorithms as well as interactive specialized data exploration. mayday's interactive visualization methods in conjunction with the meta-data concept provide significant insight into complex data and have successfully been applied in many microarray analyses.

new methods and tools are continuously added to mayday's platform to keep up with new developments. our coming release includes two new visualizations based on genomic locus information: a track based visualization and a view showing expression  values as colored boxes aligned to a linear chromosome laid out continuously in stacked rows. both are fully interactive and integrated with all other visualizations.

most recently, novel ultra-high throughput dna sequencing technologies have been developed that enable researchers to obtain the complete genomes of organisms faster and at a lower cost than classical methods  <cit> . moreover, these technologies can be applied to measure gene expression   <cit>  and protein-dna interactions   <cit> , and many current studies use rna-seq and microarray data comparatively. our new genomic plots will be especially useful in the context of such new types of data. we're currently working on an integration of these new data types into mayday, separately or in multi-platform settings.

availability and requirements
• project name: mayday

• project home page: http://microarray-analysis.org

• operating systems: platform independent

• programming languages: java

• other requirements: java  <dig> or higher

• license: gnu gpl version 2

authors' contributions
sy and fb are coordinating development of mayday. fb performed the data analysis and wrote the manuscript. kn coordinated and designed the study. all authors read and approved the final manuscript. none of the authors have any competing financial or other interests in relation to this work.

