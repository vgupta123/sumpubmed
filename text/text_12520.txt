BACKGROUND
automated protein-protein interaction  extraction from unstructured text collections is a task of significant interest in the bio-literature mining field. the most commonly addressed problem has been the extraction of binary interactions, where the system identifies which protein pairs in a sentence have a biologically relevant relationship between them. proposed solutions include both hand-crafted rule-based systems and machine learning approaches  <cit> . recently semi-supervised learning  techniques have been applied to ppi tasks  <cit> . ssl is a machine learning  approach that combines supervised and unsupervised learning where typically a small amount of labeled and a large amount of unlabeled data are used for training. ssl has gained significant attention to ppi extraction because of two reasons. first, labeling of a large set of instances is labor-intensive and time-consuming. this task has to be also carried out by qualified experts and thus is expensive. second, several studies show that using unlabeled data for learning improves the accuracy of classifiers  <cit> .

one major problem of ssl is that it may introduce incorrect labels to the training data, as the labeling is done by machine, and such labeling errors are critical to the classification performance. active learning  can complement the ssl by reducing such labeling errors  <cit> . al is a technique of selecting a small sample from the unlabeled data such that labeling on the sample maximizes the learning accuracy. the selected sample is manually labeled by experts. in this paper, we explore combining the al with the ssl to improve the performance of the ppi task. to our best knowledge, this is the first attempt to apply a combination of semi-supervised and active learning for the extraction task of protein-protein interaction.

the contributions of this paper are three fold. first, we proposed a novel ppi extraction technique called ppispotter by combining deterministic annealing-based ssl and an al technique to extract protein-protein interaction. second, we extracted a comprehensive set of features from medline records by natural language processing  techniques, which further improve the svm classifiers. in our feature selection technique, syntactic, semantic, and lexical properties of text are incorporated into feature selection that boosts the system performance significantly. third, we conducted experiments with three different ppi corpuses and showed that ppispotter is superior to other techniques by precision, recall, and f-measure.

many approaches have been proposed to extract protein-protein interaction from unstructured text. one approach employs pre-specified patterns and rules for ppi extraction  <cit> . however, this approach is often inapplicable to complex cases not covered by the pre-defined patterns and rules. huang et al.  <cit>  proposed a method where patterns are discovered automatically from a set of sentences by dynamic programming.

the second approach utilizes dictionary. blaschke et al.  <cit>  extracted protein-protein interactions based on co-occurrence of the form “… p1…i1… p2” within a sentence, where p <dig>  p <dig> are proteins and i <dig> is an interaction term. protein names and interaction terms  are provided as a “dictionary.” pustejovsky et al.  <cit>  extracted an “inhibit” relation for the gene entity from medline. jenssen et al.  <cit>  extracted gene-gene relations based on co-occurrence of the form “… g1…g2…” within a medline abstracts, where g <dig> and g <dig> are gene names. gene names were provided as a “dictionary”, harvested from hugo, locuslink, and other sources. although their study uses  <dig>  named human genes and millions of medline abstracts, no extensive quantitative results are reported and analyzed. friedman et al.  <cit>  extracted a pathway relation for various biological entities from a variety of articles.

the third approach is based on machine learning techniques. bunescu et al.  <cit>  conducted protein/protein interaction identification with several learning methods such as pattern matching rule induction , boosted wrapper induction , and extraction using longest common subsequences . elcs automatically learns rules for extracting protein interactions using a bottom-up approach. they conducted experiments in two ways; one with manually crafted protein names and the other with the extracted protein names by their name identification method. in both experiments, zhou et al.  <cit>  proposed two novel semi-supervised learning approaches, one based on classification and the other based on expectation-maximization, to train the hvs model from both annotated and un-annotated corpora. song et al.  <cit>  utilized syntactical, as well as semantic cues, of input sentences. by combining the text chunking technique and mixture hidden markov models, they took advantage of sentence structures and patterns embedded in plain english sentences. temkin and gilder  <cit>  used a full parser with a lexical analyzer and a context free grammar  to extract protein-protein interaction from text. alternatively, yakushiji et al.  <cit>  propose a system based on head-driven phrase structure grammar . in their system protein interaction expressions are presented as predicate argument structure patterns from the hpsg parser. these parsing approaches consider only syntactic properties of the sentences and do not take into account semantic properties. thus, although they are complicated and require many resources, their performance is not satisfactory. mitsumori et al.  <cit>  used svm to extract protein-protein interactions. they use bag-of-words features, specifically the words around the protein names. these systems do not use any syntactic or semantic information. miyao et al.  <cit>  conducted a comparative evaluation of several state-of-the-art natural language parsers, focusing on the task of extracting protein–protein interaction  from biomedical papers. they found marginal difference in terms of accuracy but more significant differences in parsing speed. bioppisvmextractor is a recent ppi extraction system developed with svm  <cit> . it utilizes rich feature sets such as word features, keyword feature, protein names distance feature, and link grammar extraction results for protein-protein interaction extraction. they observed that the rich feature sets help improve recall at the cost of a moderate decline in precision.

cui et al.  <cit>  applied an uncertainty sampling based method of active learning for a lexical feature-based svm model to tag the most informative unlabeled samples. they reported that the performance of the active learning-based technique on aimed and cb corpora was significantly improved in terms of reduction of labelling cost.

methods
in this section, we describe the overall architecture and procedures of ppispotter . ppispotter incorporates al models into ssl svms for extraction of protein-protein interaction. ppispotter also automatically converts a sentence into  <dig> feature sets based on the technique described in section  <dig> 

below is a set of steps that ppispotter processes.

step 1: preprocess the initial training data. the feature selector applies the feature selection technique proposed in section  <dig> to the preprocessed data sets.

step 2: train the model. two classifiers, break tie-based svm  and deterministic annealing-based svm  classifiers are combined to train the model . figure  <dig> illustrates how to combine these two techniques . at this stage, the human expert provides feedback to the system for a set of instances in the fuzzy unlabeled data. note that the bt-svm classifier is based on the break tie active learning approach and da-svm classifier is based on the deterministic annealing technique.

step 3: take the input data and convert it to the same format as the training data. the feature selector performs the same task as in step  <dig> 

step 4: apply the btda-svm learner to identify sentences that contain protein-protein interaction.

step 5: store extracted sentences to the database.

combination of active learning with semi-supervised learning
one of the goals of this paper is to combine ssl and al into a unified semi-supervised active learning technique for protein-protein interaction extraction. we employ a proportion of unlabeled data in the learning tasks in order to resolve the problem of insufficient training data.

our strategy of combining al with ssl is inspired by the tur et al.’s study  <cit> . we employ the break tie al technique  to train a classifier on both labeled and unlabeled data, and return to the user the most relevant results. then, the learning system trains a classifier based on the deterministic annealing ssl technique  on both the labeled and unlabeled data , and results in the final model .

btda-svm is a combination of the active learning algorithm presented in section  <dig> and the semi-supervised learning algorithm presented in section  <dig>  instead of leaving out the instances classified with high confidence scores, this algorithm exploits them. figure  <dig> explains the btda-svm algorithm.

active learning
active learning, known as pool-based active learning, is an interactive learning technique designed to reduce the labor cost of labeling in which the learning algorithm can freely assign the unlabeled data instances to the training set. the basic idea is to select the most informative data instances for labeling by the users in the next learning round. in other words, the strategy of active learning is to select an optimal set of unlabeled data instances that minimizes the expected risk of the next round.

breaking tie 
for a given instance, the regular svms results in distances among instances whose range is from  <dig> to  <dig>  the value  <dig> means that the instance lies on the hyperplane and the value  <dig> indicates that the instance is a support vector.

to assign a probability value to a class the sigmoid function can be used with the assumption that a probability associated with a classifier indicates to which extent the classification result is trusted. in this case, luo et al.  <cit>  defines the parametric model in the following form:   

where a and b are scalar values, which have to be estimated and f is the decision function of the svms. this parametric model is used for calculating the probabilities. to use this model, the svm parameters  and the parameter a and b need to be calculated. although cross validation can be used for this calculation, it is computationally expensive. an alternative is a pragmatic approximation method that all binary svms have the same a while eliminating b by assigning  <dig>  to instances lying on the decision boundary and by trying to compute the svm parameters and a simultaneously  <cit> .

the decision function can be normalized by its margin to include the margin in the calculation of the probabilities.   

where we currently look at class p and ppq is the probability of class p versus class q. we assume that ppq, q= <dig> ,... are independent. the final probability for class p:   

it has been reported that the performance bases on this approximation is fast and accurate  <cit> . this probability model serves as basis for the breaking tie algorithm for semi-supervised learning.

semi-supervised support vector machines
support vector machines  is a supervised machine learning approach designed for solving two-class pattern recognition problems. svms adopts maximum margin to find the decision surface that separates the positive and negative labeled training examples of a class  <cit> .

transductive support vector machines  is an extended version of svm that uses unlabeled data in addition to labeled data for train classifiers  <cit> . the goal of tsvms is to determine which test data instances result in the maximum-margin hyperplane that separates the positive and negative examples for classifiers. since every test instances need to be included in the svm’s objective function, finding the exact solution to the resulting optimization problem is intractable. to resolve this issue, joachims  <cit>  proposed an approximation algorithm. one issue of joachims’ approach, however, is that it requires the similar distribution of positive and negative instances between the test data and the training data. this requirement is difficult to meet particularly when the training data is small. the challenge is to find a decision surface that separates the positive and negative instances of the original labeled data and the unlabeled data to unlabeled data to be converted to labeled data with maximum margin. the unlabeled data sets apart the decision boundary from the dense regions, and the optimization problem is np-hard  <cit> . various approximation algorithms are found in  <cit> .

the optimization problem held in tsvms is a non-linear non-convex optimization  <cit> . past several years, researchers have attempted to solve this critical problem. chapell and zien  <cit>  proposed a smooth loss function, and a gradient descent method to find the decision boundary in a region of low density. another technique is a branch-and-bound method  <cit>  that searches for the optimal solution. but, it is applicable to a small number of examples due to involving the heavy computational cost. despite the success of tsvm, the unlabeled data does not necessarily improve classification accuracy.

as an alternative to tsvms, we explore an deterministic annealing approach to semi-supervised svms. the first approach was proposed by luo and his colleagues  <cit>  that formulated a probabilistic framework for image recognition. the deterministic annealing  approach is the second proposed by sindhwani et al.  <cit> . in the probabilistic framework, semi-supervised learning can be modeled as a missing data problem, which can be addressed by generative models such as mixture models. in the case of semi-supervised learning, probabilistic approaches provide us with various different ways to query unlabeled instances for labeling. a simple method is to train a model on the given labeled datasets and use this model on the unlabeled data. each of these unlabeled instances is given probabilities that these instances belong to a given class. we can query the least certain instances or the most certain instances. the detailed description of the deterministic annealing semi-supervising learning is provided in the study of luo and his colleagues  <cit> .

deterministic annealing 
deterministic annealing  is a special case of a homotopy method for combinatorial optimization problems  <cit> . we adopt the da technique proposed by sindhwani et al.  <cit>  to extraction of protein-protein interaction. the detailed description of applying da for svms is provided by sindhwani et al.  <cit> .

suppose one is given a following non-convex optimization problem:   

da finds a local minimum of this in the following: first, da treats the discrete variables as random binary variables over a space of probability distributions p. second, to solve the optimization problem, da finds a distribution p ∈ p that minimizes the expected value of f. it makes the optimization problem to be continuous. for this reason, an additional convex term is added to the objective function which is the entropy s of the distribution denoted in eq.  <dig>    

where the parameter t controls the trade-off between the expectation and the entropy  and y ∈ { <dig> }n are the discrete variables for the objective function f. for t =  <dig> and p including all point-mass distributions over { <dig> }n, the global minimizer p∗ in eq.  <dig> will place all of its mass on the global minimizer of f. however, if t ≫  <dig>  the entropy term in eq.  dominates the objective function. with convexity, we can solve a sequence of problems for values of t <dig> >t <dig> > … >t∞ =  <dig> where each of them is initialized at the solution obtained by the previous one. this sequence of temperatures is called as the annealing schedule. when t is close to zero the influence of the entropy term becomes shrunken. therefore, the distribution becomes more concentrated on the minimum of ep which allows us to identify the discrete variables y by p. note that there is no guarantee for global optimality because there is not always a path connecting the local minimizers for the chosen sequence of t to the global optimum of f.

applying da to svms
given a binary classification problem, we consider a set of l training pairs l = {,…}, x ∈ ℝn, y ∈ { <dig>  –1} and an unlabeled set of u test vectors u = {xl+ <dig> …,xl+u} svms have a decision function fθ of the form fθ = w · Φ + b, where θ =  are the parameters of the model, and Φ is the chosen feature map, often implemented implicitly using the kernel trick. given a training set l and a test set u, for the tsvm optimization problem, find among the possible binary vectors {γ = } the one such that an svm trained on l ∪ yields the largest margin. this combinatorial problem can be approximated as finding an svm separating the training set under constraints which force the unlabeled examples to be as far as possible from the margin. this can be written as minimizing  subject to and . this minimization problem is equivalent to minimizing   

where the function h <dig> = max is the classical hinge loss function. in other words, tsvm seeks a hyperplane w and a labeling of the unlabeled examples, so that the svm objective function is minimized. the discussion in deterministic annealing motivates a continuous objective function,   

that defined by taking the expectation of τ  with respect to a distribution p on y′ and including entropy of p as a homotopy term.

for a fixed t, the solution to the optimization problem above is tracked as the temperature parameter t is lowered to  <dig>  the da algorithm returns the solution corresponding to the minimum value achieved when some stopping criterion is satisfied. the criterion used in the da algorithm is the pair-wise mutual information  between values of p in consecutive iterations. the parameter t is decreased in an outer loop until the total entropy falls below a threshold.

feature selection
rich feature sets improve accuracy of the ppi extraction task  <cit> . the features used in yang’s paper include word features, keyword features, protein name distance features, and link path features, etc. in this paper, we explore various different features such as syntactic and lexical features as well as semantic features such as negated sentence features, interactor and its pos tag features into the feature sets. the total  <dig> features were selected for our semi-supervised learning technique .

negation: we include whether a sentence is negated or not in the feature set. we use negex developed by chapman and colleagues  <cit>  for negation. negex is a regular expression-based approach that defines a fairly extensive list of negation phrases that appear before or after a finding of negation. negex treats a phrase as a negated one if a negation phrase appears within n words of a finding. the output of negex is the negation status assigned to each of the umls terms identified in the sentence: negated, possible or actual. negex uses the following regular expressions triggered by three types of negation phrases:


<pre-umls negation phrase> {0- <dig> tokens} <umls term> and <umls term> {0- <dig> tokens} <post-umls negation phrase>


there are three types of negation phrases in these expressions: 1) pre-umls, 2) post-umls and 3) pseudo negation phrases. pre-umls phrases appear before the term they negate, while the post-umls phrases appear after the term they negate. pseudo negation phrases are similar with negation phrases but are not reliable indicators of negation; they are used to limit the negation scope. all umls terms inside of the 0- <dig> tokens window are assigned the negation status depending on the nature of the negation phrase: negated or possible. the example of the negated sentence processed with negex is as follows:


.no relevant changes in heart rate , body weight , and plasma levels of renin activity and aldosterone concentration were observed ➔ negated 


number of proteins named entities  occurrences: we extracted protein names from each sentence by using a conditional random field -based named entity recognition  technique.

to train the crf ner, we used the training data provided for the biocreative ii gene mention tagging task. the training data consist of  <dig>  sentences. approximately  <dig>  gene and altgene annotations were converted to the medtag database format  <cit> . once we built the train model, we applied the crf ner to extract proteins or genes from a sentence and counted the number of occurrences of genes in the sentence.

interactor: interactor is the term that shows the interaction among proteins in a sentence. the total of  <dig> interactor terms was identified. we applied a modified uea stemmer to take care of term variations of interactor  <cit> . we did not apply an aggressive stemmer like porter stemmer since we wanted to preserve the pos tag of the interactor.

interactor pos: as for protein named entities, we applied the crf-based pos tagging technique to tag tokenized words in a sentence. the crf-based pos tagger was built on top of the mallet package  <cit> .

interactor position: we included the position of the interactor term in a sentence in the feature set.

number of words in between proteins: we included the number of words in a left most protein ne and a right most protein ne in the feature set.

number of left words: we included the number of words in the left side of the first appearance of a protein ne in the feature set.

number of right words: we included the number of words in the right side of the last appearance of protein ne in the feature set.

link path status: this feature set is obtained by link grammar that was introduced by lafferty et al.  <cit> . link grammar is used to connect pairs of words in a sentence with various links. each word is linked with connectors. a link consists of a left-pointing connector connected with a right-pointing connector of the same type on another word. a sentence is validated if all the words are connected. we assume that if a link path between two protein names exists, these two proteins have interaction relation. in our feature selection, if a link path between two protein names exists, it is set to “yes”, otherwise, “no”. the link grammar parser was used in several papers to extract protein-protein interaction  <cit> .

RESULTS
data sets
one of the issues in protein-protein interaction extraction is that different studies use different data sets and evaluation metrics. it makes it difficult to compare the results reported from the studies.

in this paper, we used three different datasets that have been widely used in protein-protein interaction tasks. these are 1) the aimed corpus, 2) the biocreative <dig> corpus that is provided as a resource by biocreative ii  challenge evaluation, and 3) bioinfer corpus. table  <dig> summarizes the characteristics of these three datasets.

aimed: bunescu et al.  <cit>  manually developed the aimed corpus <dig> for protein-protein interaction and protein name recognition. they tagged  <dig> medline abstracts, obtained from the database of interacting proteins  and known to contain protein interactions. this corpus is becoming a standard, as it has been used in the recent studies in several studies  <cit> .

biocreative2: is a corpus for protein-protein interactions, originated from the biocreative task 1a data set for named entity recognition of gene/protein names. we randomly selected  <dig> sentences from this set and added additional annotation for interactions between genes/proteins.  <dig> sentences contain at least one interaction,  <dig> sentences contain at least one gene/protein. there are  <dig> interactions, some of which include more than two partners   <cit> .

bioinfer: stands for bio information extraction resource. it was developed by pyysalo et al.  <cit> . the corpus contains  <dig> sentences from pubmed abstracts annotated for relationships, named entities, as well as syntactic dependencies.

since previous studies that used these datasets performed 10-fold cross-validation, we also performed 10-fold cross-validation in these datasets and reported the average results over the runs.

for evaluation methodology, we use precision, recall, f-score, and auc as our metrics to evaluate the performances of the methods.

comparison techniques
in this section, we briefly describe other techniques incorporated into semi-supervised svms and used to evaluate the performance of active semi-supervised learning models adopted in ppispotter.

baseline: random sampling 
random sampling of the unlabeled instances is a naïve approach to semi-supervised learning. we use this approach to compare with the other semi-supervised learning approaches as several studies used this approach to compare it with other semi-supervised learning approaches  <cit> .

clustering 
one technique is a clustering algorithm applied for the unlabeled data. fung and mangasarian  <cit>  used the k-median clustering and showed that the performance was competitive comparing to a supervised learning. the downside of a clustering approach is the correct number of the clusters needs to be pre-defined. we initially tried the two clustering techniques: k-means and kernel k-means and found that there was only marginal difference in terms of performance. therefore, we use k-means for the performance comparison.

supervised svms 
the kernel we used as the baseline supervised svm model is a linear kernel. one of the advantages of supervised svms with a linear kernel is that it can handle high dimensional data effectively. the reason is it compares the “active” features rather than the complete dimensions. this way, we can impose richer feature sets upon each training example to enhance system performance. the richer feature sets showed to be more effective than the simple feature sets  <cit> . another advantage of linear kernel svm is its low training and testing time costs. in addition, using linear kernel svm only penalty parameter c needs to be adjusted in the algorithm, which is usually set as a constant in applications. in our experiments, the svm-light package was used. the penalty parameter c in setting the svm is an important parameter since it controls the tradeoff between the training error and the margin. the svm-light package does an excellent job on setting the default value for this parameter. in our experiments the parameter was left as default value since we observed that other manually determined values of this parameter in fact led to worse performance of supervised svms when compared with the default one.

discussion
we evaluate and compare the performance of the active semi-supervised machine learning approach  in several different ways. first, we compare it with three different techniques: random sampling, k-means clustering, and supervised svms. in addition, we test the performance of btda-svm with supervised counterparts  as well as an active learning technique  for the task of protein-protein interaction extraction. second, we exam whether the size of combined training datasets between unlabeled and labeled data have impact on the performance. as discussed in section  <dig>  we break tie and deterministic annealing, as a kernel function in btda-svm.

we conducted individual t-tests essentially as specific comparisons. our prediction that btda-svm would be better than the other comparison techniques  was confirmed t= <dig> e- <dig>  p< <dig>   at n- <dig> degrees of freedom  while comparing with c-svm which performed best over the other two comparison techniques. similarly, the t-test confirmed that the performance difference of bt-svm is statistically significant from c-svm t= <dig> , p< <dig>  .

in table  <dig>  we also show the results obtained previously in the literature by using the same data set. yakushiji et al.  <cit>  used an hpsg parser to produce predicate argument structures. they utilized these structures to automatically construct protein interaction extraction rules. mitsumori et al.  <cit>  used svms with the unparsed text around the protein names as features to extract protein interaction sentences.

semi-supervised approaches are usually claimed to be more effective when there is less labeled data than unlabeled data, which is usually the case in real applications. to see the effect of semi-supervised approaches we perform experiments by varying the amount of labeled training sentences in the range  <cit> . for each labeled training set size, sentences are selected randomly among all the sentences, and the remaining sentences are used as the unlabeled test set. the results that we report are the averages over  <dig> such random runs for each labeled training set size. we report the results for the algorithms when edit distance based similarity is used, as it mostly performs better than cosine similarity.

btda-svm consistently outperforms other techniques in this experiment. we observed that most of the techniques made significant improvement when the training data reaches  <dig> training instances. compared to other techniques, btda-svm did not make a radical change to the size of training data.

in t-test, we predict that btda-svm would be better than the other three comparison techniques , and the prediction was confirmed t= <dig> , p< <dig>   at n- <dig> degrees of freedom  while comparing with c-svm. however, our prediction that bt-svm would be better than c-svm was not confirmed t= <dig> , p< <dig>  . as shown in figure  <dig>  performance curves are different from ones with the aimed data set. the performance of svm and rs-svm is consistently inferior to c-svm, bt-svm, and btda-svm.

although btda-svm consistently outperforms other techniques in this experiment, it does not show statistical significance = <dig> , p< <dig>   at n- <dig> degrees of freedom). in addition, all techniques did not make a radical change to the size of training data.

we reported the performance of five comparison techniques with the bioinfer data set. table  <dig> shows the experimental results in terms of precision, recall, and auc. btda-svm’s performance is the best over the other four techniques. it is better than the regular svms approach by  <dig> %,  <dig> %, and  <dig> % in terms of precision, recall, and auc respectively. with respect to auc, the results of the t-test indicates that btda-svm’s performance is statistically significantly better than the other three comparison techniques , t= <dig> e- <dig>  p< <dig>   at n- <dig> degrees of freedom  while comparing with c-svm which performed best over the other two comparison techniques. in the same vein, our prediction that bt-svm would be better than c-svm was confirmed t= <dig> , p< <dig>  .

CONCLUSIONS
the goal of our study is two-fold: the first is to explore integrating an active learning technique with semi-supervised svms to improve the performance of classifiers. the second is to propose rich, comprehensive feature sets for the protein-protein interaction. to this end, we presented an active semi-supervised svm-based ppi extraction system, ppispotter, which encompasses the entire procedure of ppi extraction from the biomedical literature: protein name recognition, rich feature selection, and ppi extraction. in ppi extraction stage, besides several common features such as word features and keyword features, some new useful features including protein names distance feature, phrase negation, and link path feature were introduced for the supervised learning problem. we combined an active learning technique, break tie  with the deterministic annealing-based semi-supervised learning technique , which serves the core algorithm for the ppispotter system . this btda-svm technique, compared with four different techniques including an active learning technique , was tested on three widely used ppi corpora. the experimental results indicated that our technique, btda-svm, achieves statistically significant improvement over the other three techniques in terms of precision, recall, f-measure, and auc.

in future work, we plan to further explore the characteristics of active learning approaches to semi-supervised svms and refine our approach to achieve a better ppi extraction performance.

competing interests
the author declare that they have no competing interests.

authors' contributions
ms developed the fundamental idea of the work, performed experiments, validated the results, and wrote the manuscript. hy and wsh participated in the design, the revision of the study and the experiments.

