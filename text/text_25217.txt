BACKGROUND
the visualization of complex datasets is an increasingly important part of biology. many experiments involve the integration of multiple datasets to understand complementary aspects of biology. these overlapping results can be visualized in a number of ways, including textual tables , network diagrams  <cit>  and in some cases heatmaps  <cit> . venn diagrams have seen increasing use due to their familiarity, ease-of-interpretation, and graphical simplicity. for the purpose of this publication, venn diagrams can be defined as diagrams that use simple geometrical shapes such as circles and ellipses to display all 2n- <dig> possible areas created by the interaction of n sets. the use of simple geometrical shapes reduces figure complexity and size relative to space-consuming tables or network layouts.

however, despite this popularity, there are currently few packages for generating venn diagrams in the widely-used r statistical environment. these packages are limited in their ability to generate high-resolution, publication-quality venn diagrams in that they allow little customization of colours, line-types, label-placement, and label font. numerous special-cases are handled inappropriately, and the output is not usually in the format of high-resolution, publication-quality tiff files. other, non-r-based local or web-based software capable of generating venn diagrams exist, such as venny  <cit> , biovenn  <cit> , conset  <cit> , and vennmaster  <cit> . all of these suffer from some of the weaknesses listed above. further, integration into standard r-based statistical/computational pipelines such as the widely used bioconductor libraries of the r statistical environment  <cit>  is viable, but not technically trivial.

additionally, if some intersecting or non-intersecting areas in a venn diagram do not exist, another class of diagrams called euler diagrams may be more desirable. euler diagrams are equivalent to venn diagrams when all intersecting and non-intersecting areas exist. however, areas containing zero elements are shown on venn diagrams , whereas euler diagrams show only non-zero areas. in many cases, euler diagrams further reduce figure complexity, increase graphical accuracy and improve overall readability relative to venn diagrams. unfortunately, almost all existing packages cannot generate publication-quality euler diagrams in r, although venneuler does generate euler diagrams.

to address these issues we introduce venndiagram, an r package for generating highly customizable, high-resolution venn diagrams with up to four sets and euler diagrams of two or three sets in the r statistical environment.

implementation
the venndiagram package has been developed in and designed for the r statistical environment. the r environment is open-source and available online under the gnu general public license . r was chosen because of its open-source nature, versatile functions, and general preference within the bioinformatics community. the use of r should facilitate integration with existing data-analysis pipelines. all code was designed and tested using version  <dig> . <dig>  of r. the venndiagram package is available as additional files  <dig>  and  <dig> .

venndiagram uses the grid package for graphics. the grid package is a base  package available in all installations, and offers more manoeuvrability than default r graphics in terms of graphical options and the existence of modifiable grid objects. venndiagram uses these features to dynamically stretch/compress diagrams to fit the dimensions of the output file and to offer a vast number of graphical options.

RESULTS
almost all graphical options in the venndiagram package have been parameterized and made customizable. default values were selected to generate sensible diagrams, so in simple cases a high level of customization is not required. figure  <dig> highlights the diversity of parameterizations available. four major graphical parameter groups exist: shape-fill, shape-line, labels and titles. shape-fill refers to the colours within each circle or ellipse. all colours available in the r environment can be used, and alpha-blending can be adjusted on a per-shape basis. shape-lines are the lines that surround each circle or ellipse. they can be entirely absent , solid , or any other r line-type available . their colour can be changed, and each shape can have a separate set of parameters. labels refer both to the captions describing each circle or ellipse and to the numbers within them. again, these can be customized in terms of colour, font-type, and font-size with any available r parameter. the positions of caption labels can also be customized. titles, which include the main title and the subtitle as demonstrated in figure 1d, can also be customized in the same way as labels.

beyond these specific graphic elements, venndiagram also offers many general options, such as the scaling, rotation, or inversion of diagrams. diagram scaling was implemented with the goal of displaying venn diagrams where the graphical sizes of the partial areas  actually correspond to the numerical values of the number of elements within each region. scaling of two-set venn diagrams and a select number of three-set venn diagrams is possible - we discuss below the challenges of making this possible for all three-set cases. the use of scaling can sometimes lead to overlapping areas being too small for numeric labels. figure  <dig>  row  <dig>  column  <dig> shows a programmatically generated connecting line that allows special handling of this case. automatic recognition of a large number of euler diagrams is implemented, but this mode can be deactivated with a function-call parameter to plot standard venn diagrams instead. figure  <dig>  row  <dig>  columns  <dig> and  <dig> show two examples of two-set euler diagrams. rows  <dig> and  <dig> show a subset of implemented three-set euler diagrams with row  <dig> showing those of the scalable variety. we note that figure  <dig> is presented in black and white to highlight compositional differences across diagrams, but the graphical parameters and customizations used in figure  <dig> are fully available. while venndiagram defaults to writing graphics to high-resolution tiff files, if the filename parameter is set to null the raw grid object can be returned and used in any graphics mode available in r. the code to generate all figures is given in additional file  <dig> and an example of all available parameterizations is shown in additional file  <dig> 

discussion
during development of the venndiagram package, it was discovered that it was impossible to draw accurate, scaled venn diagrams with three sets using circles. this conundrum is illustrated in the following scenario. in a system of two circles a and b, the distances between the centres of the circles, dab, could be determined as long as the areas  and the intersection area  are both known. this is possible because in a two-circle system a single aa ∩ ab corresponds to a unique value for dab. therefore, a system of three circles a, b, and c, dab, dbc, dac could be calculated as long as aa, ab, ac, aa ∩ ab, aa ∩ ac, ab ∩ ac are all known. however, dab, dbc, dac make a unique triangle, implying that a venn diagram can be drawn without ever knowing the overall intersection aa ∩ ab ∩ ac. in other words, the size of the overlap between all three circles does not alter the presentation of scaled venn diagrams -- the area is unchanged even if one system has zero overall intersection ! this conundrum results from the  choice of circles to represent set size, which reduces the degrees of freedom by one. unique solutions can be identified by using ellipses or polygons to draw venn diagrams but the resulting diagrams would lose the instant recognisability and familiarity associated with circular venn diagrams, defeating the point of a convenient display of information. non-circular diagrams would also require iterative algorithms to compute the positions and sizes of the shapes, greatly increasing computational burdens, as has been discussed by others  <cit> . consequently, scaling of three-set venn diagrams is disabled in the venndiagram package. similarly, venn diagrams containing more than four sets  <cit>  were not implemented in the venndiagram package because they become too complex for intuitive visualization.

a general caveat when using euler diagrams is that although they reduce the graphical complexity of some venn diagrams, their non-traditional shapes may also be less recognizable in some cases. when empty areas are present, the user needs to choose between the familiarity of venn diagrams and the increased accuracy of euler diagrams. figure  <dig> illustrates a situation where either a venn or an euler diagram may be appropriate depending on user preferences.

the venndiagram package handles all two-set euler diagrams and the majority of all conceivable three-set euler diagrams. three-set euler diagrams that could not be drawn using circles or ellipses are not supported. for example, an euler diagram for the case where two non-intersecting sets comprise the third set cannot be drawn using circles and ellipses, though it may be drawn using polygons. this type of figure lacks a ready analytical layout and would require iterative fitting; no polygon-requiring euler diagrams are available, but standard venn diagrams are available for these few unsupported cases.

after comparing with other programs capable of generating venn diagrams , advantages of the venndiagram package include:

• drawing euler diagrams using circles and/or ellipses with two or three sets

• offering greater customizability to generate more elegant diagrams

• availability in the widely-used r statistical environment

• generating high resolution tiff files that are standard in publications

* uses inaccurate 3-set scaling with circles

this table highlights the improvements that the venndiagram package possesses over other notable venn diagram-generating software. the highly customizable nature of the venndiagram package is evident.

CONCLUSIONS
the venndiagram package advances both the ease-of-use and the degree of customizability in the generation of venn diagrams in a bioinformatics context. while other tools offer much of the functionality presented here, the implementation of all features together in the widely-used r statistical environment will promote the usage of automatically generated venn diagrams within computational pipelines.

availability and requirements
the venndiagram package itself is available as additional files  <dig> and  <dig>  and will be submitted to cran - a global repository of r packages. venndiagram requires r  and the grid package for r.

authors' contributions
hc and pcb conceived of the project. hc wrote the software, which hc and pcb tested and debugged. hc wrote the first draft of the manuscript, which all authors revised and approved.

supplementary material
additional file 1
the venndiagram r package as a linux-compatible .tar.gz file

click here for file

 additional file 2
the venndiagram r package as a windows-compatible .zip file

click here for file

 additional file 3
code to generate all venn diagrams in figures  <dig> and  <dig> 

click here for file

 additional file 4
illustration of the parameters available in venndiagram.

click here for file

 acknowledgements
the authors thank all members of the boutros lab for support, and especially dr. kenneth chu and daryl waggott for help in generating the windows-compatible version of this package.. this study was conducted with the support of the ontario institute for cancer research to pcb through funding provided by the government of ontario. this work was financially supported by grant number mop <dig> from the canadian institutes of health research .
