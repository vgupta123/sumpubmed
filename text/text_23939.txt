BACKGROUND
the advent of platforms for generating gene expression data for thousands of genes in a single experiment, has led to dozens of software packages to analyze the results of these experiments  <cit> . a fundamental need of biologists who generate gene expression profiles is to simultaneously compare multiple gene expression datasets to one another. accordingly, many existing software packages allow such comparisons. for example, melton and co-workers used dchip  <cit>  to show that their gene expression profiles of embryonic, neural, and hematopoietic stem cells were more similar to each other than to profiles, generated in the same lab, of differentiated populations springing from those cells  <cit> . lemischka and co-workers used different comparison tools to come to the same conclusion about their own profiles of essentially the same stem cells  <cit> .

most software tools currently available for comparison of multiple gene expression datasets work optimally when the profiles being compared are generated on the same platform and in the same lab  <cit> . attempts at meta-analysis using data produced in multiple labs is typically fraught with technical difficulties and controversy, as has been the case when comparing the overlap between the melton and lemischka labs' stem cell expression data  <cit> . such inter-lab difficulties are compounded when the platforms used to generate the expression profiles are even more divergent. for example, how would one begin to compare a gene expression profile generated by affymetrix genechips  to one generated by cloning and sequencing of a subtracted library of ests? clearly, there is a need for "platform-independent" comparison software. such software would aid biologists not only in direct analysis of their data with similar data in other labs but might also facilitate analysis of new datasets with respect to the thousands of previously prepared datasets, prepared using a variety of platforms, housed on various web sites throughout the world.

a few previous reports have described approaches to cross-platform analysis . in general, these articles outline innovative methods for integrating expression intensity data for a given gene on one platform with intensity data for the same gene on another platform. such techniques – along with a standardized system for sharing functional genomic data  <cit>  – are critical when the aim is to follow changes in specific genes across multiple expression profiles. however, a gene expression profile also represents more than a list of its individual gene designations and their associated expression intensities: it can be viewed as the subset of the transcriptome that integrally specifies a given cell  from all others. at this level of interpretation, the intensity level of expression of individual genes in a cellular gene expression profile is not important. an individual gene is either a member of the subset of genes that defines a given cell type or population , or the gene is not a member of that subset. what is most important, from the biologist's point of view, is how all the genes that a given cell preferentially expresses organize themselves into higher order clusters of biological significance that can eventually shed light on that cell's unique function.

accordingly, another approach for cross-platform comparison of gene expression profiles would involve integrating the biological functions/processes associated with the genes in each expression profile  and comparing the profiles at the level of the biological significance of the member genes. we have previously used a preliminary version of this approach to show that the expression profile of gastric epithelial progenitors generated on affymetrix mu11k a & b genechips  <cit>  was more similar to a subtractive est library of hematopoietic stem cells  <cit>  than to various expression profiles of differentiated gastric epithelial cells by first classifying all the genes in each profile with their corresponding gene ontology  terms and then comparing each profile to all the others based on the fractional representation of each go terms within each list, where "fractional representation" of a go term is defined as the number of genes annotated by a given go term relative to the total number of genes in the expression profile. we have also used preliminary variations of this approach in other manuscripts  <cit> .

currently, there are several software packages that determine biological functions inherent to an expression profile, for example, by determining the distribution of go terms associated with the member genes  <cit> , and there are those which also identify go terms that are over or under-represented in a comparison among different profiles  <cit> . gominer, for example, is a popular tool whose "high-throughput" function calculates fractional representations of go terms within a list of genes or across multiple lists of genes  <cit> . and output from gominer can be combined with a clustering/visualization tool such as cimminer or spotfire™ , to cluster and relate fractional representation of individual go terms across multiple gene lists. here, we describe gourmet, which, like some of the other tools, determines fractional representation of go terms in multiple expression profiles and allows the user to identify over- and under-represented go terms in comparisons among these profiles. but gourmet is specifically designed to facilitate using go terms in an alternative way: as a means of quantitatively relating entire expression profiles to each other. gourmet also introduces the targetoid plot, a new way of dynamically re-rendering clustering data to allow users to determine pairwise distances between each element in the cluster.

implementation
gourmet is a software package that takes as input multiple gene lists/profiles from any large-scale gene expression method, computes the distribution of go terms associated with the genes in each list and finally compares these expression profiles at the level of their inherent biological function, visualizing the results using clustering and other graphical formats, some familiar and some novel. gourmet, written entirely in java, has a simple architecture, consisting of two inter-related software packages: gourmet vocabulary and gourmet cartography. gourmet vocabulary is a simple tool to annotate by go terms gene lists provided by the experimenter . similar to some other go term analysis packages, this tool affords the user a quick assessment of biological value in the data that may have been obscured by the data's sheer size. gourmet cartography is a tool for semi-quantitatively relating and analyzing different gene expression profiles at the level of biological meaning . gourmet cartography analyzes data in a way that is largely 1) independent of the platform used to generate the expression profile and 2) independent of the number of genes within each expression profile. point  can be illustrated by showing that profiles of the same cell types, even when generated from multiple platforms and labs, still cluster together: e.g., hscs cluster with other hscs whether the hsc profiles are generated on genechips by different labs  <cit>  or generated from a subtracted est library  <cit>  . we illustrate point  by showing that we can reduce a large expression profile by 10- and even 100-fold in length , and the reduced profiles, expressed in terms of go distribution, still cluster more closely with the original, full length profile than with other profiles . the platform and list-length independence are largely the result of gourmet's super-organizing gene lists into go distributions. in the gene ontology system, gene products are classified by a tree-like cascade of go terms, which themselves range from quite specific  to broad . thus, even though gene expression profiles as short as a few hundred genes might be difficult to compare to much longer profiles at the level of specific, less frequent go terms, they can still be meaningfully compared at the broad level . and, it should be noted a difference in distribution of such broad go terms between two expression profiles has obvious biological relevance . a caveat that should also be noted is that because gourmet takes as input an expression profile in the form of a list of genes with no restrictions on length of the list or how the list was generated , the program does not attempt to provide a useful assessment of error or statistical significance for profile clusters. in our empirical experience, however, expression profiles that are at least  <dig> genes long allow relation of profiles in a way that is biologically meaningful.

RESULTS
gourmet vocabulary
this component of the program suite accepts a tab-delimited text file comprising one to multiple lists of unigene-standard gene symbols  and translates each list into go term distributions by querying a local mysql database built from the latest go term annotations downloaded from the gene ontology website  <cit>  . for example, to compare our list of genes that characterize gastric epithelial progenitors  to the list of genes that characterize mesenchymal stem cells , we prepare an excel spreadsheet with "gep" in the first cell, followed by all the gene symbols in the gep profile and do the same for "mesc" and all its associated symbols. gourmet vocabulary then queries the go database to determine the go terms associated with each gene symbol and computes the fractional representation of all the go terms associated with the genes in the list. the program uses a gui, where each profile is a tab that can be clicked on to show the fractional representation of each go term  across the entire profile. results can be output as multi-sheet microsoft excel workbook files or as "comparison" files which are tab-delimited text files. the latter files serve as inputs for the adjoining gourmet cartography suite.

gourmet cartography
the other half of the suite, gourmet cartography  is devoted to semi-quantitative analysis and comparison of go profiles from gourmet vocabulary. input is via "comparison" files, which are the tab-delimited files output by gourmet vocabulary. a comparison file from gourmet vocabulary comprises one to multiple expression profiles, each expressed in terms of relative frequencies of the go terms associated with the transcripts in each profile. users can also generate their own comparison files, if they want to take advantage of the gocart visualization tools but want to compare elements  based on variables other than go term distributions . the program allows unlimited additional comparison files to be merged into the active workspace. because gocart also allows output of tab-delimited comparison files, any additions  to the expression profiles in the workspace can be saved. all profiles are automatically clustered .

dendrogram and wave plots
gourmet cartography employs a multi-window, user-friendly gui. the dendrogram  is a graphical rendering of the results of relating the gene profiles created in vocabulary. relationships between each profile are calculated by means of multiple set-wise adapted pearson's correlations between elements and then between clusters of elements. distance  between two elements is calculated as:

d = |pc - 1|

a pearson correlation of  <dig> equals a distance of  <dig>  and a correlation of - <dig> equals a distance of  <dig>  adapting a pearson's correlation in this fashion is a common way to produce a metric for quantifying similarities between elements of a cluster  <cit> . the program offers several algorithms for displaying distance between sub-clusters, including: single-link, complete-link and average-link. in single-link clustering, the distance between two sub-clusters is the distance between their closest elements. in complete-link clustering, it equals the distance between their farthest elements. in average-link clustering, it is the average distance between their elements. the program allows the user to take the average of multiple individual profiles and cluster the consensus profile as a separate entity .

the wave diagram  is a feature that allows the user to view profiles selected in the dendrogram window in a wave guide or flowing plot format. it shows the fractional representation of a user-selected go term or terms within each selected expression profile. by default, go terms are listed in decreasing order of their weight in differentiating among selected profiles . for example, if one wanted to know which single go term was most responsible for differentiating a gene expression profile of the gastric parietal cell from that of the gastric epithelial progenitor, the program would return "mitochondrion", and the fractional representation of that term would be plotted in the parietal cell and gastric epithelial progenitor profiles . the utility of this feature is evident for users who want to determine how their cell profile is similar to reference profiles. the fact that the term "mitochondrion" is one of the most important for differentiating the parietal cell expression profile from all the other profiles is consistent with the known function of parietal cells as mitochondrion-rich energetic powerhouses  <cit> . gocart determines the weight in establishing differences among expression profiles from the absolute standard deviation  of the fractional representation of that go term among the expression profiles selected. gocart can also establish the go terms that are most important, at the absolute level, in determining similarity  between expression profiles. this is calculated as:

vs =  * , where "cluster mean" is the mean fractional representation of a given go term among the expression profiles selected, and "total mean" is the fractional representation of that go term across all the expression profiles in the current dendrogram window.

furthermore, users can apply a standardizing expression profile to highlight go terms that deviate substantially from a reference . here, go terms with the highest relative weight in differentiating expression profiles are calculated as:

vs = sd * , where "cluster mean" is the mean fractional representation of the given go term in all selected expression profiles, and "baseline" is a single expression profile chosen by the user. in determining relative cluster similarity, this is rendered by:

vs =  *  * , where variables are as above.

this feature allows users to highlight more specific go terms . go terms such as these may be important for differentiating closely related profiles or may represent the specific types of genes a biologist would like to follow up.

targetoid plot
this window is a novel way of dynamically rendering the multi-dimensional relationships among all the elements in a clustering dataset. the standard dendrogram rendering of a clustering analysis allows users to see distances only between two elements within the same sub-cluster. for example, the dendrogram in fig.  <dig> gives the pearson's distance between gastric progenitors and mescs , but it gives only the distance between the average of the entire sub-cluster composed of mesc and gastric progenitors to the nsc element . to calculate the distance between geps and nscs, gocart uses the targetoid plot to compare these two profiles directly. the user can select one element  as the center. every other element is then plotted by the algorithm so that distance from the center is proportional to the similarity/difference between a given element and the central element, where similarity/difference is calculated using the pearson correlation-derived formula. the algorithm also allows an approximate visualization of the similarity/difference among non-central elements . non-center elements' positions are spread out in the radial dimension, so that the farther they are from each other, the less similar they are. the approach uses a rough heuristic for placing the elements, gradually adjusting their positions relative to each other, to achieve a "spread" of elements. the example in fig.  <dig> shows that nscs, mesc, and geps are all quite similar, but mescs and geps are slightly more related to each other than to nscs. the three differentiated cell lineage expression profiles cluster approximately together, and parietal cells are not related to any of the other elements. there is a zoom slider that allows the user to focus on certain regions of the targetoid plot.

cartesian plot
an additional window option  is the scatter or cartesian plot . a user can select two individual go terms in this window, and the program will plot how the various expression profiles relate to one another, using fractional representation of one go term as the x-coordinate and that of the other as the y-coordinate. in the example of fig.  <dig>  the relationship between the go terms "nucleus" and "integral to membrane" across the provided profiles shows how combinations of just two go terms can help cluster broad categories of expression profiles .

future refinements
the principal planned refinement to the software include increasing the number of clustering options  and increasing the output options of gourmet vocabulary so that go annotations can be added to an existing table of genes and gene annotations .

CONCLUSIONS
gourmet is a tool for comparing multiple expression profiles or gene lists independent of platform used to generate the expression profiles. the gourmet cartography package of the software also provides users several tools to visualize the results of such comparisons. the dendrogram tool allows the user a familiar way to visualize, at a glance, hierarchical relationships among multiple expression profiles. the new targetoid graphing tool then allows the user to go beyond the standard hierarchical display by dynamically redrawing the data as a constellation with the user's choice of a center point. by dynamically redrawing the constellation with several different central points, users can extract the most salient aspect of the multi-dimensional data in a typical clustering comparison. the wave and cartesian plot tools of gocart allow the user to identify the principal go terms that are most responsible for the way each expression profile clusters relative to the others. because go terms define cellular locations, functions and processes, these tools allow users to quickly determine what the biological significance of the clustering pattern is, thereby generating hypotheses for future testing.

we, and our collaborators, have used gourmet to compare numerous stem/progenitor profiles to identify biological functions and processes associated with stemness and with differentiation . we have also used gourmet to compare expression profiles inter-species. specifically, we have found that expression profiles of mouse tissues/cells cluster with human expression profiles for the same cells, largely ignoring species boundaries . it should be mentioned, though, that gourmet would be most useful for species whose genomes have already largely been annotated with go terms .

we have also used gocart with variables other than go terms and elements other than expression profiles for better visualization of clustering results .

gourmet is modular and is open source in java, so individual tools such as the targetoid plotting algorithm could easily be imported into other packages . we enthusiastically support such endeavors.

availability and requirements
first, note that the gourmet cartography software is designed to parse tab-delimited files from gourmet vocabulary as input, so users can easily create their own comparison files for input. thus, the analysis would not have to be limited to go fractional representations but could be genes with corresponding intensities . we think our multi-dimensional/multi-window rendering of clustering results should be useful in any number of classification and comparison applications.

gourmet is written in java and is open-source under the bsd license. the program requires that the user have installed the java runtime environment  <dig> . <dig> or higher. gourmet is fully os-independent as assembled under the java virtual machine. any os that has the appropriate jre installed  may run it. gourmet currently has many functions available only through right mouse click; on the mac os x,  will bring up the right button menu on the single-button mac mouse.

gourmet requires access to a mysql database populated with gene ontology annotations released form the gene ontology consortium. while gourmet is by default configured to anonymously attach to our database at washington university, it is highly encouraged for users to establish a local mysql go database and point the go vocabulary program to this local instance. instructions for doing this are available on the web site. mysql is freely available  <cit> , as is the go database  <cit> .

download and other information  are available at our website  <cit> .

contact: 

list of abbreviations
sage – serial analysis of gene expression

est – expressed sequence tags

go – gene ontology

hscs – hematopoietic stem cells

geps – gastric epithelial progenitor cells

nscs – neural stem cells

gocart – gourmet cartography

gui – graphical user interface

sd – standard deviation

authors' contributions
jmd extensively beta-tested the software, wrote the documentation, designed/implemented the web-page, and co-wrote the manuscript. lkc wrote the java code, co-designed the targetoid graphing approach and designed the targetoid pseudo multidimensional display algorithm. jcm beta-tested the software, implemented the original concept in ms visual basic, co-designed the targetoid graphing approach, and co-wrote the manuscript.

