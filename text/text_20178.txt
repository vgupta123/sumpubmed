BACKGROUND
polymers are macromolecules that are composed of many smaller molecules, known as monomers. polymers with different structure and monomer composition have a broad range of different physical properties, like solution viscosity, melt viscosity, solubility, stiffness, and more. well-known examples of polymers are proteins and the dna, which play important roles in everyday life. polymerization is the biochemical process of polymer formation. during polymerization, monomers react with each other to form a macromolecular structure. as polymers are essential components of biological processes, polymerization occurs constantly within the cells of every living organism.

even though major advances in recent biological and biochemical research greatly extend our knowledge about polymerization, still much remains unknown. with respect to the involved molecular structures, for example, not all of them have been crystallized to derive a better understanding of their spatial structure. also much remains unknown regarding their physiological function. this naturally inherent uncertainty is one important reason for why it is challenging, for students as well as for professionals from different fields, to form an appropriate mental model of physiological processes.

in order to effectively communicate such processes, it is essential to consider both their spatial and temporal characteristics as well as their multi-scale nature. polymerization, for example, ranges spatially from molecules to macromolecules and temporally from nanoseconds  to seconds . it is also not feasible to model the entire physiological processes by just considering the principal laws of physics on the atomic level – we need different models at different levels of details. moreover, the process of polymerization strongly depends on the properties of the environment such as the concentration of the reacting substances.

in recent years, we have seen a growing number of artistic illustrations of various aspects of cell biology
 <cit>  and we have also observed some selected efforts to, at least partially, support the usually cumbersome, manual illustration process with computational tools. however, for a better understanding and for a more effective communication of physiological processes, visualization in the form of static images or animations is often not enough. one should, for example, see the dependence of such a process on its environment and experiment with the interactions between the process and its environment. how will the structure emerge if there are not enough building substances? how do spatial constrains influence branching patterns? an interactive system capable of answering such questions can greatly help to comprehend the process of polymerization and even be an environment for generating or even testing new hypotheses.

for answering the above mentioned questions, a suitable modeling and visualization approach for the interactive illustration of polymerization should satisfy the following requirements:

it needs to capture emergence, i.e., it should be capable of representing the overall process of emergence and its sub-processes, for example, the binding of monomers and branching.

it needs to represent the temporal development, i.e., it has to communicate the time-dependent and dynamic nature of the process.

the multi-scale nature of the process needs to be captured in both space and time.

interactivity is essential and the user should be able to modify the environment and immediately see the results.

even if based on empirical modeling approaches, the illustration must be sufficiently biochemically correct.



in this paper, we present a new, three-level modeling and visualization approach, which fulfills the above described requirements. a starting point for our research was the observation that polymerization is physiologically characterized by biochemical processes at different time scales  and that we were aiming at an approach which should be truthful to these different time scales.

the smallest time scales, which we intended to capture with our approach, are those that correspond to the diffusion-based movement of monomers nearby the active end of a polymer and the growing of the polymer due to individual monomers that bind to the polymer. considering the advantages and disadvantages of different modeling approaches , we concluded that an agent-based system would be best suited to capture the stochastic characteristic of the movement of the monomers. also setting the different parameters for the agent based system allows us to set different behavior based at which time scale is currently visualized.

on the other end of the temporal scale space, we intended to capture the entire growth process of a polymer – a process which is many orders of magnitudes slower than the diffusion-based movement of the monomers. we understand that these polymerization processes  are much more deterministic in terms of their development. therefore, it is appropriate to model the process at this level by means of an l-system .

to realize a solution which is capable of representing both of these aspects, we devised an approach which integrates both modeling concepts. we find it reasonably straight-forward to formulate rules for an l-system so that it models the overall growth of a polymer. we link – via a communication system  – the agent-based system to the l-system so that certain rewriting rules of the l-system – in particular those, which correspond to the binding of a monomer to the polymer – only complete, if they are supported by the linked agent-based system.

furthermore, we intended to also enable a minimum amount of interactive steering – at least to the degree that the user can influence the environmental conditions of the polymerization process to a certain degree. to achieve this, we couple the agent-based system with another modeling layer, i.e., a density-based modeling layer . on this layer, we only consider the overall densities of all involved building blocks . at any time, parallel to the overall modeling process, it influences the agent-based system so that the number of agents in the multi-agent system corresponds, as good as possible, with the corresponding densities in the sod. by interactively modifying selected densities in the sod, the user can thereby, to a certain degree, steer the polymerization process.

after we first discuss related work in the following, we then go into more technical details with respect to our solution. we also report from an evaluation which we conducted together with several domain experts.

related work
as mentioned above, our work is based on a fusion of three different modeling techniques, i.e., an l-system, an agent-based system, and a system of densities. in the following, we comment on the state of the art with respect to all of these individual approaches, as well as on previous attempts to extend them.

l-systems
lindenmayer systems
 <cit>  are a broadly used modeling approach for the development of linear and branching structures, built from discrete modules. an l-system can be seen as a formal, parallel rewriting grammar. it consists of an alphabet of symbols, a collection of rules that expand symbols into new symbols, or strings of symbols, an initial string, called axiom, and a mechanism for translating the generated string into an according geometric structure. since the introduction of l-systems in the late 1960s, many extensions to the original approach were proposed, such as stochastic, context-sensitive and parametric l-systems, many of which are well described in a book by prusinkiewicz and lindenmayer
 <cit> .

originally, l-systems lacked one important aspect of structural modeling, which is the interaction between the structure and its environment. the first extension that related l-systems to an environment as an affecting factor, were parametric l-systems
 <cit> . here, every symbol is extended by its own parameter space, that is applied and changed by the production rules.

an environmentally-sensitive l-system
 <cit>  contains local, rather than global, properties of the environment that affect the model. this concept is based on query symbols, which return the position and orientation of the current, graphically interpreted symbol, in the given coordinate system. these parameters are passed as arguments to user-defined functions which then return local properties of the environment for the inquired location.

a more general approach for the communication between the model and the environment was introduced in open l-systems
 <cit> . this technique extends environmentally-sensitive l-systems by using a special symbol for bidirectional communication with the environment. the environment is no longer represented as a simple function, but becomes an active process that may react to the information from the model. open l-systems were used for modeling the development of different structures such as ecosystems
 <cit> , cities
 <cit> , proteins folding
 <cit> , plants, trees and roots
 <cit> , or even fire
 <cit> .

in our case, we find l-systems only partially suitable. while we, on the one hand, find them useful to represent the large-scale aspects of polymerization, their utility is, on the other hand, also limited, since they cannot intrinsically capture crucial small-scale characteristics of polymerization – in particular, the interaction of many individual actors . strengths and weaknesses of l-systems, with respect to modeling an illustration of polymerization, are shown in table
 <dig> table  <dig> 
selected strengths and weaknesses of l-systems vs. agent-based systems



l-systems

agent-based systems


agent-based systems
in contrast to l-systems, agent-based modeling
 <cit>  is centered around multiple autonomous entities called agents. agents are computing elements with two important capabilities
 <cit> . firstly, they are capable of autonomous action, i.e., they can act independently in order to satisfy their designed objectives. secondly, they are capable of interacting with other agents. an agent’s behavior is defined to achieve an individual or collective objective.

this modeling approach provides a natural metaphor for understanding and building a wide range of systems, such as social systems, biological systems, economics, traffic or transportation systems that feature many independent actors which drive the system’s global behavior.

in the context of emergent phenomena, agent-based systems have been employed in modeling molecular self-assembly
 <cit>  and intracellular interactions
 <cit> .

as agent-based systems model a global behavior through the interaction of individual entities, they are well suited for the purpose of modeling the crowded environment of the cell. however, a major drawback is that the global effect resulting from the interaction of the individual agents is very difficult to control and steer. in our case, we find agent-based modeling suitable for the small scale of polymerization, i.e., the movement of the monomers, etc., while we require more control over the modeling when considering the process at a larger scale.

integrated approaches
as shown in table
 <dig> both l-systems and agent-based modeling have strengths and weaknesses. naturally, one thinks about the combination of both concepts to get the advantages of both approaches while mitigating their disadvantages. one way of integrating both approaches, researched by von mammen, is swarm grammars
 <cit> . swarm grammars were developed as an integrated representation of artificial crowds and a developmental model. in this approach, the l-system doesn’t hold the information about a structure, but about the agents’ states in the environment and is the deterministic tool for the evolution of the agents over time. the usefulness of such an approach was exemplified in the generation of the 3d geometry from the agents’ states
 <cit>  and the application of this method to architectural design
 <cit> . however, with this modeling approach the graphical representation describes the development of the crowd, not the development of the structure. moreover this approach doesn’t provide a modeling solution for bidirectional communication between the structure and the agents and is therefore not suitable for the interactive illustration of polymerization.

other modeling approaches are based on the combination of rule-based and particle-based reaction and diffusion modeling
 <cit> . in these approaches the resulting molecular structures are represented as a graph, where each node is an elementary unit, for example, a simple molecule or a monomer. the molecules are defined as spatial particles and their behavior in the environment is described by molecular dynamics and reaction rules. the result of the combinations of the allowed interactions and the geometric requirements is a stochastically built molecule. these modeling approaches are using different visualization software , which provides direct visualization of the modeled polymerization.

in our modeling approach, we are introducing the probabilistic variability, i.e., the resulting molecular structure is not predetermined. with the l-system, our approach is capable of representing not only information about the current structure, but also information about processes that are currently associated with it. furthermore, we know that the time scales between the overall process of creation of the structure  and the movement of a single independent molecule in the environment  are largely different. we address these time scale differences by the possibility to interactively change the current time scale and the ability to switch between them. this helps to comprehend the creation of the structure and the relation between different time scales of the process. also, for experiments, our solution provides steering of the simulation by changing the density  of the molecules in the environment. on top of that our solution provides a tool for changing the rules that define processes  during the simulation. our approach provides a direct 3d visualization of the processes, but we can easily encode additional information in the visualized structure, for example the uncertainty of the creation of branches.

methods
our solution is composed of several different sub-systems , which are mutually synchronized with each other. the simulation runs in a cuboid domain of changeable dimensions with a time step of length Δt.figure  <dig> 
the overview of our system. an overall process is controlled by the l-system. communication between l-system and agent system is performed through the communication symbol that, using the communication system, is transferred to the agent system in the form of queries. results from the queries are written back to the communication symbols and processed by l-system’s production rules. the system of densities provides means to change the amount of agents in the environment.



  

as depicted in algorithm  <dig>  the simulation starts with setting the simulation time t, the current delta time of the simulation Δt and the initialization of the simulation systems: the l-system , the communication system , the agent-based system  and the system of densities . the basic cycle, shown also in figure
 <dig>  is composed of the following steps:figure  <dig> 
illustration of several simulation steps. after the initial configuration , a communication symbol was generated, which attracts nearby agents . when the agent arrives at the binding site, it is attached to the structure and the communication symbol is terminated . afterwards a new communication symbol is created by production rules and is again attracting nearby agents .



the l-system is evaluated, which involves processing of the communication with the monomers and growing of the polymer if a new monomer binds to the growing end. 

the l-system structure is visualized. 

the sod verifies the current densities and communicates the required changes to the agent-based system. 

the communication system firstly evaluates on which time scale the simulation is currently running. this is done by the evaluation of the function p, which is described in more detail in the communication & process specification subsection. if p<timescaletresh, i.e., the time delta is relevant for monomer motion, the communication system transfers communication parameters from the l-system to the agent-based system and vice versa. in the case that p>timescaletresh, the growth is computed from the probability function p. 

if p<timescaletresh, meaning the simulation is in the monomer motion time scale, the agent-based system is evaluated and visualized. 



in the following subsections we provide a more detailed description of the mentioned components.

l-system
the l-system consists of an ordered triplet l=〈a,ω,p〉, where a denotes an alphabet, ω is a non-empty word called axiom and p is a finite set of production rules. the axiom
 defines the initial development of a polymer of size n in the simulation.

the symbols of the alphabet a are divided into four semantic categories: binding, structure, end, and communication symbols. a structure symbol represents a monomer and holds information about the monomer type and its geometry. a binding symbol represents the binding relation between two monomers and holds information whether the binding point is a start of the new branch. the end of a branch is encoded by the end symbol. these symbols describe the structural aspects of a polymer in the l-system.

processes are represented by communication symbols. a communication symbol has the role of a bidirectional bridge between the l-system and the agent-based system through the communication system. it is defined by c, where o identifies the process, e.g., growing or branching, type is the identification of the agent type the process is connected to, for example, t is the process lifespan and r encodes the result of the process. for example, the communication symbol c queries information about the process binding the glucose molecule and expects the result in parameter r. communication symbols have a global parameter tmax defining the maximum allowed time that the process can take. if the process is about to take longer, it is terminated.

a production rule from p has the following format
 <cit> :
  

where id is the rule identifier , predecessor is a symbol that will be replaced by the successor symbol, but only if condition is evaluated as true. the probability part represents a chance value that this production rule will happen at all.

the l-system has two important phases: derivation and interpretation. the derivation step is the rewriting process:
. in each step, the production rules p replace all predecessor symbols ωi by successor symbols, generating a new string ωi+ <dig> 

the derivation step is followed by an interpretation step that transforms a string of symbols into a 3d geometrical representation. during the interpretation step, the string is read from left to right by an interpreter. the interpreter stores its spatial position ipos  and orientation iori . these variables are initialized at the beginning of the interpretation step by the position and orientation of the polymer starting point. when the interpreter reads a structure symbol, then it places the geometry specified by it into the scene according to the current ipos and iori. when the interpreter reads a binding symbol, it updates its position and orientation as follows:
  

where binpos and binori are the binding position  and orientation  from the binding symbol. using this transformation the system can create the geometric representation of the whole polymer . also, during this interpretation step the position and orientation parameters of the communication symbols are updated with the ipos and iori of the current state.figure  <dig> 
illustration of building the polymer from symbols of the current l-system state.
 the backbone of the interpretation process are structural  and binding symbols . the overall look of the final polymer is dependent on the visualization of structural symbols and their placement based on the property of binding symbol. if the binding symbol is defining linear conformation between the two monomers, linear structure will assemble . the conformation with different orientation can create helices of different radii and helicities .



essentially, the evaluation of the l-system depicts the development of the polymer growth. first, the r parameters of the communication symbols are filled with values, retrieved from the communication system. next, the derivation and interpretation phases are applied.

for example, let us define an l-system with the axiom c and the following production rules:
  

the tmax parameter is an empirically chosen time limitation of the grow process. in the beginning of the l-system evaluation the t and r parameters of the c symbol are retrieved from the communication system. afterwards, in the derivation phase, the production rules are applied.

only the rules with the same predecessor and correct predecessor parameters are applied. for example, in a case when t= <dig>  and r=∅, during the derivation step no production rules can be applied since both conditions r≠∅ and t>tmax of the rules p <dig> and p <dig> are not met. in this case, the l-system’s string is left unchanged.

when the agent system, through the communication system, returns values t= <dig>  and r=molecule, the derivation step applies rule p <dig> and produces the new string ω=mc with a new symbol m, and the communication symbol is replaced by c. this means that the growing process has finished and a new process of growing is created at the end of the structure.

if the process takes too long for values t= <dig>  and r=∅, rule p <dig> is applied, rewriting the communication symbol to the end symbol; i.e., the growing process of the current branch is terminated.

communication & process specification
the information exchange between the l-system and the agent-based system is realized through the communication system. the behavior of this system depends on the current time scale of the simulation.

if the simulation is running in the time scale of monomer motion, the communication system retrieves the processes parameters from the l-system and transports them in a form of queries to the agent-based system. after the simulation step of the agent-based system, the communication system retrieves the results of the agent-based system queries and feeds them to the communication symbol of the l-system.

the query is represented as a q. the position, orientation and type parameters are retrieved from the l-system interpreter; and copied into pos, ori and type. the agent-based system updates the parameters time and result. the result is an agent type and the system fills this value if and only if an agent of the specified type reaches the position pos with the orientation ori.

on the other hand, if the simulation runs on the time scale of the whole process, the agent-based system does not participate in the communication. instead, the communication system applies the function p, computing a probability of the temporal event for the result of query q. the function p is a probabilistic description of the process with respect to Δt. an example of this function is shown in figure
 <dig>  the function p returns  <dig> if the Δt is lower then the threshold for time scale switching, and a value from  <dig> to  <dig> for a larger value of Δt. the assignment of the agent-based system and p to the result parameter is described by the following equation:
  figure  <dig> 
an example of the probability function
p
. when p= <dig> the simulation runs in the lower time scale , while for higher values it runs in the time scale of the entire process .



where the function p is the aforementioned probability function. the first term pdtypeatype denotes the return value if the simulation happens at a larger time scale. the second part of equation, )as, applies the return value from the agent-based system as at the lower time scale.

importantly, the global parameter Δt, together with the description of the process behavior p, can be interactively changed. this interactivity enables us to model and visualize polymerization processes across different time scales during the simulation.

agent-based system
an agent-based system is utilized to capture the stochastic motion characteristics of monomers and the binding processes. the agent-based system is defined as as={a,b,c,…} where t is a global time parameter and a,b,c,… are sets of different types, in our case molecules.

each agent has the following attributes: position, orientation, velocity, angular velocity and type. additionally we define a set of functions representing its conditions, behaviors and triggers. behaviors define the agent’s actions, conditions constrain agents within spatial boundaries and triggers are functions that are conditionally executed. the behavior of agents is not limited only to physical behavior. in our agent-based system the behavior of the agents can be defined to generally illustrate the process or to realistically simulate the required behavior.

in our case we wanted to illustrate diffusion movement and the binding process. however, there is a large time scale difference between them. the diffusion movement of the molecules is much faster than the binding process. moreover, the time distance, in the time scale of binding, between two binding processes is comparably large. therefore the agent-based system applies two types of approximations to the monomer movement based on whether the goal is to visualize monomer movement or the overall binding process.

if the agent-based system is used to interactively visualize the binding process of a monomer, random walking is applied to approximate the diffusion
 <cit> :
  

the new position of the agent apos is updated by the diffusion coefficient d, time delta Δt and normal random vector ξ. it would take a long time if we would stay in this time scale and wait for a new molecule to come to the binding site and bind. therefore if there is no binding process to illustrate, the simulation fast-forwards to the next binding event. during this stage the molecules are moving so quickly, that there is no visual correlation of monomers between two time steps. in this stage the monomers’ position and orientation are calculated based on a random distribution.

it is important to point out, that our aim is to sufficiently correctly illustrate the effect of diffusion and binding, not to realistically reproduce it. the speed of the process of monomer binding can be interactively altered by the global parameter Δt that specifies the amount of time between two simulation steps.

system of densities
here, we consider the overall densities of all involved agents of the agent-based system. the sod is defined as a set of functions sod={da,db,dc,…}. each function represents the density of an agent type over time.

parallel to the other models, in every time step the sod attempts to keep the number of agents ∥a∥ as close as possible to da×v, where v is the volume of the space in which the agents simulation runs. the user can steer the polymerization interactively by modifying the densities in the sod. figure
 <dig> illustrates the behavior of the steering option.figure  <dig> 
an example of density-based steering possibilities for the agent-based system. two agent density functions change the number of agents in the agent-based system over time . panels show the state of the environment at the beginning , in the middle , and at the end  of the simulation.



implementation
our implementation  is based on the unity3d framework
 <cit> . this game engine is becoming increasingly popular, also within the bio-community
 <cit> . its simple c# programming interface provides fast prototyping possibilities and its efficient plugin system allows quick sharing of results, e.g., utilizing the unity3d web-plugin.

visualization
our polymerization visualization exploits 2d and 3d features of unity3d. the number of molecules in both the agent-based system, as agents, and the l-system, as structural symbols, is in the order of thousands.

the geometrical representation of the molecules was generated with the vmd
 <cit>  software from pdb files. vmd is developed with nih support by the theoretical and computational biophysics group at the beckman institute, university of illinois at urbana-champaign. the position of binding sites were also gathered from the pdb files and binding orientations were set manually from collected knowledge about the final appearance of the structures.

each molecular mesh is obtained by means of the solvent excluded surface representation
 <cit> , which subsequently was simplified for performance reasons. this is because the generated raw molecular meshes are large  and cause a performance bottleneck when using them. thus, we sacrifice some geometric accuracy in order to devote more computational resources to the execution of our model.

we furthermore utilize screen space effects that add illustrative aspects to the eventual rendering . namely, we perform an outline contour enhancement and screen space ambient occlusion
 <cit> .it is important to mention that all parameters regarding the shape and the visual molecular appearance can be adjusted by the user in the process of setting up the simulation through the unity3d gui .figure  <dig> 
a comparison between basic unity3d diffuse rendering  and the additional use of screen space effects .

an application screenshot depicting the unity3d gui for editing agents and their densities.




interactivity
for the interactive exploration and experimentation with the simulation, our approach provides means to steer the camera, simulation, and l-system rules. these interactions have different impact on the simulation and can be categorized as follows:

viewing interaction. this category encompasses the interactions which affect the viewing parameters of the camera. the most important operation in this category is to look at the structures of the simulation from side to side, to zoom in and out to see details and to move with camera around and explore the environment.

simulation steering. interactions from this category changes the parameters of simulation and have direct impact on it. however they are not meant to change the global behavior of the modeled process.

an important interactive tool of the simulation is steering the count of molecule types during the simulation with the help of the sod. furthermore, it is possible to add new type or remove an existing type of molecule.

additionally, multiple temporal scales can be explored by changing the value of the global parameter Δt, which controls the speed of monomer movement during the binding process and also controls the switching between the time scales.

l-system control. l-system rules can be added, changed or removed while the simulation is suspended. for example, the user can pause the simulation, and increase the probability of branching of the structure, by increasing the probability of the branching rule and decreasing the probability of the growing rule.



examples
examples of naturally occurring polymers are dna, proteins, glycogen, starch and poly-adp-ribose. the structure of polymers is important for their physical properties, for example solubility
 <cit> . this can be exemplified by looking at the properties of glucose polymers. starch is a carbohydrate used to store energy in plants. it consists of two types of molecules, amylose and amylopectin. amylose is composed of linear chains of glucose monomers and is insoluble in water, while amylopectin is composed of branched chains of glucose monomers, and is soluble in water. polymers that contain one type of monomer are referred to as homopolymers, while polymers containing more than one type of monomer are referred to as heteropolymers. the dna and proteins are made up of four and  <dig> monomers, respectively, hence are examples of heteropolymers. glycogen, starch and poly-adp-ribose are examples of homopolymers.

here we model reactions of glucose to form cellulose, adp-ribose to form poly-adp-ribose, and the creation of microtubules as examples of different types of bio-polymer architecture and composition. the results of our method are shown in figure
 <dig> . our modeling approach and interactive simulation provides a visual environment for helping users  to understand these processes.figure  <dig> 
an example of three polymerization processes: cellulose , poly-adp ribose  and microtubule . column-wise, the ordering  represents the start of simulation, illustration of processes, and final structure.



cellulose
cellulose is an important structural component of plant cell walls and is one of the most common organic polymers on the planet
 <cit> . it is made up of long unbranched chains of d-glucose, that are joint together by beta- <dig>  glycosidic bonds. the length of the polymers may vary from a few hundred to thousands of monomers. each d-glucose monomer is rotated by  <dig> degrees compared to the previous monomer in the chain. parallel chains of cellulose may bind to each other to form secondary structures with various degrees of order. all of this results in fibers with various properties, and much research in the last  <dig> years has gone into understanding how this can be exploited.

cellulose represents an example for the creation of linear homopolymers. in this example, we have molecules of d-glucose floating around in the environment. the polymer, and its creation, is expressed in the l-system with the symbolic alphabet α={m,g,c,ϵ}. where m is the structural symbol representing d-glucose, g is the binding symbol specifying that the next structure in the line will be placed above carbon  <dig> of d-glucose and rotated by  <dig> degrees. lastly, c is a communication symbol specifying the process of growth by binding a new agent of type d-glucose to the structure with the process time t and the current process result r.

the rules from appendix  <dig> were used for this example. the first rule p <dig> dictates, that if the result r of the symbol c is non-empty then the structure is extended by a new subunit m with position and rotation defined by g and on the end of this structure starts a new process of growing c.the mesh representation of the d-glucose molecule was exported from pdb with the vmd software. an outcome of the modeled cellulose polymerization is shown in the first row of figure
 <dig>  where d-glucose molecules are visualized with green material.

poly-adp ribose
adp-ribose is formed by cleaving nicotinamide adenine dinucleotide  to form nicotinamide and adp-ribose. the adp-ribose units may be attached to a variety of proteins, which create various signaling events in a cell
 <cit> . some of the events are triggered by attaching single adp-ribose units, while other events are triggered by building adp-ribose polymers on proteins. one event dependent on adp-ribose polymers is nad-dependent dna repair. single-strand breakage  or double-strand breakage  can potentially be very harmful to a cell unless properly repaired. poly  polymerase  is an enzyme found in close proximity to the dna, and is activated by ssb and dsb. it binds to the damaged site to protect the dna ends, until the repair enzymes are in place. once attached to the dna, parp auto-modifies itself by cleaving nad molecules and attaching the resulting adp-ribose monomers to a growing adp-ribose polymer on itself. the final poly-adp-ribose structure contains about  <dig> monomers with about 20- <dig> monomers per branch. adp-ribose is negatively charged. this helps to recruit proteins involved in the dna repair to the site. since dna is also negatively charged the growing tree will in addition pull parp off the dna, due to electrostatic forces. this makes room for the dna repair enzymes to come in and repair the damaged site
 <cit> .

poly-adp-ribose represents an example for the creation of branched homopolymers. in the agent-based simulation, we have agents for nad and other molecule types. the l-system alphabet α={m,g,b,c,c,ϵ} is composed of the structural symbol of adp-ribose m, binding symbols g and b, where b is the beginning of a branch in the structure and g is the continuation of the branch. the communication symbols c and c describe the growing and branching processes.

for the polymerization of poly-adp ribose the production rules from appendix  <dig> were used. the development starts with the initial growing process c. rules p <dig> and p <dig> control the growth of the structure and the probability of starting the process of branching. when the branching process is finished, p <dig> creates the new branch and initiates its growth. rules p <dig> and p <dig> are aging rules, meaning that if the process is not finished by the time tmax, it will be terminated. the creation of poly-adp ribose is shown in the second row of figure
 <dig>  the nad is visualized with red material. as soon as the nad is processed and as adp-ribose is attached to the structure, the color of the molecule is changed from red to white. the other molecules in the environment are colored with green and blue material.

microtubules
microtubules are long tubular polymers that are involved in a number of important cellular processes. they are found in the cytoplasm of eukaryotic cells, where they act as part of the structural framework that determines cell shape and cell movements. microtubules also have important roles in the cell division and act as a railway system for intracellular transport. the microtubule polymers consists of repeating units of a globular protein called tubulin. tubulin is a dimer which is made up of two polypeptides, called alpha and beta tubulin. a microtubule generally consists of  <dig> protofilaments
 <cit>  assembled around a hollow core. the protofilaments are composed of arrays of tubulin dimers, that are arranged in parallel. the assembly and disassembly of microtubules is highly dynamic. a detailed review of these processes can be found in the work of akhmanova et al.
 <cit> .

from the structural, and content point of view, the microtubule represents an example of linear heteropolymers. for this example, the agent-based system contains agent types of tubulin and background molecules. the tubulin agent is composed of coupled agents of alpha tubulin and beta tubulin. the l-system has an alphabet α={a,b,v,h,cϵ}, where a and b are structural symbols of alpha tubulin and beta tubulin. the binding symbols v and h define the binding between the alpha and the beta tubulin, which creates the inner structure of the tubulin dimer, and the binding between two neighboring dimers. the process of growing the structure is described by the communication symbol c.

the corresponding rules from appendix  <dig> define the overall microtubule creation. the rule p <dig> attaches the monomers of the tubulin dimer  to the structure and continues the growing at the end of the structure. the third row of figure
 <dig> shows different stages of the development, where the new dimer is always connected to the end of the spiral. the polymerization of microtubules, as described in
 <cit> , is believed to occur in sheets which fold into the circular structure. our visualization differs from this description  since we do not model the forces necessary to complete the folding process.the microtubule example is shown in the third row of figure
 <dig>  the tubulin dimer consists of alpha tubulin molecule, in light blue, and beta tubulin, in dark blue.

synthetic, non-biological showcase
our approach can model the emergence of more complex structures than what was described in the previous examples.

in this example, we demonstrate the creation of complex branching patterns in an overall structure with different types of subuints. the structure starts with one type of subunits, for example spheres, which creates helices and have also branches of the same type and secondary structuring. the main branch ends with the star branching. these branches can be completely different than main branch. in our demonstration these are composed of two periodically altering types, cubes and cylinders, are linear and doesn’t create helical secondary structure.

the l-system rules for the overall process are defined in appendix  <dig>  rules p <dig> p <dig> and p <dig> are responsible for the growing of the main branch and initiating the growth of other branches. the rules p <dig> p <dig> set the creation and growth of the branches from the main branch. lastly the rules p <dig> p <dig> p <dig> p <dig> manage the creation of the star architecture on the top of the structure, stopping the growth of the main branch. these also manage the growth of the star branches in a way that two types of subunits are placed periodically.

evaluation
we have discussed the presented examples of our system with two experts in the field of biology and bioinformatics and one expert from the molecular illustration field. the demonstration of our system was presented as a video showing animations of the mentioned biological examples. also the interactivity of the system was presented by video demonstrate the effect of parameter changes. for every example, we provided the biological explanation and afterwards the users observed the system for several minutes.

professor mathias ziegler, expert in the field of biology, was impressed by the outcome of our approach. he mentioned that the system could generate several proto-structures and model energy requirements for the reactions. with this extension he could imagine that it may be used for the generation  of hypotheses for molecular phenomena that require spatial information.

for example, one question to which our system, with the suggested extensions, could possibly bring an answer is, what is the ideal branching percentage for the best coupling of glycogen is. since we can change the parameters of the l-system rules at runtime, users can interactively experiment with the probability of rules and study the emergent branching structure.

he particularly appreciated the system of density layer for the control of the molecule counts during the simulation and the interactive change of modeling rules. in his opinion, the outcome of our work can be used for teaching purposes. especially, he was impressed by the capability of our system to create complex structures simply from information of the geometrical representation of subunits, their binding sites, and simple rules.

another expert, assoc. prof. in molecular bioinformatics, suggested that we could show the outcome of our system in the context of examples of multimeric structures, especially when it comes to complex formation. additionally, she pointed out that all polymer formations are catalyzed by enzymes and in many cases this is what determines the later structure as well as the speed of the assembly. with this addition we could provide better biological understanding of these processes in the context of teaching. she also pointed out that with further extensions of the work we could be able to bring answers to some unsolved questions in the field of polymer synthesis. another aspect in the context of polymerization is the possibility that a local depletion of pre-cursors might be the factor that limits the chain length.

we also discussed our approach with a professional illustrator. she pointed out the importance of having a system for generating a complex, dynamic, and accurate biological scene in a time and cost-efficient manner. being able to easily generate dynamic, accurate, and aesthetically pleasing molecular scenes is extremely beneficial for animators and scientific filmmakers.

from a biomedical animation point of view, she praised the system as a quick, easy to use, and flexible tool for generating good quality and aesthetically pleasing images. however, she was missing more control over rendering styles and lighting. while she saw the system as an excellent start, being able to bring these dynamic systems directly into 3d animation software would be, in her opinion, ideal. overall, she considered the biological scenes generated from this system useful for producing biological animations.

many of the ideas of the domain experts, are good suggestions and will be considered in future work.

RESULTS
our modeling system is composed of three main parts, i.e., the l-system with communication symbols, an agent-based system, and a system of densities. their behavior and their interactions are determined by defining the agents’ behavior, and their numbers and by specifying the l-system’s alphabet and production rules.

we demonstrated the use of this modeling system in the context of several examples from molecular biology that capture the creation of different types of polymers. we found out that the proposed modeling and visualization system makes it possible to easily create, modify, and visualize models at different spatial and temporal scales. the simulations of the polymerization were fast enough to allow for interactive experimentation with the models.

in the process of developing this model we became increasingly aware of the lack of information about the creation of polymer structures. this opens a door for the possibility to use our approach for hypothesis generation or at least as a testing environment for the study of polymerization.we also found out, that the visualization part of our approach can be extended to encode additional interesting information about the simulation. for instance the uncertainty of the branching probability of the structure has considerable impact on the resulting geometrical structure and, therefore, it is interesting to explore its influence. these information is stored in the l-system symbols. figure
 <dig> provides a visualization of the created structure with the values of branching uncertainty  and branching probability . our approach flexibly supports the study of this and similar properties of the model and can therefore has the potential to provide valuable insights beyond the generated geometric structures.figure  <dig> 
an visualization example of branching uncertainty and branching probability factor in the resulting structure. branching uncertainty is accumulated using a gaussian kernel centered at the probability threshold for branching and growing. it is visualized in the new branches as transition from white, no uncertainty, to red, high uncertainty. the blue color indicates the branching probability for cases when no new branch was created.



limitations of our current implementation include the absence of modeling third parties in the process, for example enzymes. additionally, the rules of the l-system are not context-sensitive, meaning that we are unable to model sub-processes, which depend on neighborhood information in the structure. another challenge is the integration of rigid body simulation and force fields into the resulting structure, simulating biologically feasible, dynamic behavior and processes dependent on them, as was pointed out in example of microtubules polymerization.

CONCLUSIONS
we have presented a novel modeling approach that is capable of illustrating polymer emergence within a filled environment of stochastically moving molecules. our approach is a fusion of three systems combining the complementary advantages of three distinct modeling approaches. the resulting system can model, simulate, and interactively visualize emergence in a stochastic environment at different time scales. also, it satisfies all the properties, which were identified for proper modeling of the emergence phenomena.

we demonstrated the possibilities of the model in examples of polymerization of linear and branched polymers with one or several types of monomers. however, the fusion of models could also be potentially used in other applications, for example to model the emergence of coral reefs, bacterial cultures, or in fields outside of biology, e.g., for the procedural modeling of cities, growth of infrastructure, or emergence of crystals.
        

electronic supplementary material
additional file 1:
prototype unity project. the zip file comprises a prototype project with example scenes. prototype project can be opened by unity editor. which can be downloaded from http://unity3d.com/unity/download web page. detailed description of the examples and prototype usage is available from http://www.ii.uib.no/vis/projects/physioillustration/research/interactive-molecular-illustration.html. 

 additional file 2:
video demonstration. video showing the interactivity of the system and the illustrative visualization of polymer emergence through examples of cellulose, parp, microtubules and artificial more complex showcase. 

 abbreviations
adpadenosine diphosphate

dnadeoxyribonucleic acid

dsbdouble-strand breakage of the dna

nadnicotinamid adenin dinucleotide

nihnational institutes of health

parppoly  polymerase

pdbprotein data bank

sodsystem of densities

ssbsingle-strand breakage of the dna

vmdvisual molecular dynamics.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

ideas and concept were jointly discussed among all authors. ik developed the model, implemented the prototype and wrote the paper. jp discussed the implementation of the visualization part and wrote several parts of paper. iv discussed and contributed the idea of illustrating the emergence process of polymers and suggested the use of the l-systems for it. aks introduced the biological background, consulted the choices with biology scientists and wrote the introduction parts to the biological examples. sb brought the ideas regarding the combination of l-system and agent-based system. hh introduced the third layer of the model - sod and wrote several parts of paper. all authors read and approved the final manuscript.

