BACKGROUND
small rnas  are currently of great interest, as they provide an additional and unanticipated level of gene control in higher eukaryotic organisms <cit> . these smrnas, 21â€“ <dig> nt in length, act as guide sequences to specifically cleave or inhibit the translation of mrna and also target the methylation of genomic dna <cit>  and combat viral infection in certain organisms <cit> .

the first smrnas were cloned from c. elegans in  <dig> <cit>  and ever since smrna cloning proved to be a vital aspect of smrna research. the process of smrna cloning appends known primers to each end of the smrna using t <dig> rna ligase. the resulting constructs are then reverse transcribed and pcr amplified . cloning and sequencing of these pcr products determines the full sequence of the cloned smrna and is currently the most conventional approach that gives this information. mainstream techniques such as microarrays <cit>  and northern analysis <cit>  require that the primary sequence of smrna be known. while, massively parallel signature sequencing can give estimates of total smrna numbers <cit> , it does not provide primary sequence information. bioinformatic approaches while useful are not currently able to accurately predict all known smrnas and are unable to easily identify poorly conserved smrnas sequences <cit> . thus, cloning is the most conventional technique currently available to reliably determine the sequence of expressed smrnas.

characterizing smrnas from virally infected tobacco plants, ebhardt et al. <cit>  discovered that smrnas were modified on the 2'-hydroxyl of their 3' terminal ribose. this finding was made possible by a detailed comparison of the length of radiolabeled smrnas with that observed after cloning and sequencing. the scores of resulting sequence files required an automated approach to efficiently uncover clusters of related sequences from both plant and viral genomes. therefore, an online analysis pipeline called ebbie was designed, which excises multiple instances of smrna sequence from a dna sequencing text-file, deposits the smrna sequences into a mysql database and performs blastn searches of these inserts against various databases.

implementation
external software
blast v <dig> . <dig> is a heuristic local alignment tool essential for comparing query sequences to large databases <cit> . when installed locally, it proves to be a powerful and versatile tool for comparing new sequences to personalized local databases. for our published study, a blast-database containing  <dig>  smrna sequences  was installed locally. querying this database using blastn, overlaps of at least  <dig> consecutive base pairs were detectable using default parameters. this was sufficient for our cloning project of ~ <dig> smrna clones. for larger databases, optimized blast parameters might be necessary. if genomic sequence data is available, blat <cit>  might be considered for annotating smrnas to the genome.

components of ebbie
mysql v <dig> .10a-max was chosen as a database due to its compatibility with perl. perl v <dig> . <dig> was chosen as a programming language because of its strength in analyzing and manipulating strings <cit> . perl serves well in creating dynamic web pages <cit> , interacting with mysql databases <cit>  and communicating with the operating system. most linux systems are distributed with these programs. ebbie was implemented on a standard pc with linux novell suse  <dig>  operating system  and a redhat linux apache <dig> server. installation notes are provided in the supplement .

flowchart of ebbie
ebbie is comprised of eight perl-cgi-scripts. they share four common libraries, which contain common subroutines, e.g. querying the mysql database and drawing a table with the results. figure  <dig> shows ebbie's functions and the perl-cgi scripts required for each. ebbie's front page is created by index.html. the database information is submitted to index.cgi, ebbie's main page. index.cgi can update the currently used cloning primers . from the main page, several scripts can be called. the logbook lists all analyzed files . dna sequencing text files are uploaded and analyzed by ebbie.cgi when sequence analysis is selected. if a single insert is found, annoch.cgi is called to deposit the insert into the mysql database. if multiple inserts are found, ebbie <dig> cgi and annoch <dig> cgi are used to add these entries to the mysql database. from ebbie's main page a range of database review/manipulation tools can also be accessed: view all, lost & found  and annotation change . for a detailed discussion of these functions see text below.

RESULTS
description of ebbie
ebbie's dynamic web pages are platform and browser independent . a tutorial for ebbie is also available in the online supplements . the front page requests the user to select a particular database before entering the program. once selected, ebbie subsequently works with this database unless the database selection is changed on the front page. as seen in figure  <dig>  ebbie's main page has four basic functions. first, it retrieves the current 5'- and 3'-cloning primers  from the selected mysql database and displays their sense and antisense sequence. the user can edit these sequences as desired. all sequences entered into these text fields are capitalized. second, the user can browse the local computer's file manager to select and analyze a dna sequencing text file. ebbie maintains a log of all processed files that can be reviewed by clicking on the display logbook function. through ebbie's main page, three online database management tools are available: annotation change, view all entries of database and lost & found.

the uploaded file name serves as the primary id for the mysql database entry. if no file is selected or if the id/filename already exists in the database, an error message is displayed and the process aborted. if a file is valid , the dna sequence data is converted into a string, capitalizing the characters a, c, g and t. all other characters remain unchanged. perl's index function is used to confirm that at least one 5-cp and 3-cp pair exists, if this condition is not met or if perl's index function identifies an uneven number of 5-cp and 3-cp pairs, then an appropriate error message is generated in the logbook. the algorithm starts at the 5' end of the dna sequence and finds the first occurrence of a 5-cp . moving in the 3' direction, the next 3-cp  is located. an insert is deposited into the mysql database, if a sequence of length >  <dig> is found between the two primer pairs. if no insert is found in the dna sequencing text-file, a message is displayed and recorded in the logbook.

database selection
on the front page of ebbie, the user can choose between different databases. these database names correspond to the names used to setup the mysql database on a given implementation of ebbie. these databases can be customized by editing the file/ebbie/lib/mysql.lib#sub:mysqldb and ebbie's front page . once a database is selected from the front page of ebbie, the user will work with the chosen database until another database is selected by returning to the front page. blastn flat files are kept for each database in order to allow continually updated blastn comparison with the growing mysql database.

the 'database management tool: annotation change' allows the user to change only two fields of each insert: 'annotation' and 'group', all other fields  cannot be edited in order to preserve the integrity of the database. this restriction was deliberately chosen to maximize the integrity of primary data.

analysis of inserts
once an insert is found, ebbie:

- deposits the id and sequence insert into the dynamic blastn database,

- deposits the insert into the mysql database, in the correct sense specified by the orientation of 5-cp and 3-cp,

- determines the inserts length,

- determines its id based on the file name, and

- determines its sample source, which is inferred from the first character of the file name.

the last function relies on grep to determine the initial character and then assigns the sample source by referencing an external text file. this sample source assignment can easily be manipulated by editing the external text file . currently, file names starting with  <dig>   <dig>  ...  <dig> have an automatic sample source assigned; other file names will result in 'unknown' sample source.

following the automated sequence deposition, the sequence insert is subject to blastn searches against locally installed databases. in our case, the blastn searches included the blastn database from the arabidopsis smrna-cloning project <cit> , the genomes of y-satellite plus its helper virus cucumber mosaic virus  and a complete blastn database of all previously found inserts. the latter dynamic blastn database extends each time a new insert is found, allowing for rapid identification of new groups. each blastn analysis is scanned by grep, probing for 'no hits found.' in which case it will only print one line onto the screen, indicating an unsuccessfully searched database. otherwise, the complete blastn analysis is displayed on the web page to facilitate user-mediated annotation. figure  <dig> shows the analysis of a clone, in this case finding a complete match against three previous entries.

the user can now fill out three additional annotation fields:

 group pull-down menu: the group pull-down menu offers standard rna types found previously during data entry and analysis. a new group can be added through the accompanying text field if a group is identified by local blastn analysis. once submitted, this new group description is simultaneously added to the smrna annotation in the mysql database, the blastn dynamic database and the group pull-down menu. the latter menu is sorted alphabetically and is made available for subsequent group annotations. this form of annotation proved quite powerful in the analysis of our set of smrnas.

 annotation field: a text field allowing for user generated comments based on the automatic blastn searches or external blastn searches .

 orientation pull-down menu: allows the selection of three categories: n/a, sense and antisense to classify the blastn search results. this is important when working with smrnas as smrnas are known to be produced by rna dependent rna polymerases that synthesize the reverse complement of their original genomic sequence <cit> .

once annotated, the insert's mysql entry is updated by pressing the submit button. consecutively, ebbie's deposit algorithm appends the id, group annotation  and insert sequence in fasta format into a blastn flat file. the flat file is subsequently formatted for subsequent blastn analysis. the newly created web page displays the mysql entry  and allows the user to return to ebbie's main page.

an example: rrna group 01

during our smrna cloning project of virally infected tobacco plants <cit> , ebbie identified  <dig> groups among  <dig> smrna sequences.  the first group ebbie identified in infected/non-infected tobacco plants was a  <dig> nt long smrna resulting from the end of the small ribosomal rna. this accumulation is an intriguing fact and does not seem random, considering that 18s rrna is approximately  <dig>  nts in length. currently, this group is under further investigation.

multiple inserts
if the number of inserts in the sequencing file exceeds one, all inserts are automatically entered into the mysql database in the correct 5'-3' orientation, together with their length and sample source. the id for each insert is specified uniquely by appending to the end of the filename a unique insert number. the user is notified of the number of primer pairs found and the number of inserts deposited into the mysql database. to analyze individual sequences, a pull-down menu is created that displays all inserts found in the current sequencing file. following the selection of an insert, the user can analyze each one individually . as long as unannotated inserts are in the database, the user can select from the pull-down menu the inserts that remain to be annotated.

logbook function
the logbook function is reached from ebbie's main page. each time a file is uploaded and analyzed by ebbie, the system time is recorded, together with the filename. once the file is analyzed, a comment is recorded depending on the outcome of the analysis: 'sorry, there was no insert found', 'single insert found.', 'there were x primer pairs and y inserts deposited into z'  and 'number of 5'- and 3'-cloning primers not even!'. the last comment is displayed in red, as this file may need manual intervention to rescue its content before subjecting it again to the insert excision algorithm.

review database
all entries in the selected database can be reviewed and ordered by id, length, group and number fields using the 'view all' button. for each database, ebbie will remember the last selection of this pull-down menu. this feature is useful while generating a database and allows a quick survey of the database during data entry.

lost & found
the lost & found function allows the user to use one or more wildcard characters for querying the database. '_' is used for single character and '%' for multiple character wildcard. from a pull-down menu the user selects a category, e.g. id, and in the adjacent text field the query is entered, e.g. '3%'. in this example, all entries with the starting character of '3' would be displayed.

for more complex queries, a second pull-down menu is available, which includes and/or boolean operators. for example, all smrnas belonging to the class of "y-sat rna" and length of "21" nucleotides can be selected.

change annotation
to update the annotation of individual inserts, a change annotation script was implemented. the script searches for either the id or number of the insert. the id is useful once a new group is identified in, for example, a blastn search result. the number is convenient after reviewing the database. once a number or id has been submitted, the record of the id is retrieved from the database . the user can then choose a standard group description from the group pull-down menu or add a new group. the 'annotation field' will display the current annotation in the text field, allowing the user to add supplementary information to it. once adjustments are made, the new annotation can be submitted and the corresponding fields in the mysql database are updated. further, if the group annotation is changed, the blastn flat file will be edited to reflect the current group annotation. the user is unable to use a wild card character for the change annotation function.

limitations of ebbie
the algorithm will experience difficulties if low complexity or ambiguous repetitive 5-cp or 3-cps primer sequences are used, which should be avoided by the correct design of primer pairs. similar fundamental problems are encountered when cloning rna using poly-polymerase to extend the 3' end of a sequence which may already contain poly residues. additional wet lab experiments  need to be conducted in order to determine the rna's true 3' end/length. also, no wild card characters are allowed when identifying 5-cp and 3-cp primers within the dna sequence file, to ensure the quality of the dna read. imperfect primers can be identified by a subsequent manual examination of sequence files that are flagged as having uneven or no primer pairs in the logbook.

comparable software
to our knowledge, no comparable software exists. other dna sequencing programs are concerned with automated base calling, e.g. phred <cit> . the closest dna sequence analysis tools are vector-trimming programs, which remove external vector sequences from the dna sequence. in the case of single inserts, this kind of algorithm could be used, but it would still leave the insert surrounded by the 5-cp and 3-cp primers. also, once the vector is removed, there is typically no further analysis of the remaining sequence, e.g. blastn search. for multiple inserts, vector removal programs are unsuitable, as they would result in a single insert consisting of a concatenated set of inserts flanked by 5-cp and 3-cps.

future directions
besides local blastn searches, it is also feasible to perform remote blastn searches using ncbi's netblast. the web server  requires modification by setting the 'keepalivetimeout' to at least  <dig> seconds. typically, this was the time interval necessary for netblast to return a blastn search result and slowed down annotation time significantly. some laboratories with a faster link to ncbi might consider this option for searching very large databases.

currently, ebbie analyzes dna sequencing text files. ebbie could be expanded using other dna sequencing analysis software, e.g. base calling software phred. the latter software is not yet available under gnu gpl and was therefore not implemented in this version of ebbie.

for cloning smrnas it is desirable to display the length distribution of all or groups of smrnas in a histogram. this function will be implemented in the near future.

CONCLUSIONS
ebbie is a semi-automated smrna cloning data processing algorithm, which initially searches for any substring within a dna sequencing text file, which is flanked by two constant strings. the substring, also termed smrna or insert, is stored in a mysql and blastn database. the latter feature allows for rapid identification of high occurrence smrnas. our laboratory successfully used ebbie to analyze scores of dna sequencing data originating from a smrna cloning project.ebbie's strength lies in the rapid annotation of sequences using locally installed blastn, finding sets of smrna clusters, reliable storage of valuable sequencing data and in eliminating manual mistakes during the excision process.

ebbie is able to identify single and multiple inserts and is comprised of eight perl-cgi-scripts that use common subroutine libraries. external files allow other research groups to customize ebbie, e.g. automatic sample source assignment is based on an external file, which is easily modified. once ebbie is installed on a local server, access can be restricted to allow for confidential dna sequencing analysis. installation notes are provided in the supplement . besides cloning of smrnas, ebbie can be used for any type of sequence analysis where two constant regions flank the sequence of interest. the reliable storage of annotated inserts in a mysql database, instant blastn analysis of new inserts to previously installed databases and previous inserts make it a powerful new tool in any laboratory using dna sequencing <cit> .

availability and requirements
project home page: 

operating system: developed on linux, suse  <dig> ; suitable for linux, unix, mac

programming languages: perl , mysql, html

other requirements: safari  <dig>  or higher, firefox  <dig> . <dig> or higher

license: gnu gpl

any restrictions to use by non-academics: gnu gpl

abbreviations
5-cp: 5' cloning primer

3-cp: 3' cloning primer

blast: basic local alignment search tool

gnu gpl: general public license

ncbi: national center for biotechnology information

mysql: sql: standard querying language

mrna: messenger rna

nt: nucleotide

pcr: polymerase chain reaction

rrna: ribosomal rna

trna: transfer rna

authors' contributions
hae had the initial idea for this project, did all coding , wrote the manuscript and cover letter. kcw substantially revised the initial idea and guided the early development on ebbie. pju broadened the scope of ebbie, thus it is now a versatile tool to analyze dna sequencing data. kcw and pju reviewed the manuscript critically and improved it to target a wider audience. all authors read and approved the final manuscript.

supplementary material
additional file 1
installation notes for ebbie. installation notes for installing ebbie on a linux server.

click here for file

 additional file 2
tutorial of ebbie. provides step-by-step guide to ebbie v  <dig> . <dig> 

click here for file

 acknowledgements
hae would like to thank amber fedynak  for helpful perl discussions and edward glen  for extensive testing and valuable feedback. this work was supported by grants from canadian institutes of health research  and the michael smith foundation for health research  and a postgraduate scholarship from the natural sciences and engineering council of canada .

figures and tables
