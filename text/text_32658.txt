BACKGROUND
vast amounts of biomedical information are only offered in unstructured form through scientific publications. it is impossible for researchers or curators of biomedical databases to keep pace with all information in the growing number of papers that are being published  <cit> . text-mining systems hold promise for facilitating the time-consuming and expensive manual information extraction process  <cit> , or for automatically engendering new hypotheses and fresh insights  <cit> .

in recent years, many systems have been developed for the automatic extraction of biomedical events from text, such as protein-protein interactions and gene-disease relations  <cit> . relatively few studies addressed the extraction of drug-related adverse effects, information which is relevant in drug research and development, healthcare, and pharmacovigilance  <cit> . the reason that this subject has been studied less frequently may in part be explained by the scarcity of large annotated training corpora. admittedly cumbersome and expensive to construct, these data sets are nonetheless essential to train the machine-learning based classifiers of most current event extraction systems. relation extraction systems typically perform two tasks: first, they try to recognize the entities of interest, next they determine whether there are relations between the recognized entities. in many previous studies, system performance evaluation was often limited to the second, relation extraction task, and did not consider the performance of the entity recognition task.

in this study, we describe the use of a knowledge base to extract drug-adverse effect relations from biomedical abstracts. the main advantage of our system is that it needs very little training data as compared to machine-learning approaches. also, we evaluate the performance of the whole relation extraction pipeline, including the entity recognition part.

related work
to extract biomedical relations from unstructured text a number of approaches have been explored, of which we mention simple co-occurrence, rule-based, and machine-learning based techniques.

the simplest approach is based on the co-occurrence of entities of interest. it assumes that if two entities are mentioned together in the same sentence or abstract, they are probably related. typically, this approach achieves high recall, but low precision  <cit> . since co-occurrence approaches are straightforward and do not involve linguistic analysis, their performance is often taken as a baseline to gauge other methods  <cit> .

rule-based techniques are also a popular method for relation extraction. the rules are defined manually using features from the context in which the relations of interest occur. such features may be prefixes and suffixes of words, part-of-speech  tags, chunking information, etc.  <cit> . however, the large amount of name variations and ambiguous terms in the text may cause an accumulation of rules  <cit> . this approach can increase precision, but often at the cost of significantly lower recall  <cit> .

machine-learning approaches automatically build classifiers for relation extraction, using contextual features derived from natural language processing techniques such as shallow parsing, which divides the sentence into chunks  <cit> , or full dependency parsing, which provides a complete syntactic analysis of sentence structures  <cit> . the performance of these methods is usually good  <cit> , but they require annotated training sets of sufficient size. also, processing time may be high  <cit> .

hybrid approaches that combine manual and automatic approaches have also become more popular in recent years  <cit> .

an example of a relation extraction system is jrex, developed by the julie lab  <cit> . jrex uses a support vector machine  algorithm as its classifier. originally developed for the extraction of protein-protein interactions, it was later adapted to the domain of pharmacogenomics. using the pharmgkb database  <cit> , jrex obtained f-scores in the 80% range for gene-disease, gene-drug, and drug-disease relations  <cit> . the semantic knowledge representation  system  <cit> , developed by the national library of medicine, provides semantic representations of biomedical text by building on resources currently available at the library. skr applies two programs, metamap  <cit>  and semrep  <cit> , both of which utilize information available in the unified medical language system   <cit> . skr has been used for concept-based query expansion, for identification of anatomical terminology and relations in clinical records, and for mining biomedical texts for drug-disease relations and molecular biology information  <cit> . java simple relation extraction  is still another relation extraction tool based on svm. it has been used for the identification and extraction of drug-related adverse effects from medline case reports  <cit> , achieving an f-score of 87% on the ade corpus  <cit> . it should be noted that this high performance value was obtained on a selected set of sentences that contained relatively many drug-adverse event relations. a framework that integrates nine event extraction systems is u-compare  <cit> . the u-compare event meta-service provides an ensemble approach to relation extraction, where the combination of systems may produce a significantly better result than the best individual system included in the ensemble  <cit> . hybrid approaches that combine different techniques have also been shown to perform well. bui et al.  <cit>  proposed a novel, very fast system that combines natural language processing  techniques with automatically and manually generated rules, and obtained an f-score of 53% on the genia event corpus  <cit> , a result that is comparable to other state-of-the-art event extraction systems.

most of the existing relation extraction systems use machine-learning algorithms and require an annotated corpus for training. there are several publicly available biomedical text corpora with manually annotated relations, for instance the corpora generated as part of the biocreative  <cit>  and bionlp  <cit>  challenges, the genia event corpus  <cit> , pharmgkb  <cit> , and the ade corpus  <cit> . most of these corpora focus on protein-protein interactions or other bio-events, while only two address drug-disease relations  or drug-adverse effect relations . as some of the annotations in pharmgkb have been reported to be hypothetical  <cit> , we chose to use the ade corpus as the gold standard corpus  for our experiments.

methods
corpus
the ade corpus is originally based on  <dig> medline abstracts of case reports that were manually annotated for adverse drug effects  <cit> . the case reports were selected by a pubmed query with the mesh  terms “drug therapy” and “adverse effect”. only the sentences that contain at least one adverse drug effect have been made available by the corpus developers. the ade corpus consists of  <dig> of these sentences, taken from  <dig> abstracts. the sentences contain annotations of  <dig> drugs,  <dig> conditions , and  <dig> relations between drugs and conditions representing clear adverse effect occurrences  <cit> . each relation consists of a medline identifier, the sentence that contains this relation, the text and position of the drug, and the text and position of the adverse effect. relations were only annotated if they occur in a single sentence. drugs and conditions were not annotated if they were not part of an adverse event relation. we divided the  <dig> abstracts that have sentences in the ade corpus, into two sets: a small training set of  <dig> randomly selected abstracts, and a test set with the remaining abstracts . contrary to previous studies  <cit> , we used all sentences in the  <dig> abstracts, both the  <dig> “positive” sentences that contain at least one relation according to the gold standard, and  <dig> “negative” sentences that do not contain a relation.

relation extraction system
the relation extraction system consists of two main modules: a concept identification module that identifies drugs and adverse effects, and a knowledge-base module that determines whether an adverse effect relation can be established between the entities that are found. all modules were integrated in the unstructured information management architecture framework  <cit> .

we used the peregrine system  as the basis of our concept identification system. peregrine is a dictionary-based concept recognition and normalization tool, developed at the erasmus university medical center  <cit> . it finds concepts by dictionary look-up, performs word-sense disambiguation if necessary, and assigns concept unique identifiers . we used peregrine with a dictionary based on version 2012aa of the umls metathesaurus, only keeping concepts that belong to the semantic groups “chemicals & drugs” and “disorders”  <cit> . rewrite and suppress rules are applied to the terms in the dictionary to enhance precision and recall  <cit> .

to further improve concept identification, we employed a rule-based nlp module that we previously developed and tested for disease identification  <cit> . briefly, the nlp module consists of a number of rules that are divided into five submodules, which carry out coordination resolution, abbreviation expansion, term variation, boundary correction, and concept filtering. the rules combine the annotations of a concept normalization system, such as peregrine, with pos and chunking information. the coordination module uses pos and chunking information to reformat the coordination phrase and feed the reformatted text into the concept normalization system for proper annotation of the concepts. the abbreviation module combines an abbreviation expansion algorithm  <cit>  with pos and chunking information to improve the recognition of abbreviations. the term variation module contains a number of rules that adjust noun phrases and feed the adjusted phrase into the concept normalization system again, to check whether it refers to a concept. the boundary correction module contains several rules that correct the start- and end positions of concepts identified by the system, based on pos and chunking information. the concept filtering module consists of two rules that suppress concepts that were identified by the concept normalization system. one rule removes a concept if the concept annotation in the text has no overlap with a noun phrase because in our experience, most umls concepts in biomedical abstracts belong to a noun phrase, or at least overlap with it. the other rule removes a concept if it is part of a concept filter list. the nlp module was not modified for the current task except for the concept filter list, which was adjusted based on our training data.

the knowledge base is a graph representation of the information contained in the umls metathesaurus and the umls semantic network. the umls metathesaurus defines terms and concepts , as well as relations between the concepts. each relation has a relation type, e.g., “is-a” or “cause-of”. there are a total of  <dig> relation types in the umls metathesaurus. the umls semantic network consists of a set of semantic types, i.e., broad subject categories that provide a categorization of all concepts represented in the umls metathesaurus. the semantic types are connected by semantic relations.

the knowledge base is a three-tier hierarchical graph in which vertices represent terms, concepts, and semantic types, and the edges represent relations between concepts and between semantic types. at the lowest level are the terms, which are linked to concepts at the second level. each concept is linked to one or more semantic types, which are situated at the highest level. the knowledge base has been implemented in a graph database  and was populated with concepts  and relations extracted from the umls  <dig> aa release. in this study, we only used the relations at the second level, i.e., between concepts.

the edges that connect two concepts form a path, with a length equal to the number of edges. the distance between two concepts is defined as the length of the shortest path. note that there may be multiple shortest paths, but there is only one shortest path length.

for each sentence in the corpus, we determined the distance in the knowledge base between the drugs and adverse effects that were found by the concept identification module. only if the distance between a drug-adverse effect pair was less than or equal to a distance threshold, a relation was considered present. based on our training set, we empirically found that a distance threshold of four gave best performance results.

further reduction of false-positive drug-adverse effect relations was attempted by taking into account the type of the relations in the shortest paths between drugs and adverse events. in our training set, we counted the number of each relation type in the paths that resulted in false-positive and in true-positive drug-adverse effect relations. if for a relation type the ratio of the false-positive count plus one and the true-positive count plus one was greater than seven, we discarded any path containing that relation type. the value of seven was determined experimentally on the training set as yielding the best performance.

performance evaluation
in the ade corpus, including both the  <dig> positive and  <dig> negative sentences, drug-adverse effect relations are annotated at the sentence level by specifying the start and end positions of the drug and the adverse effect. we counted a relation found by our system as true positive if the boundaries of the drug and adverse effect exactly matched those of the gold standard. if a gold-standard relation was not found, i.e., if the concept boundaries were not rendered exactly by the system, it was counted as false negative. if a relation was only found by the system, i.e., the concept boundaries did not exactly match the gold standard, it was counted as false positive. performance was evaluated in terms of precision, recall, and f-score. an error analysis was carried out on a sample of  <dig> randomly selected errors that were made by our relation extraction system.

RESULTS
performance of the relation extraction system
table  <dig> shows the performance of the peregrine baseline system on the test set of the ade corpus, and the incremental contribution for each of the different modules. the baseline system had a high recall but low precision, yielding an f-score of  <dig> %. use of the nlp module more than doubled the f-score. application of the knowledge base further improved the f-score by  <dig>  percentage points. relation-type filtering increased the f-score by another  <dig>  percentage points. overall, the knowledge-base module decreased recall by  <dig>  percentage points, but increased precision by  <dig>  percentage points.

effect of different distance thresholds in the knowledge base
table  <dig> shows the performance of the relation extraction system on the ade test corpus for different distance thresholds  in the knowledge base. the highest f-score of  <dig> % is obtained with a distance of four. lowering the distance threshold increases precision and decreases recall. the highest recall is  <dig> %  at a threshold of five, the highest precision is  <dig> %  at a threshold of one.

effect of different training set sizes
to assess the effect of increasing amounts of training data on system performance, training sets of  <dig>   <dig>  and  <dig> abstracts were selected from the ade corpus. the abstracts in a training set were a subset of the abstracts in the next larger training set. for each training set, the corresponding test set consisted of the remaining abstracts in the ade corpus. table  <dig> shows that the performance of the relation extraction system improves with larger amounts of training data, but is leveling off with increasing size. the system obtains an f-score of  <dig> % when trained on  <dig> abstracts, which is an improvement of  <dig>  percentage points as compared with the system trained on  <dig> abstracts the nlp module contributed  <dig>  percentage points to this improvement, and the relation-type filter module  <dig>  percentage points. the baseline peregrine module and the knowledge-base module do not require training and thus were not changed.

performance comparison of knowledge based and machine-learning based relation extraction
part of the ade corpus that we used in our experiments, has previously been used by gurulingappa et al.  <cit>  to develop and evaluate a machine-learning based relation extraction system based on jsre. to enable a comparison of the performance of our knowledge-based relation extraction system and the previously published results for jsre, we set up the same training and test environment as described by gurulingappa et al.  <cit> . similar to gurulingappa et al., we removed  <dig> relations with nested annotations in the gold standard , and only used the positive sentences in the ade corpus. in  <cit> , all remaining true relations  were supplemented by false relations , in a ratio of  <dig> : <dig>  to create a corpus with the same ratio to train and test our system and allow comparison of results, we took all true relations in which the concepts were found by peregrine and the nlp module, and randomly added false co-occurrence relations generated by peregrine and the nlp module, until the ratio of  <dig> : <dig> was reached.

table  <dig> shows the performance of our knowledge-base system and the previously reported performance of jsre  <cit> . without any training corpus, i.e., only applying the knowledge base but not the relation-type filtering, which requires training, our system already got an f-score of  <dig> %. additional use of the relation-type filter trained on small sets of  <dig> or  <dig> abstracts, resulted in slightly higher f-scores, which were substantially better than those obtained with jsre. the best f-score reported for jsre, when about 90% of the abstracts in the corpus was utilized for training, was 87%  <cit> .

error analysis
we randomly selected  <dig> errors that the system made in our test set, and manually classified them into different error types . false-positive errors were mostly due to drugs and adverse effects that were correctly found by the concept identification module, but were wrongly annotated by the knowledge-base module as having a relation. of the  <dig> errors of this type,  <dig> occurred in negative sentences, i.e., sentences that do not contain any drug-adverse effect relation according to the gold standard. for instance, the gold standard did not annotate a relation in “norethisterone and gestational diabetes”, but the system found “norethisterone” as a drug concept, “gestational diabetes” as an adverse effect, and generated a false-positive relation between these two concepts. eighteen of the  <dig> errors occurred in positive sentences. for instance, in the sentence “pneumocystis carinii pneumonia as a complication of methotrexate treatment of asthma”, the gold standard annotated a relation between the drug “methotrexate” and the adverse effect “pneumocystis carinii pneumonia”, concepts that were also found by the system. however, the system also annotated “asthma” as another adverse effect concept, which generated a false-positive relation between “methotrexate” and “asthma”. the second type of false-positive errors was caused by incorrectly found concepts, for which a relation was found in the knowledge base. for instance, in “drug-induced pemphigus related to angiotensin-converting enzyme inhibitors”, the system incorrectly annotated “angiotensin-converting enzyme inhibitors” as a drug, and wrongly established a relation with “drug-induced pemphigus”. altogether, false-positive errors accounted for 79% of all errors.

false-negative errors were generated because the system missed a concept, or did not find a relation in its knowledge base between two correctly found concepts. an example of the first type of error is the term “tma” , which the system incorrectly recognized as a drug in the sentence “a case report of a patient with probable cisplatin and bleomycin-induced tma is presented.” the system then missed the relations between the adverse effect “tma” and the drugs “cisplatin” and “bleomycin”. the other type of false-negative error is illustrated by the sentence “encephalopathy and seizures induced by intravesical alum irrigations”, which contains two relations, one between “alum” and “encephalopathy”, the other between “alum” and “seizures”. the concept-recognition module found all three concepts correctly, but the knowledge-base module could not find the relation between “alum” and “seizures”. false-negative errors contributed 21% to the total number of errors.

discussion
we have investigated the use of nlp and a knowledge base to improve the performance of a system to extract adverse drug events. by applying a set of post-processing rules that utilize pos and chunking information, and exploiting the information contained in the umls metathesaurus and the umls semantic network, the f-score on the ade corpus improved by  <dig>  percentage points as compared to a simple co-occurrence baseline system. to our knowledge, this is the first study that uses a knowledge base to improve biomedical relation extraction.

the main advantage of our approach as compared to machine-learning approaches is the relatively small set of annotated data required for training. for the ade corpus, we only used  <dig> abstracts  to train our system. when we compared our system with a machine-learning system trained on a document set of the same size, our system performed substantially better. although a machine-learning approach usually performs very well if trained on a sufficiently large training set, the creation of a gold standard corpus  is tedious and expensive: annotation guidelines have to be established, domain experts must be trained, the annotation process is time-consuming, and annotation disagreements have to be resolved  <cit> . as a consequence, gscs in the biomedical domain are generally small and focus on specific subdomains. it should also be noted that even when most of the ade corpus was used to train the machine-learning system, it did not perform better than our knowledge-based system.

it is difficult to compare the performance of our system with those of the many other relation extraction systems reported in the literature because of the wide variety of relation extraction tasks and evaluation sets. we also evaluated the performance of the whole relation extraction pipeline , whereas other studies focused on the relation extraction performance under the assumption that the entities involved were correctly recognized  <cit> . moreover, previous systems were sometimes evaluated on a selected set of abstract sentences. as mentioned earlier, gurulingappa et al.  <cit>  mainly used positive sentences with at least one relation from the abstracts in the ade corpus, and did not consider relations with nested entities. similarly, buyko et al. only used sentences with at least one gene-disease, gene-drug, or drug-disease relation in the pharmgkb database. both systems obtained f-scores larger than 80%. in a comparable test setting, our system obtained at least as good results , but in a more realistic test environment, which included the whole relation extraction pipeline and all sentences of the abstracts, performance dropped considerably . this can largely be attributed to the additional false-positive relations in the negative sentences of the abstracts, decreasing precision considerably. although our evaluation setting is more realistic, results may still be optimistically biased because our corpus only consisted of abstracts that contain at least one sentence that describes an adverse drug event. the inclusion of abstracts that do not describe adverse drug events would further reduce the system’s precision.

our error analysis indicated that for the majority of errors the entities are correctly identified , the error being made in the knowledge-base module. a potential source of false-negative errors is that drugs and adverse events in the knowledge base have no relations with other concepts. however, only  <dig> % of the  <dig> unique concepts that were found in the ade corpus did not have any relation. the median number of relations per concept was  <dig>  to reduce the number of false-negative errors, we plan to extend the knowledge base by including relations mined from other drug-adverse effect databases, such as dailymed  <cit> , dbpedia  <cit> , and drugbank  <cit> . false-positive errors generated by the knowledge base may be decreased by including more strict filtering rules on the relation types. we also noted several general concepts, e.g., “patient”, “drug”, and “disease”, that are highly connected. their removal may improve performance. finally, we currently took all relation types as equally important and did not consider the plausibility of a path that connects two concepts. development of a weighting scheme of different relation types and rules that check the plausibility of the possible paths may be able to better distinguish false from true drug-adverse effect relations.

our system has several limitations. the system currently does not try to distinguish between drug-adverse event relations and drug-disease treatment relations. further investigation of the relation types in the paths that connect drugs and conditions in the knowledge base may help to differentiate these two situations, but is left for future research. a second limitation is that the knowledge-base module, in order to establish a potential relation, requires concept identifiers as its input. concept identification is generally considered more difficult than the recognition of named entities, which can serve as the input for machine-learning based relation extraction. another, related limitation of the current system is that the umls metathesaurus does not provide extensive coverage of genes and proteins. the incorporation of relations from other sources of knowledge, such as uniprot or the databases that are made available through the lodd  project, may remedy this drawback.

CONCLUSIONS
we have shown that a knowledge-based approach can be used to extract adverse drug events from biomedical text without need for a large training set. whether use of a knowledge base is equally advantageous for other biomedical relation extraction tasks remains to be investigated.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
nk developed the methodology, built the software infrastructure, carried out the experiments, analyzed the data, and drafted the manuscript. bs, bqc and za helped to build the software infrastructure. emm and jak conceived and supervised the study, co-developed the methodology, and helped to write the paper. all authors read and approved the manuscript.

