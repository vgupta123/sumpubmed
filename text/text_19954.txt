BACKGROUND
the ongoing sequencing of complete genomes of prokaryotes and eukaryotes reveals a tremendous amount of uncharted data. in prokaryotic genomes, roughly  <dig> to  <dig> percent of the predicted orfeome remain functionally unknown with many open reading frames  only showing similarities to conserved hypothetical orfs of other organisms. however, a significant number of the predicted orfs do show similarities to functionally classified genes with defined roles in the complex network of metabolic pathways. previously, the most common approach to determine the functionality of a gene and its gene product was to experimentally determine phenotypic changes upon inactivation or overexpression of the gene. this is the most effective approach for determining the roles of single genes, but it is unfeasible to investigate complete orfeomes with over  <dig> orfs. the kyoto encyclopedia of genes and genomes  represents an ambitious and successful attempt to assign known enzymes into known biochemical pathways and is updated on a regular basis  <cit> . the database is represented by a web-based browser and a multitude of different analyses are possible. genes can be analyzed using online blast algorithms  and if significant blast similarities resulted in the assignment of a defined enzyme class , these genes can be marked in corresponding kegg pathways. however, analysis of larger numbers of genes using this manual approach is tedious, inflexible, and time consuming. since un-encrypted data transmission is used for most public servers, remote blast analyses with confidential sequence queries is not desirable. in addition to this web-browser based approach, the kegg database can also be accessed directly via an application programming interface  and the underlying databases can be downloaded for local uses. third party-software most commonly use the kegg database for gene-classifications, often in combination with whole genome annotation efforts  <cit> , or utilizes the database content for reference gene sets used in further experiments  <cit> . other remote software solutions like david  <cit>  integrate various databases and experimental results to allow for extensive query-based data mining on given gene lists. similarly, pathway tools  utilizes dedicated server and database backbones to realize a sophisticated environment. new genomes must be manually integrated into a pathway/genome database , which in turn sets the basis for more complex queries and analyses. however, the significant resources required to implement genome information for pathway tools might not be readily available. pathfinder  <cit>  and biominer  <cit>  use a different approach in that they utilize some of the data the kegg database provides and then approach pathway reconstruction using software specific algorithms. however, these solutions tend to be complex, thoroughly web-based, and often utilize the whole kegg databases without selective options. furthermore, most of these solutions require specific data formats that are compatible with the respective application for initial data parsing and entry. for example, although pathfinder can parse common embl input files, only genes with an ec-number tag can initially be integrated into the database system, implying a sophisticated level of existing genome annotation. although this approach can be used to generally classify genes, it lacks the necessary flexibility to compare specific pathways of interest in single organisms or groups of organisms to a selected set of genes. in addition, these complex algorithms are not always needed and more simplistic and faster solutions with less hardware and software requirements would be preferable due to their ease of use and flexibility.

closely-related groups of organisms may differ in certain key elements that define specific strain/species related differences. comparing these organisms or groups of organisms with each other should highlight these differences and reveal specific properties or lead to new genetic targets for pathway engineering. therefore, it may be desirable to choose only subsets of organisms and pathways from the overall kegg database content.

pathwayvoyager was developed to overcome most of these obstacles. the software resembles a tool to analyze an unlimited number of protein sequences against a user-selected subset of the kegg database using ncbi's blastp algorithm and subsequently places them into their proper pathway positions. results are displayed in colored pathway maps and hits can easily be analyzed using the graphical interface. this tool reflects a different approach to pathway mapping, in that it provides a simplistic and flexible approach with few prerequisites. no dedicated hardware  or software  are necessary to analyze given datasets. a standard pc with the windows operating system is sufficient to operate pathwayvoyager. in contrast to more complex tools, no underlying protein annotation is necessary and plain protein sequences in fasta format can be used as query templates. this approach is ideal for draft phase genomes and ongoing annotation efforts in completed genomes where the emphasis lies on the establishment and verification of gene annotation and an initial assessment of metabolic capabilities. the resulting main advantage of pathwayvoyager is its speed and economy for initial pathway mapping. also, the resulting data can easily be accessed on different locations by transferring the generated flatfile database to the respective computers. once the research objective shifts to comparative and predictive pathway analyses, other tools like david or pathwaytools become more advantageous. pathwayvoyager fills a niche for environments with limited hardware and software resources that still require a significant and meaningful way to perform small and large scale pathway mapping projects from varying data sources.

implementation
pathwayvoyager is written completely in perl/tk and requires the perl interpreter . no further perl modules are required. however, two external distributions are required, namely the ncbi blast distribution , and the soap::lite client  to utilize the kegg api. perl/tk provides the interpreter for pathwayvoyager, and the soap::lite client facilitates interaction with the kegg api. the standalone blast distribution is used to generate blast compatible databases and to perform the local blast analyses. for data analysis and browsing, the perl/tk interpreter is the only pre-requisite for pathwayvoyager. the standalone blast distribution, and the soap::lite client can be omitted and no internet connection is necessary.

the software was developed to optimally complement the gamola annotation suite  <cit>  but accepts any protein sequence in fasta format. the sequential numbering of orfs in gamola annotated genomes is reflected by gene-name tags in the generated genbank files. extracting protein sequences into fasta files preserves this numbering scheme and is subsequently presented in the browser module of pathwayvoyager. this permits fast and efficient orf-tracking throughout the genome and often provides preliminary identification of gene clusters. pathwayvoyager operates as a stand alone software solution without the need of additional database backbone systems. the use of pathwayvoyager and the kegg database system implies the agreement to the license terms specified for kegg at .

the general procedure used by pathwayvoyager to map genes is illustrated in figure  <dig>  user defined organism and pathway subsets of the kegg database at the time of analysis result in the online retrieval of a defined set of protein sequences via the kegg api . this dataset is converted into a blastp compatible database using "formatdb" provided by ncbi. the query protein sequences in fasta format are then subjected to a blastp analysis, utilizing "blastall", also part of the standalone blast distribution. blast results for each query are formatted and saved into a flatfile database, linking each query to kegg ec-number entries. kegg map points are then requested for each selected pathway  and stored in an internal tabular format. subsequently, the blast flatfile database is analyzed and blast hits above a user-defined e-value threshold are discarded. the remaining significant blast hits are then parsed to group query-sequences to kegg map points for each selected pathway. each kegg entry in a given pathway is assigned to a list of significant blast hits. each hit displays the respective query orfs and its best blast hit based on the selected kegg database subset, and the corresponding blast scores and e-values. based on this query-assignment, tagged kegg pathway graphs are requested online using the kegg api . resulting gif maps and ascii group assignment data files are stored in a flatfile database and can be visualized using the graphical browser module. previous analyses can be accessed directly from the browser without the need to re-analyze the query sequences.

the graphical user interface was designed to be self-explanatory and easy to use. after the initial pathway setup, no further installation steps are necessary. although pathwayvoyager requires an internet connection in order to retrieve data from the kegg database, all analyzes involving the provided gene sets are performed locally and no sensitive data are transmitted. this eliminates one of the major security concerns when working with confidential data and permits the real-time use of the kegg database system. pathwayvoyager does not require any dedicated hardware and has been tested on a standard pc and the windows platform. linux versions of perl/tk, the soap::lite client, and the standalone blast distribution are freely available and would allow pathwayvoyager to operate under a linux environment, as well. for certain selectable pathways  kegg does not yet support organism independent marking. for practical reasons, no hits will be displayed for these pathways.

RESULTS
upon start, the main window displays two list-boxes and the currently active buttons . changing the default values is possible at this stage through the "setup" function and has to be done before initializing the analysis. the "start" button  commences the analysis and all organisms currently present in the kegg database will be displayed in a listbox . single and multiple selections are possible and will be confirmed with the "retrieve organisms" button. the second listbox  will then be automatically populated with kegg pathways. after selecting the desired pathways to be analyzed, the "retrieve pathways" button confirms the selection and starts the kegg pathway mapping. both, the organisms and the pathways present in the kegg database at the time of the analysis can be selected independently from each other, with the exception of organism-specific pathways . this guarantees use of the most flexible solution for selective comparative analyses between groups of organisms. by selecting all organisms and pathways, the given gene set can be compared against the complete kegg database.

the user-selected organism and pathway combination is shown in a separate pop-up window . the current status of the kegg pathway mapping is also shown in a separate log-window . in general, the right panel  harbors the user-guide interface and was designed to lead the user through the analyses in a step-by-step approach. by default, the organism and pathway confirmation automatically initializes the kegg pathway mapping. if only the selected and retrieved protein sequences are required, or a manual start for pathway mapping is desired, the setup module allows the configuration for manual mode. kegg pathway mapping can then be initiated with the "submit to kegg" button. selected pathway/organism combinations are saved as an ascii text file. the retrieved protein sequences are stored into a separate ascii file and a blast-compatible database is generated. for future analyses, the pathway/organism selection and the respective database can be re-used with different query protein sequence sets.

the possibility to re-use previous selections dramatically reduces the time needed to complete kegg analyses, as retrieval of individual protein sequences from kegg is omitted. in addition, blast results obtained with the given query set can also be re-used. this shortens the run time further, enabling rapid mappings and analyses of pathways with varying relaxed or stringent threshold values.

the provided gene set will then be compared to the local database generated from the selected organism-pathway protein sequence combination using the blastp algorithm. blast hits featuring an e-value below the user-selectable threshold will be used to generate the marked kegg pathway requests. pathway maps are saved as gif files and the url for the respective kegg pathway map including the corresponding blastp results are stored separately in text files.

results are displayed in a separate window. figure  <dig> illustrates pathway mapping for the glycolysis/gluconeogenesis pathway  using the orfeome of l. acidophilus ncfm  <cit>  as query set and the complete kegg database as template.

in general, previously selected pathways are displayed by either their kegg pathway code or full name. alternative analyses can be displayed by changing the default mapping directory, using the "directory" function . the selected pathway will then be graphically displayed and blastp hits below the specified threshold are indicated as red boxes, bearing the respective ec numbers . each marked element is shown by its ec-number code, numerically sorted, in a listbox . upon selection of an entry, all blastp hits below the threshold are sorted by ascending e-values and displayed accordingly . this workflow allows for a quick pathway mapping throughout a given gene set and those potentially involved in multiple pathways can be easily identified and analyzed.

in the example shown, the conversion of glyceronephosphate to glyceraldehyde-3-phosphate is mediated by a triosephosphate isomerase . selecting this entry from the ec entry list , highlights all query hits found in l. acidophilus below the defined threshold . two entries below an e-value of 1e- <dig> were found, namely orfs lba <dig>  and lba <dig> . both entries show significant similarities to triosephosphate isomerases. further analyses showed that the conversion of glyceraldehyde-3-phosphate to glycerate- <dig> -bisphosphate and to glycerate-3-phosphate is mediated by lba <dig>  and lba <dig> , respectively. the ambiguity found for ec  <dig> . <dig>  could be resolved and, consequently, the genome annotation was updated accordingly. more detailed analyses revealed the presence of the complete pathway for uptake and conversion of glucose into pyruvate and l-lactate. a more detailed analysis of the complete metabolic pathway reconstruction of l. acidophilus ncfm using pathwayvoyager is described elsewhere  <cit> .

pathwayvoyager does not evaluate or extrapolate the displayed hits and the quality and significance of the results depend on the current content of the kegg database. as with every predictive software, results should be carefully analyzed and seen in their genetic context to evaluate activities and potential substrate specifity-variances carried out by homologous enzymes. results from previous analyses can be displayed by selecting the "view existing kegg pathways" option in the pathwayvoyager main window .

run times for pathwayvoyager may vary, depending on the number of selected pathways and organisms. analysis of a complete genome of ~ <dig>  open reading frames  using the complete kegg database can be carried out in less than  <dig> h.

CONCLUSIONS
pathwayvoyager differs significantly in its approach from other software solutions for pathway reconstructions that already exist. in contrast to the often highly complex and specific algorithms, pathwayvoyager represents a more straight-forward approach, and doesn't require substantial resources on the users' side. relying on the blast algorithm and the ambitious kegg database, pathwayvoyager utilizes widely accepted resources to analyze and map data. despite the uncomplicated approach, evidential data can rapidly be obtained and easily analyzed during genome analyses. pathwayvoyager represents an effective pathway mapping tool for large or confidential data sets.

availability and requirements
• project name: biological pathway mapping

• project home page: none

• operating system: platform independent

• programming language: perl

• other requirements: active perl  <dig> , soap::lite client, ncbi's blast distribution

• license: the software is distributed for free under the nc state university copyright and can be obtained upon request to the authors.

• any restrictions to use by non-academics: none

authors' contributions
ea developed and tested the complete pathwayvoyager software and performed the described pathway reconstruction for lactobacillus acidophilus ncfm. trk read and approved the manuscript and provided financial support for ea and the project.

