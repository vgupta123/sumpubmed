BACKGROUND
the identification of transcription factor binding sites and cis-regulatory modules is a crucial step in the study of gene regulation. transcription factor binding sites often occur together in clusters as cis-regulatory modules and these modules can regulate the transcription of genes  <dig> kilobases  or further from the module sites  <cit> . to study the regulation of transcription in silico, it has become necessary to scan large intergenic regions for occurrences of these modules. when scanning through large intergenic regions, it is important to be able to evaluate the statistical significance of predicted module sites in order to distinguish likely modules for experimental validation. the methods we introduce in this paper allow for the rapid detection of cis-regulatory module sites as well as an estimation of their statistical significance. these tools will be of great use to any researcher wishing to scan large intergenic regions for potential cis-regulatory modules.

the p-value corresponding to a given match score for a transcription factor binding site is the probability of observing a match score at least as great for a randomly generated site. we start by describing a method for the accurate estimation of statistical significance of single binding sites. this method utilizes an extensive database of known human, mouse and rat transcription start sites, the cshl mammalian promoter database   <cit>  to tabulate frequencies of occurrences for all k-mers in known sequences. this information is then used to calculate p-values that correspond to particular thresholds for matrices as well as to calculate the threshold of occurrence corresponding to a given p-value. if a number of binding sites have been predicted and a position frequency matrix  that corresponds to these binding sites is known, this technique can be used to obtain a p-value for the predicted sites. conversely, if the desired p-value is known for a given matrix, the threshold corresponding to this p-value can be calculated and this can be used to find the sites in sequences. one major advantage of using an extensive database of known sequence regions to estimate p-values is that the result will not depend on the sample data and therefore results obtained from different motif-finding or scanning algorithms can be compared using p-values. although previous work has addressed the problem of estimating the statistical significance of binding site matches, these methods were forced to either assume uniform nucleotide frequencies for all sequences tested or to look at distributions of scores across random sequences to be computationally feasible. the novel methods we present here utilize known dna sequence in an efficient manner to avoid any prior assumptions on nucleotide distribution in regulatory dna sequences. this allows us to make more accurate estimates on statistical significance of binding site predictions.

after describing the estimation of p-values for single transcription factor binding sites, we show how the single site p-values can be combined with a clustering probability to determine the overall module probability. we consider two separate models of cis-regulatory modules, modules with constrained organization and modules without constrained organization. modules without organizational constraints are simply a cluster of individual binding sites with the only parameters of the model being the p-values of the individual sites and the clustering p-value. the clustering probability in this model is calculated using a max-gap model. we also consider modules that have prescribed organizational constraints. the organizational parameters we consider are the order, spacing and orientation of motifs in the module. for modules with organizational constraints, the module probability is calculated using a max-gap model, and then adjusted for the organizational parameters.

RESULTS
statistical significance of single sites
previous work on statistical significance of single sites
many approaches to obtain p-values for motif site matches using position weight matrices  have been introduced  <cit> . we now briefly review the original works in this field, and touch upon some of the more recent work that has extended these original methods.

the work of staden is the original work on calculating probabilities for finding motif matches in dna sequence  <cit> . the method outlined by staden uses probability generating functions to calculate the theoretical probability of finding motif matches. much of the existing work on calculating probabilities of motif matches is built directly on staden's work. claverie showed that given the base composition of random sequence, one can compute the expected distribution of random scores for each individual position and, iteratively, the expected distribution of the total score  <cit> . this distribution of scores is close to a gaussian, as in staden's work, and the expected best matching score in each sequence follows an extreme value distribution. the software program nmksite allows for the calculation of statistical significance given a pfm and a threshold  <cit> . beckstette et al.  <cit> , introduced the esasearch algorithm which assesses the statistical significance of binding site matches using a method based on staden's work. baily and gribskov introduced a method to estimate the statistical significance of motif matches based on fisher's "omnibus" procedure for combining one-sided statistical tests  <cit> . hertz and stormo introduced two methods to approximate the significance of motif matches, one based on large-deviation theory and one purely numerical  <cit> . nagarajan et al. extended the numerical method of hertz and stormo using a cyclic shifted fast fourier transform  <cit> .

obtaining match p-values from database frequencies
assuming the sequences being scanned are a sample from a known population of sequences, we can query that population directly to obtain the p-value associated with any match score. for example, suppose we are searching a set s of  <dig> kb sequences immediately upstream of the transcription start site  of a set of human genes. the population d would be the entire set of  <dig> kb upstream regions in the human genome. for a scoring matrix m, and a match score t, the probability that a randomly selected site from s scores at least t when matched with m is

pr⁡ ≥t|s∈s=|{s∈d:score≥t}||nd|,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacyggqbaucqggybgccqqggaaicqggoaakcqqgzbwccqqgjbwycqqgvbwbcqqgybgccqqglbqzcqggoaakcqwgnbqtcqggsaalcqwgzbwccqggpaqkcqghljyscqwg0badcqgg8bafcqwgzbwccqghiiizcqwgtbwucqgh9aqpdawcaaqaaiabcyha8jabcuha7jabdohazjabgigiolabdseaejabcqda6iabbohazjabbogajjabb+gavjabbkhayjabbwgaljabcicaoiabd2eanjabcycasiabdohazjabcmcapiabgwmizkabdsha0jabc2ha9jabcyha8bqaaiabcyha8jabd6eaonaabaaaleaacqwgebaraeqaaogaeiifawhaaiabcycasiaaxmaacawljawaaewaaeaacqaixaqmaiaawicacaglpaaaaaa@6b0e@

where s and d are treated as the sets of sites they contain, and nd is the number of possible sites in d. the ideal way to evaluate equation  <dig> is to scan all sequences in d and count the sites with scores at least as great as t. in most applications, however, d is prohibitively large and this ideal solution is impractical.

we describe here a technique that preprocesses a sequence database to create a summary data structure encoding sufficient information to accurately estimate the probability described in equation  <dig>  we refer to these summary data structures as -tables, because they tabulate all g-spaced k-mers  in the sequence database. given a matrix and a cutoff score, a -table allows rapid estimation of the p-value for that score. similarly, the -table allows a cutoff score associated with a given p-value to be computed. this process is illustrated in figure  <dig> 

preprocessing sequence databases as -tables
a g-spaced k-mer is a sequence segment that consists of k/ <dig> contiguous nucleotides, a space of width g following position k/ <dig>  and the next k/ <dig> contiguous nucleotides starting at position k/ <dig> + g +  <dig> . as an example, the 5-spaced 6-mer acgtca occurs in the following sequence beginning at the fourth position:

tagacgttatgtcaa

although it is possible to construct -tables from other formations of words, this format of a g-spaced k-mer can adequately represent the majority of binding sites present in the transfac  <cit>  and jaspar  <cit>  databases. a sequence database d may be either a single long sequence or multiple sequences. both cases are treated similarly. the -table for database d contains the number of times each -table documents the number of times w occurs in d with at most g central spaces. for larger values of k and g, a -table contains more information about d, providing more accurate p-value estimates with more of the positions in a matrix considered exactly. however, the total size of the -table will be larger.

calculating expected frequencies of long words
to calculate the expected frequency of words longer than the words tabulated from the database, we first look for the most informative positions in the matrix, with the information content of positions in the matrix defined as in  <cit> . if the tabulated frequencies are of size k, we find the most informative positions in the matrix that are in the format of a g-spaced k-mer: k/2-gap-k/ <dig>  all k-mers that can be generated from these positions are enumerated using a branch and bound algorithm. the frequency of each k-mer above threshold is then looked up in the -table. to estimate the expected frequencies of the longer words we use the nucleotide content of the database to create a markov model of order k/ <dig>  with this, the consecutive positions of the matrix that are not part of the k most informative positions contribute to the expected frequency in a way that is proportional to their frequency in the promoter database.

converting between p-values and scores
given a scoring matrix m, and a match score t, let w  be the set of all words w such that score ≥ t. define nest  as the estimated number of times the word w occurs in sequences of d. we estimate the probability from equation  <dig> as

pr⁡ ≥t|s∈d)≈1nd∑w∈wnest.
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacyggqbaucqggybgccqqggaaicqggoaakcqqgzbwccqqgjbwycqqgvbwbcqqgybgccqqglbqzcqggoaakcqwgnbqtcqggsaalcqwgzbwccqggpaqkcqghljyscqwg0badcqgg8bafcqwgzbwccqghiiizcqwgebarcqggpaqkcqghijyudawcaaqaaiabigdaxaqaaiabd6eaonaabaaaleaacqwgebaraeqaaaaakmaaqafabagaemota40aasbaasqaaiabdwgaljabdohazjabdsha0bqabagccqggoaakcqwg3bwdcqggsaalcqwgebarcqggpaqkasqaaiabdeha3jabgigiolabdefaxjabcicaoiabd2eanjabcycasiabdsha0jabcmcapaqab0gaeyyeiuoakiabc6cauaaa@62a3@

we now describe how, for a given word w, we obtain an accurate value for nest  using a -table. we first identify the k positions in m with the greatest information content, under the restriction that those positions must match the format of a g-spaced k-mer. let w' be the g-spaced k-mer in w corresponding to the aforementioned most informative positions in m. using the -table, we obtain the exact number of times w' occurs in d. this number of occurrences is then multiplied by the probability of observing the nucleotides at remaining positions in w given the nucleotides at positions in w', as described above.

implementing this technique, for a given matrix, requires enumerating all words with a match score greater than the specified cutoff. such enumeration is feasible for the majority of binding site matrices. if a p-value is given instead of a threshold, the process is reversed: the p-value is converted into an occurrence frequency, and the -table is used to estimate a score threshold for which we will observe that occurrence frequency in the database. when scanning sequences, each site constitutes a distinct trial, and therefore, the p-values must be corrected for multiple testing. the simple bonferroni correction  <cit> , which assumes independence between trials, may be used in this case. any dependencies introduced by autocorrelation are accounted for by the counts tabulated in the -tables: autocorrelating words will have greater counts in the database, and this is directly reflected in the -table.

accuracy of -table calculations
to assess our ability to determine p-values of binding site predictions using -tables, we carried out the following tests. tables for two different size promoters: small  and large , and two sizes of k-mers: 6-mers and 8-mers, were constructed for all human promoters in cshlmpd. the subset of transfac  matrices described used for testing was all vertebrate matrices with integer counts.

each matrix in the subset was scanned on both of the human promoter sets and thresholds for site matches were set at a functional depth of  <dig> . a functional depth  of  <dig>  was used here because all matrices have a reasonable match threshold corresponding to this functional depth. the empirical p-value corresponding to this functional depth was then calculated as the number of site matches divided by the total number of windows of the size of the matrix contained in the particular promoter set. the matrix threshold corresponding to a functional depth of  <dig>  was then converted to a p-value using the appropriate -table and an error was calculated as the difference between the empirical p-value calculated as above and the p-value calculated using the -table. the average error for all matrices tested for both sizes of promoters and k-mers is shown in table  <dig> 

errors in the estimation of p-values using -tables of various sequence sets and also the esasearch program  <cit> . the error in the calculation of p-values using -tables decreases as larger k-mers and larger sequences are used to build the -tables.

we also wanted to measure the error created with the approach to p-value calculation as implemented in the esasearch program. to test this software, we first calculated an empirical p-value for each matrix in the manner described above. this p-value was then used as an input parameter for esasearch to scan for sites with at least this probability. the resulting number of sites found by esasearch was used to calculate the empirical p-value resulting for the program and the error in the process was calculated as the difference in the two p-values. the average errors produced by the esasearch algorithm are listed in table  <dig> 

the error in the calculations using the -tables decreases as we use larger promoters and larger k-mers to construct the -tables, which is expected. as more information is used in the calculation, the errors involved will be reduced. more suggestions on the proper selection of sequences to construct a -table are included in the discussion section. we also tested the nmksite software  <cit>  in its ability to carry out this procedure. for the two cases it was tested on , out of the  <dig> matrices that were tested, nmksite could not return thresholds for p-values small enough for  <dig> and  <dig> of the matrices respectively. this is due to the fact that nmksite produces a distribution of thresholds and p-values and if the desired p-value is smaller than any of the p-values listed by nmksite, the user is unable to get a corresponding threshold. if we ignored the matrices nmksite could not determine thresholds for, the errors for the small and large promoter sets were  <dig> e- <dig> and  <dig> e- <dig> respectively, which are much larger than the errors introduced by either the esasearch or -table method.

statistical significance of module sites
as mentioned previously, it is often the case that binding sites occur together in clusters as cis-regulatory modules and these modules can occur in regions very far from the genes they regulate. in this section, we extend the method described above for the estimation of statistical significance of single binding sites to the statistical significance of modules.

to assess the statistical significance of gene clusters, hoberman et al.  <cit>  developed statistics for gene clusters based on a max-gap parameter, which is defined as the maximum distance allowed between any two genes in a cluster. in the following sections, we outline how the max-gap technique can be extended to assessing the statistical significance of clusters of transcription factor binding sites. once we have estimated the statistical significance of the clustering of motif sites, we can combine p-values for individual sites with the clustering p-value to get an overall significance estimation for cis-regulatory modules.

previous work on scanning for cis-regulatory modules
the algorithms that have been introduced to find cis-regulatory modules can be divided into four types of algorithms:  algorithms for de novo module discovery,  algorithms that attempt to cluster binding sites found with traditional methods into modules,  algorithms that use phylogenetic information and  algorithms that scan for a pre-defined module profile. algorithms for de novo discovery of modules include modulesearcher  <cit> , co-bind  <cit> , bioprospector  <cit> , mitra  <cit> , dyad search  <cit> , cismodule  <cit> , emcmodule  <cit>  and the gibbs module sampler  <cit> . algorithms that combine single sites together to form modules include the logistic regression analysis method introduced by wasserman and fickett  <cit> , mscan  <cit> , comet  <cit> , mcast  <cit> , composite module analysis  <cit> , ahab  <cit> , modulefinder  <cit>  and methods based on estimating the clustering significance of single sites under a poisson distribution model of motif sites used by lifanov et al.  <cit>  and wagner  <cit> . in addition to these methods, a number of recent algorithms have used conservation to try to predict cis-regulatory modules  <cit> . algorithms designed specifically for scanning include cismodscan  <cit> , target explorer  <cit>  and modulescanner  <cit> . we will discuss these algorithms further when comparing their performance to our method.

the original work by wasserman and fickett  <cit>  took into account the overall organization of a module in that their technique has the ability to learn the order of the motifs in a module and the method used by klingenhoff et al. considered the distances between single sites in a module  <cit> . a few of the more recent algorithms for de novo module discovery have also begun to take into account the organization of modules. for example, the algorithms introduced by gupta and liu  <cit>  and thompson et al.  <cit>  take into account the distances between motif sites in a module. these methods, however, are not built for scanning through sequences for defined modules but rather for de novo discovery of modules. none of the existing algorithms that allow for identifying and estimating the statistical significance of module sites allow the user to search for modules with defined organization.

statistical significance of modules without constrained organization
in this section we deal with the calculation of statistical significance of motif clusters with no consideration given to overall module organization. hoberman et al.  <cit>  considered the clustering of a chain of genes where genes were treated as points in a chain. therefore, they did not have to deal with the lengths of genes or the lengths of gaps between genes in a cluster. for our situation, we are considering motifs in a sequence window and the lengths of motifs are very important. our treatment of the max-gap statistics diverges from that of hoberman et al. due to this. an example of a max-gap cluster of m binding sites of width w in a sequence of length l with a max-gap g can be seen in figure  <dig> 

counting arrangements
the number of ways of creating a max-gap cluster of m motifs, a maximum gap of g and total length l is equivalent to rolling to m -  <dig> dice, with faces numbered  <dig> to g, such that the sum of their faces is equal to l - ∑i wi, where  <dig> <i ≤ m. this is, in turn, equivalent to rolling to m -  <dig> dice with faces numbered  <dig> to g +  <dig> with the sum of their faces equal to l - ∑i  -  <dig>  using this analogy, hoberman et al.  <cit>  derived an expression for the number of ways to construct a max-gap cluster of m genes anywhere in a sequence of length l. when considering motifs with widths, the expression

e=m!∑k=0⌊l−∑i−mg+1⌋k−km),     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrcqggoaakcqwgtbqbcqggsaalcqwg3bwdcqggsaalcqwgnbwzcqggsaalcqwgsbabcqggpaqkcqgh9aqpcqwgtbqbcqgghaqidaaewbqaamaabmaabagaeyoei0iaegymaedacagloagaayzkaawaawbaasqabeaacqwgrbwaaaaabagaem4aasmaeyypa0jaegimaadabawaaywaaeaadawcaaqaaiabdygasjabgkhitmaaqababagaeiikagiaem4dac3aasbaawqaaiabdmgapbqabawccqghsislcqaixaqmcqggpaqkcqghsislcqwgtbqbawqaaiabdmgapbqab4gaeyyeiuoaasqaaiabdeganjabgucariabigdaxaaaaiaawcp+cagl7jpaa0gaeyyeiuoakmaabmaabaqbaeqabiqaaaqaaiabd2gatjabgkhitiabigdaxaqaaiabdugarbaaaiaawicacaglpaaadaqadaqaauaabeqaceaaaeaacqwgsbabcqghsisldaaeqaqaaiabcicaoiabdeha3naabaaaleaacqwgpbqaaeqaaogaeyoei0iaegymaejaeiykakiaeyoei0iaem4aasmaeiikagiaem4zacmaey4kasiaegymaedaleaacqwgpbqaaeqaniabgghildgccqggpaqkaeaacqwgtbqbaaaacagloagaayzkaagaeiilawiaaczcaiaaxmaadaqadaqaaiabikdayagaayjkaiaawmcaaaaa@7d50@

counts the number of ways to form a max-gap cluster of m factors with widths wi, in a sequence of length l and a max-gap parameter g. the differences in this expression and the expression derived by hoberman et al. are first, in hoberman et al., the sum of all the gaps was equal to l -  <dig> while here the sum of all the gaps is equal to l - ∑i  -  <dig> and second, we multiply the entire expression by m! because a group of factors in a unique order qualifies as a unique module.

probabilities for the occurrence of clusters
with the ability to enumerate all possible ways to place m factors with widths wi in a sequence of length l such that the maximum possible gap allowed between any two factors is g we can calculate a p-value for the max-gap configuration. under the null hypothesis that each site is uniformly distributed in the sequence, the p-value for the max-gap configuration is

pr⁡=eg))m).     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacyggqbaucqggybgccqggoaakcqqgnbwzcqqghbqycqqgwbaccqghkjyocqwgnbwzcqgg8bafcqwgtbqbcqggsaalcqwg3bwdcqggsaalcqwgsbabcqggpaqkcqgh9aqpdawcaaqaaiabdweafjabcicaoiabd2gatjabcycasiabdeha3jabcycasiabdeganjabcycasigbc2gatjabcmgapjabc6gaujabcicaoiabdygasjabcycasmaaqadabagaem4dac3aasbaasqaaiabdmgapbqabagccqghrawkcqggoaakcqwgtbqbcqghsislcqaixaqmcqggpaqkcqwgnbwzcqggpaqkcqggpaqkasqaaiabdmgapjabg2da9iabigdaxaqaaiabd2gatbqdcqghris5aagcbawaaewaaeaafaqabegabaaabagaegymaejaeyoei0yaaabeaeaacqggoaakcqwg3bwddawgaawcbagaemyaakgabeaakiabgkhitiabigdaxiabcmcapawcbagaemyaakgabeqdcqghris5aagcbagaemyba0gaaagaayjkaiaawmcaaaaacqgguaglcawljagaaczcamaabmaabagaeg4mamdacagloagaayzkaaaaaa@768e@

the numerator in this equation is given by equation  <dig> with the m! factor canceled by the denominator. the denominator in this equation is the number of ways to place m non-overlapping motifs in a sequence of length l , with the m! factor canceled by the numerator.

statistical significance of modules with constrained organization
here we extend the treatment of modules without organizational constraints to deal with the organizational parameters of the ordering of motifs, the spacing between the motifs and the orientation of the motifs in a module. any or all of these organizational parameters can be specified when searching for a given module. in this section we outline methods to calculate statistical significance of module sites with any or all of these organizational parameters specified. in each case, the overall probability of the cluster with no organization is first calculated, and then this probability is corrected for the organizational constraints. an example of a module with specified organizational parameters can be seen in figure  <dig>  we note that a smaller module with organization can exist within a larger module without organization.

modules with order specified
we again define m as the number of motifs, g as the max-gap parameter and l as the total length of the window. the total number of permutations of m factors is simply m!. therefore, if the order of the factors in a module is specified, along with a max-gap parameter, the probability of the module is:

pr = pr p ,

where pr is given by equation  <dig> and,

p=1m!.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqggoaakcqwgybgccqggpaqkcqgh9aqpdawcaaqaaiabigdaxaqaaiabd2gatjabcgcahaaacqgguaglcawljagaaczcamaabmaabagaeginaqdacagloagaayzkaaaaaa@39ce@

modules with spacing specified
the correction for the probability of a module site when the spacing between any two pairs of factors is known can be calculated as

pr = pr p  p ,

where pr is given by equation  <dig>  p  is given by equation  <dig> and

p=∏i=1msspanig,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqggoaakcqwgzbwccqggpaqkcqgh9aqpdaqewbqaamaalaaabagaee4camnaeeicaanaeeyyaemaeeoba42aasbaasqaaiabdmgapbqabaaakeaacqwgnbwzaaaaleaacqwgpbqacqgh9aqpcqaixaqmaeaacqwgtbqbdawgaaadbagaem4camhabeaaa0gaey4diunakiabcycasiaaxmaacawljawaaewaaeaacqai1aqnaiaawicacaglpaaaaaa@47a4@

where ms is the number of spacings which are defined in the organization and spani is the size of the allowed span between the two factors flanking the ith spacing . in this situation we have also corrected for the order of the motifs in the module being specified. in general, when the spacing between two factors is defined, the order of the factors will be defined as well.

modules with strands specified
if the strands of the motifs in the module are specified, then the final probability of the module is simply multiplied by 1/ <dig> for every motif that has a specified strand. therefore, if the organization of a module has specified strands, the final probability for the module is

pr = pr p 

where pr is given by equation  <dig> and,

p=∏i=1md <dig>      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqggoaakcqwgkbazcqggpaqkcqgh9aqpdaqewbqaamaalaaabagaegymaedabagaegomaidaaawcbagaemyaakmaeyypa0jaegymaedabagaemyba02aasbaawqaaiabdsgakbqabaaaniabg+givdgccqggsaalcawljagaaczcamaabmaabagaegonaydacagloagaayzkaaaaaa@40e4@

where md is the number of motifs for which strand information is known.

combining significance values from individual sites and module structure
with p-values calculated for individual sites as well as for the clustering property of the module, we can combine these significance values to get an overall module significance. there are a number of ways that this can be done depending on the situation. if it is desirable to have the individual sites contribute more to the overall module score, the p-values for the individual sites can be weighted accordingly. conversely, if the clustering property is more important, the probability of clustering can be weighted more. the most straightforward way to combine the p-values is just to take the product of the individual p-values as the overall probability value and apply a bonferroni correction. the technique we choose to combine the p-values in modstorm is the technique used by bailey and gribskov  <cit> .

scanning for the ifn-β enhancer
the ifn-β enhancer is a classic example of an module with organizational constraints, occurring in the promoter of the ifn-β gene  <cit> . to examine the ability of modstorm to find modules with organization in the human genome, we scanned all intergenic regions in the human genome with a module representing the ifn-β enhancer . scanning for this module using modstorm and a module without any constrained organizational parameters finds nine occurrences of this module genome-wide. by enforcing the organization, only one occurrence is found and it is immediately upstream of the ifn-β gene. the location of this predicted module is shown in figure  <dig>  the p-value for this module site is  <dig> e- <dig>  this module site is also found when searching for the module without defined organizational parameters. however, the module p-value in this case is only  <dig> e- <dig> 

to compare modstorm with other existing module scanning tools, we scanned for the ifn-β module in a sequence set consisting of all large promoters . the modstorm software, with or without organization, scans through all of these sequences and finds the one true occurrence of this module in roughly two minutes and  <dig> seconds on a modern linux workstation. cismodscan takes  <dig> minutes on the same machine to repeat the same task and is not able to find the true module site. sosinsky et al. tested target explorer on the task of finding the ifn-β module. target explorer was used to scan for windows of  <dig> bp within which at least one binding site for c-jun, atf- <dig>  irf, and nf-κb occurred and it was able to find a window where all occurred in the human interferon-beta promoter  <cit> . target explorer does not attempt to assign any statistical significance to module occurrences. aerts et al. also applied the modulescanner algorithm to the problem of finding the ifn-β enhancer. they constructed a module consisting of motifs for nf-κb, irf- <dig> and hmgiy. modulescanner found many occurrences of this module, with the fourth most significant hit being upstream of the human interferon-beta gene. in general, algorithms that just scan for module occurrences will be much faster than any of the algorithms that attempt to cluster together single sites from a library of known matrices. to illustrate this, we tested the comet software for its ability to find the ifn-β enhancer. comet, given the four pfms that make up the ifn-β module as a library, scans for two hours, again on the same machine. while it does find some clusters containing three or four matrices, comet does not find the true site.

implementation of storm and modstorm
the method of using a sequence database to convert between score cutoffs and p-values was implemented in storm, the search tool for occurrences of regulatory motifs. storm searches sequences for sites that match a scoring matrix, and is ideally suited for searching for multiple motifs simultaneously because the sequences are preprocessed as suffix trees  <cit> . once the suffix trees are constructed, scoring matrices are matched along the suffix trees using a branch and bound strategy, making the time to search with each matrix proportional to the width of the matrix, instead of the length of the sequence.

the modstorm software preprocesses sequences into suffix trees in the same manner as storm. when searching for modules without organizational constraints, the motifs making up the module are ranked by information content. the highest information content motif is scanned for first. if occurrences of this motif are found, the remaining motifs are searched for in a window surrounding the first located motif. the motifs are searched for in order of information content. if at any step, the motif being searched for is not found in the window, the search for the remaining factors is abandoned and the scanning for the highest information content motif is resumed.

when searching for modules with organizational constraints, the 5' most motif is scanned for first. if an occurrence of this is detected, a window size defined by the organization of the module is scanned for the next motif in the module and so on. if any one of the motifs is not discovered, the scanning for the 5' most motif is resumed.

discussion
importance of choosing the correct database to build -tables
for p-values to be informative they must be calculated relative to the appropriate sequence database. when searching for sites in  <dig> kb proximal promoters from the rat genome, the most appropriate database to use is the complete set of  <dig> kb rat promoters. when scanning through human intergenic regions that have been masked using repeatmasker  <cit> , the most appropriate background sequence set to use in constructing a -table is the complete set of masked human intergenic regions. one common problem in transcription factor binding site detection is the presence of cpg islands. to address this issue, tables can be constructed for cpg and non-cpg sequence and the appropriate table can be used when scanning in regions where the cpg status is known. in addition to cpg islands, there are numerous features of genomic sequence  that could affect the statistics calculated using -tables. the selection of a proper background set to create -tables when analyzing such regions is imperative to the interpretation of the results. in addition to the software which creates -tables, we provide tables calculated for human, mouse and rat promoters from the cshl mammalian promoter database for three sizes: small , medium  and large  as well as tables constructed from all intergenic regions in human, mouse and rat. it is important to stress the difference between statistical and biological significance of k-mers in genomic sequence. while this method will find k-mers that are statistically significant, wet lab experiments must be performed to determine biological significance.

finding optimal modules with organizational parameters
when scanning for modules with organizational parameters, the current method will not necessarily find the optimal scoring module. a scenario exists where weaker motifs existing in advantageous organization would score higher than stronger motifs in less advantageous organization in the same genomic window. our algorithm is based on finding motifs first and then assessing organization and would thus return the stronger motifs with the weaker organization as the module hit from this region.

modifications of our current algorithm which performs the module search in a more iterative fashion would be better able to deal with the situation of weaker motifs having strong organization. for example, after finding module sites, the threshold scores of the motifs comprising the module could be lowered and the module region could be searched for each motif again. if lower scoring motifs are found, the module could be optimized by its overall significance by considering motif scores and organization.

extension of modstorm to module discovery
the modstorm software could easily be extended to library based module discovery algorithm. in this case, a library of known motifs would be scanned across every window and motif combinations that lead to significant modules would be retained. this is an interesting problem and there are multiple existing software tools that attempt to solve this problem, several of which have been mentioned above. we choose to focus here on the efficient scanning for defined modules as this is an area of research that is lacking.

CONCLUSIONS
we have introduced novel methods to aid in the detection and estimation of statistical significance for both single sites and modules of transcription factor binding sites. our method of using real promoters to estimate statistical parameters provides an intuitive way to interpret the threshold for binding site matches. the techniques introduced to calculate the statistical significance of clusters of transcription factor binding sites allow for the statistical evaluation of putative cis-regulatory modules. the search algorithms and statistical significance calculations implemented in the software tools we provide allow for the scanning of large intergenic sequences for single transcription factor binding sites as well as cis-regulatory modules. these software tools have the potential to greatly aid in the in silico study of transcriptional regulation.

