BACKGROUND
cnv was initially classified as gain or loss of a chromosome segment with a length greater than 1 kb, and then widened to include much smaller events  on accommodating the improved resolution of detection methods . in cancer, cnv is one of the most important somatic aberrations, and has been identified as the driver event in many cancer types  <cit> . the widespread adoption of next-generation sequencing  provides an unprecedented opportunity to systematically screen for somatic cnvs in cancer genomes, and has been emerging as the primary means of interrogating the cnvs in recent investigations  <cit> . accurate detection of cnvs from massive amounts of raw ngs data of the cancer genome requires sophisticated computational algorithms, with read depth, b allele frequency , split reads, and discordant read pairs derived from sequence read mapping as the primary input  <cit> .

a number of computational methods have been developed to identify cnvs using ngs data  <cit> . however, recent evaluations show each algorithm has its own strengths and weaknesses, and none of the cnv calling methods performed well in all situations  <cit> . the concordance of different cnv calling tools is especially low in real applications , suggesting that caution and care are needed to interpret and report the calling results, and additional post-processing might be needed to achieve maximum accuracy.

an ideal cnv report should accurately quantify the copy numbers in all genomic segments and delineate their breakpoints across the whole genome. in cancer study, cnv calling is particularly challenging due to tumor purity, heterogeneity, and aneuploidy . inaccurate segmentation could create false positive segments and miss true breakpoints, which will greatly affect downstream interpretation and application of cnv calls. therefore, a post-processing procedure including manual review and curation of the cnv calling results is often required to reduce incorrect predictions in cancer genome analysis . manual review is a process to identify false segmentation, missing breakpoints, and incorrect copy number status by visually checking relevant information underlying the cnv calling, such as read depth information of both tumor and normal samples, baf of germline heterozygous snvs  in tumor, and signatures of reads and read-pairs  related to breakpoints at a segment boundary. after an error is identified, an edition process needs to be performed to update the cnv boundaries as well as the related quantitative information.

although several cnv detection methods provide certain types of graphical output for inspection, none of them provides an interactive viewer for result review and curation. while existing viewers such as integrative genomics viewer  <cit>  have sophisticated interfaces for interactive visualization, they are not tailored to cnv-specific applications. furthermore, they generally do not provide any functions to facilitate manual curation of cnv calling results. here, we present cnvcurator, a platform-independent visualization and editing tool to facilitate manual inspection and curation of somatic cnv calling. different from other general genomics viewers, cnvcurator incorporates multiple cnv-related information for concurrent, interactive display, as well as a number of practical features allowing user to examine and refine the cnv calls.

implementation
cnvcurator is a java utility designated to provide an interactive platform for conveniently reviewing and curating cnv predictions. there are two major components: 1) segment-central index and display of cnv calls for the purpose of manual review, and 2) editing the problematic cnv segments identified from manual review.

segment-central index and display of cnv calls for manual review
the list of segments obtained from a given somatic cnv calling program will be indexed on the left of the main cnvcurator window. the segments can be generally classified as copy gain, loss or neutral , depending on the program’s threshold for signal difference between tumor and matched normal. we list all segments on the left of the main window so that users can not only review a segment of copy number gain or loss, but also examine whether a segment of copy neutral call might be false negative, or contain sub-segment of copy number gain/loss. for easy navigation, we have added a feature to display the segment of copy loss as blue, copy gain as red, and copy neutral as black.

for a given segment of interest, cnvcurator supports concurrent visualization of diverse cnv-related data types on the right of the main window, which include 1) the ideogram of currently displayed chromosome, 2) the genomic coordinates, 3) the sequencing read depth information for tumor and matched normal samples, 4) the logr ratio derived from read depth data, 5) baf at germline snv positions  <cit> , 6) details of sequencing read alignment for tumor and matched normal samples, and 7) annotations of genomic features. these tracks provide both direct and indirect evidence from multiple angles to help the reviewer make decisions about the confidence of a given cnv call.

a number of navigating functions such as zoom in/out, moving around the genome, displaying detailed read alignment information, specifying alternative threshold for segment indexing, and changing of color scheme, are implemented in cnvcurator to assist cnv manual review and curation.

navigate between segments
cnvcurator loads cnv segments into a panel docked at the left side of the application, and organizes the data into a tree structure with segments from the same chromosomes as leaves under the same node. by clicking any segment, the viewer switches to the corresponding genomic region with extra adjacent context displayed. the fraction of flanking regions can be specified by the user.

display breakpoint windows
real cnv boundaries are often associated with structural variations which can be detected by split reads or discordant read pairs . therefore, the presence of such reads can be used as supporting information to distinguish real cnvs from false calls caused by uneven sequencing read depth. in addition to the traditional alignment tracks which allow zoom-in/out visualization, cnvcurator provides advanced options to display such signatures in a user-friendly way. for example, once a cnv segment is selected, two pop-up windows for the two breakpoints  of the segment will be automatically displayed. users can zoom-in/out the breakpoint pop-up windows, and simultaneously display multiple pop-up windows in adjacent regions to examine alternative breakpoints.

edit the problematic cnv segments identified from manual review
an important and unique feature of cnvcurator is the ability to dynamically refine the results during the manual review process and generate a set of manually curated cnv calls. mis-segmentation is a common problem for cnv detection methods, which will greatly affect downstream interpretation and application of cnv calls. it could be the missing of true breakpoints, which could incorrectly merge two distinct segments into one or miss the genuine segments. it could also be introducing false breakpoints, which could incorrectly separate one segment into two parts, create segments with incorrect boundary, or create entirely false segments. once the segmentation errors are spotted during the manual review, it would be handy to be able to fix them and have the segment list updated. cnvcurator provides several functionalities to assist the manual curation procedure, such as removing a false/spurious call, adding a missed/genuine segment, and correcting the breakpoint  of a segment with incorrect boundary. these can be achieved through merging two adjacent segments and/or splitting a segment. merging adjacent segments is less complex, while splitting a segment requires knowing the exact location of the new breakpoint. users can use cnvcurator to narrow down potential breakpoint location in the current window by identifying the position which minimizes the variations of logr ratio within the two segments. when there are multiple break points in the current window , the user can recursively apply the splitting function within each sub-window  to generate multiple new segments. we will implement the function of simultaneously splitting multiple breakpoints in the future version once we can find a solid statistical model for this problem. the user can adjust the range of the current window and examine supporting features  to refine the searching. the segment texts on the left of the main window will be automatically updated once the segment edition  is performed, and we have provided an “undo” function to these operations in the software. the updated segment list can be saved to a file and reloaded in the segmentation panel. the detailed tutorial to perform cnv editing during manual review process can be found in the project website. it should be noted that the process of merging two adjacent segments and/or splitting a segment with cnvcurator is not automated, and these editing functions are provided to assist in the manual review process.

RESULTS
the inputs for cnvcurator include 1) the cnv calling results in segmented data file format  <cit>  from a chosen somatic cnv caller 2) the read depth file in bigwig format for tumor and matched normal sample, separately, 3) the baf file in bigwig format for tumor sample, and 4) the read alignment file in binary alignment/map  format  <cit>  for tumor and matched normal sample, separately. the detailed format instruction for each required input file is provided in the project website.

we used conserting  <cit>  with default setting to make somatic cnv calls from a dataset of whole-genome sequencing of breast cancer specimens procured in the roswell park cancer institute  , and cnvcurator to review the calling results. all study participants provided consent for using their data and specimen for research purposes and the study was approved by institutional review boards at rpci. the cnvcurator outputs of a cnv call supported by multiple evidences, a missed cnv call, a spurious cnv call, and a cnv call with spurious breakpoint are shown as below. a mini bam file containing all these exemplar regions is available in the cnvcurator package as demo.

an example of cnv call supported by multiple evidences
as shown in fig.  <dig>  this segment of copy number loss is supported by three lines of evidences: 1) decreasing read depth in tumor over normal, as shown in the tracks of read depth and the track of logr ratio of tumor to normal; 2) the corresponding change of b allele frequency  pattern as shown in the baf track; 3) the breakpoints are in the exact position separating the soft-clipped part from the matched part of multiple split reads in the tumor bam, but not in the normal bam.fig.  <dig> an example of cnv call supported by multiple evidences. the interface of cnvcurator shows segment index on the left and various data tracks on the right. from top to bottom, the tracks include tumor read depth , normal read depth , logr ratio of tumor to normal , baf , read alignment for tumor , read alignment for normal , and transcript annotation . the shown region in the main window is base pairs 34766517– <dig> on chromosome  <dig>  the two vertical shading lines  in the main window delimit the boundary of the called cnv segment , with the breakpoint alignments displayed in the two separate pop-up windows. within each pop-up window, the vertical black line delimitates the exact position of the breakpoint, and the red box and the green box display the tumor bam and the norm bam, separately. for the read displaying, split reads are in yellow–gray with the soft-clipped part in yellow and the matching portion in gray, and the others are discordant read pairs 



an example of missed cnv call
the segment shown in fig.  <dig> was called as copy number neutral by conserting. however, upon manual review we found this segment contain a sub-segment of copy number loss, as supported by three lines of evidences: 1) decreasing read depth in tumor over normal, as shown in the tracks of read depth and the track of logr ratio of tumor to normal; 2) the corresponding change of baf pattern as shown in the baf track; 3) as shown in fig.  <dig>  the breakpoints of this sub-segment are in the exact position separating the soft-clipped part from the matched part of multiple split reads in the tumor bam, but not in the normal bam.fig.  <dig> an example of missed cnv call. the shown region in the main window is base pairs 105017997- <dig> on chromosome  <dig>  the two vertical lines  in the main window delimit the boundary of a segment of copy number neutral  called by conserting, with the breakpoint alignments displayed in the two separate pop-up windows. upon manual review we found this segment contain a sub-segment of copy number loss , as supported by three lines of evidences: 1) decreasing read depth in tumor over normal, as shown in the tracks of read depth and the track of logr ratio of tumor to normal; 2) the corresponding change of baf pattern as shown in the baf track; 3) the breakpoints of this sub-segment are in the exact position separating the soft-clipped part from the matched part of multiple split reads in the tumor bam, but not in the normal bam 

fig.  <dig> the breakpoint alignment of the missed cnv call. the shown region in the main window is base pairs 116025000- <dig> on chromosome  <dig>  the two vertical lines  in the main window delimit the boundary of the segment of copy number loss  missed by conserting as described in fig.  <dig>  with the breakpoint alignments displayed in the two separate pop-up windows



an example of spurious cnv call
as shown in fig.  <dig>  this cnv call is spurious as there is a lack of supporting evidences: 1) there is no clear change of read depth in tumor over normal, as shown in the tracks of read depth and the track of logr ratio of tumor to normal; 2) there is no clear change of baf pattern as shown in the baf track; 3) the breakpoint positions are not supported by either split reads or discordant read pairs.fig.  <dig> an example of spurious cnv call. the shown region in the main window is base pairs 12097911– <dig> on chromosome  <dig>  the two vertical lines  in the main window delimit the boundary of the spurious cnv call , with the breakpoint alignments displayed in the two separate pop-up windows



an example of spurious breakpoint and alternative one
as shown in fig.  <dig>  compared with the spurious breakpoint, the alternative breakpoint is supported by two lines of evidences: 1) the alternative breakpoint is more adjacent to the transition point of read depth changes in tumor over normal, as shown in the tracks of read depth and the track of logr ratio of tumor to normal; 2) the alternative breakpoint is in the exact position separating the soft-clipped part from the matched part of multiple split reads in the tumor bam, and is surrounded by multiple discordant read pairs.fig.  <dig> an example of spurious breakpoint and alternative one. the shown region in the main window is base pairs 45948669- <dig> on chromosome  <dig>  the vertical left line  in the main window delimits the spurious breakpoint call , and the vertical right line  is the alternative breakpoint identified through manual review. the read alignments for the spurious breakpoint in the original call and the alternative breakpoint identified through manual review are displayed in the two separate pop-up windows



discussion
there are several notable differences between cnvcurator and existing genomics viewers, which are summarized as follows: first, as segmentation is a central part of somatic cnv calling methods, the index and display of cnv calling results in cnvcurator is segment based; second, as boundary prediction is critical for calling cnv , cnvcurator provides automatic pop-up windows to examine the detailed breakpoint information; third, as manual review is often required to curate the somatic variant calling from tumor genome sequencing data, we have implemented several editing functions in cnvcurator to assist in the process of cnv curations. once the potential segmentation errors are spotted during the manual review, they can be modified through segment splitting/merging functions.

CONCLUSIONS
due to the special characteristics of tumor samples and the extraordinary complexity of tumor genomes, accurate detection of somatic cnvs is still a great challenge for the community. here we describe a user-friendly visualization and editing tool specifically designed to facilitate manual review and curation of cnv segments generated by a chosen somatic cnv caller. the viewer provides important and practical utilities to identify problematic cnv segments through manual review, and refine the segmentation results so that user can generate curated results for further analysis.

availability and requirements
project name: cnvcurator

project home page:http://www.acsu.buffalo.edu/~lm69/cnvcurator

operating system: windows, unix-like 

programming language: java

other requirements: java   <dig>  or higher

license: gnu lgpl

any restrictions to use by non-academics: none

competing interests

the authors declare that they have no competing interests.

authors’ contributions

jw and sl conceived of the project. lm, lw, jw and sl designed the software. lm and mq implemented the software. bl and qh tested the software. lm, bl, jw and sl drafted the manuscript. mq and lw assisted in preparing the manuscript. all authors read and approved the final manuscript.

