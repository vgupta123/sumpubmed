BACKGROUND
gene ontology   <cit>  annotation, which describes the function of genes and gene products across species, has recently been utilized to predict protein subcellular and subnuclear localization. the prediction of protein localization is important for elucidating protein functions involved in various cellular processes. additionally, the accomplishment of the various genome sequencing projects causes the accumulation of massive amount of gene sequence information. for example, the percentage of large-scale eukaryotic proteins with subcellular locations annotated in the swiss-prot database increased rapidly from  <dig> %   <cit>  to  <dig> %   <cit> . meanwhile, the percentage of proteins with subcellular locations annotated in the go database increased from  <dig> %  <cit>  to  <dig> %  <cit> . the growth of the go database in size and popularity increases the effectiveness of go-based features.

some existing computation methods in literature for predicting protein localization are described below according to the used classifiers and features.

a) mining informative features. the prediction methods in this group focus on mining informative features consisting of go terms  <cit> , sorting signals  <cit> , amino acid composition   <cit> , k-peptide encoding vector  <cit> , physicochemical properties of amino acids  <cit> , and fusing aac and physicochemical properties  <cit> .

b) designing efficient classifiers. most of the following prediction methods use effective classifiers based on support vector machine   <cit>  or the k nearest neighbour  classifiers  <cit> .

c) integrating informative features with efficient classifier. methods in this group include pslip  <cit> , proloc  <cit> , euk-oet-ploc  <cit>  and hum-ploc  <cit> . the pslip system utilizes five top-rank features of physicochemical properties according to the prediction accuracy of svm using a single feature  <cit> . the proloc system uses svm with automatic selection from physicochemical properties to predict protein subnuclear localization  <cit> . the two ensemble classifiers euk-oet-ploc  <cit>  and hum-ploc  <cit>  fuse many basic individual classifiers operated by the engine of k-nn rules, where protein sequences are represented by hybridizing the go annotation and amphiphilic pseudo amino acid  composition.

additionally, these two efficient go-based systems euk-oet-ploc  <cit>  and hum-ploc  <cit>  predict subcellular localization of proteins using their known accession numbers. however, they cannot work for novel proteins without known accession numbers. the go-aa method  <cit> , which uses go terms of homologies retrieved by blast to assess protein similarity, can deal with novel proteins without known accession numbers for subnuclear localization prediction. besides, some svm-based methods using only the features derived from input sequences, such as protlock with aac  <cit> , ploc with aac and acid pairs  <cit> , and hslpred with aac and dipeptide composition  <cit> , predict subcellular localization inaccurately  <cit> . therefore, this study would develop an accurate svm-based method for predicting subcellular localization of novel proteins by using input sequences with blast.

the gene ontology provided by the go consortium  <cit>  has quickly grown in size and popularity. the newest version  of go  <cit>  contained  <dig>  terms in the three branches, molecular function, biological process and cellular component. the terms and relationships among them are represented by a directed acyclic graph in which vertices represent the go terms, and edges represent the relationships among these terms. genes can be annotated with go terms creating gene associations that can be used for whole genome analyses  <cit> .

go annotation has been successfully used in various sequence-based applications, which can be classified into two groups. 1) the first group uses the go terms and their corresponding structure information of go graph, such as grouping go terms to improve the assessment of gene set enrichment  <cit> ; using go with probabilistic chain graphs for protein classification  <cit> , and prediction of subnuclear localization  <cit> . 2) the second group uses go terms only without structure information, such as predicting transcription factor dna binding preference  <cit>  and various predictions of subcellular and subnuclear localization  <cit> . in the second group, protein sequences are often represented as high dimensional vectors of n binary features, where n is the total number of terms in the complete annotation set   <cit> . this representation is valuable in well-known vector space clustering algorithms such as k-nn  <cit>  and fuzzy k-nn  <cit> . however, because n is often large, and each gene product is generally annotated by few go terms, the vectors became long and sparse, making the clustering rather problematic  <cit> .

this study proposes an efficient method, named gomining, based on an intelligent genetic algorithm   <cit>  incorporating an svm classifier to simultaneously identify a small number m out of a large number n of go terms as input features, where m <<n. some go annotations corresponding to subcellular compartments are called essential go terms for subcellular localization prediction, such as go: <dig> , go: <dig>  and go: <dig> , shown in table  <dig>  these essential go terms are regarded as domain knowledge to be included in the feature set of m informative go terms for subcellular localization prediction. a prediction method proloc-go based on gomining was implemented using the feature set of informative go terms. this method performed well in predicting protein subcellular localization from input sequences only.

RESULTS
data sets
two existing data sets scl <dig>  <cit>  and scl <dig>  <cit>  obtained from uniprotkb/swiss-prot database  <cit>  were used to evaluate the proposed method proloc-go. the scl <dig> and scl <dig> have  <dig> human proteins localized in  <dig> human subcellular compartments and  <dig> eukaryotic proteins in  <dig> subcellular compartments, respectively. the two data sets were operated by a culling program  <cit>  so that those sequences had < 25% sequence identity.

the proteins in scl <dig> were screened strictly using the following rules: 1) only those sequences annotated with "human" in the id  field were collected; 2) sequences annotated with ambiguous or uncertain terms, such as "potential", "probable", "probably", "maybe", or "by similarity", were excluded; 3) sequences annotated by two or more locations were excluded, and 4) sequences with less than  <dig> amino acid residues were removed  <cit> . the data set scl <dig> was divided into two parts, scl12l and scl12t, with  <dig> and  <dig> proteins, respectively. the scl12l set was used for training and the scl12t was used for independent testing, as shown in table  <dig> <cit> .

the proteins of scl <dig> were screened according to four criteria. the first criterion is to exclude sequences annotated with "prokaryotic", because this study focused only on eukaryotic proteins. the other three criteria were the same as criteria 2â€“ <dig> for scl <dig> above. table  <dig> shows the numbers of proteins within each compartment, where the scl <dig> consists of two parts, scl16l for training and scl16t for independent testing. the sequences in the training and test data sets were obtained from the web servers of euk-oet-ploc  <cit>  and hum-ploc  <cit> .

go annotation
this study applied the gene ontology annotation  database  <cit> , which includes go annotations for non-redundant proteins from many species in the uniprotkb/swiss-prot database  <cit> . the goa database was downloaded directly from  <cit>  . the accession numbers of proteins are required for querying the goa database to obtain go terms. blast  <cit>  was used to obtain a homology with a known accession number to the protein for retrieving the go terms. the corresponding accession numbers of all protein sequences in scl <dig> and scl <dig> were obtained by using blast with h =  <dig> and e = 10- <dig> 

to know the prediction performance according to only the essential go terms annotated, we calculated the numbers of sequences annotated by g essential go terms. table  <dig> shows that  <dig> out of  <dig>  sequences are annotated by only one essential go term  for scl12l, where  <dig> sequences are correctly annotated and  <dig> sequences are incorrectly annotated. the other  <dig> sequences annotated by zero  or more than one  essential go term can not be effectively predicted. table  <dig> lists the numbers of sequences which are correctly annotated by only one essential go term for every compartment. the two go terms, go: <dig>  and go: <dig> , made a great contribution to the prediction accuracy of  <dig> % , which correctly annotate a large number of sequences,  <dig> and  <dig>  respectively.

as for scl16l, the number of sequences annotated by only one essential go term is  <dig> out of  <dig> . table  <dig> lists the numbers of sequences which are correctly annotated by only one essential go term for every compartment. only  <dig> %  of the sequences with known accession numbers can be correctly predicted by using only the annotation of essential go terms. according to table  <dig>  the three essential go terms, go: <dig> , go: <dig>  and go: <dig> , made a great contribution to prediction accuracy.

the analytic results reveal that it is not sufficient to use only essential go terms for accurately predicting protein subcellular localization. however, the essential go terms play an important role in designing go-based prediction methods.

selected informative go terms
selecting a set of m informative go terms out of n candidate go terms is a combinatorial optimization problem c, which can be solved by using the intelligent genetic algorithm with an inheritance mechanism   <cit> . iga can efficiently search for the solution sr+ <dig> to c by inheriting a good solution sr to c. this study proposes an efficient algorithm based on iga, called gomining, to identify a small set of m informative go terms including the essential go terms as features to svm. the gomining algorithm incorporates libsvm  <cit>  using series of binary classifiers. gomining aims to maximize the training accuracy of prediction using 10-fold cross-validation  when identifying the m informative go terms.

the svm classifier based on the selected informative go terms as features is called svm-igo. to evaluate a candidate set of r informative go terms accompanied with the svm parameters, the prediction accuracy of 10-cv serves as a fitness function of iga. figure  <dig> shows the results of svm-igo from r =  <dig>   <dig> ...,  <dig>  table  <dig> lists the m =  <dig> informative go terms for scl12l obtained from the highest accuracy of  <dig> % , where the svm parameters  = . table  <dig> lists the m =  <dig> informative go terms for scl16l, where the highest accuracy was  <dig> %, and  = .

the orthogonal experimental design with orthogonal array and factor analysis used in iga is an efficient method for simultaneously examining the individual effect of several factors on the evaluative function  <cit> . the factors are the parameters  that manipulate the evaluation function, and a setting of a parameter is regarded as a level of the factor. in this study, the two levels of one factor are the inclusion and exclusion of the ith go term in the feature selection using iga. the factor analysis can quantify the effects of individual factors on the evaluation function, rank the most effective factors and determine the best level for each factor to optimize the evaluation function. the most effective factor has the largest main effect difference . tables  <dig> and  <dig> show that the essential go term go: <dig>  having the largest values of med is the most effective feature of discrimination. the only essential go term go: <dig>  belongs to biologic process branch and the other essential go terms belong to cellular component branch. the abbreviations m, b and c represent the three branches molecular function, biological process, and cellular component, respectively.

evaluation of feature selection
svm-igo was implemented by using the m informative go terms and the svm classifier using  =  and  =  for scl12l and scl16l, respectively. to evaluate the effectiveness of svm-igo, four additional classifiers were implemented for comparison. three classifiers svm-go, k-nn-go and fuzzy k-nn-go in order based on svm, k-nn and fuzzy k-nn were implemented by using all the n go terms as features without go term selection. the classifier svm-rbs used svm with a subset of n go terms selected by the rank-based selection  method  <cit> . the best values of parameters c and Î³ determined using a step-wise approach were employed to the svm-based methods svm-go and svm-rbs, where Î³ âˆˆ {2- <dig>  2- <dig> ..., 28} and c âˆˆ {2- <dig>  2- <dig> ..., 28}. the best values  =  and  were applied to svm-go for scl12l and scl16l, respectively. as for svm-rbs,  =  and  were used for scl12l and scl16l, respectively. the methods section describes svm-rbs, k-nn-go and fuzzy k-nn-go in detail. table  <dig> lists all prediction accuracies using 10-cv for both data sets scl12l and scl16l.

the highest accuracies of svm-rbs are  <dig> % and  <dig> % using  <dig> and  <dig> selected go terms for scl12l and scl16l, respectively, shown in fig.  <dig>  table  <dig> shows that the three svm-based classifiers , with accuracies >80%, were better than the two k-nn based classifiers , with accuracies <75%, for both data sets. svm-igo had the highest accuracies  <dig> % and  <dig> % for scl12l and scl16l, respectively. the go term selection method based on gomining was more effective than rbs and the method without selection of go terms. furthermore, svm uses the selected go terms as features, making it better than the k-nn classifier.

performance comparison
the proposed proloc-go method predicts the subcellular localization of an input sequence using either svm-igo or svm-go, depending on its annotation on the informative go terms . tables  <dig>   <dig>   <dig>   <dig> list the results of proloc-go using scl <dig> and scl <dig>  some existing aac-based prediction methods, such as protlock  <cit> , least euclidean distance  <cit> , ploc  <cit>  and hslpred  <cit> , use only the query sequence as input data for their classifiers. hum-ploc  <cit>  and euk-oet-ploc  <cit>  use both the sequence and its accession number as input data. for comparison with these predictors, the method proloc-go was performed using the two kinds of input data separately. the first test used only the sequence and used blast to obtain annotated go terms. the second test used the known accession number of proteins directly. for the accuracy on both scl12l and scl16l, proloc-go used leave-one-out cross-validation  for comparison with the other methods .

the test accuracies for proloc-go performed on the human protein data set scl12l and scl12t were  <dig> % and  <dig> %, respectively, where m =  <dig>  and  =  for svm-igo and svm-go. these results were much better than those  of the four sequence-based prediction methods  <cit>  using only input sequences, shown in table  <dig>  ploc  <cit>  had the highest test accuracy of  <dig> % among the four aac-based methods.

the matthews correlation coefficient   <cit>  values are usually employed while evaluating the performance on unbalanced datasets. in addition to the overall accuracy, the mcc values were also recorded due to the unbalance of numbers of proteins localized in the compartments, such as  <dig> of nucleus vs.  <dig> of microsome . the mcc is defined as follows  <cit> :

  mccc=pcscâˆ’ucoc,c= <dig> ,â€¦,nc, 

where pc is the number of correctly predicted proteins of the location c, sc is the number of correctly predicted proteins not in the location c, uc is the number of under-predicted proteins, oc is the number of over-predicted proteins, and nc is the number of locations. the test mcc performances of proloc-go were  <dig>  and  <dig>  for scl12l and scl12t, respectively. table  <dig> presents the detailed results for individual compartments. the results of the five sequence-based methods reveal that the set of informative go terms is more useful for protein subcellular localization than the aac-based features.

performance of using known accession numbers
the accession number of each protein sequence in scl <dig> and scl <dig> was available in querying the goa database. for comparison with the methods  <cit>  based on the proteins with known accession numbers, proloc-go using the known accession numbers of proteins as input data obtained test accuracies of  <dig> % and  <dig> %  performed on scl12l and scl12t, respectively, where m =  <dig>   =  for svm-igo and  =  for svm-go. hum-ploc  <cit>  using hybridization of go terms and pse-aa composition obtained training and test accuracies of  <dig> % and  <dig> % for scl12l and scl12t, respectively. the performance of proloc-go using sequences or accession numbers as the input data was better than that of hum-ploc  <cit>  using the ensemble classifiers with features of both sequence and accession number.

tables  <dig> and  <dig> show the performance results of proloc-go and euk-oet-ploc  <cit>  using scl <dig>  proloc-go using input sequences yielded test accuracies  <dig> %  and  <dig> %  for scl16l and scl16t, respectively, where m =  <dig>   =  for svm-igo, and  =  for svm-go. proloc-go is significantly better than all the aac-based methods with test accuracies smaller than 35%. proloc-go yields the test accuracies  <dig> % and  <dig> %  for scl16l and scl16t, respectively, using the known accession numbers of proteins, where m =  <dig>   =  for svm-igo and  =  for svm-go. euk-oet-ploc  <cit>  using the ensemble classifiers with features of both sequence and accession number obtains training and test accuracies of  <dig> % and  <dig> %, respectively. proloc-go performed better than euk-oet-ploc on scl <dig> using either sequences or accession numbers as the input data  <cit> .

analysis of informative go terms
the gomining method identifies a feature set of m effective go terms, called informative go terms, to design an accurate svm-based prediction method. table  <dig> shows the distribution of the m informative go terms in the go graph. for scl12l with m =  <dig>  gomining selected  <dig> essential go terms and  <dig> instructive go terms. the  <dig> instructive go terms consist of  <dig> go terms from the molecular function branch,  <dig> terms from the biological process branch, and  <dig> terms from the cellular component branch, denoted as  <dig>   <dig> and  <dig>  respectively. analytical results reveal that all the three branches contain instructive go terms.

due to the high correlation among go terms in the go graph, the feature selection of svm should consider simultaneously a set of informative go terms, rather than individual go terms. since the essential go terms are always included, gomining benefits from a confined search space of candidate instructive go terms. considering the position relationships between instructive and essential go terms in the go graph, instructive go terms belonged to one of the three classes:  offspring but not ancestor of some essential go term;  between two essential go terms, and  not offspring of any essential go term. of the  <dig> instructive go terms,  <dig>   <dig> and  <dig> go terms belonged to the classes ,  and , respectively. the  <dig> go terms consist of  <dig>   <dig> and  <dig>  the go terms near the root of the go graphs are considered to be more generic while terms near the leaves are more specific  <cit> . of the instructive go terms,  <dig> %  were not offspring of any essential go term. these analytical results reveal that the essential go terms are informative enough in predicting subcellular localization, and are effective in confining the space of searching instructive go terms. the other six instructive go terms from the cellular component branch have more specific functions than the essential go terms in discrimination of the subcellular localization.

figures  <dig>   <dig>   <dig> illustrate some of the instructive go terms belonging to the three classes. three instructive go terms were found to belong to class , namely scl12l: go: <dig> , go: <dig>  and go: <dig> , according to fig.  <dig>  the two terms belonging to class , namely go: <dig>  and go: <dig> , were found between the essential go terms go: <dig>  and go: <dig> , as shown in fig.  <dig>  according to fig.  <dig>  five instructive go terms belonging to the class  were not offspring of essential go terms, go: <dig> , go: <dig> , go: <dig> , go: <dig>  and go: <dig> .

the m =  <dig> informative go terms for scl16l comprises  <dig> essential go terms and  <dig> instructive go terms. the  <dig> instructive go terms consisted of  <dig>   <dig> and  <dig>  the numbers of instructive go terms coming from each branch were not significantly different. however, the numbers of instructive go terms belonging to the three classes ,  and  are  <dig>   <dig> and  <dig>  respectively, which are very different. 80%  of the instructive go terms were not offspring of any essential go term. the  <dig> instructive go terms belonging to the class  had  <dig>   <dig> and  <dig> terms, respectively, as shown in figs.  <dig>   <dig> and  <dig>  class  has five go terms with a dot-pattern box: go: <dig> , go: <dig> , go: <dig> , go: <dig>  and go: <dig> ), as revealed by fig.  <dig> 

the statistical results of instructive go terms distributed in the three classes for both scl12l and scl16l reveal that the inclusion of essential go terms can be regarded as using domain knowledge for gomining to mine a feature set of informative go terms. the heuristic approach  of gomining is efficient when the go database grows fast. therefore, gomining can be easily applied to other applications of sequence-based predictions using svm with the features of informative go terms.

discussion
the go database has grown in size recently, increasing the effectiveness of go-based features. meanwhile, the percentage of proteins with subcellular locations annotated in the go database increased from  <dig> %  <cit>  to  <dig> %  <cit>  fast. it is indicated that there is a linkage in the go annotation process between molecular function annotation and subcellular localization annotation  <cit> . therefore, the go-based prediction method for protein subcellular localization is increasingly efficient. because the accession number of proteins is necessary for retrieving go terms from go databases, existing efficient go-based systems euk-oet-ploc  <cit>  and hum-ploc  <cit>  directly utilize the accession numbers of proteins and a large number n of go terms annotated in a complete set where n =  <dig> for scl12l  <cit>  and n =  <dig> for scl16l  <cit> .

to predict subcellular localizations for novel proteins, proloc-go uses a good homology, rather than the query protein itself, to retrieve annotated go terms using blast. to use go term features effectively, proloc-go uses only a homology with annotated go terms to reduce n. thus, n =  <dig> for scl12l and n =  <dig> for scl16l. furthermore, a small set of m informative go terms is selected simultaneously by gomining. gomining can consider internal relevant-feature correlation, instead of individual features by using an efficient global optimization method. the distribution analysis of informative go terms in the go graph is consistent with the properties of go annotation. additionally, proloc-go using input sequences is slightly worse than using the accession numbers of proteins, with accuracies of  <dig> % vs.  <dig> % for scl12t, and  <dig> % vs.  <dig> % for scl16t, as shown in tables  <dig> and  <dig> 

CONCLUSIONS
computational prediction methods from primary protein sequences are fairly economical in terms of identifying large-scale eukaryotic proteins with unknown functions. the go annotation, which describes the function of genes and gene products across species, has been used to improve the prediction of protein subcellular localization. the accession numbers of proteins are necessary to query the goa database to obtain go terms. since novel proteins have no known accession numbers, blast was used to obtain homologies with known accession numbers to the proteins for the retrieval of go terms.

go annotation has grown in size and popularity. however, few studies have explored informative go terms from the over  <dig>  annotations available at present for sequence-based prediction problems. this study proposes a genetic algorithm based method, gomining, which combines svm to simultaneously identify a small number m out of the n go terms as features to svm, where m <<n. the m go terms include the essential go terms annotating subcellular compartments such as go: <dig> , go: <dig>  and go: <dig> . proloc-go was evaluated using svm with the go-based features from two kinds of input data, sequence and known accession numbers of proteins.

proloc-go yields test accuracies of  <dig> % and  <dig> % from scl <dig> and scl <dig>  respectively, when using only input sequences. these results are significantly superior to those of the other svm-based methods, which have accuracies <35% using aac with acid pairs, and using aac with dipedtide composition. proloc-go using known accession numbers of proteins has accuracies  <dig> % and  <dig> % for scl <dig> and scl <dig>  which is also slightly better than hum-ploc and euk-oet-ploc, which have  <dig> % and  <dig> %, respectively.

analysis of m informative go terms in the go graph reveals that gomining can consider internal relevant-feature correlation, rather than individual features, by using an efficient global optimization method. gomining can serve as an efficient tool for mining informative go terms for various sequence-based predictions of proteins, especially when the go database grows fast. the prediction system using proloc-go with protein sequence as input data for protein subcellular localization has been implemented .

