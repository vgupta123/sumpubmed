BACKGROUND
phylogenetic hypotheses are often supported by the computation of parsimonious scenarios of genome-wide rearrangement operations. especially mitochondrial gene orders became a very fruitful source for such investigations as they are known for more than  <dig> metazoan species. furthermore they exhibit a small and usually preserved gene set  <cit> . therefore, we focus in this paper on the case of sets gene orders that all have the same set of genes and do not have duplicated genes. it is assumed that several types of rearrangement operations have shaped the gene orders observed today. inversions and transpositions are well documented  <cit> . also inverse transposition, i.e., a transposition where the transposed part is inverted, have been found several times  <cit> ,  <cit> . recent studies add tandem duplication random loss  to the set of rearrangement operations that are relevant for mitochondrial gene order evolution  <cit> . a tdrl consists of a tandem duplication, i.e., a duplication of a continuous segment of genes such that the original segment and its copy are consecutive, followed by the loss of one copy of each of the redundant genes. the reconstruction of the evolution of gene orders for only three given gene orders is in almost all studied cases a np-hard problem  <cit> , e.g., even when only inversions are considered. this complicates studies considering combinations of different types of rearrangement operations in event based reconstruction methods, e.g.,  <cit> . inversions and transpositions are the most often considered genomic rearrangement operation for phylogenetic reconstruction, e.g.,  <cit> . but ideally, all four relevant types of rearrangement operations should be regarded.

it can be found that some gene clusters are preserved during gene order evolution – be it for functional reasons or just by chance. hence, several studies have investigated gene order rearrangement problems under the constraint that gene clusters are preserved. typically, gene clusters are defined by a formal model in these studies. for gene orders without deleted or duplicated elements gene clusters are most often defined as common intervals <cit> , i.e., a set of genes that occur continuously in each of the considered gene orders. the strong interval tree  is a data structure to efficiently represent the set of all common intervals of two or more permutations. based on sits an efficient exact algorithm for computing parsimonious inversion only preserving rearrangement scenarios for two given gene orders is presented in  <cit> . an extension of the sit data structure is proposed in  <cit>  for computing shortest preserving inversion scenarios for more than two gene orders. an interesting approach to identify inversions and transpositions for pairwise gene order comparisons is to search for certain templates within the sit  <cit> . in  <cit>  the algorithm crex  is presented which heuristically infers a preserving rearrangement scenario for two gene orders by considering all four mentioned kinds of rearrangement operations. one principle of crex is to identify different patterns that correspond to the different types of rearrangement operations in the sit data structure. extensions to crex and the treerex approach for automatically computing the rearrangements in a given phylogenetic tree are presented in  <cit> . in this paper we do an extensive study of crex on simulated data. even though crex has already successfully been applied in several studies to biological data, e.g.,  <cit>  , such a systematic study is missing so far. we also propose a method for applying crex to a large number of mitochondrial gene orders to identify likely rearrangement scenarios. the reconstructions that are obtained with the new method are stored in a so called rearrangement inventory graph . the reconstructions in the ri-graph are evaluated with a comprehensive comparison to reconstructions published in the literature.

materials and methods
gene order comparison with crex in a nutshell
in the following we shortly introduce crex and the sit data structure. for more details see  <cit> . crex compares two gene orders without duplicated or deleted genes which can be regarded as signed permutations, i.e., permutations with a sign  added to each element representing the orientation of the gene. a set of  elements appearing consecutively in two gene orders is a common interval. note that for the definition of a common interval the orientation and order of its elements can differ in the two permutations. two common intervals overlap if they have a nonempty intersection and none is included in the other. a common interval is strong if it does not overlap any other common interval. the strong interval tree  is the graph where each node corresponds to a strong common interval and is connected to the node representing the smallest superset of genes. a node is linear increasing  if the strong common intervals corresponding to its children are in the same  order in the two compared permutations and prime otherwise. each node of the sit has a sign. the sign of a leaf node is given by the relative orientation of the corresponding element in the permutations. the sign of a linear node is + if it is linear increasing and – if it is linear decreasing. a prime node inherits the sign of a linear parent node and is + if no such node exists.

consider the signed permutation π =  and the identity permutation. in addition to the common interval { <dig> …, 10} and the singletons the two permutations have the following seven common intervals: { <dig>  3} { <dig>   <dig>   <dig>  5} { <dig>   <dig>   <dig>   <dig>  5}, { <dig>   <dig>  5}, { <dig>  5} { <dig>   <dig>   <dig>  10} { <dig>   <dig>   <dig>   <dig>  10}. the common intervals { <dig>  3} and { <dig>   <dig>  5} are not strong because they overlap. the remaining common intervals are strong and define the structure of the sit as shown in figure  <dig>  the node corresponding to the strong common interval { <dig>   <dig>   <dig>  5} is decreasing because the child strong common intervals occur in the opposite order in π, i.e. in π they are in the order { <dig>  5}, {3}, {2} whereas they are in the order {2}, {3}, { <dig>  5} in the identity. crex is based on the observation that the application of a single rearrangement operation leads to a pattern in the sit which is specific for the type of the rearrangement, e.g., a transposition leads to a linear node with two linear children of opposite sign and a tdrl always leads to a prime node . crex reconstructs a short rearrangement scenario by identifying these patterns in the sit in a specific order. special care is taken for prime nodes with inverted elements since these cannot be explained by tdrls only. crex also includes the possibility for alternative scenarios, e.g., three inversions as an alternative for a transposition or several possible scenarios for prime nodes. algorithm crex, a tutorial, and several detailed examples are available online.

crex represents rearrangement scenarios from π to σ in a tree data structure, defined recursively as follows. a scenario is either an ordered list of scenarios, a set of alternative scenarios, a set of pairwise commuting scenarios, or a single atomic rearrangement operation. for a rearrangement scenario from π to σ it holds that each linear lists of rearrangements generated from a traversal of the rearrangement tree where the scenarios of an ordered list are applied in the given order, the scenarios of a commuting scenario are applied in any order, only one out of alternative scenarios transforms π into σ.

for the permutation above crex matches first the transposition pattern on the root node of the sit and reports the transposition of the sets { <dig> …, 5} and { <dig> …, 10}. next crex adds the inverse transposition of the elements { <dig>  3} on the other side of { <dig>  5} to the rearrangement scenario since the corresponding pattern matches that for the node { <dig>   <dig>   <dig>  5}. the last pattern matching on a linear node is the inversion pattern of node {5}. finally, the difference in the elements corresponding to the prime node add a tdrl that duplicates the elements { <dig>   <dig>   <dig>  10} and keeps the elements { <dig>  8}  in the first  copy.

mitochondrial gene arrangement data set
the data set used in this paper is based on the  <dig>  <dig> complete metazoan mitochondrial genomes in ncbi refseq  <cit> , release  <dig> . since there exist several misannotations in the ncbi refseq data the trna annotation has been postprocessed with arwen  <cit>  and trna-scan se  <cit>  . the gene arrangement data set consists of  <dig> unique gene orders having the standard set of  <dig> genes common to most metazoan mitochondrial genomes  <cit>  representing  <dig>  <dig> gene orders in total. the relatively small number of unique gene orders is mainly due to the fact that for most chordata species where the gene order is known orders it is the same. but also for species in some other phyla several species have the same gene order .

simulated gene arrangement data sets
each simulated rearrangement scenario is constructed by applying r ∈  random rearrangements starting at the identity permutation of length n =  <dig>  a given probability vector p =  specifies the probabilities that a rearrangement is an inversion , a transposition , an inverse transposition , or a tdrl . random rearrangements, i.e., inversions, transpositions, or inverse transpositions, are chosen with equal probability from the set of all possible respective operations. a random tdrl is generated by choosing uniformly at random the duplicated interval and for each element if it is deleted in the first or second copy. we have considered six rearrangement models:  inversions only,  transpositions only,  inverse transpositions only,  tdrls only,  inversions and transpositions both with the same probability, i.e., p = ,  all four types of rearrangement operations with p = . furthermore, data sets have been constructed where each rearrangement operation affects the order of at most w ∈ { <dig>   <dig> …, 100} genes. for each combination of rearrangement model, r, and w,  <dig> data sets have been simulated, i.e., altogether  <dig>  <dig> 

each pair of the identity permutation with one of the generated permutations has been used as input for crex. let s be the set of rearrangement operations in the simulated scenario and c the rearrangement scenario computed by crex. the quality of the crex scenario is measured by precision = /|c| and recall = /|s| for |s| ≠  <dig> ∧ |c| ≠  <dig> . the “intersection” operation between s and c is computed with a corresponding function provided by treerex  <cit>  which determines the longest common suffix between s and c or more precisely between any pair of the linear lists of rearrangements generated from a traversal of the tree representations of s and c.

building the rearrangement inventory graph
let Π = {π <dig> …, πk} be a set of gene orders. a directed graph g =  — called the rearrangement inventory graph — is defined on the set of nodes Π where the edges represent rearrangement scenarios reconstructed by crex. recall, the aim is to represent only those rearrangement scenarios that can be considered as likely candidates for rearrangements that might have happened during evolution. therefore, edge set el contains only edges between two permutations πi , πj for which the corresponding sit has only linear nodes. furthermore, for at least one of the two permutations, e.g., πi , it must hold that there does not exist a third permutation in Π which has a smaller distance to πi than the distance between πi and πj. the distance d between two permutations is defined as the length of the corresponding crex scenarios . more exactly, two nodes πi, πj ∈ v, with  <dig> ≤ i ≠ j ≤ k are connected by an edge in el if, i) the sit for {πi, πj} is linear, and ii) either there is no gene order πh ∈ Π, with i ≠ h ≠ j such that the sit for {πh, πj} is linear and d  <d or the analogous statement holds for j instead of i. observe, that the scenarios corresponding to edges in el do not contain any tdrl operation. hence, edge set ep is introduced to consider likely rearrangement scenarios containing a tdrl operation. since tdrl operations are considered as rare, scenarios that have more than one tdrl operation are not considered for introducing an edge to ep. formally, there exists an edge  ∈ ep if, i) the rearrangement scenario from πi to πj includes exactly one tdrl, ii) πi and πj are in different connected components of the graph , and iii) . the second condition states that a scenario with tdrl operations is not considered when the corresponding permutations are connected in , i.e., they are already related to each other with a likely scenarios not requiring tdrl operations.

representation of the rearrangement inventory graph
the nodes of the ri-graph are shown as rectangles labelled with the accession number of one representative species and the number of species with the same gene order in parentheses if larger than one. edges are coloured with respect to the represented rearrangement scenario such that the fractions of tdrls, inversions, and transpositions correspond, respectively, to the intensity of the colours red, green, and blue. for the purpose of colouring an inverse transposition is counted as an inversion plus a transposition. the direction of a scenario that contains a tdrl is indicated by a directed edge. each edge is labelled with the corresponding unique identifiers of the rearrangements that are predicted by crex. an index of the identifiers of all predicted rearrangements is given in additional file  <dig>  the layout of the graph was done manually starting from an initial layout computed with graphviz .

RESULTS
empirical analysis of crex reconstructions
an empirical analysis of the quality of the reconstructions of crex on the simulated data is presented in the following for the different models of genome rearrangement. clearly, it can not be expected that crex is able to reconstruct the simulated scenarios for a large number r of rearrangement operations. the reason is that there exist too many possible rearrangements and also the shortest possible rearrangement scenario between two simulated permutations is not necessarily the simulated one. the hope is, that for a small number of rearrangement operations crex can deliver good reconstructions. in that case such reconstructions might be useful as a basis for the analysis of the phylogeny even for a large number species  because crex is also very fast. for the  <dig>  <dig> reconstructions crex needed  <dig> min  <dig> s on a laptop with a  <dig>  ghz processor, i.e., one reconstruction in ≈ 10– <dig> s on average.

reconstruction quality
boxplots of the precision of the crex reconstructions for different numbers of rearrangement operations r are shown in figure  <dig> . the corresponding plots for the recall values are omitted , because they are very similar to the corresponding precision values, i.e., the average precision and recall values differ by ≤  <dig> .

it can be seen that for r =  <dig> the correct scenario was always found by crex. for r =  <dig> and i  the majority of the rearrangement scenarios. i.e.,  <dig> , has been reconstructed correctly. for the rearrangement models it and all the correct scenario has been reconstructed for considerably more than one third of the data sets . a correct scenario has been reconstructed for less than one third  of the data sets for t and it. for a large number of rearrangements  a reconstruction with a recall of one could not be done for a single data set. but often at least a part of the rearrangement scenario could still be reconstructed, e.g., for at least  <dig> of the data sets generated with i for r ≤  <dig> and the majority of the it  data sets for r <  <dig> .

thus, for small values of r the quality of the reconstructed scenarios is good, but decreases for larger values of r. crex is able to reconstruct at least a part of the simulated rearrangement scenario for many data sets with medium values of r. this is an interesting observation, because a partially correct reconstruction might suffice for the correct operation of treerex  <cit>  which is based on determining common suffixes in rearrangement scenarios leading to a permutation which has been determined with crex. the results are apparently better when no transpositions or inverse transpositions are applied. although these first results for simulated data seem not to be very promising, additional biologically relevant criteria and constraints to the rearrangement models can be identified where crex’ performance is better.

sensitivity to strong interval tree structure
in this subsection it is shown that the reconstruction quality depends to a large extent on the properties of the sit corresponding to the pair of permutations analysed by crex. figure  <dig>  shows the precision for the simulated data sets in relation to the number of prime nodes in the corresponding sits. plots for recall are given in additional file  <dig> .

the results for the tdrl model differ from the results of the other rearrangement models in an increasing reconstruction quality for larger values of p. this is discussed first. the cases with p =  <dig> generated with tdrls correspond to one of the rare cases  where the random tdrl has the same effect as a transposition. if the random tdrls do not overlap they create separate prime nodes, i.e., k = p . such cases can easily be reconstructed by crex. this is confirmed by the observation that for p = k the precision and recall values have been  <dig> in all but two cases for k =  <dig>  furthermore, the fraction of data sets with k = p increases with p, from  <dig>  for p =  <dig> to  <dig>  for p =  <dig>  this explains the difference of the results for large p for the tdrl model. the reconstructed scenarios of crex are mostly correct when the sit has no prime node. this holds for all rearrangement models. but, when the sit has a prime node, a large fraction of the reconstructed rearrangements is not correct.

there are  <dig> random data with prime node free sit. for  <dig>  of these data sets the crex reconstruction is correct and at least partially correct for  <dig>  <dig> . for the remaining  <dig>  <dig> data sets, which have a prime node in the sit, the crex reconstruction is correct only  <dig>  times and at least a part of the reconstructed scenario was correct for only  <dig>  <dig>  of these data sets. for r =  <dig> the sit is, except for tdrl, always prime node free. but also for the data sets with r >  <dig> the absence of prime nodes in the sit is still a good indicator for the quality of crex’ reconstructions. this is, ≈ 53% correct  reconstructions for data sets with prime node free sit compared to only ≈ 7%  when the sit has prime nodes.

the presented results clearly show that the absence of prime nodes in the sit is a good indicator for the quality of the rearrangement scenario reconstructed by crex. this is remarkable because pairwise comparisons of metazoan mitochondrial gene arrangements often correspond to prime node free sits and most of the gene orders take part in at least one such comparison .

different rearrangement sizes
the probability of the rearrangements may depend on additional properties in real world scenarios, e.g., short rearrangement operations are found more often  <cit>  . in the following the influence of the length  of the rearrangement operations on the reconstruction quality of crex is analysed . it can be seen that the reconstructions of crex are of much better quality for smaller values of w. when comparing the unrestricted case  and the case w =  <dig> an improvement of the average precision and recall of at least  <dig>  was measured for all values r >  <dig>  of course the structure of the sit depends on the applied rearrangements. for short rearrangement operations the number of simulated data sets without prime nodes increases, e.g.,  <dig>  <dig> data sets for w >  <dig> and  <dig> for w ≤  <dig> are prime node free. thus, the effects of increased reconstruction quality in the case of prime node absence and shorter rearrangement operations are not independent. see  <cit>  for a formal study of the relation of rearrangement length and the properties of the generated gene clusters. the presented results indicate that the quality of crex’ reconstructions is improved for gene orders that evolved with short rearrangements. clearly, since there is no accepted model for mitochondrial gene order evolution this does not necessarily imply an improved reconstruction quality of crex for mitochondrial gene orders.

inventory of metazoan mitochondrial gene order rearrangements
the ri-graph has been computed for the set of all  <dig> unique complete metazoan gene orders. the computation needed 30s on a laptop with a  <dig>  ghz cpu. the  <dig> nodes of the resulting ri-graph are organised in several connected components. most of the connected components are small:  <dig> nodes are singletons, nine components contain two nodes, six components contain three nodes, there exists one component of size five, and one of size eight. additionally, there are two large components containing together more than half of the nodes. one of these components has  <dig> nodes and represents, with the exception of one priapulid, gene orders from arthropod species. the other large component contains  <dig> nodes which correspond to gene orders of chordata plus one xenoturbellida and one hemichordata.

in the following three large connected components of the ri-graph are analysed in more detail. a more comprehensive analysis of the results is given in  <cit> . note, that the study presented in the following is not intended to be phylogenetically conclusive.

mollusca
the mollusc gene orders are organised in five connected components of size greater than one and three singletons nodes .

scenarios for five gastropod gene orders are given in the connected component shown in figure  <dig> . i <dig> and i <dig> are presumably caused by trna annotation errors since arwen and trnascan already report five differently oriented trnas for nc_ <dig>  hence, we exclude b. tenagophila from the following discussions. the transpositions t <dig> and t102- <dig> are given in  <cit> . transposition t <dig> suggest a previously unreported alternative scenario. assuming the tree topology given in  <cit>  a parsimony analysis of the presented results suggest that the gene arrangement of c. nemoralis can not be ancestral. in addition to the three other gene orders the gene arrangement separated by t <dig> from c. nemoralis, by t <dig> from b. glabrata, and by t <dig> from a. coerulea is a putative ancestral gene order. but note that every unrooted tree topology including the four species is equally parsimonious.

the largest connected component of mollusc gene orders  contains gene orders from gastropoda, cephalopoda, and one chitonid. transpositions t16- <dig> and inversion i <dig> are reconstructed as reported in  <cit> , inverse transposition it <dig> is given there as two separate inversions. note that the crex scenarios between the gene orders of o. vulgaris, h. rubra, and i. obsoleta have many common rearrangements. this proposes the gene order separated by it <dig> from i. obsoleta, by t <dig> from o. vulgaris, and by t <dig>  t <dig> from h. rubra as the ancestral gene arrangement for at least two of the three gene arrangements . assuming any of the three gene orders as ancestral would not be parsimonious. tdrl <dig> is presented in  <cit> . the scenario to n. macromphalus is proposed as “transposition of two large blocks and transposition of f” instead of tdrl <dig>  but transposition t <dig> is reported equivalently in  <cit> .

arthropoda
the gene orders of the arthropoda are clustered in nine connected components. the component containing  <dig> of the  <dig> unique arthropod gene orders is shown in figure  <dig>  the subgraph defined by the nodes nc_ <dig>  nc_ <dig>  and nc_ <dig> and nodes which are only adjacent to one of these three nodes  is given in the upper part of the figure. the remaining part of the connected component is presented in the lower part. the component contains two unique gene orders representing hexapoda and crustacea . that is, nc_ <dig> represents  <dig> hexapod and  <dig> crustacean gene orders and node nc_ <dig> represents gene orders of two hexapoda and one crustacea. the gene order corresponding to node nc_ <dig> is considered to be the ancestral pancrustacean gene order  <cit>  and the gene order of l. polyphemus  is regarded as the ancestral arthropod gene order  <cit> .

several rearrangements that have been found occur several times between different pairs of permutations. therefore, some of these rearrangements can be found several times in the literature. these are for example i) t <dig> is a swap of i and q, e.g.  <cit> , ii) it <dig> is an inverse transposition of l <dig> <cit> , iii) t <dig> is a transposition of m and the pair i, q  <cit> , and iv) t <dig> is swap of p and t, e.g.,  <cit> . these rearrangements are of great interest because they have been found several times between or within different taxonomic groups and may be examples of convergent or synapomorphic rearrangements, as discussed in  <cit> . the results presented here will be of great help to investigate such problems.

first, some rearrangements shown in the lower part of figure  <dig> are analysed. using the presented method crex automatically found tdrls  <dig> , <dig>  and  <dig> which are striking examples of the tandem duplication random loss model of genome rearrangement. tdrls  <dig> and  <dig> have been presented in  <cit>  differing only by the exclusion of a single trna from the tdrls favouring an additional transposition of the trna in both cases. this is because the control region is used in these studies as additional evidence. it is interesting that seven  transpositions would be necessary for an alternative explanation of tdrl <dig> . three tdrls are needed for the rearrangements in the opposite direction in both cases. note that  <cit>  postulated “at least  <dig> translocations” for the rearrangements leading to c. coleoptrata. in  <cit>  tandem duplication random loss was discussed as a possible cause of the rearrangement in the undescribed lepidopsocrid species, but the actual tdrl  is given here for the first time. in  <cit>  the gene orders of c. destructor and d. pulex have been compared and different positions for eleven genes have been noticed where for two genes inversion is involved. “for nine of the translocations, the ’duplication/random loss’ mechanism” was suggested to be plausible and “a minimum of five independent duplication/random loss events” have been postulated. the automatic reconstruction using crex – it <dig>  it <dig>  tdrl <dig> – matches the description perfectly. but potential misannotation of the v and the rrnas in s. arsenjevi, s. mantis, and m. japonicus make further investigations necessary. instead of tdrl <dig> two transpositions are proposed in  <cit> , but it <dig> is given equivalently. in  <cit>  the gene orders of l. polyphemus and n. annularus have been compared and a tandem duplication non-random loss rearrangement and a transposition have been proposed. that is in each copy only genes on the same strand are lost . crex reconstructs the same rearrangements  but with an intermediate step via the gene order of nothopuga sp. by transposition t <dig>  <cit> . t <dig> and it <dig> are reconstructed as in  <cit> , where it was speculated that the transposition is derived from the pre-”non random loss” tandem duplicated gene arrangement that gave rise to the n. annularus gene order.

rearrangement counts
number of rearrangement operations found in the analysed connected components of the ri-graph; #: total number of rearrangements in the graph; known: rearrangements in agreement with the literature; diff: rearrangements reported differently in the literature or which are caused by annotation errors; new: rearrangements that have not been found in the literature; in parentheses: number of unique rearrangements

we would like to stress the point that these findings are apparently in disagreement with weighting schemes which put more weight on transpositions, e.g.,  <cit> . this is done to avoid a bias favouring transpositions since they are argued to be “observed much less frequently than inversions in many evolutionary contexts”  <cit>  and also  <cit> . the results presented here indicate that it is necessary to re-examine — at least for intra phylum comparisons — the weighting schemes that are typically used in the literature for the analysis of mitochondrial gene order rearrangements.

CONCLUSIONS
the quality of the mitochondrial gene order rearrangement scenarios reconstructed with crex has been analysed in an extensive study on artificial gene orders that have been simulated with different rearrangement models. the four type of rearrangement operations - inversion, transposition, inverse transposition, and tandem duplication random loss  — that are relevant for mitochondrial gene order evolution have been considered. it was shown that the absence of prime nodes in the strong interval tree  and a not too large number of genes involved in the rearrangement operations are good criteria indicating reliable crex reconstructions.

based on the simulation results a method has been proposed that can be used for automatically analysing a large number of mitochondrial gene orders in order to find a likely subset of scenarios from pairwise gene order comparisons. the found scenarios are stored in an ri-graph data structure. the proposed method was applied to all known metazoan mitochondrial gene orders resulting in an ri-graph where most gene orders within the same phylum are connected. the potential of the new method was shown by the large agreement with the literature on gene order rearrangements within the protostomia.

mitochondrial gene arrangement data are mostly still analysed manually by biologists  <cit> . such manual analyses are valuable and indispensable, but the handling of the huge amount of available data is at least tedious and may also be considered as impossible. therefore, usually only a very small number of gene arrangements is compared , only a subset of the genes is evaluated , or only a part of the arrangements is compared . in this way the phylogenetic signal which is or is not contained in gene order data can not be properly analysed or important alternative rearrangement scenarios may be missed. the new method facilitates the automatic analysis of gene orders and the reconstruction of rearrangement scenarios. within less than a minute the results for the complete mitochondrial data set can be computed. it was shown here that crex allows for a comprehensive analysis of the rearrangements, within the connected components, solving some of the problems mentioned above, in an unprecedented and efficient way. furthermore, the possibility to identify possible ancestral states and cases of convergent evolution has been indicated. for future work it is promising to refine and extend the proposed method, e.g. the inclusion of methods for the handling of missing genes or duplicates.

competing interests
the authors declare that they have no competing interests.

authors contributions
mb designed and implemented the algorithms, performed the analyses of the artificial and mitochondrial data sets. mm provided design suggestions for the algorithms as well as the analyses. mb and mm conceived the project and wrote the manuscript.

supplementary material
additional file 1
pdf with supplementary material for the simulated data the plots for recall and the number of prime node free data sets for the used rearrangement models are given. the numbers of prime node free comparison for the mitochondrial data set are listed. the remaining connected components and the rearrangement scenarios for all connected components – excepting the chordata which have not been analysed in detail – are given.

click here for file

 acknowledgements
this work was supported by the german research foundation  through the project “deep metazoan phylogeny” within spp  <dig> 

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2011: proceedings of the ninth annual research in computational molecular biology  satellite workshop on comparative genomics. the full contents of the supplement are available online at http://www.biomedcentral.com/1471-2105/12?issue=s <dig> 
