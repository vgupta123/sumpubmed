BACKGROUND
the vast amount of available high-throughput gene expression data has provided excellent opportunities for studying gene functions on a global scale. since genes on the same pathways or in the same functional complex often exhibit similar expression patterns under diverse temporal and physiological conditions, one common practice in microarray data analysis is to cluster genes according to their expression similarities. the clusters can then be analyzed in several ways, such as promoter analysis or gene ontology analysis  <cit> . since clustering procedures are often subjective, and usually ignore the detailed relationships among genes, the biological insight obtained from clustering results is often limited. alternatively, many studies have attempted to construct gene regulatory networks from microarray data using methods such as linear models  <cit> , bayesian networks  <cit>  and boolean networks  <cit> . these approaches, however, are successful only on rare cases where the system is well constrained and the training data is sufficiently large.

recently, as a tradeoff between the crude cluster analysis and detailed network modeling, gene co-expression networks have become a rapidly developing area of study and many interesting results have been obtained  <cit> . a gene co-expression network is an undirected graph, where the graph nodes correspond to genes, and edges between genes represent significant co-expression relationships  <cit> . compared to regulatory networks, a gene co-expression network does not attempt to distinguish direct gene interactions from indirect ones; on the other hand, a gene co-expression network contains gene neighborhood relations that are usually overlooked in cluster analysis  <cit> . gives an interesting geometric interpretation of gene co-expression networks and connects co-expression network analysis to traditional microarray data analysis techniques. databases of gene co-expression networks for several model organisms have been constructed from large numbers of microarray data sets  <cit> .

one of the most important applications of gene co-expression networks is to identify functional gene modules, which often manifest themselves as dense subnetworks. while earlier studies attempted to apply clustering algorithms directly to the adjacency matrices of networks in order to partition network nodes into groups  <cit> , later studies have relied on graph partitioning algorithms or special purpose algorithms for identifying subnetworks of certain properties  <cit> . these studies have provided many interesting biological results; however, none of them has demonstrated that the network-based methods for detecting functional modules can significantly outperform the conventional cluster analysis, partially due to the lack of an unbiased metric for quantitatively evaluating the functional significance of gene modules. in principle, nearly all the previous gene co-expression network construction methods fall into two categories: those that utilize the similarity values   <cit> , and those that utilize the rank-transformed similarities   <cit> . in the value-based  method, two genes are connected if the  similarity between their expression profiles is above a certain threshold, which can be chosen in an ad hoc manner or semi-automatically. similarities may be measured by pearson correlation coefficient or other metrics. some researchers proposed to use conditional correlations to partially remove indirect links  <cit> . thresholds are usually chosen using an ad hoc methods  <cit> , or by controlling statistical significance of similarities  <cit> . a semi-automatic method has also been proposed based the topological difference between real and random co-expression networks  <cit> . in addition, several methods have been proposed to adjust raw similarity values based on neighborhood information such as shortest path connections or topological overlaps, which usually result in weighted gene co-expression networks  <cit> . most of the existing studies used the value-based method, while the relative advantages and disadvantages of the rank-based or the value-based network construction methods have not been rigorously examined.

a number of studies have analyzed the topological properties of gene co-expression networks  <cit> , and have shown that gene co-expression networks have the well-known small-world and scale-free properties, similar to many other biological networks and real-world networks  <cit> . on the other hand, these studies have also reported that gene co-expression networks differ from other types of biological networks in several important aspects, such as the characteristic node degree and hierarchical organization. however, most of the conclusions were drawn from value-based co-expression networks. in fact, we will show that the rank-based network has all the common topological properties of the other biological networks, and is significantly different from the value-based network.

in this work, we propose a general co-expression network-based approach for analyzing microarray data, for both genes and samples. our approach consists of a method for rank-based network construction, a parameter-free graph partitioning algorithm for module discovery and a novel reference network-based metric for module evaluation. we compare our approach with the existing methods, and show several real applications of our approach.

we first introduce a simple rank-based method to construct co-expression networks, and compare the topologies of value-based and rank-based gene co-expression networks. we find that the rank-based network significantly differs from the value-based network in several important aspects, and we argue that the former is able to better capture the global topology of the underlying biological system, including both strongly and weakly co-expressed modules, while the latter is dominated by the most strongly co-expressed modules.

second, we introduce an efficient graph partitioning algorithm, qcut, to identify relatively dense modules, also known as communities, in the rank-based networks. compared to other graph partitioning algorithms, qcut is parameter free, as it uses an objective function called modularity to automatically determine the optimal partitioning and the number of partitions  <cit> . we have recently shown that the method can be used to discover natural communities from social networks and to predict protein complexes from protein-protein interaction networks  <cit> , while its effectiveness in finding intrinsic modular structures from gene expression data has not been thoroughly studied.

third, we propose a novel metric for comparing different module detection algorithms in terms of the overall functional significance of the gene modules being identified. we introduce the concept of a reference network, which can be obtained from other information sources, such as protein-protein interaction networks or chip-chip data. this metric is then used to quantify the performance of a gene module detection algorithm by the agreement between the modules identified from the co-expression network and the modular structure of the reference network. it is important to note this metric is not biased by the number of modules and the module size distribution.

we assessed our approach for finding gene modules on a large set of synthetic microarray data with known modular structures as well as several real data sets. on synthetic data, our method correctly predicted the number of modules, and performed significantly better than several popular clustering algorithms and one of the best graph partitioning algorithms, the markov clustering algorithm  <cit> . on real data, we evaluated the performance of our method using both a popular  metric based on gene ontology enrichment scores, and the aforementioned reference network-based metric. we show that our method can significantly outperform the existing algorithms according to all the metrics used.

we also applied our method to construct and analyze a sample co-expression network using microarray data of normal and cancerous t and b cells including diffuse large b-cell lymphoma   <cit> . remarkably, our method almost perfectly separated the different cell types into their own subnetworks without any prior knowledge. we also re-discovered the two known subtypes of dlbcl, where one subtype has a much lower survival rate than the other.

finally, we report several interesting results that may worth further investigation. in yeast, we identified many gene modules that are both strongly co-expressed and co-regulated; among them, a small module where majority genes have no known functions may be involved in telomere maintenance. in the sample co-expression network, we discovered a tumor cell module that seems to be a new subtype of dlbcl that is associated with the lowest survival rate among all dlbcl patients.

RESULTS
co-expression network construction and topological analysis
constructing co-expression networks
most of the existing co-expression analyses construct value-based networks. we believe that the value-based methods are significantly limited by their use of a homogeneous threshold for all the genes in the network. in reality, genes in different functional pathways may be regulated by different mechanisms, and therefore may exhibit different patterns of co-expression. in particular, genes in one functional pathway may be strongly mutually co-expressed, while genes in another functional pathway may be only weakly co-expressed. as a result, if we choose a stringent global threshold, many genes in the weakly co-expressed pathway may be disconnected. on the other hand, if we attempt to connect the weakly co-expressed genes into the network, the threshold may become so low that the genes in the strongly co-expressed pathway may have many links to genes in other pathways, making further analysis difficult. for example, as shown in figure  <dig>  to construct a co-expression network for the  <dig> yeast genes that we will see in the next subsection, if we allow only 10% of the genes to have no connections, most genes will have more than  <dig> connections, while if we reduce the median degree to  <dig>  more than one third of the genes will have no connection at all.

to deal with this problem, we propose a simple rank-based method to construct co-expression networks. we first calculate the pearson correlation coefficient  between every pair of genes. for each gene gi, we rank all other genes by their similarity to gi. we then connect every gene to the d genes that are most similar to it. compared to the value-based method, the rank-based method essentially uses different local similarity threshold for different genes. it is important to mention that even with a fixed d, the number of connections for different genes is not constant. this is because of the asymmetric nature of the ranking. in other words, the rank of gene i with respect to gene j is not necessarily equal to the rank of gene j with respect to gene i. therefore, although gene i has only d genes on its top-d list, other genes that are not on i's list may list i as one of their top-d genes. the mean degree is between d and 2d, the minimum degree is d, and the maximum degree can be as large as n -  <dig>  with n being the number of genes in the network.

the rank-based method may appear to be limited by a similar drawback of the value-based method - the former uses a global rank threshold and the latter uses a global value threshold for all genes. however, as we discussed above, in the rank-based network, different genes can have different number of connections, even though all genes have the same rank threshold, because of the asymmetric nature of ranking. more importantly, our objective is not to identify all co-expressed genes for each gene, but to construct a sparse network such that the modular structure of the system can be successfully identified. to achieve this, a good co-expression network needs to have the following two properties:  there are very few false-positive connections, and  nodes within modules are well connected into a single component, while connections between modules are sparse. a value-based network can hardly provide the two properties simultaneously, for reasons given above. in contrast, the key idea in our rank-based method is that by using a uniform small value of d, we ensure that  the network only contains highly reliable edges, and  each module of the network is  fully connected into a single component, both theoretically and empirically . as in most clustering algorithms, we assume that gene expressions in different modules are generated by different distributions, while gene expressions in the same module are generated by a common  distribution. therefore, the rank-based sub-network of genes from the same module is a nearest neighbor graph constructed on a set of random geometric points. theoretically, it is known that a nearest neighbor graph on random geometric points has a high probability to be connected even with a very small number of neighbors   <cit> . to empirically test this as well as to find the range of d for typical microarray data, we randomly generated a data set with  <dig> genes and various dimensions  using gaussian distribution. we then constructed a rank-based co-expression network using different values of d and measured the number of disconnected components in the resulting network. remarkably, we find that for data of dimension >  <dig>  a nearest neighbor graph with  <dig> nodes is almost always fully connected with d =  <dig> neighbors. even for data of smaller dimensions, the graph can be connected with at most  <dig> neighbors . the results do not vary significantly when the number of genes or the type of distribution is changed. in the next subsection, we also show that the yeast gene co-expression network is connected with d =  <dig>  in practice we find a value of d between  <dig> and  <dig> is sufficient for most cases. this simple network construction method can also be combined with other strategies that were developed for value-based networks. for example, the raw similarity values can be refined by considering local neighborhood or shortest path information before rank transformation  <cit> ; when selecting edges according to ranks, a threshold based on raw similarity values may be imposed simultaneously to ensure confidence in the edges being created. ideally, methods can also be developed to automatically select the optimal d, as in  <cit> . the rank-based method can also be applied to construct networks of other entities, as long as a similarity measure can be defined. one example is to construct a network of samples from microarray data, where the nodes are samples and the similarity between two samples can be measured by the pearson correlation coefficient between their gene expression profiles. later we will show an application of a sample co-expression network where each sample is a cell type.

topology of yeast co-expression networks
previous studies have analyzed the topologies of various networks, including biological and social networks, and suggested three common topological properties: scale-free, small-world, and hierarchically modular  <cit> . although debate exists  <cit> , it is generally believed that these properties may be related to the robustness and stability of the underlying systems  <cit> . for example, a small-world network has a small diameter and a large clustering coefficient , which is believed to be related to an efficient and controlled flow of information  <cit> . in a scale-free network, the probability for a node to have k edges follows a power-law distribution, i.e. p = c × k-γ. the implication of the scale-free property is that a few nodes in the network are highly connected, acting as hubs, while most nodes have low degrees. scale-free networks are believed to be robust to random failures, but vulnerable to deliberate attacks  <cit> . in comparison, in a random network , connections are spread almost uniformly across all nodes  <cit> . furthermore, although a random network may also have a small diameter, it usually has a near zero clustering coefficient  <cit> . several studies have analyzed the value-based gene co-expression networks, and reported some interesting but controversial results  <cit> . here we analyze the topologies of both the rank-based and the value-based networks, and compare with previous results.

we obtained a set of yeast gene expression data measured in  <dig> different time points under various stress conditions  <cit> , and selected  <dig> genes that showed the highest variations. we constructed four gene co-expression networks using the rank-based method with d =  <dig>   <dig>   <dig> and  <dig>  respectively. for each rank-based network, we constructed two random networks as follows. first, we randomly permuted the expression data of each gene independently, and constructed a rank-based network using the permuted data. second, we randomly rewired the connections in a true rank-based network, but preserved the degree for every node  <cit> . for comparison, we also constructed four value-based networks, using the pearson correlation coefficient as a similarity measure. the thresholds were chosen such that the average degrees are  <dig>   <dig>   <dig>  and  <dig>  respectively, in the resulting networks. similar to the rank-based networks, we obtained two random networks for each true value-based network, one constructed from randomly permuted data and the other by randomly rewiring the true network.

numbers in parentheses are for non-singleton nodes only.

to quantify the difference between the degree distributions of the value-based and rank-based networks, we fitted a power-law function for the degree distribution of each network to determine its γ parameter. the values of γ in the rank-based networks are consistently between two and three. this is typical in many biological networks such as ppi networks and metabolic networks, as well as in real-world social and technology networks  <cit> . in comparison, the γ values in the value-based networks are below one . theoretically, it is known that a scale-free network with γ <  <dig> has no finite mean degree when its size grows to infinity, and is dominated by nodes with large degrees  <cit> . therefore, small values of γ for co-expression networks were reported in several previous studies as a significant difference between the co-expression networks and other biological networks  <cit> . our results suggest that this difference may simply be an artifact of the network construction method. consider that genes in some modules are strongly co-expressed with one another, while genes in some other modules are weakly co-expressed. using the value-based method, when the similarity cutoff is gradually decreased, the genes within the strongly co-expressed modules will be first connected, up to a point that they are almost completely connected, before any gene in the weakly co-expressed modules can be connected to their within-module partners. as a result, the co-expression network will have many genes with large degrees, resulting in a small slope in the log-log plot. in contrast, with the rank-based method, genes in both strongly and weakly co-expressed modules can be connected, as essentially a different similarity threshold is used for each gene. therefore, rank-based networks can usually capture the topology of both strongly and weakly co-expressed modules, while value-based networks are often dominated by the strongly co-expressed modules.

moreover, previous studies have reported that gene co-expression networks lack the hierarchically modular property  <cit> . this property is characterized by a reciprocal relationship between a node's degree and its clustering coefficient  <cit> . again, we have found that this claim only applies to the value-based networks. as shown in figure  <dig>  there is a clear reciprocal relationship between the node degree and node clustering coefficient in the rank-based networks, when compared to the value-based networks. this suggests that gene co-expression network can also have hierarchical structures.

together, these experiments show that the rank-based co-expression networks have all the common topological properties of many other biological networks, while the value-based networks seem to differ significantly. although these do not necessarily prove that rank-based networks are biologically more meaningful than value-based networks, the former seems to be able to capture the underlying topological structures better.

module discovery and analysis in gene co-expression networks
gene co-expression networks with thousands of nodes are difficult to visualize and comprehend. a useful strategy for analyzing such a network is to partition it into subnetworks, where the nodes within each subnetwork are relatively densely connected to one another but have fewer connections to the other subnetworks. in gene co-expression networks, such subnetworks can be considered as candidates of functional modules, as genes within each subnetwork are mutually co-expressed, while co-expression between genes in different subnetworks are sparse. many graph partitioning algorithms have been developed in computer science  <cit> . similar to clustering, one major difficulty in graph partitioning is to determine the number of partitions. some methods do not require this to be explicitly determined in advance, but require other parameters, which are also difficult to obtain. for example, mcl, one of the best graph partitioning algorithms, requires an inflation parameter, and setting the parameter to different values may result in very different results  <cit> .

to address this difficulty, we introduce an algorithm that we have developed recently for identifying "communities" in arbitrary networks  <cit> . the main motivation for the algorithm is that each "community", or a subnetwork, must contain more intra-community edges than would be expected by chance if the connections were random. with this motivation, we developed an algorithm to optimize an objective function called modularity, which is precisely defined as the percentage of intra-community edges minus the random expectation . the algorithm, named qcut, has been shown to be effective in finding statistically significant and practically interesting graph partitions in many synthetic networks, social networks, and biological networks, without any user-tunable parameters, and has outperformed the existing algorithms based on similar motivations  <cit> .

we evaluate the performance of qcut on gene co-expression networks in several ways. we first use synthetic microarray data where the true modular structure is known, so that we can directly measure the accuracy. we then use two real microarray data sets to evaluate the overall biological significance of the identified gene modules, with two different metrics. the first metric is a commonly used approach based on the enrichment of specific gene ontology terms in the modules, which may be biased by the number of modules and module sizes. the second is a new metric that we introduced based on the idea of reference networks, which can be obtained from a variety of sources, such as gene annotations or protein-protein interaction networks .

evaluation using synthetic microarray data
to objectively evaluate the accuracy of the modules detected by qcut, we tested it on a large collection of synthetic gene expression data. the data sets, available at http://www.biostat.pitt.edu/bioinfo/publication.htm, were used to evaluate many clustering algorithms in a previous study  <cit> . each data set contains simulated expression data of approximately  <dig> genes under  <dig> conditions. each gene was pre-assigned to one of fifteen clusters, and the genes in the same cluster had their expression profiles generated from a common log normal distribution. gaussian noises were then added to the data set to simulate experimental noises. a higher level of gaussian noise generally makes the data more difficult to cluster. since the correct clusters are known, we used a well-known metric called the adjusted rand index to measure the accuracy of qcut   <cit> .

we first compared the accuracy of qcut on co-expression networks constructed by three methods: value-based, rank-based, and clr  <cit> . we used euclidean distance as the basis to measure the dissimilarity between two genes. for the value-based method, we normalized the distance to be between  <dig> and  <dig>  and constructed a series of co-expression networks for each data set using different threshold values. as shown in figure  <dig>  the threshold that results in the best clustering accuracy varies for different data set. for more noisy data set a larger threshold value is needed, which suggests that choosing a right threshold is critical for the value-based method. the clr method, in contrast, by converting the raw distances to z-scores, effectively removed such dependency and the best clustering accuracy is achieved at the same z-score equal to  <dig>  corresponding to a p-value  <dig> , for all data sets . interestingly, for the rank-based method, the clustering accuracy is almost invariant for rank cutoffs between  <dig> and  <dig> . figure  <dig> shows the best accuracy that can be achieved on the three types of networks. as can be seen, the rank-based networks clearly have the highest accuracy for intermediate levels of noises . for data with lower noises, all three methods resulted in perfect accuracy, and for data set with the highest level of noise , all three methods converges to about the same accuracy. next we compared the clustering accuracy of qcut on rank-based networks with several widely-used clustering algorithms including k-means clustering, hierarchical clustering  <cit> , and tight clustering  <cit> , applied directly to the gene expression data without deriving co-expression networks. in this test, qcut was applied to rank-based co-expression networks constructed using d values equal to  <dig>  in addition, we also tested one of the best graph partitioning algorithms called the markov clustering algorithm   <cit> , which is applied to rank-based networks as well. since the results of mcl depend heavily on the choice of an inflation parameter , we applied mcl to the rank-based networks constructed with d fixed at  <dig>  but varied i from  <dig>  to  <dig> , with an increment of  <dig> , and took the best clustering accuracy resulted from these parameters. we used the matlab  implementation of the k-means and hierarchical clustering algorithms. k-means clustering was run with k equal to  <dig>  and was repeated  <dig> times for each data set to obtain the best results. the hierarchical clustering was performed using average linkage, and the final cluster tree was cut at an appropriate depth to generate  <dig> clusters. the accuracies of tight clustering were directly obtained from the original study that was done on the same data set  <cit> . our evaluation results show that, even without any parameter tuning, qcut outperformed the competing algorithms in identifying the true modular structures embedded within the synthetic microarray data. as shown in figure  <dig>  the clustering accuracy of qcut is clearly better than that of the hierarchical clustering and tight clustering. the accuracy of qcut is similar to k-means, except for the data sets of the highest level of noise. the synthetic data set with the highest level of noise may represent an extreme case in practice, as many of the clusters in this data set are not distinguishable visually . however, k-means achieved this accuracy with the number of clusters given explicitly, while qcut did not have this information at all. in these synthetic data sets, the number of clusters is the single most important parameter and k-means is expected to work well when that is known. we tried to combine k-means with several popular methods to automatically determine the number of clusters, including the gap statistic  <cit> , silhouette  <cit> , and the dunn's index  <cit> . our results suggest that if the values of k are automatically determined, k-means performs much poorer than our method, especially for data sets with sd ≥  <dig>  . the results of mcl are two-fold. on one hand, when an appropriate inflation parameter is chosen , mcl has an accuracy similar to that of qcut, except for the data set with the highest noises, indicating a superior performance of graph-based algorithms in general. on the other hand, the accuracy of mcl depends on the choice of the inflation parameter, and may be much lower than that of clustering algorithms if a suboptimal inflation parameter is used .

functional modules in a yeast gene co-expression network
to evaluate the performance of our algorithm on real biological data, we applied qcut to cluster the four rank-based yeast co-expression networks constructed in the previous subsection. the best numbers of clusters suggested by qcut for the four networks are  <dig>   <dig>   <dig> and  <dig>  respectively. as shown on synthetic data, when the number of clusters is known, the clustering algorithms that explicitly use this information, such as k-means, perform better than those without this information, such as the hierarchical clustering. therefore, here we compared the performance of qcut to k-means and two other popular clustering algorithms, namely self-organizing maps   <cit>  and spectral clustering  <cit> , both of which require the number of clusters to be given. applying the value-based method to the yeast data set, as we showed in figure  <dig>  the network either contains too many singletons, or are too densely connected to be partitioned by qcut . therefore, we did not evaluate its accuracy on the real data set. interestingly clr had similar behavior as the value-based method on the yeast data set, indicating that it is partially value-based.

we used the som implementation in the microarray software suite tm <dig> from tigr, and implemented our own version of spectral clustering. k-means, som and spectral clustering were applied directly to the expression data, using pearson correlation coefficient as the similarity metric. we obtained  <dig>   <dig>   <dig> and  <dig> clusters using each of the three competing algorithms. to test if the competing algorithms may give a better result with a different setting of the number of clusters, we also applied the spectral clustering with the number of clusters k equal to  <dig>   <dig>  ...,  <dig>  som was executed on  <dig> ×  <dig>   <dig> ×  <dig>   <dig> ×  <dig>  and  <dig> ×  <dig> grids to produce the desired number of clusters. because qcut identified  <dig> clusters on both the d =  <dig> and d =  <dig> networks, we compared the  <dig> clusters identified from the d =  <dig> network by qcut with the  <dig> clusters identified by the competing algorithms to avoid redundant comparison. another reason for this comparison is that qcut often produces a few small clusters, while the clusters of the competing algorithms are relatively uniform in size. therefore, the "effective" number of clusters is smaller for qcut than for other algorithms, so we used this comparison to compensate for the differences in cluster sizes.

to validate the biological significance of the clusters, we first counted the number of gene ontology  terms enriched in the clusters and the percentage of clusters that had at least one enriched go term, at various significance levels. as shown in figure  <dig>  the clusters identified by qcut contain more enriched go terms than the competing algorithms for most of the p-value cutoffs -). furthermore, the percentage of clusters containing at least one enriched go term is also higher for qcut than for the other algorithms -).

second, as the above measurement may be biased by the number of clusters or the cluster size distributions, we compared these algorithms using a novel metric based on three reference networks that capture different functional interactions between genes: a co-annotation network based on go terms of biological processes, a co-regulation network based on chip-chip data, and a ppi network . while the ppi network has unweighted edges, the go-based and chip-based reference networks have weighted edges. we discretized the go-based and chip-based reference networks using a series of weight cutoffs. we then scored the gene modules identified by each algorithm using these reference networks . as shown in figure  <dig> and figure s <dig> in additional file  <dig>  the gene modules identified by qcut always had the highest score, using all three types of reference networks. the spectral clustering algorithm performed better than the other clustering algorithms. as qcut and the spectral clustering algorithm share some similar spirit in capturing the topology embedded in a data matrix, this result seems to suggest that topological features are important for achieving good clustering results on gene expression data. we also randomly shuffed the gene modules identified by qcut while preserving the sizes of the modules, and scored the random clusters using the reference networks. the scores for the random modules are very close to zero in all cases , indicating that the results obtained by

qcut and the clustering algorithms are not due to chance
the modules in the d =  <dig> co-expression network have the worst scores according to all three reference networks , indicating that the d =  <dig> network might be too sparse to capture all functional relationships. the d =  <dig> co-expression network has the highest scores according to all three reference networks, while the networks with d =  <dig> or  <dig> give slightly worse results. as stated above, to test if the competing algorithms may give a better result with a different setting of the number of clusters, we applied the spectral clustering, which has a better accuracy than the other two algorithms, with the number of clusters k equal to  <dig>   <dig>  ...,  <dig>  we scored the gene modules using the go-based reference network at a weight cutoff of  <dig> . as shown in figure s <dig> in additional file  <dig>  the best module score achieved by spectral clustering is  <dig>  , which is significantly lower than the module score by qcut . this shows that our evaluation results have not been biased by the number of clusters.

in addition, we combined k-means with gap-statistic  <cit> , which estimated the optimal number of clusters to be  <dig>  we also tested sota  <cit> , a hierarchical version of som that can automatically determine the number of clusters. sota returned  <dig> clusters, a number similar to our optimal number. however, only  <dig> of the  <dig> clusters had significantly enriched functions, and the most significant function had a p-value 10- <dig>  as compared to 10- <dig> in our method .

 <dig> for each cluster, significantly enriched biological process go terms  or binding of transcription factors  are counted.

2fold of enrichment is calculated as: .

we also found a very interesting small module that may deserve further investigation. among the  <dig> genes in module  <dig>  four genes have a common function in telomere maintenance . while the majority  of the remaining genes encode hypothetic proteins and have unknown functions , a careful inspection showed that all four characterized genes and five of the  <dig> uncharacterized ones are located near telomeric regions  <cit> . moreover, a significant number of genes in this module are regulated by four common transcription factors: gat <dig> , yap <dig> , pdr <dig> , and msn <dig>  . our results suggest that these uncharacterized genes as well as the four transcription factors are very likely to be involved in the function or maintenance of telomere, which has not been reported in the literature.

functional modules in an arabidopsis gene co-expression network
to test our method on high organisms, we applied it to a set of arabidopsis gene expression data downloaded from the atgenexpress database http://www.uni-tuebingen.de/plantphys/afgn/atgenex.htm. we studied the cold stress response, for which the dataset contains the expression of  <dig> k arabidopsis genes in the root and shoot tissues in six time points following cold stress treatment and under the normal condition. we selected  <dig> genes that are up-or down-regulated by at least five-folds in at least one of the six time points in either tissue. we then constructed a co-expression network by connecting each gene to its top three correlated genes , resulting in  <dig> co-expression links in total.

our clustering algorithm partitioned the network into  <dig> modules, with a q value of  <dig> , indicating a strong modular structure. similar to the previous experiment, we first examined the go terms enriched in the clusters at various significance levels, and compared them with the results of the k-means algorithm with k =  <dig>  as shown in figure  <dig> and  <dig>  the modules identified by our method contain significantly more enriched go terms than that identified by k-means, and go terms are enriched in more modules in our method than in k-means. furthermore, our method achieved significantly higher module scores in the go-based reference networks than the k-means algorithm ). table s <dig> in additional file  <dig> lists the most enriched functional categories for each module. several modules are enriched with functions that are known to be related to cold stress responses, e.g. modules  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig> . due to the scarcity of functional annotations in arabidopsis, the enrichment p-values as well as the module scores of the gene modules are less significant in arabidopsis than in yeast, which is to be expected.

cancer subtype classification from sample co-expression networks
in this subsection, we show that our co-expression network analysis method can also be applied to identify sample modules. conceptually, there is no difference in constructing and analyzing gene or sample co-expression networks: in the latter we treat each sample as a network node, and connect two samples when their expression profiles are similar according to some similarity measure. in practice, however, sample co-expression networks are usually smaller than gene co-expression networks, but the edges in sample co-expression networks may be computed from very high-dimensional data, since each sample is described by thousands of genes. it is therefore interesting to see whether the same network construction and module detection methods can be applied here without much tuning of the parameter, i.e. the value of d. as an application of our approach, we applied our method towards an automatic classification of tumor cells.

an accurate classification of tumor cells is crucial for effective therapy  <cit> . traditionally, tumors have been classified by their morphologic appearance, which is, unfortunately, often very subjective. furthermore, tumors with similar histological features may respond very differently to chemotherapy  <cit> . to address this problem, a promising alternative or complementary strategy is to classify tumors based on their genetic profiles, i.e. the activity of hundreds or thousands of genes that are involved in the disease. most of the existing tumor classification approaches are based on supervised learning, such as support vector machines or decision trees, which aimed at identifying genetic features to distinguish two or more known tumor types  <cit> .

here, we ask whether it is possible to automatically classify tumor samples in the absence of training data that provide known tumor types or even the number of distinct types. this unsupervised learning approach has a few advantages over supervised learning methods. first, the existing tumor classifications are based on histological features, which may be unreliable themselves. second, using unsupervised learning, we may be able to discover novel tumor sub-types that have not been characterized by histological features previously. on the other hand, it is crucial to confirm whether the automatically discovered tumor types are biologically meaningful and indeed provide useful information for understanding the disease mechanism or for improving its treatment.

in this study, we chose to focus on lymphoma, a family of tumors involving cells of the immune system. we obtained a data set containing the expression data of  <dig> genes for  <dig> samples belonging to nine cell types, including three different types of tumors, namely, diffuse large b cell lymphoma , chronic lymphocytic leukemia , and follicular lymphoma , as well as normal b and t cells at different stages of cell differentiation  <cit> . we constructed a rank-based network of the samples using pearson correlation coefficient as the similarity measure and the value of d at  <dig>  edges with a pearson correlation coefficient <  <dig>  were removed to reduce false connections.

applying qcut to the network, we identified eight modules. remarkably, without any prior knowledge about the number of cell types in the samples, our algorithm automatically separated different cell types into different modules, with a few exceptions . furthermore, the results are almost invariant when we varied d between  <dig> and  <dig>  indicating a very stable modular structure among the samples. as shown in figure  <dig>  blood t cells and activated blood b cells are perfectly classified into their own modules. cll and resting b cells are grouped into a single module, which is not surprising since the cll has a very low proliferation rate, similar to resting b cells  <cit> . the two germinal centre b  cell samples are grouped with the fl cells and are far away from the activated b cells, which confirms the hypotheses that gcb represents a distinct stage of b cell differentiation, and that the fl arises from this stage of b-cell differentiation  <cit> . the transformed cell line module also contains three dlbcl cells. a closer inspection showed that two of the dlbcb samples in this module  are laboratory-cultivated cell lines rather than samples from real patients , which may be the reason that they are grouped with the transferred cell lines. the lymph node/tonsil cells are grouped with dlbcl as in previous studies  <cit> .

interestingly, the majority of the dlbcb samples are grouped into three modules . it is well known that not all dlbcl tumors are equal: 40% of patients respond well to chemotherapy and have prolonged survival, while the others have a much shorter survival time after treatment  <cit> . previous studies have suggested that dlbcl tumors can be categorized into two subtypes: gcb-like dlbcl and activated b-like dlbcl  <cit> . the gcb-like dlbcl shares gene signatures that distinguished germinal centre b cells from b cells in other stages, while the activated b-like dlbcl shared many gene signatures with normal lymph node and tonsil. on average, gcb-like dlbcl patients have a much higher survival rate than activated b-like dlbcl patients after comparable chemotherapy  <cit> . in our sample co-expression network, the gcb cells connect to dlbcl- <dig> cells while the tonsil and lymph node cells fall in the dlbcl- <dig> modules, suggesting that the two modules may correspond to the two well-known dlbcl subtypes. indeed, the median survival durations for the patients in the dlbcl- <dig> and dlbcl- <dig> modules are  <dig> and  <dig> months, respectively. furthermore,  <dig> out of  <dig>  patients in the dlbcl- <dig> module lived more than five years after treatment, while only  <dig> out of  <dig>  patients in the dlbcl- <dig> module survived that long. even more interestingly, however, the dlbcl- <dig> module, which is apart from gcb and tonsil/lymph nodes, has the lowest survival rate overall. the median survival durations for this module is  <dig> months, and only and  <dig> out of  <dig>  patients in this module survived more than five years after treatment. the lack of gcb-like or activated b-like signatures and the lower survival rate seems to suggest dlbcl- <dig> to be a separate subtype.

CONCLUSIONS
in this paper, we presented a general co-expression network-based approach for the analysis of high-throughput gene expression data. we introduced a simple rank-based method to construct gene or sample co-expression networks, and an algorithm called qcut to identify modules from the co-expression networks. we also introduced a novel metric to evaluate the functional significance of gene modules based on reference networks.

on synthetic data, we showed that our method can automatically discover the embedded modular structures and that our method significantly outperformed a number of competing algorithms. we applied our method to two real data sets, and showed that it can produce statistically more significant gene functional modules than conventional clustering methods such as k-means and self-organizing maps, evaluated by a number of criteria. furthermore, our test on a sample co-expression network showed excellent results in separating different types or subtypes of tumor cells. all these were achieved without knowing the number of modules in advance.

we reported several interesting biological results, including some testable biological hypotheses. we showed that the rank-based co-expression networks have all the common topological properties that exist in other biological networks, challenging the previous results on the topology of gene co-expression networks. we discovered an interesting gene module in yeast suggesting that some uncharacterized genes and transcriptional regulators may be involved in maintaining telomere integrity. we also identified a module of tumor cells which seems to correspond to a new subtype that has not been identified before.

although we have only demonstrated our method on gene expression data, it can be applied to other types of experimental data as well. the rank-based network construction method can be used to capture the relationships among other entities. the efficiency of our module detection method and its parameter-free feature make it well suited for identifying intrinsic structures in large-scale network data. another advantage of our method is its flexibility in integrating different types of information. for example, co-expression networks and transcriptional regulatory networks can be easily integrated; the modules in those integrated networks will then represent co-expressed and co-regulated genes, as well as their regulators. similarly, we would expect other types of information, such as protein-protein interaction, phylogeny and phenotypes, to be integrated to produce more biologically insightful results.

