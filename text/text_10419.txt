BACKGROUND
the history of molecular biology is punctuated by a series of discoveries demonstrating the surprising breadth of biological roles of rnas. the repertoire of known non-protein coding rnas  has grown rapidly  <cit> . the housekeeping roles of rnas, such as those of trna, rrna, rnasep, snrna and snorna, were discovered early. while in the recent years, it became clear that rnas also have important regulatory functions. examples include micrornas, which regulate the expression of protein genes by targeting a complementary region of their mrnas. micrornas constitute one of the most abundant classes of regulatory molecules, and are key to many developmental processes  <cit> . several discoveries collectively demonstrate that untranslated messenger rnas can sense the level of metabolites, and modulate the expression of the genes accordingly. those rnas are referred to as rna sensors and riboswitches, see  <cit>  for a review. post-transcriptional regulation of gene expression often involves secondary structure elements located in the untranslated regions of mrnas  <cit> . through all those discoveries, a new understanding of gene expression regulation is emerging.

much work has been done on predicting rna structure rather than predicting rna consensus motifs. the most popular approach to structure prediction is perhaps the minimum free energy approach pioneered by zuker  <cit> . simply, the free energy of an rna molecule is modeled as a sum of independent contributions of cycles . melting experiments are performed to determine the free energy parameters for small structures. since the free energy can be decomposed into a sum of independent contributions, it can be solved exactly and efficiently when formulated as a dynamic programming problem  <cit> . steady progress has been made, mainly through the determination of more complete and accurate sets of free energy parameters  <cit> , and the performance of this approach is well known  <cit> . however, there are several reasons why free energy minimisation methods can fail.

• the lowest free energy conformation may not coincide with the native conformation. this can be due to experimental errors in determining the free energy parameters, errors due to the extrapolation of the parameters, or simply because there are numerous lowest free energy conformations, and it can be difficult to distinguish the native conformation from the others;

• certain classes of rna have more than one active structure. this is the case for several rna regulatory elements termed riboswitches  <cit> ;

• the nearest neighbour model does not take into account the contributions of the cellular environment: proteins, other rnas, metabolites and solvent. such contributions may be particularly important for modeling regulatory elements present in the untranslated regions of mrnas;

• similarly, rnas are often modified after their transcription, the modifications can play an important role while folding;

• higher-order structures, including pseudo-knotted structures, are often not considered. for some rnas, the lowest free energy conformation obtained when neglecting pseudo-knots will be different from that of the native conformation. however, taking into account pseudo-knots severely increases the time and space complexity of the algorithms. finally, there is also a lack of experimental data that can be used to deduce the free energy parameters.

the accuracy of rna secondary structure prediction can often be increased if a multiple sequence alignment is used as input; these sequences are assumed to share a common secondary structure. for example, hofacker et al. have incorporated an additional term into the total energy function for taking into account covariations  <cit> . this approach has been implemented in the program rnaalifold. the authors have shown that the number of required input sequences is less than that of traditional covariations analyses, yet the results are superior to the implementations based on a single input sequence. often, an alignment is not readily available. it could be that the similarity of the available sequences is too low to construct a multiple sequence alignment; consequently, knowledge about the secondary structure would be required to construct a reliable alignment. alternatively, the common motif perhaps only represents a small portion of each sequence; and it can be discontinuous.

david sankoff has developed recurrence equations to simultaneously fold and align rna sequences  <cit>  . in principle, the method could be used to align rna sequences with low similarity. in practice, its time and space complexity limits its application. dynalign is an implementation of this algorithm for two sequences  <cit> . it differs from the original proposal in that there are no substitution costs present in the recurrence equation. masoumi and turcotte recently extended this work for three input sequences  <cit> . this work has shown that 1) the average positive predictive value  is improved when using three input sequences rather than two, 2) there are fewer low ppv predictions and 3) the sensitivity is only slightly affected. together, these two research projects suggest that using several input sequences can significantly improve the ppv of secondary structure prediction methods. however, the prohibitive time and space complexity of these algorithms limits their application to sequences that are a few hundreds nucleotides long, and approximately the same length. indeed, the time complexity of the algorithm for three input sequences is o
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbamrthrhal1wy0l2yhvtyaehbnfgdovwbhrxajfwnaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabawaaegaeaaakeaat0uy0hwztfgdpnwy2aqeh0uy0hwztfgdpnwy2aacfagae8ndw=eaaa@4191@, where |s1| is the length of the shortest input sequence and m is the maximum distance between aligned nucleotides.

as a result, the identification of rna motifs requires extensive human examination. this paper presents a new software system that allows searching exhaustively the space of rna sequence and structure motifs, therefore assisting the identification and characterisation of consensus structures. since the algorithm is exhaustive and independent of any scoring scheme, it is ideally suited to study the ability of objective functions to identify native folds.

RESULTS
search space
for a given input sequence, the number of valid rna secondary structures is extremely large; exponential with respect to its length  <cit> . in order to make the search space more tractable, we adopt a data-driven approach. a seed sequence serves to induce a search space that is exhaustively explored for finding motifs that also match a significant fraction of all the input sequences. the search space is traversed from the most general to the most specific motif. whenever a motif is found that is not supported  the motif, and its descendants, are pruned from the search space. herein, a motif is defined as a collection of one or more stems, where each base pair is either generic  or specified . no other criteria than support and the validity of the structures are used to prune the search space.

algorithm
there can be several sources of noise. firstly, the assumption that the input sequences are sharing a common structure has to be true for the majority of the input sequences. herein, all the input sequences selected contain exactly one copy of the consensus structure. however, in general the possibility that certain sequences have been erroneously included in the input cannot be excluded. secondly, the input perhaps consists of more than one fold family. thirdly, some of the sequences could adopt a less conserved structure, which to be found would require relaxing the parameters of the algorithm up to a point where it becomes impractical. hence, a user-defined level of noise is tolerated. the support is defined as the fraction of the input sequences containing a given motif; in the experiments presented here, we set the support to 70%. the main steps of the algorithm are as follows.

 <dig>  select a seed sequence;

 <dig>  construct the most specific motif;

 <dig>  general-to-specific search of the motif space;

 <dig>  report the motifs.

by default, the first sequence  is used as the seed sequence. the software system provides an option to select a specific sequence as the seed sequence. valid values are integers in the range  <dig> ... k -  <dig>  where k is the number of input sequences. selecting the shortest sequence should reduce the size of the search space, and consequently the execution time.

most specific motif
the search space is induced from a seed sequence that has been selected in the first step of the algorithm. the method is described using suffix trees, however, the implementation uses suffix arrays, see methods for further implementation details. for the exposition of the basic algorithm below, let s be the seed sequence and sr be the reverse complement of s.

 <dig>  construct a generalised suffix tree for s and sr;

 <dig>  for every starting position i =  <dig> ... n in s;

 <dig> . for every starting position j in s, such that i + c<j≤i + l;

 <dig> . <dig>  find the lowest common ancestor of i and j', where j' = |s| - j +  <dig> is the corresponding index in sr;

 <dig> . <dig>  if the length of the complementary region is larger than some user-defined value then save this stem.

where c and l are user-defined constraints specifying the minimum and maximum distance between the 5' end and the 3' end of a stem. the basic algorithm is extended in two ways. first, up to e mismatches per stem are allowed. this involves adding an inner loop, executed e times. this increases the time complexity by a factor e. the second extension allows for up to m wobble base pairs ; which are handled in a similar way as mismatches. the location of each stem is recorded to be used in the later stages of the algorithms. by using suffix arrays and range minimum query, the stems are enumerated in o
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbamrthrhal1wy0l2yhvtyaehbnfgdovwbhrxajfwnaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabawaaegaeaaakeaat0uy0hwztfgdpnwy2aqeh0uy0hwztfgdpnwy2aacfagae8ndw=eaaa@4191@ time. similar ideas have been proposed by gusfield  <cit> , for suffix trees only.

general-to-specific search
the search algorithm consists of three distinct phases: initialisation, instantiation and composition. during the first phase, the algorithm initialises a queue of open nodes to contain structural motifs . the motifs have been derived from the selected seed sequence. only the motifs that have a minimum support, i.e. that also match other sequences from the input set, are part of the queue. structural motifs have no base pair instantiated.

in the second phase, all the possible sequence instantiations for every motif of the open queue are considered. systematically and exhaustively, all the base pairs of every stem motif in the open queue are replaced by the actual base pair that occurs in the seed sequence. this information is readily available since the location of every stem within the seed sequence has been saved. each newly created instance is matched against the remaining sequences. only the motifs that have a minimum level of support are added at the rear of the queue. figure  <dig> illustrates this process for a single stem. progressively, all the possible instantiations are validated. this is done systematically so that the same instantiation is never considered twice. this behaviour is controlled using the parameter max_fixed_pos. setting max_fixed_pos to  <dig> eliminates sequence motifs from the search space. at the end of the second phase, the open queue contains a mixture of structural, partially and fully instantiated motifs, all consisting of a single stem segment. finally, the third phase consists of creating multi-stems motifs by selecting and composing two motifs at a time from the open queue. the composition of two motifs is dictated by their occurrence within the seed sequence. given two motifs, there are two possible relationships. one motif follows the other or one motif is nested within the other. the seed sequence is used to determine which relationship to use and to calculate the distances. this process creates helices with bulges and interior loops as well as multi-branch structures. motifs that are structurally invalid  or that do not have the required minimum support are discarded. the open queue now contains a mixture of single and multi-stems motifs, that are structural, partially or fully instantiated.

example of the execution of seed
the algorithm consists of three main steps: the selection of the seed sequence, the construction of the most specific motif, and the general-to-specific search of the motif space. to illustrate the execution of seed, we use the trna dataset. in the first step, the software system selects a seed sequence. the default is to select the first sequence , see figure  <dig>  the selected sequence is used for constructing a set of building blocks that will be combined in the third step of the algorithm to produce complex motifs. first, all the complementary regions are enumerated, see figure  <dig>  next, each complementary region is used to create specific motifs containing one or more base pairs with known identity, see figure  <dig>  each time a new motif is created, seed matches it against the remaining  sequences. a motif is saved, and will be used to create more complex motifs, only if its support is sufficient. finally, the third step of the algorithm is the general-to-specific search of the motif space. elements of the open queue are combined with motifs created in the second step. elements are combined using information from the seed sequence. these elements can be nested or adjacent in the seed sequence, see figures  <dig> and  <dig>  again, a motif is saved, and will be used to create more complex motifs, only if its support is sufficient.

secondary structure expression matcher
for all three phases of the search algorithm, the newly created motifs are matched against all the input sequences, in order to determine their level of support.

since the motifs are repeatedly matched against a fixed set of sequences, it is advantageous to pre-process the input sequences to speed-up the matching operations. we introduce an algorithm for matching secondary structure expressions. the basic idea is to "thread" a secondary structure expression onto the suffix tree  of the input sequences. this means simultaneously traversing the expression, from its 5' end, and the suffix tree, starting from its root.

the main steps of this algorithm are as follows. first, build a suffix tree for each input sequence . then, match the characters of the secondary structure expression along the unique path in the suffix tree until either 1) the end of the secondary structure expression is reached, 2) the end of a branch is reached, 3) a mismatch is found, or 4) the secondary structure expression contains a joker .

in the former case, every leaf of the subtree below the last match represents the starting location of an occurrence. for cases  <dig> and  <dig>  this is a failure and the algorithm must restart from the last branch point , if there are no more branch points, this means the expression does not occur in the input sequence.

case  <dig>  there are three situations to consider: the joker occurs in a loop region, the joker occurs in the 5' end region of a stem, or it occurs in the 3' end region of a stem.

first, let us assume that the matching character was found along an edge of the tree but it was not the last letter of the label of that edge . the first situation is easy to handle; the next character along this path is accepted. second situation, a joker has been found in a 5' end region of a stem. the algorithm accepts the next symbol along the current path, and pushes that symbol onto a stack. next and third situation, a joker is encountered in a 3' end region of a stem, the top of the stack contains the base that occurred at the 5' position of the pair, if the next character along the current path inside the tree is its complement then the top element of the stack is discarded and the algorithm continues, otherwise this is a failure and the algorithm restarts from an earlier branch point, or stops, indicating a failure. whenever the algorithm backtracks to this point, it pushes back the discarded element onto the stack. when the end of a secondary structure expression is reached  the stack must also be empty, otherwise, the expression is not valid.

finally, whenever a joker is found and the previous match occurred at the end of a label, the algorithm has now reached an internal node of the suffix tree. all the outgoing edges of this internal node represent all the different ways to continue matching the expression. the algorithm is therefore applied recursively for all the outgoing edges. the system stack serves to memorise all these branch points.

the algorithm can answer two specific questions: 1) does this secondary structure expression occur in this input string? 2) how many occurrences of this expression are there? for the decision question, the algorithm stops whenever the end of the secondary structure expression is found. for the latter question, all the remaining branch points must be explored, and all the leaves of the subtree below the node where the last character of the expression was matched must be visited in order to count the number of occurrences, or simply to report them.

evaluation
seed is a framework for finding conserved rna motifs in a set of unaligned sequences. as such, it allows for the independent study of functions for ranking the motifs a posteriori.

information content has often been used in the context of sequence pattern discovery. accordingly, we include a function, tinfo, consisting of the sum of the information content contributions from unpaired and paired regions. shannon uncertainty  is calculated for each loop position and is subtracted from the maximum uncertainty possible, to give the information content . h = -∑pilog <dig> pi summed over each base pair , where the observed nucleotide frequencies of each base i from the input sequences is used to estimate pi. a nucleotide in a stem is base paired to its partner, which increases the information content relative to an unpaired nucleotide in a loop. the resulting loop and stem information contents are added to calculate the total information content.

work on simultaneous alignment and structure prediction of rna sequences  <cit>  suggests that a  combination of the free energy of multiple input sequences, when folded onto a common structure, can help circumvent limitations of the nearest neighbour model, and effectively identify native structures. we consider here several simple functions combining the free energy of all or some of the matches of a given motif. these functions are: tleft, ntleft, tfirst, ntfirst, tsum, ntsum, tbest, ntbest, tworst, ntworst, tavg and ntavg.

each motif matches at least min_support × k sequences, and up to k sequences, by construction. certain motifs will occur more than once in a given sequence. thus, there are several ways to calculate the free energy score for a given motif and set of matches. furthermore, the secondary structure expression matcher, which we developed for this work, traverses the suffix array of the input sequences, rather than the input sequences themselves. consequently, the matches are reported in lexicographic order. the execution time can be slightly reduced by taking into account the free energy of the first reported match, rather than finding the best or leftmost one.

for a given motif, tleft is the sum of the free energy of its leftmost occurrence in each sequence. tfirst has a slightly different definition. tfirst is the sum of the free energy of the first occurrence reported by the matcher in each sequence. this function was considered since it can slightly reduce the execution time. tsum is the sum of the free energy of all the occurrences in all the matching sequences. tbest is the sum of the lowest free energy match in each sequence. tavg is the sum of the average free energy of all the matches per sequence. tworst is the sum of the highest free energy match from each sequence. finally, normalised variants of these scores are obtained by dividing each score by the number of matched sequences or total number of matches for tsum; the resulting scores are noted with the letter n followed by the name of the base score.

we used two criteria to compare the scoring functions. we measured the correlation coefficient for each function against the matthews correlation coefficient . clearly, a perfectly correlated function would allow selecting the consensus structure with the best mcc. however, since the primary objective of the scoring functions is to order the consensus structures from best to worst, rather than modeling the free energy, we also used the ranking-based evaluation measures recently proposed by rosset et al.  <cit> . the ranking statistics describe the relationship between scoring functions and the mcc performance measure. each consensus structure is sorted in increasing order of energy scores  and assigned unique ranks. for each pair of motif making an incorrect ordering of mcc, the weighted difference of their ranks is calculated. this is then transformed into the range .
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacuwfbpgcgaqcaaaa@2e83@ varies from - <dig> to  <dig>  where a - <dig> score signifies an anti-correlation while + <dig> means a perfect positive correlation. it is interesting to note that the objective function having the highest ρ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacuwfbpgcgaqcaaaa@2e83@ value is ntfirst. this function is the fastest to compute since the matcher stops after locating the first occurrence of the motif in each input sequence. the first occurrence is also the one that comes first in lexicographic order. thus, these occurrences are perhaps more similar in terms of sequence. this is consistent with the observation that a linear combination of the free energy of matches and the information content outperforms either of these two scores alone . the other objective functions are biased toward finding the leftmost, largest number of occurrences, best or worst free energy matches. the bias of ntfirst is perhaps more difficult to rationalise. however, since ntfirst is fast to compute and has the highest ρ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacuwfbpgcgaqcaaaa@2e83@ value, it has been used for the analysis of the results for all six experiments.

experiments
we present the results of six experiments: hsl <dig>  <dig>  ire  <dig>  hsl <dig>  <dig>  ire  <dig>  trna and 5s. see table  <dig> for the statistics, and methods section for the description of the datasets used. the first four tests were designed to evaluate the suitability of this approach to identify automatically conserved stem-loop structures. while the last two sets were created to study the performance of the method on more complex secondary structures.

the first dataset consists of  <dig> 3' utr histone mrnas that are known to contain a six base stem and four base loop structure. this stem-loop structure plays several roles, including enhancing the translation of histone mrnas  <cit> .

in the first experiment, hsl <dig>  <dig>  strict parameters were used to verify the presence of native folds in the search space. more precisely, we searched for a consensus structure containing exactly one stem segment made of at least six base pairs. the maximum distance for any two nucleotides involved in a base pair was set to  <dig>  with these options, seed finds two distinct structural motifs. since all the base pair instantiations are also considered, the total number of motifs is  <dig>  see table  <dig>  all but four have a matthews correlation coefficient score of 100%, i.e. both ppv and sensitivity are 100%.

the relationship between the information content  and the performance index for this experiment is characteristic of the other experiments as well. motifs with a high information content also have good ppv and sensitivity, see figure  <dig>  however, there are low information content motifs that have high ppv and sensitivity. the highest correlation is observed for ntleft, see table  <dig>  for all twelve functions, the "best" scoring motif also has the best ppv and sensitivity. the average number of matches per motif per sequence varies from  <dig> to  <dig>  with an average of  <dig>  matches per sequence.

the second dataset consists of  <dig> 5' utr sequences that are known to contain an ire motif. in this experiment , we searched for a structure consisting of one or two segments of at least three base pairs each; notice that one or two stem-loop structures could be formed with these options. the maximum distance for the nucleotides of a base pair was set to  <dig>  a total of  <dig> motifs were found, see table  <dig>  three of which have 100% ppv and more than 90% sensitivity. the number of matches per sequence varies from  <dig>  to  <dig> , with an average number of  <dig>  matches per sequence. tfirst is the scoring function with the best correlation to mcc. figure  <dig> illustrates the separation of native folds from the rest achieved using ntfirst for this experiment.

next, we reran the first two experiments with less restrictive parameters, suitable for finding stem-loop structures in general. in particular, no restrictions were imposed for the maximum number of segments that could be used to form a motif, except that the maximum distance for the elements of a pair should be  <dig> nucleotides. a total of  <dig> motifs were found for the hsl <dig> dataset, see hsl <dig>  <dig> in table  <dig>  nearly one third of the conserved motifs have a ppv of 100%. ntworst has the best correlation to mcc; all the correlation scores are - <dig>  or better. for this experiment, the free energy scores are particularly effective for separating the high ppv/sensitivity motifs from the rest, see figure  <dig> 

similarly, the ire experiment  was carried out relaxing the parameters. no restrictions were imposed on the maximum number of segments, the minimum size of the segments was three base pairs, and the maximum distance between the elements of a base pair was set to  <dig>  a total of  <dig> motifs were found, see table  <dig>  of the scoring schemes based on free energy, ntworst has the best correlation to mcc. however, the magnitude of the correlation for the tinfo score is higher than that of ntworst. the structural motifs with the highest mcc score rank first using ntfirst, see figure  <dig> 

we also studied structures that are more complex. the next dataset consists of  <dig> trna sequences representing diverse levels of difficulties for mfold, see table  <dig>  in order to discover multiple stem structures, we placed no restrictions on the maximum distance between elements of a base pair. also, the length of the unpaired regions in matched sequences was allowed to vary by one nucleotide for added flexibility. the size of the output was reduced by reporting only the motifs consisting of three or more segments . a total of  <dig>  motifs were found. ntleft gave the highest correlation to mcc . the trna structures have been used as a benchmark for the development of minimum free energy methods. perhaps the free energy models are particularly proficient for this class of rnas. indeed, it is interesting to observe the high degree of correlation of ntfirst to mcc, particularly for the left tail of the distribution, see figure  <dig>   <dig>  the motif with the highest ntfirst score has  <dig> base pairs, 100% ppv,  <dig> % sensitivity. it matches  <dig> of the  <dig> input sequences. figure  <dig> shows the lowest free energy motifs.

the last experiment was carried out on  <dig> 5s ribosomal rna sequences. the sequences represent diverse levels of difficulty for mfold, see table  <dig>  the same options as above  were used. a total of  <dig>  consensus motifs were found representing  <dig>  distinct structures. the maximum sensitivity achieved is much lower than for the previous experiments. tsum has the highest correlation to mcc. better correlation scores are observed when focusing on motifs consisting of  <dig> or more base pairs. the correlation scores between tsum and avgppv, avgsensitivity and avgmcc are - <dig> , - <dig>  and - <dig> , respectively. the ppv of the "best" motif according to ntfirst is high, on average 85%. however, there are many motifs with high ppv, 100%, for the intermediate ntfirst values.

for comparison, we ran rnaprofile  on the same four datasets. this is a recently developed algorithm for finding conserved secondary structure motifs in unaligned rna sequences  <cit> . several experiments were ran, varying in small increments the region parameters . the number of hairpins  sought was also specified. the combinations of  values producing the best performance were used for comparison . the number of profiles kept at each step was  <dig>  the number of profiles reported were hsl <dig> =  <dig>  ire =  <dig>  trna =  <dig> and 5s =  <dig> 

on the hsl <dig> data set, both algorithms identified motifs with 100% ppv and sensitivity. in case of ire, the performance of both systems were comparable. specifically, the ppv/sensitivity of the structures predicted by rnaprofile ranged from  <dig> –100/ <dig> –100%, excluding one prediction which had no true positives. the motif predicted by seed matched  <dig> out of  <dig> sequences with ppv/sensitivity ranging from 100–100/80–100%. in case of complex structures, trna and 5s, seed outperformed rnaprofile in terms of ppv. for the trna data set, the ppv/sensitivity range for rnaprofile and seed were found to be 25–100/ <dig> – <dig> % and 100–100/ <dig> – <dig> %, respectively. rnaprofile failed to predict the overall y shape of the 5s rnas. the minimum and maximum ppv/sensitivity of motifs predicted by rnaprofile was found to be 0– <dig> /0– <dig> % whereas by seed it is  <dig> – <dig> / <dig> –50%.

for all six experiments, the diagrams, correlation coefficients and ranking statistics support the use of free energy for ranking consensus motifs. top-ranked motifs generally correspond to high ppv/sensitivity motifs while bottom-ranked motifs correspond to low ppv/sensitivity motifs. the diagrams suggest that motifs with positive free energy can be eliminated from the search space.

CONCLUSIONS
we developed a combinatorial algorithm for the detection of consensus rna secondary structure motifs in a set of unaligned sequences. our algorithm compares favourably to existing tools, such as rnaprofile. its ability to scale and predict more complex structures looks promising. to our knowledge, this is the first algorithm that directly attempts to exhaustively explore the space of sequence and structure motifs using suffix arrays.

one of our research objectives has been to determine if support and exclusion constraints are sufficient to make an exhaustive search feasible. the six experiments presented here indicate that 1) such search under constraints is feasible and that 2) the search space contains structures with high ppv/sensitivity. indeed, most experiments completed in minutes using megabytes of memory on a small computer server. the search space contains motifs with high ppv, often 100%. for small motifs, such as hsl <dig> and ire, the sensitivity is also high, often 100%.

we also evaluated several simple functions for ranking the motifs. for single stem structures, hsl <dig> and ire datasets, motifs with high information content were also found to have high ppv and sensitivity. however, the performance of tinfo decreases as the complexity of the motifs sought increases. overall, the free energy based ranking functions performed better, the average weighted ranking  of ntfirst is  <dig> , compared to  <dig>  for tinfo.

with the free energy based functions, lowest free energy scoring motifs have a high ppv/sensitivity while highest scoring motifs have a low ppv/sensitivity. the functions display good correlation to ppv and sensitivity; the correlation to sensitivity is generally higher than to ppv. the ability of all the functions to rank the motifs is good, with ρ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacuwfbpgcgaqcaaaa@2e83@ ranging from  <dig>  to  <dig> . for  <dig> out of  <dig> experiments, the top ranked motif has the highest matthews correlation coefficient.

the use of homologous sequences has been shown to help circumvent limitations of the nearest neighbour model and improve the performance of rna secondary structure prediction methods  <cit> . however, the time and space complexity of these approaches limits their application to at most three sequences  <cit> . furthermore, the distance constraint m that makes these algorithms practical prevents them from finding conserved local structures. consensus motifs offer an alternative approach taking advantage of available homologous sequences. unlike ab initio methods, consensus approaches can potentially scale beyond three sequences and have the ability to uncover locally conserved motifs.

consensus motifs can be used to define structural constraints that can be given as input to an ab initio method. to investigate this claim, the base pairs of the best ntfirst motif were used as input constraints for mfold, which was ran on all the sequences matching that motif. for trna, we observed an increase in ppv/sensitivity from  <dig> / <dig>  to  <dig> / <dig> %, see table  <dig>  for 5s, the ppv/sensitivity rose from  <dig> / <dig>  to  <dig> / <dig> %, see table  <dig>  for trna and 5s rrna datasets, the structural constraints successfully eliminated some of the bad minima that prevented mfold from finding high ppv/sensitivity structures. the combined approach considerably increases the sensitivity of the prediction compared to predictions by seed alone. for such applications, ranking functions should favour high ppv rather that sensitivity. this is illustrated with this last experiment where a high ppv motif was used for setting structural constraints. for the 5s dataset, the ppv/sensitivity rose to  <dig> / <dig> %.

seed is designed to tolerate outlier sequences. however, if an outlier sequence is selected as the seed, this approach will fail to detect a consensus structure. currently, the user should run the algorithm with different seed sequences and check the consistency of the results. our research is moving in the direction of adding an outer loop to the algorithm automating this process.

other future works on this project include developing new objective functions, taking into account insertions/deletions and the number of predicted base pairs, for example, to improve the discrimination of native folds. in all our tests, a linear combination of a free energy score and information content outperforms either of these two scores alone. this is consistent with the fact that ntfirst was found to be the best scoring function. indeed, since ntfirst selects the motifs that come first in lexicographic order, those motifs are also expected to have similar sequences. once the objective functions have been improved, they will be used to implement pruning rules to reduce the execution time.

seed has the ability to predict consensus secondary structures and sequence motifs. scoring functions based on information content will rank such motifs higher than those containing structural information only. also, generic motifs are more likely to produce multiple matches for each sequence. the motifs with base pair identities will eliminate some of the matches. in this study, we have not evaluated sequence motifs. this is because 1) the information is not readily available for all the datasets and 2) seed currently discovers sequence motifs for stem regions only. future direction of this work also include automated discovery of sequence patterns in the loop regions.

the determination of consensus rna secondary structure motifs is important for understanding the structure-function relationship and post-transcriptional regulation, as well as identifying rna targets. seed is a new exploratory tool that can be added to the set of tools for the analysis of consensus rna structures.

availability and requirements
seed is written in iso c and uses extensions of the standard iso c <dig>  the calculation of the free energy is performed with the help of rnalib, which is part of the vienna rna package, .

the software system is distributed freely under the terms of the gnu general public license. it can be downloaded from our web site: .

