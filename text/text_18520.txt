BACKGROUND
hidden markov model  is a widely used statistical model for biological sequence analysis  <cit> . it has been used in many bioinformatics areas such as motif identification  <cit> , gene structure prediction  <cit> , multiple sequence alignment  <cit> , profile-profile alignment  <cit> , protein sequence database search  <cit> , protein fold recognition  <cit> , and protein and gene family modeling   <cit> .

several powerful profile hmm tools such as hmmer  <cit> , sam  <cit> , and hmmpro  <cit>  have been developed for analyzing biological sequences. the popular tool hmmer can build a profile hmm from a family of aligned sequences , search a profile hmm against a sequence database , search a sequence against a profile hmm database , and align a group of sequences against a profile hmm .

in contrast, there are only a few profile hmm visualization tools without editing functionality. hmmpro  <cit>  can visualize hmm architecture and probabilities but, is not publicly available. hmmviewer  <cit>  can visualize profile hmm produced by hmmer, but its visualization functionality is limited. similarly, sam  <cit>  can only visualize, but only has limited editing function. another different type of visualization tool, hmm logo  <cit>  is designed to visualize emission probabilities and transition probabilities in the popular logo style. however, hmm logo does not provide functions to edit hmm architecture and parameters.

we also notice that some general hidden markov model software includes visualization tools  <cit> . but these tools uses general input and visualization formats that are not very suitable for visualizing the special profile hmm of biological sequences.

here we develop a visual editor for a profile hmm in the hmmer format. the hmm models produced by other tools such as sam  <cit>  and hhsearch  <cit>  can be visualized after being converted into the hmmer format.

RESULTS
in this section, at first, we briefly introduce profile hidden markov model generated by hmmer. then we describe the hmmeditor's visualization and editing functions.

profile hidden markov model
profile hmm is a hidden markov model representing a family of sequences  <cit> . hmmer currently uses the architecture plan <dig> to support both local and global alignments between sequences and hmm .

the whole profile hmm starts from start  state and ends at terminal  state. the core of hmm between beginning  and ending  states consists of the matching  states, insertion states , and deletion states . a matching state  represents a fairly conserved position. each matching state has a deletion state  associated with it, allowing the deletion of the matching state . each matching state except for the last one also has an insertion state  associated with it, allowing the insertion of additional positions after it. unlike profile hmm in  <cit> , transitions between i and d states are not allowed.

n and c are two special states to accommodate additional insertions before and after the conserved regions of a family of sequences, which allows local alignment between a sequence and the hmm . j state joins the end of a profile hmm to the beginning. j state allows aligning a sequence against the core of a profile hmm multiple times, which is called multi-domain alignment . j state can model the linker  region between two domains.

another interesting feature of the profile hmm is that there is a transition from b to each m state, and a transition from each m state directly to e state. these transitions make it possible to match only a part of the model against a sequence, allowing local alignment with respect to the hmm.

each m, i, n, c, j states has an emission probability vector derived from input sequences. when we align a sequence against the profile hmm model, hmmer will report a log-odds score. it is the logarithm of the ratio between the probability that the sequence is generated by a profile hmm and the probability that it is generated by a null model. for the null model, the residues in a sequence are emitted according to the background distribution.

hmmeditor
we develop a profile hmm visualization and editing tool called hmmeditor . hmmeditor was written in java. thus it works on all major operating systems . user can run hmmeditor in a web browser through the web start or download and install the software locally.

 <dig>  hmm visualization
once a profile hmm is loaded, hmmeditor is able to visualize it in the traditional layout view , hmm logo view and hmm text view. it also can visualize the corresponding null model.

hmm layout view shows the structure of a profile hmm. the thickness of the transition line is proportional to the probability of the transition. the thickness of a border of an m state indicates the level of conservation. the label of each matching state denotes the most probable  residue emitted from the state.

inside layout view, user can zoom in and zoom out the view and drag any node to get a better appearance. the layout view can be saved as a jpg or png file.

hmm text view shows the profile hmm in text view. the format of the text view is the same as hmmer. hmm text view is dynamically associated with the layout view. if a user edits profile hmm in the layout view, the changes will reflect in hmm text view instantly.

 <dig>  hmm editing
hmmer saves a profile hmm model into a text file, in which all the probabilities are converted into log-odds scores. log-odds scores are not as intuitive as probabilities, making it hard for users to edit the model. hmmeditor provide the function to visually modify the structure and probability parameters of a profile hmm. to our best knowledge, it is the only tool equipped with this function. figure  <dig> shows the interface to add, remove a state and to modify its transition and emission probabilities. user can select a state using mouse and click the right mouse button to pop up the editing menu. the delete menu lets user delete the matching state and the associated insertion and deletion states. the duplicate menu lets user to add an identical set m, i, d states before or after the current state. the modify menu allows user to modify the emission probabilities of m and i states and the transition probabilities of i, m and d states. figures  <dig> and  <dig> show the dialogs of editing the transition and emission probabilities. once a probability is modified, all other views will be updated immediately.

 <dig>  viterbi path visualization
hmmev provides a novel function to visualize the viterbi  path of aligning a sequence against a profile hmm using viterbi algorithm. figure  <dig> shows an example of aligning a short sequence “mdphe” against a profile hmm consisting of five states. the visualization of viterbi path help user see the conservation, deletion, and insertion of the sequence with respect the hmm of a family of sequence.

hmmeditor can read the sequence file in many popular formats such as fasta and clustalw  <cit> . once sequences are loaded into hmmeditor, user can view the viterbi path of each sequence. furthermore, use can edit a sequence, i.e. add or remove residues to see how the path changes. this provides a useful means for user to adjust sequence alignments manually.

user can also align multiple sequences against a profile hmm into multiple sequence alignment and save it into a file from hmmeditor, just as hmmalign does.

 <dig>  hmm logo
hmm logo   <cit>  is a way to visualize a profile hmm, similarly as the popular motif logo used to visualize dna binding sites  <cit> . figure  <dig> is an hmm logo generated by hmmeditor. a hmm logo consists of a serial of character stacks  separated by light red lines. each stack represents a matching state. the lines separating neighboring stacks represent an insertion state. the height of the stack shows how significantly the emission probability of a matching state deviates from the background emission probability, i.e relative entropy . internally, the height of each character is proportional to its information content. the width of each stack or line is determined by the hitting probability of its corresponding state. hitting probability is the probability that a path goes through the state, which is computed efficiently using dynamic programming algorithm as in  <cit> . a narrow stack indicates that the state is less likely to be visited in a path. a narrow stack of a matching state means that the state is likely to be deleted instead of being visited in a path.

CONCLUSIONS
we have developed hmmeditor, a visual editor for profile hidden markov models. hmmeditor provides a convenient and appealing user interface to visualize and edit profile hmm models. it also allows user to visually adjust and align sequences against hmm. thus, hmmeditor is a useful tool for the hmm-based biological sequence analysis in the post-genomic era. the software, source code, and web service are freely available at the hmmeditor web site  <cit> .

competing interests
the authors declare that they have no competing interests.

authors' contributions
jd and jc designed the features of the program. jd implemented the program. jd and jc authored the manuscript. jd and jc approved the manuscript.

