BACKGROUND
structural motifs corresponding to enzyme active sites are often highly conserved in functionally related proteins as a result of common ancestry or convergent evolutionary processes  <cit> . these features can be the basis for inferring function, and computational structural analysis using this approach is now an active area of research  <cit> . efforts to this end are motivated by a disparity between the capacity of structural genomics initiatives to generate structures of macromolecules and the ability to characterize these proteins using traditional laboratory methods  <cit> . the present research is concerned with predicting the function of proteins with known structure and unknown function and with contributing to a better understanding of the structural basis of enzyme activity, primarily by in silico methods  <cit> . numerous algorithms and software applications have been developed for these purposes  <cit> . there are three major similarity-based approaches to in silico function assignment: sequence alignment, backbone alignment and template alignment. gapped blast and position-specific iterated blast   <cit>  and pattern-hit initiated blast   <cit>  are examples of current practice in sequence alignment. backbone alignment and template alignment are structurally based and allow for the possibility that the same function may be achieved with very different sequences. see  <cit>  for the current state of protein structural alignment including dali/fssp  <cit>  and modbase  <cit> . more local structural alignment has been done with jess templates used by the catalytic site atlas    <cit> . the failure of comparison of sequences is not sufficient to preclude similarity of active sites  <cit> , and in some cases, function is determined locally, rather than globally. however, strong similarity of the local three-dimensional structure of active sites may not be sufficient to determine activity in situ or even in vitro, due, for example, to steric constraints. see, for example,  <cit> . thus there is value in use of active-site structural templates as a complementary approach to sequence-based methods and more global methods, but none of the similarity-based methods is sufficient to provide a rigorous determination of activity.

promol is a molecular visualization and analysis tool that uses a template-based approach to alignment. the approach followed in promol is similar to that used in jess or in flora  <cit>  in that it ignores the physico-chemical properties of residues and instead assesses catalytic site structural conservation. it has been available online since  <dig>  <cit>  and has been developed as a plugin for the widely used pymol molecular graphics environment  <cit> . promol is being developed collaboratively and distributed freely as open source software .

promol uses a library of motif templates derived from active site definitions in the csa  <cit>  and analyzes spatial relationships and residue identities within a given structure to determine the presence of structural features known to be associated with specific catalytic functions. features of promol include the abilities

● to make and store motif templates in a growing library of hundreds of existing motif templates,

● to request alignment with subsets of the motifs by template source,

● to view the optimal alignment between a motif template and a query structure, and

● to characterize a structure from the pdb or a structure provided by the user.

promol, in combination with pymol, is a standalone application that functions best with an internet connection . its design as an open source  plugin to pymol is conducive to customization and further development by independent users.

implementation
promol was developed for the pymol molecular graphics environment in windows, mac os x , and linux. the program is written in python, and requires python  <dig> , or  <dig> . when creating a template for the library, promol uses pymol’s api commands to generate a motif template of the active site for an enzyme for which the function is known. when testing a template or using the motif library, promol can search for the motif in a query structure, using the distance selection commands in pymol and a set of constraints built-in to promol's motif finder module. additionally, promol contains a module called ez-viz that allows the user to interact with the gui, rather than having to work directly with pymol's command line  <cit> .

promol can contain multiple sets of motif templates. the promol release contains a set of motif templates  from the developers. once promol has been installed, users can generate their own motif templates . additional sets are under development.

the p set of motifs was created within promol using catalytic site entries published by the csa. the pdb id, ec number, residue name , residue number, and chain for each of the catalytic residues were entered in the motif maker tab. the process of motif creation is described below. once the motif was created in promol, it was tested against the template structure to ensure that it worked properly. if there was an exact residue-by-residue match between the motif and the template structure, the motif was saved and tested against known homologs  and random structures . please note that these numbers provide a limited window on the reliability of structural alignments. in using promol/pymol it is also possible to view the quality of the alignment directly, providing a much more reliable method of validation. the motifs were then saved to the p motif set within promol's file structure.

the u set of motifs can be created by any promol user. these motifs are stored in a separate directory on the user’s computer. the location depends on the operating system. see the promol user guide  for specific details.

initially, matches were ranked based on their levenshtein distance - a measure of the difference between two sequences  <cit> . if the two sequences are identical, the levenshtein distance between them is zero. if there is one difference between the sequences, the levenshtein distance is one and so on. for example, if a motif contains histidine, serine and glutamate, and the matching region of the query protein contains histidine, cysteine and glutamate, the levenshtein distance is one.

the levenshtein distance was incorporated in promol to provide a first level of screening and comparison between the query structures and the motif templates. however, the levenshtein distance is a coarse measure of structural similarity. to allow more exact quantitative comparison of structural alignments, rmsd calculations were added to promol. rmsd measures the l <dig> norm three-dimensional distance between the atoms in a match; the lower the rmsd between a query and a motif, the better the match. promol can compute rmsd considering alpha carbons only, alpha and beta carbons, or all atoms within a match.

promol works in windows , mac os x  and linux. the installation differs by operating system; details can be found in the promol user guide . the current release of promol should only be used with pymol release  <dig>  or higher on all three operating systems.

at present, promol works well with pymol in systems that have python versions  <dig> ,  <dig>  or  <dig>  installed. this combination is not functional in systems using python  <dig>  or higher, because pymol is normally released against lower versions of python.

promol can be accessed from the plugin dropdown menu in pymol once it is installed properly. the user must download one of the three compressed file formats available: tarball, zip and exe . in each case the contents need to be expanded in the startup folder for pymol. the location of the startup folder varies by operating system and pymol installation. examples of the location of the startup folder and the latest details can be found on the web site  and in the promol user guide.

the motif library for promol is located in the /pmg_tk/startup/promol/motifs folder. as mentioned earlier, this folder contains the p motif templates . the n set of motif templates  and the j set of motif templates  is under construction - check the web site for availability. each motif is a segment of python code which should not be modified. a motif consists of a series of calls to pymol to select residues by type and relative distance. for example, for a serine protease, promol searches for the serine-histidine-aspartate catalytic triad. to start, it sends a call for the specified atoms in the sidechains of all the serines in a protein; as an option, backbone atoms can be added to the atom lists for the desired residues. the next segment of code sends a call for all the histidine atoms that are within a specified distance of a serine residue. the only selections that proceed are those that contain both serine and histidine within a specified distance of each other. at this point, promol sends a call to pymol to find aspartate atoms that are within a specified distance of serine atoms and histidine atoms. at the conclusion of this search, promol reports out the atoms that pass the selection process.

the organization of the promol code is shown in figure  <dig>  the promol.py file controls the execution of the different functions that are located in the promol tabs and buttons. the functions assigned to each tab are described in detail in the promol user guide. the promol code was created by the authors, with the notable exception of the treewidgets  <cit> , which is required for the rmsd calculation display. treewidgets is a library for python and tkinter for the display of trees containing information based on a wide variety of data structures. promol also accesses the pdb loader application that ships with pymol to load pdb structures over the internet  <cit> .

the gui for promol  includes four buttons at the base of the window  and five tabs . these features are explained in much greater depth in the promol user guide.

motif creation
a library of active site motif templates has been created in promol based on structures that were determined by x-ray diffraction. a motif is a selected set of residues and atoms identifying an active site. in general the relevant active sites have been taken from the catalytic site atlas. the orientation-independent geometry of such a site provides a means of identification of the presence of such a site in another molecule. the motif creation mechanism within promol is based on relative distances among all the active site residues from the template molecules. a full description of motif creation will be provided in a subsequent paper . the templates for the motifs were selected from structures in the catalytic site atlas that were used to create the original jess motif set  <cit> , plus an expansion to include more complete coverage of the ec classes. the motifs are lists of residue names, atom names and their relative distances that must be matched in an alignment. a tolerance value is included as an addition to the distances to broaden the range of acceptable matches. the default tolerance value for motif creation is  <dig>  angstroms and it can be adjusted as a motif is tested. in addition to the tolerance that becomes part of the actual code of the motif, there is a precision factor that can be used when searching for motifs with the motif finder. the precision factor is a multiplier of the distances in the motif, providing an additional way to relax or tighten the constraints for a match. the use of the motif finder is described in detail in the promol user guide, which can be obtained at http://www.promol.org/home/download/download-now.

the motifs were created in motif maker and tested as follows:

● the motif template was tested against the template from which that motif was generated using pymol/promol to insure that the motif was found in the template structure. if there were any discrepancies between the 3-d image in the viewer and the motif, several approaches were employed to improve performance: changing the order of the residues in the motif maker, adding the backbone atoms to the motif template, and reducing or increasing the tolerance value for the motif template, to eliminate extra residues or to include residues that were omitted, respectively. the motif was then saved.

● the motif template was then tested against the protein’s homologs as listed in the csa. if there were any discrepancies between the 3-d image in the viewer and the motif adjustments were made to the tolerance of the motif, which in most cases resolved disparities. after the homolog testing was completed the next set of proteins tested were randomly selected proteins of known function to look for false positives and true negatives.

● motif templates that were found to be accurate in the motif creation scheme have been added to the motifs folder in the latest distribution of promol. ensemble testing of the entire motif library is described below.

motif template library
as of 6/21/ <dig>  promol  has  <dig> active site motif templates based on the active sites defined in the csa. these are labeled with a p prefix in the motifs folder, as they were generated solely within promol. the first promol motif template set was based on the same structures that were used to create the jess motifs  <cit> . these structures covered the first two levels of the ec classes found in the pdb, as well as about half of the third classification level . to increase the accuracy of searches conducted with promol, we searched the pdb for additional structures from which we created motif templates that included all representative structures from the third level of the ec classes.

rmsd calculations
the first releases of promol used an arbitrary designation of  <dig> for a perfect match and  <dig> for an imperfect match . subsequently, we introduced the levenshtein distance as the first quantitative measure of active site alignments within promol. this allowed the user to see the number of amino acid differences between the motif template and the match in the query, but it did not contain any information about three dimensional distance differences between the two. promol now can also calculate the rmsd, so that the user can choose to see the three dimensional distances between alpha carbons, alpha and beta carbons, or all of the atoms between the residues in the query and the motif template. this allows for a more quantitative match assessment and easier comparison to other motif-based protein analysis tools.

relationship among template-based alignment programs
one measure of promol performance is a comparison against other template-based alignment programs. a number of template-based alignment programs were considered. all of them use conserved three-dimensional motifs to identify similarities in protein structures. of the programs considered, promol is most similar to 3dmss-sites  <cit>  and pdbsitescan  <cit>  because these programs also compare query structures against a library of small motif templates. the results are reported below. promol was not compared with rasmot-3d  <cit> , which focuses on identifying large conserved folds or with deepview/swiss pdbviewer  <cit> , which compares a single motif against the 90% non-redundant set of pdb structures determined by x-ray diffraction.

since we are using the catalytic site atlas as a major data source for this project, we initially attempted a comparison with their catalytic site search tool, which was down at that time. we instead completed a performance comparison with 3dmss-sites version  <dig>    <cit> , which uses the motifs from the catalytic site atlas as templates. we also compared promol to pdbsitescan , which searches for post-translational modification sites, active sites, and binding sites in 3d structures using a pairwise structural comparison of the 3d structure against sites located in the pdbsite database  <cit> . the csa search at , returned to operation during the production of this paper.

our test set covered all six ec classes with these qualifications for query structures:

● the ec class must be found in the catalytic site atlas and must be defined by a jess motif  <cit> .

● the active site must contain at least three residues.

● the ec class must have a definition in the promol library.

RESULTS
performance summary
promol results are presented as a list of matching motif templates. the list contains the levenshtein distance for each of the matches and, optionally, rmsd values for the alignment using all atoms, only the alpha carbons, and the alpha and beta carbons. the user can then explore an individual alignment more deeply by checking the “show alignment” box on the motif finder, then double clicking on the motif template of interest in the list. this renders the alignment of the query  and the motif template .

the results presented in table  <dig> summarize the overall performance of promol with pdb entries that are homologous and non-homologous with the p set of motifs. the average percentage of true positives for all motif templates of the p set is 63%, when a positive is considered true if a match is identified with a query structure that has a matching full ec number . the tests were run against all pdb structures with matching ec numbers as of fall  <dig>  this is calculated as the proportion of total pdb structures with that ec number which the motif template matched. when run against structures with ec numbers that differ at the first digit, the overall average true negative rate is 81%. if positives are considered true when the query structure matches only the first three levels of ec classification, the overall average true positive rate is 31%. the decrease from 63% to 31% seems a bit puzzling at first, but an example may help here. if the query structures are from ec  <dig> . <dig> ,  <dig> . <dig> ,  <dig> . <dig> ,  <dig> . <dig>  and  <dig> . <dig>  and the template is  <dig> . <dig> , then there is a lower likelihood of finding a true positive than if the query pool is taken entirely from the same  <dig> digit ec class as the template . for true positives where ec numbers match completely, the average rmsd values are  <dig> ,  <dig>  and  <dig>  angstroms, for all atoms, alpha carbons, and alpha and beta carbons, respectively. the standard deviation for all atom rmsd values was calculated as  <dig>  angstroms.


motif set
testing structures
hit rate 
rmsd all 
rmsd alpha 
rmsd alpha and beta 
each motif template of the p set was tested against its homologous structures with the same ec designation, non-homologous structures with a different ec designation, and against its native structure that was used to build the motif template. for each positive hit, a set of three rmsd values was calculated: between all atoms, between alpha carbons, and between alpha and beta carbons. extremely low rmsd values were recorded for alignments of motif templates with their native structures. the hit percentages for testing against homologous structures represent the true positives rate, and the hit percentages for testing against non-homologous structures represent the false positives rate. these data can also be grouped as true positives , false negatives , true negatives , false positives .

for false positives, based on testing against  <dig> randomly selected unrelated structures with a different first ec digit per motif, the average rmsd values are  <dig> ,  <dig> , and  <dig>  angstroms with the standard deviation of  <dig>  angstroms for all atoms rmsd values. the lower average rmsd values for positive matches with homologous structures indicate that the average quality of alignments with homologous proteins was higher than that of non-homologous proteins. the average true negative rate of 81% is slightly misleading, because, when a user evaluates a result, they have access to the visual alignment and the corresponding rmsd values. using this information in concert, users are likely to be able to recognize many false positives as such. the percentages and rmsd values in the preceding two paragraphs are exact .

an in-depth analysis of the performance of promol was conducted with serine proteases in july,  <dig>  promol currently includes three serine protease motif templates , for which there were a combined  <dig> structures in the pdb that had one of those three ec numbers. at that time, there were a total of  <dig> structures in the pdb which were identified as serine proteases, with ec designations of  <dig> . <dig> *. we found that 87% of the  <dig> serine proteases in the pdb match at least one of promol’s three serine protease motif templates. at least one of the templates matches  <dig> % of the  <dig> pdb structures that share their entire ec numbers with one of the motifs. the average levenshtein distance of all of these matches is  <dig> , with a range of  <dig> to  <dig>  and both subsets  also have an average levenshtein distance of  <dig>  and a range of  <dig> to  <dig>  for all of the matches, the average rmsd values are  <dig> ,  <dig> , and  <dig> , for all atoms, the alpha carbons, and the alpha and beta carbons, respectively. for the full ec matches, the average rmsd values are  <dig> ,  <dig> , and  <dig> . for the matches differing by only the last number of the ec designation, the average rmsd values are  <dig> ,  <dig> , and  <dig> . average rmsds were computed as the unweighted means of individual structure-by-structure unweighted rmsds for the relevant atoms in the motifs that matched atoms in the structure. these average rmsds are shown in figure  <dig>  the unweighted estimated standard deviations of those means were used to infer the balanced intervals around the means containing 95% of the population of rmsd values  the inferred confidence intervals are shown in figure  <dig>  because rmsd's are inherently cut off to be non-negative, the inferred confidence intervals should only be taken as an approximate visual indicator of the distribution of likely values. the results for serine proteases, when considered relative to the results for all motif templates, indicate that serine proteases are highly conducive to functional assignment on the basis of structural motif analysis. this is likely the result of the catalytic site of serine proteases being highly conserved in both their spatial arrangement and their composition.

in preliminary work for a future study, we examined the sequence alignments for  <dig> structures that had three or four amino acid alignments with motif templates for which the rmsd was less than  <dig>  angstroms, but for which clustal omega  <cit>  showed 25% or less sequence identity. the visual comparison of sites confirmed the good rmsd values on these structures with low sequence homology.

performance comparison of template-based alignment programs
a total of  <dig> structures from  <dig> unique ec classes  were queried with promol, 3dmss-sites, and pdbsitescan, and the results are shown in figure  <dig>  level  <dig> matches indicate that the query was correctly identified by the first three numbers in the ec class ; level  <dig> matches were correctly identified by all four numbers for the correct ec class; and level  <dig> matches have the correct ec number to four digits, plus they identify all of the catalytic site residues.

the results from the three programs were comparable. 3dmss-sites provide slightly higher identification by level  <dig> matching the first three ec numbers at 43%, while promol matched at 39% and pdbsitescan at 24%. the level  <dig> matches  for 3dmss were again marginally higher than those of promol and pdbsitescan. 3dmss matched at 39%, promol at 37%, and pdbsitescan at 22%. promol did a slightly better job with level  <dig> matches . promol matched at 26%, 3dmss at 24%, and pdbsitescan barely matched any at 2%. it was clear from the comparison that 3dmss-sites is more effective with ec <dig> and ec <dig> classes. pdbsitescan is also successful with ec <dig> and ec <dig> classes, but only with level  <dig> and level  <dig> matches. promol gave better identifications for ec <dig> and ec <dig>  the low percentage of identity matches for some ec classes  was surprising in light of the selection criteria for the query structures. to summarize the comparison, 3dmss-sites is better at finding the larger families, while promol is better at identifying the exact residues for the active site. in our tests, the results from promol and 3dmss-sites were most closely related and differed significantly from the results obtained from pdbsitescan.

the strengths and limitations of template-based alignments with promol can be summarized as follows:

strengths
● a good place to start when assigning the function of a protein structure

● coverage of all  <dig> ec classes

● promol/pymol operates well on standard laptops/desktops running windows, mac or linux.

● it is possible to run multiple structures in batch mode on promol and collect the results at a later time.

● the interface offers flexibility for data collection  and motif template selection.

● the motif maker allows users to construct their own motif template libraries. this can be enzyme active sites, but in fact could include any motif consisting of collections of closely spaced amino acids in a protein.

● visual confirmation of alignments

● useful information: levenshtein distance, rmsd

● works well with certain classes 

limitations
● the rates of false positive and false negatives are too high for strictly automated analysis.

● structural homology of active sites is not fully determinative of activity. it still needs to be complemented with other bioinformatics tools, such as blast, to predict substrate specificity.

● the program runs fairly slowly .

● the true positive rate is particularly low with ec <dig> or ec <dig> 

● the templates are all based on enzyme active sites, so it does not account for sites involved in ligand binding, sites for protein interactions with other proteins, nucleic acids, carbohydrates or organelles.

● our motif templates all include side chain data. due to the limited data resolution of most macromolecular structures, these data are much less reliable than calpha, cbeta information in structures in the pdb  <cit> .

future plans
database- an sql database of search results is being developed to mitigate the computationally intensive nature of searching many query structures against many motif templates, as well as to limit the number of searches that need to be performed. this new implementation will improve the efficiency and speed of searches. the database will become an optional feature of promol installation. with the database installed, promol will first check for results in the database before performing a template-based alignment of the query against the library. the database will be manageable in size, since it will collate simple text files in the form of comma separated values.

expanded motif options – nearly 40% of all structures found in the pdb contains at least one metal ion. currently motifs only include amino acids; future motifs will include metal ions and other prosthetic groups such as hemes, expanding the number of active sites that can be created and queried. it is anticipated that this will increase the predictive power of promol.

jess motifs – motifs based on the jess templates from the catalytic site atlas are being created for promol. these motifs include both alpha and beta carbon atom templates and full atom templates. adding the jess motifs to the promol library will allow direct comparison of the promol motifs with the jess motifs.

in vitro testing – several proteins without a function specified in the pdb entry for which strong possible motif matches were identified by promol searches are currently being characterized biochemically  <cit> . in vitro testing will provide strong positive or negative support for the validity of results obtained from promol searches.

CONCLUSIONS
due to the large number of protein structures determined by pipeline projects such as the structural genomics initiative, there has been a large influx into the pdb of proteins with known structure but without clear functional annotation. promol has been designed as a tool to aid in the determination of these structures’ functions. this is accomplished by comparing motif templates developed from the three-dimensional positions of active site residues in a protein of known function to the entire structure of a query protein. improvements to promol over the course of development have increased the program’s usability. the motif library currently contains over  <dig> motif templates based on csa entries, and the resulting output has been improved by including rmsds in addition to levenshtein distances. in its current state, the true positive rate is about 60% with a false positive rate of 18%. the false positive results can be recognized by their significantly higher rmsd values compared to the true positives. results varied greatly by ec class. in-depth studies of serine proteases revealed a true positive rate greater than 74% for enzymes in this class . an evaluation of the rmsd values for the serine proteases revealed a clear distinction in performance when all four ec numbers matched, as opposed to having three ec numbers matching . in addition, users can compare alignments visually within pymol to verify their findings. a performance comparison between promol and 3dmss-sites, another template-based alignment program, revealed similar results with both programs. 3dmss-sites was more effective than promol for the broad-brush-stroke level  <dig> searches, while promol was more effective in the finer detailed level  <dig> searches . the similar performance of promol and 3dmss-sites may well relate to the fact that both programs use site definitions from the csa. the different results obtained with pdbsitescan may reflect their use of motif definitions based on the site records in the pdb files.

availability and requirements
project name: promol

project homepage:http://www.promol.org/

operating systems: linux, windows, mac os x

programming language: python

other requirements: python  <dig> / <dig> 

license: gpl2

abbreviations
pdb: protein data bank; csa: catalytic site atlas; ec: enzyme commision; psi: protein structure initiative; rmsd: root-mean-square deviation.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
corresponding author pac initiated project work on promol, along with bh and cw. mr implemented levenshtein distances in promol. ag and mo generated the results seen in figures  <dig> and  <dig>  mm implemented rmsd calculations and treewidgets in promol. gd and pac created the p motifs. pb performed test comparisons of promol and 3dmss-sites. hk compared promol with pdbsitescan. tm compared promol and blast results. cc contributed to software design and debugging. hjb contributed to the software design. all authors read and approved the final manuscript.

authors’ information
hjb: dept. of math and computer science, dowling college, shirley, ny,  <dig>  usa pac, gd: school of chemistry & materials science, rochester institute of technology, rochester, ny,  <dig>  usa. mo, ag, mm, mr, bh, cw, hk: thomas h. gosnell school of life sciences, rochester institute of technology, rochester, ny,  <dig>  usa. pb, tm: college of health sciences and technology, rochester institute of technology, rochester, ny,  <dig>  usa. cc: department of computer science, rochester institute of technology, rochester, ny,  <dig>  usa.

