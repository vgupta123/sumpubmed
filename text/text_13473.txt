BACKGROUND
within the past few years, random forests  <cit>  have become a popular and widely-used tool for non-parametric regression in many scientific areas. they show high predictive accuracy and are applicable even in high-dimensional problems with highly correlated variables, a situation which often occurs in bioinformatics. recently, the variable importance measures yielded by random forests have also been suggested for the selection of relevant predictor variables in the analysis of microarray data, dna sequencing and other applications  <cit> .

identifying relevant predictor variables, rather than only predicting the response by means of some "black-box" model, is of interest in many applications. by means of variable importance measures the candidate predictor variables can be compared with respect to their impact in predicting the response or even their causal effect . in this case a key advantage of random forest variable importance measures, as compared to univariate screening methods, is that they cover the impact of each predictor variable individually as well as in multivariate interactions with other predictor variables. for example, lunetta et al.  <cit>  find that genetic markers relevant in interactions with other markers or environmental variables can be detected more efficiently by means of random forests than by means of univariate screening methods like fisher's exact test. in the analysis of amino acid sequence data segal et al.  <cit>  also point out the necessity to consider interactions between sequence positions. tree-based methods like random forests can help identify relevant predictor variables even in such high dimensional settings involving complex interactions. therefore, the impact of different amino acid properties, some of which have been shown to be relevant in dna and protein evolution  <cit> , for predicting peptide binding is investigated in our application example in section  <dig>  however, we will find in this application example, as often in practical problems, that many predictor variables are highly correlated.

the issue of correlated predictor variables is prominent in, but not limited to, applications in genomics and other high-dimensional problems. therefore, it is important to note that in any non-experimental scientific study, where the predictor variable settings cannot be manipulated independently by the investigator, the distinction between the marginal and the conditional effect of a variable is crucial.

consider, for example, the apparent correlation between rates of complication after surgery and mortality in hospitals, that was investigated by silber and rosenbaum  <cit> . it is plausible to believe that the mortality rate of a hospital depends on the rate of complications – or even that the mortalities are caused by the complications. however, when severity of illness is taken into account, the correlation disappears  <cit> .

this phenomenon is known as a spurious correlation . in the hospital mortality example, the spurious correlation is caused by the fact that hospitals that treat many serious cases have both higher complication and mortality rates. however, when conditioning on severity of illness , mortality is no longer associated with complications.

if you consider this as a prediction problem, once the truly influential background variable  is known, it is clear that the remaining covariate  provides no or little additional information for predicting the response . from a statistical point of view, however, this distinction can only be made by a conditional importance measure.

we will point out throughout this chapter that correlations between predictor variables – regardless of whether they arise from small-scale characteristics, such as proximities between genetic loci in organisms, or large-scale characteristics, such as similarities in the clientele of hospitals – severely affect the original random forest variable importance measures, because they can be considered as measures of marginal importance, even though what is of interest in most applications is the conditional effect of each variable. to make this distinction more clear, let us shortly review previous suggestions from the literature for measuring or illustrating variable importance in classification and regression trees  and random forests: breiman  <cit>  displays the change in the response variable over the range of one predictor variable in "partial dependence plots" . this may remind of the interpretation of model coefficients in linear models. however, whether the effect of a variable is interpretable as conditional on all other variables, as in linear models, may not be guaranteed in other models – and we will point out explicitly below that this is not the case in classification trees or random forests.

the permutation accuracy importance, that is described in more detail in section  <dig> , follows the rationale that a random permutation of the values of the predictor variable is supposed to mimic the absence of the variable from the model. the difference in the prediction accuracy before and after permuting the predictor variable, i.e. with and without the help of this predictor variable, is used as an importance measure. the actual permutation accuracy importance measure will be termed "permutation importance" in the following, while the general concept of the impact of a predictor variable in predicting the response is termed "variable importance". the alternative variable importance measure used in random forests, the gini importance, is based on the principle of impurity reduction that is followed in most traditional classification tree algorithms. however, it has been shown to be biased when predictor variables vary in their number of categories or scale of measurement  <cit> , because the underlying gini gain splitting criterion is a biased estimator and can be affected by multiple testing effects  <cit> . therefore, we will focus on the permutation importance in the following, that is reliable when subsampling without replacement – instead of bootstrap sampling – is used in the construction of the forest  <cit> .

based on the permutation importance, schemes for variable selection and for providing statements of the "significance" of a predictor variable  have been derived: breiman and cutler  <cit>  suggest a simple significance test that, however, shows poor statistical properties  <cit> . an approach for variable selection in large scale screening studies is introduced by diaz-uriarte and alvarez de andres  <cit> , who suggest a backward elimination strategy. this approach has been shown to provide a reasonable selection of genes in many situations and is freely available in an r package  <cit> , that also provides different plots for comparing the performance on the original data set to those on a data set with randomly permuted values of the response variable. the latter mimics the overall null hypothesis that none of the predictor variables is relevant and may serve as a baseline for significance statements. a similar approach is followed by rodenburg et al.  <cit> . however, some recent simulation studies indicate that the performance of the variable importance measures may not be reliable when predictor variables are correlated: even though archer and kimes  <cit>  show in their extensive simulation study that the gini importance can identify influential predictor variables out of sets of correlated covariates in many settings, the preliminary results of the simulation study of nicodemus and shugart  <cit>  indicate that the ability of the permutation importance to detect influential predictor variables in sets of correlated covariates is less reliable than that of alternative machine learning methods and highly depends on the number of previously selected splitting variables mtry. these studies, as well as our simulation results, indicate that random forests show a preference for correlated predictor variables, that is also carried forward to any significance test or variable selection scheme constructed from the importance measures.

in this work we aim at providing a deeper understanding of the underlying mechanisms responsible for the observations of  <cit>  and  <cit> . in addition to this, we want to broaden the scope of considered problems to the comparison of the influence of correlated and uncorrelated predictor variables. for this type of problem we introduce a new, conditional permutation importance for random forests, that better reflects the true importance of predictor variables. our approach is motivated by the visual means of illustration introduced by nason et al.  <cit> : in their "cartscans" plots they not only display the marginal influence of a predictor variable, like the partial dependence plots of breiman  <cit> , but the influence of continuous predictor variables separately for the levels of two other, categorical predictor variables, namely a conditional influence plot.

as pointed out above, in the case of correlated predictor variables it is important to distinguish between conditional and marginal influence of a variable, because a variable that may appear influential marginally might actually be independent of the response when considered conditional on another variable. in this respect the approach of  <cit>  is an important improvement, but in its current form is only applicable for categorical covariates. therefore our aim in this work is to provide a general scheme that can be used both for illustrating the effect of a variable and for computing its permutation importance conditional on relevant covariates of any type. while the conditioning scheme of  <cit>  can be considered as a full-factorial cross-tabulation based on two categorical predictor variables, our conditioning scheme is based on a partition of the entire feature space that is determined directly by the fitted random forest model.

in the following section  <dig> we will outline how ensembles of classification trees are constructed and illustrate in a simulation study why correlated predictor variables tend to be overselected. then we will review the construction of the original permutation importance before we introduce a new permutation scheme that we suggest for the construction of a conditional permutation importance measure. the advantage of this measure over the currently-used one is illustrated in the results of our simulation study in section  <dig> and in the application to peptide-binding data in section  <dig> 

 <dig> methods
in random forests and the related method bagging, an ensemble of classification trees is created by means of drawing several bootstrap samples or subsamples from the original training data and fitting a single classification tree to each sample. due to the random variation in the samples and the instability of the single classification trees, the ensemble will consist of a diverse set of trees. for prediction, a vote  over the predictions of the single trees is used and has been shown to highly outperform the single trees: by combining the prediction of a diverse set of trees, bagging utilizes the fact that classification trees are instable but on average produce the right prediction. this understanding has been supported by several empirical studies  and especially the theoretical results of bühlmann and yu  <cit> , who could show that the improvement in the prediction accuracy of ensembles is achieved by means of smoothing the hard cut decision boundaries created by splitting in single classification trees, which in return reduces the variance of the prediction.

in random forests, another source of diversity is introduced when the set of predictor variables to select from is randomly restricted in each split, producing even more diverse trees. in addition to the smoothing of hard decision boundaries, the random selection of splitting variables in random forests allows predictor variables that were otherwise outplayed by their competitors to enter the ensemble. even though these variables may not be optimal with respect to the current split, their selection may reveal interaction effects with other variables that otherwise would have been missed and thus work towards the global optimality of the ensemble.

the classification trees, from which the random forests are built, are built recursively in that the next splitting variable is selected by means of locally optimizing a criterion  within the current node. this current node is defined by a configuration of predictor values, that is determined by all previous splits in the same branch of the tree . in this respect the evaluation of the next splitting variable can be considered conditional on the previously selected predictor variables, but regardless of any other predictor variable. in particular, the selection of the first splitting variable involves only the marginal, univariate association between that predictor variable and the response, regardless of all other predictor variables. however, this search strategy leads to a variable selection pattern where a predictor variable that is per se only weakly or not at all associated with the response, but is highly correlated with another influential predictor variable, may appear equally well suited for splitting as the truly influential predictor variable. we will illustrate this point in more detail in the following simulation study.

 <dig>  simulation design
a simulation study was set up in order to illustrate the treatment of correlated predictor variables in ensemble methods based on classification trees. data sets were generated according to a linear model with twelve predictor variables yi = β1·xi, <dig> + ⋯ + β12·xi, <dig> + εi, with εi~i.i.d.n. the predictor variables were sampled from a multivariate normal distribution x <dig> ..., x <dig> ~ n where the covariance structure Σ was chosen such that all variables have unit variance σj, j =  <dig> and only the first four predictor variables are block-correlated with σj, j' =  <dig>  for j ≠ j' ≤  <dig>  while the rest were independent with σj, j' =  <dig>  of the twelve predictor variables only six were influential, as indicated by their coefficients in table  <dig>  a covariance structure of this type was already used for illustrating the effect of correlations by archer and kimes  <cit> . however, while their study mainly aimed at identifying one influential predictor out of a correlated set, here we also want to compare the importance scores of predictor variables with equally large coefficients, while some of the predictor variables are correlated and others are not: x <dig> ..., x <dig> and x <dig> ..., x <dig> share the same coefficient pattern, while only x <dig> ..., x <dig> are correlated. from the generated data sets, random forests were built with the cforest function from the party package  <cit>  in the r system for statistical computing  <cit> . different values for the parameter mtry, that regulates the number of randomly preselected splitting variables, were considered to be able to investigate the mechanisms responsible for the results of nicodemus and shugart  <cit> . default settings were used for all other parameters.

 <dig>  illustration of variable selection
we find in the panel on the left hand side of figure  <dig> that in the first splits of all trees, where the variables are considered only marginally with respect to their association to the response, those variables  correlated with highly influential predictors are selected equally often as the highly influential predictor variables  for mtry =  <dig>  where no competitors are available and the correlated predictors can serve as replacements of the influential ones . when mtry increases and the highly influential variables may be available as predominant competitors in some splits those variables  correlated with highly influential predictors are selected less often than the highly influential correlated ones  themselves, but more often than even the highly influential uncorrelated ones . when we consider all splits of all trees in the panel on the right hand side of figure  <dig>  the correlated predictors loose most of their advantage because variable selection is now conditional on the previously chosen variables in the same branch of the tree, that may include the truly influential correlated predictors. however, since variable selection is not conditional on all  variables, there is still a preference for the correlated variables with low and zero coefficients , with a similar dependency on mtry.

this selection pattern is due to the locally optimal variable selection scheme used in recursive partitioning, that considers only one variable at a time and conditional only on the current branch. however, since this characteristic of tree-based methods is a crucial means of reducing computational complexity , it shall remain untouched here.

 <dig>  the permutation importance
the rationale of the original random forest permutation importance is the following: by randomly permuting the predictor variable xj, its original association with the response y is broken. when the permuted variable xj, together with the remaining non-permuted predictor variables, is used to predict the response for the out-of-bag observations, the prediction accuracy  decreases substantially if the original variable xj was associated with the response. thus, breiman  <cit>  suggests the difference in prediction accuracy before and after permuting xj, averaged over all trees, as a measure for variable importance, that we formalize as follows: let ℬ¯ be the out-of-bag  sample for a tree t, with t ∈ { <dig> ..., ntree}. then the variable importance of variable xj in tree t is

  vi=∑i∈ℬ¯i)|ℬ¯|−∑i∈ℬ¯i)|ℬ¯| 

where y^i=f is the predicted class for observation i before and y^i,πj=f is the predicted class for observation i after permuting its value of variable xj, i.e. with xi,πj=,j,xi,j+ <dig> ...,xi,p).  =  <dig> by definition, if variable xj is not in tree t.) the raw variable importance score for each variable is then computed as the mean importance over all trees: vi=∑t=1ntreevintree

in standard implementations of random forests an additional scaled version of the permutation importance , that is achieved by dividing the raw importance by its standard error, is provided. however, since recent results  <cit>  indicate that the raw importance vi has better statistical properties, we will only consider the unscaled version here.

 <dig>  types of independence
we know that the original permutation importance overestimates the importance of correlated predictor variables. part of this artefact may be due to the preference of correlated predictor variables in early splits as illustrated in section  <dig> . however, we also have to take into account the permutation scheme that is employed in the computation of the permutation importance. in the following we will first outline what notion of independence corresponds to the current permutation scheme of the random forest permutation importance. then we will introduce a more sensible permutation scheme that better reflects the true impact of predictor variables.

it can help our understanding to consider the permutation scheme in the context of permutation tests  <cit> : usually a null hypothesis is considered that implies the independence of particular  variables. under this null hypothesis some permutations of the data are permitted because they preserve the structure determined by the null hypothesis. if, for example, the response variable y is independent from all predictor variables  a permutation of the  values of y affects neither the marginal distribution of y nor the joint distribution of x <dig> ..., xp and y, because the joint distribution can be factorized as p = p·p under the null hypothesis. if, however, the null hypothesis is not true, the same permutation will lead to a deviation in the joint distribution or some reasonable test statistic computed from it. therefore, a change in the distribution or test statistic caused by the permutation can serve as an indicator that the data do not follow the independence structure we would expect under the null hypothesis.

with this framework in mind, we can now take a second look at the random forest permutation importance and ask: under which null hypothesis would this permutation scheme be permitted? if the data are actually generated under this null hypothesis the permutation importance will be  zero, while any deviation from the null hypothesis will lead to a change in the prediction accuracy, that is used as a test statistic here, and thus will be detectable as an increase in the value of the permutation importance.

we find that the original permutation importance, where one predictor variable xj is permuted against both the response y and the remaining  predictor variables z = x <dig> ..., xj- <dig>  xj+ <dig> ..., xp as illustrated in the left panel of figure  <dig>  corresponds to a null hypothesis of independence between xj and both y and z:
permutation scheme for the original marginal  and for the newly suggested conditional  permutation importance.

  h <dig> : xj ⊥ y, z or equivalently xj ⊥ y ∧ xj ⊥ z 

under this null hypothesis the joint distribution can be factorized as

  p=h0p⋅p. 

what is crucial when we want to understand why correlated predictor variables are preferred by the original random forest permutation importance is that a positive value of the importance corresponds to a deviation from this null hypothesis – that can be caused by a violation of either part: the independence of xj and y, or the independence of xj and z. however, from these two aspects only one is of interest when we want to assess the impact of xj to help predict y, namely the question if xj and y are independent. this aim, to measure only the impact of xj on y, would be better reflected if we could create a measure of deviation from the null hypothesis that xj and y are independent under a given correlation structure between xj and the other predictor variables, that is determined by our data set. to meet this aim we suggest a conditional permutation scheme, where xj is permuted only within groups of observations with z = z, to preserve the correlation structure between xj and the other predictor variables as illustrated in the right panel of figure  <dig> 

this permutation scheme corresponds to the following null hypothesis

  h <dig> : |z, 

where the conditional distribution can be factorized under the null hypothesis as

  p=h0p⋅porp=h0p, 

which is the definition of conditional independence.

in the special case where xj and z are independent both permutation schemes will give the same result, as illustrated by our simulation results below. when xj and z are correlated, however, the original permutation scheme will lead to an apparent increase in the importance of correlated predictor variables, that is due to deviations from the uninteresting null hypothesis of independence between xj and z.

 <dig>  a new, conditional permutation scheme
technically, any kind of conditional assessment of the importance of one variable conditional on another one is straightforward whenever the variables to be conditioned on, z, are categorical as in  <cit> . however, for our aim to conditionally permute the values of xj within groups of z = z, where z can contain potentially large sets of covariates of different scales of measurement, we want to supply a grid that  is applicable to variables of different types,  is as parsimonious as possible, but  is also computationally feasible. our suggestion is to define the grid within which the values of xj are permuted for each tree by means of the partition of the feature space induced by that tree. the main advantages of this approach are that this partition was already learned from the data during model fitting, contains splits in categorical, ordered and continuous predictor variables and can thus serve as an internally available means for discretizing the feature space.

in principle, any partition derived from a classification tree can be used to define the permutation grid. here we used partitions produced by unbiased conditional inference trees  <cit> , that employ binary splitting as in the standard cart algorithm  <cit> . this means that, if k is the number of categories of an unordered or ordered categorical variable, up to k, but potentially less than k, subsets of the data are separated.

continuous variables are treated in the same way: every binary split in a variable provides one or more cutpoints, that can induce a more or less fine graded grid on this variable. by using the grid resulting from the current tree we are able to condition in a straightforward way not only on categorical, but also on continuous variables and create a grid that may be more parsimonious than the full factorial approach of  <cit> . only in one aspect we suggest to leave the recursive partition induced by a tree: within a tree structure, each cutpoint refers to a split in a variable only within the current node . however, for ease of computation, we suggest that the conditional permutation grid uses all cutpoints as bisectors of the sample space . this leads to a more fine graded grid, and may in some cases result in small cell frequencies inducing greater variation . from a theoretical point of view, however, conditioning too strictly has no negative effect, while a lack of conditioning produces artefacts as observed for the unconditional permutation importance.

in summary the conditional permutation importance is derived as follows:

 <dig>  in each tree compute the oob-prediction accuracy before the permutation as in equation 1: ∑i∈ℬ¯i)|ℬ¯|.

 <dig>  for all variables z to be conditioned on: extract the cutpoints that split this variable in the current tree and create a grid by means of bisecting the sample space in each cutpoint.

 <dig>  within this grid permute the values of xj and compute the oob-prediction accuracy after permutation: ∑i∈ℬ¯i)|ℬ¯|, where y^i,πj|z=f is the predicted classes for observation i after permuting its value of variable xj within the grid defined by the variables z.

 <dig>  the difference between the prediction accuracy before and after the permutation accuracy again gives the importance of xj for one tree . the importance of xj for the forest is again computed as an average over all trees.

to determine the variables z to be conditioned on, the most conservative – or rather overcautious -strategy would be to include all other variables as conditioning variables, as was indicated by our initial notation. a more intuitive choice is to include only those variables whose empirical correlation with the variable of interest xj exceeds a certain moderate threshold, as we do with the pearson correlation coefficient for continuous variables in the following simulation study and application example. for the more general case of predictor variables of different scales of measurement the framework promoted by hothorn et al.  <cit>  provides p-values of conditional inference tests as measures of association. the p-values have the advantage that they are comparable for variables of all types and can serve as an intuitive and objective means for selecting the variables z to be conditioned on in any problem. another option is to let the user himself select certain variables to condition on, if, e.g., a hypothesis of interest includes certain independencies.

note however, that neither a high number of conditioning variables nor a high overall number of variables in the data set poses a problem for the conditional permutation approach: the permutation importance is computed individually for each tree and then averaged over all trees. correspondingly, the conditioning grid for each tree is determined by the partition of that particular tree only. thus, even if in principle the stability of the permutation may be affected by small cell counts in the grid, practically the complexity of the grid is limited by the depth of each tree.

the depth of the tree, however, does not depend on the overall number of predictor variables, but on various other characteristics of the data set  in combination with tuning parameter settings . lin and jeon  <cit>  even point out that limiting the depth of the trees in random forests may prove beneficial w.r.t. prediction accuracy in certain situations.

another important aspect is that the conditioning variables, especially if there are many, may not necessarily appear all together with the variable of interest in each individual tree, but different combinations may be represented in different trees if the forest is large enough.

 <dig> 
RESULTS
for the simulation design introduced in section  <dig> , figure  <dig> shows the median and interquartile range  of the importance scores of each variable for the different permutation schemes: the original marginal permutation and the newly suggested conditional permutation scheme. the set of variables z to be conditioned on was chosen here to include all variables with an empirical correlation r ≥ . <dig> 

we find that the pattern of the coefficients induced in the data generating process is not reflected by the importance values computed with the ordinary permutation scheme. with this scheme the importance scores of the correlated predictor variables are highly overestimated. this effect is most pronounced for small values of mtry, because correlated variables have a higher chance to end up in a top position in a tree when their correlated competitors are not available.

for the conditional permutation scheme the importance scores better reflect the true pattern: the correlated variables x <dig> and x <dig> with the same coefficient show an almost equal level of importance as the uncorrelated variables x <dig> and x <dig>  while the importance of x <dig> and x <dig>  that are correlated but have a lower or zero coefficient, decrease. for the variables with small and zero coefficients we still find a difference between the correlated and uncorrelated variables, such that for the correlated variables the importance values are still overestimated – however to a much lesser extent than with the unconditional permutation scheme. this remaining disadvantage of the uncorrelated predictor variables may be due to the fact that for most values of mtry these variables are selected less often and in lower positions in the tree  and thus have a lower chance to produce a high importance value. the degree of the preference of correlated predictor variables also depends on the choice of mtry and is most pronounced for small values of mtry, as expected from the selection frequencies. on the other hand, we find in figure  <dig> that the variability of the importance increases for large values of mtry, and the prediction accuracy is expected to be higher for smaller values of mtry. another interesting feature of the conditional permutation scheme is that the variability of the conditional importance is lower than that of the unconditional importance within each level of mtry.

with respect to the identifiability of few influential predictors from a set of correlated and other noise variables , we can see from the importance scores for x <dig> ..., x <dig> in comparison to that of x <dig> that the conditional importance reflects the same pattern as the unconditional importance, however with a notably smaller variation that may improve the identifiability. in the comparison of potentially influential correlated and uncorrelated predictor variables on the other hand, the conditional importance is much better suited as a means of comparison than the original importance. for piecewise constant functions, that can be more easily addressed with recursive partitioning methods, the beneficial effect of conditioning is even stronger than presented here.

 <dig> example: relating amino acid sequence to phenotype in peptide-binding data
as an application example we consider peptide-binding data that were previously analysed with recursive partitioning techniques by segal et al.  <cit> . the data set includes  <dig> variables for a total of n =  <dig> amino acid sequences. the response to be predicted is a binding property that can be coded as a binary variable . the remaining variables available in this data set correspond to  <dig> amino acid properties for each of the eight considered amino acid positions. these  <dig> properties include, e.g. volume, polarity, bulkiness, flexibility, aromaticity, and charge, yielding in total  <dig> continuous predictor variables. a random forest with  <dig> trees and mtry =  <dig>  was fit to the data set. the permutation importance was computed either with the unconditional or the conditional permutation scheme. the resulting importance scores are displayed in figure  <dig> . the few predictor variables whose importance scores reach highest or even exceed the plotting area would be selected for further analysis by any means. however, for some of the variables with the next smaller importance scores the ranking strongly depends on the permutation scheme. we will focus our illustration on the ranking of three exemplary predictor variables, "h2y8", "flex8" and "pol3", that are highlighted in figure 4: we find in the unconditional view in the top panel of figure  <dig> that "h2y8" and "flex8" appear to be of higher importance than "pol3" . however, in the conditional view in the bottom panel of figure  <dig> their order is reversed and it turns out that "pol3" is really more important than "h2y8" and "flex8". this change in the ranks of the predictor variables is most pronounced for large mtry as expected, but similar effects can be observed for smaller values.

when exploring the reason why the importances of "h2y8" and "flex8" are moderated by conditioning, while the importance of "pol3" remains almost constant, we find that "h2y8" and "flex8" are correlated with influential covariates, while "pol3" is only correlated with non-influential covariates. for example, "h2y8" is highly correlated with the polarity at position eight "pol8", that is indicated by the * symbol in in figure  <dig>  the variable "pol8" shows a high importance  and was already found to be influential by segal et al.  <cit> , who note that it may approximate an effect of the eighth position in the original sequence data, while the results of xia and li  <cit>  indicate an effect of the amino acid property polarity itself.

this shows that importance rankings in data sets that contain complex correlations between predictor variables can be severely affected by the underlying permutation scheme: when the conditional permutation is used, the importance scores of correlated predictor are moderated such that the truly influential predictor variables have a higher chance to be detected.

 <dig> discussion and 
CONCLUSIONS
we have investigated the sources of preferences in the variable importance measures of random forests in favor of correlated predictor variables and suggested a new, conditional permutation scheme for the computation of the variable importance measure. this new, conditional permutation scheme uses the partition that is automatically provided by the fitted model as a conditioning grid and reflects the true impact of each predictor variable better than the original, marginal approach. even though the conditional permutation cannot entirely eliminate the preference for correlated predictor variables, it has been shown to provide a more fair means of comparison that can help identify the truly relevant predictor variables. our simulation results also illustrate the impact of the choice of the random forest tuning parameter mtry: while the default value mtry = p is often found to be optimal with respect to prediction accuracy in empirical studies  <cit> , our findings indicate that in the case of correlated predictor variables different values of mtry should be considered. however, it should also be noted that any interpretation of random forest variable importance scores can only be sensible when the number of trees is chosen sufficiently large such that the results produced with different random seeds do not vary systematically. only then it is assured that the differences between, e.g., unconditional and conditional importance are not only due to random variation.

the conditional permutation importance will be freely available in the next release of the party package for recursive partitioning  <cit>  in the r system for statistical computing  <cit> .

authors' contributions
cs defined the research question, suggested the conditional variable importance, set up and performed the simulation experiments and drafted the manuscript. a–lb analyzed the peptide-binding data. tk, ta and az contributed to the theoretical understanding and presentation of the problem. all authors contributed to and approved the final version of the manuscript.

