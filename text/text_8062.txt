BACKGROUND
genomic duplication plays important role in evolution of life on earth. this phenomenon have been extensively studied in the last decades for plant, bacterial and many other genomes . duplication events can involve individual genes, genomic segments or whole genomes. while the reconstruction of evolutionary history of individual genes is generally well established , still little is known on the inference of large genomic duplications that can span through thousands of genes families.

in this approach we propose to use the model of reconciliation in which a gene tree is reconciled with its species tree. the concept of reconciliation was introduced by goodman  <cit>  and formalized by page  <cit>  in the context of reconciling potential incongruence between a rooted gene family tree and its species tree. in this model, differences between gene and species trees are explained in terms of evolutionary events such as gene duplication, gene loss and speciation. reconciliation can be interpreted as the embedding of a gene tree into a species tree where these evolutionary events, located in the species tree, induce a biologically consistent scenario  <cit> . tree reconciliation has been extensively studied in recent decades in many theoretical and practical contexts including supertree inference, error correction and hgt detection . in the process of reconciliation, which is relatively simple from computational point of view, each gene from a single gene family is mapped into the species tree and it is classified as a single gene duplication or related to speciation. however, the problem becomes much more complex, when a gene duplication is a part of large genomic duplications, called multiple gene duplication episode, in which parts of a genome are duplicated. in fact, it is known that a large duplication event is usually followed by many gene losses and gene rearrangements. in consequence, the reconstruction of large gene duplication events may be difficult.

the first approach to detect multiple gene duplication episodes from a collection of rooted gene trees was proposed by guigó et al.  <cit> . in the model, for a given collection of rooted gene trees and a rooted species tree, the authors proposed heuristic to aggregate single gene duplication events into a large gene duplication. this approach was formalized and refined by page and cotton  <cit> . they formally defined the problem of episode clustering  as the problem of locating the minimal number of locations in the species tree, where all duplications from the input gene trees can be placed. this model was applied in the context of the supertree problem by fellows  <cit> . burleigh et al.  <cit>  and bansal and eulenstein  <cit>  proposed the first polynomial time solutions for two types of the multiple gene duplication problems: the episode clustering  and a more general variant of clustering called minimum episodes . finally, luo et al.  <cit>  proposed linear time and space algorithms to these problems.

while the classical reconciliation model is applicable to rooted trees only, most standard phylogenetic inference methods, like maximum likelihood, maximum parsimony or neighbour joining, infer unrooted gene family trees, and it is often difficult, to identify credible rootings. for example, outgroup rooting can result in incorrect rootings when evolutionary events cause heterogeneity in the gene trees, and rooting gene trees under the molecular clock assumption, or similarly by using midpoint rooting, also can result in error when there is a molecular rate variation throughout the tree  <cit> . tree reconciliation have been successfully extended to reconcile an unrooted gene tree with a rooted species tree by seeking a rooting of the unrooted gene tree that invokes the minimum number of evolutionary events such as gene duplications  or gene duplications and losses , in the context of a given species tree  <cit> . it is known that the rooting edges with minimal d or dl cost, induce a full subtree, called plateau, in the unrooted gene tree  <cit> .

in this article we present the first solution to the open problem  <cit>  of unrooted episode clustering, that is, the problem of episode clustering where the input consists of unrooted gene trees. we show that for a given set of unrooted gene trees and a species tree we can solve the unrooted episode clustering by reducing it to the rooted episode clustering problem that has a linear time complexity. our solutions require a linear time preprocessing and a creation of at most 1+2k collections of rooted gene trees, that is, instances of rooted ec problem, where k is the number of input gene trees having a special topology located in the plateau of the duplication cost . usually k represents a small fraction of the whole input, thus, this condition significantly reduces the complexity. in other words, we show that the problem of unrooted episode clustering is fixed parameter tractable. finally, in a number of empirical computational experiments we show that despite the exponential worst case complexity our algorithm is able to resolve instances of the problem after the verification of at most two rooted datasets. in consequence, our solution can be efficiently applied to locate duplication clusters in collections of unrooted gene trees.

RESULTS
basic notation
a species tree is a rooted binary tree with leaves uniquely labeled by the names of species. throughout this work, the species tree is fixed, therefore, we use s to denote it. a rooted gene tree is a rooted binary tree with leaves labeled by the names of species. the set of species present in t is denoted by ℒ. the rooted tree  has two subtrees t <dig> and t <dig> whose roots are children of the tree root. additionally, for nodes a and b, a≼b means that a and b are on the same path from the root, with b being closer to the root than a. we write a≺b if a≼b and a≠b. the root of a tree t we denote by root.

let t=〈vt,et〉 be a rooted gene tree such that ℒ⊆ℒ. the least common ancestor  mapping, mt:vt→vs, is defined as follows. if v is a leaf in t then mt is the leaf in s labeled by the label of v. when v is an internal node in t having two children a and b, then mt is the least common ancestor of mt and mt in s. an internal node g∈vt is called a duplication if mt=mt for a child a of g. the duplication cost, denoted by d, is the total number of duplications in t. each non-duplication node of t we call a speciation. the total number of gene losses required to reconcile t and s can be defined by: l=2d+∑gis internal,a,bchildren ofg,mt∥−2), where ∥a,b∥ is the number of edges on the path connecting a and b in s. finally, we can define the duplication-loss cost of reconciling a rooted gene tree t and a species tree s as follows: dl=d+l  <cit> . examples of the reconciliation are depicted in fig.  <dig> 
fig.  <dig> gene and species tree reconciliation. left: the lca-mapping between a gene tree g and a species tree s shown for internal nodes. the decoration of nodes indicates gene duplication events. right: an embedding of g into s. to reconcile these trees  <dig> gene duplications and  <dig> gene losses  are required, i.e., d= <dig> and dl= <dig>  see also g
4∗ in fig. 3




unrooted reconciliation
the unrooted gene tree is an undirected acyclic connected graph in which each node has degree  <dig>  or  <dig> , and the leaves are labeled by the names of species. for an unrooted gene tree g=〈vg,eg〉 and an edge e∈eg, by ge, we denote the rooting of g obtained from g by placing the root on e. such a rooting induces the duplication cost d. we call d-minimal, the rooting or edges having the minimal duplication cost. it follows from the theory of unrooted reconciliation  <cit>  that the set of d-minimal edges, called d-plateau, is a full subtree of g. the same property holds for the dl-plateau, that is, the set of edges with the minimal duplication-loss cost. we use a similar notation for dl-minimal edges, rootings and so on. the most important property of these plateaus is below.

theorem <dig> .
dl-plateau is a subgraph of d-plateau.

without loss of generality we assume that every root of a gene tree is mapped into the root of s, denoted by ⊤, and both trees are non-trivial. an edge e=〈v,w〉 of g is empty if the root of ge is a speciation, i.e., mge≠⊤≠mge. we call edouble if mge=⊤=mge. otherwise, e is called single. a single edge e is called v-incoming or w-outgoing if mge≠⊤=mge.

let v be an internal node of g, then a star with a centerv consists of three edges, denoted by ea, eb and ec, sharing v and incident to nodes a, b and c, respectively . the are several types of possible star topologies based on the above classification of edges: the s <dig> star has one v-incoming edge and two v-outgoing edges, the s <dig> star has exactly two v-outgoing edges and one empty edge, the s <dig> star has two v-outgoing edges and one double edge, the s <dig> star all  <dig> edges are double, and the s <dig> star has one v-outgoing edge and two double edges. the star topologies are depicted in fig.  <dig> 
fig.  <dig> types of stars. star topology with the center v, types of edges and stars



theorem <dig> .
for a given unrooted gene tree g, we have 
either g has exactly one empty edge or g has at least one double edge,

if the dl-plateau of g consists of exactly one edge, then this edge is either empty or double, and all other edges are single.

if the dl-plateau of g has more than one edge, then it contains all edges present in stars s <dig> and s <dig>  and all other edges are single.



note that if a gene has an empty edge, then it has at most two stars s <dig> .
fig.  <dig> an example of unrooted episode clustering. a species tree s and four unrooted gene trees g
 <dig>  g
 <dig>  g
 <dig>  g
 <dig> with all d-minimal rootings. for every gene tree two star topologies are shown: one for the duplication-loss cost  and one for the duplications cost . every edge of a gene tree is decorated with the corresponding cost of rooting. every duplication node in rootings of gene trees is decorated by all possible locations  of its duplication cluster from optimal solutions of single-uec. note that the rooting g
4∗, whose lca-mappings are shown in fig.  <dig>  has two duplications at ) and ) that are raised  to create two duplications clusters. let {g
 <dig> g
4} be an instance of uec problem. then, the ⊤-cluster, that is present in g
2∗, contributes to the optimal solution. in such a case, the solution is induced by one of the two instances of ec problem: {g
2∗,g
 <dig> } or {g
2∗,g
 <dig> }. this property is proved in theorem  <dig> and in lemma 6



episode clustering problems
to model gene duplication episodes we allow to relocate a gene duplication from its lca-mapping location to one of its ancestors. in other words, we introduce mappings representing evolutionary scenarios that can differ from the scenario defined by the lca-mapping. additionally, we require that the total number of gene duplications is minimal. to ensure biological correctness of such mappings, we introduce several conditions, e.g., time order preservation.

a mapping fg:vg→vs is called valid if the following conditions are satisfied: 
fg≼fg if a≼b ,

fg=mg for any speciation node a ,

fg≽mg for any duplication node a ,

fg≺mg for any speciation node b such that a≺b .



it can be shown that every valid mapping uniquely defines an evolutionary scenario represented by a dls-tree  <cit> . additionally, every dls-tree obtained from a valid mapping can be transformed into the optimal evolutionary scenario , by a sequence of tmove  transformations. please refer to  <cit>  for more details on formal modeling of evolutionary scenarios. observe, that the above model is more general than the model from  <cit> .

we denote by dup, the set of all duplication nodes in t. let g <dig> g <dig> …,gn be a collection of rooted gene trees. assume that, for every i∈{ <dig> ,…,n}, fi is a valid mapping between gi and the species tree s. every element s∈⋃ifi denotes the location of multiple gene duplication events in s. such locations will be called duplication episodes. a duplication cluster for s is the set of all gene duplications present in gi’s that are mapped to s. by ⊤-cluster we denote the duplication cluster whose elements are mapped to ⊤.

problem <dig> ).
given a collection of rooted gene trees g <dig> g <dig> …,gn and a species tree s. compute the minimal number of duplication episodes, denoted by ec, in the set of all valid mappings f <dig> f <dig> …,fn such that fi:vgi→vs.

this problem can be solved in linear-time and space  <cit> . in this article we solve the following problem.

problem <dig> ).
given a collection of unrooted gene trees g <dig> g <dig> …,gn and a species tree s. compute the minimal ec in the set of rooted gene trees {t <dig> t <dig> …,tn} such that ti is a rooting obtained from gi by placing the root on the edge from the d-plateau.

observe, that we allow rootings only in the d-plateau. otherwise, the total number of gene duplications is not minimal. by single-uec we denote the problem uec for a single unrooted gene tree, i.e., when n= <dig>  every edge in an unrooted gene tree that induces the optimal solution for single-uec will be called optimal . for convenience, we use ec instead of ec.

episodes in a gene tree with an empty edge
in this section we solve single-uec problem for the case when the input gene tree has one empty edge.

let v be a center of the star that contains the only dl-plateau edge in a gene tree g. this star induces three rooted subtrees ta, tb and tc rooted at neighbours a, b and c, respectively, as indicated in fig.  <dig>  let  be the indicator function, that is,  is  <dig> if p is satisfied and  <dig> otherwise.

lemma <dig> 
let a <dig> a <dig> a <dig> …,an+ <dig>  be the path of d-plateau nodes connecting v=a <dig> and an+1∈ta in g. let gn be the d-minimal rooting induced by the edge 〈an,an+1〉. if e∗=〈v,c〉 is empty then



where t <dig> t <dig> …,tn+ <dig> are subtrees of ta such that ta=…)) and the root of tn+ <dig> is an+ <dig> .
fig.  <dig> trees from lemma  <dig> and  <dig>  a gene tree g  and the rootings of g  from lemma  <dig> and lemma 2



proof.
first we show that v is a speciation node in gn. it follows from the fact that v is a center of s <dig> star and 〈v, b〉 is single. thus, mn=⊤, mn≺⊤ and mn≺⊤, where mn is the lca-mapping for gn. from the fact that mn=⊤ we conclude that all nodes on the path connecting the parent of v with the root in gn are mapped to ⊤, therefore, they are duplications.

lets consider the number of duplication clusters in gn. we have the ⊤-cluster composed of the duplication nodes a <dig> a <dig> …,an,root mapped to ⊤. both tc and tb in gn are under speciation node v so their clusters are disjoint with the ⊤-cluster. finally, if the root of some ti is a duplication then its cluster can be merged with the ⊤-cluster. therefore, the ⊤-cluster contributes to ec only if the root of ti is a speciation for every i. now, it is easy to conclude the final formula.

lemma <dig> 
under the assumptions from the previous lemma, we have



where g∗ is the rooting induced the empty edge e∗=〈v,c〉 .

proof.
both rootings gn and g∗ are d-minimal. hence, d=d and, in consequence, the number of duplication nodes in a={a <dig> a <dig> …,an,v,root} in g∗ and b={a <dig> a <dig> …,an,v,root} in gn are equal. it follows from the properties of star s <dig>  that in gn node v is a speciation mapped to ⊤. hence, all predecessors of v are duplications in gn. thus, we have exactly n+ <dig> duplications in b. on the other hand, by star s <dig>  root is a speciation, therefore all remaining nodes in a are duplications.

we conclude that gn has the ⊤-cluster containing duplications from a, and g∗ has a cluster  containing duplications from b, respectively. these two clusters we call high clusters. if the root of one of ti’s is a duplication, then it can be merged with the high cluster in both rootings. otherwise, if every root of these subtrees is a speciation then the high cluster is disjoint with clusters from t <dig> t <dig> …,tn+ <dig>  moreover, if b is a duplication then the high cluster contains b in g∗. however, in gn the cluster of b will be disjoint with the ⊤-cluster due to the speciation node v. combining the above observations we obtain our formula.

lemma  <dig> and lemma  <dig> complete the case of empty rootings. we proved that rooting on empty edge has the best ec.

episodes in a gene tree with a double edge
we start with two technical lemmas on the properties of the plateaus.

lemma <dig> 
if the dl-plateau consists of exactly one double edge then the d-plateau and the dl-plateau are equal.

proof.
let 〈v,a〉 be the dl-plateau edge . it follows from the property of star s <dig> that both v and a are mapped to ⊤ in the dl-minimal rooting and their children  are mapped below ⊤. hence, the root is a duplication, while v and a are speciation nodes. now, it is easy to show that rooting on edge 〈v,b〉  induces one additional gene duplication at v. we conclude that the only edge with the minimal duplication cost is 〈v,a〉.

we write that a node g from unrooted gene tree g is a super-duplication, if g is a duplication in every rooting of g. please recall, that the plateau is a subtree of a gene tree, thus a leaf of the d-plateau may refer to an internal node of a gene tree. for example, in fig.  <dig>  the d-plateau of g <dig> has four leaves: one is an internal node of g <dig> and others, labeled a, c, e, are leaves of g <dig> 

lemma <dig> 
if the dl-plateau has a double edge then 
every leaf of the d-plateau is a speciation in every rooting from the d-plateau,

and every internal node of the d-plateau is a super-duplication.



proof.
for the first part of the proof, let us assume that v is a leaf of the d-plateau. by using the notation from fig.  <dig>  let v be a center of a star such that 〈v,a〉 belongs to the d-plateau. assume that v is a duplication in every d-minimal rooting. then, the d-minimal rooting g〈v,a〉 has one duplication in v. the edge 〈v,b〉 does not belong to d-plateau, therefore, the rooting g〈v,b〉 has at least one more duplication than g〈v,a〉. hence, g〈v,b〉 has two duplications in v and in the root. moreover, the root of g〈v,a〉 is not a duplication. however, this is possible only when ta and tv are mapped below ⊤, thus the 〈v,a〉 is an empty edge, which is a contradiction with theorem  <dig>  this completes the first part of the proof.

next, if the dl-plateau consists of exactly one double edge, then, by lemma  <dig> the property holds trivially. now, we assume that the dl-plateau has more than one edge. we show that every internal node v of the dl-plateau is a super-duplication. from theorem  <dig> we know that v is incident to at least two double edges. hence, in any rooting at least one of its children is mapped to ⊤. we conclude that v is a duplication mapped to ⊤.

let us consider a path p=v <dig> v <dig> …,vn  connecting an internal node v <dig> from the dl-plateau with a leaf vn from the d-plateau. we show that the first n− <dig> nodes on p are duplications for every rooting placed on this path. it follows from the first part of this proof that v <dig> is a super-duplication mapped to ⊤. hence, when rooting at 〈vn− <dig> vn〉, we have n gene duplications: for v <dig> v <dig> …,vn− <dig> and one for the root. all edges from p are elements of the d-plateau, thus moving the root to other edges on p will preserve the total number of gene duplications.

it should be clear that the same holds when choosing other root positions. we omit the details.

in the next lemma we show that rootings at edges of the d-plateau induce the same ec cost.

lemma <dig> 
if an unrooted gene tree g has no empty edge then for any d-minimal rooting of g denoted by g∗ ec=ec+ <dig>   where t <dig> t <dig> …,tn are the rooted subtrees of g obtained from g by removing all internal nodes of the d-plateau.

proof.
it follows from lemma  <dig> and its proof that all internal nodes of the d-plateau are present in the ⊤-cluster in the clustering with minimal number of clusters. this cluster is separated from other duplication clusters by speciation nodes located on the border of the d-plateau. thus, the clusters induced by optimal solution to ec for g∗ are the clusters induced by optimal solution to ec of t <dig> t <dig> …,tn plus the ⊤-cluster.

solutions
now we present solutions to our unrooted episode clustering problem.

theorem <dig> .
for any gene tree g, an edge e is optimal for single-uec, if either e is empty or e is in the d-plateau and g has a double edge.

proof.
the first part of the proof follows immediately from lemma  <dig> and the second part from lemma  <dig> 

theorem <dig> 
for a collection of unrooted gene trees g <dig> g <dig> …,gn, if every gene tree has a double edge then rooting every gene tree on an edge from the d-plateau yields the optimal solution for uec.

proof.
assume that n= <dig> and let g1′ and g2′ be two d-plateau rootings of g <dig> and g <dig>  respectively. it should be clear that ec=ec, where t=. next, by lemma  <dig>  ec is independent on the choice of rooting of g <dig> and g <dig>  as long as the rootings are in the d-plateau. therefore, we conclude that ec is the solution to uec problem for g <dig> and g <dig>  this observation can be easily generalized by induction to any n.

note that we cannot generalize the property stated in theorem  <dig> to gene trees with empty edges. the example is shown in fig.  <dig>  consider the dataset {g <dig> g2}. g <dig> has five d-minimal rootings, while g <dig> has exactly one. in g2∗ we have one ⊤-cluster, therefore g2∗ with g1∗, i.e., the empty edge rooting of g <dig>  have two duplication clusters. however, the best clusterings for {g <dig> g2} having exactly one cluster are obtained for g <dig> , g <dig>  or g <dig> . on the other hand, the best clusterings can be also obtained for empty edge rootings, e.g. {g <dig> ∗,g <dig> ∗} with cost  <dig> for the input {g <dig> g4}. from these examples, we see that the empty edges have different properties than double edges in the context of uec, and we cannot generalize theorem  <dig> to empty edges.

theorem <dig> .
for a collection of unrooted gene trees g, the solution to uec is induced by a rooting edge e of g∈g satisfying: 
if g has a double edge, then e is any d-minimal edge in g,

if g has an empty edge, then e is an element of star s <dig> 



proof.
if some g∈g has a double edge then the property follows from theorem  <dig> and lemma  <dig> for gene trees with an empty edge e∗ we show that any d-minimal rooting of the edge that is not adjacent to e∗ can be equivalently replaced by a rooting adjacent to e∗. by using the notation from fig.  <dig>  let ta= such that a′ and a′′ are the roots of ta′ and ta′′, respectively. we show that the rooting g〈v,a〉 denoted by ga  has the same duplication episodes as the rooting ga′ obtained for the edge 〈a,a′〉. in both rootings v is a speciation, therefore the structure of clusters present in tb and tc is the same in both rootings. the edge 〈v,a〉 is a-incoming, thus the roots are duplications mapped to ⊤. from the fact that 〈a,a′〉 is in the d-plateau we have that a is a duplication. thus, every root and a induce the ⊤-cluster. finally, if a′′ is a duplication node, then in both rootings it will be a member of the ⊤-cluster. we proved these two adjacent rootings have the same structure of clusters. therefore, it is sufficient to choose the rooting ga instead of ga′. this proof can be naturally extended by induction to any edge from the d-plateau.
fig.  <dig> trees from theorem  <dig> and lemma  <dig>  the rootings of g from theorem  <dig> and lemma  <dig>  we use the notation g
a instead of g
〈v,a〉. see fig.  <dig> for a legend of the symbols used



we conclude that for a gene tree g we have at most  <dig> candidates for rootings. for instance, g <dig> has two stars s <dig> in the d-plateau, therefore we have  <dig> candidate rootings: the empty edge rooting g <dig> ∗ and the rootings of adjacent edges g <dig> , g <dig> , g <dig>  and g <dig> . note that the clusters from g <dig>  are equivalent to clusters from g <dig>  and g <dig> . similar property holds for other candidates.

next, we show that the condition u <dig> can be improved.

lemma <dig> 
under the assumptions from theorem  <dig>  let the set of clusters induced by the solution to uec contains ⊤-cluster. then, the condition  from theorem  <dig> can be refined as follows: 
if e∗ is the empty edge in g, then e is one among at most two non-adjacent edges such that e=〈x,y〉 is adjacent to e∗ and m∗=m∗, where m∗ is the lca-mapping for g∗.



proof.
let g be a gene tree with an empty edge. let ea be that edge from . by using the notation from fig.  <dig>  we compare the rooting g∗ and g〈v,a〉, denoted here by ga. we have the following clusters in g∗: the cluster c that contains c  and the cluster x that contains v . thus, x={v}∪a∪b where a and b denote duplications from ta and tb, respectively. note that c has the same contribution to ec in both rootings, which follows from the property that valid mappings of c are the same in both rootings. in ga, a is a subset of the ⊤-cluster whose contribution to ec is already incorporated . the node v is a duplication in g∗. hence, without loss of generality we assume that m∗=m∗, i.e., the rooting edge 〈v,a〉 satisfies the condition from .

we have two cases depending on whether b is empty. if b is empty then ga has “better” composition of clusters than in g∗, i.e., one cluster less then in g∗ and other clusters has the same valid mappings. otherwise, both rootings are equivalent if m∗=m∗ , or again ga has a better structure of clusters than g∗ if m∗≺m∗ . similarly, we show that ga is also better than g〈v,b〉 .

we proved that among three rootings from the star s <dig> we can choose one candidate. the second edge is obtained from the second star s <dig>  if it is present in the gene tree .

from the last lemma we have at most two candidates for any gene tree from the input collection. for example, the candidate rooting g <dig>  has more flexible valid mappings than g <dig> , e.g. the duplication cluster of ,a) in g <dig>  has larger range of possible mappings than the duplication cluster of ,a) in g <dig> , while the remaining two clusters have the same locations in the species tree. hence, for the dataset {g <dig> g4}, if the ⊤-cluster is present in solution to uec, we have two candidates g <dig>  and g <dig>  . note, that the clustering costs  <dig> is obtained by rootings g <dig> ∗ and g <dig>  .



algorithms
algorithm  <dig> presents the solution to uec problem. the correctness of this algorithm follows from theorem  <dig> and lemma  <dig>  algorithm  <dig> has two phases. in the first phase for every gene tree a set of candidate rootings is prepared with respect to the conditions  and . to find optimal rootings we use a linear time algorithm  based on greedy descent method that search a double or an empty edge in a gene tree  <cit> . based on condition u2’, we divide possible solutions into two categories depending on the presence of ⊤-cluster in an optimal clustering. if the ⊤-cluster is not present then every gene tree has an empty edge . otherwise, we check every possible variant of rooting candidates. note that from lemma  <dig>  a gene tree has two candidates if and only if the gene tree has two stars s <dig> that are included in the d-plateau. thus, the overall time complexity depends on the presence of such trees in the input. from this observation we conclude the following result.

theorem <dig> 
the time complexity of algorithm  <dig> is o), where k is the number of input gene trees having two stars s <dig> that are included in the d-plateau.

thus, from theoretical point of view uec is fixed parameter tractable. later we show that k usually represents a small fraction  of the whole input. for the cases when 2k is still too large for efficient computation, we propose algorithm  <dig>  in which we first solve the instance of uec for the collection of gene trees that have a unique candidate. clearly, if there are rootings of the whole input that have the same cost, then this cost is optimal. the overall complexity of algorithm  <dig> is the same as algorithm  <dig>  however, for large datasets this strategy appeared to be successful after checking just one additional candidate set .



experiments
we performed several computational experiments on three empirical datasets.

guigó dataset consists of  <dig> rooted gene trees from  <dig> eukaryotes from  <cit> . this dataset was evaluated with  <dig> species trees from  <cit> , known to have the total minimal duplication cost. génolevures is a dataset of  <dig> gene trees  <cit>  from nine yeast genomes  <cit>  and two species trees: one from  <cit>  and the second one having the lowest duplication-loss cost computed by fasturec  <cit> . the third dataset treefam, spanning  <dig> mostly animal species, consists of  <dig> curated gene family trees from treefam v <dig>   <cit> . the species tree for treefam is based on ncbi taxonomy.

we implemented our algorithms and the algorithms for the rooted variant of ec problem . in our experiments the rooting candidates were used to compare the results for uec with the model of mappings  proposed in  <cit> .

we performed two series of  <dig> computational experiments, one for our model and one with the model described in  <cit> . the total running time of our program was about  <dig> minutes on a standard pc workstation. for every dataset we were able to find solutions to uec by testing at most two rooted instances of input gene trees . the summary of experiments is depicted in table  <dig> 
k
ec
ec


for the guigó dataset we found four duplication clusters, while for the rooted model from  <cit>  we located five clusters. the difference can be explained by the properties of our model that is more flexible: the input trees are unrooted and the model of valid mappings is more generic. observe that this dataset has unique rooting candidates .

génolevures is the most complex dataset due to its size and potentially large parameter k. despite these properties, algorithm  <dig> located  <dig> clusters for the filtered input with all unique rooting candidates. in other words, in this filtered dataset a duplication cluster is present in every node of the species tree. obviously, the whole input dataset has the same property. the same holds for the model from  <cit> .

in treefam we located  <dig> clusters for the filtered dataset with unique rooting candidates. then, algorithm  <dig> found the solution having the same cost for the whole dataset . the same result was obtained for the model from  <cit>  .
fig.  <dig> duplication clusters in empirical datasets. duplication clusters  inferred from experiments. a guigó species tree . b treefam species tree based on ncbi taxonomy



CONCLUSIONS
in this article we presented the first solution to the open problem of the duplication episode clustering for case when the input collection is composed of unrooted gene trees. by using theoretical properties of the unrooted reconciliation we proved that the problem has nice mathematical and computational properties. from practical point of view, we were able to provide efficient algorithms and tools that were successfully applied to locate duplication clusters in real datasets.

from the computational point of view the complexity of our algorithms depends on the parameter k, i.e., in the worst case ec problem has to be solved 2k times in order to find a solution to uec. even if k usually represents a small fraction of the whole input it can be still large, e.g. k> <dig> for the yeast dataset, which may prohibit computation of all possible variants. here we proposed a solution, that is based on the observation that the clustering induced from the input gene trees having unique candidates , usually represents an optimal solution for the whole input. thus, the strategy that we applied in algorithm  <dig>  i.e., first cluster easy part and then try to incorportate the hard one by using already identified clusters, appeared to be successful even for potentially complex datasets.

our computational experiments show that the duplication clusters are usually located in large parts of the species tree especially when the input dataset consists of thousands of gene trees. to provide more detailed information on the duplication clusters, we plan to study minimal episode problem  which is a natural extension of the episode clustering problem. in the future we plan to extend the episode clustering problem by using other types of valid mappings.

our software for solving unrooted episode clustering problem is publicly available at http://www.mimuw.edu.pl/jpaszek/uec.php.

abbreviations
dgene duplication

dlgene duplication and loss

ecepisode clustering for rooted gene trees

lcaleast common ancestor

uecepisode clustering for unrooted gene trees

from the fourteenth asia pacific bioinformatics conference san francisco, ca, usa.  <dig> -  <dig> january 2016

competing interests

the authors declare that they have no competing interests.

authors’ contributions

jp and pg contributed equally to the writing of the paper. both authors read and approved the final manuscript. jp implemented algorithms and performed all computational experiments.

declarations

the publication costs for this article were funded by the polish ministry of science and higher education funding for faculty of mathematics, informatics and mechanics of the university of warsaw.

this article has been published as part of bmc genomics volume  <dig> supplement  <dig>  2016: selected articles from the fourteenth asia pacific bioinformatics conference : genomics. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcgenomics/supplements/17/s <dig> 

