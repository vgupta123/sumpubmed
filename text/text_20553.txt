BACKGROUND
new sequencing technologies are dramatically increasing the number of predicted protein sequences available for high throughput comparative analyses, functional annotation or evolutionary studies. all these studies involve a transfer of information between organisms and homology is one of the most popular concepts used to address this problem. in particular, the studies rely on an accurate determination of orthology and paralogy relationships. according to the seminal definition of fitch  <cit> , orthologs are homologous genes that diverged from a single ancestral gene in their most recent common ancestor via a speciation event, whereas paralogs are homologs resulting from gene duplications. the distinction between orthologs and paralogs refers exclusively to the evolutionary history of genes and does not have functional implications stricto sensu  <cit> . however, from an operational point of view, it is widely accepted that two orthologs generally share the same function  <cit> . in contrast, paralogs are generally considered more divergent as new functions can emerge as the result of mutations or domain recombinations. nevertheless, the multiplication of available genomes has underlined the necessity to distinguish two subtypes of paralogs: inparalogs and outparalogs  <cit> . inparalogs are produced by duplication subsequent to a given speciation event, while outparalogs result from an ancestral duplication . in other words, in-paralogy and out-paralogy are concepts relative to the species under comparison. the distinction is crucial in evolutionary studies since sets of inparalogs derive from orthologs by lineage-specific expansions and thus can be considered to be co-orthologs, while outparalogs do not have orthologous relationships at all.

today, the most commonly used approach for the prediction of homology relationships between genes and proteins  involves some kind of similarity measure, which can be linked to different types of data, such as sequences, domains or even  <dig> d structures. in principle, phylogenetic tree-based inference represents the most accurate way to determine orthology and paralogy  <cit> . however, its use at the complete proteome scale is computationally expensive and, given the rate at which new genomes are now being sequenced, cannot be considered as a viable option for most laboratories at the present time. as a consequence, alternative algorithms based on graphs or on a combination of tree and graph representations  <cit> , have been developed to infer homology relationships. most of them involve protein blast all-versus-all searches and use pairwise distance calculations  <cit> , 3-way best-hits  <cit>  or clustering-based approaches  <cit> . in general, comparative studies  <cit>  have shown that phylogenetic reconstructions have higher sensitivity and lower specificity than graph-based methods, particularly for distant organisms. nevertheless, these methods provide good results for both sensitivity and specificity with some datasets  <cit> . however, each of the methods has advantages and disadvantages, and the most appropriate method will depend on the user's purpose  <cit> . apart from the detection accuracy, other factors need to be taken into account, for example the availability and ease-of-use of the programs. most of the methods commonly used today are made available as public software binaries and data browsing for the non-specialist is limited to web interfaces that allow remote querying of pre-calculated databases. for the more computer literate, large-scale queries can be performed and results can be retrieved in the form of flat files, although this requires a certain level of programming expertise to parse the data. to address this problem, some efforts have been made to facilitate the querying of data through presence/absence constraints and to provide global views of results via phylum-related tables  <cit> . nevertheless, the tools are still available as web-based interfaces and cannot be retrieved locally to support or maintain in-house databases.

here we describe orthoinspector, a new software system incorporating an original algorithm for the rapid detection of orthology and in-paralogy relationships between different species. in comparisons with existing methods, it improves detection sensitivity, with a minimal loss of specificity. moreover, orthoinspector has a modular design and is provided as an independent software suite that can be downloaded and installed for local use. command line querying facilities have been developed to allow fast information selection for high throughput studies and to facilitate the integration of the software in other packages or processing pipelines. an enhanced graphical interface is designed to automate the complete software installation and data generation process for non-specialists. finally, different visualization tools have been designed specifically to allow the in-depth exploration of the complex inter-species orthology/in-paralogy relationships detected.

implementation
the orthoinspector suite is coded in java  <dig> .x, which means that it can be run on all java-supporting platforms . several java packages are incorporated:  the jacksum package is used to encoded sequence data,  the jdom and opencsv packages are used to format sequence and orthology/paralogy data,  the jung and prefuse packages are used to support the visualization tools. orthoinspector also requires a background database to handle the huge amount of data produced by a blast all-versus-all analysis. support for the main "relational database" compatible engines  is provided via definition of the corresponding java drivers in a configuration file. the only constraint is the predefined database schema that is needed by orthoinspector. the software suite provides two different user interfaces, a command-line client and a graphical interface that can be used to perform the three steps involved in the complete analysis process :

 <dig>  command-line and graphical versions can be used to perform blast all-versus-all sequence searches and to generate a database containing the search results. currently, the package is designed to allow the use of both raw and tabbed outputs produced by the classical ncbi blast package and the recent ncbi blast+ package  <cit> . other blast data formats can be easily added with the help of the blast parser interface included in the package. orthoinspector proposes options  to directly fill the database with the produced data or  to create intermediate data dumps allowing a considerable speed-up. sql scripts to use these dumps in mysql and postgressql engines are provided in the orthoinspector website.

 <dig>  after database installation, the command-line version allows fast information retrieval for high throughput studies and the use of the software in other packages. textual queries , batch queries  or queries defining presence/absence of an ortholog in specific organisms can be performed. both command-line and graphical versions allow the user to export data in fasta, csv and xml formats. new output formats can be easily coded with the help of the output interface provided.

 <dig>  the graphical version facilitates data querying for non-specialists. in addition, it provides a set of useful tools to retrieve clusters of orthologs covering multiple species, to produce comparative genomics results and to visualize the data.

the whole software suite is available at http://lbgi.igbmc.fr/orthoinspector. furthermore this website contains tutorials and database dumps for test purposes.

methods
orthoinspector algorithm
the orthoinspector algorithm is divided into three main steps. first, the results of a blast all-versus-all  is provided by the user and is parsed to find all the blast best hits for each protein and to create the groups of inparalogs. second, the inparalog groups for each organism are compared in a pairwise fashion to define potential orthologs and/or in-paralogs. third, best hits that contradict the potential orthology between entities are detected.

inparalog group formation and validation
the first step involves the parsing of the blast all-versus-all results to find all best hits for each protein and to create the groups of inparalogs, i.e. paralogs produced by duplications subsequent to a given speciation event . inparalog groups are organism-dependant, which means that a given protein  can be in different putative groups of inparalogs and we will denote these groups as organism-dependant lists: {p <dig>  p <dig>  ..., pn}/organism. given a blast search result for a protein of organism a, all proteins of a with an e-value inferior to the e-value of the best hit in the organism b will define a potential group of inparalogs in a with respect to the internal node where species a and b coalesce . the putative list of inparalogs is then validated if the same minimal hypothesis of inparalogy is verified in the blast searches for each protein in the list. as an example, we can consider a group of three putative inparalogs in organism a with respect to b  that has been defined by the blast output of the protein a <dig>  the entire group will be validated if the blast outputs of a <dig> and a <dig> result in the same group. thus, validation requires that the groups {a <dig>  a <dig>  a3}/b or {a <dig>  a <dig>  a1}/b are defined by the blast output of a <dig> and that the groups {a <dig>  a <dig>  a2}/b or {a <dig>  a <dig>  a1}/b are defined by the blast output of a <dig>  if the above condition is not verified, the existence of two-member groups is checked. in the example, if the blast output of a <dig> defines the group {a <dig>  a <dig>  a3}/b but the blast output of a <dig> defines a group of two proteins {a <dig>  a1}/b, only this a2-deleted paralog group will be retained in the subsequent steps of the algorithm. using this method, if norga organisms are used to create the blast all-versus-all, each blast search can define ngroup < = norga putative groups of inparalogs, each one being delimited by a best hit in another organism.

pairwise comparison of inparalog groups
the second step of the orthoinspector algorithm is the definition of potential -orthology relationships . the definition is based on the detection of best hits existing between the two types of entities determined at the previous step: single proteins , and proteins belonging to one or several inparalog groups. we thus have three types of pairwise entity comparisons , corresponding to the three types of relationships shown in figure  <dig>  a 1-to <dig> relationship is described by a best hit between a protein of o <dig> and a protein of o <dig> complemented by a returning best hit from the protein of o <dig> to the protein of o <dig>  known as a reciprocal best hit. a 1-to-many relationship is described by a best hit from a given protein of o <dig> to any protein member of an inparalog group of o <dig> complemented by a returning best hit from any member of the inparalog group of o <dig> to the same protein of o <dig>  finally, a many-to-many relationship is described by two best hits between proteins of two groups of inparalogs .

detection of contradicting information
the third step in the algorithm is the detection of best hits that contradict the potential orthology relationships defined above. in particular, given two inparalog groups that are potentially orthologous, it is possible to find a best hit from a protein in one of the compared groups to another protein that does not belong to either of the groups. in this case, it is possible that the protein does not belong to the inparalog group. such contradictions are highlighted by orthoinspector with a warning signal in the algorithm output: a "red signal" indicates contradictions involving a reciprocal best hit and an "orange signal" indicates contradictions involving a simple best hit. such signals help the user to discriminate proteins in complex inparalog groups formed by closely related sequences or in cases where the proteome of one of the compared organisms is incomplete and disturbs the precedent formation of validated inparalog groups.

RESULTS
large-scale proteome analysis
we used the orthoinspector software to study  <dig> organisms with approximately complete proteomes covering the main eukaryotic phyla in protists, fungi, plants and animals. we l incomplete and low coverage genomes to avoid predictions of false gene loss and artefacts in gene duplication inference  <cit> . the complete list of the  <dig> studied organisms with their taxonomic identifiers and the number of retained protein transcripts can be found in additional file  <dig>  for  <dig> higher eukaryotes, protein sequence datasets from ensembl  <dig>  <cit>  were used. to avoid multiple transcript issues, the longest protein sequence was selected for each ensembl-predicted gene annotated as 'protein-coding'. for example, the proteomes of homo sapiens , mus musculus , xenopus tropicalis , ciona intestinalis , arabidopsis thaliana  or oryza sativa japonica  were obtained from ensembl. for eukaryotes not stored in ensembl, the ncbi refseqp  <cit>  and uniprot   <cit>  databases were used. data from both sources were retrieved using icarus scripts on a local srs server  <cit>  to select sequences according to their taxonomic identifiers. to remove redundant sequences, each sequence was compared to all others from the same organism using blast. for sequences sharing more than 99% identity, manually-annotated entries from swissprot were preferred over trembl and refseqp entries, otherwise the longest sequence was retained. proteomes built with this protocol include plasmodium falciparum , trypanosoma brucei , ostreococcus tauri , encephalitozoon cuniculi , emericella nidulans , saccharomyces cerevisiae , laccaria bicolor , caenorhabditis elegans , ixodes scapularis  and drosophila melanogaster . regardless of the source sequence database, sequences with less than  <dig> amino acids or more than  <dig> amino acids were excluded. finally, we obtained a pool of  <dig> protein sequences.

the new ncbi-blast+ package was then used to perform blast all-versus-all searches between the proteomes of the  <dig> organisms, representing  <dig> individual blast searches in a database of  <dig> sequences. sequences were selected with an e-value cutoff of 1e- <dig>  the searches were executed on the décrypthon grid resources  <cit> .

the results of the blast all-versus-all searches, together with the  <dig> proteomes were then used as input to orthoinspector. all steps of the algorithm, from blast parsing to integration of the data in the relational database, took about  <dig> hours on four  <dig>  ghz intel xeon cpus with  <dig> go of ram. this timing is based on an installation of the database using the faster "database dumps" configuration . in more detail, parsing of the blast results took 5h <dig>  validation of inparalog groups took 2h <dig> and generation of 1-to- <dig>  1-to-many and many-many precalculated data for the  <dig> organisms took  <dig> h. the inparalog prediction step produced  <dig> putative inparalog groups, themselves generating  <dig> validated groups . shortest versions of this huge dataset , including  <dig> proteomes, are available as database dumps  at the orthoinspector website http://lbgi.igbmc.fr/orthoinspector.

as expected, large-scale proteomes, e.g. in plants , or genome-wide duplications, e.g. in fishes , result in an increase in the number of predicted inparalog groups, whereas smaller eukaryote proteomes have relatively few groups. the number of inparalog groups is generally correlated with the proteome size and the phylogenetic distance between organisms, for instance, amniota  have a relatively stable number of inparalog groups. nevertheless, some exceptions can be observed. despite having the largest proteome in the plant phylum, oryza sativa has fewer groups than vitis vinifera or arabidopsis thaliana and sequences from oryza sativa are included in relatively few inparalog groups. further investigation showed that many sequences of this organism had a relatively small number of blast hits to other organisms compared to other plants . this may be partly due to some overprediction of genes in the oryza sativa proteome, with several protein fragments or pseudogenes predicted as "protein-coding".

another interesting observation is that all parasitic organisms generate a small number of inparalog groups compared to the other members of their phylum. in arthropods, ixodes scapularis  and pediculus humanus  have less inparalog groups than anopheles gambiae and drosophilia melanogaster. in fungi, encephalitozoon cuniculi, nosema ceranae and ustilago maydis have less inparalog groups than other members of this phylum. lacarria bicolor is another fungus with few inparalogs, although this may be linked to its ectomycorrhizal symbiotic relationship with plant roots.

unlike parasites or symbionts, some isolated organisms have a relatively large number of inparalog groups. for example, strogylocentrotus purpuratus has numerous inparalog groups but is currently the only echinodermata genome available, and it is impossible to determine whether this is a characteristic of this phylum. entamoeba histolytica has a number of inparalog groups similar to that to other organisms with the same proteome size, but individual sequences are included in more inparalog groups compared to other organisms. this might be explained by the lower quality of the proteome and/or the presence of numerous repeats, resulting in multiple blast hits in all studied species.

in order to identify potential orthology relationships, all the inparalog groups were compared for each pair of organisms. the total number of relationships detected represents  <dig> , <dig> 1-to- <dig> relations,  <dig> , <dig> 1-to-many relations and  <dig>  many-to-many relations. figure  <dig> and additional files  <dig> and  <dig> show respectively the number of 1-to-many, 1-to- <dig> and many-to-many between each proteome pair after normalization. the number of predicted relationships is largely dependent on the composition of the set of selected organisms. as expected, close species present a high proportion of 1-to- <dig> relationships within their group but few many-to many relationships . this is especially obvious for the  <dig> vertebrates included in our dataset that are phylogenetically very close to each other compared to the other studied phyla. intergroup relationships highlight lineage-specific duplications. for instance, the  <dig> whole genome duplications  encountered by the jawed vertebrates  <cit>  are clearly reflected by the high number of 1-to-many relationships from invertebrates to vertebrates . similarly, 1-to-many relationships pinpoint the additional round of duplication encountered by the teleostei lineage within vertebrates  <cit> . the numerous duplication events reported in the land plants  <cit>  explain the extent of 1-to-many relationships between them and most of other species used in our study. additionally, the abundance of many-to-many relationships between physcomitrella patens   <cit> and flowering plants is in agreement with the independent events that occurred in the moss lineage  and hexaploidy event in flowering plants. examination of specific sets of relationships  is in agreement with dedicated studies. for instance, the functional analysis of the human genes exhibiting one-to-many relationships with rodents reveal a significant enrichment in gene related to olfaction as previously reported  <cit> .

example test case: myotubularin family
to demonstrate the advantages of using inparalog group comparisons to predict orthology, we studied the myotubularin family as a test case. the distribution of myotubularin-related proteins is well established  <cit>  and is represented in figure  <dig> for three species with multiple duplication events that occurred during its evolutionary history. orthoinspector predictions are compared to inparanoid and orthomcl, illustrating the algorithmic differences that lead to some false negatives for the two latter algorithms.

inparanoid is based on rbh and finds inparalogs having a similarity score equal to or superior to the similarity s defined by the rbh. in the fly/yeast comparison, the three fly myotubularins are more similar to each other than to the yeast myotubularin, thus they are considered as inparalogs. in the human/yeast comparison case,  <dig> out of  <dig> human myotubularins have a higher similarity score than the similarity score defined by the yeast/human rbh, but  <dig> proteins have lower scores and are thus not considered as inparalogs .

the orthomcl algorithm begins with the same steps of rbh detection and identification of sequences within the same genome that are more similar to each other than to any sequence from another genome. then, a graph is constructed, where nodes represent proteins and edges represent the relations, and a markov clustering is performed. in this example, three clusters are found, with only one fly and three human myotubularins considered to be co-orthologs of the yeast myotubularin.

orthoinspector does not consider rbhs as a preliminary condition to detect potential inparalogs, instead inparalog groups are inferred directly in each organism. for example, the three fly and eight human myotubularins are identified as inparalogs with respect to yeast. in a second stage, the pairwise comparison of inparalog groups exploits the rbh and bh found between the different organisms to infer many-to-one relations including all the myotubularins.

comparison with existing methods: benchmark data sets
the accuracy of the orthoinspector predictions was compared to five existing methods, covering the main approaches to infer orthology: namely, inparanoid , eggnog , orthomcl and oma  and ensembl compara . today, these methods are widely used by the community and their databases are cross-referenced in public databases like uniprot. orthoinspector is based on a pairwise distance based algorithm which makes it similar to the inparanoid algorithm in some aspects. however, inparanoid is directly based on reciprocal best hits  to find orthologs and inparalogs, as illustrated by the example test case described above. the first step of our algorithm identifies potential inparalog groups independently of rbh, thus exploring a larger search space for the discovery of potential orthology relations. the second step of our algorithm then compares inparalog groups that are not necessarily linked by a rbh between two organisms.

in order to compare the predictions made by orthoinspector with the existing methods in a large scale study, we used two benchmarks from the literature  <cit> , representing varied protein families . the literature benchmarks cover many organisms, including h. sapiens, m. musculus, g. gallus, d. rerio, d. melanogaster, c. elegans and s. cerevisiae. in addition, we created our own benchmark, performing a detailed study of protein kinase families with complex evolutionary histories that represent a significant challenge for the accurate detection of orthology/paralog relationships. protein kinases represent an ideal test case for our purposes, since they have been intensively studied and their family relationships are generally known. in fact, protein kinases have been classified into a number of groups sharing broad functional properties, based on sequence similarity in their catalytic domains, the presence of accessory domains and known modes of regulation. using the standard classification, available at http://kinase.com/kinbase, and by studying the literature, we defined a test set of well annotated protein kinase sequences, from the cmgc group  and from the tkl  group. cmgc kinases represent a homogeneous group, where most proteins possess only the kinase catalytic domain. in contrast, the tkl kinases are more divergent, often having additional domains that regulate kinase activity, link to other signaling modules, or localize the protein in the cell. the cmgc and tkl groups can be further sub-divided into several protein families. the distribution of these families was established by a combination of published in silico and wet-lab studies in a number of model organisms, including d. discoideum  <cit> , c. elegans  <cit> , s. cerevisiae  <cit> , d. melanogaster  <cit> , m. musculus  <cit>  and h. sapiens  <cit> . our test set consisted of  <dig> manually annotated sequences from these six organisms, covering  <dig> cmgc sub-families and  <dig> tkl sub-families .

we then evaluated the predictions made by each of the six methods to the known classifications defined in the four benchmarks. the prediction accuracy was estimated by calculating the positive prediction value  as a specificity indicator and the sensitivity  of each method . the benchmark data sets allowed us to highlight a number of advantages and disadvantages of the different methods. for example, oma achieved the highest specificity, but the lowest sensitivity on average. in contrast, eggnog obtained the highest sensitivity, although it should be noted that some co-ortholog groups in eggnog are manually curated, like the cog database on which it is based. on average, the six methods can be classified in two groups. orthomcl, ensembl compara and eggnog have higher sensitivity than specificity, while inparanoid, orthoinspector and oma have higher specificity than sensitivity. in the second class, orthoinspector demonstrated higher sensitivity than the other two methods. in fact, orthoinspector reached a sensitivity level close to that of ensembl compara  and superior to orthomcl .

taken individually, the four benchmarks highlighted some contrasting results. for example, oma obtained a sensitivity <50% for both tkl and cmgc benchmarks, compared to >60% for all other methods. this was due to the fact that oma failed to predict some orthology relations existing between distant organisms . ensembl compara had higher sensitivity than orthoinspector for both kinase benchmarks  and orthomcl had higher sensitivity for the cmgc kinases , but not tkl kinases . in the case of the literature benchmark n° <dig>  all methods achieved a good sensitivity and a good specificity, which was not unexpected since the benchmark contains essentially human/mouse and human/worm relations. for the literature benchmark n° <dig>  the results were more variable. orthomcl and eggnog had high sensitivity , but their specificity was surprisingly low . in this benchmark, some protein families  are totally included in a few or a single cluster. this observation is particularly true in the case of distant organism comparisons .

it is clear from these results that the different methods tested here provide complementary approaches for orthology inference. in the future, it should be possible to combine the advantages of the alternative methods to improve both sensitivity and specificity. for example, orthoinspector could be used as a starting tool to infer orthology relations, since its sensitivity and specificity are well balanced compared to most of the other methods tested here. furthermore, the orthology inference is less computationally intensive than ensembl compara, the only other method that achieved similar results. in a subsequent refinement step, the user could then integrate information about true/false positives from lower specificity methods such as eggnog, orthomcl or ensembl compara and lower sensitivity methods like inparanoid or oma methods.

data management and visualization
the main goal of the orthoinspector project was to build a complete software suite for orthology and inparalogy prediction and analysis. nevertheless, in the face of the huge amounts of data being produced by the new sequence technologies, it was clearly crucial to incorporate efficient data management and update procedures in the design of the software. thus, the complete construction of a database of orthologs can be managed via a four step user-friendly process. orthoinspector provides administrator tools, accessible via a command-line or a graphical interface, that take as input:  the results of a blast all-versus-all search in a specified directory,  the fasta proteomes of the organisms used in the blast searches together, with an xml format file describing the organisms . the administrator can then launch the installation procedures that will automatically fill a database with all the required information and calculated data. subsequent updates of the database are facilitated by the architecture of the database. for example, new proteomes can be added by updating the previously mentioned input data. in contrast to other available systems, after installation the pre-calculated data can be exploited via both command-line and graphical interfaces.

the command-line client interface is designed to allow fast information retrieval for high throughput studies. it also facilitates the incorporation of the software in other packages or processing pipelines. the client provides database querying facilities via a number of different methods: textual searches allow access to results via sequence accession numbers or sequence descriptions, while batch queries permit submission of multiple fasta-formated sequences. in addition, constraints of presence/absence of orthologs in specified organisms can be defined. data can be exported in csv, fasta or xml formats. new user-defined file formats can easily be added to the software using a java interface included in the source code.

the graphical interface is designed to analyze smaller sets of sequences in more detail. in contrast to the command-line client, the querying functions  are supported by interactive forms and produce results that can be visualized in more detail. more elaborate queries can also be performed, such as the selection of data according to the presence/absence of orthologous relationships in organisms specified by the user . for instance, the user can retrieve all danio rerio proteins having orthologs in homo sapiens, but not in mus musculus. the results can be visualized through a textual description, including cross-references to ensembl, uniprot and ncbi-refseqp databases. for ambiguous results, the original blast search used to generate the prediction can be directly visualized in the interface. then, the reliable data selected by the user can be summarized using different visualization tools. currently, two complementary tools are available:  a graph representation of the network of predicted relationships  and  presence/absence diagrams , but future updates of the software are planned to enhance the visualization capabilities of the software. as in the command-line client, the data can be exported in csv, fasta and xml format files. all the visualizations can be exported as image files, the presence/absence diagram can be exported as a csv matrix and the graph representation can be saved in graphml format. the graphical interface access provides access to other tools, such as batch generation and exportation of data, generation of database statistics or switching between different orthoinspector compliant databases.

CONCLUSIONS
various methods have been developed previously to predict the orthology/inparalogy relationships existing between different proteomes. in most cases, the algorithms are made publicly available in the form of binary programs that can generate either simple databases or flat files containing the complete set of predicted relationships. until now, no comprehensive set of tools has been provided to process, query and update the datasets easily and efficiently. for this reason, we have developed orthoinspector, incorporating fast and easy-to-use data management tools, as well as a novel algorithm to produce fast and sensitive predictions of orthology/inparalogy. the software suite, portable to any java-compatible system and easily integrated in any workflow application, is suitable for use in high-throughput studies, which are becoming more and more predominant in the era of systems biology. its fast and user-friendly procedures facilitate the production of databases adapted to the user's needs. it also supports more detailed analyses of interesting orthology relationships for non-specialists, who can exploit the generated databases in a graphical interface that provides novel visualization capabilities and comparative genomics tools.

in the future, orthoinspector will be enhanced to further improve the database update process. although tools are currently provided to easily incorporate new genomes selected by the user, keeping up with the rate of next generation sequencing will be a major challenge. the most time-consuming step in all orthology prediction algorithms is the generation of the blast all-versus-all searches for each new update. in spite of the efforts aimed at developing faster parallelized blast methods  <cit> , the blast all-versus-all computational requirements grow quadratically with the addition of new proteomes. therefore, one of our future goals will be to develop an incremental update process, minimizing the number of distance calculations required between the thousands of sequences present in the previous version of the database. we also plan to enrich the orthoinspector system by incorporating functional annotations, such as gene ontology terms  <cit>  or links to the interpro protein domain database  <cit> , facilitating integrated systems biology studies. finally, to improve the interoperability of orthoinspector with other software packages, the ortho-xml format http://orthoxml.org will be included in the next release of orthoinspector.

availability and requirements
project name: orthoinspector

project home page: http://lbgi.igbmc.fr/orthoinspector/

operating system: cross-platform

programming language: java

requirements: java jvm  <dig> .x

license: gnu gpl version 3

authors' contributions
lb carried out the algorithm conception and the software programming. jdt participated in the design and testing of the software suite. op participated in its design and helped to draft the manuscript. ol conceived the study and participated in its design and coordination. all authors participated in writing the manuscript. all authors read and approved the final version of the manuscript

supplementary material
additional file 1
the complete list of the  <dig> studied organisms. excel file containing the  <dig> studied organisms in orthoinspector. they are classified according to their phylum.

click here for file

 additional file 2
distribution of 1-to- <dig> relations over  <dig> organisms. the normalized number of 1-to- <dig> relations is calculated for each organism pair. normalisation is done by dividing the observed number of relations by the maximum number of potential relations .

click here for file

 additional file 3
distribution of many-to-many relations over  <dig> organisms. the normalized number of many-to-many relations is calculated for each organism pair. normalisation is done by dividing the observed number of relations by the maximum number of potential relations .

click here for file

 additional file 4
test set covering  <dig> cmgc sub-families and  <dig> tkl sub-families. excel file describing the  <dig> cmgc sub-families and  <dig> tkl sub-families used for benchmarking. orthology predictions made by all methods for these families are in the file too.

click here for file

 acknowledgements
we would like to thank jean muller for many fruitful discussions, hoan n'guyen, nicodème paul and raymond ripp for help with programming and database development and the members of the strasbourg bioinformatics platform  for their support. the work was developed within the framework of the decrypthon program, co-funded by association française contre les myopathies , ibm and centre national de la recherche scientifique . we acknowledge financial support from the anr  and institute funds from the cnrs, inserm, and the université de strasbourg.
