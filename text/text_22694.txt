BACKGROUND
the precise estimation of the frequencies of peaks in nuclear magnetic resonance  spectra is often complicated by poor signal-to-noise ratio and peak overlap. this results in only partially complete and correct peak picking. the problem aggravates especially when the peaks are highly overlapped. this is compounded by combinatorial ambiguity problems for resonance assignments and increases errors in noe distance restraints  <cit> . to alleviate this problem, a more sophisticated peak decomposition algorithm, based on non-negative matrix factorization , has been developed and applied to three-dimensional  nmr spectra.

non-negative matrix factorization was first introduced by paatero and tapper as the concept of positive matrix factorization  <cit>  for estimating errors in widely varying environmental data. their work revealed the non-negativity features of the underlying data models. lee and seung  <cit>  showed using an effective multiplicative algorithm parts-based representation of an object using nmf approach. a recent in-depth review on nmf algorithms discusses many forms of factorizations  <cit> . because of the non-negativity and the sparseness constraints  <cit> , nmf has wide applications in multidimensional data analysis  <cit> . the idea originated from the fact that in certain applications, by the rules of physics, the data quantities cannot be negative. the nmf approach was reported in application to complex metabolomic mixture analysis in two-dimensional nmr spectra  <cit> . higher dimensional nmr spectral data matrices can be decomposed using nmf algorithms. the important property of nmf is the non-negative nature of the decomposed factors. therefore, nmf processing of higher dimensional nmr spectral data can have important consequences in automated data processing.

in the automated peak picking approach peak identification is followed by the estimation of peak intensities and frequencies. several algorithms have already been developed to perform peak picking in nmr spectra. most of these algorithms are based on finding local maxima that fulfill certain criteria, and/or use gaussian or lorentzian lineshapes for lineshape fitting  <cit>  by minimizing the residual squared error between the observed peak shape and the assumed lineshape. apart from the lineshape fitting methods, picky  <cit>  is another program that uses a singular value decomposition of peak components for peak picking. in general, highly overlapped peaks cause the most commonly observed problems of existing peak picking algorithms. we used the basic two-dimensional  nmf model, extended sequentially to nd usage to decompose a 3d data  tensor. a euclidean distance cost function was used as a measure of factorization convergence. the approach allows applying constraints if some information is known a priori, e.g. the total number of peaks or positions in common dimensions of hyper-dimensional  shapes  <cit> . we discuss the nmf algorithm, the conditions for unique solutions of nmf models, and its applications to decompose 3d nmr signal tensors.

methods
nmf decomposition algorithm
the basic idea of spectral factorization is to represent the multidimensional nmr spectrum as well as possible by a sum of direct products of one-dimensional shapes. the latter are expected to represent the lineshapes of resonances. in this way, i.e. if each one-dimensional shape represents a resonance line, possible overlap is deconvoluted and the factorization of the spectrum is equivalent to peak picking. the exact peak positions can simply be obtained by determining the  maxima within the one-dimensional shapes. if it is known that the real signals in a spectrum are non-negative, a better result can be expected by introducing this condition into the factorization algorithm.

the non-negative factorization  problem may be described as follows. given the observed data matrix y =  ∈ r
mxt
 with y ≥  <dig>  the solution is to find two matrices with only non-negative elements, the basis or mixing matrix a ∈ r
m × r
 and the source matrix x =  ∈ r
r × t
, where r represents the number of true components  <cit> . the source matrix is expected to produce the unknown latent components of the original data matrix y. the problem is to factorize the given data matrix such that it minimizes the squared euclidean distance between the observed data matrix and the product of two non-negative data matrices i.e.

 y=ax+n, 

with a ≥  <dig> and x ≥  <dig>  where n ∈ r
mxt
 is a noise or error matrix that is to be minimized.

the divergence cost function is expressed in terms of the squared euclidean distance given as

 dfa,x=∥y−ax∥ <dig> 

the objective is to minimize the divergence of this function using a standard gradient descent technique. the divergence is calculated by component-wise calculation of the distance between matrixes y and ax. the minimization is achieved using multiplicative update rules that update the matrices a and x iteratively until a minimum squared euclidean distance is reached. the updates may be performed until as much minimum possible distance leading to a nonnegative solution is achieved. any increase in the squared euclidean distance may lead to an incorrect solution.

in matrix notation, the multiplicative update rules become

 a←a⊙yxt⊘axxt 

 x←x⊙aty⊘atax 

where ⊙ and ⊘ represent component-wise multiplication and division, respectively  <cit> . the proposed multiplicative update rules were originally introduced in the image space reconstruction algorithm   <cit> . the algorithm performs minimization of the squared euclidean distance cost function using a gradient descent technique. the technique uses alternate switching between sets of parameters to generate updates on the matrices a and x until convergence is reached. the original isra algorithm used multiplicative updates rules by updating only the matrix x iteratively and assuming the matrix a to be known  <cit> . the convergence to a nonnegative solution is obtained for any positive starting point given that the original input matrices contain hidden source components  <cit> .

extension to 3d non-negative tensor factorization
the 3d non-negative tensor factorization  model may be defined as an extension of the basic 2d models. some 3d ntf models can be solved using the basic 2d nmf models referred to as the ntf <dig> model  <cit> . the model is illustrated in figure  <dig> and is described as follows.

 yq=adqxq'+nq=axq+nq,q= <dig> …,q 

where yq = [y
itq
] ∈ r
ixt
 is a q-th frontal slice  of the observed 3d data  tensor y ∈ r
ixtxq
. the component matrices a = [a
ij
] = [a <dig> a <dig>  …, a
j
] ∈ r
ixj
 is a mixing or basis matrix and x
q
 ' = [x
jtq
] ∈ r
jxt
gives unknown normalized hidden components in q-th slice. the matrix x
q
 = d
q
x
q
 ' = [x
jtq
] ∈ r
jxt
 represents re-normalized source components and n
q
 = [n
itq
] ∈ r
ixt
 represents the q-th frontal slice of the tensor n ∈ r
i × t × q
 representing noise in the input matrix y.

determining the true number of components
for the nmf/ntf models the true number of components r plays an important role in reaching convergence because an approximate valid model is instrumental in capturing the true underlying structure in the data. the true number of components may be obtained using several approximate and heuristic techniques  <cit> . different numbers of components may result in different residual minima. in the present work, we applied the following procedure for calculating the true number of components. we observed the decay of residual values for different number of components r =  <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig>  the nmf iterations were stopped when the residual showed no improvement over  <dig> or more consecutive iterations. the true number of components was obtained as the one that showed the minimum residual value. it was also observed that using a higher number of components than the true number did not yield better minimum residual values.

uniqueness conditions for the 2d nmf ambiguity problem
the quadratic cost function with respect to matrices a and x may have many local minima, which leads to rotational ambiguity of the factorized matrices  <cit> . therefore the alternating minimization of the squared euclidean cost function may not result in a unique nmf solution. however, applying some preprocessing or filtering of the input matrix is sufficient to solve the nmf problem uniquely. the preprocessing involves normalization of the input matrix or normalizing the columns of the factorized matrix a and/or the rows of matrix x. we normalized each column of the matrix a to unit l1-norm. in addition, we normalized the input matrix y to unit length at the beginning of the factorization and later used the corresponding scaling factor to obtain the original intensity values of the component peaks.

peak picking of 3d nmr spectral data
the 3d nmf decomposition is performed as an extended 2d nmf decomposition as described above. each slice of 2d data, taken from a 3d spectral data matrix y, occupies data in the matrix y
q
 representing the qth point in the third dimension. the model factorizes peak components in one-dimensional  peak shapes in the source matrix x
q
. peak positions are obtained by fitting an ideal gaussian shape of average linewidth to the observed component by minimizing the scalar product between the gaussian shape and the observed component. next, the linewidth of the peak is adapted to obtain an optimal agreement. the final peak positions are obtained by performing a three-point parabolic interpolation. the final peak lists are obtained by applying a user-defined intensity threshold.

spectral data sets
the ntf <dig> model was applied using the 2d nmf algorithm to the previously measured 3d hnco spectrum for the  <dig> kda rcsd-abl-hpt protein construct   <cit> . the spectrum was measured on a bruker avance spectrometer operating at 1h larmor frequency of  <dig> mhz. the numbers of time-domain complex data points were  <dig> and  <dig> in 13c and 15n indirect dimensions respectively. non-uniform sampling schedule was employed in both the indirect dimensions at a level of sparseness of  <dig> per cent, which acquired  <dig> fids. the  <dig> amino acid protein gave rise to  <dig> expected peaks in the 3d hnco experiment  <cit> .

additionally, the method was applied to a group of four synthetic signals with known positions. the synthetic signals were of different intensities and were used to construct a 2d hsqc spectrum. the efficiency of the algorithm for peak picking was assessed with different levels of noise in the spectrum. the noise was added incrementally in steps of  <dig> percent each. the separation of peak positions was varied from  <dig> to  <dig> points in steps of one data point each.

RESULTS
figure  <dig> shows peaks picked from the 3d hnco spectrum of the rcsd-abl-hpt protein on a 1h-13c projection. the model was able to pick  <dig> backbone and side-chain cross peaks from the hnco spectrum. the peak list of  <dig> peaks is given in additional file 1: table s <dig>  the ntf <dig> decomposition of a small region of about eight overlapped peaks of the 3d hnco experiment is shown in figure  <dig>  the peak shapes determined for each dimension are plotted below each 2d projection. peak shapes appearing in the same color in each 2d projection define one peak in the 3d spectrum. table  <dig> lists the eight peaks picked in this overlap region with their assignments.


1
15
13
peak assignments are shown in the last column.

it can be seen that the overlapped peaks were well decomposed in all three dimensions of the hnco experiment. among the  <dig> peaks picked from the hnco spectrum there were about  <dig> peaks that were overlapped in one or more dimensions. the ntf <dig> model was able to decompose all the overlapped peaks. table  <dig> shows two peaks assigned to cysteine  <dig> and to leucine  <dig> which are overlapped in all three dimensions. the peaks for these two residues were well decomposed in all three dimensions as shown in figure  <dig>  this shows that correct peak picking of 3d nmr spectral data especially in overlapped regions is possible using the ntf <dig> model.

the hsqc spectrum built using four synthetic signals is shown in figure 4a. the results of peak picking show that the algorithm could tolerate up to 60% noise in the spectrum when the peaks were separated by at least  <dig> points from each other. as the peaks were moved closer to each other by one point at each step, the noise tolerance started to drop. the result is shown in figure 4b. when peaks were closer than two points, even 10% noise in the spectrum generated incorrect peak intensities.

the change in peak position of the peak with the highest intensity with varying levels of noise in the spectrum is plotted in figure 4c. the result shows that the algorithm could tolerate up to 70% noise in the spectrum for factorizing the peak shape at its true position. it may be noted that the known peak position is being observed for its change with increasing noise in the spectrum. therefore, with higher than 70% of noise in the spectrum, the peak appeared at its true position albeit with incorrect linewidth and intensity. many other peaks resembled the true peak in the factorized 1d components . therefore, it may be concluded that the algorithm could not reliably determine the true peak when more than 70% noise were present in the spectrum. blue points indicate that the algorithm was able to distinguish the peak from noise. red points indicate that many other peaks resembled the true peak because of higher noise in the spectrum. because the original position of the peak was known, the difference in peak position could still be plotted in figure 4c at noise levels higher than 70%. however, the matrix factorization residual and the number of peaks picked in each component were at unacceptable levels.

similarly, the effect of noise on the change in peak intensity was observed on the peak selected for figure 4c. figure 4d shows the change in peak intensity with increasing level of noise in the spectrum. the algorithm could tolerate up to 70% noise in the spectrum for correct peak picking. the peak may be accepted or rejected at a different intensity depending on the user intensity tolerance threshold with higher noise levels in a spectrum. with more than 70% noise in the spectrum, incorrect intensities and linewidths were obtained after factorization.

in general, the method works well on overlapped peaks for two different reasons. first, the 3d peak picking data is reduced to a 2d peak picking data matrix. the 2d factorization is performed at all points in the third dimension. in case of overlapped peaks, for example, if two peaks are separated by only one or two points, the factorization can give two peaks separately in each data plane from the points that separate the two peaks. this becomes highly improbable in case of peak picking based on lineshape fitting. second, if the peak position from one of the dimensions is known a priori then the 2d data matrix comprising unknown peak position can be factorized to get the peak position in the other dimension. the method has useful consequences when peaks are to be picked from hyper-dimensional data matrices as discussed below.

the usefulness of the ntf <dig> model becomes apparent when multi-dimensional nmr spectra have commonly referenced dimensions. thus, if the peak positions from an already measured more sensitive nmr experiment such as 3d hnco are known, then the same peak positions can be used to pick peaks in other spectra that have dimensions in common with hnco, for example, 1h and/or 15n. peak picking overlapped regions becomes easier with the ntf <dig> model if each common dimension has consistent spectral referencing such as the spectral width, the carrier frequency positions and the number of sampled points. theory suggests that the components in matrix a are assumed known and the matrix x gives the hidden source components of the input matrix y <cit> . the advantage that the ntf <dig> model offers in decomposing a 3d nmr spectral data tensor is that peak positions from any two dimensions can be assumed known. therefore, the reduced ntf <dig> model can offer accurate peak position solutions especially when the peaks are overlapped. this notion can be extended naturally to hyper-dimensional nmr spectral data tensors  <cit> . if peak positions from one or more dimensions are known, the peaks can be picked in the remaining dimensions by appropriately selecting the corresponding 2d data planes containing the picked peaks from the 3d data tensors.

CONCLUSIONS
we have developed a method based on non-negative matrix factorization that can be used for peak picking 3d nmr spectral data tensors. our results demonstrate that the method is particularly useful for picking overlapped peaks. additionally the method can be easily extended for peak picking three- or higher-dimensional nmr spectral data tensors that have commonly referenced dimensions.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
st and vj designed and implemented the algorithm, performed data analysis, and drafted the manuscript. vr and vd prepared protein samples and conducted the nmr experiments. pg supervised the study and drafted the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1: table s1
peak list obtained by applying the ntf <dig> model to the entire 3d hnco spectrum of the rcsd-abl-hpt construct shown in figure  <dig> 

click here for file

 acknowledgements
we acknowledge financial support by the deutsche forschungsgemeinschaft , the lichtenberg program of the volkswagen foundation, and the japan society for the promotion of science .
