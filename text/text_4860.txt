BACKGROUND
multiple sequence alignments are a crucial prerequisite for a diverse set of methods ranging from the reconstruction of phylogenies and the quantification of adaptive evolution, to the detection of conserved rna secondary structures and protein motifs. in this contribution we present a novel alignment tool that has been developed primarily with the aim of improving multiple alignments of viral genomes. the genomes of rna viruses often carry conserved rna structures that perform vital functions during the life cycle of the virus. in many cases only a small part of the viral genome is functionally relevant at the level of rna. algorithms for the systematic search of conserved secondary structure patterns in large rna, such as qrna  <cit> , alidot  <cit> , rnaz  <cit> , and rnadecoder  <cit>  are based on the observation that a small number of point mutations is very likely to cause large changes in the secondary structures  <cit> . secondary structure elements that are consistently present in a group of sequences with less than, say, 95% average pairwise identity are therefore most likely the result of stabilizing selection, not a consequence of the high degree of sequence conservation.

a comprehensive analysis of the genomic secondary structure features using alidot is available for picornaviridae  <cit> , flaviviridae  <cit> , and hepadnaviridae  <cit> . a preliminary survey across a large subset of the available sequence data was presented very recently  <cit> .

the comparative approach to detect conserved rna structures is obviously dependent upon high-quality multiple alignments: even a relative small number of alignment errors, which act like randomly placed mutations, will obscure the signals from consistent and compensatory point mutations and, hence, decrease the sensitivity of the rna detection algorithms. while we eventually need an alignment of the genomic nucleic acid sequence, we observe that an overwhelming part of a viral genome codes for one or more proteins in one or more  frames.

in contrast to the protein sequences, which are often easily alignable, the sequence similarities are drastically reduced on the nucleic acid level due to the redundancies of the genetic code, see fig.  <dig>  it is desirable, therefore, to utilize the amino acid sequence when aligning coding nucleic acid sequences with higher sequence divergence. this is sometimes done by aligning protein sequences and subsequently back-translating to nucleic acids. in many cases, however, only a part of the sequence of interest is translated in vivo. in addition, there may be alternative proteins encoded in overlapping reading frames within the same nucleic acid sequences. such overlapping reading frames are best known from viruses, including hepatitis b  <cit> , influenza  <cit> , and umbraviruses  <cit> . recently, however, examples have been found in prokaryotic  <cit>  and even in eukaryotic genomes  <cit> .

in this contribution we describe a progressive alignment tool that implements an extended scoring scheme to incorporate simultaneously information on translation products in one or more  reading frames which allows the user to combine all information from both the nucleic acid and amino acid sequences . it makes explicit use of information about overlapping open reading frames, as they occur in many functional sequences, and allows arbitrary weighting for almost all scoring parameters, in order to gain more reliable scoring at certain regions of the nucleic acid sequences where additional amino acid scoring of underlying protein sequence can be utilized.

implementation
the codaln program implements gotoh's algorithm for pairwise sequence alignments with affine gap cost functions  <cit> . the only change compared to this standard recursive algorithm for nucleic acid sequence alignment concerns the match score σ of position i from sequence x with position j from sequence y. instead of taking into account only the nucleic acid letters, each position is considered as a vector containing the nucleic acid letter and the amino acid that would arise from translation in each of the three possible reading frames provided the frame in question is actually translated. thus, we have

σ = β0σn +

β1σp +

β2σp +     

β3σp

where π denotes the amino acid corresponding to the codon uvw. here βk =  <dig>  k =  <dig>   <dig>   <dig>  if both x and y are translated in the k-th reading frame, while βk =  <dig> if the k-th reading frame is not actually translated in either x or y . β <dig> is the relative weight of the the nucleic acid match score, usually  <dig>  in non-coding  regions we therefore retain only the nucleic acid score. fig.  <dig> gives an example. further, it is possible that one gives different weights for alternative reading frames, maybe dependent upon parameters such as preferred codon usage. default is no preference.

the score model is much simpler than the one proposed by hein  <cit>  and implemented in combat  <cit>  and cat  <cit> . in contrast to these approaches, which enforce gap lengths that are multiples of three in order to maintain the reading frame, codaln does not use special gap penalties at all. instead, it relies on the match scores from the coding regions to guide the alignment back into the correct reading frame after a frameshift insertion or deletion. this results in an algorithm that is both faster and able to handle overlapping reading frames.

in its current implementation codaln can deal with  <dig> different codon tables, including the standard genetic code , various non-canonical tables for certain groups of organisms, and  <dig> distinct codon tables for mitochondrial genomes.

the codon tables link the nucleic acid triplets with their encoded amino acids. they are used both for an automatic search for start and stop codons and for translation in the scoring function; see tab.  <dig> 

the program furthermore provides a flexible scheme for modifying the scoring model. both amino acid and nucleic acid scores can be either taken from built-in defaults or read in from parameter files. a number of scaling factors can be specified in order to determine the relative weights of nucleic acids and/or amino acids in all the different reading frames. tab.  <dig> summarizes the most important defaults. the program reads sequences in pearson's  format, genbank file format, viennarna format as well as completely unformatted sequences in any combination.

remark. the effect of the positive default score for nucleic acid mismatches is to reduce the influence of nucleic acid mismatches relative to the amino acid and gap scores.

the program uses the information about translated regions, if contained in the input file. alternatively, codaln attempts to detect all theoretically possible open reading frames which have a user-defined minimal length. exons and fragmented coding regions are joined, translated, and the resulting amino acid sequences are then used for the scoring function in addition to the nucleic acid sequences. the program can optionally regard a sequence as circular so that a coding region can wrap around the ends of the sequence and is still scored correctly. an intermediate output reports the structure of annotated and inferred exons and open reading frames both in a text and in postscript format, fig.  <dig>  at this stage, the user can stop the process, edit the annotation file, and restart the alignment procedure with the modified annotations. the coding regions that are used for scoring can be automatically defined, user defined, modified, or eliminated. before restarting the alignment process, codaln again provides a text and postscript output summarizing the modified annotation. if necessary, this process can be repeated. multiple alignments are built from the pairwise alignments using the same progressive scheme that is used e.g. by clustalw  <cit> : a guide tree is inferred from the pairwise distances and determines the order in which profiles are constructed from alignments of two sequences, a sequence and a profile, or two profiles.

the profile alignments respect the full model of both nucleic acid and amino acid match scores. in the present implementation, the sequences within a profile are unweighted; it would be straightforward, however, to include a weighting scheme that takes the relative distances of the sequences into account to reduce the weight of very similar sequences, as implemented e.g. in clustalw.

RESULTS
more plausible alignments
not surprisingly, we observe that codaln multiple alignments of coding dna sequences have a much larger fraction of gaps with a length divisible by three than clustalw multiple alignments. this is the desired effect of including amino acid-based scoring contributions since it reduces biologically implausible frameshifts. in itself, this is of course not a direct evidence for real improvements of multiple nucleic acid sequence alignments, but it is a good indication that, in coding regions, codaln preferentially makes insertions and deletions at the protein level.

unfortunately, good hand-curated multiple alignments of partially coding sequences do not seem to be available, so that a systematic quantitative analysis  could not be performed. pairwise alignments of coding dna sequences are barely distinguishable from those obtained with combat  <cit>  provided the amino acid contributions dominate codaln's scoring function. we therefore concentrate on a qualitative assessment of codaln alignments in particular application contexts.

hox genes and their genomic neighborhood
hox genes were first described in the fruitfly drosophila melanogaster. they code for homeodomain containing transcription factors  <cit>  and are characterized by a  <dig> amino-acid helix-turn-helix dna binding homeodomain. this domain is highly conserved on the level of protein, but can be quite variable at the dna level.

vertebrates, in contrast to all invertebrates examined, have multiple hox gene clusters that have arisen from a single ancestral cluster in the most recent common ancestor of chordates  <cit> . this ancient cluster in turn evolved through tandem gene duplications from a more ancient hypothetical protohox cluster  <cit> .

we applied both clustalw and codaln to the genomic sequences at the hox <dig> locus. exon  <dig> of hox <dig>  which contains the homeobox, is highly conserved also on the level of nucleic acid, while exon  <dig> has a well-conserved amino acid sequence but exhibits high variability at the nucleic acid level. the non-coding sequence in the intron and the flanking sequences are highly variable. thus, this example is a hard test case for our approach. fig.  <dig> summarizes the gap lengths in the hox <dig> alignments. a comparison of the number of gaps with a length divisible by  <dig> with the other gaps of other lengths is a useful indicator whether coding regions are reasonably aligned: base triplets preferentially should not be disrupted as amino acids within a protein sequence cannot be disrupted. in this example, codaln produces  <dig> gaps with a length divisible by  <dig>  and  <dig> others . while codaln produces a significantly higher fraction of gaps that are a multiple of  <dig> and correctly aligns the coding sequences in both exons, clustalw only treats exon  <dig> correctly, which is highly conserved on the level of nucleic acids. the nucleic acid alignment for the more variable exon  <dig>  in contrast, is much more divergent.

conserved rna secondary structures in levivirus genomes
virus genomes serve as an ideal test case for a procedure that makes explicit usage of information about  coding regions to improve the resulting alignments. improved alignments, as we shall see, increase the sensitivity of the detection of secondary structure elements.

the members of the genus levivirus infect eubacteria . all members of the family leviviridae  are ssrna positive-strand viruses. the replication cycle includes no dna stage. the virions are neither enveloped nor tailed with nucleocapsids that are isometric, 24– <dig> nm in diameter. the total genome length is  <dig> up to  <dig> nucleotides depending on type of strain. most levivirus species have four  overlapping genes, while some exceptions exist which contain only three open reading frames  <cit> .

we have investigated  <dig> complete genomic sequences of the levivirus genus: the enterobacteria phages ms <dig>  ku <dig>  ga, and fr. alignments of the genomic sequences were prepared using codaln and scanned for conserved rna secondary structures using the alidot method  <cit> . the results are compared to earlier studies based on clustalw alignments  <cit> .

the two different alignment processes produce results that seem to be similar at a first glance: the number of gaps and a visual interpretation of the quality of the alignment only does not already announce the significantly different results when further processing the alignments by alidot. interestingly, the combination of codaln and alidot produces a weak signal at the basis of the hogeweg mountain plot .

long range interactions, so called panhandle structures, are known to play a role e.g. in the replication of bunyaviridae  <cit>  and flaviviridae  <cit> . it will be interesting to see if the long-range interactions can be experimentally verified in leviviridae as well.

at the 5'-terminal end of the levivirus sequences we furthermore detect a short gc-rich hairpin adjacent to an unpaired ggg element, see fig.  <dig>  this feature is probably the analogon to the recognition signal site for the rna replicase in alloleviviruses. this stem-loop-structure is well known and defined in qβ .

the qβ replicase amplifies rna templates autocatalytically with high efficiency, and the recognition element, consisting of a hairpin and a short unpaired region at the 5'-terminus, is essential for recognition  <cit> .

discussion
algorithms for the the automatic detection of biologically functional secondary structure elements, such as the ones used here, are dependent upon accurate alignments. clearly, the quality of alignments can be enhanced by including additional biological information. in the case of codaln, we make use of the information on the coding properties of a nucleic acid sequence into the alignment process. we demonstrate this in the case of alignments of the hox <dig> genomic region which consists of non-coding regions and two coding exons, one containing the highly conserved homeodomain, while the other exon is poorly conserved on nucleic acid level. as expected, the quality of the alignment in the coding region can be increased significantly.

virus genomes can serve as an ideal test case for a procedure that makes explicit usage of information about various  coding regions. above we have seen that additional conserved secondary structure elements become detectable with the improved alignment. leviviruses are, despite their short genome, a quite complex example. the sequences are at least in part highly divergent at the nucleic acid level, so that the information on the coding sequences in codaln significantly improves the quality of the alignment. using codaln instead of a purely nucleotide-based alignment program, we found a putative recognition signal site, analog to the one for the rna replicase in alloleviviruses.

CONCLUSIONS
the codaln program was specifically developed for applications to genomic sequences of rna viruses with their partially overlapping reading frames and untranslated regions. the hox gene example shows, however, that codaln is also applicable to other partially coding sequence data. the recent discovery of orfs that overlap with different reading directions  <cit>  suggest to extend codaln to such cases as well. our framework makes such an extension straightforward.

availability and requirements
c source code and documentation may be downloaded from  or .

hox <dig> data sources
the hox <dig> sequences are taken from genbank for homo sapiens   <cit> , hsb nt_ <dig>  <cit> rc, hsc nt_ <dig>  <cit> rc, hsd nt_ <dig>  <cit> ), mus musculus , and morone saxatilis . for danio rerio the sequences are retrieved both from the web server of the danio rerio sequencing project  <cit>  and genbank .

rc = reverse complement; sequence intervals are listed in brackets.

authors' contributions
rs implemented the algorithm, rs and cf performed quantitative comparisons, ilh and pfs conceived this study. all four authors closely collaborated in writing the manuscript.

