BACKGROUND
with the advent of high-throughput experiments, whole genome measurements across multiple conditions have become common. human pattern recognition is still unmatched by computers, making it advantageous to visualize this data. over the past decade, the clustered heat map has become by far the most popular visualization technique. it has been used in thousands of publications spanning a multitude of organisms and a variety of data types  <cit> ; it has even been dubbed  <cit>  a "post genomic visual icon." there are good reasons for the clustered heat map's popularity. it provides a compact, easy to grasp, depiction of a large amount of data across two variables  with large contiguous bands of similar colors that encourage the formulation of more general hypotheses between these variables. still, the clustered heat map has some glaring flaws. as its name suggests, the rows and columns are ordered using hierarchical clustering algorithms . distances in a clustering result are measured along the tree branches and not by the proximity in branch tip ordering. while these measures are related , they could be very different  <cit> . additionally, during clustering, when objects are assigned to different clusters, further analysis essentially involves these clusters as a whole, and the relationship between the elements themselves is lost . consequently, clustering does not provide any natural ordering; the rows and columns may be reordered arbitrarily by 'swinging' the arms of the tree at each bifurcation yet preserving the tree structure. the ordering produced by clustering thus does not respect the intrinsic topology  of the data, making it a poor choice for use in a heat map. this is why 'swinging' based reordering using an independent method is often required, post-clustering, to capture the structure of the data. there are two problems with this reordering. firstly, unlike the clustering schemes, the reordering algorithms, while complex enough to warrant dedicated software packages, are often not elaborated upon or even stated. this reduces the reproducibility of the result. more seriously, this procedure could potentially place  objects that are distant along the tree in close proximity in the row/column order. heat maps are commonly read in this order rather than by their dendrogram structure . effectively a spurious pattern could be created, leading to incorrect results .

so far we assumed the clustering results themselves were meaningful. indeed, when the underlying data is tree-like, or at least some clustering/grouping tendency is present, cluster analysis+reordering performs well. however, this is not always the case. as group separation becomes fuzzier, other data-reduction schemes often outperform cluster analysis. usually, it is considered good practice to test for clustering tendency before performing clustering or to perform bootstrap-like methods to estimate cluster quality post-clustering  <cit> . unfortunately, this kind of information is not typically provided in a heat map. thus validation is only by visual inspection of the color patterns, and this may be misleading.

biological data often has a low dimensional structure that may be visualized as a spatial pattern, so direct use of a suitable dimension-reducing algorithm could, in many cases, be more natural and better characterize the data than the current combination of structure destroying clustering + restoring algorithm. there are many such algorithms whose utility in the analysis of biological data has been demonstrated  <cit> . multiple packages in r  <cit> , and otherwise, implement them. despite this, we believe their use has been limited, at least partially, by the lack of associated visualization methods with the visceral impact of the clustered heat map.

here we present an r package called neatmap to meet this need while addressing some of the deficiencies of the clustered heat map. it consists of novel plot-types in two and three dimensions intended to be used in conjunction with any dimension-reduction scheme capable of embedding results in low dimensional euclidean space  and multi-dimensional scaling ). this places weaker constraints on the data than does  cluster analysis, which requires the data to exist in a tree space. like the heat map, and unlike typical visualization schemes for these methods, neatmap displays the entire dataset underlying the result. it also has provisions to superimpose the cluster analysis results, for mutual validation. this feature is not commonly implemented in software packages, and our implementation is more informative about individual points than existing implementations  <cit> . also note that unlike the clustered heat map, the layout of the plot is almost entirely determined by the output of the dimension-reduction scheme, thereby respecting the intrinsic structure in the data more than a clustering based reordering would.

there are a number of alternatives to hierarchical clustering , designed specifically to produce an ordering that reflects the relative relations between elements. neatmap is a visualization method, and in general it is not intended to compete with these . however, some of these techniques involve ordering by the first component of pca/mds. unless, this component captures most of the relevant information, neatmap, which uses 2d embeddings, is likely to better utilize the dimensional reduction results. on the other hand, we do not consider alternate clustering algorithms such as k-means clustering  <cit> , tight clustering  <cit>  and various model based clustering algorithms  <cit> . although these avoid some of the problems faced by hierarchical clustering as outlined above, and have been shown to perform better  <cit> , they typically just assign  objects to clusters. no relations among objects within a cluster are provided, and typically the relations among clusters is not used either. thus, they do not naturally support the construction of heatmap like plots. self organizing maps   <cit>  used with a small number of nodes/clusters face a similar problem. however, as the number of clusters increases, they essentially involve mapping objects onto points in a low dimensional space much like multidimensional scaling. in this case, it should be possible to use soms in conjunction with neatmap, although we have not considered it in this paper. methods such as model based clustering do not presently have associated visualization methods, but if their results could somehow be mapped onto points in euclidean space, they too could be visualized with the help of neatmap. note that neatmap analyzes the rows and columns of the gene expression matrix separately, and is therefore not intended to visualize bi-clustering results.

implementation
the general class of data considered involves factors  being measured across multiple conditions . for each factor, these measurements will be referred to as its profile. it is assumed here that some dimension-reduction scheme,  has been used to depict the relationship between factors by embedding them into a 2d euclidean space. the plots described here allow us to visualize these relationships, while simultaneously showing the profiles underlying them. neatmap may be used to visualize the results produced by any appropriate dimensional reduction scheme of the user's choice. for the case when the user does not already have a dimensionally reduced result, neatmap can itself invoke and then visualize  one of two dimensional reduction methods:

 <dig>  principal component analysis   <cit>  produces a low dimensional representation of the data using the linear combinations of variables that capture the maximum amount of variance. being a linear scheme, it is very fast, although this may sometimes be at the expense of quality of result.

 <dig>  non-metric multi-dimensional scaling   <cit>  is a dimensional reduction scheme that attempts to represent factors as points in a low dimensional euclidean space such that the  distances between the points in the low dimensional space are consistent with those in the original data. nmds is a non-linear scheme that is typically found to outperform pca, but is slower for large data sets.

the utility of both methods in the analysis of gene-expression data has previously been shown  <cit> . based on the performance differences between nmds and pca, we suggest that if less than  <dig> points are being used, nmds should be used, while pca is better for larger sets . nmds was used as the dimension-reduction scheme for the demonstrations in this paper, because, generally speaking, the embedding produced by nmds is more informative than the corresponding pca result . an r implementation of nmds is included for convenience in the package. there are multiple plots in this package, each emphasizing different aspects of the factor-condition relationship:

 <dig>  heatmap1: this is the traditional heat map, except a dimension-reduction scheme other than clustering  may be used for ordering of rows and/or columns. neatmap itself provides a novel way to do this from a 2d embedding method: normalize the data, or use an amplitude neutral distance measure such as the pearson correlation. then, the embedded result produced by pca, nmds, etc., is often annular and can be parameterized, approximately, by a single variable, viz., the angular position . this is a better option than using the ordering based on a single component. the standard cluster dendrogram may be superimposed on the heat map for mutual validation.

 <dig>  circularmap: similar to heatmap <dig> except the arrangement is circular  rather than linear to emphasize the periodicity of the angular positions obtained as above . it is easy to make comparisons across conditions and factors. the factor clustering result may be superimposed on this plot.

 <dig>  lineplot: the 2d dimensionally-reduced factor relationship result is gridded, and the profiles of all the factors within each grid cell are displayed together as line graphs . this provides a global understanding of the nature of the data and its embedding. however, individual factors are harder to pick out, and comparison across conditions is more difficult.

 <dig>  draw.dendrogram3d: cluster validation of the 2d embedding result for factors  in a 3d environment. the clustering result for both factors and conditions may be superimposed on profileplot3d.

 <dig>  profileplot3d: addresses the inability of heatmap <dig> and circularmap to depict radial information by visualizing the profiles in a 3rd dimension using a rotatable 3d environment .

 <dig>  stereo.profileplot3d: a stereo plot where two versions of the same profileplot3d result are shown as viewed from slightly different perspectives to produce the impression of a true 3d view . the plot may be rotated dynamically to provide different views. this plot should also be useful for producing 3d plots for publications where rotation is not possible.

the functions above are dimension-reduction method neutral; dimensionally-reduced results provided by the user are plotted. convenience wrapper functions make.heatmap <dig>  make.circularmap, make.profileplot3d and make.stereo.profileplot3d are also provided. they take just the raw data as input, perform dimension-reduction using either nmds or pca, and finally produce the appropriate plots. all 2d plots were implemented by using ggplot <dig>  <cit>  and 3d plots using rgl  <cit> . these libraries have numerous functions for additional customization and modification of the plots produced by neatmap.

RESULTS
the utility of the plots described above are demonstrated with the aid of two different microarray-based datasets. the 2d plots are illustrated with the help of the spellman et al.  <cit>  dataset identifying cell cycle related genes in yeast, while microarray data from the human gene atlas study  <cit> , profiling gene expression across multiple tissues, is used for the 3d plots.

2d plots
spellman et al.  <cit>  produced genome-wide time course profiles in yeast using micro-arrays under different synchronization methods. fourier analysis was then used to identify  <dig> genes, with the correct periodicity, as cell cycle related. we consider only these  <dig> cell cycle related genes and study their profiles under alpha synchronization. for an example with a larger number of points without such periodicity see additional file  <dig>  since a natural time ordering of the measurements exists, we are only interested in the relationship between genes.

for comparison to the plots produced by neatmap we used the multiexperiment viewer  software to generate the standard clustered heat map for this data . average linkage hierarchical clustering of the pearson correlation, followed by mev's function for optimal reordering of genes were used. although the periodicity of these genes is clear, and locally good groupings are seen, the pattern as a whole appears quite jagged. this is because a cluster like topology was forced on an essentially continuous distribution. closely related groups of genes are correctly clustered together but the global relations between genes in different clusters  are lost. figure 1b shows the result produced by a 2d embedding of the gene profiles using nmds, again with the pearson correlation. a clear continuous ring like pattern emerges naturally. .

such a ring-like structure is very common when an amplitude-normalized distance measure such as the pearson correlation is used. in this situation, it is natural to parameterize the position of a gene by a single angle. this is what heatmap <dig> does. for each gene, its angular position in the nmds result , with respect to its center of mass, is determined, and the profiles are placed  in a standard heat map ordered according to this angle. the periodic nature of the profiles is now clear, and it is evident that points are arranged by time of up-regulation; essentially the cell cycle phase in which the gene is expressed. while in this case the angular co-ordinate was interpretable as the cell cycle phase, this method works even with non-periodic data when such interpretation is not the possible . note that heatmap <dig> also accepts orderings produced by other methods. the r package seriation  <cit>  offers a variety of these, and heatmap <dig> plots using them for the spellman data set are available as additional file  <dig>  in general, the neatmap ordering is superior, except for the case of rank two ellipse  <cit> . this method, like neatmap, uses angular ordering based on normalized profiles . heatmap <dig> also allows the superimposition of clustering results. evidently, the local arrangements in nmds and clustering are consistent. large scale rearrangement, produced by incorrect 'swinging', however, makes the clustered heat map result seem poor.

there are some long lines in the gene clustering result in figure 1c spanning the entire length of the heat map. this is a consequence of the periodicity of the angular variable, which results in the two opposite ends of the heat map being almost identical. to avoid artifacts from this periodicity, one may use circularmap . the ordering of profiles is identical to heatmap <dig>  except they are placed along a circle according to their angular positions in figure 1b. one additional advantage of this format is that the non-uniformity in the phase distribution stands out more clearly. it is much harder to gain this type of information from a traditional heat map display.

thus, lineplot emphasizes the overall nature and change in profiles with position. however, compared to heatmap <dig> and circularmap, comparison of expression at a fixed time across genes is more difficult. it is also more difficult to quickly look up a specific gene. on the other hand, heatmap <dig> and circularmap are intended for essentially one dimensional results. to deal with the more general case we must use 3d rotatable plots.

assuming the profiles are stored in matrix form in alpha.profiles, the code to produce figure 1c, d, and 1e  is:

pos.nmds<-nmds$x;# perform nmds embedding

lineplot; #1c

make.heatmap1; #1d

make.circularmap; #1e

to use pca instead of nmds, a single parameter specifying this would need to be added to each of these plots.

3d plots
we illustrate the 3d plots using the gene atlas dataset. su et al.  <cit>  used microarrays to analyze the expression profiles of genes in a variety of tissues in both humans and mouse. there is no natural ordering of the genes or tissues, but the relationships between tissues are more easily understood. we therefore primarily focus on these.

since, in the present context, we are not interested in cross-species comparison, for this demonstration only human data was used . the  <dig> genes on the hg-u133a array showing largest variance across the  <dig> tissues were analyzed. functionally, there are broadly  <dig> groups of tissues: those from the brain proper, some nervous system related tissues, and those from other parts of the body. the result of applying hierarchical clustering  using the pearson correlation to the tissues is shown in figure 2a. three distinct clusters are seen, one of which is composed solely of brain tissues. however, the nervous tissues are mixed with the other non-brain tissues in the second cluster and no relation to the brain can be gleaned from the leaf order or distance along the tree.

a 2d embedding of the same data using nmds with pearson correlation was also performed. the cluster analysis result was superimposed on the 2d nmds result in a rotatable 3d environment using draw.dendrogram3d . the same three clusters are present, and there is broad agreement between the clustering and nmds results. unlike the clustering result, however, the relationship between the brain and nervous system tissues is much clearer. the nervous system genes are also quite similar to the central cluster of tissues in figure 2b. apparently, cluster analysis assigns them to this cluster, and in doing so their relationship to the proper brain tissues is lost.

the profiles underlying the nmds result may be displayed in a rotatable 3d environment by using profileplot3d. figure 3a shows this with the cluster analysis results for genes and tissues superimposed on it. the genes were ordered according to their angular positions in a ring-like nmds embedding by making use of the pearson correlation, much like heatmap <dig>  the separation between the three groups of tissues can be seen as before. however, profileplot3d makes it clear that there are different set of genes up-regulated in these groups. the same result can be viewed as a rotatable stereo plot using stereo.profileplot3d . this type of plot could be useful for publications and other environments where dynamic rotations are not possible.

assuming the data is stored in matrix form  in atlas.profiles, the cluster analysis result for tissues in atlas.cluster, and the three groups are color coded in atlas.group.colors the code to produce the plots in figure.  <dig> and  <dig> are:

atlas.nmds<-nmds$x;

draw.dendrogram3d,

label.colors=atlas.group.colors);

make.profileplot3d,label.colors=atlas.group.colors);

make.stereo.profileplot3d,label.colors=atlas.group.colors);

CONCLUSIONS
the clustered heat map, an immensely popular means to visualize large amounts of data, is encumbered by its dependence on cluster analysis. many alternative dimension-reduction schemes have the potential to do better, but have so far lacked effective means to visualize whole datasets in the way the heat map can. neatmap is an r package that addresses this need. using the well-known spellman yeast cell-cycle and human gene atlas microarray datasets, we have shown that a dimension-reduction method  in conjunction with neatmap is more informative than the clustered heat map. it is hoped that this package will increase the popularity of these methods and spur the development of novel visualization schemes.

availability and requirements
project name: neatmap

project home page: http://cran.r-project.org/web/packages/neatmap/index.html

operating system: platform independent

programming language: r

other requirements: r, r packages

license: gpl-3

authors' contributions
sr designed, created the software and drafted the manuscript. yo conceived of the project, helped in the design of the software and drafting of the manuscript. both authors read and approved the final manuscript.

supplementary material
additional file 1
analysis of the gene atlas data using pca and neatmap. unlike in the analysis of the gene atlas data in the main text, where the expression profiles of only  <dig> ests were considered, here we analyzed all  <dig>  ests. the tissue and gene expression profiles were both normalized to zero mean and unit variance. both the gene and tissue profiles were analyzed using pca and were represented using the first two principal components. the gene expressions results lay in a circular region and were therefore parametrized/ordered by their angular positions. the tissue result was more skewed and we therefore ordered tissues according to their first principal component.  shows the result using heatmap <dig> with the rows  ordered by the angular position of the 2d pca embedding and the columns  ordered according their first principal component.  shows the circularmap result using the angular position and tissue ordering as described above. both plots clearly place similar genes and tissue close to each other, although there is no simple interpretation of the angular variable as in the case of cell cycle data.

click here for file

 additional file 2
spellman et al.  <cit> data analyzed using pca and neatmap. the neatmap plots in figure  <dig> produced using pca instead of nmds. spellman et al. data using alpha synchronization was visualized using pca and neatmap. the profiles were normalized to have zero mean and unit variance, and all profiles with missing data were discarded  is the standard pca result, ,  and  show the lineplot, heatmap <dig> and circularmap functions respectively applied to .

click here for file

 additional file 3
heatmap <dig> for the spellman data  <cit> using different ordering schemes in the r package seriation  <cit> . heatmap <dig> may be used in conjunction with orderings produced using external algorithms. the r package seriate  <cit>  contains a number of these. heatmap <dig> using the spellman data  <cit>  and different ordering schemes using seriate are shown in the figure. a) uses the travelling salesman algorithm, b) orders rows according to the first component of the pca embedding of the rows, c) is ordering according to elliptic ordering method proposed by chen  <cit> , d) by the method proposed by gruvaeus and wainer, e) by the 1st component of the mds embedding of rows, f) by the optimal leaf ordering algorithm.

click here for file

 acknowledgements
the authors are grateful to tim gernat for suggesting this package be created, and for feedback about early versions. the authors would also like to thank lisa stubbs for introducing them to the atlas dataset. the comments and suggestions of the anonymous reviewers are greatly appreciated; they helped us improve the paper considerably. this research was partly supported by center of excellence grant for department of mathematics, keio university.
