BACKGROUND
the use of iterative functions to represent nucleotide sequence was originally proposed in  <dig> with the designation of chaos game representation, cgr  <cit> . since then, the cgr technique evolved from being a graphic representation technique into becoming a platform for pattern recognition  <cit> , screening entropic properties  <cit> , and finally into a generalization of markov transition tables  <cit> . that conclusion was further generalized for any symbolic sequence  <cit>  where a dissimilarity metric was also proposed and routes for efficient implementation were established  <cit> . the emerging interest in alignment-free sequence analysis techniques  <cit> , in particular for application to proteomic sequences, raises the prospect of a wider use of cgr and cgr-related techniques  <cit>  capable of exploratory sequence analysis of whole genomes  <cit> . we have subsequently examined the advantage of using non-genomic word-statistics  for biological sequence analysis  <cit>  with an application to the scop protein database  <cit> . the strengths of that approach suggest that even more interesting results would be achieved by order-free analysis. however, the potential of hyper-dimensional generalization of cgr such as the use of universal sequence maps, usm  <cit> , are hard to convey and realize in the absence of a 2d projection that retains the bijective mapping property of this technique. this conclusion is particularly clear in a recent report exploring cgr application to aminoacid sequences  <cit> . in that work, in order to benefit from the scale independency of chaos game applied to proteins, the reverse encoding of the aminoacid sequences back to the  <dig> unit alphabet nucleotide sequences is the solution of choice. furthermore, as detailed in the derivation of sequence similarity metrics and density kernel functions  <cit> , cgr is most useful as a bijective mapping of a sequence of symbols into a numeric vector of the same length, rather than as a technique to compress sequences into individual points. accordingly, the work reported here is driven by the need to advance the identification of a 2d projection of the vector of cgr positions that is still applicable to longer, often non-genomic, alphabets.

either as a dimension reduction technique to represent hyper-dimensional cgr  <cit>  or an extension of 2d representation beyond nucleotide sequences, the generalization of bijective iterated maps is desirable for scale-free visualization and analysis of biological sequences. three different approaches have been proposed to represent the iterative function results for sequences with more than  <dig> unique type of units. those efforts have often been specifically driven towards extending to protein sequences the advantages of cgr of nucleotide sequences.

 <dig>  a possible solution is to keep the quadrangular representation for each unit and arrange them in a tabular format  <cit> . however, this solution sacrifices the regularity of the cgr solution where changing the position of the elements of the alphabet  corresponds to a simple translation of the coordinates of the map. in order to preserve equivalence between units of the alphabet, the iterated dividing ratios would have to have the same value for all elements of the larger protein alphabet.

 <dig>  to satisfy the desirable equivalence between all elements of the alphabet  one could simply keep the 1/ <dig> ratio of the original cgr  <cit>  independently from the length of the alphabet. this solution has in fact been explored  <cit>  by morphing the unit square into a polygon with as many vertices as units in the alphabet. however, this second option sacrifices the bijective mapping property for alphabets with more than  <dig> units. without this property, the graphical projection becomes just a visualization technique from which it is no longer possible to completely recover the sequence composition.

 <dig>  finally, the third possibility, chronologically the first extension to be proposed, is to adjust the iterative step such that the prized bijective property is preserved  <cit> , which enables recovery of sequence from map position. however, in that work, the iterative step was adjusted to inscribe the circles where the polygons are inscribed, not the polygons themselves. as a consequence, neither the cgr nor the iconic three alphabet unit map, the spierpinsky triangle, appear as particular solutions of this formulation.

the study reported here takes the third of these approaches  <cit>  as the starting point and then seeks to identify a new rule that maximizes the packing density of the projection to the point where the polygons are inscribed directly within each other. in addition to providing a more efficient visualization of the sequence, the specific goal of this study if to obtain a solution that also generalizes the  <dig> alphabet unit solution by the spierpinsky triangle and the  <dig> alphabet unit solution of genomic cgr.

methods
the algorithms were identified using mathcad  and matlab  programming environment was used to deploy them. matlab was also used to produce the graphic displays presented in this report. the pseudo-random number generator of this programming environment was used to produce the  <dig> -long random sequences used for the simulations. this manuscript is also accompanied by a graphic user interface  to a matlab application where arbitrary symbolic sequences can be processed using different dividing ratios, including the generic solution identified by this study.

the main goal of the work described here is achieved with the identification of the dividing ratio in equation  <dig> for which maximum packing of nexted, non-ovelapping polygons is obtained. the identification of this equation was achieved empirically with the assistance of mathcad's symbolic processing engine. specifically, different n-polygons were inscribed in a circle of unitary radius and, using basic trigonometry: the dividing ratio was obtained as the fraction of the distance between any two edges that would identify the perimeter of the target polygon. the observation that the dividing ratio between any two edges is a constant value for each n-polygon was itself an empirical observation. the collection of solutions obtained was symbolically processed using mathcad's equation simplification tool to generate the solution in equation  <dig> 

RESULTS
current generalization
the starting point for the attempt to find a generic formulation of cgr that is applicable to all alphabets is twofold. firstly and foremost there is the original cgr formulation for nucleotide sequences  <cit> , using a dividing ratio of 1/ <dig> to fill a unit square domain homogeneously. secondly, there is the proposition that there is a function of the number of edges in a regular polygon, n, that will yield a maximum dividing ratio, s, where the bijective property is still preserved. fiser et. al  <cit>  proposed equation  <dig> as a suitable description of that dependency.

  s = )- <dig> 

that solution was designed to preserve the bijective mapping property by avoiding overlap between the circles that enclose the individual projections. however, that solution does actually not produce the full packing of the original cgr for n =  <dig>  as noted by the proponents themselves in the original report , and graphically recalled in figure  <dig>  it also sets a looser packing for n =  <dig>  where the ratio, s, is  <dig> , instead of 1/ <dig> as necessary to produce the sierpinki's triangle.

proposed generalization
here we seek to identify an alternative general formulation for the chaos game dividing ratio parameter, s, that will produce the reference structures as special solutions. the relevant reference structures include three maps that use dividing rations of 1/ <dig>  for n =  <dig>   <dig> and  <dig>  the first is the 1d cgr, i.e. n =  <dig>  used to repeatedly generate hyper-dimensional representations in the unified sequence map technique  <cit> . the second reference representation is the emblematic sierpinski triangle  <cit> , for n =  <dig>  finally and most important, the original formulation of cgr for n =  <dig>  <cit> , where the unit square is covered homogeneously for a dividing ration of 1/ <dig>  we have achieved this goal by following a deductive procedure that, while fastidious, was derived using basic trigonometry. the proposed solution was found by noting that a tighter packing would be achieved if instead of inscribing the circles defined by the polygonic projections areas, the inscription was determined for the polygons themselves. the final solution  is presented in equation 2:

   

discussion
the claim that equation  <dig> is an accurate generalization of chaos game for any alphabet is best first illustrated graphically. in the right hand column of figure  <dig>  the projection areas defined by the proposed solution are produced for simulated sequences made using alphabets of increasing length. this includes the reference lengths of  <dig>   <dig> and  <dig> where the desired special solutions are correctly defined. for comparison, the formulation that served as starting point for this exercise, equation  <dig>  is illustrated on the left hand column of the same figure.

it is important to note  that similarly to the reference circle packing solution by fiser et. al , the polygon packing achieved by equation  <dig> is also an heuristic solution. this is not a rare situation when it comes to fractal geometry  <cit>  where the numerical solutions for a novel graphical configuration are often the starting point, rather than the conclusion, of the deductive process  <cit> . it nevertheless suggests that further analysis of this solution is needed to uncover simpler and more meaningful patterns.

the relative gains of the proposed formulation for different alphabets are assessed in figure  <dig>  it is noted that the two formulations converge as the alphabet length increases but not monotonically. instead figure  <dig> shows that equivalence between the two formulations occur at regular increments of  <dig> in the number of vertices of the projection, starting with binary vocabularies . the explanation for this observation becomes immediately clear when the two solutions are compared graphically, in figure  <dig>  that figure shows that for the equivalent solutions the vertices shared between distinct polygon areas occur at the exact position where the two involving circles intercept.

as overviewed in the background section, the enduring popularity of iterated maps to represent biological sequences has gradually expanded from a convenient graphical illustration into an efficient computational framework for computation. two routes appear now possible for furthering the cgr transformation. one possibility if to relinquish the requirement to project sequences in two dimensions and instead use unitary hypercube maps  <cit> . the other possibility assisted by the formulation reported here is to revisit cgr kernel functions  <cit>  to enable feature detection through entropic profiling  <cit>  for non-genomics sequences. interestingly, the  <dig> unit alphabet of genomic code is the exact point where both routes are equivalent, an observation that has been noted, and used, by other authors analyzing non-genomic sequences  <cit> .

CONCLUSIONS
a generic formulation of chaos game representation dividing ratios for 2-dimensional displaying was identified. the new formulation determined ratios for the iterative function that produce the reference representations for alphabets length  <dig> to  <dig>  specifically, it produces sierpinsky's triangle for n =  <dig> and the original, homogeneously covered chaos game representation for n =  <dig>  given the fact that the density of cgr correspond to a order-free transition matrix – each consecutively nested polygon corresponds to an additional markov chain order – the value of consistent graphical representation techniques is, potentially, enormous. furthermore, the growing interest on alignment-free sequence dissimilarity metrics suggests a new role for chaos game iterative functions as a scale-free approach to word-statistics. the formulation identified to optimize the dividing ratio is, as is often the case with fractal processes, an empirical result that should be object of further analysis to uncover simpler and more meaningful patterns. nevertheless, and regardless of the actual cgr computation being performed in two or more dimensions for sequence with longer alphabets, such as proteins, a generic graphical visualization technique is now at hand.

availability
the m-code  used to generate the figures as well as the application depicted in figure one are made available with open source at .

authors' contributions
jsa identified the optimal packing ration  and wrote the report in close consultation with sv. jsa and sv have jointly performed the exploratory work leading to the three point conceptualization of optimal increment ratios in iterative maps, described at the end of the background section.

