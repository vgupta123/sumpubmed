BACKGROUND
time course microarray experiments are frequently conducted to study the dynamics of gene expression at several consecutive time points. associated data sets often require own custom-made analysis strategies, and cannot been adequately exploited with standard methods which were established to compare groups. the variability of the dynamics, spanning from fast and transient to slower, long-lasting changes, is a challenge for the analysis of time series microarray data. in perturbation experiments, sampling frequency is often adapted to reflect the expected changes in gene expression. this kind of experimental design leads to irregularly sampled data sets. irregular time sampling may also arise when time points are chosen to be omitted after quality control, for instance when the respective arrays represent outliers with respect to the global trajectory resulting from principal component analysis  as shown in fig.  <dig>  if replicates are considered, their number may also vary due to the experimental design or quality issues. often time course-data provide only one replicate per time point.
fig.  <dig> trajectory of the transcriptomes: axes represent principal components explaining  <dig> % of the variability in the data. measurement points represent the entire transcriptome under three different stimulation experiments projected onto the first three principal components. for early time periods, all three transcriptomes correlate very well with each other. over time, the transcriptomes develop stimulus dependent. stimulus  <dig> leads to a strong change in the transcriptome, while stimulus  <dig> has a much smaller effect. possible outliers are measurement points that show a large distance from the trajectory or from related replicates




the first methods applied on time course microarrays including sam  <cit> , anova  <cit>  and limma  <cit>  where extensions of methods for contrasts between states and do not include the order of time points into the analysis  <cit> .

edge was one of the first methods taking the time sequence into account  <cit> . edge involves a fit of natural cubic splines to gene expression profiles, and a bootstrap approach providing a reference distribution. masigpro  operates in a similar manner  <cit> . sohn et al. have modified edge by using a permutation-approach and controlling the family wise error rate  <cit> . later, they applied the fwer as a significance threshold and made the method more robust using quantile regression  <cit> . these methods have three drawbacks when used to analyse sparse data containing sharp transient expression changes. first, the information of the time course measurements is underestimated. biologically meaningful peaks might be overlooked when the related measurement points are rejected as outliers. second, the information of the permuted reference time course is overestimated. the permutation of the measurement points within the time sequence is often used to produce reference data of the same distribution, but without the original ordered pattern of dynamic changes. this estimation of the error rate can fail in sparse data sets when the expression dynamics exhibit a sharp peak. here, permutation of the time points merely shifts but does not wipe out the peak. with this method, the signal-to-noise ratio of genes displaying fast variations in expression can be underestimated and related genes are erroneously removed from analysis. the third problem is that a large number of computationally expensive permutations is required, to avoid granularity in the resulting ranking  <cit> . granularity refers in this case to hundreds of genes with exactly the same p-value. repeated application of the method may shift a gene to another p-value cluster, which impedes reproducibility of the results.

an alternative method using multivariate empirical bayes statistics and one-sample hotelling t
 <dig> statistics is implemented in the r package timecourse  <cit> . this package does not provide a significance threshold and requires a minimum number of replicates. also, betr   <cit> , which uses random-effects models and considers co-expression, relies on time point replicates. network-based methods combine cluster analysis with detection of differential expression and focus also on co-expression  <cit> . but co-expression is a very strict assumption for the extraction of differentially expressed genes from time course data. in tightly regulated and dynamic gene regulatory networks, it seems to be very unlikely that cells do not regulate their genes at any of the sampled time points. some of the target genes could have a negative feedback loop and could block their own expression, which could explain fast transient dynamic changes, while other target genes could have a positive feedback loop and therefore maintain gene expression longer. additional regulation could happen after a longer time or very fast without protein translation, i.e. with functional large non-coding rnas  <cit> . longitudinal co-expression might overlook target genes that are affected by the stimulus, but which are additionally regulated by other dynamic mechanisms. moreover, the longer the sampled time period is, the higher is the risk that initially unaffected genes show co-expression behaviour due to completely different mechanisms without relation to the stimulus. the risk is higher to detect false positive target genes.

methods based on gaussian processes select differentially expressed genes from one channel experiments  <cit>  and from two channel experiments  <cit> , implemented in the r package gprege. however, the implemented gaussian processes suffer from massive computational cost and the required time point replication. an alternative for two channel experiments is bats   <cit> .

another class of time course methods is based on principal component analysis   <cit> . inspired by a trend in the data analysis to fit the true underlying functions  <cit> , methods based on functional pca  were developed  <cit> . the most recent method  <cit>  can handle single replicated time course data, predict individual dynamics with pace   <cit>  and yields reasonable results for moderately slow expression dynamics. this method was successfully applied to clinical data derived from immune response studies  <cit> . for the data set considered in our study, involving perturbation experiments on cell cultures with fast expression changes, this method did not perform reliably. in particular, we observed counterintuitive differences between our original data and the original data being displayed by this method after preliminary transformation by pace. first, the method transforms flat gene profiles into profiles exhibiting strong temporal changes, shown in additional file 2: figure s1a. second, the transformed trajectories are too stiff to follow sharp peak behaviour like in additional file 2: figure s1b. this happens before the actual time course analysis method is applied.

finally, even simple methods can yield good results for sparse data, for instance by computing distances or the area between curves  <cit> . also, a sliding window, capturing a small subset of consecutive measurement points, was discussed, but cannot be applied to non-equidistant measurements  <cit> .

to sum up, most existing methods cannot reliably analyse sparse and irregularly sampled time course gene expression data sets. further details and a method comparison are provided in the additional files. a method overview is given in additional file 2: table s <dig> 

method ttca
the method ttca  includes different scores to identify genes showing differential expression dynamics of various kinds.

the dynamics score
di captures slow gene expression dynamics, the peak score
pi selects fast transient expression changes, the integral score
ii accounts for absolute changes in mrna production level in different time periods, and a relevance score
ri provides information on existing references in the literature. a further option allows for gene ontology groups to be processed in a similar manner as individual genes. additionally, the minimum overlap score
Θ
i is computed to identify gene ontology groups with maximal separation of the group specific expression bandwidths between two conditions. significance threshold and effect size are calculated for each score and the consensus score
ci combines the different scores for a final ranking.

for the detection of differential gene expression based on two channel microarray data, we recommend to create a constant gene expression profile as control profile. this control profile might start with the expression value of the first time point, or could be set to the average expression value of the experimentally derived gene expression profile.

the gene expression level is based on an assembled set of detected probes of  <dig> bp length. in this article, we focus on the expression dynamics of genes, however, those probe level signals can also be mapped to related transcripts or other longer oligonucleotides. these can equally be analysed with ttca.

in the following section, preprocessing for microarray time series data is addressed. next, all relevant scores and components of the proposed method are explained briefly.

pre-processing of microarray time course data
microarray data are usually afflicted by batch effects, i.e. unwanted variability in the samples arising from their experimental, technical and digital processing history. batch effects can be introduced when samples are processed on different hybridisation batches , or when a subset of the samples experienced slightly different experimental conditions . many batch effects can be technically detected and can be removed if enough replicates are available. microarray time course data sets are frequently sparse and the number of replicates per time point is low. in such data it is impossible to detect batch-effects  <cit> . moreover, the frequently used quantile-normalisation, implemented in rma  <cit> , is based on the assumption that the majority of the genes shows a constant expression level. however, for time series experiments this might not be the case. especially, cancer cells are known to have a high variability in their gene expression profiles  <cit> . perturbation experiments might induce secondary gene responses that eventually result in considerable expression dynamics for a broad range of genes. it has been shown that thousands of genes can change their expression over time after stimulation  <cit> . instead of using multi-array normalisation methods like rma for time course analyses, we recommend to use within-array normalisation methods which process each array separately, independent of arrays taken at other time points. in particular, we recommend individual array standardisation with scan  <cit> , which is robust against gc-content bias and some batch effects.

dynamics score
we define a dynamics score in three steps based on the method edge  <cit>  and its extension using quantile-regression  <cit> .

the null hypothesis h
 <dig> is that the stimulus does not significantly alter the expression level of gene i. thus, the measurements of the respective conditions  are derived from the same expression pattern and can be combined for a single function fit. in fig. 2
a, the null hypothesis is represented by the fit to all measurement points without distinction between the conditions . the alternative hypothesis h <dig> is that the measurements are derived from different expression patterns, and that the two conditions have to be treated separately. hence, the data is split into the two conditions, and each time course is fitted to an individual function . the sum of the residuals of the two individual function fits should be smaller than the sum of the residuals of the single function fit to fulfil the alternative hypothesis h <dig> 
fig.  <dig> score characteristics: a) dynamics score. the alternative hypothesis is represented by the solid line. the dashed line represent the null hypothesis . b) peak score. is based on the largest distance  between measurement points for two different stimuli. the solid line represents the fit achieved via quantile regression with eq. . c) integral score. the area between two dynamics indicates the absolute mrna production change. this value can be computed for different time intervals. d) different score distributions after z-transformation and the merged consensus score distribution




the fit is based on quantile regression  <cit> . the fitted function g and the residuals r
ij are obtained by minimising 
  <dig> ∑j=1nρ <dig> )−λ∫|g′′|dt⏟smoothes the function. 


the quantile regression algorithm is symbolised by ρ
 <dig> , and implemented in the r-package quantreg  <cit>  in function rqss(). the index  <dig>  indicates the use of the median to provide the most robust curve fit. the continuous function g is fitted to the measurements y
j,j∈{ <dig> …,n} taken at time points t
j,j∈{ <dig> …,n} with n measurements in total. the first term of eq.  represents the absolute, not the quadratic distance between the measurements y
j and the function g. microarrays are inflicted with a certain proportion of outliers  <cit> . if these outliers are weighted quadratically by least-square approaches, as most methods do, a gaussian distributed error model is assumed. however, a gaussian error model is not a good choice for the characteristics of frequent outliers, as this approach biases the fit stronger than the absolute distance. the second term of eq.  penalises the absolute number of directional changes in the gene expression dynamics to avoid over-fitting. the penalisation term is weighted by the scaling factor λ. we estimated λ= <dig>  for scan-processed data with the help of real-time pcr profiles from genes that are known to be differentially expressed after the stimulation. the obtained residual-vectors r
i are modified by weighting vectors Ω. these weights account for the uneven experimental design in the following way: first, each time point should have the same weight independent from the number of replicates. second, more values in one condition than in the other result in higher residuals without a better fit. ttca balances the uneven design. third, to reduce the unwanted bias by this vector, the sum of all vector elements of the weighting vector is forced to the same value. the scalar product of the residual and weighting vector yields a scalar value for each gene.

the dynamics score
d
i is then defined by 
 di:=h0h1=<Ωh <dig> rih0><Ωstim,ristim>+<Ωctrl,rictrl>. 


the relation h0/h <dig> quantifies how much worse the null-hypothesis fits in comparison to the alternative hypothesis and is easy to interpret.

peak score
perturbation experiments may invoke fast and transient peak dynamics in a gene subset, where the peak might be captured by only a small number of measurements. in this case, peaks, although biologically meaningful, may be overlooked by microarray analysis methods. to account for this, we introduce the peak score. let t={t
 <dig> …,t
n} denote the set of the measurement time points. for each time-point t∈t, we define fitstim and fitctrl as the averages of all replicates for the stimulated and control conditions, respectively. the peak score is then given by 
 pi:=maxt∈tfitstim−fitctrl. 


the success of this approach has been pointed out by di camillo et al.  <cit> . to test whether differences between the expression profiles are significant, we use the robust  <dig>  quantile of all available standard deviations, for a minimum of  <dig> genes and multiple replicated measurement points as a noise-threshold. a gene i is considered as significant, if pi is more than twice the noise-threshold . to account for a possible correlation between the standard deviation and mean of gene expression, ttca sorts the genes with respect to their mean values and divides them into a minimum of  <dig> groups, each containing at least  <dig> genes. the noise-threshold is then computed separately for each group. ttca can either use replicated time points to provide a noise threshold or the distribution of the score values to provide a significance threshold. replicates are not required but can be used. if less than  <dig> measurement points are replicated, the program will provide only a ranking and the significance will be calculated as in the other scores as described below.

instability score
some genes, found highly significant in the previous scores, exhibit an extreme variance between replicates. if the median of the standard deviation of replicated measurements of gene i is two-fold larger than the gene group noise threshold, these genes are classified as unstable. the instability score is binary and appears in the results table together with a relative effect size, explained below. true indicates instable genes that are likely false positives, and false indicates genes with acceptable variance between replicates. for an example see the gene snora <dig> in table  <dig> and fig.  <dig> 



integral score
the integral score is intended to quantify the area between the expression profiles for control and treatment. to compute the integral between the two expression dynamics of each gene i we first linearly interpolate the missing values of the quantile regression at measured time points t and at time points where the curves intersect. we then estimate the area between the two dynamics di applying the trapezium rule. this integral 
 ii:=∫t1t2distim−dictrldt  for each gene i serves as a measure for the difference in the mrna production between the two conditions. figure  <dig> c illustrates the integral score, which can be computed for different time intervals. hereby, four separate scores are computed  to distinguish between the early response, the intermediate response, the late response, and the response over the whole period. the first three scores are defined for subsequent time-intervals, which can be defined by the user. these scores allow to distinguish between slowly and rapidly responding genes, and might also be used to distinguish a secondary response from the direct response to the stimulus. by using a z-score transformation and averaging of all three integral scores the combined integral score
iicomb is obtained. the combined integral score emphasises the largest changes in gene expression for each period stronger than the more outbalancing complete integral score
iicomplete.

relevance score
by using the r package rismed  <cit>  we query the pubmed database of publications for records that match both the gene name and the condition. for each gene i this yields a number of publications p
i. we use a log-transformation to normalise p
i between  <dig> and  <dig>  and obtain the relevance score
 ri:=logpmax,  where p
max:= maxi. this score indicates whether a gene is already well known to be associated with the condition or potentially a new target.

consensus score
the consensus score is used for the final ranking of the genes and combines the four scores. by merging the dynamics score with the peak score, combined integral score and relevance score, and normalising the result to be between  <dig> and  <dig>  we obtain 
 ci:=d˘i+p˘i+i˘icomb+r˘i <dig>   whereby score s is z-transformed s˘ before the average is computed. figure 2
d shows the z-transformed distributions of the score values. to better centre the relevance score distribution, only non-zero values are considered for the z-transformation.

significance
except for the peak score we did not define any significance threshold, yet. for the other scores a significance level can be computed by a one-sided, one-group hypothesis test. the program fits the cauchy, gamma, log-normal, logistic, normal, poisson and weibull distribution to the empirical distribution of score values using the function fitdistr() provided by the r package mass  <cit> . the log-normal distribution is only defined for strictly positive values, however, by shifting the x−axis it can be fitted in the negative part as well. the obtained significance threshold is transformed back afterwards. the distribution function providing the best fit of the distribution of score values is automatically selected and plotted. to estimate the significance for a differentially expressed gene we provide the p-value as well as the effect size  <cit> . the effect size of the peak score is defined as the distance between the expression dynamics, normalised by the maximum distance possible, i.e. the highest expression value within the data set minus the lowest expression value within the data set. the largest observed expression change in our data set covers  <dig> % of the whole detection range and represents the effect size. the same normalisation is used for the instability score and also for the integral score, where the maximum area is given as the maximal distance multiplied by the time period. in the consensus score, a gene is considered to be significant, if it is considered significant in at least two scores.

method extension for gene set analysis
to investigate the behaviour of functional groups, the genes are linked to gene ontology groups using the biomart-package  <cit> . then the expression level at the initial time point is subtracted from the gene expression profile of each gene. thus, all profiles are initially zero and only the expression change with respect to the first value is observed . second, the average expression together with the upper sd
u and lower sd
l standard deviation of all genes within each ontology group are calculated for each time point. the upper standard deviation hereby accounts for all measurement points above the group mean and the lower standard deviation accounts for all measurement points below the average. separation into upper and lower standard deviation helps to better recognise when the subset of the functional group shows increased  expression. this would lead to enlarged upper  standard deviations, where the classical standard deviation does not allow such distinction. we then consider gene groups differentially expressed if their expression bandwidths are separated by the condition, i.e., that the variability between genes in the same ontology group are small in contrast to changes caused by different treatments. to test, whether the expression bandwidths are separated by condition, we distinguish two different cases, as shown in fig. 3
b. on the one hand, the band of the control can be higher than the band of the stimulus , on the other hand, the situation can be reversed . we search for the minimum overlap 
 θij=max−sdl)−+sdu)⏞case a;−sdl)−+sdu)⏞case b12sdu+sdl+sdu+sdl⏟bandwith  of both bandwidths for a combination of time points j∈{ <dig> …,n} and genes i, where n indicates the total number of measurements per gene. we are only interested in the maximum distance between the bands or the minimum mutual overlap for the score Θ
i= max at each time point. positive values indicate a separation of the bands and negative values indicate overlap. the average expression profile for each gene group and treatment is then used to calculate the other scores as described above. hence, ttca ranks functional groups high if they contain genes with similar expression pattern over time within a condition and if they clearly change the expression dynamics from one condition to the other. although we did not compare the performance of the gene set module, the application on real data seems promising. alternatively, the user can use the ranking of the individual genes to apply other methods for gene set analysis.
fig.  <dig> gene set analysis. a) example analysis result with the average of n genes. b) scheme for minimal overlap calculation. the continuous lines represent the average expression of the gene group at one time point for either the stimulated sample  or the control . the dotted lines represent the average with upper  or lower  standard deviation




computation time and further packages
ttca is computationally fast using about  <dig> h for one contrast. this includes the analysis of expression dynamics and the generation of relevant figures on a standard laptop . furthermore, ttca uses the r-package tcltk <dig>  <cit>  for a progress bar and the r-package venndiagram  <cit>  to show automatically the overlap of significant genes across scores.

methods for lung cancer data set
cell seeding, growth factor stimulation and microarray processing
the cell line h <dig>  were obtained from lgc standards . the cell line was authenticated by str-analysis  and routinely checked for mycoplasma contamination. h <dig> nsclc cells were seeded in 6-well-plates with  <dig> · <dig> cells per well. after incubation for  <dig> days, cells were washed  <dig> times and supplemented with dmem without fcs for overnight starvation. on the following day, cells were stimulated with  <dig> ng/ml of egf diluted in starvation medium. samples were harvested after  <dig>   <dig> ,  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> hours. subsequently rna was extracted, as described below. total cellular rna was isolated with the nucleospin rna ii kit according to the manufacturers’ instructions. rna concentrations were determined by measuring the absorbance  using a nanodrop®;nd- <dig> spectrometer. the purity of the rna was determined through the ratio of the absorbance at 260nm and 280nm. rna with a ratio ≥  <dig>  was used for further analysis. after assessing rna integrity using the agilent bioanalyzer,  <dig> ng in  <dig> μ
l per sample were handed over. after amplification, labelling with biotin and fragmentation of the rna, hybridisation with genechip human gene  <dig>  st array was performed for  <dig> h at  <dig> °c. subsequently, washing and staining was performed using an affymetrix fluidics station  <dig> and the microarray was scanned using an affymetrix genearray scanner  <dig> 

microarray preprocessing
the method single channel array normalisation   <cit>  was used for the preprocessing. for the mapping of probes to genes we used the netaffix.v. <dig> annotation file which is available from the array manufacturer. for the transcript-level we used brainarray-ensembl-t-v. <dig> . <dig>  <cit>  for annotation. the quality was additionally assessed before and after preprocessing with the r-package arrayqualitymetrics  <cit> . four possible outliers were visible in the 3d-pca-plot generated with pcamethods  <cit> . they were investigated in contrast to other replicates or to the closest measurement points with limma  <cit>  and piano  <cit>  under use of biomart  <cit>  for go-mapping. we assumed a problem with the magnesium concentration and excluded the affected arrays from the analysis.

RESULTS
the approach presented here allows the identification of biologically relevant genes from noisy, sparse, and possibly incomplete time course gene expression data sets from perturbation experiments. in the case presented in our study, the administration of the potent mitogen egf led to the identification of numerous known egf/egfr induced target genes as indicated by the relevance score, such as ctgf , egr <dig>  ptgs2/cox <dig>  and transcription factors of the ap <dig> family including jun and fos .
fig.  <dig> time course profiles of genes considered significant. red: with egf stimulation. blue: control. line: quantile regression. points: measurements. snora <dig> is ranked highly significant, but the instability score is high and identifies this finding as false positive




the top-ranked genes represent key factors involved in the initiation and maintenance of a mitogenic response in tumour cells. interestingly, many of the immediate egf-dependent targets listed in table  <dig> represented transcriptional regulators, for instance egr <dig>  egr <dig>  jun, fos, or myc, and secreted chemokines like ctgf, il <dig> , or kitlg/scf, illustrating that egf is a central inducer of pro-proliferative gene expression and paracrine regulation in lung cancer. these results are confirmed by previous publications describing for example, that activation of the pi3k/akt pathway, which typically stimulates the transcription factor ap <dig> consisting of jun/fos heterodimers, can stimulate il <dig> production and secretion in nsclc cells  <cit> .

however, our approach not only confirmed findings from other studies. even more important, we identified a long list of previously un-published downstream effectors  significantly regulated genes have not been described in the context of egf/egfr signalling). for example, the target gene il <dig>  has been shown to inhibit nsclc cell migration suggesting that egf-induced il <dig> might shift tumour cells from a migratory to a mitotic phenotype  <cit>  . the high ranked gene glipr <dig>  has recently been identified as tumour suppressor in lung cancer  <cit> , however, the relationship between glipr <dig> and egf was yet unknown. in addition, the significant regulation of the micro-rnas mir- <dig>  and mir <dig>  suggests that egf supports the oncogenic properties of nsclc cells via mirna-dependent mechanisms  <cit> .

we compared ttca with limma, edge and masigpro . we assume, that the number of pubmed publications, linking egf stimulation with individual genes, can be used to generate a ranking of expected target genes. additional file 2: table s <dig> shows the ranking of the top  <dig> expected genes, determined by ttca, limma, edge and masigpro. additional file 3: table s <dig> shows the top  <dig> gene names displayed by each method investigated. additional file 2: figures s2-s <dig> show the top ten expression profiles of each method investigated and a p-value distribution provided by edge. the code for the method comparison is in additional file  <dig>  the source code of the ttca method is in additional file  <dig> 

CONCLUSIONS
we have presented a new method for microarray time-series data analysis, specifically intended for difficult experimental designs with sparse measurements. even when the experimental design involves a uniform data collection, experimental problems can lead to the exclusion of individual arrays, and thus to the loss of measurement points after quality control. sufficient replicates are important for proper microarray data analysis  <cit>  and remain important in more accurate next-generation sequencing  <cit> . however, even if such data are difficult, they nonetheless contain helpful hints for further investigations. ttca is able to detect different characteristics of the changes in expression dynamics and always provides not only p-values but also effect sizes for an optimal significance interpretation  <cit> .

our method can also be applied for data sets with less complicated designs  and yield very good results, comparable with other tools. it should be noted, however, that the scores included in ttca detect specifically expression patterns arising after perturbation or stimulation experiments. for detecting specific dynamical behaviours, e.g. oscillations, we recommend specialised methods like lomb-scargle periodograms  <cit> , jtk-cycle  <cit>  or genecycle  <cit> .

we believe that the developed ttca package is a valuable and efficient tool for the dissection of important information that is usually concealed by experimental and biological variations leading to data heterogeneity. the connection with the number of pubmed publications has to our knowledge never been included in other packages and supports the user in distinguishing between new and already known genes affected by the applied perturbation. further new features  are the automatic detection of the best density function, the approach to detect false positives , or the distinction between early, middle and late response. also, the outbalancing of the sampling design using weighting factors is an important new feature. moreover, we provide a new gene set significance approach, which pools genes into gene ontology groups which expression bandwidths are separated . ttca provides automatically quality checks and plots the gene expression profiles. thus, the user can easily judge the performance of the package for any included data set. strong advantages of ttca are the high degree of transparency, the multitude of visual output for quality assessment, search flexibility and sensitivity also in cases where other methods cannot be applied.

additional files

additional file  <dig> r code of ttca . 





additional file  <dig> method comparison. a table summarises the methods mentioned in the introduction, method shortcomings are further discussed and ttca is compared with some applicable methods. includes table s1-s <dig> and figures s1-s <dig>  





additional file  <dig> the complete result table is given in table s <dig>  




abbreviations
aktakt serine/threonine kinase 1

anovaanalysis of variance

ap1activator protein 1

aregamphiregulin

batsbayesian analysis of time series

betrbayesian estimation of temporal regulation

cox2cytochrome c oxidase subunit ii 

crancomprehensive r archive network

ctgfconnective tissue growth factor

dmemdulbecco’

s modified eagle medium; dusp5dual specificity phosphatase 5

edgeextraction of differential gene expression

egfepidermal growth factor

egfrepidermal growth factor receptor

egr1early growth response 1

egr2early growth response 2

eupleuropean union public licence

f3coagulation factor iii 

fcsfetal calf serum

fosfbj murine osteosarcoma viral oncogene homolog

fpcafunctional principle component analysis

fwerfamily wise error rate

glipr1glioma pathogenesis-related protein 1

gogene ontology

hif1ahypoxia-inducible factor 1-alpha

il8interleukin 8

il24interleukin 24

junjun proto-oncogene

junbtranscription factor jun-b

kitv-kit hardy-zuckerman  <dig> feline sarcoma viral oncogene homolog

kitlgkit ligand

limmalinear models for microarray data

masigpromicroarray significant profiles

mir4320microrna 4320

mir554microrna 554

mycv-myc avian myelocytomatosis viral oncogene homolog

nsclcnon-small cell lung cancer

paceprinciple component analysis through conditional expectation

pcaprinciple component analysis

pcnaproliferating cell nuclear antigen

pcrpolymerase chain reaction

pi3kphosphatidylinositol 3-kinase

pianoplatform for integrative analysis of omics data

ptgs2prostaglandin-endoperoxide synthase 1

rmarobust multi-array average

rnaribonucleic acid

ros1proto-oncogene tyrosine-protein kinase ros

samsignificance analysis of microarrays

scansingle-channel array normalisation

scfstem cell factor 

snora11small nucleolar rna, h/aca box 11

tgfb1transforming growth factor beta 1

tgfb2transforming growth factor beta 2

ttcatranscript time course analysis

