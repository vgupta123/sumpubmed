BACKGROUND
the original version of gominer  <cit>  was oriented toward visualization and interpretation of the results from a single microarray , using a graphical user interface . although the gui can be used to examine the results from a number of microarrays one at a time, that is a rather tedious task, and there is no apparatus for obtaining a global picture of results from an experiment that consists of multiple microarrays:

• suppose, for example, that combinatorial chemistry were used to generate a large number of derivatives of a lead compound. if microarrays were used to monitor the efficacy of those derivatives, then it is likely that none, or at most a few, of the microarrays would be interesting. it would be a thankless task to use the gui to analyze and interpret the large number of uninformative microarrays. it would make much more sense to apply an automated batch procedure to generate a report that highlighted the interesting microarrays and then to examine just those in the gui.

• as another example, suppose that a series of microarrays were used to generate a time-course. one would want to obtain a high-level, global picture of the relationships of the categories that were significant at different time points – for instance, to differentiate phases of a disease process or to explore the temporal sequence of events consequent to treatment with a drug.

high-throughput gominer performs those tasks. as a tool for investigators with large sets of results, it complements and extends the gui version's analysis and visualization capabilities. both the command line and web application interfaces of high-throughput gominer are freely available to all users  <cit> . to our knowledge, this is the first resource that integrates information and illuminates patterns from multiple microarrays in relationship to the gene ontology.

in the original gominer article  <cit> , we noted that the fisher's exact p-values require adjustment to account for the multiple comparisons problem. we proposed a resampling approach that would avoid major drawbacks of the bonferroni correction  – the assumption of independence of categories and the likelihood of rejecting too many true positives. to provide a more balanced solution to the problem, we have now implemented a fast 'false discovery rate'  approach in high-throughput gominer.

another noteworthy feature of high-throughput gominer is the integration of transcription factor binding site information with go categorization and gene expression data so that the user can explore regulatory relationships. although each of these types of information has been used alone previously, our approach of integrating them provides a powerful, novel analysis tool.

in addition to the functionality that it provides, high-throughput gominer also serves as a model for integration of the command line interface of the original gominer into other applications. the command-line interface permits platform-independent integration of gominer's functionality into any data processing stream without modification of the gominer source code.

overview of high-throughput gominer
throughout the text of this article, we will focus for concreteness of terminology on use of high-throughput gominer for gene expression microarrays, but the range of application is much broader; it can be used for any high-throughput data set in which genes or proteins are flagged as 'interesting' for whatever reason, either as the result of a real experiment or a 'conceptual' in silico experiment.

the program requires two kinds of input: a list of the total set of genes on the microarray and a set of 'changed-gene' files. each changed-gene file contains a subset of genes that the user considers interesting in the experiment . the formats of the files are the same as those required for the original gominer. high-throughput gominer creates two types of output. the first is a set of reports and data files integrating the results from all of the microarrays. the second is a set of subdirectories, each of which contains results files for one of the microarrays.

two especially noteworthy features of the data processing stream are  the implementation of a fast, efficient solution to the multiple testing problem  and  the integration of results from multiple microarrays.

there are a large number of output files. some of them focus on the results from a particular microarray; others integrate the results from all of the microarrays. both types can be used as input to tools such as excel or cimminer  <cit>  to provide an integrative visualization of the results of one or all microarrays in the study. the companion web site  <cit>  contains a detailed description of the input and output files.

significant advances relative to the original version of gominer
high-throughput gominer provides significant advances relative to the original gominer. those advances are manifested in both scientific value-added and usability.

scientific value-added
 <dig>  integration across multiple microarray experiments: cims
the primary scientific value-added in high-throughput gominer relative to the original gominer is integration of the results across multiple related microarrays. that type of integration is particularly useful when the set of changed-gene files represents a time course, such as progression of a disease, response to a drug, or development of an organism. the integration can also be useful in pharmaceutical discovery and development – for example in the parallel testing of many combinatorial chemistry products against cells or organisms when microarrays are used to provide multiplexed assay end-points. the diagnostics in high-throughput gominer can indicate which compounds appear to be related in their activity to which go categories.

visual integration of results is achieved by producing cimminer  <cit>  input files. cimminer is our program package for computing and displaying clustered image maps . we introduced cims  <cit> , also called clustered 'heat maps', in the mid-1990's, and they have since become the ubiquitous summary graphic for high-throughput 'postgenomic' data, for example from microarray experiments. we have extended the cim paradigm to permit visualization of significant go categories integrated across multiple microarrays.

 <dig>  integration across multiple microarray experiments: category|gene-disease export files
another form of integration is provided by a set of files each of which contains a matrix whose rows are category|changed gene pairs and whose columns are names of changed-gene files. when the names of changed-gene files are diseases to be compared, we refer to the output as the 'category|gene-disease' set. that set of output files is designed for analysis by the cimminer program package. clinical collaborators have found that the resulting cims greatly facilitate analysis of genes with altered expression and the interpretation of significant go categories across related disease phenotypes.

 <dig>  cims of genes with altered expression versus significant go categories
high-throughput gominer generates a set of files for producing cims of genes with altered expression versus significant go categories. those cims facilitate determination of the relatedness of significant go categories as defined by the degree of sharing of genes. the importance of that capability can be demonstrated by two canonical examples:

• several go categories can be combined into a single cluster if they contain essentially the same set of changed genes. combining multiple categories in that manner brings about a simplification since the user can think in terms of a smaller number of clusters of related categories rather than in terms of a larger number of individual categories. that procedure is especially important because the parent-child structure of go can result in a number of statistically significant categories that may contain nearly redundant sets of changed genes.

• apparently unrelated go categories might in fact be connected by containing changed genes in common. such 'cross talk' can often explain apparently surprising instances in which unexpected go categories achieve statistical significance.

 <dig>  annotation of genes and go categories with transcription factor binding site information
high-throughput gominer generates automated annotation of genes and go categories with transcription factor binding site information. for instance, one output in this set is a file whose columns are significant go categories and whose rows are transcription factor binding sites for the genes within each category. this enhancement was motivated by the intense interest in inferring genomic regulatory networks from the results of microarray experiments.

improvements in usability
 <dig>  automated batch processing of an arbitrary number of changed-gene files
the original gominer requires a substantial number of manual operations to analyze a changed-gene file. that process is feasible for analysis of one or two files but becomes tedious, time-consuming, and error-prone when more files are to be analyzed. in a high-throughput context, there may be dozens or even hundreds of files to analyze for a study. it would be virtually impossible to use the original gominer to analyze that number of files. a human operator would almost inevitably introduce errors in the i/o, analysis, and book-keeping phases. furthermore, in a large set of files, there may be only one or two that produce interesting results. manual analysis of a hundred files to identify one or two files of interest would not be cost effective. in contrast, high-throughput gominer automates both the analysis of any number of files and the selection of those files that are likely to be worth follow-up.

 <dig>  automated report generation
high-throughput gominer generates a report that summarizes the results from all microarrays, with the best ones – those with the largest number of significantly enriched categories – presented at the top of a sorted list. the user  can focus principally on the top entries in the report.

the complete analysis process is documented and can be reviewed if a question arises later. if the original gominer had been used and a question arose about whether file number  <dig> was processed correctly, or whether the results from file number  <dig> were recorded correctly, many manual operations would need to be repeated. in contrast, high-throughput gominer would require only a few moments. accurate summary reports and a well-defined and reproducible directory structure make all of the results immediately available. the output files and directory structure permit user-friendly access to high-level information that characterizes all of the changed-gene files as well as to detailed information about the results for any particular changed-gene file. the output of high-throughput gominer is essentially self-documenting. with the original gominer, manual record-keeping is a considerable burden; the automated record-keeping in high-throughput gominer is a major asset.

 <dig>  elimination of relatively slow access to our database server
another important usability issue encountered by a number of users of the original gominer is relatively slow access to our database server. that issue can arise because of the high overhead of performing successive database accesses via the internet. the problem is not fatal, but in practice it can limit the number of changed-gene files that a user is able to process manually in a reasonable amount of time. to overcome that limitation, the original gominer web site provides support for the user with it skills who wants to install a local version of the database. unfortunately, such in-house it support may be unavailable to many clinicians and biologist. the web version of high-throughput gominer eliminates that problem because it processes the web-based queries on our server using the database that is local to our server.

program description: procedures and files
high-throughput gominer provides a choice of command line and web application interfaces. here, we present a brief summary of both interfaces. the command line interface runs on unix-based operating systems . complete descriptions appear at the high-throughput gominer website  <cit> .

both interfaces use the processing model envisioned in our original gominer article  <cit> :

 <dig>  a statistical operation identifies a set of changed genes.

 <dig>  the set of genes is listed in the gominer changed-gene file format.

 <dig>  gominer processes the total-and changed-gene files using a command line interface.

 <dig>  the results are exported from gominer and analyzed.

 <dig>  the user is notified which changed-gene files are of interest.

high-throughput gominer generates two generic types of output. the first pertains to integrative results for all of the microarrays. the second pertains to each individual microarray.

in the integrative summary report, there are three entries for each microarray, corresponding to underexpressed, overexpressed, and total changed genes. the entries are sorted in descending order according to the potential interest of the result as indicated by the number of categories that satisfy a user-defined fdr. integrative output files can be used to generate clustered image maps   <cit>  showing 'significant categories' versus 'microarrays.' by invoking a program that identifies transcription factor binding sites , high-throughput gominer can also generate cims for 'transcription factor binding sites' versus 'genes in a category' or 'transcription factor binding sites' versus 'categories in a microarray'.

the web application version works with any browser. the user uploads a total-gene file and either a single changed-gene file or a zip file containing a set of changed-gene files. the user receives an email containing a hyperlink to a url from which to download a compressed archive containing the results.

implementation
high-throughput gominer is based on incorporation of command line gominer into a set of c shell scripts. it is freely available and can be downloaded as a compressed tar file for use in a unix-based environment. the scripts have been released under the gpl  <cit>  open source license, so users are welcome to edit and extend them. the utilities used in the scripts  are commonly available in most unix implementations or can be freely downloaded from sites such as the gnu project  <cit> . the program was developed and tested on mac os x, solaris, and red hat linux. in our experience, there are slight variations among operating systems, computers, and versions of the unix utilities. porting between platforms might require minor user intervention, such as downloading gawk from the gnu project rather than using awk.

the web application version of high-throughput gominer  is implemented by using a simple java servlet as a wrapper around the main scripts in the command-line version. the servlet manages the uploading of files, sets up an individual workspace for each request, and e-mails the user a url for downloading results. to upload multiple changed-gene files, the user combines them into a single zip file. the web application version eliminates the minor manipulations described above for the command line version. it may take longer to complete requests because they are being executed in a shared environment, but the user interface is much simpler. the web version may be more suitable for the casual user who does not have the unix background or resources to implement the command line version.

computational efficiency of high-throughput gominer
high-throughput gominer faces two daunting computational tasks: processing an arbitrary number of microarrays and performing many re-sampling instances in order to estimate the fdr. each microarray typically requires hundreds of instances of re-sampling, and each instance requires the same computations as does analysis of the real data.

to make that computational burden manageable, we have developed a procedure that speeds up the processing time by several orders of magnitude relative to a naïve, brute force approach. at the heart of that procedure is the fact that the  total-gene file is used as both the  total-and  changed-gene files once, and the resulting gene-category export file is generated. the unix 'join' utility is then applied to that file and to the  changed-gene files and re-sampled gene files in lieu of the much more time-consuming original gui gominer process.

the multiple comparisons problem in high-throughput gominer: estimating a false discovery rate 
most investigators use microarray results to decide what follow-up studies to do, rather than as definitive evidence. the goal of the statistical analysis is to provide the experimenter with a good list of candidate categories for follow-up. to decide whether or not to follow up a category that appears enriched in changed genes, the experimenter should know the statistical reliability of the apparent enrichment. however, without a multiple comparisons correction, some categories would appear enriched  simply by chance. to assess the significance of a particular category, we need to know the distribution of p-values that would occur by random chance. the expected number of false positives should be some manageable percentage  of the categories selected. the percentage of false positives to be tolerated will generally depend on the relative costs of false positives and false negatives in whatever follow-up study is to be done. this way of framing the question leads us to specify the false discovery rate  for a set of categories, rather than significance level  for each category  <cit> . in practice high-throughput gominer reports q-values for individual categories. the q-value  represents the smallest false discovery rate at which that category would be classed as enriched.

for focus we will consider only 'biological_process' categories in the following discussion. depleted categories are of less interest to most investigators than are enriched ones, so they will be ignored. within a given category, the enrichment re is given by

re = /

where nf is the number of flagged genes within the particular category , n is the total number of genes within that same category, nf is the number of flagged genes on the entire microarray, and n is the total number of genes on the microarray.

the enrichment values are derived from categories of different sizes and do not have a common distribution. to assess the number of false positives, we need measures that are directly comparable. fisher's exact p-values  meet this need. see the original publication on gominer  <cit>  for an extensive discussion of the statistical and conceptual bases for choosing the fisher's exact test.

one way to address the multiple comparisons problem is to associate an individual measure of reliability for an ordered list of most enriched categories by specifying the fdr for each. storey et al.  <cit>  call this a q-value. the distinction between a q-value and a fisher's exact p-value as the two are used in the context of high-throughput gominer is as follows:. the p-value, uncorrected for multiple comparisons, is a measure of the statistical significance of a single category. the q-value of a category is the fdr of the list of categories whose p-values are equal to or smaller than the p-value of that category.

to estimate the q-value for each category at each level of significance, we use a resampling algorithm. first, we select random samples of nf genes at each iteration and compute fisher's exact test p-values for over-representation of the selected genes in all go biological categories. after t resamplings, the q-value for the k-th most significant category is assessed as follows: we count the number of times that a fisher's exact p-value less than or equal to the p-value, pk, of the k-th category, is found in the resampled data. then, we divide by the number of resamplings:

mk = Σi= <dig> ...,t n/t,

where n refers to the number of p-values less than pk on resampling iteration i. finally,

qk = mk/nf.

to ask how many permutation samples are needed before the qk values approximately reach their asymptotic values, we performed randomization studies . those studies indicate that the distribution of q-values for different categories in one resampling is usually not too different from the distribution of q-values for one category during many resamplings. although t =  <dig> is usual for permutation tests on microarray data, we found that, for data sets similar to those reported here for cvid, t =  <dig> and t =  <dig> give essentially identical results. for any finite number of permutation samples, there is the possibility, of course, that one or more of the fdr estimates will be spuriously slightly below or slightly above the selected threshold value, but, as with ordinary p-values, slight deviations from the threshold shouldn't be over-interpreted. a menu in the web interface permits the user to select the appropriate number of resamplings. only rarely does the ordering of categories by fdr differ from the ordering by fisher's exact p-value. thus, even though the fdr computation is only an approximation, it does not appreciably change which categories would have been given priority in the absence of multiple comparisons testing.

RESULTS
applying high-throughput gominer to gene expression analysis of clinical common variable immunodeficiency 
we now illustrate the use of high-throughput gominer for interpretation of gene expression microarray data in a medical context, that of cvid. the input  and output  data are available as supplementary material.

background information on cvid
cvid is the most common symptomatic primary immunodeficiency disease, manifested by low levels of switched immunoglobulin isotypes  in the serum and by lack of humoral immune response to specific antigens  <cit> . it is a heterogeneous disease characterized by defects in humoral and cellular immunity  <cit> . the disease usually occurs in the second or third decade of life, often heralded by recurrent pyogenic infection  <cit> . cvid is associated with an increased incidence of autoimmune disease  <cit> .

high correlation of cvid and cancer
in one study, cvid patients were shown to have an 8-to 13-fold increased incidence of cancer overall, with a 438-fold increase in lymphoma for females  <cit> . another, larger study showed an overall increased incidence of cancer of  <dig> -fold, with the relative risks of stomach cancer and lymphoma at  <dig> -and  <dig> -fold, respectively  <cit> . the risk for non-hodgkin's lymphoma over the period of  <dig> years has been estimated to be between  <dig> % and  <dig> %  <cit> .

using microarray technology to study global gene expression in cvid
microarray technology and analysis tools have made it possible to study global gene expression patterns in primary blood cells from cvid patients. to our knowledge this is the first such study, and it can contribute valuable information to what is currently known about the pathology and pathogenesis of the disease.

experimental methodology
global gene expression patterns in twenty cvid patients are currently under study in our laboratory. one patient was selected for preliminary analysis and proof of concept for high-throughput gominer. that patient had typical symptoms and laboratory findings, including repeated respiratory infections and low levels of all serum immunoglobulins.

peripheral blood mononuclear cells  from fresh blood were stimulated with cd <dig> and cd <dig> for  <dig> hours and used for rna extraction. mrna of the sample were amplified into arna and coupled with cy <dig> or cy <dig> fluorescent dye for microarray hybridization.

a detailed description of materials, methods, and data processing is provided in the supplementary materials  <cit> ; . an illustrative summary report  and clustered image map  are given in the main text .

high-throughput gominer identifies biologically-relevant categories
the cim  serves as a fingerprint of the patient's molecular phenotype. the  <dig> genes with altered expression that caused these go categories to be selected are shown at the bottom, and the categories are listed along the left-hand side. the largest category selected was 'response to external stimuli' . 'not detectable' means that the fdr was not distinguishable from zero given the number of randomizations used. see 'summary report' in the supplementary materials  <cit>  for further details . 'response to external stimuli' contained  <dig> changed genes. all but one of those genes  were also in 'immune response' . the summary report shows that, of the  <dig> genes in this go category,  <dig> exhibited significant differences in expression level when the patient was compared with the normal controls. the categories 'cell surface receptor linked signal transduction' , 'cell adhesion' , and 'organismal physiological process' , along with their child categories, contained the other changed genes.

the pathology of cvid in this patient was reflected by the go categories with low values of fdr. cvid patients have defects in production of specific antibodies, and those defects may be associated with disturbed expression of 'immune/defense response genes'  <cit> . as indicated in figure  <dig> and in summary report, the 'immune response' , 'defense response' , and related go categories were prominent. the pathogenesis of cvid is not fully understood, but, from other primary immune deficiency diseases, we know that immunodeficiency may result from defects in 'antigen processing'   <cit> , 'antigen presentation exogenous antigen'   <cit> , 'humoral immune responses'   <cit> , and/or 'cell-cell signaling'   <cit> . altered expression of genes in those categories may affect b cell activation, differentiation and maturation, and, ultimately, immunoglobulin production in cvid  <cit> .

several forms of signal transduction, not previously associated in the literature with cvid, were also enriched. signal transduction plays an indispensable role in the immune response, and we suggest that signal transduction also plays an important role in cvid  <cit> . defective b-or t-cell signaling can cause immunodeficiency, as can defective cytokine production or action  <cit> . our microarray results show that several genes related to signal transduction  and 'g-protein coupled receptor protein signaling pathway'  are differentially expressed in the cvid patient. full details of the roles of these genes in signal transduction, as well as the roles of all genes mentioned in this article, can be conveniently obtained via the hyperlinks to ncbi entrez  <cit>  in the gene category report .

high-throughput gominer cim facilitates grouping of closely-related categories into a single cluster
the  <dig> significant go categories can be grouped into a smaller number of clusters, each of which contains several closely related categories. grouping is desirable because it can remove the parent-child node redundancy inherent in the 'directed acyclic graph'  structure of go. removal of that redundancy effects a modest 'dimensionality reduction' and simplifies interpretation of the results vis a vis the disease phenotype. the cim  of go categories versus genes was used to create a tabulation  of  <dig> clusters that result from grouping the  <dig> significant go categories.

the cim also permits detection of 'cross-talk' between go categories that might at first appear to be unrelated. a number of examples can be found in figure  <dig>  for example, 'g-protein coupled receptor protein signaling pathway' and 'cell adhesion' both contain the changed genes gpr <dig> and ccl <dig>  detailed analysis of cross-talk can potentially provide an important systems biology interpretation of the particular set of significant go categories in a disease state.

high-throughput gominer transcription factor binding site cim can help to detect genomic regulatory networks
a detailed discussion of differential expression of individual genes is provided in supplementary materials  <cit> ; .

correlation of go categories and disease phenotype
the go categories and genes identified by high-throughput gominer are shown in figure  <dig> and in gene category report. the categories and genes correlate well with the disease's phenotype. thus, high-throughput gominer can integrate information from entire gene expression microarray studies into a coherent picture of biological process gene category and disease phenotype at the molecular level. it provides information with which researchers can develop new hypotheses or explore potential therapeutic targets.

applying high-throughput gominer to gene expression analysis of schistosomiasis
to highlight how high-throughput gominer can be used to integrate time series data, we consider briefly an example from preliminary analysis of gene expression in schistosomiasis . schistosomiasis is associated with bladder cancer in third-world countries  <cit> . figure  <dig> shows the go categories with low fdr for overexpressed genes in the form of a 3-d bar graph in excel. figure  <dig> shows a clustered image map  generated using cimminer  <cit>  to show the time course.

discussion
comparison of high-throughput gominer with related programs
while this work was in progress, a number of tools for go analysis of microarray data have become available. included are ease  <cit> , fatigo  <cit> , funspec  <cit> , gosurfer  <cit> , go::termfinder  <cit> , onto-express  <cit> , and ontology traverser  <cit> . however, none of them have the central integrative features that characterize high-throughput gominer. of those tools, only go::termfinder permits batch processing. since the others have been reviewed previously and since the main features of high-throughput gominer relative to the original gominer package derive from batch processing, we will confine the present discussion to a comparison between go::termfinder and high-throughput gominer.

high-throughput gominer appears to offer all of the functionality of go::termfinder, as well as additional important features. in an earlier section, entitled 'significant advances relative to the original version of gominer,' we detailed the scientific value-added and usability features of high-throughput gominer vis a vis the original gominer. those same scientific value-added and usability features distinguish high-throughput gominer from go::termfinder. because the detailed description can be found in the above-mentioned section and technical details can be found in the output files page of the high-throughout gominer web site  <cit> , we confine ourselves here to listing the scientific value-added and usability features of high-throughput gominer that are not present in go::termfinder:

 <dig>  integration of information across multiple microarrays in a study: cims .

 <dig>  integration across multiple microarrays: category|gene-disease export files.

 <dig>  cims of genes with altered expression versus significant go categories .

 <dig>  annotation of genes and go categories with transcription factor binding site information .

 <dig>  prioritization of microarrays in a study on the basis of the number of categories that are statistically significantly enriched.

there are also a number of usability features that distinguish high-throughput gominer from go::termfinder:

 <dig>  greater simplicity in the running of high-throughput gominer. the go::termfinder batch processing feature  <cit>  is implemented through the 'analyze.pl' module. the implementation requires that the user supply both an annotation file and an ontology file, obtained from the go consortium web site. in contrast, high-throughput gominer accesses the annotation and ontology information through a database that we maintain on our server, so the low-level implementation details are transparent to the user.

 <dig>  greater generalization of annotations in high-throughput gominer. the default mode of high-throughput gominer includes all annotations in the go consortium database, with the option to restrict the annotations to any arbitrary combination of annotation sources.

 <dig>  greater control over species selection for high-throughput gominer. the default mode of high-throughput gominer permits restricting the query to any single species  or to any combination of species represented within the go consortium database. that is a functionally important type of flexibility.

 <dig>  recognition of hugo gene names by high-throughput gominer. the high-throughput gominer database can recognize hugo names as well as any of the other identifier types provided by the go consortium database. the ability to recognize hugo names is not an inherent feature of the annotation provided by the go consortium, so users of go::termfinder are not able to access hugo names in their queries.

 <dig>  platform-independence of the web interface version of high-throughput gominer. the web interface version of high-throughput gominer is platform-independent because it is a web server application. in contrast, a unix environment is required to use the batch processing capability of go::termfinder  <cit> .

 <dig>  output formatting differs between high-throughput gominer and go::termfinder. the latter appears to present output in a list format, whereas several modes of output  are available with high-throughput gominer.

in summary, of the tools available for using go to interpret microarray  data, only go::termfinder and high-throughput gominer offer batch-processing capability. gominer, in addition, provides tools and visualizations for integrating information from the batch of microarrays and for relating them to transcription factor binding sites and regulatory networks. because of additional scientific and usability characteristics of high-throughput gominer, it is particularly well suited to the needs of the molecular biology, genomics, and proteomics communities.

acknowledgements
the research was supported  by the intramural research program of the n1h, national cancer institute, center for cancer research.

CONCLUSIONS
high-throughput gominer efficiently performs the computationally challenging task of automated batch-processing of an arbitrary number of microarrays . to our knowledge, it is the first resource for integration of high-throughput analyses of multiple microarrays. the automatically generated output files permit visualization of time series data in a 3-d bar chart in excel or as a hierarchically clustered image map  of the interesting go categories in relation to expression .

as a proof of concept, we used high-throughput gominer to analyze the results of a microarray study of differences in gene expression between a patient with cvid and normal controls. because the phenotypes of immunodeficiency diseases have been well described, we were able to demonstrate that the go categories found by high-throughput gominer were those that were expected . since this was the first global gene expression study of cvid, the analyses using high-throughput gominer have provided new information on biological process categories and specific genes in the disease. for example, most of the differentially expressed genes were found in signal transduction categories. signal transduction had not previously been reported to play a role in cvid. high-throughput gominer thus has the potential to generate new biomedical hypotheses and identify new targets for research.

we have tried to make high-throughput gominer as flexible as possible by providing both command line and web server versions. the command line version provides faster calculation and the potential for highly parallel processing; the web server version provides transparency and ease of use. the next phases of genomics and proteomics will impose increasing demands for flexible, large-scale, automated information processing. we see high-throughput gominer as a key resource for addressing that challenge.

availability and requirements
project name: high-throughput gominer; project home page: ; operating system: web version is platform independent, command line version requires unix; programming language: java and unix c shell; other requirements: detailed on web site and on documentation packaged in command line version download; license: gnu gpl; restrictions to use by non-academics: none.

supplementary material
additional file 1
stability of estimates of the false discovery rate

click here for file

 additional file 2
expression data

click here for file

 additional file 3
output files generated from high-throughput gominer

click here for file

 additional file 4
methodology description

click here for file

 additional file 6
summary report

click here for file

 additional file 7
gene category report

click here for file

 additional file 8
cim of transcription factors versus go categories

click here for file

 additional file 9
discussion of 
