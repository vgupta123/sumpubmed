BACKGROUND
the advances in technologies present in biomedical research resulted in a large amount of data being generated by research, testing and commercial laboratories. with such large quantities of data, it becomes very difficult to control the quality of the processes and results generated. in order to address these issues the concept of a laboratory information management systems  has been developed. lims are complex computational system used by a laboratory to manage its data. lims emphasizes quality assurance and aim to generate results in a consistent and trustworthy way  <cit> . they also manage the cycle of life of the data, that includes collection, storage, analysis and emission of reports. several lims are available currently. however, most of them have proprietary code and are commercialized with a high cost, hindering its use by students and small laboratories. moreover, the activities and procedures executed in the laboratories are, in general, quite different between distinct laboratories, making it difficult to build an adaptable lims. therefore, due to its complexity, lims are usually designed to comply with the needs of only one kind of laboratory.

in this work we describe the sistema integrado de gerência de laboratórios , an open source lims with a new approach designed to allow it to adapt its activities and processes to various types of laboratory. to make sigla adaptable we use a workflow management system incorporated to the system. in sigla, for each new laboratory a new workflow will be defined with its activities, rules and procedures. after that, a file with the workflow’s definitions will be loaded in the system, in order to allow sigla to manage the activities of the laboratory. the definition of a new workflow is simple enough to be executed by a user knowing all the procedures of the laboratory, but without any prior programming knowledge.

the first workflow defined in sigla describes the activities of the proteomics’ laboratory of a ufmg biochemistry laboratory  <cit> . this workflow has been defined in collaboration with proteomics specialists, in order to ensure that all laboratory requirements are reflected in the workflow. to validate the sigla capability of adapting to multiples laboratories, on this paper we study the process and the needs of a microarray laboratory and define its workflow. the first version of sigla can be accessed at http://luar.dcc.ufmg.br/sigla in the link sigla with the login guest and password guest. sigla has diverse functionalities that guarantee the quality of laboratory’s data and allow great flexibility in the construction of the workflow. with the development of sigla we hope to contribute positively to the area of management of complex laboratory data.

related work
due to the complexity of lims, usually they are developed by large companies. as examples of commercial lims we have sql lims  <cit> , labsoft lims  <cit>  and labware lims  <cit> , developed by private companies. usually, these lims are specific for one type of laboratory. sql lims, for example, has distinct solutions for pharmaceutical laboratories, chemical, nourishing, forensic and water analysis laboratories. the great diversity of laboratories is the reason for abundance of lims in the market. however, although companies try to adapt their systems for each customer, the task of finding the ideal lims for one specific laboratory is not easy. even laboratories of the same type have particularities in the procedures that differentiate them. unless it is a lims constructed specifically for the laboratory, an efficient use will frequently demand significant customization which is not always available or affordable. some free open source lims are currently available. generally they are limited, as the freelims, developed for the german company labmatica. this company offers an open source version and a commercial version. the open source version, as is usually the case, has limitations when compared to the commercial one. some free lims have been constructed as academic works. some examples are  <cit> , a lims developed for an academic microchip fabrication facility, with emphasis in the security of the lims;  <cit>  a lims developed for cancer research laboratories and  <cit>  and  <cit> , lims developed for biological research laboratories.  <cit>  developed a services based lims, with focus in the integration of the data stored in biological databases. the work  <cit>  propose a lims to manage the maize mapping project data. is important to notice that these are solutions for specific laboratories.

there exist some lims that also incorporate diverse concepts of workflows, such as  <cit>  and  <cit>  that manage data from laboratories of protein analysis. however they don’t have a workflow management system directly incorporated to the system, like sigla’s. the lims presented in  <cit>  and  <cit>  are specific for proteomic laboratories. in  <cit>  it is stated that it can be adapted to other types of laboratories, however to do that it’s necessary to modify the system’s code. with sigla this adaptation can be made without any need to change the code, making it easier and more efficient to use.

tools for workflow development and management
a workflow can be defined as the steps and tasks executed sequentially according to a set of rules and procedures in order to conclude a process. a workflow can be a sequential progression of activities,or a complex set of processes occurring concurrently and eventually impacting in others, according to a set of rules  <cit> . a workflow management system allows defining and controlling the activities associated with the process. usually a workflow management system has a tool for defining workflows. with this tool the activities, its attributes, the transitions between the activities and the rules for execution of the activities are defined. the workflow editor generates a file that contains the complete workflow and will be read by the workflow management system. the output file, containg the workflow definition, can follow some standards, like xpdl   <cit> , bpel   <cit>  and bpml   <cit> . in this work we will use the xpdl standard, that currently is one of the most commonly used. the xpdl standard was created by the workflow management coalition   <cit> , a group created to promote and to keep workflows standards. a xpdl file is a xml file that follows the wfmc specifications and contains all the definitions of a specific workflow.

currently there are many workflow management systems, commercial and open-source. some examples of these are the enhydra shark  <cit> , objectweb  <cit>  and wfmopen  <cit> . these are open-source systems that use xpdl standard and have a proper workflow editor. on this work we use the enhydra shark engine, because it was the option with the best support and documentation, as well as the most amenable to be integrated in sigla. to create the workflow we use the free version of the workflow editor of enhydra shark, the together workflow editor.

sigla
sigla is a lims focused on the workflow of laboratory activities. it guides the user through the execution of each activity, informing the next activity/activities that can be executed. for each activity sigla stores its attributes as an eletronic notebook. in just one view the user can visualize all the activities executed in a experiment. the details of each activity can be accessed by just clicking on the activity. sigla adapts its interface to each laboratory as it is capable of managing workflows defined in the xpdl standard. this is possible because sigla uses a workflow management system to control which activities have been executed and which ones are available for execution.

it is an application with an easy to use interface that is easily adaptable to different types of laboratories, in contrast to most lims that support a single type of laboratory. to store and manage data on laboratory activities sigla uses workflows. in workflow based systems users define activities, transitions, actors and rules of transitions. in sigla it is possible  also to define further details for each entity. for example, during the laboratory workflow definition, the user can define the attributes of each activity, its types, the range of values that each attribute can assume, its formats or define auto-calculated attributes from other attributes. it’s also possible to define the inputs and outputs of each activity, to define the number of inputs and outputs, as well as the relation of these inputs and outputs with the experiments. in the workflow definition it is also possible to assign to each activity a documentation that contains standards, instruments calibration, procedures and registers associates to the activities.

it’s important to notice that to successfully manage a laboratory it’s necessary to create a well defined workflow. it must contain all the experiments with its attributes, inputs and outputs clearly declared with its types, formats and specified sizes. the definition of workflow is a very important step in the process of quality assurance given by sigla. once the activities, rules and procedures have been defined, the workflow editor generates a xpdl file with all the definitions. this file is loaded in sigla, then the lims will be ready to manage the laboratory activities. with this mechanism, practically any type of laboratory can define its activities and rules in an xpdl file and use sigla to manage all the laboratory information. for sigla’s initial development the workflow of a proteomics laboratory was defined  <cit> . proteomics is the process of identification and quantitative analysis of proteins expressed in different conditions or life stages of a cell or organism. several analytical methods are used in proteomic analysis generating large amounts of data that varies significantly depending on the experiment type and conditions used. by using this kind of experiment as an model for sigla’s initial development we have shown how sigla’s can manage real complex experiment data.

after defining the proteomic workflow and implementing the main functionalities of sigla we have defined a second workflow to validate the capability of sigla of adapting to multiples laboratories. with the support of ufmg microarray laboratory we have defined the microarray workflow. the technique of dna microarrays is used to study gene expression on a large scale in several species. dna microarrays are usually layers of glass, plastic or nylon which is deposited series of thousands of microscopic spots of oligonucleotides or cdnas, each containing picomoles of a specific dna sequence. the microarray slide is then used to detected expression level of mrna related to the dna printed on its surface by incubatiing of the microarray with a solution containing cdna or rna obtained from biological samples.  <cit> .

microarray technique generates a large number of information, both laboratory data and image and data files. the microarray process has several steps, requiring the storage of information for each one of them. usually this information is stored in lab books, which makes it difficult to access the information, since they are in chronological order only. after scanning microarray slides and image analysis, new and large image data and data files are produced and the number could reach hundreds of files. the organization of these data using laboratory notebooks or basic text files becomes very time-consuming. by using a single platform as sigla for this task is possible to keep all data organized making its manipulation more reliable. moreover, the use of a web based platform such as siglas provides access to data for all members of a research group in a fast and efficient way.

the current version of sigla is able to manage all the activities of a workflow and their attributes. an important feature that is not currently available, however, is the ability to call an external program to perform an automatic analysis such as gene sequence annotation. in this case, the analysis has to be performed externally. its result, however, can be stored in sigla as an attribute of type file, and can be used later in the workflow. automatic analysis execution will be available in the next version of sigla.

microarray workflow
to implement the microarray process into sigla we have defined it’s workflow . on this workflow the activities execution order is defined as well as a series of attributes. this guarantees that the activities will be executed in the correct order along with all associated information. for each attribute we define its type, that can be string, integer, date, real or file. we can set an attribute as not null, meaning that the value of the attribute must be always filled. it’s also possible to define the format of an attribute. the file type permits the association of files to an activity. for example, it’s possible o associate to the execution of the activity data analysis a file containing the annotation of the gene sequences in the microarray to be analyzed by another application. during the workflow definition we have also defined the inputs and outputs of the activities. each activity generates outputs that will be inputs to the next activity. for example, in the case of rna extraction it generates the extracted rna as output. in this case it is necessary to store the rna total concentration, the rna final volume, the gel image and the dosage method. all these attributes are defined in the rna extraction activity, in the microarray workflow. after the rna extraction it’s possible to execute a cleaning, an amplification or a labeling. in the workflow an input to these three activities was defined. in this way, the output of the rna extraction will be the input to the cleaning, amplification or labeling activity. it’s also possible to set a property that can define the maximum and minimum number of each input and output of the activities.

workflow execution
to organize laboratory’s data, sigla has the following structure: a project has experiments where samples are analyzed. to begin a workflow execution the first step is to create a project and it’s associated experiments. figure  <dig> shows the interface to create a project and the experiments. after the selection of a previously created experiment, sigla presents an integrated interface  where it’s possible to manage the complete workflow. gray boxes are the activities available for execution, according with the workflow definition. blue boxes are the executed activities. it’s possible to select an already executed activity to verify it’s attributes. the selected activity is represented by a red box, and its attributes are shown in the table below the workflow. in this screen you can manage multiple samples, and each row corresponds to the analysis of a sample. figure  <dig> shows an example of the analysis of two samples, where each row corresponds to a sample.

to execute an activity the user just needs to click in the correspondent gray box. clicking on it, sigla will open an interface where the user can fill all the attributes that were defined in the workflow definition for this specific activity. when the user completes the activity, sigla checks the properties of each attribute defined in the workflow definition. if some attribute value is inconsistent, sigla presents an error message . this avoid the insertion of inconsistent data into the database and ensures quality. allowed values to fill the activities attributes can also be pre-defined by the researcher and the values accessed through a dropdown list. using this feature the user can’t insert a random value but just select the predefined one.

sigla controls the selection of specific inputs and outputs for each experiment registered in the system. when the activity is defined to have outputs,after the execution of the activity, sigla opens a window on the interface for inserting the outputs. as in the activity execution, in the output insertion sigla checks the properties of each attribute and makes the validation, guaranteeing data quality. when a activity is defined to have inputs resulting from previous activities, before the execution of the activity sigla opens an window on the interface for selecting the input. on this screen sigla validates the number of inputs that have been selected. once the activity inputs and outputs were defined for an activity the information about them can be accessed by the link inputs and outputs shown in the figure  <dig>  in the activity description table. figure  <dig> shows the interfaces of outputs definition, inputs selection and consult of results. to help with the laboratory management, sigla offers a short report, listing all the executed activities in a certain experiment. on this report it’s possible to check when the activity was executed and who executed it. sigla also offers a long report that list all the executed activities of a experiment detailing the activities attribute values.

implementation
sigla uses java as programming language and has a basic architeture . the web pages are jsp and the j2ee technology is used for code development. applets are used for the graphical interface. the database was developed with mysql, a robust, scalable and free dbms. to define a workflow,the together workflow editor community edition was used with the xpdl standard. for managing the workflows sigla uses the workflow manager enhydra shark. a workflow manager consists of a set of functions that controls the activities of a workflow. the workflow manager maintains a list of activities that have been executed, as well as the order of execution and the activities that are available for execution. sigla calls enhydra shark functions whenever new activities are executed, and consequently workflow execution information is maitained inside sigla by shark functions. there are many features of sigla that have been implemented as extensions of shark. for example, shark cannot directly allow an activity to be repeated. in a laboratory, frequently when a result is not clear enough, the experiment is repeated. modelling this behavior in shark is complex, and additional workflow management functions have been implemented to make this an efficient task. another example is the concept of experiments inputs and results. as defined by shark, a workflow is simply a sequence of events. in sigla, however, activities can generate results which can be used as inputs in other activities. this feature has been implemented in sigla because it does not exist in shark.

RESULTS
once the microarray workflow has been loaded into sigla, a specialist on microarray executed several experiments to validate the system. the system was tested with real data from a microarray experiment with  <dig> initial samples of rna and six microarray slides. all steps of the workflow have been completed for all  <dig> samples. the system was robust and easy to use during the test. the ability to see in one screen which parts have been executed and which ones have not made the process much simpler. after completing all the steps, the specialist could verify its data for any stage. this access to all information of an experiment is very useful when working with a technique complex and full of steps as microarray analysis. in addition, the system stores protocols and files generated during the execution of steps, such as pictures of gels or data files, making it a good tool for storing data in an experimental laboratory for the implementation and analysis of microarrays. sigla helped also with other important features such as allowing a choice between two or more possible options in a field, as the choice of fluorescent dyes cy <dig> and cy <dig>  which facilitates the work of researchers when they are filling these fields. moreover, it was possible to generate reports in pdf format with all the information of the experiment , which can be easily viewed and printed. the attribute values validation made by sigla was also very useful. in many moments it avoided filling the fields with wrong values. in addition, testing with real data allowed the specialist to make suggestions to improve the system, which will be analyzed and insert in the original design.

it is important to notice that the period of time to fully create a complete microarray lims has been about two weeks. this illustrates that sigla is able to adapt itself to multiple laboratories in very little time. the process consists of defining the workflow in a graphical editor, and sigla automatically creates all the data structures needed to manage the laboratory. any modification in the protocols, or the addition of new experiments takes only a few days making it possible to manage not only large quantities of data, but also different types of data efficiently.

CONCLUSIONS
the need for fast and reliable data storage and management for biological laboratories is a reality nowadays. this need has been fulfillled only partially by available sistems given high costs or limitations of the available lims. in this work we present sigla, a system based on adaptable workflows, with an easy to use interface, that manages and guarantees the quality and integrity of laboratory data. moreover sigla is not a solution designed for only one type of laboratory but several types, since the user can easily adapt it to the needs of his/her laboratory, simply by defining its workflow. on this paper we study the process and the needs of a microarray laboratory and define its workflow. this workflow has been used by researchers in real microarray experiments and they have reported that the system indeed has been very useful. with sigla’s development we hope to contribute positively to the area of management of complex data in laboratory by managing its large amounts of data, guaranteeing the consistence of the data and increasing the laboratory productivity. we also hope to make possible to laboratories with little resources to afford a high level system for complex data management.

availability and requirements
• project name: sistema integrado de gerenciamento de laboratórios 

• project home page: http://www.luar.dcc.ufmg.br/sigla

• operating system: platform independent

• programming language: java

• other requirements: java  <dig> . <dig> or higher

• any restrictions to use by non-academics: licence needed

competing interests
the authors declare that they have no competing interests.

authors’ contributions
on this work the decisions of implementation were made by am, afc and sc. am, rk and va wrote the java code. ddl and afc gave the biological concepts for the implementation.

