BACKGROUND
mirna is a small non-coding rna molecule highly conserved in plants and animals. many investigations have reported that mirnas can play important roles in various vital biological processes such as gene expression, cell development, cancer progression, and immune process by binding to the 3′ untranslated regions of their target genes, which can result in the translational repression or rapid degradation of the target transcripts  <cit> . as mirna function is usually carried out by groups of mirnas rather than individually  <cit> , clustering mirnas for the function annotation of new mirnas is a problem of wide interests, given that the knowledge of co-regulating mirnas is limited in wet-labs.

sequence or structure-based similarity measurements have been previously proposed to cluster mirnas for similar functions. for example, the rfam  <cit>  and mirbase  <cit>  databases use sequence similarities to classify the functions of mirnas. the concern is that some mirnas having a high sequence similarity may have distinct functions. also, the structure-function relationships used in the function annotation of mirnas have been reported to show serious limitations in the case of complex substructures  <cit> .

recently, individual target genes of differentially expressed mirnas have been explored for clustering mirnas into groups of similar functions. however, a mirna can regulate multiple target genes. to overcome this limitation, we explore a novel similarity measurement between the two sets of target genes corresponding to two mirnas. we propose to transfer the function similarity between the two sets of target genes as the function similarity of the two mirnas.

the function similarity between two sets of target genes has been previously investigated and can be derived from the structure information of gene ontology  trees of these target genes  <cit> . the hierarchical structure of a go tree is a directed acyclic graph , containing structured vocabularies to describe the functions at different levels of the gene products  <cit> . the nodes of a go tree are called terms. an edge in a go tree represents a relationship between two terms. the two most common relationships between two terms are is_a for subclass and part_of for component  <cit> . go terms, their relationships and the similarity between two go trees have been considered in many bioinformatics applications by literature such as for pathway analysis  <cit> , gene network analysis  <cit> , and gene expression research  <cit> .

we introduce a novel measurement of information content, a weighted information content of gene ontology, to estimate the similarity between two go trees. the weighted information content of a term in a go tree is determined by three factors: the number of descendants of the term, the depth of the path from the term to the root node or to the most informative common ancestor , and the relationships along the edges in the path. every term in a go tree has its unique information content. based on this definition of information content, the similarity between two go trees is proposed to be measured by the information contents of all the common terms between the two go trees, relative to the information contents of all the unique terms. two go trees are more similar in function than others if they have more common terms and fewer unique terms. when we are given two sets of go trees, the similarity between the two sets are derived by computing all the pair-wise similarities of the go trees from the two sets. this similarity between the two sets of go trees is then transferred as a similarity measurement between the two mirnas whose target genes correspond to the two set of go trees.

in the literature, node-based  <cit>  and edge-based methods  <cit>  have been proposed to measure the similarity between go trees or subtrees. by their definitions, the nodes in the same hierarchy are assumed to have an equal distance to the root, an idea which was criticized by  <cit> . further, the information content of a term in a go graph is exactly the same as another’s, even if the two terms have different depths in the graph  <cit> —it ignores important properties of edges such as the depth and the topology information of the term in the go graph. node-based methods also focus on the most informative common ancestor like our method, but they neglect the whole path structures of go terms. moreover, the edge-based methods do not distinguish the weight of terms at different depths of a go graph. our weighted information content of gene ontology can overcome these shortcomings.

for enhancing the performance on clustering the mirnas into subgroups of similar functions, a self-tuning technique is applied to determine the optimal parameter σ for the spectral clustering method  <cit> . further, an appropriate cluster number is estimated by the eigenvalues of the normalized laplacian matrix. our approach has been used for grouping mirnas of similar functions associated with diseases stored at several databases. most of the experimental results showed good accuracy and the annotation results for new mirnas can be supported by evidence found from the other databases or from recently published literature.

methods
mirnas and their target genes were downloaded from http://mirtarbase.mbc.nctu.edu.tw/php/download.php . this file is a relational table having  <dig> lines and  <dig> columns: mirtarbase id, mirna, species , target gene, target gene , species , experiments, support type, and references . each line of this table stores information of one mirna and the information of one of its target genes. we note that some multiple lines in this table actually refer to the same mirna—researchers have done many different experiments to confirm the same mirna’s target genes. as a result, there are only  <dig> distinct mirnas in this file. we used all of them in this work. the disease information associated with each of the mirnas was searched at the hmdd database . out of the  <dig> mirnas,  <dig> did not have disease information available.

the go terms of a target gene were searched at the embl-ebi website . the relationships  of these go terms were derived from the amigo database . these go terms and their relationships were integrated and represented by graphs.

definition  <dig> 

go graph of a gene. given a gene g, its go terms and the relationships of these go terms are represented by a dac  graph g=, where t
e
r
m
g represents the set of nodes each labeled with a go term, and e
d
g
e
g represents the set of edges each labeled with a relationship  between a pair of terms of g. such a graph is also called a go graph or go tree of g.

definition  <dig> 

root node. the root node of a go graph is the term node which has an in-degree only. a go graph has one and only one root node.

definition  <dig> 

leaf nodes. a leaf node of a go graph is a term node which has an out-degree only. the go graph of a gene may have multiple leaf nodes.
a, b and fig.  <dig> show three examples of go graphs, where root nodes, leaf nodes, and the relationships of some pairs of terms are explained.
fig.  <dig> 
a the go graph of go: <dig> and b the go graph of go: <dig>  each includes one leaf term only


fig.  <dig> a go tree integrating graphs of go: <dig> and go:0072358




definition  <dig> 

term graph. a term graph is a special form of go graph. given a go graph, if it has only one leaf term a, such a go graph is called a’s term graph, denoted by t
g
a=, where t
e
r
m
a and e
d
g
e
a represent the set of go terms and the set of edges of the go graph, respectively.

given a go graph g=, for every term t∈t
e
r
m, we can construct one term graph t
g
=,e
d
g
e
), where t
e
r
m
 is the set of terms in the path from t to the root node of g, and e
d
g
e
) is the set of edges in the path from t to the root node of g.

in particular, a leaf node l_n
o
d
e of go graph g can form a leaf term graph tg=,edge). leaf term graphs of a go graph are used later to define the similarity between two go graphs. the subscript g is sometimes omitted when it is understood. figure 1
a and b are actually the two leaf term graphs of fig.  <dig> 

definition  <dig> 

depth and level of a node. the depth of a term node t in a go graph is the number of edges in the longest path from t to the root node of the graph. for example, the depth of  <dig> is  <dig> as shown in fig. 1
a. if the depth of a term is d, the term is also said to be at level d.

given two term graphs t
g
a= and t
g
b=. there may exist many common terms  between t
e
r
m
a and t
e
r
m
b. for example, term  <dig> is a common term between t
g
 <dig>  and t
g
 <dig> . for all other terms in t
e
r
m
a or t
e
r
m
b, they are called uncommon or unique terms.

clustering mirnas for similar functions
suppose we are given h number of mirnas, the first process of our method is to construct a h×h similarity matrix of these mirnas. for every pair of mirnas in the matrix, their similarity is transferred from the similarity between their two sets of target genes. as every gene can be represented by a go tree, the similarity between the two sets of target genes can be determined by computing the similarity between the two sets of go trees. with this h×h similarity matrix as input, we use a spectral clustering method to group mirnas of similar functions. we present details for these steps: 
compute the weighted information content of every term in a go graph to determine the similarity between two go trees;

compute the similarity between two sets of go trees to determine the similarity between two mirnas;

construct a similarity matrix of the h mirnas, and subgroup them for a similar function in each group using the similarity matrix as input.




the framework of our method is showed in fig.  <dig> 
fig.  <dig> our method for clustering mirnas. the raw input to the method consists of data of mirnas, the target genes of the mirnas, and the go graphs of the mirnas’ target genes. firstly, the similarity of two go graphs is computed according to the weighted information content. secondly, the similarity of two target genes of two mirnas is calculated by using the similarity of their go graphs. thirdly, the similarity between two mirnas is computed by their similarity of their target genes. then the mirna distance/similarity matrix is constructed by these similarity scores. finally, the spectral clustering method is applied to cluster the mirnas




compute a weighted information content of a term in a go graph
the traditionally defined information contents of two terms in a go graph can be exactly the same even if the two terms have different depths in the graph  <cit> . we propose a new measurement for the information content to deal with this issue. it is a descendant-based information content, adjusted by a weight proportional to the depth and the relationships of the nodes in the path of the term to the root node.

for a go graph g=, the information content  of a term t∈t
e
r
m is computed by 
  <dig> ic=−log1+∥descends∥∥term∥ 


where ∥d
e
s
c
e
n
d
s∥ is the number of t’s descendants in g, and ∥t
e
r
m∥ is the number of terms of g. this equation implies that a parent node’s ic is always smaller than its child node ; and that two different leaf terms have the same ic . for example, term  <dig> in fig.  <dig> has  <dig> descendants . its ic is −log= <dig> . the ic values of the other terms in fig.  <dig> are listed in table  <dig> 


ic

ω

ω

ω
i



definition  <dig> 

the most informative common ancestor. given a term graph, if a leaf term can reach to a node by walking through a direct line, this node is called an ancestor term of the leaf term. a common ancestor term is such an ancestor term that two input leave terms can both reach. the most informative common ancestor  is the common ancestor term that has the maximum ic value of two term graphs.

these information contents are then adjusted by a weight of the path of the term to the root node or to the mica node. the weight is named edge weight which is determined by two factors: the relationships of the edges in the path and the distance of the path. let t
g
a={a,t
e
r
m
a,e
d
g
e
a} and t
g
b={b,t
e
r
m
b,e
d
g
e
b} be two term graphs, g be the merged graph, and mica be the two term graphs’ mica. for a term t in the graph g, its distance weight ω
edge is defined as 
  <dig> ωedge=2π∗arctan1ωdepth 


where ω
depth is  <dig> if t is the root node. if t is mica’s ancestor or mica, ω
depth is the product of all the relationships in the longest path from t to the root node of t
g
a or t
g
b, otherwise it is the product of all the relationships in the longest path from t to the mica.

the is_a relationship is more important than the part_of relationship. thus, we set is_a as w edge=  <dig>  and part_of is set as w edge=  <dig> . we note that the edge weight of a term increases when the term is farther to the root node or to the mica. the arctan transformation is to standardize the reciprocal of two length weights as they can be very large.

for example, ω
depth of term  <dig> in fig.  <dig> is  <dig>  since it is the root node of the go tree. the ω
depth value of its child  <dig> is  <dig> , as the relationship between these two terms is is_a. the ω
depth value of g
o: <dig> is  <dig> , because this term is mica’s descendant term and the relationship between mica and this term is is_a. the other terms’ ω
depth values are listed in table  <dig>  we note that if a term has multiple longest paths to the root node or mica, we choose the one which provides the biggest edge weight for the term. the edge weights of the terms in fig.  <dig> are also listed in table  <dig> .

by eq.  <dig>  if an ancestor term of the mica is near to the root, this term contributes less similarity to the two term’s trees as it is more general. for a descendant term of the mica, which is near to mica, contributes less dissimilarity. unlike traditional edge-based methods  <cit>  which set all the edges as the same weight, our method considers both the distance of the terms to the root or mica node and the difference between is_a and part_of to measure the distance weight of a term.

we combine the initial information content  of a term t in a merged go graph g and its edge weight  to derive a weighted information content for the term. it is denoted by ω
i
c, defined as 
  <dig> ωic=ic∗ωedge 


the weighted information contents of all the terms in fig.  <dig> are shown in the last row of table  <dig> 

by this definition, only the root node has a weighted information content of  <dig>  it is understandable because a root node does not contribute to the weight—it has no parent node and it is the ancestor of all other terms. as some terms  having the same ic can occur at different levels of the graph, the ic value alone cannot reflect the different importance of these terms. this is the main reason why edge weights are used to resolve this issue.

determine the similarity of two genes based on weighted information content
as the go graph of a gene may contain multiple leaf term graphs, we first define the similarity between two term graphs, and then define the similarity between two go graphs.

given two term graphs t
g
a= and t
g
b=, the similarity of these two graphs is measured through the weighted information contents of their common terms as well as their uncommon terms. we use fig.  <dig> to illustrate this definition. the common terms between the two leaf term graphs t
g
 <dig> and t
g
 <dig> are shown in the dashed square box. the terms outside the square box are the uncommon terms of these two leaf term graphs. the mica of these two term graphs is g
o: <dig>  the ancestry terms of the mica are all in the square box, and all the descendant terms of mica are outside the box.
fig.  <dig> a schematic illustration of the similarity between two graphs




the similarity of the two term graphs t
g
a and t
g
b, denoted by s
i
m, is defined as 
  <dig> sim=∑t∈commonωic∑t∈commonωic+∑t∈uncommonωic 


where, common is the set of common terms between t
g
a and t
g
b, uncommon is the set of their uncommon terms, and g is the merged graph of t
g
a and t
g
b.

the similarity s
i
m ranges its values between  <dig> and  <dig>  when the mica of the two term graphs is the root node, the similarity between these two graphs is  <dig>  if the two term graphs are the same, their similarity is  <dig> 

as mentioned, the go graph of a gene may contain multiple leaf nodes which correspond to multiple term graphs. use g
 <dig> to denote the go graph of gene g
 <dig> and g
 <dig> as the go graph of gene g
 <dig>  the similarity between g
 <dig> and g
 <dig> is measured by averaging the similarities of every leaf term graph of one go graph  with the other go graph . assume g
 <dig> has n
 <dig> number of leaf terms leafterms1=l_node <dig> l_node <dig> …,l_node1n <dig>  and their leaf term graphs are denoted by tg=tgl_node <dig> g <dig> tgl_node <dig> g <dig> …,tgl_node1n <dig> g <dig>  also assume g
 <dig> has n
 <dig> number of leaf terms leafterms2=l_node <dig> l_node <dig> ⋯,l_node2n <dig>  and their leaf term graphs are denoted by tg=tgl_node <dig> g <dig> tgl_node <dig> g <dig> ⋯,tgl_node2n <dig> g <dig> 

the similarity between g
 <dig> and g
 <dig>  denoted by s
i
m, is given by 
  <dig> sim=∑tg∈tgleafterms1sim+∑tg∈tgleafterms2simn1+n <dig> 


where, sim=max1≤i≤n2sim); and s
i
m is similarly defined. we note that the maximal similarity of leaf-leaf term graph pairs is applied to measure the similarity between one leaf term graph and one go graph.

clustering mirnas for similar functions based on their target genes’ similarity/distance matrix
a mirna usually has several target genes. in this work, the similarity between two mirnas is measured by the similarity between the two sets of their target genes. we first introduce the similarity between a set of genes and a gene. given a set of genes g
s={g
 <dig> g
 <dig> …,g
m} and a gene g
′, the similarity between gs and g
′ is given by 
  <dig> sim=max1≤i≤msim,g) 


where g is the go graph of g
i, and g is the go graph of g
′.

an alternative method for measuring the similarity between a gene set and a gene is to take the average of the individual go terms’ similarities. however, the average of the individual go terms’ similarities can underestimate the true similarity between a gene set and a gene  <cit> , as we use the similarity between a gene set and a gene to compute the similarity between two gene sets. this underestimated value will lower down the similarity between two gene sets.

suppose we are given two mirnas denoted by r
 <dig> and r
 <dig>  assume r
 <dig> has s number of target genes gs1={g <dig> g <dig> …,g1s} and r
 <dig> has k number of target genes gs2={g <dig> g <dig> …,g2k}. the similarity of these two mirnas r
 <dig> and r
 <dig> is defined as 
  <dig> sim=∑1≤i≤ksim+∑1≤j≤ssims+k 


the distance dsim, or dissimilarity, between two mirnas r
 <dig> and r
 <dig> is computed by 
  <dig> dsim=1−sim 


the dissimilarity between two mirnas can be viewed as their distance, and thus it can be applied for clustering a group of mirnas.

for a number h of mirnas r
 <dig> r
 <dig> …,r
h, a spectral clustering method  <cit>  is applied to the dissimilarity matrix of these mirnas to detect subsets of mirnas which each have a similar function. the spectral clustering method is described as follows: 
for a set of data points x={x
 <dig> x
 <dig> …,x
n}, construct a complete graph spg in which the data point of x is the node of spg. the weight ω of each edge that connects with nodes x
i and x
j, is defined as:


  <dig> ω=e−∥xi−xj∥22σ <dig> 


let wam denotes denote the weighted adjacency matrix of the graph spg.

calculate the normalized laplacian l from wam and compute the first k eigenvectors of l. the k is the number of clusters. then, the k eigenvectors can be used to construct a n∗k matrix u.

the matrix u can be seen as a set of n data points under k features. apply the k-means clustering algorithm to divide these data points.




for the h number of mirnas r
 <dig> r
 <dig> …,r
h, the weighted adjacency matrix wam for the spectral clustering is determined by 
  <dig> ω=e−dsim22σ <dig> 


where, 1≤i,j≤h.

the source code of spectral clustering is available at website http://sourceforge.net/projects/spectralcluster/?source=typ_redirect. our source code of computing the weighted information contents can be downloaded from http://bioinformatics.gxu.edu.cn/bio/data/cwlan/spectralcode.tar.gz. our results on clustering are available at http://bioinformatics.gxu.edu.cn/bio/data/cwlan/spectralresult.tar.gz.

there are two vital parameters in the spectral clustering method. the first one is σ in eq.  <dig> and the other is the number of clusters. these two parameters have heavy influence to the clustering result. traditional methods usually use several different choices of σ to test and choose the best σ by comparing the results. however, such approaches are time consuming. the selection of a good cluster number has been a challenging issue. in general, the cluster number relies on the user’s experience. in this paper, a self-tuning method is applied to decide an optimal value of σ and we also employ the eigenvalues of the normalized laplacian matrix to determine an optimal number for the clusters.


self-tuning for the selection of
σ
. equation  <dig> uses the square of σ. the concern is that σ will be the same even though for computing two different data points. the self-tuning method employs two different σ values to calculate the weight of an edge. for the set of mirnas r={r
 <dig> r
 <dig> …,r
h}, the weight of its adjacency matrix by our self-tuning method is: 
  <dig> ωself=e−dsim22σi∗σji,j= <dig> …,h 


where σ
i is the average distance of r
i to all other mirnas, given by 
  <dig> σi=∑j=1hdsimh− <dig> 



select the optimal cluster number. an optimal number of clusters of the mirnas is determined from the trend of the eigenvalues of the normalized laplacian matrix l. suppose these eigenvalues are e
i
g={λ
 <dig> λ
 <dig> …,λ
h} sorted in a descending order. if the eigenvalue λ
k+ <dig>  is very small and the trend of the subsequent eigenvalues goes stable, then the number of clusters can be set as k. if the differences between two consecutive eigenvalues are very small, we said that the trend of the consecutive eigenvalues goes stable. figure  <dig> presents the first  <dig> largest eigenvalues of the normalized laplacian matrix l of the mirna data set used in the second section of “data sets and definitions related to go graphs". therefore, the cluster number  <dig> is selected.
fig.  <dig> the first  <dig> largest eigenvalues




RESULTS
our method was applied to the data set of  <dig> human mirnas downloaded from http://mirtarbase.mbc.nctu.edu.tw/ to cluster their function groups.   <dig> of these mirnas are associated with a disease. the disease information of the remaining  <dig> mirnas are not available from the database at the time of this work. instead their functions were predicted by our clustering method. we report four parts of computational results in this section. the first part shows the importance of our edge weights to the information contents of term nodes in go graphs. the second part selects a good edge relationship weight and discusses the effect of the edge relationship weight on the cluster number. the third part compares our method with three existing methods to understand our superior clustering performance. the forth part reports the function annotation results for new mirnas by our clustering method.

the effect of edge weights on the information contents of term nodes
the results in this section explain why we introduce the edge weight of a term to adjust the information content of the term . figure  <dig> presents the numbers of leaf terms of the go trees when the term level varies. the majority of these leaf terms are at level  <dig>  by the traditional definition of information content, all these leaf terms have the same ic value, although they are at different levels of the trees. this is why we use an edge weight to adjust the information content of a leaf term and make it proportional to the distance of the path from the leaf node to the mica. namely, a leaf term having a far distance to the mica should contain more information than a leaf term closer to the mica.
fig.  <dig> the numbers of leaf terms at different levels of the go trees



fig.  <dig> the numbers of different ic values at the same levels of the go trees




effect of edge relationship weights on the number of clusters
we have proposed to use edge relationships in go trees to define an edge weight. as this work focuses on the prediction and annotation of mirna functions, we use the molecular functions of go terms which only have relationship is_a between go terms. we tested and compared the effectiveness of  <dig> different weights of the is_a relationship from  <dig>  to  <dig>  with step increase of  <dig>  on the function prediction performance for the  <dig> mirnas.

an accuracy rate is used to measure the quality of the clustering results. it is defined as the proportion of mirnas in a cluster which are associated with the same disease: 
  <dig> accr=nm∥c∥ 


where n
m is the number of mirnas associated with the disease, and ∥c∥ is the total number of mirna in the cluster c. usually, a cluster of mirnas formed by computational methods can have diverse proportions of mirnas each sharing a different disease. we used the accuracy of the prevailing disease to represent the accuracy rate of the cluster. a high accuracy of a cluster means that many mirnas associated with the same disease are clustered into the same group, implying the weight of the is_a relationship is properly assigned for the function prediction of new mirnas.

the breast cancer, stomach cancer, and hepatocellular carcinoma were three diseases which are most prevailing in three clusters for all of the situations of the relationship weight from  <dig>  to  <dig> . the detailed accuracy rates are presented in table  <dig>  we found that  <dig>  was a good relationship weight.


fig.  <dig> the consecutive differences of the first  <dig> largest eigenvalues th eigenvalue) under the setting of different edge relationship weights




clustering performance comparison with existing methods
we compared our method with three literature methods to understand the grouping performance for mirnas of similar functions. the three literature methods are a node-based approach by lin  <cit> , edge-based approach by viktor  <cit> , and hybrid approach by wang  <cit> .

the performance by each clustering method is reported in table  <dig> 



for the breast neoplasms cluster, all the four methods have very close and competitive accuracy. for the hepatocellular carcinoma cluster, lin’s method has the largest number of mirnas and the highest accuracy. our method has the second largest number of mirnas on the hepatocellular carcinoma cluster and the second highest accuracy. for the stomach neoplasms cluster, our method yields the largest number of mirnas and the highest accuracy rate. overall, our method generates the best accuracy for the union of the three clusters, and has the largest coverage of the mirnas . wang’s method has the same coverage of  <dig> mirnas as ours, but its accuracy is about 30% lower. lin’s method has a similar overall accuracy as ours, but its coverage is about 20% smaller.

co-regulating mirnas and function annotations for new mirnas
as suggested, mirnas clustered into the same group should have similar functions. some of our experiments have verified this point. for example, the pair of mirna-519d and mirna-216a in the hepatocellular carcinoma cluster have a similar function. in fact mirna-519d  <cit>  and mirna-216a  <cit>  had been both found to up-regulate pten in hepatocellular carcinoma cells. another example is from the breast cancer cluster about the pair of mirna- <dig> and mirna- <dig>  mirna- <dig> is involved in the regulation of breast cancer  <cit> , while mirna- <dig> also plays a vital role in regulating breast cancer  <cit> . in the stomach cancer cluster, it can be confirmed that mirna- <dig> is related to stomach caner  <cit>  and mirna-106a is also related to this cancer  <cit> . many previous studies have indicated that multiple mirnas can work together to effect cancer formation  <cit> . our method to identify these mirna clusters can assist in investigating this mechanism  <cit> .

the functions/disease information of some mirnas  of our 289-mirna data set are still un-annotated in the hmdd database. however these un-annotated mirnas can be clustered into some groups by our method, and their functions can be annotated according to the prevailing functions of the groups: 
 <dig> of the  <dig> un-annotated mirnas are grouped into the breast cancer cluster ,

 <dig> are grouped in the stomach cancer cluster ,

 <dig> are in the hepatocellular carcinoma cluster ,

 <dig> are classified into the ovarian cancer cluster ,

 <dig> are clustered in the prostatic cancer cluster , and

 <dig> are in the colorectal cancer cluster .




we have found evidence to support our annotation for some of these mirnas, for example, mirna- <dig> which is asigned into the breast cancer cluster. in fact, recent research shows that mirna- <dig> is a potential biomarker for breast cancer  <cit> . the mirna- <dig> is also predicted as a regulator in breast cancer by our method. a recent study can support this prediction: mirna- <dig> is down-regulated in breast cancer and has effect on breast cancer migration and motility  <cit> . it has also been claimed that mirna-135a is very critical in regulating breast cancer — mirna-135a can bind to gene esrr <dig> which is related with the breast cancer  <cit> .

for the un-annotated mirnas in the stomach cancer cluster, it has been found that mirna-181a is up-regulated in stomach cancer and has effects on cell proliferation in stomach cancer  <cit> . literature work also supports that mirna-19b and mirna-519a are associated with stomach cancer  <cit> 

in the ovarian cancer cluster, two studies have shown that mirna- <dig> and mirna- <dig> are indeed associated with the ovarian cancer  <cit> . in the colorectal cancer cluster, three un-annotated mirnas mirna-30c, mirna-181b, and mirna-513a can be verified that they are related with this cancer .

discussion and 
CONCLUSIONS
a variety of methods have been developed to study the functional roles of mirnas by dividing them into functional groups. for example, kaczkowski applies the mirnas’ sequence and their secondary structure to cluster mirnas  <cit> . however, the mirnas with a high similarity in sequence/structure cannot guarantee similar functions. thus, the target genes of mirnas have been taken as an alternative information source to investigate mirnas functions.

one of the most prevalent comparative methods for the similarity of target genes is go graph. the approaches can be classified into two categories:  those node-based methods and edge-based methods using go terms, and  pairwise methods and groupwise methods using gene products. typical node-based methods include resnik’s  <cit> , lin’s  <cit> , and jiang and conrath’s algorithm  <cit> . this kind of method applies the ic for measuring the similarity of two go graphs.

the resnik’s method uses only the mica to measure the similarity between two terms. however, this kind of method neglects the dissimilarity of two terms. other node-based methods consider both the ic value of terms as well as the mica of two go graphs, such as lin’s method and jiang and conrath’s method. although node-based methods are useful in measuring similarity of terms, the original ic value relies on a specific corpus and the structure of the go graph is largely ignored.

the edge-based methods utilize the length between root nodes and terms. the edge-based method applies the length between root node to the mica and the distances between the mica and the leaf terms. the edge method reflects the structure of the go graph. it assumes all edges have equal weight. however, edges in go graphs can describe two different relationships , which should be assigned with different weights. in addition, the edge-based methods view the weight of all go terms as the same. however, it is reasonable that a term should have lower weight if it is closer to the root node of the go graph.

both edge-based methods and node-based methods have their own advantages. thus, some methods combine the weight of the term and the distance between two terms to measure the similarity of two go graphs. this kind of method is called hybrid methods. for example, sevilla applies the edge and the ic to measure the similarity of two nodes  <cit> . while this kind of the method always ignores the relationship of the edge. wang’s method  <cit>  is a typical hybrid method that takes the relationship of the edge into consideration. however, if two term pairs have the same structure, they will have the same similarity value.

this work has introduced a new go-based method to cluster mirnas for similar functions. a weighted information content is proposed to measure the importance of a term in a go graph. its key idea is to integrate the descendant-based information content, the depth of the term, and the relationships of the edges in the path from the term to the root node. our weighted information content can overcome some limitations of the conventional node-based and edge-based approaches. the similarity between two go graphs is based on the weighted information contents of the common terms relative to the information contents of the uncommon terms. these similarities are transferred to estimate the similarities of mirnas. a spectral clustering method has been applied to the similarity/distance matrix of a set of  <dig> mirnas for function grouping. compared with three state-of-the-art clustering methods, our method show better performance in accuracy to measure the similarity/distance between mirnas. our method is also useful for the discovery of co-regulating mirnas and the function annotation of new mirnas.

from 15th international conference on bioinformatics  queenstown, singapore. 21- <dig> september 2016

declarations
this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>   <dig>  15th international conference on bioinformatics : bioinformatics. the full contents of the supplement are available online https://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement- <dig> 

funding
publication of this article was funded by a national natural science foundation of china project  <dig>  two key projects of natural science foundation of guangxi 2012gxnsfcb <dig> and 2013gxnsfda <dig>  australia research council discovery project arc <dig>  and china scholarship council.

availability of data and materials
our source code can be downloaded from http://bioinformatics.gxu.edu.cn/bio/data/cwlan/spectralcode.tar.gz. our results on clustering are available at http://bioinformatics.gxu.edu.cn/bio/data/cwlan/spectralresult.tar.gz.

authors’ contributions
qc and cl conceived the ideas, designed the methods and performed the experiments. jl and qc supervised the study. qc, cl and jl participated in the analysis. qc drafted the manuscript. cl and jl read and revised the manuscript. all authors approved the final version.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
