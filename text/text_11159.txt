BACKGROUND
the study of proteins and their properties is of uttermost importance for biology, and computational tools have become an important ingredient in this endeavor. a very large number of protein sequences are already known: about  <dig>  at the highly curated, non-redundant, swiss-prot section of the uniprot knowledgebase  release  <dig>   <cit> , and an order of magnitude more at the genomic-based, non-curated trembl section of uniprotkb. however, our knowledge of higher properties of proteins, such as their 3d structure and function is much more fragmentary. thus the number of uniprotkb release  <dig>  proteins whose structure is known is only about  <dig>  . it is, of course, much harder to experimentally derive such information. needless to say, we are still far from being able to deduce a protein's structure or function from its sequence. it is hard to overstate the impact that such methods would have on the field, since the vast amount of protein sequence data would immediately translate into a much more profound biological comprehension of proteins and their functionalities.

our approach to the problem of deducing structure/function from sequence is based on inference by homology. the basic idea is to infer a protein's higher properties from those of other proteins which have similar sequences. however, current sequence comparison techniques are limited in their range and applicability. for many proteins such techniques can find no similar protein from which to infer information about structure or function. only 55% of the amino acid positions in the swiss-prot segment of uniprotkb  can be aligned by blast  <cit>  to any sequence with known structure, at a threshold of e-score below  <dig>  . note that this is a relaxed level of statistical confidence and is certain to introduce a large number of false positives. even pfam a with all its powerful manually tuned search tools, leaves 38% of the amino acids in the swiss-prot database unannotated.

additional complexity results from the fact that proteins are typically composed of several subunits, called domains. the literature in protein science teems with definitions that attempt to capture the correct notion of a protein domain. we later return to the issue of the "appropriate" definition of a domain. the computational problem of correctly dissecting a protein sequence into its domains is still largely open. it is of great importance since both the function and the structure of a protein can be inferred quite well from the function and structure of its constituent domains. structural prediction algorithms may benefit from the definition of protein domains and sub-domains  <cit> . in the scope of the structural genomics initiatives, the identification and classification of domains from sequence is crucial for the selection of proper crystallography targets, and the definition of domain boundaries is essential for successful crystallization.

dissecting protein sequences into their domains would also help avoid false transitivity in large-scale efforts of clustering and classifying protein sequences. the difficulty stems from the fact that various combinations of similar domains may appear in distinct proteins. figure  <dig> shows an example of three proteins containing different combinations of four domain families. this evolutionary "mix and match" of domains yields new proteins that are comprised of existing molecular building blocks.

as already mentioned, many publications have considered protein domains. the various definitions of a protein domain suggested by different authors do not always coincide and are not always even precisely stated  <cit> . since the only raw data we use for this project consists of protein sequences, our choice of definition is rather natural. namely, for us a domain is a continuous sequence of amino acids that recurs  in the protein space. thus, our domains are evolutionary in nature – segments of protein that are conserved and reused throughout evolution. we later comment on the correlation between the present definition and those adopted by others. a major source of difficulty in discerning protein domains is their hierarchical nature. a domain often has several well-defined and recurring sub-domains. also, several domains may consistently and repeatedly appear together in specific combinations. likewise, domain families are also hierarchical, several families may together form a super-family, and these may combine to yet another level of classification.

let us return to the limitations of the existing sequence comparison techniques. transitivity of similarity among proteins can be used to enhance similarity detection – if proteins a and b are known to be similar, and proteins b and c are known to be similar, transitivity would imply that proteins a and c are similar. however this transitivity should be used with care, so as to avoid two pitfalls. in a false match two proteins are considered similar, though they are biologically unrelated. careless application of transitivity can amplify the effect of false matches. we must also beware the "trap of false transitivity" that is due to the way proteins are comprised of several domains, as illustrated by figure  <dig>  careless use of transitivity entails a similarity between  and , although they share no common domains.

previous work
several systems that define protein domains and classify them exist. databases such as pfam a  <cit>  and smart  <cit>  offer comprehensive collections of families that were compiled by human experts, with the aid of computational tools . these methods provide high quality definitions that are most useful for biologists. however they incorporate a great deal of human labor and expertise and require external information to identify new domain families. we use pfam a, as well as the structure based classification provided by scop  <cit>  as gold standards for evaluating our performance as well as the performance other competing systems.

against which automatic systems that define domains and classify them can everest be compared? the obvious candidates are the pioneering domo  <cit> , the prodom algorithm  <cit>  that was adopted by pfam and forms pfam b, and the more recent adda  <cit> . domo is inappropriate for this purpose, since it is no longer up-to-date, and has performed poorly on preliminary tests we have conducted. it would be natural to compare everest's performance with that of prodom and pfam b. unfortunately, there seems to be no systematic evaluation of the quality of prodom and pfam b against any comprehensive reference set in the literature. . furthermore, the prodom and pfam b databases are created with full knowledge of pfam a and scop. therefore, it is impossible to post-hoc evaluate them against pfam a or scop. consequently, there is no ground for comparison with everest here. under these circumstances, the only alternative system against which we can compare everest is adda. this indeed is the yardstick we use.

nagarajan and yona  <cit>  developed a neural-network based method to parse a protein sequence into its domains using heterogeneous sources of information. chop  <cit>  aims for the same goal using sequence alignments to known sequences of varying quality. both methods focus on the accurate determination of domain boundaries, and do not attempt to classify the domains. we undertake the reciprocal task and wish to accurately classify the domain. for our purposes domain boundaries need to be accurate enough only so as to not interfere with the domains' classification.

goal and rationale
the goal of our research is to identify and classify all protein domains. we have developed everest , an automatic method that identifies patterns within a protein sequence database and produces a set of statistical models, each modeling a sequence pattern that recurs in the database.

our method utilizes two types of input – a database of protein sequences , and a collection of known domain families. the latter is used as a training set with which to exemplify to the system the notion of a domain family, but not to derive the characteristics of specific families. the performance of our system is then tested by evaluating its predictions on other known domain families.

there are several good reasons to seek an automatic system to determine and classify protein domains. the most obvious reason is that today's semi-manual techniques will become impractical as more and more data pours in as new genome projects reach completion. also, automated methods are less prone to biases than semi-manual ones. semi-manual methods require a predetermined seed for each family they define. this severely limits their potential to extend the repertoire of protein families beyond the boundaries of known biology. automated methods are independent of today's biological knowledge, and thus have the potential of expanding it.

methodologies and concepts
following are the main ideas incorporated into the everest procedure:

careful transitivity 1
we avoid false transitivity  by breaking the protein sequences into putative domains early in the process, and applying transitivity to them rather than to the whole sequences. the putative domains are refined during the process.

careful transitivity 2
to reduce the adverse effects of false matches, we employ an average linkage algorithm. this algorithm is much less susceptible to noise than either single linkage or full linkage algorithms, and was successfully employed for whole protein sequence clustering in protonet  <cit> .

selecting good candidate families using machine learning techniques
a random set of known families is provided as an additional input to the system. based on this additional input, and using a boosting regression tool  <cit> , our system generates its notion of a domain family. this allows us to first create many putative domain families, and then weed out those that do not match this notion.

statistical models
profile hidden markov models   <cit> , are used to characterize our families. these statistical models have proven extremely useful in identifying distant similarities between protein sequences  <cit> , and have boosted our system's performance significantly.

iterative refinement
we use an iterative procedure to refine our results. the process begins by creating a database of putative domains. these putative domains are then clustered into a large set of putative domain families. out of this set everest selects those families matching the learned notion of domain family. a statistical model  is created for each of those families. we then iterate by using the statistical models to recreate the putative domains database and repeat the procedure.

we use the iterations to both improve the quality of the suggested domain families and reduce their number.

expert voting
the families defined by our profile hmms often overlap, i.e. several hmms provide different descriptions of the same family. we identify sets of such overlapping hmms, and let each one of them evaluate each domain found by any hmm in the set. we then define a family by accepting only domains with a good average score. as with our iterative refinement, this process both improves the quality of our families, and reduces their number.

RESULTS
we have first applied everest to swiss-prot  <dig> , a comprehensive, highly curated, database that includes  <dig>  protein sequences. we performed  <dig> iterations, generating ~ <dig>  hmms in the first iteration, ~ <dig>  hmms in the second, and ~ <dig>  hmms in the third.  <dig>  families were defined at the end of the process, to which we refer as everest release  <dig> families. these families include ~ <dig> , <dig> domains, and jointly cover 83% of the amino acids in the swiss-prot database. everest release  <dig> annotates  <dig> proteins  that are not annotated by pfam a. additionally, in  <dig>  proteins , everest annotates a part of the protein that is not annotated by pfam a. the average  size of an everest domain family is  <dig> , the average  length of the domains is  <dig>  amino acids. the distributions of family sizes, of domain lengths and of the number of domains covering every amino acid are shown in figure  <dig> . everest families are frequently variations of known domain families, sometimes adding new domains to the family. other everest families are new families. some of these define domains on unannotated parts of proteins. others identify sub-families, super-families, sub-domains, super-domains or other variations on known domains. we evaluate our results by applying tests to the everest families as described in section evaluation of classification. a web site providing access to these new domain families is available at  <cit> .

since each everest family is defined by its own set of statistical models, different families may intersect each other. to evaluate the extent of this redundancy in the definition of domains, we measure, for each everest domain, its overlap similarity  with the most similar other everest domain on the same protein. allowing each hmm to define its own family results in a significant domain redundancy, as shown by figure  <dig> . it is not necessarily true that ideal domain families ought to be disjoint, but the extent of the overlap between the families defined by the hmms appears excessive from a biological perspective. rather, it appears that for most families, several hmms have converged each to its own variation of the same domain family. to overcome this problem we identify sets of overlapping hmms, and replace the families they define with a family defined by a calculated vote. the process is described in detail in steps  <dig> and  <dig> of section the everest process. figure  <dig>  shows that nearly all domain redundancy is eliminated by this process.

evaluation of classification
we validate our results by comparing the everest families with two reference sets of known families, used as gold standards. the two reference sets we use are pfam a and scop at the level of families .

the definition of an evaluation scheme of a large set of domain families with respect to such gold standards is a complex task, which we have chosen to divide into three tiers. the first two tiers apply to clustering evaluation in general, and not only to evaluation of protein domain classification:

• first, one needs to decide how to compare an evaluated family with a reference family, assuming both group elements of the same universe. we have chosen a standard set similarity measure, namely the ratio between the size of the intersection of the two families and the size of their union.

• next, one considers comparing an evaluated set of families with a reference set of families, again assuming all families group elements of the same universe. we have chosen a dual view where we check the coverage of the evaluated system by allowing each reference family to select the best fitting evaluated family, and check the accuracy of the evaluated system by allowing each evaluated family to select the best fitting reference family. we describe this in more detail later in this section.

the third tier is specific to the evaluation of systems that identify, and not only classify their elements:

• recall that everest families classify elements that are distinct from the elements classified by the reference system, i.e. the two sets of families are not defined over the same universe. rather, each system both defines its own universe of domain instances, and classifies it. we have chosen to project each suggested family to the universe defined by the reference system, thus reducing the problem back to that of evaluation where both systems classify elements of the same universe.

section evaluating a suggested domain family describes in detail the process of scoring a suggested domain family with respect to a reference family. we refer to this score as σ below.

out of the  <dig>  everest release  <dig> domain families,  <dig>  families intersect with pfam families and  <dig> do not.  <dig> families intersect with scop families and  <dig> do not. obviously, everest families that do not intersect with any reference family cannot be evaluated by the reference set. if it turns out that everest families that can be evaluated reconstruct known families well, it will be reasonable to assume that the rest of the everest families are new families of similar quality.

as stated above, we employ two complementary tests:

• coverage – how many of the reference families are reconstructed well, as described by the histogram over reference families r of σ = maxe∈eσ, where e is the set of everest families.

• accuracy – how many of the everest families that intersect with the reference families are good reconstructions of any reference family, as described by the histogram over everest families e of σ = maxr∈rσ, where r is the set of reference families.

it is nearly trivial to reconstruct very small families, therefore we only test for coverage of families with at least  <dig> members . to test how well everest identifies domain families within a multi-domain context, we also test coverage specifically for families that appear on some protein in a hetero-multi-domain context . reconstructing these families is a much harder task, involving the correct dissection of the protein to its domains. there are  <dig> pfam families of size  <dig> or more, of which  <dig> are hetero families.  <dig> of the scop families have at least  <dig> members and  <dig> of those are hetero families.

in those instances where everest disagrees with pfam, it is almost always the case that either everest is highly selective or highly sensitive, as can be seen in panels g – j of figure  <dig>  these are two-dimensional histograms counting the number of families scoring within a given range of selectivity and given range of sensitivity.

it is important to note that the histograms shown underestimate the quality of everest families. here are two reasons for that:

• definition of a domain family is fuzzy. in some of the cases where everest disagrees with pfam or scop it might be that everest is correct. section examples: selected everest families below lists several such cases.

• slightly contaminated new domain families. we consider those everest families that do not intersect with any pfam/scop family to be putative new domain families. those families are excluded from the histograms. consider, however, a novel domain family that is found by everest. if such a family is contaminated by even a single member from a known pfam/scop family, f, it would show in the histograms, with a very low score. in this case, our scoring scheme  assumes our new family to be an attempted  approximation of family f. thus are an unknown number of the everest families counted as poor reconstructions of known families, though they are actually good  suggestions of honest new families.

we compare our performance to that of two systems with similar goals: the first is protonet -a whole protein sequence hierarchical classification system  <cit> . protonet was shown to reconstruct protein families to an impressive degree  <cit> . however, being a whole protein classification it encounters difficulties with multi-domain proteins. the protonet version we have explored clusters the same swiss-prot database that we analyze. a recent improvement to protonet has reduced the number of clusters from ~ <dig>  to  <dig>  with nearly no loss in coverage  <cit> . of these clusters,  <dig>  intersect with pfam reference families and  <dig> intersect with scop reference families. the second system is adda  <cit> . this is an algorithm for domain identification and clustering that has significantly improved all previously known methods. adda runs over a larger database of ~ <dig>  sequences, and yields  <dig>  families of which  <dig> intersect with pfam reference families and  <dig> intersect with scop families.

everest always achieves better coverage, for both pfam and scop, than the other systems. adda outperforms everest in terms of accuracy with respect to scop. note also, that unlike everest, the other systems suffer a large reduction of coverage on hetero pfam/scop families.

to verify that we have not gained knowledge on specific families from our training set, we look at the distribution of scores for the training families and for the non-training families separately. these results are also shown in table  <dig>  and exhibit very little difference between the two distributions.

examples: selected everest families
as shown in figure  <dig>  many of the everest families are near-perfect reconstructions of known pfam and scop families, scoring high in our tests. the examples in this section are not of those high scoring families, rather, we consider several families that do not score high with respect to pfam. as noted above, some of these families provide a different, valid, interpretation of the sequence data. others might be lower quality versions of the pfam families, which, nevertheless, provide clues through which, either by manual inspection or by further development of the algorithm, one can identify the biologically genuine domain family.

because they do not agree with pfam, these families achieve low scores in the tests reported, providing evidence that the tests should be considered lower bounds on the quality of everest.

functional annotation for a family with unknown function
 is composed of all the domains of  , the middle part of all the domains of   and two more unannotated domains. according to pfam, scha/curd like family has no known functional role, but two of its members are known to be part of gene clusters involved in the synthesis of polyketide-based spore pigments. we therefore find it possible that those two families should actually be considered one, as suggested by our system. figure  <dig> illustrates the  page from the everest web server.

putative new domain family
 is unknown to pfam – none of its domains intersect with any pfam domain. we hypothesize that it is a new domain family. out of the  <dig> domains in ,  <dig> appear n-terminal to domains of   oxygenase superfamily), with a gap of about  <dig> amino acids between them. we consider the consistent appearance of  c-terminal to  domains as supporting evidence to the hypothesis that  is a new domain family. figure  <dig> illustrates a representative protein structure containing  and .

sub-families
 , contains  <dig> domains in our database. it is found in hundreds of different domain contexts. of its  <dig> domains,  <dig> are found by , which also introduces  <dig> false positives and  <dig> unannotated domains . no other everest family achieves higher coverage of . identifying two everest domains if their intersection is at least 80% of their union, we have  <dig> other everest families that intersect with . of those, the intersection of  with  covers 20% of  and 44% of .  is the only family that is a good candidate for complementing  in the coverage of , since on the one hand, their intersection is not trivial, and on the other hand, neither one covers the other.  finds  <dig> of the  <dig> domains of , in addition to  <dig> false positives and  <dig> unannotated domains . when taken together  and  find  <dig> of  domains, and introduce  <dig> false positives . figure  <dig> represents the coverage of  by  and .

super-family
 fully covers both   and  , and contains no other pfam domains, therefore its score is  <dig>  with respect to  and  <dig>  with respect to . taking a closer look into those two families, one observes that enzyme  <cit>  classifies  to ec  <dig> , while  is sometimes classified to ec  <dig>  and other times to ec  <dig> . the scop family corresponding to  is "iron-containing alcohol dehydrogenase"  while  corresponds to scop family "dehydroquinate synthase, dhqs" . together, these two families form scop superfamily "dehydroquinate synthase-like" , thus  reconstructs a known super-family. figure  <dig> shows representative protein structures from each one of the two scop families.

domain cis-combinations
  is a relatively common domain family, appearing  <dig> times in swiss-prot  <dig> , in several different domain contexts.  finds  <dig> out of these  <dig> occurrences, adding  <dig> false positives .   appears  <dig> times in swiss-prot  <dig> , and is fully reconstructed, with no false positives by  . the combination of a  domain followed by two  domains appears  <dig> times in swiss-prot  <dig> .  finds all of these  <dig> times with no false positives.

everest release 2
we have run everest on an up-to-date version of swiss-prot  <dig>  . again we have performed  <dig> iterations, generating ~ <dig>  hmms in the first iteration, ~ <dig>  hmms in the second and ~ <dig>  hmms in the third.  <dig>  families defined at the end of the process form everest release  <dig>  the red bars in figure  <dig> show statistics of everest release  <dig> families. note that these have not changed much from the statistics of release  <dig> 

the training data used for this run was a taken from a up-to-date version of pfam . we have analyzed the performance of everest release  <dig> with respect to both this pfam release and the pfam release that was used in everest release  <dig> . figure  <dig> compares the performance of everest release  <dig> with that of release  <dig>  notice that the accuracy of both everest releases with respect to both pfam releases does not change . note also that the everest release  <dig> has better coverage of pfam release  <dig>  but that pfam release  <dig> is a harder reference set to cover . notice also, that as in release  <dig>  the coverage of pfam by everest does not drop when focusing on hetero families.

accepting 75% selectivity combined with 75% sensitivity as a good reconstruction of a family, we are able to reconstruct 56% of the hetero pfam families and 63% of the hetero scop families. further more, since 51% of our domain families that intersect with pfam of scop are good reconstructions of either a pfam family or a scop family, we can assume that 51% of our  <dig> domain families that do not intersect with pfam or scop are good suggestions of new families.

discussion
33% of the swiss-prot proteins  that are annotated by pfam  contain more than one pfam domain. this number is clearly an underestimate of the proportion of multi-domain proteins since for many proteins pfam identifies but one of several domains. the abundance of multi-domain proteins is one of several indications that it is important to develop tools to investigate proteins at the level of their domains.

one finds in the literature a number of definitions for the concept of a protein domain. the approach we have taken is evolutionary. we define a domain as a continuous sequence of amino acids that recurs  in the protein space. it should be noted that the most widely accepted definition of domain is based on a structural perspective. recall that everest uses no structural data whatsoever. thus, it is rather surprising that everest reconstructs 63% of scop domain families to a high degree. however, everest does well not only according to the structural definition. some of our families correspond to sub-domains, at least  <dig> of the everest families correspond to cis-combinations  of pfam and scop families ,and others describe other situations. we believe that interesting phenomena appear in a range of segment lengths, and that the relationships between recurring patterns of different lengths can teach us about the biology behind the sequence.

we have compared our results to those of adda. a problematic aspect of this comparison is that adda was run on a larger database than the one we used. it is possible that our evaluation of adda's performance vs. pfam is hampered by the mapping down to the swiss-prot database. this issue does not arise with our analysis of adda's performance vs. scop, since there both systems were mapped to the pdb sequence database.

we use a combination of methods from different disciplines to iteratively define domain families and select the best among them. this allows us to achieve high coverage and accuracy in the families we define. we believe the methodologies we employ here may be of independent interest. whenever one studies similarity relations, arises the challenge of deriving the correct transitive closure. some of the ideas developed here seem applicable in this much wider context. we had to deal with another commonly occurring notoriously difficult problem, namely, when to stop an ongoing clustering process. our algorithm constructs a comprehensive hierarchy of clusters and proceeds to weed it using machine learning methods. again this approach may help solve this problem in other situations.

a challenging problem which we did not thoroughly study here is that of determining the exact location of our domains' boundaries. we intend to tackle this problem with a procedure for constructing hmms which can extend or reduce the hmm according to information-theoretic criteria.

interesting phenomena show up upon investigating the relationships between everest families . some pairs of families exhibit a sub-domain – super-domain relationship, other are sub-family – super-family pairs, yet others appear side-by-side, etc. we plan to rigorously define and investigate such relationships, providing an additional layer to everest, on top of the definition of families.

finally, we have created a web site for everest. it allows browsing through everest domain families, providing views for the domains found on a requested protein, and for the domains of a requested family . in the future, this site will also offer tools to explore relationships between different families, etc. we hope the web site will be useful for various types of research in biology.

CONCLUSIONS
the main achievement that we report here is the development of an automatic method to identify and classify protein domains based on sequence data. the whole process, called everest, was applied to the swiss-prot database. everest domains cover 85% of the amino acids in the database. everest finds domains in  <dig>  proteins  that are not annotated by pfam a. in additional  <dig>  proteins , everest finds domains in regions that are not annotated by pfam a.

we evaluate everest by testing how well it reconstructs "gold standard" domain families taken from pfam a and scop. the results show that everest reconstructs 56% of the pfam a families and 63% of the scop families, and that 51% of the everest families are good reconstructions of either pfam a families or scop families. manual review of everest families that do not score well with respect to any known family, suggests that many of them do determine valid domain families that are either unknown to pfam and scop, or are valid alternatives to their definitions.

we believe everest provides three contributions to our understanding of the protein world. the first is its annotation of previously un-annotated proteins or regions of proteins. the second is its novel unbiased view of domain families: as shown in section examples: selected everest families, many of the everest families that do not technically agree with pfam or scop families provide valid, complementary interpretations of the biological data. the third contribution is a promise – being an automatic process, everest is scalable. while not a trivial task, it is clearly possible to run everest on larger databases, and we will do that in the near future. after having proven the ability of the process to define high quality protein domain families on the swiss-prot section of the uniprot knowledgebase, we expect to provide such results for the whole of uniprot, greatly increasing the proportion of annotated protein regions.

