BACKGROUND
a major goal in human genetics is to understand the links between the presence of genetic variations, including single nucleotide polymorphisms , insertions/deletions , copy number variants , recombination events, etc. and individual or population characteristics, risk of disease or response to the environment. this requires the characterization and analysis of the type and distribution of the variations in human populations and/or each individual to understand how a specific genetic landscape can influence human health and behavior  <cit> .

recently, with the development of next generation sequencing  techniques  <cit> , the available information related to genetic human variation has evolved rapidly, resulting in overwhelming volumes of data. for example, the dbsnp database   <cit>  contains about  <dig> million snps and  <dig> million indels. half a million of these observed snps are found within an exon and modify a single amino acid. these are known as non-synonymous snps  and are the most frequent cause of mendelian diseases since they alter the protein’s function  <cit> .

insertions and/or deletions, commonly known as indels, are the second most frequent type of human variation  <cit> . when an indel occurs within an exon, it can be either frameshifting  or non-frameshifting : fs-indels either modify the complete c-terminal region of the protein or result in premature termination of translation, while nfs-indels involve multiples of three nucleotides, leading to the insertion/deletion of one or more amino acids  <cit> . the importance of indels in the human genome has emerged recently from various studies  <cit> . more specifically, small indels  are the second most frequent cause of mendelian diseases  <cit>  and represent some of the least well-characterized and least understood variants in the human genome. this is due in part to the fact that they are difficult to identify accurately during ngs calling  <cit> .

to predict the functional impact of sequence variation, numerous tools have been developed recently, mainly focusing on nssnps and mendelian diseases  <cit> . these tools share some common features, notably: i) each variant is classified according to a two state category: neutral  or disease-causing  and annotated with a certain number of parameters, ii) a model is created using a machine learning technique  and criteria, scores or rules are defined to distinguish known neutral variants from known deleterious ones, iii) the criteria, scores or rules are then used to predict the status of unknown variants. among the numerous methods available, sift  <cit>  and polyphen  <cit>  are the most widely used, since they provide good accuracy  for the prediction of nssnps involved in diseases. the provean  <cit>  method uses a scoring metric to predict the pathogeneticity of snps and nfs-indels based on sequence similarity before and after the introduction of an amino acid variation. two tools have also been published that are designed specifically to predict the effect of indels: sift-indel  <cit> , and ddig-in  <cit> .

during the last few years, we have developed an integrated framework, sm2ph  <cit> , dedicated to the study and prediction of human genetic variation. sm2ph is built around a knowledge base, which provides unified access to diverse information associated with any human protein  and facilitates the integrated study of the structural and functional impacts of nssnps and their phenotypic effects. the framework also incorporates the msv3d  <cit>  database of known missense variants in all human proteins for which a 3d structure template is available. the human missense variants in msv3d are mainly retrieved from the dbsnp  <cit>  and swissvar  <cit>  databases and are classified into  <dig> categories: disease-causing variants associated with omim  <cit>  diseases and variants of uncertain significance . each missense variant is then characterized using a large set of structural, functional and evolutionary parameters. finally, the information and data model in msv3d is exploited by the kd4v  <cit>  system to predict the pathogenicity of nssnps based on a set of rules generated by inductive logic programming   <cit> .

here, we describe the extension of the sm2ph framework to include nfs-indels. this study is composed of two parts:  the collection, annotation and comparative study of a reference set of disease causing and neutral nfs-indels and  the design of a machine learning method , which is able to predict the effects of nfs-indels and shed light on the molecular mechanisms underlying their pathogenicity.

first, the knowledge base in the sm2ph framework was extended to include a large data set of  <dig> nfs-indels, including  <dig> disease-causing variants and  <dig> neutral or unknown variants. these variants were then annotated with an extensive set of parameters, specifically designed to describe the diverse structural, functional and evolutionary characteristics of nfs-indels. we then performed a statistical analysis to study the general characteristics of disease-causing and neutral nfs-indels.

second, an inductive logic programming  machine learning approach was developed to predict disease-causing nfs-indels. ilp systems allow learning with much richer representations than many machine learning methods and the complex relationships learned are described as logic programs. in kd4i, the logic programs are provided as a set of rules that are easy to comprehend by the user. thus, kd4i is able, not only to make a prediction, but also to give the reasons for the prediction, i.e. to generate new knowledge about the causative molecular perturbations, such as the disruption of catalytic residues, binding sites or post-translational modifications, that result in disease.

methods
data set collection
the reference set of nfs-indels was constructed using the same approach as that described in the article presenting the provean method  <cit> . first, nfs-indels were collected from the uniprotkb/swiss-prot database  <cit> , and annotated in-house as deleterious, neutral or unknown, based on keywords found in the uniprotkb annotations . second, this set was enriched with nfs-indels retrieved from the  <dig> genomes project database  <cit> . variants with average allele frequencies of >10% were collected and could thus be considered as common, i.e. non pathogenic or neutral, in the human population.

all the variants were then mapped to the human protein sequences in the sm2ph knowledge base. this resulted in a data set containing a total of  <dig> nfs-indels, mapped to  <dig> distinct proteins. of these,  <dig> nfs-indels were defined as polymorphisms/neutral  and  <dig> as disease-causing/deleterious . then,  <dig> neutral nfs-indels , were randomly selected from the pool of neutral nfs-indels. thus, the final data set was balanced for positive/negative examples , an important characteristic to ensure appropriate statistical analysis and quality learning. the variants used in the final data set are provided in additional file  <dig> 

dataset annotation
the annotations used to characterize the nfs-indel data set were either extracted from the sm2ph knowledge base or calculated using existing tools for protein structural analysis and in-house developed python scripts. the sm2ph knowledge base contains high quality multiple sequence alignments for all human proteins, which are annotated with structural and functional parameters derived from macsims . macsims combines knowledge-based methods with complementary ab initio sequence-based predictions to extract valuable information from multiple alignments  <cit> . these parameters are described in more detail in  <cit>  and on the sm2ph help pages . this information was complemented by additional structural parameters, including secondary structures and residue solvent accessible surface area  calculated using spine-x  <cit> .

the different structure, functional and evolutionary parameters are shown in table  <dig> and described in detail below.

the column ‘in final method?’ indicates whether the parameter is used in the final ilp rule set for prediction of deleterious nfs-indels. *the numerical values range from − <dig> to + <dig> but, in order to reduce computational cost, we have regrouped values higher than ± <dig> into the semantic category two or more/two or less.

conservation
it is generally thought that conserved sites in proteins have important functional or structural roles  <cit> . the conservation categories for a given nfs-indel position are extracted from macsims via the sm2ph knowledge base. we used two different annotations: conserved residues and conserved ‘core blocks’, i.e. sequence segments that are conserved in subfamilies of the multiple alignments.

functional annotations
it is assumed that changes at important functional sites in a protein will have major effects on its function. we therefore identify the presence of nfs-indels in known functional sites, including domains extracted from the pfam protein family database  <cit> , motifs from the prosite database  <cit> , domains from the uniprot database, as well as the regions annotated by macsims.

physico-chemical properties
these parameters have been shown previously to be important for nssnp classification  <cit> . among the numerous physico-chemical properties associated with an amino acid, we have chosen four important ones: volume, charge, hydrophobicity and polarity. for a given nfs-indel, we calculate parameters as follows:

for each amino acid in the nfs-indel, the values for each property are translated into numerical categories . two parameters are then associated with each nfs-indel: the average and the total of the individual amino acid properties. finally, since we use a semantic algorithm for learning , the average and total values are classified into different semantic categories .

local perturbation
in order to characterize the local perturbation induced by the nfs-indel, we have introduced a set of original parameters, expressed as the difference between the physico-chemical properties of the nfs-indel residues  with respect to  the site ,  the environment, consisting of the n  flanking amino acids of a nfs-indel or  the region . the local perturbation parameters are then defined as:

 perturbationaverage=x¯s−x¯i 

 wherex=volume,hydrophobicity,polarityorcharge 

 xi_=averagepropertyofthenfs−indel 

 x_s=averagepropertyofthelocalsequencesite,environmentorregion 

and:

 perturbationtotal=∑xs−∑xi 

 wherex=volume,hydrophobicity,polarityorcharge 

 ∑xi=totalofthepropertiesfortheaminoacidsinthenfs−indel 

 ∑xs=totalofthepropertiesforthelocalsequencesite,environmentorregion 

functional annotations
• disorder probability: disordered regions in proteins are structurally flexible and hence more permissive to modification by micro-insertion or micro-deletion. nevertheless, despite their lack of a well-defined globular structure, the disordered regions are known to be involved in many basic functions in molecular recognition and macromolecular assemblies and are frequently associated with signal transduction, cell-cycle regulation and transcription, for example  <cit> . here, we define a disordered region as having a spine-d disorder probability > <dig> .

• relative solvent accessible surface area : rsa is defined as the solvent accessible surface area of a residue in a protein normalized by the accessible surface area of the residue in its “unfolded” state  <cit> . it has been suggested that the environments around protein residues may affect their functions or their propensities for different structures  <cit>  and therefore, amino acids may behave differently when they are buried or on the surface of the protein.

• secondary structure location: the nfs-indel location is defined as in an alpha helix, a beta sheet or a loop. our hypothesis is that nfs-indels may be more deleterious if they occur within secondary structures, especially in the case of beta sheets, since the loss of a single strand is likely to disrupt the overall structure.

relative indel position 
it has been shown in a study devoted to the analysis of a genome from a healthy individual  <cit>  that nfs-indels occur more frequently in the n/c-terminal regions of proteins. the authors hypothesized that this may be due to higher selective pressure in the central part of the protein. therefore, nfs-indels occurring in this region may be deleterious. we defined the rip as the ratio between the position of the nfs-indel and the length of the protein. the n-terminal region is then defined as the first 10% of the protein and c-terminal region as the last 10%.

indel length
we used the definition of a ‘small’ nfs-indel given in  <cit> , as being in the range of 3– <dig> base pairs . in fact, 62% of the nfs-indels were < = <dig> base pairs and longer nfs-indels become increasing rare, and nfs-indel of 24 bp , represent only 3%. we limited our study to nfs-indels ranging from 3– <dig> base pairs for which enough data is available. we hypothesize that longer nfs-indels are more disruptive than shorter ones for the protein structure.

presence of proline/glycine
it has been shown that proline and glycine play a role in protein folding. for example, glycine presents faster rate constants for contact formation than any other amino acid, as expected from its increased backbone flexibility due to the lack of a cβ-atom. the presence of a proline residue leads to more complex dynamics in the process of contact formation, and this amino acid is also a strong α-helix breaker  <cit> .

machine learning strategy
machine learning, a branch of artificial intelligence, concerns the construction and study of computational systems that can learn from data. the development of a machine learning tool requires three steps. the first one is to obtain a data set that is large, representative and error-free, in order to ensure accurate automated learning. the second is to develop a strategy for the characterization of the objects or examples contained in this data set. this is called annotation of the data set and includes the parameters used to characterize the examples in the data set, as well as the categories or classes that are to be learned . these two steps are done in the two previous paragraphs ‘data set collection’ and ‘data set annotation’. the third is to design an efficient machine learning strategy. this includes the pre-selection of the parameters that will be used during learning and the choice and optimization of the learning algorithm  <cit> .

here, we have used a machine learning algorithm called inductive logic programming , which infers hypotheses from experience  by means of logic programming. the approach is based on positive and negative examples, which combined with background knowledge, can be used to infer a hypothesis. positive and negative examples are objects  from a training set that satisfy a condition  and the background knowledge consists of the set of parameters for these objects. ilp searches for a combination of parameter values that covers the maximum number of positive examples and the minimum number of negative examples. such combinations are called ‘rules’. the process is then repeated until all positive examples are covered by at least one rule.

we used the ilp algorithm implemented in aleph  <cit> . aleph allows the user to set a number of program options, including the minimum number of positive examples  and the maximum number of negative examples for each rule . then ilp evaluates each rule based on the difference between the number positive examples covered and the number of negative examples. if the minpos and noise constraints are satisfied the rule is added to the hypothesis space. in the experiments described in the results section we set minpos =  <dig> and noise =  <dig>  in order to eliminate false positive predictions.

the rules produced by the ilp algorithm can be used to predict the status of unknown objects, i.e. to predict whether an unknown nfs-indel is deleterious or neutral. to evaluate the prediction power of our algorithm, we used a 10-fold cross-validation strategy. specifically, we randomly split the data set into  <dig> parts:  <dig> parts were used to train the ilp algorithm and  <dig> part was used to estimate the prediction performance of the method. the performance was assessed using the statistical parameters shown in table  <dig> and defined in  <cit> . this process was repeated  <dig> times.

t=true, f=false, p=positive, n=negative, npv=negative predictive value, mcc=matthews correlation coefficient.

parameter selection
before running aleph, we performed a pre-selection of parameters to avoid the effects of the ‘curse of dimensionality’  <cit>  due to the large number of parameters and the relatively small number of examples in the data set. several approaches have been proposed for dimensionality reduction, including tests that are independent of the machine learning algorithm, such as principal component analysis   <cit> , which we used initially to investigate the level of redundancy in our parameter set. however, we were unable to clearly identify the most discriminative parameters using this approach. therefore, we used an in-house ‘wrapper’ approach  <cit> , which incorporates the ilp learning process in the parameter selection process, and allows the identification of more complex relationships. as an example, we can cite the disorder probability is important for the characterization of deleterious mutations, but not for neutral mutations, and is in fact the most discriminative parameter in the ilp rules. we used the wrapper approach to evaluate the quality of the parameters.

first, we estimated the discriminative power of the parameters by calculating:

 x=∑fni−fpi 

where:

 fni=relativefrequencyofnegativeexamplesforeachvalueiofagivenparameter 

 fpi=relativefrequencyofpositiveexamplesforeachvalueiofagivenparameter 

second, we calculated the correlation matrix between all the parameters and defined a ‘correlation cutoff’, above which we considered two parameters to be significantly correlated. third, we sorted the parameters by their discriminative power x, and for each parameter, we eliminated the significantly correlated parameters with lower x. finally, we eliminated the parameters that had values of x lower than a given ‘x cutoff’, since these can be considered to be non-discriminating and eliminating them reduces the computational costs associated with large numbers of parameters. we tested different ‘correlation cutoffs’ in the range  <dig> - <dig>  with ‘x cutoff’ in the range  <dig> - <dig> , and measured the ilp prediction accuracy using a  <dig> fold cross-validation. the best performance  was achieved with a correlation cutoff of  <dig> / <dig>  and a x cutoff of  <dig>  . the correlation matrix and the reduced set of selected parameters are provided in additional files  <dig> and  <dig> 

one of the major concerns in such machine learning strategies is the problem of over-fitting. if the learned model is over-fitted to the training set, it will generally have poor predictive performance on the test data. in order to detect any potential over-fitting, we plotted the training accuracy and the testing accuracy as a function of the number of parameters in the model . for a correlation cutoff < <dig> , both the training and the testing accuracy increase with an increased number of parameters, indicating that the model is not over-fitted and thus, that the wrapper approach is effective. a small loss of training accuracy is observed however, for larger sets of parameters, corresponding to correlation cutoffs > = <dig> .

RESULTS
the first part of this study was aimed at identifying a comprehensive set of parameters that may usefully characterize the structural or functional consequences of a nfs-indel in a protein sequence. we started with the existing parameters in the sm2ph knowledge base, originally used to characterize nssnps. it is assumed that 83% of the harmful nssnps affect protein stability. for this reason, the previously developed nssnp prediction methods have focused on information about the structure and function of the protein, as well as the conservation and the physico-chemical properties of the change implied by the mutation  <cit> . using the same philosophy, we estimated or retrieved various data from sm2ph related to the sequence, structure and function of the protein and/or of the inserted/deleted amino acids. we then identified a number of additional parameters, designed specifically for the characterization of nfs-indels, such as the probability of disordered regions in the proteins or the local perturbation of physico-chemical properties caused by the mutation.

we then used this large set of parameters to develop a machine learning strategy to study the relationships between nfs-indels and their corresponding phenotypes. the strategy involves  the construction of a large data set for training and testing and the comprehensive annotation of the examples in the data set with our diverse set of structural, functional and evolutionary parameters,  the optimization of an efficient inductive logic programming  method to learn a set of rules that distinguish between positive  and negative  examples and  the exploitation of these rules to extract knowledge about the phenotypic effects of unknown nfs-indels.

construction and annotation of the nfs-indel data set
the background knowledge used for the machine learning strategy consists of a large data set of positive and negative examples of nfs-indels. the construction of a suitable background knowledge base is perhaps the most important step in the development of any prediction method. our data set consists of  <dig> disease-causing/deleterious nfs-indels  and  <dig> neutral nfs-indels , collected from publically available databases.

investigation of nfs-indel pathogenicity
in this section, we aim to deduce and describe some of the general reasons behind the pathogenicity of nfs-indels in mendelian diseases. in order to discover differences between deleterious and neutral nfs-indels, we performed a chi-square test  for each parameter, where the null hypothesis is that there is no significant difference between the values of the parameter for deleterious and neutral variants. the results of these analyses are described below:

• conservation: as shown in figure  <dig>  disease-causing nfs-indels are more likely to occur at conserved sites than neutral nfs-indels. this is true for both conserved single residue positions and conserved core blocks, although the difference is more significant for the ‘core block’ parameter extracted from the macsims program.

• functional annotations: as shown in figure  <dig>  disease-causing nfs-indels are also more likely to occur at known functional sites. the most significant difference is observed for protein domains extracted from the pfam database.

• physico-chemical properties and their local perturbation: the  <dig> physico-chemical parameters associated with the amino acids in the nfs-indel, as well as their perturbation in the local environment, are shown in figures  <dig>   <dig>   <dig> and  <dig>  for both average and total scores. the results are similar for the four properties and the two types of scores :

• physico-chemical properties: disease-causing nfs-indels tend to be bigger, more hydrophobic, and more apolar than neutral nfs-indels. the differences are more significant for the total values compared to the average values . for the total values, we also observe that deleterious nfs-indels tend to be more positively charged than neutral indels.

• local perturbation: the perturbation parameters reflect differences between the nfs-indel and the flanking amino acids. here, we consider the physico-chemical parameters of the nfs-indel compared to: the site, the environment and the region . note that a negative perturbation value indicates that the average  value for the amino acids in the nfs-indel is larger than for the surrounding residues and a positive value indicates a smaller average  nfs-indel parameter. in general, disease-causing nfs-indels tend to be more associated with positive and negative changes, while neutral nfs-indels tend to have similar physico-chemical properties compared to the surrounding site. nevertheless, we observe some exceptions, for example, for positive changes in the volume parameter, i.e. nfs-indels that are smaller than the surrounding amino acids, the phenotype is more likely to be neutral. it should be noted that, in the case of polarity, the differences are less significant, compared to the other physico-chemical parameters.

• structural annotations: as shown in figure  <dig>  neutral nfs-indels tend to be exposed on the surface of the protein, in disordered regions and in coiled coils, while disease-causing nfs-indels are more likely to be located in structured, buried regions and secondary structures. concerning the type of secondary structure, deleterious nfs-indels are more often found in strands than in helices.

• others: as shown in figure  <dig>  deleterious nfs-indels are more likely to be located in the central region of the protein and are longer than neutral nfs-indels. no significant differences are observed when the nfs-indel includes a proline, but deleterious nfs-indels tend to contain a glycine more often than neutral nfs-indels.

machine learning method and prediction performance
we used a 10-fold cross validation experiment to estimate the accuracy of our method, where the complete data set was randomly divided into  <dig> parts  and the process was repeated  <dig> times. for the  <dig> tests, our computational strategy achieves an average prediction accuracy on the test set of 79%, sensitivity of 89%, specificity of 69%, precision of 75%, negative prediction value of 85%, and matthews correlation coefficient  of  <dig>  . we then identified the set of rules produced by the ilp algorithm that achieved the highest accuracy . this final rule set is composed of  <dig> human-interpretable rules that represent new knowledge about the molecular perturbations underlying disease-causing nfs-indels. the complete list of parameters used in this set are indicated in table  <dig> 

npv: negative prediction value, mcc: matthews correlation coefficient.

finally, we compared the performance of kd4i with two recent methods for the prediction of the phenotypic effects of nfs-indels, namely ddig-in and sift-indel. ddig-in uses a support vector machine  as the learning method, while sift-indel uses a rule set derived from a decision tree algorithm. in order to provide a more direct comparison with the ddig-in method, we have also trained a svm on our dataset and parameters. the results are shown in table  <dig>  we observe that the accuracies obtained with ddig-in and our svm implementation are similar, despite the fact that the size of the data set used to train the ddig-in algorithm is almost  <dig> times larger than the one used here, since we used only publically available data in our experiment. in comparison to sift-indel, the kd4i ilp approach  achieves similar accuracy, but with higher sensitivity and lower specificity.

for the kd4i  implementation, the average performances in the 10-fold cross-validation and the performance of the final selected rule set  are provided. for ddig-in and sift-indel, the performances for combined insertions and deletions  are shown.

the higher sensitivity of kd4i is due in part to the power of the ilp approach, but also to the parameters used in the final set of rules. indeed, all the tools tested here use different sets of parameters to characterize the nfs-indels. as shown on table  <dig>  the disorder probability and the sequence conservation are important parameters for all three methods. however, the kd4i rule set includes other parameters that are used in only one or the other of the existing methods, such as the solvent accessible surface area  or location in a pfam functional domain . in addition, we have highlighted the importance of some novel parameters, notably the local perturbation induced by the variant, in terms of amino acid volume for example.

assessing the rules produced by kd4i
kd4i is a rule-based system and the output is a prediction in binary form . one major advantage of our approach is that the rules used to predict deleterious nfs-indels are available in a human-interpretable format. in addition to providing useful information about the pathogenicity of specific nfs-indels, it is possible to consider the prediction performance of a given rule independently of the rest. in order to identify the best performing rules , we ranked them according to two characteristics: coverage and precision.

coverage is defined as the percentage of deleterious nfs-indels in the training set that can be explained by a given rule. given that we have  <dig> deleterious  nfs-indels in our data set and we have defined  <dig> rules, the expected average coverage is  <dig> %. values below this cutoff thus reflect rules that are more specific for a particular type of nfs-indel, while larger values reflect more general rules. the average coverage of our rules is  <dig> %, reflecting a slight tendency towards more specific rules. the maximum coverage is  <dig> % and the minimum  <dig> %.

precision  is the proportion of positive test results that are true positives and reflects the probability that a mutation predicted to be deleterious is truly deleterious. for two rules with the same precision, we consider the best rule to be the one that has higher coverage. since we set the noise option in the ilp algorithm to  <dig> , the precision of the rules in the training set is 100%. figure  <dig> shows the precision of the rules calculated for the complete data set and for the test set only. if the test set is representative of the whole data set, the precision values should be similar. as expected, the precision of the rules observed in the test set is generally slightly lower than for the whole set, with less rules achieving 100% precision. the precision should be increased when the size of whole data set is increased and the precision in the test set should tend towards that observed for the whole data set, as was demonstrated in  <cit> .

the complete list of ranked rules is provided in additional file  <dig>  together with their coverage and precision statistics, and the top ranking rules are discussed in the following section.

another way to estimate the most reliable predictions is to identify the nfs-indels that are predicted to be deleterious by more than one rule. table  <dig> shows the average precision as a function of the number of rules that cover a given prediction. we observe that the precision generally increases as the number of rules increases.

rules governing nfs-indel pathogenicity
the kd4i method provides explicit rules that shed light on the reasons for the pathogenicity of specific nfs-indels. in this section, we describe the three top ranking rules in the final rule set identified above .

 <dig>  rule  <dig> :

deleterious  if secondary_ structure , block , local_perturbation_region_polarity_total , relative_indel_position .

this rule can be interpreted as: a nfs-indel  is deleterious if it is located in a beta strand and in a conserved block, the polarity of the nfs-indel is equal to that of the local region and the nfs-indel is found in the central region of the protein. the rule thus indicates the specific conditions that determine nfs-indel pathogenicity in beta strands. indeed, we have observed that deleterious nfs-indels occur more often than neutral nfs-indels in secondary structure elements  and in particular in beta strands, probably due to their highly organized structure. however, kd4i is able to explain in more detail some of the reasons underlying this difference. in fact, almost half of the deleterious nfs-indels in strands are found in the central region of the protein and in a conserved block. the prediction is completed by the specification of the local perturbation of the polarity in the region.

 <dig>  rule  <dig> :

deleterious  if pfam , domain , conserved_residue , local_perturbation_region_polarity_total , indel_hydrophobicity_total .

this rule describes nfs-indels that are located within a pfam or uniprot domain, but do not affect a conserved residue. in this case, a very hydrophobic nfs-indel can still have a deleterious effect on the protein structure or function.

 <dig>  rule  <dig> :

deleterious  if block , probability_of_disorder , local_perturbation_region_polarity_total , indel_hydrophobicity_total , local_perturbation_in_site_volume_average .

the rule describes a nfs-indel in a conserved block that is situated in a structured region of the protein. here, the insertion/deletion of very hydrophobic and very large residues probably disrupts the organization of the local region.

the complete set of rules is provided in the additional file  <dig> 

assessment of the reliability of the kd4i predictions
in order to assess the reliability of our predictions, we analyzed population data from the  <dig> genomes project  <cit> , including genomes of  <dig>  healthy individuals from  <dig> populations. the majority of the variants observed in the  <dig> genomes are therefore expected to be neutral. however, several studies  <cit>  have shown that healthy individuals may carry deleterious variants without any obvious phenotypic effects. as an example, watson’s genome  <cit>  has a well-known alzheimer’s variant without apparent clinical effect. nevertheless, these variants are expected to be observed with low frequencies at the population level. conversely, variants found with higher frequencies are less likely to be deleterious. therefore, we grouped the nfs-indels in the  <dig> genomes by allele frequency  and compared these frequencies with the predictions produced by kd4i . as might be expected, the percentage of variants predicted to be deleterious decreases as the allele frequency increases , thus confirming the pertinence of our predictions.

case study: nfs-indel in a kinesin protein
to illustrate the potential of the kd4i approach to infer new knowledge about individual variants, we have chosen a variant from the test set , namely a deletion of an asparagine residue at position  <dig>  of the kif5a protein. kif5a  belongs to the microtubule-associated protein family of kinesins, that serve as molecular motors to distribute intracellular cargo along microtubules. kif5a is expressed exclusively in neurons, and has been recently linked to hereditary spastic paraplegias , a genetically heterogeneous group of neurodegenerative disorders characterized by progressive lower-limb spasticity and weakness. the hsp pathology is characterized by axonal degeneration of motor and sensory neurons  <cit> .

the variant  is predicted to be deleterious by  <dig> rules. we can compute the total precision, by taking the true/false positives for each rule and applying:

 precisiontotal=∑truepositivestruepositives+falsepositives 

since the precision is 100% and we have a large number of rules, we have high confidence in the prediction.

in order to extract more detailed information, we constructed a histogram of the usage of each parameter in this set of  <dig> rules. as shown in figure  <dig>  conservation-related  and functional  parameters are largely represented. in addition, since the amino acid deleted is polar, hydrophilic and small, we hypothesize that the variant does not disrupt the structural folding process. we can conclude at this point that the deletion is probably a loss-of-function variant.

in the literature, the mutated protein, kif5a_n526del is described as stable, but nonfunctional  <cit> . the mutation was subsequently shown to decouple microtubule binding of the motor, leading to inactivation of atpase. interestingly, drosophila larvae harboring either homozygous or hemizygous mutations in homologous genes of kif5a exhibit aberrant neuronal intracellular anterograde trafficking of membranous organelles and accumulation in so-called “organelle jams”, that leads to neurodegeneration  <cit> .

discussion and 
CONCLUSIONS
here, we have described a computational system, kd4i, which exploits a machine learning strategy, namely ilp, to extract information and generate new knowledge about nfs-indel pathogenicity. a major advantage of our approach is the ability to construct a model that provides putative explanations for the nfs-indel pathogenicity, thanks to the production of human-interpretable rules. the model constructed by our method includes  <dig> rules that explain nfs-indel pathogenicity in terms of problems related to stabilization of structured regions or loss of functional sites, for example. in addition, we have identified new parameters that are useful in discriminating between disease-causing and neutral nfs-indels. the probability of disorder is the most discriminating parameter for nfs-indel pathogenicity, since nfs-indels in structured regions are very frequently disease-causing. this can be combined with other parameters, such as the location of the nfs-indel in a conserved segment  of the protein. other predictors of disease-causing nfs-indels include the perturbation of local physico-chemical properties, such as hydrophobicity or amino acid volume.

in the future, in order to improve the accuracy kd4i, we will address the optimization of the parameters, extend the data set to include more representative nfs-indels and investigate new parameters that can be used to better characterize the variants. furthermore, we intend to combine the results of the ilp  with other machine learning methods  into a single ‘consensus’ prediction. this will hopefully improve the prediction accuracy. finally, we hope to expand our infrastructure to cover other types of variants, for example those occurring outside the protein coding regions  or in non-coding regions , given that these regions account for ~88% of trait-associated variants  <cit> .

competing interests
the authors declare that they have no competing interest.

authors’ contributions
cbdn carried out the parameter analysis, designed the machine learning algorithm and drafted the manuscript. hn participated in the statistical analysis and design of the machine learning algorithm. op participated in the design of the study and the interpretation of the results. jdt conceived the study, participated in its design and helped draft the manuscript. all authors read and approved the final manuscript.

authors’ information
carlos bermejo-das-neves and hoan-ngoc nguyen are joint first authors.

supplementary material
additional file 1
complete set of variants used in the final data set.

click here for file

 additional file 2
correlation matrix. microsoft excel file.

click here for file

 additional file 3
reduced set of uncorrelated parameters. microsoft excel file.

click here for file

 additional file 4
training and testing accuracies versus number of parameters. microsoft excel file.

click here for file

 additional file 5
rule set ranked by precision and coverage. microsoft excel file.

click here for file

 acknowledgements
we would like to thank the members of the bistro bioinformatics platform in strasbourg for their support. this work was supported by the french infrastructure for integrated structural biology  anr-10-insb-05- <dig>  instruct as part of the european strategy forum on research infrastructures , the anr investissement d’avenir project bip-bip and institute funds from the cnrs, inserm, and the université de strasbourg.
