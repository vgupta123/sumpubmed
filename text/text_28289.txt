BACKGROUND
when used for evolutionary or phylogenetic analyses, a sequence alignment is meant to represent evolutionary homology and have the characters descended from a common ancestor placed in the same column. commonly used alignment programs do not consider phylogeny in their placement of gaps, however, and create systematic errors with insertion-deletion events, affecting downstream evolutionary analyses  <cit> . the phylogeny-aware algorithm that distinguishes insertions from deletions  <cit>  has been shown not to suffer from this bias and, when the input guide phylogeny can be trusted, produces superior inference of character homology  <cit> . the alignments generated using the algorithm have been found to perform well in phylogenetic alignment benchmarks based on both real  <cit>  and simulated  <cit>  data, and give the most accurate inference of selection on codon sequences  <cit> .

the phylogeny-aware algorithm, including support for structure models describing differently-evolving site classes  <cit> , has been implemented in the prank alignment software and its graphical interface prankster . we now add an easy-to-use web interface called webprank , and provide a powerful web-based browser to visualise and post-process the resulting alignments . the new interface, with integrated documentation, can be accessed at http://tinyurl.com/webprank .we hope webprank will encourage a wide range of researchers to consider explicitly the evolution of the sequences they align and to properly account for gaps.

implementation
the webprank server is based on the prank phylogeny-aware multiple sequence alignment software  <cit> , implemented in c++. the alignment tasks are executed at the european bioinformatics institute's computation cluster using web services  <cit> , supporting delayed retrieval of finished jobs. the webprank user interface is written in html and javascript and the server back-end with perl, using cgi and the soap messaging protocol for communication and accessing the web service.

the webprank server uses the xml-based hsaml sequence alignment format  extensively. the format is capable of storing the full information of the alignment process, including the guide tree and the posterior scores associated with the pair-wise alignments at its internal nodes, in a single, computer-parsable file. this enables advanced analysis and post-processing of newly-generated results as well as full re-processing of earlier results, stored locally in the format, within the associated alignment browser.

the webprank alignment browser provides a powerful interface to analyse and post-process the results within a standard web browser. its interactive functions are implemented using advanced features of javascript and their full functionality requires a web browser with a fast javascript engine. the processing of large data sets can become computationally heavy and an alternative browser is provided for basic data visualisation. this light-weight alignment viewer, implemented in plain html, allows simple analyses with a web browser not supporting the full javascript or using a less powerful computer.

RESULTS
the webprank server  supports the alignment of dna, protein and codon sequences, input in fasta format  <cit> , using evolutionary substitution models  <cit> . it can translate, align as protein and back-translate protein-coding dna sequences. in addition, webprank includes built-in support for two structure models  <cit> , fast/slow and fast/slow/codon, designed for aligning genomic dna sequences with sites evolving with different substitution dynamics and differences in the patterns of alignment gaps. webprank accepts a user-defined phylogeny  to guide its progressive alignment procedure, or can compute one from the unaligned input sequences. for each alignment task, the full combination of parameters, and the structure model if used, are provided in the output so that the analyses can easily be repeated or recreated with the stand-alone prank program.

the size of alignment tasks is limited to  <dig> gb of memory and  <dig> hours of run time. the size and type of data as well as the parameter settings affect the computation time. the prank algorithm has time complexity o where a, n and l are the size of the character alphabet  and the number and length of sequences, respectively.  the alignment of  <dig> dna sequences of ~ <dig> nucleotides typically takes 1- <dig>  minutes depending on the options chosen; that of  <dig> dna sequences of similar length  <dig> - <dig> minutes. the translation of dna sequences to amino acids or codons decreases sequence lengths but increases alphabet size, requiring computation times similar to  or significantly longer than  those for untranslated dna sequences. by default, webprank uses alignment anchoring to accelerate analyses of long dna sequences.

significant proportions of the longer time estimates for the alignment tasks are spent computing the guide trees and, if a user-defined phylogeny is provided, even larger data sets can be aligned in a reasonable time. with a pre-defined guide tree, the alignment of  <dig> simulated dna sequences of ~ <dig> nucleotides could be performed in  <dig> minutes; however, the alignment matrix was  <dig> columns wide  and so sparse that it was largely unreadable . in practice webprank is able to align and display  almost any set of sequences for which subsequent alignment browsing is feasible, and many realistic sets for which it is not.

the webprank-generated alignments can be downloaded in several alignment formats widely used in evolutionary analyses. the webprank server supports its own hsaml format, as well as fasta  <cit> , phylip   <cit> , paml  <cit>  and nexus  <cit>  formats. the xml-based hsaml format is the only one we know that can contain the full information of the alignment process and allows for advanced analysis and post-processing of the results with the integrated webprank browser or using the stand-alone prankster alignment browser. the format can also be easily parsed using external software, for example the xml library for the r statistics package  <cit>  or the libxml module for the perl programming language, allowing for complex downstream analyses of the alignment data. of the classical alignment formats, the nexus format also allows incorporation of some additional information in the alignment files: webprank extends alignments exported in nexus format to include the alignment guide tree and the column-wise minimum posterior reliability scores or the excluded alignment sites  using the appropriate commands in the 'trees', 'assumptions' and 'paup' blocks, respectively.

before downloading the results, the sequence alignments can be visualised and post-processed using a powerful, integrated alignment browser . a distinctive feature of the webprank browser is the display of an interactive cladogram, representing the alignment guide tree, next to the sequences. the tree has two purposes. first, we believe that evolutionary sequence alignment should always be studied in the context of the tree relating the sequences. the fact that the guide tree used for the alignment may not be fully correct does not change this, as the tree has nevertheless been used for the alignment and the solution depends on it. rather than hiding the tree, showing it alongside the alignment helps to identify possible errors and suggest actions to correct them. second, the prank alignments contain additional information associated with the tree nodes and the easiest way to represent and allow browsing this information is in the context of the tree.

the interactive webprank browser uses advanced features of javascript and requires a modern web browser such as firefox version 3+, safari 4+ or chrome to work properly. the processing of sequences can be computationally heavy, however, and the browser may open with a small delay. the delay is not significant for small alignments and should be bearable for medium-sized alignments . for larger alignments , the webprank server provides an alternative, light-weight browser that allows basic horizontal and vertical scrolling of the alignment matrices. alternatively, the full results can be downloaded in hsaml format and analysed locally using the stand-alone prankster program, or the aligned sequences exported in simpler formats for visualisation with other browser software.

the prank algorithm can compute column-wise reliability scores for the alignment and, when a structure model is used, provide posterior probabilities for the alignment sites evolving under different evolutionary processes  <cit> . the reliability and probability values are generated by the pair-wise alignments at the different levels of the progressive alignment and are thus associated with the internal nodes of the tree. the information is displayed below the alignment as probability tracks . the tracks for different stages of the alignment can be selected by clicking the corresponding nodes in the tree or using the drop-down menu.

the prank alignment reliability scores provide an objective measure to remove less reliably aligned columns from the data and the webprank browser includes advanced functionality to select sets of alignment sites using these scores. the webprank filtering is based on the track currently displayed; repeated steps of filtering are accepted and, for convenience, an additional track showing the minimum reliability score across all pair-wise alignments is provided. the current selection of alignment sites is indicated in the browser window using different colouring  and the subset of sites currently selected can be exported in various different alignment formats for the downstream analyses. unlike other export formats that permanently remove unreliable columns from the data, the files saved in nexus format keep the full alignment data and include additional commands excluding a set of sites in the downstream analysis.

as a part of the alignment process, the prank algorithm reconstructs the sequence history with inferred ancestral nodes. the inferred ancestral sequences, with phylogenetically realistic patterns of character presence vs. absence, can be displayed in the alignment browser or downloaded for further analyses. ancestral sequences can also be inferred from existing alignments. one should note, however, that non-phylogeny-aware alignment algorithms tend to infer excess deletions  <cit>  and inference from systematically incorrect alignments typically produces unrealistically long ancestral sequences. in addition to ancestral sequences, structure predictions and alignment reliability scores can also be computed for existing alignments . this allows application of some of the advanced features of the prank alignment package to other alignments, e.g. for objectively removing noise from the alignment data.

the webprank alignment browser is not limited to the display of de novo alignments: it can be used for visualisation and browsing of any fasta- or hsaml-formatted alignment, although the full functionality of the browser requires the richer hsaml format. by storing webprank-generated alignments in this format, the user can later re-load the results to the webprank browser for visualisation and post-processing, and thus perform all alignment-related activity for small sequence analysis projects using a standard web browser only.

CONCLUSIONS
the webprank server incorporates phylogeny-aware multiple sequence alignment, visualisation and post-processing. it widens the user base of phylogeny-aware multiple sequence alignment, which can lead to superior inference of character homology and downstream evolutionary analyses. we encourage the consideration of evolutionary sequence alignment in the context of the tree relating the sequences, and the use of enhanced alignment formats such as hsaml for the exchange of linked phylogenetic and alignment information. our various alignment-related software and format definitions are all available via http://www.ebi.ac.uk/goldman-srv/prank as well as at the urls listed above.

availability and requirements
project name: webprank

project home page: http://www.ebi.ac.uk/goldman-srv/webprank/

operating systems: platform independent 

programming language: c++ , perl/cgi/soap ,

html/javascript 

licence: gnu gpl 

any restrictions to use by non-academics: none

authors' contributions
ng initiated the project and participated in its design, testing and coordination. al implemented the ideas, wrote the software and drafted the manuscript. both authors reviewed and approved the final manuscript.

supplementary material
additional file 1
the document contains a figure illustrating the difficulty of browsing alignments of many sequences, even when they are closely related, and text explaining this figure.

click here for file

 acknowledgements
we thank simon whelan for the help with dna substitution models, tim massingham for his critical comments and alternative ideas for visualising sequences, nicolas rodriguez for the formal definition of hsaml format and the ebi external services team for setting up the web service. this work was supported by the wellcome trust .
