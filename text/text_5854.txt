BACKGROUND
one of the major issues in genomics is the genome wide mapping of transcription factor binding sites in order to study their function at the scale of the genome. the chromatin immunoprecipitation  technique uses antibodies that are specific for a transcription factor or a chromatin modification, to isolate the dna to which this factor or modified histone is bound in a cell at a given time. the recent appearance of several genome wide analysis techniques, where chip is either followed by dna microarray analysis  or coupled to high throughput sequencing , made the genome wide mapping of dna bound factors technically possible. however, these analyses generate tremendous amounts of genomic location data in the form of one-dimensional series of signals.

recently, efforts have been made to develop academic software to pre-analyse these datasets, , in order to locate the signal peaks that correspond to functional elements, such as promoters, enhancers, repressors or insulators. however, once these datasets are cleaned and the significant signals are selected, biologists lack user-friendly tools to search for the biological relevance of the resulting binding site genomic positions.

implementation
the web interface of gpat is programmed using python   <cit>  running on an apache  <cit>  www server and forms an interactive layer between the user and the underlying processing applications. in order to increase the speed of data recovery, all the data are stored in a local postgresql  database  <cit> . the background processes are programmed in python and take advantage of the pygresql  <cit>  module to efficiently connect to the postgresql database. the class diagram describing the gpat object oriented python code is displayed in additional file 1: gpat class diagram.

RESULTS
comparison with existing tools
existing on-line tools, such as the ucsc genome browser  <cit> , allow the user to display so-called "custom tracks" and to browse locally defined genomic positions, thus facilitating the manual retrieval of biological information over hundreds of annotation tracks. however, the browser does not allow the batch processing of large numbers of positions. complementary to this approach, studies based on genome wide analyses require a tool to systematically annotate data in a form suitable for further statistical analysis. to address this problem, several applications have been released recently.

galaxy  <cit>  is a framework giving access to popular sources of data, such as the ucsc table browser  <cit>  or biomart at ensembl  <cit> , using a variety of integrated tools. although very powerful for certain applications, it remains too general for our purposes. in particular, the "fetch the closest feature" module in the "operate on genomic intervals" section that allows the annotation of genomic positions with gene identifiers has some limitations compared to a more specialized tool, such as gpat . as an example, the "fetch the closest feature" module searches for the closest feature without distance limitations, and often matches very distant genes with questionable biological relevance. in addition, the output is limited to a plain text file corresponding to the concatenation of the input files with restricted information content . moreover, the direct cross-linking of the identified gene list with transcriptomic datasets is not directly possible.

ceas  <cit>  is a chip on chip analysis pipeline available via a web server, which includes a basic genomic position annotation function. one of the major limitations of ceas is that the annotation search is completely automated and the user cannot adjust the default options. for example, the search window around the submitted position is fixed at  <dig> bp. this means that the software is not suitable for studies involving factors, which are known to bind enhancer regions located outside of the proximal promoter regions. furthermore, since the full analysis is done at each dataset submission, the analysis time rapidly increases for large datasets .

cisgenome  <cit>  is a powerful high throughput chip analysis package proposing a gene annotation function. however, the user has to perform a full installation process and must store the annotation files on a local computer  in order to annotate his results. furthermore, cisgenome does not provide direct access to other annotations and experimental data , which is a necessary step in the extraction of biological meaning from high throughput data.

gpat description
gpat allows users to analyse large batches of genomic positions and to retrieve genomic annotations around these positions. briefly, the user submits a flat file containing the genomic positions and then selects the annotation search options and the display options . the annotated results can then be browsed or downloaded for subsequent analyses.

the input format is based on the gff standard file format  <cit> . mouse and human data produced by the two latest ucsc genome assembly releases  are currently supported.

for each submitted genomic position, gpat calculates a mean value from the two boundary positions and compares this value to the gene annotation positions . gpat has three different gene annotation search modes corresponding to different biological questions .

 <dig>  the "direct search" mode determines whether the submitted positions are detected inside a transcription unit. it was developed to allow searches for a binding site inside the transcription units .

 <dig>  in the "window search" mode, a user-defined window is calculated around the submitted positions. then gpat searches gene annotations located within this window. it was developed for datasets where no particular binding profile is expected or known .

 <dig>  the "promoter search" mode uses the same window as the "window search" mode, but tests whether the transcription start site  of a transcription unit is found within this window. it was developed for datasets, where a binding in the neighbourhood of the tss is expected .

regardless of the search mode chosen by the user, gpat provides a complete localisation report relative to the matched gene annotation . furthermore, when multiple gene matches are found, the user can choose to retrieve either the closest annotation only or all the matched annotations.

biologists are often interested in the expression status of the genes neighbouring the submitted genomic locations. therefore, the gpat software also gives access to the corresponding gene expression levels in several commonly used model cell lines as provided by the gnf symatlas  <cit>  and stembase  <cit>  . furthermore, users can upload their own transcriptomic data during the analysis process, thus allowing the retrieval of gene expression levels for datasets generated under various experimental conditions.

several other genomic features, such as those extracted from the cytogenetic mapping  <cit>  or the position relative to the encode regions  <cit>  can also be retrieved.

gpat displays the results as a table containing the annotated positions hyperlinked to the data source . a direct hyperlink to the ucsc genome browser  <cit>  is provided to allow the user to browse other genomic features in the case of a successful match. in addition, the full set of results can be downloaded as a tabulated flat file and easily imported in any spreadsheet software for further analysis.

finally, an additional analysis step allows the user to create a report file, containing summary information, in addition to the matched gene list. this option calculates the global distribution profile of the matched genomic positions as compared to the tsss of the corresponding genes using parameters set by the user . statistical values for the expression data of the corresponding genes are also calculated .

use of gpat â€“ example:
the tata binding protein  is a component of a number of complexes, including the tfiid complex involved in the rna polymerase ii  general transcription machinery. surprisingly, it has been shown that pol ii transcription can occur in the absence of tbp  <cit> . however, the molecular mechanism leading to tbp-free transcription is still poorly understood. one of the strategies for studying this mechanism is to isolate target genes where pol ii transcription can be detected in the absence of tbp.

we tested gpat using a promoter dna tiling array dataset generated by hybridization of dna , which was chiped using specific antibodies against pol ii, tbp and gst . for each experiment, three slides  representing approximately one-third of the most characterised promoters of the gene were hybridized . after intra-array lowess normalization, peaks corresponding to the factor binding sites were detected using agilent chip analytics .

a flat file containing the genomic positions generated by this pre-analysis was input to gpat. the promoter search mode using a half window size of  <dig> bp successfully retrieved the genes in the neighbourhood of the factor binding sites in less than a minute. this allowed us to build a list of genes potentially regulated by tbp and to obtain information about the presence of the pol ii at these sites . furthermore, using the distance to the 5' end of the matched gene transcripts provided in the gpat output, the global distribution of the binding sites of tbp and pol ii relative to the 5' end could be computed . this shows, as expected, that the majority of the tbp and pol ii  binding sites are located within +/-  <dig> kb of the tss. this result is in agreement with observations made at the single gene scale and demonstrates the accuracy of gpat results.

finally, the output of gpat allowed us to attribute an expression level for each of the differently regulated gene categories showing that the genes for which a co-occupancy of tbp and pol ii was detected have the strongest expression levels . this correlation gives a high level of confidence in the list of binding sites established by our analysis. furthermore, by combining these data, we obtained a list of expressed genes, for which pol ii, but not tbp is present . these genes can be used as a model for further analysis of the mechanism of tbp-free transcription initiation. finally, the group of genes for which tbp, but not pol ii is bound at the promoter shows low expression levels, implying that there are genes where tbp is bound, but pol ii, is not or is poorly recruited.

in conclusion, these results demonstrate the efficiency of gpat for the extraction of biological meaning from large genomic position datasets.

discussion
the current version of gpat improves the bioinformatics analysis of chip on chip or chip-seq data. it considerably speeds up and facilitates the steps between data pre-analysis and the biological interpretation of the data. notably, the amplitude in the stringency of the annotation search provided by the three different research modes should meet the requirements of most of the biological questions addressed. furthermore, the full localisation report  will help the biologist to easily understand the binding pattern of his studied factors. finally, the connection of the binding sites and the gene expression data is an essential resource at different steps of the analysis. firstly, it provides a supplementary filtering step to distinguish between relevant and background signals. secondly, it adds another layer of complexity to the data interpretation, providing insight into the regulation processes taking place at particular genomic locations.

currently, the investigation process of large scale chip data is complicated and involves multiple analysis steps. in order to make this technology available for laboratories without access to bioinformatics expertise, considerable efforts are needed to facilitate the data analysis . to address this issue, gpat was designed to improve the steps following data pre-analysis . however, several improvements remain to be implemented. gpat currently supports the mouse and human genomes, but adding other model organisms for which genome wide chip data are available  would make the impact of gpat wider and could be easily implemented in the future.

furthermore, gpat provides expression data for several cell lines. one of the recent improvements of the chip method allows the use of tissues as a starting material. since the gnf dataset was also generated for mouse tissues, these datasets could be easily integrated into the gpat interface.

CONCLUSIONS
gpat provides a quick, convenient and flexible way to annotate large sets of genomic positions obtained after pre-analysis of chip on chip, chip-seq or other high throughput sequencing based techniques. thanks to the different annotation and experimental data provided , gpat facilitates the interpretation of genome wide datasets. we hope that gpat will be of great help to molecular biologists who wish to analyse large-scale genomic data.

availability and requirements
project home page 

source code

the gpat source code can be freely downloaded from: 

operating systems

for use: standard www browser

programming language

python, sql, javascript

licence

gnu general public license v <dig> 

abbreviations
chip chip: chromatin immunoprecipitation followed by hybridation on dna microarray; chip-seq: chromatin immunoprecipitation coupled to high throughput sequencing; chip: chromatin immunoprecipitation; gpat: genomic position annotation tool; rna pol ii: rna polymerase ii; tbp: tata binding protein; tss: transcription start site

authors' contributions
ak conceived and implemented gpat. mf generated the chip on chip data. ak did the bioinformatics analysis of the chip on chip data. ak and lt wrote the manuscript.

supplementary material
additional file 1
gpat class diagram. class diagram describing the python object oriented architecture of the gpat software.

click here for file

 acknowledgements
this work was funded by the integrated european transcriptome, regulome & cellular commitment consorsium  project. ak is recipient of a fellowship from the inserm and the alsace region.

the authors thank the organisers and teachers of the "informatics in biology" course of the pasteur institute  where gpat was designed and implemented; m. vandenbogaert and the igbmc bioinformatics platform  for technical support; c. lethondal, c. saveanu for critical reading of the manuscript; j. thompson for advices and helpful comments on the manuscript.
