BACKGROUND
one of the changes associated with the advances in genomic and systems biology is that biologists are no longer limited to studying one gene at a time. at the conceptual level, this is necessary because functionally-related genes, or modules, create the natural bridge from single genes to the complexity of the entire organism  <cit> . in practice, biologists study groups of genes found through various ways: for instance, the genes differentially expressed under different conditions in dna microarray studies; the genes sharing similar expression profiles across a large number of conditions; and the genes showing similar patterns of evolution  <cit> .

an essential component of these studies is the interpretation of a set of genes: whether there is any common functionality among these genes. typically, this is formulated as the problem of identifying concepts overrepresented in a given list of genes, or simply overrepresentation analysis. this problem is commonly addressed by using gene ontology   <cit> . in go system, one gene is associated with a number of terms that are organized in a directed acyclic graph. a statistical test can then be performed to assess the significance of the association of a term with the gene set being analyzed. the standard test for this purpose is hypergeometric test, coupled with some correction to account for multiple hypothesis testing  <cit> .

the main limitation of the go-based methods is their dependence on the existing annotations. the process of annotating genes with some controlled vocabulary requires the efforts of biologist curators, who need to read and digest a large amount of textual information. as a result, it is very difficult to keep up with the rapidly growing literature in almost all biological areas. furthermore, the curators are limited by the scopes of the existing vocabularies or ontologies. for example, go coverage of certain biological domains such as diseases and animal behavior, is very inadequate in comparison with its coverage of molecular functions.

the ultimate source of information lies in literature, thus techniques that automatically mine information from text may be able to overcome limitations of overrepresentation analysis based on manually curated ontology. text mining techniques have found a number of successful applications in the biological domain, for instance, the identification of gene names, and the extraction of protein-protein interactions  <cit> . text mining has also been applied to analyze gene sets obtained from microarray experiments. a large number of methods attempted to summarize gene functions and reveal gene similarities using text mining. some of the methods in this category are: the literature profiling method  <cit> , neighbor divergence method  <cit> , latent semantic indexing  <cit> , conceptmaker  <cit> , non-negative matrix factorization   <cit>  and anni  <cit> . the idea is that the terms associated with a gene can be viewed as some kind of text "profile" of this gene, similar to the expression profile measured in microarray experiments. therefore, the functions and relationship among genes can be explored using the same techniques in expression data analysis, such as cluster analysis for grouping similar genes. this purpose is quite different from ours, which is to explicitly extract overrepresented concepts in gene lists. as such, none of these methods provides a statistical test of significance of concepts, a crucial component of overrepresentation analysis.

it is possible to apply the text mining techniques for the overrepresentation analysis of gene lists. the idea is basically parallel to go-based analysis: terms co-occurred with many genes in the list are likely to reflect the commonalities of the gene list. geisha  <cit>  measures the importance of a term  with respect to a given gene group by its overrepresentation in the document set of this gene group versus some reference group. the txtgate system  <cit>  creates a "profile" of a gene from the literature about this gene, defining profile as a weighted vector of associated terms. the profiles of all genes in a set will be averaged and the terms with high weights can thus be identified. the program mesher  <cit>  extracts mesh terms from medline documents of a gene and converts the document set of a gene into a a list of associated mesh terms. then the standard fisher's exact test can be applied to a gene set. the milano system  <cit>  could help biologists analyze a gene set by retrieving documents where the gene names and some user-defined terms co-occur. recently, leong and kipling developed a new system, pakora, that is an extension of the standard hypergeometric test. pakora is motivated by the need of addressing annotation bias, that is, some genes are associated with much more documents than other genes simply because of their biological importance and may bias the statistical tests  <cit> .

the statistical treatment of all these methods are somewhat inadequate. as the authors noted in their paper, the geisha method fails to handle the representational bias of genes in literature. the method pools documents from all genes in a group together, as a result, if some gene has a very large number of associated documents, this gene will dominate the document set of this group and thus strongly bias the result. this is certainly a problem as our goal is to uncover common themes in the given gene list, thus we should favor terms that are associated with more genes. in txtgate, mesher and pakora, the important information of how often a term co-occurs with a gene is ignored. instead, if a term co-occurs with a gene, it will be considered as an association and will be used for the statistical test of overrepresentation. this is highly undesirable because co-occurrence alone is not a very reliable indicator of semantics, so it is important to attach some confidence value to the association between terms and genes. there is some other statistical bias in the txtgate approach of averaging gene profiles, which is explained in  <cit> . milano is mainly a system for retrieving and navigating articles about gene sets, but does not provide any statistical test for important terms.

in this paper, we proposed a new method based on a rigorous statistical model to identify overrepresented concepts in gene lists from free-text. we implemented a system that allows users to perform the proposed analysis efficiently. furthermore, our program is embedded into beespace http://www.beespace.uiuc.edu/, an integrated environment for biomedical literature retrieval and mining, to take advantage of its many features. we evaluated our program, genelist analyzer , on several gene lists, including one simple list commonly used for evaluation and two large lists derived from our microarry experiments of social behavior of honey bees. we compared our results with the standard go term enrichment analysis and found that analyzer is capable of recovering the important themes in go analysis and providing additional information when go analysis is not very informative. in addition, we compared analyzer with two other methods that are closest to ours, geisha and pakora, and demonstrated that our method is statistically superior and offers additional features that are beneficial in practice.

RESULTS
genelist analyzer: a system for identifying important concepts in gene lists
we developed a system, genelist analyzer, for experimental biologists to conduct overrepresentation analysis on gene lists. the program, genelist analyzer, can be accessed at: http://workerbee.igb.uiuc.edu:8080/beespace/search.jsp. our system uses the textual terms  from literature, thus overcoming the limitations of controlled vocabularies such as go. a conceptual overview of our system is shown in figure  <dig>  we created organism-specific document collection from medline. the retrieval of documents for a given gene is based on the mapping from gene identifiers to synonyms, as curated in the entrez gene database  <cit> . our novel statistical method is used to identify terms that are most likely to represent the common features of the input gene list. the program outputs the most enriched terms and their significance values . further support is provided to allow users to examine the gene-term associations and navigate the literature. the details of how each step is implemented are described in methods.

below, we briefly describe the general analysis procedure with our system . in the analyzer interface, a user could choose an organism, a document collection , and paste the gene list he wants to investigate. the result page lists the most overrepresented terms, their lrt scores and the estimated percentage of genes related to the terms . if a term is recognized as a gene name, it will be highlighted and linked to the gene summarizer program in beespace  <cit> , which is able to automatically generate summaries of genes from literature text, covering aspects such as gene expression patterns and genetic interactions. the user has a flexible control of the results: he could choose what to display  and how to sort them. analzyer allows a user to select terms of interest and explore the genes related to the selected terms. this is accomplished by first selecting some terms of interest in the result page, and then analyzing the gene-term association matrix . the matrix will show the counts of chosen terms in the documents of each gene . in particular, the genes are ranked by their relevance to the user-selected terms, using the standard tf-idf scoring method in information retrieval. if the input gene list is large and many significant terms are identified, this gene-term matrix will be a very easy way for one to focus on a subset of genes and terms. if the count for a gene-term pair is not zero, the user can follow the link and will be redirected to the documents that mention both the term and the gene. this stands in contrast with go-based analysis, where the lists of overrepresented terms are the end results. it is not straightforward to retrieve documents about go terms as typically they do not appear in text in their exact forms. in our system, the exploration of documents could serve as a starting point for further analysis. we also note that for every concept, our program will estimate the proportion of genes in the input that are associated with this concept, the weight of the foreground distribution under our mixture model . thus to further guard against the representational bias, a user could simply ignore the concepts that are statistical significant, but have low weights . finally, we note that analyzer is highly efficient. it takes less than three minutes to execute a query consisting of  <dig> genes in the document collection of fruit fly, and small queries typically take less than a minute.

analyzer addresses the representational bias
we show that analyzer solves the representational bias problem by comparison with geisha. the problem is defined as the bias of results toward terms from well-studied genes which tend to have a large supporting literature and dominate the relevant document set. it is easy to appreciate the importance of this problem when doing text-based gene list analysis: for example, the query of gene "p53" returns  <dig>  abstracts in pubmed search; while a large proportion of genes in all model organisms have no associated abstracts.

we evaluated our program on the gene cluster k from the yeast microarray data of cell-cycle in  <cit> . this is also one example used in  <cit> . in this cluster of  <dig> genes,  <dig> are genes in respiratory complex, one  is a membrane channel and the last two are a metabolic enzymes. in their paper, the authors of geisha noted that vdac was an extensively-studied gene and dominated the results. a large portion of the top terms were those about vdac, including: "voltage-dependent", "pores", and "channel"  <cit> . our experimentation confirms the representational bias: vdac returns  <dig> documents in the yeast collection, while the second most represented gene returns only  <dig> documents. however, none of the above vdac associated terms appear in the top  <dig> terms identified by our program. our analysis, instead, produces many terms related to respiration in the top  <dig> terms, such as: "electron transport", "respiratory", "mitochondrial membrane", "oxidoreductase", "succinate dehydrogenase", "ubiquinone", "cytochrome", etc . other terms  are often related to respiration, sometimes indirectly, and many of them are names of related genes. based on this example, we observe that our program does not suffer from the gene representational bias problem that affects the performance of a text-mining program for gene lists, if not handled properly.

one possible concern with the overrepresentation analysis is that it may identify false conceptual themes simply by chance. it is generally difficult to quantify the precision of this analysis as whether a concept is related to a gene is somewhat subjective, so we instead analyze a list of genes randomly sampled from yeast genome  and see if the results of analyzer contain misleading themes. interestingly, we did find a set of concepts possibly related to heat shock, such as "hsp gene" and "stress response". further inspecting the gene-concept matrix allows us to identify the related genes, hsp <dig>  cne <dig>  uga <dig>  stu <dig> and rtg <dig> . indeed, both hsp <dig> and cne <dig> are chaperons that respond to heat shock, and other genes are all related in some way. for instance, we find two articles using our system that supports the relationship between rtg <dig> and stress response  <cit> . the results are in fact not surprising, retrospectively, given that hundreds of genes are related to stress response in yeast  <cit> . since no other conceptual themes were identified by analyzer besides the stress-related one, it seems that analyzer does not provide false, misleading findings. instead, analyzer was able to suggest subtle and unexpected concepts that are biologically meaningful in this example.

comparison with go-based enrichment analysis on a honey bee gene list
we next analyzed the gene lists derived microarray experiments on honey bee social behavior. in a honey bee colony, the worker bees carry out different tasks for the colony depending on their age. this age dependent performance of tasks is called behavioral maturation. younger bees stay in the hive and take care of feeding the larvae, these workers are called nurses. once they get older, they transition to collecting food outside the colony and are called foragers. genome-wide analyses of brain gene expression using microarrays have been carried out to understand the molecular events that accompany behavioral maturation in the western honey bee apis mellifera and other species  <cit> . we performed analysis of genes identified in these datasets with the analyzer in order to evaluate its performance, and compared the results with those from go-based analysis and from other text-mining systems. we use the drosophila orthologs of honey bee genes, as the annotation  and the literature about the fly orthologous genes are the standard information used by bee biologists most of the time. similarly we used the drosophila document collection as our background. the particular implementation of go-based analysis we chose is gotoolbox  <cit> .

in the first experiment, we analyzed the list of genes that showed species differences in regulation during behavioral maturation  <cit> . table  <dig> shows the comparison between biological process terms that were found to be enriched by gotoolbox and the first  <dig> terms retrieved by genelist analyzer. we manually group these terms based on relatedness and/or commonality of genes underlying these terms and show the related terms from the analyzer results. expert biologists who are the intended users of analyzer would be able to do this easily. we see that most of the go terms had corresponding terms retrieved by analyzer. this is an important validation of analyzer, as it is able to recover the important conceptual themes from plain text without involving manual annotation of genes. the analyzer also retrieved terms that did not have corresponding matches in go because go lacks enough behavior annotations. the most notable of these was the term diapause, which is the term for insect hibernation during winter. an analysis of this term and the associated genes revealed abstracts that show heatshock proteins being regulated in diapausing insects  <cit> .

analyzer provides novel insights on a honey bee gene list
in our second example of honey bee gene analysis, we will illustrate a strength of analyzer in bringing out associations that go enrichment analysis could miss. treatment of nurses with hormone analogs like methoprene and chemicals such as manganese and cgmp results in precocious foraging  <cit> . we next applied analyzer on the set of genes up-regulated in the brain by methoprene treatment. this set has  <dig> genes out of which  <dig> have orthologs in drosophila melangoster and match at least one document in medline. go-based analysis for this gene set did not suggest any statistically significant terms. in contrast, analyzer identified a few hundred significant terms. we present the top  <dig> terms in table  <dig> . manual inspection of these terms immediately revealed a myosin-related theme: light chain, myosin heavy, heavy chain, thick filament, flight muscle, myosin light, muscle myosin and myofibril . inspection beyond the top  <dig> terms revealed more terms in this category: nonmuscle , mhc gene , drosophila myosin , nonmuscle myosin , myosin ii , flightin , sarcomere  .

to further explore the significance of this semantic theme, we extracted genes related to four chosen terms using our system. this generated a gene-term association matrix . we verified that the top five genes are indeed related to myosin: mhc  and prm are part of myosin complex, strn-mlck, jar and sls bind to myosin light chain or regulate its activity. http://www.flybase.org. myosin molecules form intracellular molecular motors that are part of the cytoskeleton. molecular motors are known to be important for neural development  <cit> , through processes such as cellular migration and transport of molecules within the cell  <cit> . this is significant because it is well known that the transition from nursing behavior to foraging behavior is accompanied by structural changes in the brain  <cit> , which may involve these processes. it is likely that methoprene treatment triggers changes in the brain that accompany the behavioral transition from nursing to foraging. thus genelist analyzer performed better than go analysis in this example by uncovering an interesting biological insight that could be used to enhance our understanding of molecular underpinnings of behavioral maturation.

comparison with other text mining tools
having demonstrated that text mining can complement go-based analysis, we want to test if other text mining systems for overrepresentation analysis are able to provide similar benefits. since geisha is only implemented for e. coli and yeast  <cit> , we tested the program that is closest to our goal and methodology, pakora  <cit> . no significant terms can be identified for the second honey bee gene list , when either bonferroni correction  or fdr is used to adjust the p values. we thus use  <dig>  as the cutoff for raw p values . this leads to  <dig> overrepresented words shown in table  <dig>  we found that the terms generated by pakora are much less specific, for example, top results include words such as, type, well and five. there are three myosin related words: myosin, myobibril and sacromere. however, given this much smaller list of terms and a much looser threshold of p values, it is unclear whether this theme is really relevant to the query gene list. the main reason for the difference between analyzer and pakora in their abilities of detecting statistically significant terms, we suspect, is that the word count information is ignored in pakora. the association between a word and a gene is binary, instead of numerical, as done in our method. the statistical power is likely to be significantly reduced. two other differences exist between pakora and genelist analyzer. first, pakora is completely based on words while analzyer allows phrases. we found that this makes an important practical difference: many informative terms are phrases, for instance, light chain, nonmuscle myosin. second, pakora does not offer a simple way to get back the subset of genes related to interested terms. we found that without this feature, it is difficult to interpret the results. in this example, being able to identify five genes related to the myosin theme is crucial for us to validate our findings and points out a way of further analysis .

next, we compare analyzer with another text mining tool recently developed, sent  <cit> . sent can also be used for analyzing gene lists from literature, though based on a somewhat different philosophy from analyzer and pakora. simply speaking, the gene-term matrix is constructed from the literature text according to the co-occurrence between genes and terms. then genes are grouped according to the similarity of the terms they are associated with , and for each group, the most relevant terms are identified as the "semantic feature" of that group. technically, gene grouping and semantic feature identification are performed via non-negative matrix factorization . the general idea of grouping genes based on their literature profiles has been implemented by several computational tools for gene list analysis and we think sent is a representative of these methods. we note that our goal is finding the overrepresented concepts in a gene list, regardless of how genes are grouped, and is a direct extension of the commonly used go-based enrichment analysis. sent and other tools such as anni are not designed for this purpose. nevertheless, we will perform some comparative analysis to assess the relative strength and weakness of the two strategies.

since sent does not support fruit fly, we used the same yeast gene list discussed before as the test case. we ran sent on this list of  <dig> genes, setting the number of factors at five . the resulting five gene groups and their characteristic terms are listed in additional file  <dig> table s <dig>  we note that while analyzer detects the major theme of electron transport chain and respiration , sent results have a much more refined structure. for example, group  <dig> consists of four subunits of the enzyme succinate dehydrogenase , and group  <dig> contains only a singe gene ach <dig>  which has a somewhat different function from other genes. by doing so, however, the semantic theme that connects the majority of genes in the list may become less obvious. for instance, even though succinate dehydrogenase participates in electron transport chain, the semantic feature of group  <dig> does not have this or closely-related concept; instead, the characteristic terms are those that capture specific details of succinate dehydrogenase . we suspect that this may be a general feature of the clustering-based strategy for gene list analysis: the methods are tuned for finding the internal structure of the gene list, but not for revealing the common conceptual theme unifying the genes. at the practical side, we note that sent does not offer a simple way to examine the relationship between genes and specific concepts of interest. for example, the semantic feature of group  <dig> contains a term "life span" and a user may be interested in exploring exactly which genes are related to this concept and what are the supporting documents. however, sent does not show specific genes related to a user-selected concept. and the documents it extracts for a group is based on the relevance of a document to the semantic feature of the entire group, which in this case is dominated by terms such as nadh, mitochondria, that are only remotely related to life span. in summary, we find that sent is optimized for the task of gene clustering, while analyzer is more likely to identify important concepts capturing the commonality of genes, and is more flexible in supporting the exploration of gene-concept relationship.

discussion and 
CONCLUSIONS
in this paper, we present a new method for automatically extracting conceptual themes, in the form of overrepresented terms, in a set of genes from literature text. compared with existing methods for annotating gene lists, our system provides several important benefits:  our analysis is based on free text, using both words and phrases as conceptual units, thus overcomes the limitation of fixed ontology.  we developed a novel statistical method that is more rigorous and robust than earlier approaches.  our system supports the interactive analysis of retrieving genes from a subset of terms and literature navigation.  by linking with the integrative system, beespace, we offer unique software services, most notably, the customization of document collections and text summarization of genes through gene summarizer. in our experimentation, we found that our method could reasonably summarize the literature information of gene lists, sometimes providing useful information missing from the standard go-based enrichment analysis. our comparison with other text mining systems with similar purpose showed that our system is statistically more rigorous, and offers more useful features in practice. we anticipate that our system will be particularly useful for two situations: when the analysis based on fixed ontology is uninformative because of the lack of coverage of the ontology; and when a user needs to perform more in-depth investigation of the primary literature, because in general, the ontology may not be directly associated to the literature text, as is the case for go.

one main issue with our current system is the procedure of retrieving documents for genes. our method is based on simple string matching of text words and gene names. the possible ambiguity of gene names  is not explicitly handled. this does not seem to be a very serious problem for detecting overrepresented concepts, where the results are based on statistical patterns, thus may be relatively insensitive to individual cases of ambiguity. however, we found that name ambiguity does affect the downstream analysis of extracting genes related to terms and the associated literature. since gene name ambiguity is a general problem affecting many literature mining tasks, one of our ongoing projects is to develop a disambiguation method as part of the beespace infrastructure  <cit> .

another issue with the current system is the presence of a significant number of non-informative terms often in the results, even if stringent threshold is used for choosing terms. this seems to be an inherent weakness of text-mining analysis, comparing with go-based analysis. by testing all possible terms in free text, we avoid the constraint posed by defined ontologies such as go, but also introduce many potential non-informative terms and some of which may happen to be statistically significant. indeed, we noticed that the other tools we tested, pakora and sent, have the same problem . there does not seem to be a simple solution of this problem without sacrificing the completeness of literature text . in practice, we find this sometimes inconvenient, but does not remove the main patterns in the results. most often, a biologist user would look for a set of conceptually coherent terms, as we did in this work, and this conceptual theme, as a whole, is a much more robust signal of semantic relationship of genes.

there are a few remaining issues. firstly, our procedure of document retrieval for genes is quite simple . we are currently developing a disambiguation method for gene names extending the published work  <cit> . secondly, tagging semantic categories of terms identified by annotator would make the results easier to read and analyze, for example, a user could choose to only look at terms related to a certain aspect thus eliminating many significant but uninteresting terms. possibilities are mesh and ontologies maintained at http://obofoundry.org/. finally, we will work closely with biologists to test the effectiveness of our system for real-life discoveries. after all, to aid the interpretation of results from genomic experiments for biologists is our ultimate goal.

we discussed the relevance of the representation bias of genes in literature to our problem, and our comparison with an existing method suggested that our method is free from the effect of this bias, at least to a large extent. we did not directly compare our method with other recent systems including txtgate, mesher and anni, because some advantages of our method are obvious, such as weighting the literature evidence of gene-term association; and because these systems use a controlled vocabulary  instead of general words and phrases. we pointed out though, our statistical methodology is independent of the choice of terms.

