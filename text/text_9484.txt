BACKGROUND
chip followed by high-throughput sequencing  and chip followed by genome tiling array analysis  have become standard high-throughput technologies for genome-wide identification of dna-binding protein target sites  <cit> . a number of algorithms and tools have been developed for analyzing the large datasets generated by chip-chip  and chip-seq experiments  <cit> . the output from such algorithms is typically presented as a list of binding sites  that are significantly enriched in the chip sample compared to the control sample. the identified binding sites are usually converted to a format, such as bed or wiggle , that can be uploaded to the ucsc genome browser, an open-access, web-based, up-to-date source for genome sequence data integrated with a large collection of related annotations  <cit> . this resource allows the user to build a custom annotation track to view the proximity of the dna-binding sites to various genomic features such as genes, exons, transcription start sites and conserved elements. however, searching the ucsc genome browser can be a daunting task for the user, particularly if there are a large number of binding sites or the binding sites are distributed widely across the genome.

several useful web applications have been developed for managing and annotating chip-chip data  <cit>  and chip-seq data  <cit> . however, there is a need for technology platform-independent and genome-independent batch annotation tools. here we describe a bioconductor package called chippeakanno that facilitates batch annotation, using a variety of annotation sources, of binding sites identified by any technologies which result in large number of enriched genomic regions, such as chip- chip, chip-seq and cage. chippeakanno leverages the statistical environment r/bioconductor with various sources of annotations, such as ensembl, the ucsc genome database and others. in addition, users have the flexibility to label enriched regions with any annotation of interest such as a dataset from the literature. this package is available from bioconductor, an open source and open development software project specializing in biological data analysis and integration based on r, a system for statistical computation and graphics  <cit> . bioconductor tools are distributed as separate but interoperable packages, each specializing in different areas of biological data analysis, such as the limma package for analyzing microarray data  <cit>  and the biomart package for retrieving genomic annotation from the federated query system biomart ensembl  <cit> . the chippeakanno package contains various functionalities to batch-annotate enriched regions identified from chip-seq, chip-chip or cage experiments.

chippeakanno emphasizes flexibility, integration and ease of use. users are supplied with functionalities for annotating peaks from chip-seq, chip-chip, cage or any experiment resulting in a list of chromosome coordinates with any annotation track users are interested in. even though some of the functionalities such as the retrieval of neighbouring sequences for a set of peaks are available in other software programs, the complete set of tools and the flexibility offered by chippeakanno are not available in any other software. the main differentiating point from ceas, cisgenome and other software is that chippeakanno enables comparison between a set of peaks with any annotation feature objects, for example comparing to cpg islands, to conserved elements   or comparing two sets of peaks between replicates  or transcription factors within a complex . in addition, unlike chippeakanno, ceas or cisgenome does not have overlapping significance testing or gene ontology  enrichment testing implemented. go is a system for describing the molecular function, biological process and cellular compartmentalization of gene products  <cit> . another main advantage of chippeakanno is the ability/flexibility to plug in with other annotation packages, such as biomart  <cit>  and go.db, chip-chip analysis packages such as ringo  <cit>  and acme  <cit> , other fast moving deep-sequencing analysis capabilities and infrastructure  such as shortread  <cit> , degseq  <cit> , edger  <cit> , bayespeak  <cit> , chipseq, chipseqr, rolexa  <cit> , bsgenome, iranges, biostrings, rtracklayer  <cit> , genomegraphs  <cit>  and statistical analysis tools such as multtest and limma  <cit>  in bioconductor .

qa
plotting
overlap test
*available in bioc  <dig>  in r  <dig> . <dig> 

usability is the top priority for chippeakanno. once the package is loaded, one line of code  enables users to find nearest or overlapping features such as gene, exon, mirna, 5' utr, 3' utr, peaks from another dataset or any annotation track of interest. users are also provided with the flexibility and functionality to get the annotation on the fly . two lines of code  allow users to find enriched gene ontology terms. one line of code  allows users to draw a venn diagram and provide a p-value for determining the significance of the overlapping between datasets. repeated calling of function findoverlappingpeaks enables users to find the overlapping among peaks from several different experiments, which will help users to determine how peaks from different replicates overlap and how peaks from different transcription factors within a complex overlap.

implementation
chippeakanno implements a common annotation workflow for chip-seq or chip-chip data in r, a system for statistical computation and graphics  <cit> . to promote component reuse and compatibility among bioconductor packages, chippeakanno utilizes the iranges package and represents the peak list as rangeddata to efficiently find the nearest or overlapping gene, exon, 5' utr, 3' utr, microrna  or other custom feature supplied by the user, such as the most conserved non-coding element, cpg island or transcription factor binding sites. all peak-calling software produces a file containing at least a list of chromosome coordinates that is all chippeakanno package needs. both bed http://genome.ucsc.edu/faq/faqformat#format <dig> and gff  are common file formats that provide a flexible way to define peaks or annotations as data lines. therefore, conversion functions bed2rangeddata and gff2rangeddata were implemented for converting these data formats to a rangeddata object. since the genome annotations are updated periodically/frequently, we have leveraged the biomart package from bioconductor to enable retrieval of annotation data on the fly from ensembl. for fast access, transcription start sites from common genomes such as tss.human.ncbi <dig>  tss.human.grch <dig>  exonplusutr.human.grch <dig>  tss.mouse.ncbim <dig>  tss.rat.rgsc <dig>  and tss.zebrafish.zv <dig> were included as pre-built annotation data packages. users also have the flexibility to pass annotation data from the genomicfeatures package as well as their own annotation data, such as a list of binding sites from other transcription factors, a different chip preparation or a different peak-calling algorithm. we have also utilized the bsgenome package to implement functions that allow retrieval of flanking sequences associated with peaks of interest. this facilitates subsequent pcr amplification, cloning and/or motif discovery using algorithms such as meme  <cit> . to ascertain whether the identified peaks are enriched around genes with certain go terms, we have implemented a go enrichment test. this test applies the hypergeometric test phyper in r and integrates with go annotation from the go.db package, species-specific go annotation packages such as org.hs.eg.db and multiplicity adjustment functions from the multtest package in bioconductor. go annotation packages are updated per release that corresponds to twice a year. binding sites annotated with chippeakanno can be exported as an excel file to allow easy sorting and statistical analysis of larger lists of peaks. alternatively, the distribution of peaks relative to genomic features of interest  can be easily plotted for viewing as pie chart or histograms. in addition, we have implemented functionalities using hypergeometric test for determining the significance of overlap between replicate experiments, different peak-calling algorithms or binding sites among transcription factors within a complex, and for drawing venn diagrams to visualize the extent of the overlap between replicates.

RESULTS
example 1: finding the nearest gene and the distance to the transcription start site of the nearest gene
the output from chip-seq or chip-chip analysis is a list of binding sites  that are significantly enriched in the chip sample compared with the corresponding control sample. the example below details how to find the nearest gene and the distance to the transcription start site  of the nearest gene in the human genome for a list of binding sites  of type rangeddata. the distance is calculated as the distance between the start of the binding site and the tss, which is the gene start for genes located on the forward strand and the gene end for genes located on the reverse strand.

the first step is to load the chippeakanno package, an example dataset and an annotation dataset. in this example, the example dataset contains putative stat1-binding regions identified in un-stimulated cells  <cit> , and the annotation dataset contains the tss coordinates and strand information from human grch <dig> 

>library

>data

>data

in the next step, the function a nnotatepeakinbatch is called to find the gene with nearest tss or overlapping gene that is not the nearest tss and corresponding distance for the list of binding regions. sometimes, a peak is within a gene but far from the gene's tss. setting the parameter output to "both" outputs both the genes with nearest tss and the overlapping gene. the parameter maxgap sets the maximum gap to be considered as overlapping. the parameter multiple indicates whether multiple overlapping features should be returned for one peak.

>annotatedpeak = annotatepeakinbatch 

the annotated peaks can be saved as an excel file for biologists to view easily.

>write.table, file = "annotatedpeaklist.xls", sep = "\t", row.names = false)

plotting the distribution of the peaks relative to the tss gives a birds-eye view of the peak distribution relative to the genomic features of interest.

>y = annotatedpeak$distancetofeature 

>hist- <dig>  max + 100))

such a plot generated from the putative stat1-binding regions identified in un-stimulated cells  shows that the stat1-binding sites are enriched in regions near tsss . a pie chart was also generated as follows to show the distribution of relative position of the peaks to the nearest gene .

>temp = as.data.frame

>pie == "overlapping" |  == "neareststart" & !temp$peak %in% temp$peak),]$insidefeature))

it is also possible to obtain the annotation on-line from ensembl using the getannotation function as follows prior to calling annotatepeakinbatch. please refer to the biomart package documentation for a list of available biomarts and datasets  <cit> .

>mart = usemart

>annotation = getannotation

to annotate the peaks with other genomic features, it is necessary to change the featuretype . it is also possible to pass customized annotation data into the function annotatepeakinbatch. for example, the user may have a list of transcription factor binding sites from the literature, from a different biological replicate, from a different peak-calling algorithm or from a different protein functioning as transcription complex together with the protein in study, and is interested in determining the extent of the overlap to the list of peaks from his/her experiment. prior to calling the function annotatepeakinbatch, it is necessary to represent both datasets as rangeddata, where start is the start of the binding site, end is the end of the binding site, names is the name of the binding site, and space and strand are the chromosome name and strand, respectively, where the binding site is located.

>myexp = rangeddata, end = c, names = c), space = c)

>literature = rangeddata, end = c, names = c), space = c, strand = c)

>annotatedpeak <dig> = annotatepeakinbatch

peaks in text format from peak-calling algorithms can be easily imported to r as data frame then converted to rangeddata. for binding sites represented in bed or gff format, bed2rangeddata or gff2rangeddata were provided for converting these data formats to rangeddata.

example 2: determining the significance of the overlapping and visualizing the overlap as a venn diagram among different datasets
the second example describes how to determine the significance of the overlap, visualize the overlap in a venn diagram and obtain merged peaks from different datasets such as different biological replicates, different peak-calling algorithms or different proteins functioning as a transcription complex. here we give examples using different biological replicates.

the first step is to load the chippeakanno package and three example datasets as rangeddata that contains putative ste12-binding regions identified in yeast from three biological replicates  <cit> .

>library

>data

>data

>data

in the next step, the function makevenndiagram is called to generate a venn diagram to visualize the overlap among the three replicates. in addition, pair-wise overlapping significance tests were performed with hypergeometric test and p-values were generated. the parameter nameofpeaks indicates the names of the dataset for labeling the venn diagram. the parameter maxgap indicates the maximum distance between two peak ranges for them to be considered overlapping. the parameter totaltest indicates how many potential peaks in total that is used in hypergeometric test.

>makevenndiagram, nameofpeaks = c, maxgap =  <dig>  totaltest = 1580)

as a result, a venn diagram was generated for visualizing the overlap among the above three replicates. the pair-wise overlap comparisons show that the peaks identified from the replicates overlap significantly . the same analysis was applied to the three biological replicates of cse <dig> and the overlap between replicate  <dig> and  <dig> is significant at p-value <  <dig>  while the other two overlapping is significant at p-value <  <dig>  .

the peak ranges from replicates do not overlap perfectly. it is desirable to combine all the overlapping peaks across replicates into merged peaks that cover all the overlapping peaks from the replicates. calling the function findoverlappingpeaks can generate the merged peaks. besides the parameters mentioned previously, an additional required parameter multiple indicates whether to return merged peaks from multiple overlapping peaks.

>mergedpeaks = findoverlappingpeaks$mergedpeaks, peaks.ste <dig> replicate <dig>  maxgap =  <dig>  multiple = f, nameofpeaks <dig> = "replicate1repliate2", nameofpeaks <dig> = "r3")$mergedpeaks

next, nearest genes and distances between peak location and nearest tss can be obtained by annotating the merged peaks with sgd <dig>  using annotatepeakinbatch function illustrated in example  <dig> . the same analysis was performed with cse <dig> binding-sites . the un-equal variance t-test shows that the distribution of the distance of ste12-binding sites to nearest tsss  is very different from that of cse4-binding sites  . ste12-binding sites are distributed more towards the upstream of the gene  while cse4-binding sites are distributed more inside and downstream of the gene . this result is consistent with what has been observed previously  <cit> . the annotated datasets are available in additional file  <dig> and additional file  <dig> 

example 3: obtaining the sequences around the binding sites for pcr amplification or motif discovery
the third example describes how to obtain the sequences surrounding binding sites  for pcr amplification, cloning or motif discovery  <cit> .

the first step is to load the chippeakanno package and create an example peak dataset as rangeddata. next, the organism-specific bsgenome package is loaded followed by calling the function getallpeaksequence. the function available.genomes shows a list of available organism-specific bsgenome data packages. in this example, e. coli data package is used due its light-weight.

>library

>peaks = rangeddata, end = c, names = c), space = c)

>library

>peakswithsequences = getallpeaksequence

to convert the sequences to a common fasta file format, the following function is called.

>write2fasta

sequences for merged ste <dig> binding sites were obtained from package bsgenome.scerevisiae.ucsc.saccer <dig> . significant motifs  were identified by running meme  <cit>  with motif occurrence set as zoop, minimum width as  <dig>  maximum width as  <dig> and other parameters as default .

example 4: obtaining enriched go terms near the peaks
the fourth example describes how to obtain a list of enriched go terms associated with adjacent genes using a hypergeometric test.

the first step is to load the tss annotated peak, which is the result returned from calling the function annotatepeakinbatch, and the organism-specific go gene mapping package .

>data

>library

the next step is to call the function getenrichedgo. the parameter maxp is the maximum p-value required to be considered to be significant, multiadj indicates whether to apply multiple hypothesis testing adjustment, mingoterm is the minimum count in a genome for a go term to be included, and multiadjmethod is the multiple testing procedure to be applied .

>enrichedgo <-getenrichedgo 

where enrichedgo$bp contains a list of enriched go biological process, enrichedgo$mf contains a list of enriched go molecular functions and enrichedgo$cc contains a list of enriched go cellular components.

the enriched go terms were obtained from the putative ste12-binding regions merged from three biological replicates identified in yeast  <cit> . the parameter used to generate the list is maxp =  <dig> , multipadj = true, mingoterm =  <dig> and multiadjmethod ="bh".

CONCLUSIONS
chippeakanno enables batch annotation of binding sites identified from chip-seq, chip-chip, cage or any technology that results in a large number of enriched genomic regions for any species with existing annotation data within the statistical programming environment r. allowing users to pass their own annotation data such as different chip preparation and a dataset from literature, or existing annotation packages, such as genomicfeatures and bsgenome, provides flexibility while the tight integration to the biomart package enables up-to-date annotation retrieval from the biomart database. the main advantage of chippeakanno is the ability/flexibility to plug in with other annotation packages, chip-chip analysis packages, other fast moving deep-sequencing analysis capabilities and infrastructure and statistical analysis tools in bioconductor. another advantage of chippeakanno is that it enables comparison between a set of peaks with any annotation feature objects, between two sets of peaks from replicate experiments or transcription factors within a complex and determination of the significance of the overlap.

the chippeakanno package provides documentation in the form of an interactive manual illustrating the usage of individual functions as well as a vignette containing executable code snippets demonstrating a case-oriented help session. the vignette is run at package building and installation time, and thus also serves as a testing suite. some of the examples described in the paper are also demonstrated in the vignette.

availability and requirement
chippeakanno is an open source software package under the gnu general public licence v <dig>  and has been contributed to the bioconductor project. the software, source code and documentation are available for download from http://www.bioconductor.org or installed from r by typing source http://bioconductor.org/bioclite.r and bioclite. the package has been tested and run on os x, windows and various linux systems. chippeakanno depends on r version  <dig> .  <dig> or later and the following bioconductor packages: biomart, multtest, iranges, limma, biostrings, bsgenome, and go.db. in addition, the lightweight organism-specific package bsgenome.ecoli.ncbi. <dig> and org.hs.eg.db were installed during build time for testing the code snippets in the vignette. all these packages can be downloaded from bioconductor or installed from r using the http://bioconductor.org/bioclite.r script.

authors' contributions
ljz drafted the manuscript. ljz and hp developed the software package. cg, ndl, mrg, sml and dsl provided scientific advice. dsl performed the meme analysis. all authors participated in writing and approved the final manuscript.

supplementary material
additional file 1
annotated ste12-binding sites. an excel file contains the annotated ste12-binding sites merged from the three biological replicates in yeast  <cit> .

click here for file

 additional file 2
annotated cse4-binding sites. an excel file contains the annotated cse4-binding sites merged from the three biological replicates in yeast  <cit> .

click here for file

 additional file 3
sequence file of ste12-binding sites used for meme input. fasta formatted sequence file from ste12-binding sites merged from the three biological replicates in yeast  <cit> .

click here for file

 acknowledgements
we would like to thank the support from the program in gene function and expression  at umass medical school . we are grateful for the constructive suggestions from the manuscript editors and anonymous reviewers, and the bioconductor package reviewers nishant gopalak, marc carlson and other anonymous reviewers. we are indebted to the users of the chippeakanno who provided great ideas and feedbacks to enhance the features of the software. we also thank zhiping weng in the program of bioinformatics and integrative biology at umms for reviewing the manuscript, ivan gregoretti at national institute health for helping with the revision, sara evans at pgfe for editorial assistance, alan ritacco at umms academic research and computing services for providing computational support, and glenn maston at pgfe, ping wan at capital normal university and ellen kittler at the umms deep sequencing core facility for helpful discussion.
