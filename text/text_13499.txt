BACKGROUND
copy number variations  and polymorphisms  have recently gained much interest as a novel tool to study the relationship between genomic variation and disease. cnvs and cnps are widespread throughout the genome and were shown to be largely heritable while being responsible for a significant amount of inter-variability in human  <cit> . they can also appear de novo at a significant rate, both in germline and somatic cells  <cit> . any variation in copy number has the possibility of affecting a wide spectrum of genes, which might lead to genomic disorders  <cit> . variation in gene-expression levels can occur for genes located within a region of copy number variation  <cit> , and negative correlations between cnv and gene expression were reported in approximately 10% of cases  <cit> . it is currently estimated that up to 12% of the genome is subject to copy number variations  <cit> . those genetic variations are likely to play an important role in the etiology of common disease and sporadic birth defects  <cit> , partly attributable to their higher mutation rate as compared to point mutation  <cit>  and due to their considerable genomic coverage.

high-density snp genotyping arrays are commonly used for cnv/cnp analysis. those arrays provide signal intensities of alleles across all snps which can be used to infer copy numbers along with a selection of cnv-specific probes. the presence of a cnv/cnp region has the potential to confuse snp calling algorithms if unaccounted for, as snps can be represent with multiple or single alleles. it is then crucial to gain knowledge of cnv and cnp in genetic analysis, even when using snps as a marker.

while amenable to genetic association studies, the use of cnvs and cnps in linkage analysis with multi-generational family data has up to now been greatly limited by the requirement of chromosome-specific copy number assignments, which, to our knowledge, none of the current software indexed in the literature is able to provide. multi-allelic partitioned copy number polymorphisms have the potential to offer a new and powerful tool for linkage analysis. today's high density snp panels offer near-optimal coverage for linkage analysis. however, some regions, especially those with copy number polymorphisms, may have been less well covered due to the requirements of mendelian consistency prior to linkage analysis. although representing only a minute fraction of the genome, the partitioning of copy number genotypes has the potential to help fill-in the remaining linkage coverage gaps.

the use of genome-wide association studies  with unrelated cases and controls is a popular approach for the discovery of genetic variants responsible for common genetic diseases  <cit> . linkage analysis with extended pedigrees is of limited use for the identification of common polymorphisms of low effect, but it does offer high detection power with more penetrant variants even in the presence of multiple rare causal variants at a single locus  <cit>  or highly penetrant rare variants throughout the genome. furthermore, the combined use of pedigree-based linkage analysis and association studies in a multistage approach was argued by elston et al. to be both powerful and advantageous  <cit> . significantly linked markers can emphasize candidate genes for subsequent association study and information on candidate loci can be incorporated into association tests using either a generalized logistic regression  <cit>  or a quantitative linkage score  <cit> .

here, we are interested in using cnv and cnp data from the affymetrix  <dig>  chip analyzed with the fawkes program of the birdsuite software  <cit> . fawkes creates an integrated genotype from snps, rare copy number variations and common copy number polymorphisms genotypes information, providing the number and type  of each allele for each snp on the affymetrix genome-wide human snp array  <dig>  and  <dig>  chips. while the suite comes with python scripts for file compatibility with the whole-genome association toolset plink  <cit> , no software is available to conduct chromosome assignment of the copy number genotypes based on pedigree information. we propose a new algorithm called cngen that uses snp genotypes in multi-generational pedigrees to convert fawkes' genotypes into partitioned copy number genotypes  which can then be treated as multi-allelic markers by common linkage software such as merlin  <cit> . we have developed python scripts to encode cn genotypes into multi-allelic genotypes. we have validated and successfully applied the algorithm in the analysis of multi-generational pedigrees through simulation procedures.

implementation
the standard fawkes output file is tabulated with samples in columns and probe sets  in rows. each cell contains a fawkes call that is a comma-separated value of the form  where a is the number of copies of allele a and b, the number of copies of allele b. five different fawkes calls are possible:

 <dig>  undefined calls, from a probe set of the form  that was unresolved by fawkes;

 <dig>  heterozygous calls of the form  where a and b ≠ 0;

 <dig>  null calls of the form  <cit> , representing a null genotype;

 <dig>  hemizygous calls of the form  or , where a and b = 1;

 <dig>  homozygous calls, of the form  or , where a and b >  <dig> 

cngen converts fawkes calls into partitioned cn genotypes as comma-separated values of the form  where ti is the allele type  on one of the parental chromosome, and m and n represent the number of copies of the named allele type on the specified chromosome. the n allele type represents an absence of either an a or b allele on a given parental chromosome. the partitioning of copy numbers is accomplished according to the rules of mendelian transmission and under the general assumption that ancestral copy number expansions were of the same allele type, i.e. a copy number expansion from  <dig> to  <dig> copies is not allowed to bear both a and b alleles on the same chromosome strand.

this last assumption affects only copy numbers of two or more, since single-copy alleles will result in one copy which will by default be located on a single chromosome. situations with two copies where the true cn genotype is ,  and  will be appropriately called. however true  will not and will likely give rise to mendelian inconsistencies which will be coded as undefined by the cngen algorithm. expansions beyond  <dig> copies were found less frequently than  <dig>   <dig>  and  <dig> copies by a survey of  <dig> genotyped individuals in  <dig> pedigrees presenting a congenital heart defect phenotype. overall, only  <dig> % of fawkes calls had three or more copies , compared to  <dig> % with  <dig> or  <dig> copy  and  <dig> % with  <dig> copies, with the rest being undefined fawkes calls.

step  <dig> - partitioning of non-homozygous calls
the algorithm begins by parsing the fawkes calls to generate in this first pass the cn genotypes for the first four of the five possible fawkes calls. undefined and null fawkes genotypes are set to undefined or null cn genotypes, respectively. for single hemizygous fawkes genotype, the first chromosome is set to hold the deletion  and the other, the given allele . finally, heterozygous fawkes calls are partitioned such that each chromosome receives the copies of only one allele type. those conversions from fawkes genotypes to partitioned cn genotypes are summarized in table  <dig> 
step  <dig> - partitioning of type-i homozygous calls
we distinguish two types of homozygous fawkes calls based on the genotype conversion method used: type-i and type-ii. cn genotype partitioning for type-i homozygous fawkes calls is solved by relying on information from a heterozygous first-degree relative and assuming mendelian transmission. the algorithm searches for heterozygous first-degree relatives  of the index individual to be converted , as those will have partitioned cn genotypes that can be used as reference. figure  <dig> presents the different scenarios for type-i homozygote partitioning.

step 2a
when a parent of i has a heterozygous cn genotype of the form , then i is assigned the following cn genotype:   

where if, l and icn, l are the fawkes genotype and the new cn genotype of the index individual at locus l, respectively . if a - mp or b - np equals  <dig>  the second partitioned cn allele becomes n.

step 2b
if i does not have a heterozygous parent, the algorithm searches for the presence of a child with a heterozygous cn genotype of the form . the partition of the cn genotype is solved as presented in equation  by replacing mp and np by mc and nc respectively .

step 2c
if i does not have a heterozygous child, then the algorithm searches for the presence of two siblings with distinct heterozygous cn genotypes  and  for which the cardinality of the pool of cn alleles of the same type as i is two, i.e.  or . then, i is assigned the following cn genotype:   

restricting the conditions ms <dig> ≠ ms <dig> or ns <dig> ≠ ns <dig>  ensures that both cn alleles originate from the two distinct parents . any fawkes homozygous calls that remain un-converted are then flagged as type- <dig> fawkes homozygous calls and the algorithm proceeds to step  <dig> 

step  <dig> - partitioning of type-ii homozygous calls
cn genotype partitioning of type-ii homozygous fawkes calls proceeds by assuming mendelian transmission of cn alleles and by relying on information in the nuclear pedigree of i. the algorithm searches for a solution according to the following sequential attempts. figure  <dig> presents the different scenarios for type-ii homozygous partitioning.

step 3a
first, the algorithm searches for the presence of one parent of i that is homozygous for a cn genotype of the same allele-type as i such as  where t <dig> = t <dig>  ti =  <dig>  ∈ {a, b, n} and mp = np; in which case i is assigned its cn genotype according to equation  .

step 3b
analogously to step 3a above, a child of i presenting a homozygous cn genotype  can be used according to equation   .

step 3c
if no such parent or child exists, the algorithm then searches for the presence of two siblings, one with a heterozygous genotype of the form , and the other one with a homozygous cn genotype with identical cn alleles excluding null alleles and of a different allele-type than that of i . in this case, icn, l is defined by equation  with replacement of mp and np by ms <dig> and ns <dig>  respectively .

step 3d
if i's genotype at the given locus remains unconverted, the algorithm searches for the presence of one child and the spouse of i where both have distinct cn genotypes. in this case, one cn allele is obligatorily shared between the child and the spouse and the remaining cn allele of the child can be assigned to i. the spouse's cn genotype has the form  and the child's cn genotype  where |{t1ms, t2ns} ∩ {t1mc, t2nc}| =  <dig>  i is assigned the remaining child's cn allele according to {t1mc, t2nc} - {t1ms, t2ns} and the algorithm infers the other cn allele of i .

step 3e
if the algorithm has not yet converted the fawkes genotype according to the above steps, it then searches for cases where the two parents of i are both homozygotes of the same allele type as i but with distinct cn genotypes. here, one parent's genotype can be inferred if its cn genotype is undefined. a solution exists if the first parent has a cn genotype of the form  and the second parent, , where mp <dig> ≠ mp <dig> or np <dig> ≠ np <dig>  in both cases, t <dig> = t <dig> = a if if, l =  and t <dig> = t <dig> = b if if, l = . parents may have a null allele on one chromosome. the following sums are then calculated:  

if the number of unique sums is  <dig> , the sum si that corresponds to the fawkes genotype of i is used to assign the corresponding parental cn alleles to i. if the number of unique sums is  <dig> , then the algorithm checks whether i's fawkes genotype matches the min or max{s <dig>  s <dig>  s <dig>  s4}, in which case the corresponding parental cn alleles can be assigned to i .

step 3f
if the two homozygous parents have identical cn genotypes of the same allele-type as that of the index individual , then i is assigned the cn genotype described in equation  .   

step 3g
if only one parent of i has a cn genotype with the same cn allele type as i  with the possibility of one null allele, if  = min{mp, np} = z, then icn, l =  .

step 3h
finally, if one parent of i has a heterozygous cn genotype containing a n cn allele and the remaining allele is of a different allele-type as that of i  and if both parents of i have a cn genotype for this loci and the trio respects mendelian transmission , the n allele is assigned to i and the second allele is inferred .

general procedure of the algorithm
the developed algorithm reads a pedfile in linkage format containing the pedigree structures, and then opens the fawkes output file generated by birdsuite. reading-in one marker of the fawkes file at a time, cngen begins by converting fawkes genotypes of type  <dig> to  <dig> into cn genotypes as described in step  <dig> . next, homozygous type-i calls are converted based on heterozygous first-degree relatives . any encountered mendelian inconsistencies are reported. unconverted type-i homozygous calls are flagged as type-ii. then, the algorithm attempts to partition the remaining type-ii homozygous calls by inspection of the converted first-degree relatives of the index individual according to procedures described in step  <dig> . following mendelian laws, and based on first degree relatives' cn genotypes, obligate genotype assignments are resolved. the algorithm cycles to resolve all unconverted type-ii homozygote each time it has successfully partitioned at least one call. when no more calls can be partitioned, remaining fawkes calls and obligate mendelian inconsistencies are set to a cn genotype of  and the algorithm proceeds to the following marker.

the algorithm outputs a tabulated file containing partitioned cn genotypes following the fawkes' format. a log file is created and summary statistics of the partitioning procedures are sent to the standard output, including the percentage of each type of calls, the percentage of successful conversions and the number of mendelian inconsistencies found during the process. cngen does not specifically search for all mendelian errors in the pedigrees but it reports those found during type-i and -ii homozygous call conversions . the popular program pedcheck  <cit>  can be used to systematically search for mendelian errors, as per common linkage practice. a companion tool to interface with pedcheck was developed.

RESULTS
implementation
the cngen algorithm was implemented with the python interpreter version  <dig> . <dig>  it was successfully tested on current linux, windows and mac os workstations. system resource requirements are dependent on the size of the input datasets, proportionally with the number of samples in the analysis. on a modern linux workstation, the conversion of approximately  <dig> million calls  required less than  <dig> mb of ram and a little more than one hour of computation time. cngen is the first software to produce partitioned copy number genotype from birdsuite's integrated snp genotypes. partitioned cn genotypes offer the valuable possibility of using copy number variation in the context of linkage studies.

validation
we have validated the algorithm using simulations on a multi-generational pedigree consisting of  <dig> individuals including  <dig> founders . gene-dropping simulations were generated. first, founders were assigned a null, hemizygote, heterozygote or homozygote cn genotype state following proportions given by real data . an allele is then randomly chosen from a set of all possible cn genotypes depending of the given state. mendelian segregation laws were used to assign cn genotypes to non-founding pedigree members, receiving one random allele from each parent. 1% of all cn genotypes were randomly selected and recoded as undefined cn genotypes . cn allele frequencies are presented in table  <dig>  cn genotypes were then converted into fawkes genotypes based on the number of a and b alleles , 0],  → , etc.). finally, cngen was used to partition the fawkes genotype back into cn genotypes and comparison between the true cn genotypes and the ones inferred by cngen were compared. three million validation runs were thus completed, for which more than  <dig> million genotype conversions were made, and which covered every possible conversion step from fawkes to cn genotypes . the validation procedure confirmed that all converted genotypes by cngen were accurate. irresolvable homozygous type-ii calls due to lack of information from first-degree relatives were checked and validated.

for an additional  <dig>  validation runs , we substituted the cn genotype of a random pedigree member with a different randomly selected cn genotype and allowed 10% of cn genotypes to be recoded as undefined cn genotypes . following cngen, we ran pedcheck and nuclear families where inconsistent transmissions were found were set to missing. overall, 81% of the inserted cn genotype errors were detected by the process. 59% of  <dig>  simulations resulted in the concerned nuclear family being detected by pedcheck. in 22% of the  <dig>  simulation runs, cngen had assigned an undefined cn genotype at the modified individual. cngen and pedcheck assigned an undefined value to respectively 14% and 7% of the  <dig> , <dig> calls for a total of 21% of undefined calls. overall, only  <dig>  out of the  <dig>  simulations  resulted in a wrong cn genotype assignment to the substituted individual or to his first-degree relatives, representing an undetected genotype error rate of ~ <dig> % for  <dig> , <dig> calls  with a simulated  <dig> % genotyping error rate. in a typical study exposed to a 1% genotyping error rate, this would result in  <dig> % of undetected genotype errors. these findings confirm that cngen will not result in an excess of false calls in the presence of erroneous or de novo cnp.

CONCLUSIONS
cngen is, to our knowledge, the first software that allows the partitioning of copy number genotypes in extended pedigrees for the purpose of linkage analysis with cnps. cngen is a flexible, open source python program that can process integrated snp genotypes from the fawkes routine of the birdsuite program for high-density snp genotyping arrays. birdsuite was developed for the affymetrix's snp array  <dig>  and  <dig> , but, as mentioned by the birdsuite authors, the concepts and approach can be applied to any genotyping array  <cit>  and they are planning on providing support for other high-throughput genotyping platforms, such as the illumina  <dig> m.

the cngen algorithm is not limited to the fawkes procedure. as long as the input file format is respected, cngen will conduct the partitioning process. for instance, results from the penncnv software  <cit>  could be used.

the cngen algorithm relies upon the assumption that ancestral copy number expansions are of the same allele type on a given chromosome. in a recent publication by hastings et al.  <cit> , a general overview of the molecular mechanisms of change in gene copy number was presented, owing strong support for the involvement of dna repair mechanisms which would, in great majority, be concordant with chromosome-specific expansions. there is a range of possibilities however, and copy number expansions occurring during recombination at meiosis, for example, could lead to different allele-type cn expansions. for regions where the assumption of identical allele-type in expansions doesn't hold, the majority will lead to mendelian inconsistencies following the partitioning algorithm, and will be removed during data quality controls. this will result in a lower number of partitioned genotype for linkage analysis.

our simulation experiments support the validity of the cngen algorithm and its robustness to fawkes genotype errors and de novo mutations.

availability and requirements
project name: cngen

project home page: http://www.statgen.org/ in the download section

operating system: platform independent

programming language: python™

other requirements: standard python software  <dig>  or  <dig> 

license: none

any restrictions to use by non-academics: none

authors' contributions
lplp worked on the methodology of cngen, implemented cngen and the companion software, performed the validation of the algorithm using simulations and drafted the manuscript. ga participated in the validation of the algorithm and helped to draft the manuscript. gua participated in the conception of the study and helped to draft the manuscript. mpd conceived of the study, participated in its design and coordination, produced the methodology behind cngen and helped to draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
archive containing the simulated data for  <dig> thousand runs  on a pedigree containing  <dig> individuals . the archive contains the simulated fawkes' calls , the partitioned genotyped compute by cngen and the corresponding log file  and the pedfile corresponding to the complex pedigree used for simulation . the file  has been uploaded with the present document, and is also available at http://www.statgen.org/main/index.php/downloads/downloads.

click here for file

 additional file 2
thousand validations with errors.tar.bz <dig>  archive containing the simulated data for  <dig> thousand runs with mendelian errors. the archive contains the same file structure as the first additional file. the data has been splited into three files because of pedcheck's limitations. the file  has been uploaded with the present document, and is also available at http://www.statgen.org/main/index.php/downloads/downloads.

click here for file

 acknowledgements
funding was provided by the canadian institutes of health research  and heart and stroke foundation of canada . mpd is supported by the frsq .
