BACKGROUND
reconstructing the structure and behavior of biological systems is of fundamental importance to the field of system biology. in general, biological systems exhibit complex nonlinear dynamic behavior, which is often modeled using ordinary differential equations . a common approach to constructing an ode model of an observed biological system is to decompose the modeling process in two tasks  <cit> . the first task, referred to as structure identification and often solved by a modeling expert, is to specify the model structure, i.e., the functional form of the model odes. the second task of determining appropriate values for the model constant parameters, based on observations and measurements, is referred to as parameter estimation.

due to the highly nonlinear dynamics and the limited measurability of biological systems, the parameter estimation task is challenging and computationally expensive. most parameter estimation tasks in system biology are multi-modal, i.e., have many local optima that prohibit the use of local search methods. furthermore, the models are often high-dimensional, making the parameter estimation task computationally complex. finally, the measurability of systems in cell and molecular biology is highly limited. many system variables are not directly observable. for the few ones that can be measured, measured data are noisy and taken at a coarse time resolution. all these constraints, combined with the complex dynamic of the considered models, can lead to identifiability problems, i.e, the impossibility of unique estimation of the unknown model parameters, making the parameter estimation an even harder optimization task  <cit> .

there are two broad classes of approaches to the parameter estimation task: the frequentist  approach and the bayesian  approach  <cit> . the most representative approach of the first class is maximum-likelihood estimation , according to which the most likely parameter values are the ones that maximize the probability  of observing the given data. a special case of maximum-likelihood estimation, based on the assumption of independent and normally distributed errors in the experimental data, leads to the well-known approach of least-squares estimation . unlike ml estimation, which does not need any external information about the parameters, bayesian estimation treats the parameters to be estimated as random variables, with a prior distribution representing the knowledge about the parameter values before taking the data into account. according to the information that the end-user has to provide, ls estimation is the simplest approach, while bayesian approaches are the most complex ones  <cit> .

representative methods from both classes of approaches are commonly used for parameter estimation in the field of system biology  <cit> . it is difficult to argue in favor of one class of approaches against the other in a general manner  <cit> , since both have shown advantages in specific situations. on one hand, bayesian approaches can elegantly treat the uncertainty in parameter values and model structure in a uniform manner. on the other hand, frequentist approaches  can be effectively used for high-dimensional models with large numbers of parameters. we thus approach the parameter estimation task from the frequentist point of view and use least-squares estimation.

related work using least-squares methods for parameter estimation in system biology  <cit>  has shown that a proper way to address the above mentioned challenges in parameter estimation is to employ global optimization  methods, especially stochastic go methods and hybrid methods . the advantage of stochastic methods is in their ability to handle black-box optimization problems and to converge relatively quickly to the vicinity of global optima. in this context, we employ three bio-inspired meta-heuristic global optimization methods.

we address the task of estimating the parameters of a nonlinear ode model of endocytosis, more specifically of the maturation of endosomes, which are membrane-bound intracellular compartments used to transport and disintegrate external cargo. the model focuses on a key endocytotic regulatory system that switches from cargo transport in early endosomes to cargo disintegration in mature endosomes  <cit> . the regulatory system is based on the process of conversion of rab <dig> domain proteins to rab <dig> domain proteins. using both a theoretical and an experimental approach to model this process, del conte-zerial et al.  <cit>  show that a cut-out switch ode model provides the best fit to the biological observations, which show a rapid transition from the state with high rab <dig> and low rab <dig> concentrations in early endosomes to the inverse state of low rab <dig> and high rab <dig> concentrations in mature endosomes. the task of modeling the rab5-to-rab <dig> conversion has all the challenging properties mentioned above. most notably, we have to cope with the limited measurability of the concentrations of rab <dig> and rab <dig> domain proteins in the endosome, since the different  states of these proteins can not be distinguished in the measurement process.

in this paper, we study the effect of this kind of limited observability of the system dynamics on the complexity of the parameter estimation task, as well as the applicability and performance of four different optimization methods in this context. in order to do so, we define four different observation scenarios and generate artificial  data for each of them. the scenarios cover a wide range of situations, from the simplest one of complete observability, where the concentrations of all protein states are assumed to be directly measurable, to the most complex  scenario, where the observations are limited to the total concentrations of proteins in all their different states. we test the performance of the selected optimization methods in the different observation scenarios and compare the ability of different methods to cope with them. a final set of experiments, based on real-experimental data, are performed in order to check the validity of the results obtained on artificial data. more specifically, we test the methods' performance on measured data obtained through real-world biological experiments that corresponds to the most complex observation scenario described above.

our study includes four optimization methods: the differential ant-stigmergy algorithm , our own, recently developed meta-heuristic method for global optimization  <cit> ; particle swarm optimization , another bio-inspired meta-heuristic based on the idea of swarm intelligence  <cit> ; differential evolution , a well-known meta-heuristic method for global optimization based on the natural evolution concept  <cit> ; and the local-search derivative-based algorithm  <dig>   <cit>  updated with random restarts to cope with the multiple local optima problem. while pso, de, and a <dig> have already been applied to the task of parameter estimation in ode models, dasa is tested in this context for the first time. our initial study  <cit>  has shown that dasa performs competitively to de, and significantly better than a <dig> with random restarts. in this paper, we extend the preliminary tests with experiments in different, more realistic, observation scenarios, using both artificial data and laboratory measurements. we also investigate the practical identifiability of the model parameters under the different observation scenarios.

parameter estimation in ode models
the task of parameter estimation in ode models can be formalized as follows. given a model structure m, which includes a set of adjustable parameters c = {c <dig>  ..., cd}, and a set of observed data d, the task is to find the optimal values copt of c that lead to a model that reproduces the observed data d in the best possible way. parameter estimation is usually approached as an optimization task of minimizing an objective function that measures the goodness of fit of the model simulation to the observed data.

nonlinear least-squares estimation
among different suggested objective functions measuring the goodness of fit, the maximum-likelihood estimator  <cit>  introduced by r. a. fisher in  <dig>  maximizes the probability of observing the given data d if the model m is chosen. the likelihood function depends on the probability of the measurements in d. assuming that the measurements follow independent normal distributions with a constant  variance, the maximum-likelihood parameter estimation maps into a nonlinear least-squares estimation of the parameters, which minimizes the sum of squared errors . for the observed data d = {yi , <dig> ≤ i ≤ m,  <dig> ≤ j ≤ n}, sse is defined as

  sse)= ∑i=1m∑j=1nyi-Ŷi <dig>  

where yi is the value of the ith measured output at the jth time point, m is the number of measured outputs, n is the number of samples per observed output, and  is the value of the ith output at the jth time point, predicted by the model m.

ode models and observability
a model based on odes defines the temporal changes of a set of system  variables s as a function of the variables s and a set of exogenous variables e. the exogenous variables e are observed variables on which the model depends and appear on the right-hand side of the odes only, while the system variables s are dependent variables, the behavior of which is being modeled, and appear both on the left-hand side and the right-hand side of the odes. the ode model of the observed system takes the form

  ddts=f, 

where t represents time,  represents the time derivatives of the system variables s, f asserts the structure of the odes, and c is the set of model parameters. such an ode model, given the values of s at the initial time point t <dig>  s and the values of the exogenous variables e on the observed time interval , can be simulated to obtain the values of the system variables s in the time interval  variables y. in general, the output y of the ode model at a time point t is modeled as

  Ŷ=g,e). 

in the simplest observation scenario, the values of all the system variables are directly observed , i.e., . however, in most real-world cases, especially in biology, we can not observe the values of all the system variables directly. this is mostly due to the physical limitations of the measurement methodology. thus, when modeling biological systems, we deal with a variety of observation scenarios with different complexities. one possible scenario corresponds to situations where only some of the system variables are directly observed, i.e., . in an alternative, more complex observation scenario, g is a linear function, denoting, for example, that only the sum of the system variables can be directly observed, i.e., . finally, the most complex observation scenarios involve arbitrary non-linear functions g. the complexity of the observation scenario can enormously influence the performance of parameter estimation methods, as we have to reconstruct the complete model based on incomplete observations. in this paper, we examine the influence of the observation scenario on the performance of parameter estimation methods in the context of modeling endocytosis.

methods
optimization methods
this section describes the optimization approaches used to solve the nonlinear parameter estimation task for the rab5-to-rab <dig> conversion model. we address the task using a recently-developed swarm-based meta-heuristic differential ant-stigmergy algorithm , motivated by the fact that dasa has shown promising results in solving large scale continuous global optimization problems, but has not been applied to the challenging task of parameter estimation in nonlinear ode models. in addition, we use two well established meta-heuristics for global optimization, i.e., particle swarm optimization  and differential evolution , as well as the derivative-based algorithm  <dig> , essentially designed for nonlinear least-squares estimation. below we provide a description of each of the four methods. we also specify the specific parameter settings in all methods as used in our experimental evaluation. the used parameter settings were selected by sobol'-sampling-based parameter tuning  <cit> .

the differential ant-stigmergy algorithm
the differential ant-stigmergy algorithm  was initially proposed in  <dig> by korošec  <cit> . it is a version of an ant colony optimization  meta-heuristic  <cit> , designed to successfully cope with high-dimensional numerical optimization problems. the rationale behind the algorithm is in memorizing the "move" in the search space that improves the current best solution and using it in further search. the algorithm uses pheromones as a means of communication between ants , combined with a graph representation of the search space. the dasa approach that we present here is slightly different from the initial dasa version  <cit> : it is described in detail by korošec et al.  <cit> , where a reference to the available source code  <cit>  is given. the later was used in our experimental evaluation. 

first, the dasa approach transforms the d-dimensional optimization problem into a graph-search problem. the differential graph used in dasa is a directed acyclic graph obtained by fine-grained discretization of the continuous parameters' differences . the graph has d layers with vertices, where each layer corresponds to a single parameter. each vertex of the graph corresponds to a parameter offset value that defines a change from the current parameter value to the parameter value in the next search iteration. furthermore, each vertex in a given layer is connected with all vertices in the next layer. the set of possible vertices  for each parameter depends on the parameter's range, the discretization base b, and the maximal precision of the parameters ϵ, which defines the minimal possible offset value. ants use these parameters' offsets to navigate trough the search space. at each search iteration, a single ant positioned at layer ℓ moves to a specific vertex in the next layer ℓ +  <dig>  according to the amount of pheromone deposited in the graph vertices belonging to the -th layer: the probability of a specific vertex to be chosen is proportional to the amount of pheromone deposited in the vertex.

 second, dasa performs pheromone-based search that involves best-solution-dependent pheromone distribution. the amount of pheromone is distributed over the graph vertices according to the cauchy probability density function   <cit> . dasa maintains a separate cauchy pdf for each parameter. initially, all cauchy pdfs are identically defined by a location offset l =  <dig> and a scaling factor s =  <dig>  as the search process progresses, the shape of the cauchy pdfs changes: pdfs shrink as s decreases and stretch as s increases, while the location offsets l move towards the offsets associated with the better solutions. the search strategy is guided by three user-defined real positive factors: the global scale increase factor s+, the global scale decrease factor s-, and the pheromone evaporation factor ρ. in general, these three factors define the balance between exploration and exploitation in the search space. they are used to calculate the values of the scaling factor, s = f, and consequently influence the dispersion of the pheromone and the moves of the ants.

the main loop of the dasa method, visualized in figure  <dig>  consists of an iterative improvement of a temporary-best solution, performed by searching  appropriate offset paths in the differential graph. the search is carried out by m ants, all of which move simultaneously from a starting vertex to the ending vertex at the last level, resulting in m constructed paths. based on the found paths, dasa generates and evaluates m new candidate solutions. the best among the m evaluated solutions is preserved as a current-best solution. if the current-best solution is better than the temporary-best solution, the later is replaced, while the pheromone amount is redistributed along the path corresponding to the temporary-best solution and the scale factor is accordingly modified to improve the convergence. if there is no improvement over the temporary-best solution, then the pheromone distributions stay centered along the path corresponding to the temporary-best solution, while their shape shrinks in order to enhance the exploitation of the search space. if for some predetermined number of tries  all the ants only find paths composed of zero-valued offsets, the search process is restarted by randomly selecting a new temporary-best solution and reinitializing the pheromone distributions. related to this, dasa keeps information about a globally best solution, called global-best solution. this solution is the best over all restarted searches, while the temporary-best solution is the best solution found within one search .

particle swarm optimization
particle swarm optimization  is a stochastic population-based optimization technique developed by eberhart and kennedy in  <dig>  <cit> , inspired by the concept of social behavior of biological organisms, e.g., bird flocking or fish schooling  <cit> . a pso algorithm maintains a swarm of particles, corresponding to a population of candidate solutions. every particle moves  in the search space, adjusting its position and velocity according to its own experience and the social experience obtained by social interaction with the neighboring particles. pso evidently shares similarities with evolutionary algorithms, developed on the basis of the darwinian theory of evolution: both are inspired from natural phenomena and both maintain a population of candidate solutions and iteratively update  the population using a variety of operators in order to find the optimal solution. however, pso does not have selection, crossover or mutation operators: the main driving force of the swarm is the social interaction implicitly encoded in the social network structure. the social network structure is determined by the neighborhood of each particle, within which the particles can communicate by exchanging information about their success in the search space.

the basic pso method initializes the swarm with s uniformly-random positioned particles in the search space. the search for the optimal solution proceeds in iterations. in every iteration, the current position  of the particle x is incrementally updated with the new velocity υ  = x + υ), which on the other hand is updated by using two sources of information. the first one, called cognitive component, reflects the experimental knowledge of the particle, which is its best position xp found so far. the second one, called social component, reflects the local knowledge of the search space obtained from the particle's neighborhood with size k and is represented by xn, the best position found by the neighborhood of particles. the resulting formula for updating the velocity is then υ = υ + c1r <dig> - x) + c2r <dig> - x)), where c <dig> and c <dig>  called acceleration coefficients, are positive real values that balance the influence of the cognitive and the social component, while r <dig> and r <dig> are random factors uniformly sampled from the unit interval that introduce a stochastic component in the search.

the particular version of pso used in our experimental evaluation is a standard variation of the basic pso , which includes only one acceleration coefficient c and an additional mechanism to control the exploration and exploitation in the search space via the parameter w, called inertia weight. the inertia weight basically controls the influence of the previous search direction on the new velocity. at each iteration, each particle chooses a few particles to be its informants, selects the best one from this set , and takes into account the information given by the chosen particle . if there is no particle better than itself, either the informant stays the same , or the informant is chosen randomly . the velocity is updated according to the expression v = wv + g -x + h , ||g - x||), where the function h returns a random point inside the hypersphere with center of gravity g and radius ||g - x||. the center of gravity is defined as .

differential evolution
differential evolution  is a simple and efficient population-based heuristic for optimizing real-valued multi-modal functions, introduced by storn and price in the 1990s  <cit> . it belongs to the class of evolutionary algorithms  based on the idea of simulating the natural evolution of a population p of individuals  via the processes of selection, mutation and crossover.

the main difference between traditional ea and de is in the reproduction step, where for every candidate individual xc an offspring u is created by using a mutated individual υ. the latter is obtained by a simple arithmetic  mutation operation over a set of parents  selected at random or by quality, based on one difference vector, i.e., υ = x <dig> + f·. the rate at which the population evolves can be controlled by a scale  factor f, a user-defined positive real number from the interval  <cit> . to complement the differential mutation strategy, de employs uniform crossover  over the candidate and mutated individual in order to generate the offspring u. a user-specified crossover factor cr ∈  <cit>  is used to control the fraction of parameter values copied from the mutated individual to the offspring. finally, the offspring is evaluated and if its fitness  is better, it replaces the corresponding candidate individual in the population. depending on the specific mutation and crossover procedure, one can chose among several de strategies identified using the name format "de/x/y/z". in the name format, x represents a string denoting the solution to be perturbed: i) a solution randomly chosen from the population ; ii) the current best solution ; or iii) a solution based on the candidate solution combined with a difference vector towards the current best individual , i.e., xc + f·. further, y represents the number of difference vectors considered for perturbation, while z stands for the type of crossover being used that can be exponential  or binomial .

the implementation used in our experimental evaluation is based on the implementation of the de algorithm described in the technical report by storn and price  <cit> , available online  <cit> . it includes  <dig> search strategies, str, enumerated from one to  <dig> in the following order:  <dig> - "de/best/1/exp",  <dig> - "de/rand/1/exp",  <dig> - "de/rand-to-best/1/exp",  <dig> - "de/best/2/exp",  <dig> - "de/rand/2/exp",  <dig> - "de/best/1/bin",  <dig> - "de/rand/1/bin",  <dig> - "de/rand-to-best/1/bin",  <dig> - "de/best/2/bin", and  <dig> - "de/rand/2/bin". as the original code does not check whether the newly generated solutions are allowed, i.e., lie within the prescribed parameter ranges, we slightly modified the code: if the new solution is outside the specified bounds, it is set to the closest range limit.

algorithm 717
algorithm  <dig>  is a set of modules for solving the parameter estimation problem in nonlinear regression models like nonlinear least-squares, maximum-likelihood and some robust fitting problems  <cit> . the basic method is a generalization of nl2sol - an adaptive nonlinear least-squares algorithm  <cit> , which uses a model/trust-region technique for computing trial steps along with an adaptive choice for the hessian model. in fact, nl2sol is a variation of the newton's method , in which a part of the hessian is computed exactly and a part is approximated by a secant  updating method. thus, the algorithm sometimes reduces to the gauss-newton or the levenberg-marquardt method.

in order to promote convergence from poor starting guesses, the algorithm implements the idea of having a local quadratic model qi of the objective function f at the current best solution ci and an estimate of an ellipsoidal region centered at ci in which qi is trusted to represent f. so the next point, ci+ <dig>  or the next trial step, is chosen to approximately minimize qi on the ellipsoidal trust-region. the information obtained for f at ci+ <dig> is used for model updating and also to resize and reshape the trust-region.

among the modules, we can chose the ones for unconstrained optimization, or the ones that use simple bound constraints on the parameters. furthermore, we can choose between modules that involve approximate computation of the needed derivatives by finite differences, and modules that expect the derivatives of the objective function to be provided by the routine that calls them.

in this work, we used the original implementation of a <dig> as available online  <cit> . since a <dig> is not a global search algorithm, we wrapped the original procedure in a loop of restarts with randomly chosen initial points, providing in a way a simple global search. the number of restarts was set to  <dig>  to result in a number of function evaluations comparable to the number used for the other three methods.

parameter settings
in the text above, we described the optimization methods that will be used for parameter estimation in the endocytosis model. among these, the meta-heuristic approaches have many parameters that guide the search and consequently influence the methods' performance. to obtain the best possible performance on a given problem, one should consider a task specific tuning of the parameter setting for the optimization method used . determining the optimal parameter setting is an optimization task in itself, which is extremely computationally expensive.

there are two common approaches for choosing parameters values  <cit> : parameter tuning and parameter control. the first approach selects the parameter settings before running the optimization method . the second approach optimizes the method's parameters along with the problem's parameters.

a detailed discussion and survey of parameter tuning methods is given by eiben and smit  <cit> , who identify sampling methods as one type of parameter tuning methods. sampling methods reduce the search effort by decreasing the number of investigated parameter settings as compared to the full factorial design. two widely used sampling methods are latin-squares and taguchi orthogonal arrays .

in this paper, parameter tuning for the meta-heuristic optimization methods was performed with a sampling method based on sobol' sequences, introduced by sobol' in  <dig>  <cit> . sobol' sequences, sampled from the d-dimensional unit search space, are quasi-random sequences of d-tuples that are more uniformly distributed than uncorrelated random sequences of d-tuples. these sequences are neither random nor pseudo-random, as they are cleverly generated not to be serially uncorrelated, but instead to take into account which tuples in the search space have already been sampled. for a detailed explanation and overview of the schemas for generating sobol' sequences, we refer to press et al.  <cit> . the particular implementation of sobol' sampling used in this paper is based on the gray code order and is available online  <cit> .

the de method has only four parameters, while dasa and pso have more: consequently we chose only four parameters per single method to be tuned. for dasa, we chose the three real-valued parameters that directly influence the search heuristic  and the number of ants , while for pso, we chose the size of the swarm , the size of the neighborhood , the inertia weight , and the acceleration coefficient . the number of sampled parameter settings  per method was  <dig>  due to the stochastic nature of the methods, every parameter setting was used for optimization of the endocytosis model in a multiple-run experimental evaluation that included half a million objective function evaluations. the number of runs was set to eight. the optimal performing parameter setting was chosen based on the median best performance over all runs. a common approach is to use the mean best performance, but we took the median in order to avoid the problems that the mean has when observing large variance in the objective function values across the runs.

the parameters of the three meta-heuristics methods chosen for sobol'-sampling-based parameter tuning and their ranges are summarized in table  <dig>  in the same table, we report the resulting  parameter settings for the three optimization methods. note that the sobol' sampling approach generates number on the unit interval: in order to obtain the parameter settings, we had to map that value on the predefined range of parameter values. for the integer-valued parameters, the mapped value was rounded to the closest integer value. an additional note concerns the upper bound of the parameter k, denoting the size of the neighborhood in the pso method, which can not be larger than the value s -  <dig>  its value was mapped according to the chosen value of the size of the swarm s. in a similar way, the upper bound of the global scale decrease factor s_ is limited by the value of the evaporation factor ρ in the dasa method. finally, note that the parameter tuning was performed on the complete observation scenario using noise-free artificial data. the same parameter settings were then used across all scenarios and all datasets. the parameter settings used in our experimental evaluation are given as follows.

m
Ρ
s
k
w
c
p
st r
f
cr
the table includes the search ranges  for each of the four parameters of each of the three different meta-heuristic optimization methods that were tuned. we used the sobol' sampling procedure with the number of sampling points set to  <dig>  the resulting vector of method's parameters was chosen as the one that showed best median performances  in the multiple-run experiments among the  <dig> sampled parameter settings. a single experiment included eight runs, each performed with half a million of objective function evaluations. the parameter tuning was performed on the complete observation scenario using noise-free artificial data.

dasa setup
the discretization base is set to  <dig>  the maximum parameter precision is set to 10- <dig>  the number of ants is set to  <dig>  the global scale increase factor to  <dig> , the global scale decrease factor to  <dig> , and the pheromone evaporation factor to  <dig> .

pso setup
a variable random topology was chosen, the particle swarm size was set to  <dig>  the neighborhood size to  <dig>  the inertia weight to  <dig> , and the acceleration coefficient to  <dig> . in addition, default settings were used for the remaining parameters related to advanced options not included in the standard pso method.

de setup
the chosen strategy was "de/rand-to-best/1/bin", the population size was set to  <dig>  the weight factor to  <dig> , and the crossover factor to  <dig> .

comparison methodology
to guarantee a fair comparison of the three optimization methods, we ran each method  <dig> times allowing half a million of evaluations of the objective function per single run. we used a number of performance evaluation metrics to compare the utility of the three optimization methods for parameter estimation; the reported method performance is the average/median performance over all  <dig> runs. while the first quality measure is about the convergence rate of the optimization methods, the others focus on the quality of the obtained models.

convergence curves are commonly used for visualizing the convergence rates of optimization methods. they show the change of the value of the objective function with the increasing number of objective function evaluations. each curve in our paper depicts the change of the objective function value averaged over  <dig> runs: the convergence curves are plotted on log-log plots, with a logarithmic scale for both axes in order to be able to capture the convergence trend over a wide range of values.

root mean squared error  measures the difference between output values predicted by the model  and the observed values of the output variables y.

  rmse=1n∑i=1m∑j=1nyi-Ŷi2=1nsse) 

the division by the number of data points and square root in rmse make its measurement units and scale comparable to the ones of the observed output variables. this is in contrast with the sse measure defined with eq. . finally, note that better models have smaller values of rmse.

as defined above, the rmse quality metric measures the degree-of-fit between simulated model output and observed system output. however, reconstruction of system dynamics goes beyond reconstructing output; ultimately, modeling is about capturing the complete  system dynamics. to measure this aspect of reconstruction quality, we have to measure the degree-of-fit between simulated and observed values of the system variables. although this is impossible in real cases where system variables can not be directly observed, experiments with artificial data allow us to measure this aspect of model quality. in this context, we use an additional model quality metric when comparing the methods in the case of artificial data.

the root mean squared error of the completely simulated model  is defined as

  rmsem=1n∑i=14∑j=1nsi-Ŝi <dig>  

where si and  are the values of the system variables from the reference model and the estimated  model, respectively. this metric will allow us to test whether the good quality of the model in terms of outputs is related to the ability of the model to capture the unobserved system dynamics. to represent the distributions of the quality measure values over the  <dig> runs of a specific optimization method on a specific observation scenario and data set, we used box-and-whisker diagrams . they provide a convenient graphical representation of the dispersion, skewness, and outliers in a single given data sample, but also enable a visual comparison of different data samples. the top and bottom edge of the box in a boxplot represent the 25th and 75th percentiles of the sample, respectively; in consequence, the box height corresponds to the interquartile range . the line in the middle of the box corresponds to the sample median. the sample mean is represented with a diamond. the "whiskers", i.e., the two lines extending above and below the box, represent the sample range. the maximal length of the whiskers is set to  <dig> ·iqr. data points above and below the whiskers' end points correspond to the sample outliers and are represented with "+" markers. finally, the notches of the boxes represent the variability of the median in the sample. the width of a notch is computed so that boxplots whose notches do not overlap have medians that are significantly different at the  <dig>  significance level, assuming a normal data distribution. the boxplots presented in this paper were generated using the matlab statistical toolbox  <cit> .

statistical significance testing was performed in order to assess the obtained differences in performance between the four optimization methods. we used the post-hoc multiple comparison holm test  <cit> , according to which we first rank the compared methods based on their performances averaged over all test problems and assign a score ri for i =  <dig>  ..., nm -  <dig>  where nm is the number of methods being compared and i is the appropriate rank . second, we select the method with the best score , r <dig> and calculate the values

  zi=r0-rinm, 

where ntp is the number of considered test problems for each method. finally, we calculate the cumulative normal distribution values pi corresponding to zi and compare them with the corresponding α/i values where α is the significance level, set to  <dig>  in our case. we report the zi, pi, and α/i values in a table, where each row corresponds to one of the methods. the best ranking method, used as reference method, is excluded from the table. based on these values, we can make a decision about the null-hypothesis that "there is no difference in performance between this and the best ranking method".

practical parameter identifiability
the problem of uniqueness of the estimated parameters in a given model is related to the issue of parameter identifiability. we can distinguish between structural and practical identifiability. structural identifiability is a theoretical property of the model structure, depending only on the model input  and output : it is not related to the specific values of the model parameters. the parameters of a given model are structurally globally identifiable, if they can be uniquely estimated from the designed experiment under the ideal conditions of noise-free observations and error-free model structure  <cit> . if the model is not structurally identifiable, one should consider reformulating the model.

even when we deal with a structurally identifiable model, it can still happen that the parameters can not be uniquely identified from the available experimental data. in this case, we experience a practical identifiability problem, related to the amount and quality of available experimental data. practical identifiability analysis can also help us to assess the uncertainty of the parameter estimates and to compare possible experimental designs without performing experiments. parameter uncertainties  may be computed by using the fisher information matrix  or a monte carlo-based approach. details and further references on this topic are given by balsa-canto and banga  <cit> .

we are going to assess the practical identifiability of the parameters in the endocytosis model using the monte carlo-based sampling approach  <cit> . the approach estimates the expected uncertainties of the parameters by re-applying the parameter estimation method to a large number of replicate datasets generated by using different realizations of the chosen experimental noise. in this way, we generate a cloud of parameter estimates that represents the confidence region. based on this cloud of solutions, we can obtain the distribution  of values for each uncertain parameter  and make correlation analysis to determine the most correlated parameters. in contrast to the fim-based approach, that assumes a linearization of the model, the monte carlo approach estimates are reliable also for highly non-linear models or very large parameter uncertainties. the generality of the monte carlo approach, however, comes at a high computational cost. for the specific task of modeling endocytosis, we generated one thousand datasets by simulating the model with the reference parameter values and adding gaussian noise. given a percentage of a relative noise level s, we calculated the noisy value as ynoisy = y ), considering a noise level of 20%. we estimated the parameters of the model using these datasets, and collected the estimates for outlier examination and further statistical analysis. we followed the same procedure as described by joshi et al.  <cit> , according to which outliers are data points that do not belong to the interval , where q <dig> and q <dig> represent the 25th and 75th percentiles of the sample, respectively. the detected outliers are removed: more precisely, the new  sample includes only the estimates obtained from those datasets that did not produce any outlier over all parameters. the distributions of the parameters are presented with histograms, including the corresponding 95% confidence intervals ci: these are calculated as the length of the interval between the  <dig> th and  <dig> th percentile of the sample. the width of the bins h for a single histogram is calculated according to the freedman-diaconis rule  <cit> ,

  h=2⋅iqrns <dig>  

where iqr is the interquartile range of the sample and ns is the sample size.

based on the outlier-free samples of parameter estimates, the correlation of two model parameters ci and cj in terms of a linear dependence is calculated based on the pearson correlation coefficient  <cit>  according to the formula

  r=∑k=1nsc˜ikc˜jk-nsμc˜iμc˜jnsσc˜iσc˜j, 

where  and  are the mean and the standard deviation of the vector  with estimates of the ci parameter, while  and  are the mean and the standard deviation of the vector  with estimates of the cj parameter. a correlation of  <dig>  means perfect positive  linear relationship between the two parameters.

RESULTS
endocytosis model
this work addresses the task of parameter estimation in a practically relevant model of endocytosis, i.e., the life-cycle of endosomes. endosomes are membrane-bound intracellular components that typically encapsulate, transport, and disintegrate external cargo within cells. the model at hand focuses on the process of endosome maturation, representing it by a cut-out switch between the concentrations of rab <dig> and rab <dig> domain proteins  <cit> . the theoretical and experimental approach  <cit>  undertaken to model the endocytosis rely on the mutual exclusiveness of the rab <dig> and rab <dig> domains. early endosomes have with high rab <dig> and low rab <dig> concentrations, while late or mature endosomes have low rab <dig> and high rab <dig> concentrations. the transition from the early to the mature state is rapid.

to model the rab5-to-rab <dig> conversion, we distinguish between active and inactive  states of the rab <dig> and rab <dig> domain proteins. thus, the ode model involves four system  variables corresponding to the concentrations of rab <dig> domain proteins in inactive  and active state  and rab <dig> domain proteins in inactive  and active state , measured in mol/l. these four species  are involved in ten different biochemical reactions υ <dig>  ..., υ <dig> parameterized with eighteen constant parameters c <dig>  ..., c <dig> corresponding to the kinetic rates of the reactions, leading to the following structure of the model odes:

  ddtr5=v1+v7+v9-v2-v3ddtr5=v2-v7-v9ddtr7=v4+v10-v5-v6-v8ddtr7=v5+v6-v <dig>  

here, υ <dig>  ..., υ <dig> denote the kinetic models of the corresponding biochemical reactions, given below:

  v1=c1v2=c2r51+e)c4t100+tv3=c5r5v4=c6v5=c7r7r7c8c9+r7c8v6=c10r71+e)c12v7=c13r51+e)c15v8=c16r7v9=c17r5v10=c18r <dig>  

note that all variables in the model are system variables, i.e., s = {r <dig>  r <dig>  r <dig>  r7} and there are no exogenous variables, i.e., e = ∅.

  c1= <dig> c2= <dig> c3= <dig> ,c4= <dig> ,c5= <dig> c6= <dig> ,c7= <dig> ,c8= <dig> c9= <dig> ,c10= <dig> ,c11= <dig> c12= <dig> c13= <dig> ,c14= <dig> ,c15= <dig> c16= <dig> ,c17= <dig> ,c18= <dig> , 

and initial values of the state variables set to

  r5=r7=1mo1∕ <dig> r5=r7= <dig> mo1∕ <dig>  

as proposed by del conte-zerial et al.  <cit> . note that the behavior of the concentrations of the active-state proteins r <dig> and r <dig> follow the expected  cut-out switch from high rab <dig> and low rab <dig> to low rab <dig> and high rab <dig> concentrations, while the concentrations of the passive-state proteins r <dig> and r <dig> remain almost constant throughout the whole process, with a small but notable change at the transition point.

in sum, the task of parameter estimation in the rab5-to-rab <dig> cut-out switch model leads to a 22-dimensional continuous minimization problem with  <dig> dimensions corresponding to model parameters and four dimensions corresponding to the initial values of the four system variables. the objective function, sum of squared errors ) between the observed and predicted values of the system output, is minimized with respect to the given data, subject to the structure of the odes of the rab5-to-rab <dig> conversion model  and ) and the following bound constraints on the values of the constant parameters and protein concentrations: ci ∈  ≥  <dig>  r <dig>  ≥  <dig>  r <dig>  ≥  <dig>  and r <dig>  ≥  <dig>  to calculate the objective function, we perform ode integration. despite the fact that we use advanced adaptive-step integrators, for some parameter sets the ode integration can fail, due to the discontinuities in the model dynamics: in that case or in the case of violation of the basic constraint about non-negative values for the simulated protein concentration, we simply discard the respective solution .

in order to evaluate the performance of different parameter optimization methods on this task, we conducted experiments with artificial data, obtained by simulating the rab5-to-rab <dig> conversion model, and with real data from experimental measurements.

data
artificial  data
we generated the artificial data by simulating the ode model from eqs. - at  <dig> equally spaced time points inside the interval  <cit>  seconds. to obtain more realistic artificial data, we added a normal gaussian noise n to the noise-free simulated data. given the percentage of a relative noise level s, we calculate the noisy data as ynoisy = y ). in our experiments, we use two noise levels of 5% and 20%. note that the noise-free data correspond to the noise level of 0%.

measured  data
in the second set of experiments, we used the real time-course measurements from del conte-zerial et al.  <cit> . the measurements are taken following a complex procedure, where a number of endosomes were followed in three independent experiments for rab <dig>  and one for rab <dig> . experimental data for different endosomes were manually aligned around the conversion point, scaled, and averaged at  <dig> time points in the interval of  seconds, where time point  <dig> corresponds to the conversion point. note however, that due to physical limitation of the measurement experiments, only the total concentrations of the active and inactive rab <dig> and rab <dig> domain proteins could be measured, leading to a complex observation scenario with the following two output variables y <dig> = r <dig> + r <dig> and y <dig> = r <dig> + r <dig> 

observation scenarios
the limited measurability of the system variables in the real-world measurement scenario, described above, represents one of the most challenging properties of the parameter estimation task addressed in this paper. to evaluate the impact that the limited observability has on the difficulty of the optimization task , we define here four observation scenarios, ranging from the simplest one that assumes that all the system variables can be directly measured to the most complex one that corresponds to the limitations of the real measurement process described in the previous paragraph.

complete observation 
in this scenario, we assume that all the system variables are directly observed, meaning that the measurement process can identify the four concentrations of active and inactive states of the rab <dig> and rab <dig> proteins at each time point, i.e., y <dig> = r <dig>  y <dig> = r <dig>  y <dig> = r <dig>  and y <dig> = r <dig> 

active-state protein concentration observation 
here, we assume that only concentrations of the active-state proteins can be observed, i.e., y <dig> = r <dig> and y <dig> = r <dig>  this scenario is simpler than the real one. since we can measure total  protein concentration and the passive-state protein concentrations are expected to be constant most of the time , this scenario is based on a reasonable assumption.

total protein concentration observation 
this scenario represents the real measurement process outlined above, where y <dig> = r <dig> + r <dig> and y <dig> = r <dig> + r <dig> 

neglecting passive-state protein concentration 
this is the scenario based on how the measurements are  matched against model simulations by del conte-zerial et al.  <cit> . in this case, we observe the total protein concentrations, i.e., y <dig> = r <dig> + r <dig> and y <dig> = r <dig> + r <dig>  but we match them against concentrations of the active-state proteins predicted by the model, i.e.,  and . the rationale for this scenario is the same as for the second one  and it is included here to match the procedure used by del conte-zerial et al.  <cit> .

parameter estimation with artificial data
given the artificial data described above , we can calculate the value of the objective function at the reference point for each noise level and observation scenario: these are reported in table  <dig>  note that the value of the objective function at the reference point, when considering noise-free data, is zero, while in the case of noisy data it increases and becomes greater than zero. the exception to this rule is the npo observation scenario used in del conte-zerial et al.  <cit> , where the authors assume that the concentrations of passive-state proteins can be neglected when fitting the data. this assumption is obviously implausible, since it leads to large values of the objective function, even in the case of noise-free data.

the reference model was used for generation of the artificial data.

let us now consider the rmse performance of the four parameter estimation methods  on the artificial datasets with three levels of noise  under the four observation scenarios . figure  <dig> summarizes the rmse performance with boxplots over the  <dig> runs of each methods. the  <dig> graphs on the figure correspond to the four observation scenarios  and three artificial datasets , where each graph depicts the performance comparison of the four parameter estimation methods. the graphs show that the median performance of a <dig> is significantly worse than the performance of the three meta-heuristic methods. the comparison among the latter indicate that the median rmse performance of de is significantly better than the performance of dasa and pso. these findings hold in all observation scenarios and at all noise levels. the performance comparison among different levels of noise shows a systematic decrease of the rmse performance with the increasing noise level. the noise in the data affects the performance of all methods in all observation scenarios, but the magnitude of the effect differs. while we observe very large and remarkable differences in performance of the meta-heuristics methods in the noise-free case, there is much less difference in performance on the noisy datasets.

the comparison among observation scenarios shows that the co and ao scenarios are very similar: they induce an identical ranking of the optimization methods in terms of performance at all noise levels. the rankings are slightly different  in the case of to, and quite different in the implausible scenario  of npo. as the noise level increases, the ao scenario seems to become an easier task than the co scenario leading to much better optimum values of rmse, while the co scenario becomes very similar to the to scenario. in the npo case, all four optimization methods overfit the observed output, leading to values of the objective function that are smaller than the value at the reference point from table  <dig>  note also that the pso and de methods lead to a higher variance of rmse across the different runs in the to and npo scenarios. overall, the rmse performance metric does not provide a clear and unified conclusion about the relative difficulty of the parameter estimation task under different observation scenarios.

however, comparing the rmsem performance, i.e., the quality of the complete model reconstruction, leads to much clearer conclusions about the relative difficulty of the four observation scenarios. figure  <dig> summarizes the rmsem performance. as one would expect, the easiest optimization tasks stem from the co scenario, since in this scenario all the system variables are directly observed. however, note that the to scenario, corresponding to the real biochemical measurement process, although complex  compares favorably to the other two scenarios in terms of complete system dynamics reconstruction. this can be explained by the fact that the observed outputs in the to scenario carry more information about the system  than the observed outputs  in the ao or npo scenarios. the higher variance and evident outliers in the rmsem values associated with the ao and npo scenarios confirm that incomplete and/or misinterpreted measurements lead to more difficult optimization tasks. in the co and to scenarios, the performance in terms of rmsem of the four optimization methods follows a similar pattern as the one for the output reconstruction  reported above: a <dig> is clearly and significantly inferior to the other methods, while de is better than dasa and slightly better than pso. in the other two scenarios , there is no significant difference in performance between all four methods: pso is handling the ao scenario slightly better than the other methods, while a <dig> performs better compared to the other methods  in the case of the npo scenario when considering data with 5% noise.

the convergence curves in figure  <dig> further confirm that de is the most suitable method for parameter estimation in the endocytosis model for the given amount  of function evaluations. de has faster convergence than dasa and pso over all scenarios when considering noise-free data: in the co and the to case this is clear after  <dig> thousand evaluations, while in the ao and npo case de outperforms the others after one hundred thousand evaluations. the convergence rate of de and the other methods is notably influenced by the noise level: regardless of the observation scenario, at 20% noise level there is no difference in the convergence rates of dasa, pso, and de, and it is clear that all methods  have extremely slow convergence and seem to be trapped in local optima. moreover, when comparing dasa and pso, the convergence plots show that dasa is better in the to and npo scenario, while pso has better convergence in the co and ao scenario. a <dig> is clearly showing the poorest convergence, which is very little affected by the different observation and noise scenarios.

in order to assess the statistical significance of the differences in performance across all scenarios, two holm tests were conducted using first the median values of rmse and then the median values of rmsem. the corresponding median values are given in table  <dig>  while the results of the holm tests regarding both metrics are reported in table  <dig>  in terms of output reconstruction , de is the best ranked method that significantly outperforms the other three methods at the  <dig>  significance level. in terms of complete system dynamics reconstruction , pso is the best ranked method that significantly outperforms a <dig> at the same significance level, while the advantage over dasa and de is not statistically significant. finally, we check whether good output reconstruction is related to good overall system dynamics reconstruction, which is of central interest to the modeler. in table  <dig>  we check the validity of the conjecture that "best according to the output reconstruction is best according to the complete model reconstruction". for each model, simulated with the best parameter estimates obtained by a single method in a single case , we report the corresponding rmse and rmsem values and expect that the optimization method that led to the best rmse  would also lead to the best rmsem . this is trivially true in the co scenario, where rmse equals rmsem, hence at all three noise levels de leads to best rmse and rmsem. in the npo scenario, this never happens, since dasa and pso estimates lead to best rmsem at different noise levels. in the other two scenarios, ao and to, only at one out of three noise levels, de leads to best rmse and rmsem; at the other two noise levels, the other meta-heuristic methods lead to best rmsem. in sum, only in two out of nine non-trivial cases, models that perform best with respect to rmse lead also to the best rmsem performance.

the table presents the median values of rmse and rmsem  of the models reconstructed with the parameters' estimates obtained by the three optimization methods from artificial data. the best values for both metrics are given in bold.


i
zi
pi
zi
pi
the table summarizes the outcome of the holm test performed on the median values of the rmse and rmsem results obtained by parameter estimation with the four optimization methods from artificial data. in the first test based on median values of the rmse measure, de is the reference method with rank i =  <dig>  in the second test based on median values of the rmsem measure, pso is the reference method with rank i =  <dig>  the hypothesis "there is no difference in performance between de  and the i-th ranked method" is rejected if the statement pi <α/i holds.

the table presents the rmse and corresponding rmsem values for the model simulated with the best parameters obtained by parameter estimation with the four optimization methods from artificial data. the best values for rmse are marked in bold, while the best values for rmsem are marked in italic.

parameter estimation with measured data
the table presents the rmse values associated with the predicted models  obtained by parameter estimation with the four optimization methods from measured data. the best values regrading all statistics are given in bold.

the results on measured data confirm the findings of the experiments performed on artificial data. de consistently leads to models with smallest rmse , regardless of whether we consider the best, median, worst, or average rmse . the boxplots clearly show the statistical significance of the performance differences between the four methods. dasa is the second best method, pso is ranked third and a <dig> is ranked as the worst performing method. the observation about the higher variance of the rmse values obtained by the pso method in the to and npo scenarios with artificial data is confirmed in the experiments with measurement data. in the case of measured data, there is a very similar error distribution  in both scenarios , while in case the of artificial data, the npo scenario is characterized with higher rmse errors than the to scenario. the error distribution in the measured data case is closer to the error distributions generated when considering artificial data with a noise level of 5%. similarly, the convergence curves in figure  <dig> resemble the ones for artificial data, i.e, the de method converges faster to better solutions than the other three methods.

as a final test of the quality of the obtained models, we can visually compare the observed outputs with the outputs predicted by the models. in this context, figure  <dig> visualizes the simulated output vs. the measured output  and the complete dynamic behavior of all the system variables  for the two models corresponding to the best parameters estimated by dasa and de for the to scenario. additional file  <dig>  figures s1-s <dig> depict the predicted dynamics of the best model vs. the real-experimental behavior of the rab5-to-rab <dig> conversion for the to and npo scenarios found by dasa, pso, de, and a <dig>  respectively. since the time scale in the measured data was shifted for the sake of synchronization of the conversion events of rab <dig> and rab <dig> domain proteins, we rescaled it in order to conduct a direct comparison of the numeric simulation  with the measured data: we used the transformation t ← 4t +  <dig> 

the left-hand side graphs in additional file  <dig>  figure s <dig> show that a <dig> fails to reconstruct the rab5-to-rab <dig> dynamics. in both observation scenarios, a <dig> fails to find a model with the cut-out switch behavior observed in figure  <dig>  on the other hand, dasa, pso, and de, when following the to scenario, are able to almost perfectly reconstruct the real-experimental data , complete with the time point when the switch in the total  protein concentrations occurs. in the npo scenario, dasa, pso, and de are also able to almost perfectly match the 'assumed' model output  against the measured system output , but if we compare the model outputs, we can see that only de is able to reconstruct the cut-out switch , while dasa and pso are only able to fit one protein domain, due to the completely different dynamics of the simulated passive-state protein concentration .

finally, the analysis of reconstructed model dynamics  of the obtained models reveals further details about their quality. note first that the simulated behavior in figure  <dig> shows that the passive-state protein concentrations are almost constant all the time, leading to the conclusion that the cut-out switch appears at the very same time point for both total and active-state protein concentrations. for the to scenario, only the model obtained with dasa has these two properties of the original model behavior , while in the npo scenario this holds for the model obtained by de . all the other models do not match one or both properties: the complete simulation graphs show that the concentrations of passive-state proteins vary and/or the switch of the active-state concentrations takes place at a different time point . further comparison of the simulated behaviors with the original cut-out switch model behavior from figure  <dig> also shows that the ratio between the active- and passive-state protein concentrations in the simulation of the model obtained with dasa in the to case is closer to the same ratio in the original model.

overall, the results on measured data show that all three meta-heuristic methods are far better than a <dig>  among the meta-heuristic methods, de has a clear advantage over the other two methods, both in terms of the convergence rate and in terms of the reconstruction of model output. in terms of other relevant qualitative aspects of the behavior of the obtained models, i.e., the time point of the switch and the ratio between active- and passive-state protein concentrations, one of the other two methods  performs better then de. however, note that these qualitative aspects have not been included in the objective function  used by the optimization methods: thus, we cannot objectively and fairly compare the methods along this dimension.

parameter values and practical parameter identifiability

c
best parameters' values as estimated by the four optimization methods from artificial data with 20% relative noise in the co and to observation scenarios.

evidently, many quite different sets of parameter values produce behaviors that resemble the reference model behavior, suggesting that the endocytosis modeling task, as many others in system biology, has parameter identifiability problems. indeed, a systematic study of seventeen system biology models  <cit>  has found parameter identifiability issues in each of them. to empirically confirm this conjecture about our model, we performed a practical parameter identifiability test using the monte carlo-based approach and de as a parameter estimation method. we considered this test in three observations scenarios, co, ao, and to, using data with 20% noise. the results of the test in the different observation scenarios confirm that the considered parameter estimation task has identifiability issues. the results reveal high relative errors; the mean value of the estimated parameters are overall far from the reference ones. except for the parameters c <dig>  c <dig>  c <dig>  c <dig>  c <dig>  r <dig>  and r <dig>  the relative error of the other estimated parameters is over 100%. this observation additionally re-confirms the statements in the previous paragraph obtained form the results regarding all optimization methods. in extreme cases, the relative errors are over 1000%, as it is the case with the parameters: c <dig> , c <dig> , r <dig> , and r <dig> . furthermore, the calculated uncertainties  of the parameters are large, especially for c <dig>  r <dig>  and r <dig> over all scenarios; see additional file  <dig>  tables s6-s <dig> that summarize the results of the monte carlo-based approach for the co, ao, and to scenario, respectively.

furthermore, the estimated values for many model parameters are evenly distributed across the parameter ranges; see the histograms of the distributions of the estimated parameter values in additional file  <dig>  figures s5-s <dig>  if we take a look at the histograms for the co scenario, we can see that parameters like c <dig>  c <dig>  c <dig>  c <dig>  c <dig>  and c <dig> have very similar  uniform distributions with higher concentration of the estimates on the bounds of the allowed range. we observe similar distributions for most of these parameters in the ao scenario , r <dig>  c <dig>  and c16) and in the to scenario  as well. for some parameters  the confidence interval does not include the reference value of the parameter, emphasizing the complexity of the optimization problem and the objective function. a closer look at the histograms reveals that some pairs of parameters have very similar  distributions of the estimates: this is in general the case with the  and  pairs of parameters. note also how the distributions of the initial values of the system variables r <dig> and r <dig> differ among scenarios. in the case of complete observability, their values follow  a gaussian distribution around the reference value. in the to scenario, most of the estimated initial values are in the neighborhood of the reference values even though the relative errors are higher than in the co scenario. however, in the ao scenario, the distribution does not resemble a gaussian; the values are spread all over the corresponding ranges, with higher concentrations at the ranges' limits and far from the reference values. evidently, the lack of information on the concentration of passive-state proteins  in the data worsens the problems related to parameter identifiability. the correlation matrices for the estimated parameter values, presented in figure  <dig>  re-confirm the practical identifiability problems, by emphasizing several pairs of correlated parameters. in the co scenario, there are seven pairs of highly correlated parameters: a correlation r >  <dig>  is evident for the , , , and  pairs of parameters, while the pairs , , and  have correlations in the range  <dig>  < |r| <  <dig> . in the ao scenario, the most correlated are c <dig> and c <dig>  while in the to scenario there are six such pairs: the pairs , , and  have almost prefect linear correlation r >  <dig> , while the , r5), , and  pairs have a correlation in the range  <dig>  < |r| <  <dig> . in the last case, the correlation between the initial values of passive-state and active-state protein concentrations is expected, since we only observe their sum in the to scenario. the high pairwise correlations can be observed visually in figure  <dig>  where the scatter plots of the obtained solutions are combined with the contour plots of the objective function landscape for selected pairs of parameters. for example, observe the long diagonal valley with many  equally good solutions for the  and  pairs of parameters in figure  <dig> a  and figure  <dig> c . we observe a similar pattern of behavior for these pairs of parameters in both the co and to scenarios; see additional file  <dig>  figures s <dig> and s <dig>  figure  <dig> b, corresponding to the ao scenario, confirms that the objective function is characterized with elongated elliptical contours for the parameter pairs  as well. while the above-mentioned examples of correlated parameters are related to the lack of practical identifiability, the plot for the c <dig> and c <dig> parameters on the right-hand side in figure  <dig> a  indicates structural non-identifiability of c <dig> in the considered search interval; we observe a very large flat region in the part of the space  <dig>  <c <dig> <  <dig>  where c <dig> can take any value and does not influence the objective function. a similar observation holds for the c <dig> and c <dig> parameters in figure  <dig> b , in which case the c <dig> parameter seems to be structurally non-identifiable. finally, the right-hand side plot in figure  <dig> c re-confirms the correlation of the initial conditions:  and r5).

CONCLUSIONS
in this paper, we address the task of parameter estimation in models of the dynamics of biological systems as considered in the field of system biology. in this context, it is typical that the considered models are nonlinear , have many parameters , the measurements are imperfect , the system can be only partially observed . these properties make parameter estimation a challenging optimization problem, calling for the use of advanced optimization methods.

the focus of this paper is the use of meta-heuristic optimization methods for parameter estimation in dynamic system models typical of systems biology. we conduct an extensive experimental comparison of four optimization methods: the differential ant-stigmergy algorithm , particle-swarm optimization , and differential evolution , all from the same class of meta-heuristic methods, as well as a local-search derivative-based method . we compare these four methods as applied to a parameter estimation problem representative of the target class of problems described above. we use a a practically relevant model of endocytosis that captures the nonlinear dynamics of endosome maturation reflected in a cut-out switch transition between the rab <dig> and rab <dig> domain protein concentrations. the model is nonlinear and has many parameters. we compare the performance of the four optimization methods on this task along a number of dimensions, including the quality of reconstructing the observed system output  and the complete model dynamics , as well as the speed of convergence. comparisons are made under different observation scenarios . we use both real  data, containing partial observations of the system, and pseudo-experimental  data obtained by simulating the model and adding different amounts of artificial noise: the use of pseudo-experimental data allows us a more controlled study of the influence of noise and observability on the performance of the parameter estimation .

noise in the measurements does influence the performance of the optimization methods, with higher amounts of noise making the task more difficult. the observability of the system , has a much stronger influence, where less complete observations make the optimization task much more difficult. worst results are obtained when the observations are misinterpreted, i.e., when the actual total concentrations of rab <dig> and rab <dig> are taken to represent the concentrations of these proteins in their active states.

we also investigate the practical identifiability of the model parameters: like many similar tasks in systems biology, the task considered has parameter identifiability problems. these are manifested by high relative errors of the reconstructed parameter values, spread uniform-like distributions of some parameter estimates, and strong correlations between some pairs of estimated parameters. the problems are present in all observation scenarios and are most severe in the case of incomplete observations. the performance of all three meta-heuristic methods is affected by these problems. on the other hand, this explains the severe difficulties that the local search method  experienced on the given parameter estimation task. overall, the global meta-heuristic methods  clearly and significantly outperform the local derivative-based method . among the three meta-heuristics, differential evolution  performs best in terms of the objective function, i.e., the quality of reconstructing the expected output, and in terms of the speed of convergence. these results hold for both real and artificial data, for all observability scenarios considered, and for all amounts of noise added to the artificial data. in terms of the quality of reconstructing the complete model dynamics and other qualitative aspects of the behavior of the obtained models, the different meta-heuristic methods exhibit different behavior and relative performance under different conditions: more work needs to be done to better understand and objectively evaluate these differences in performance.

further work is needed to confirm and strengthen the conclusions drawn from the experimental evaluation presented in this paper, primarily in the direction of conducting additional experiments. on one hand, we need to test the optimization methods on other tasks of parameter estimation in nonlinear models of biochemical kinetics. on the other hand, we can extend the set of optimization methods applied to the parameter estimation tasks, considering other state-of-the-art algorithms used for parameter estimation in the domain of computational systems biology  <cit> .

last, but not least, we need to formalize relevant qualitative aspects of model quality  and include these in the formulation of the optimization problem of parameter estimation. these aspects will typically depend on domain knowledge about the particular problem at hand and can be made a part of the overall objective function or formulated as a separate objective function in a multi-objective optimization setting. this will allow us to objectively and fairly evaluate and compare the different optimization approaches from these aspects.

in sum, the bio-inspired meta-heuristic optimization methods considered are suitable for estimating the parameters in the ode model of the dynamics of endocytosis under a range of conditions. the model considered, as well as the observational conditions  are representative of parameter estimation tasks in ode models of biochemical network dynamics. thus, our results point out and clearly highlight the promise of bio-inspired meta-heuristic methods for solving problems of parameter estimation in models of dynamic systems from the area of system biology.

authors' contributions
sd and jŠ initiated the work, pk and kt implemented and adapted the optimization algorithms. kt performed the experimental evaluation of the algorithms and drafted the manuscript. lt, sd, and jŠ gave kt valuable advice on a variety of issues related to the manuscript revisions. all authors read and approved the final manuscript.

supplementary material
additional file 1
supplemental information. this file contains figures s1-s <dig> and tables s1-s <dig> with results obtained from parameter estimation in the rab-to-rab <dig> conversion model. experimental behavior vs. simulated behavior of the reconstructed output and reconstructed model dynamics with the best parameters estimated by dasa , pso , de , and a <dig>  using measured data. relative errors of the best estimated parameters by dasa , pso , de , and a <dig>  using artificial data. parameter values associated with the best solutions estimated using measured data . summary of results on the de estimated parameters with the monte carlo-based approach using data with 20% noise in three observation scenarios: co , ao , and to . corresponding histograms of the de estimated parameters with the monte carlo-based approach using data with 20% noise: co , ao , and to . scatter plots of the monte carlo-based de parameter estimates combined with contour plots of the objective function when considering data with 20% noise for the most correlated pairs of parameters in the co , ao , and to  observation scenarios.

click here for file

 acknowledgements
the real experimental data  come from the group of marino zerial at the max-planck institute for cell biology and genetics in dresden, germany. thanks to perla del conte-zerial and her coworkers for providing these data and the cut-out switch model used in this study. we would especially like to to thank yannis kalaidzidis for the invaluable discussions and feedback on the preliminary experimental results. finally, the first author would like to acknowledge the support of the slovenian research agency through the young researcher grant no. 1000-06- <dig> 
