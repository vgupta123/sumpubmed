BACKGROUND
some interesting structural, functional, and evolutionary properties of proteins can be inferred from knowledge about the existence and the precise location of disulfide bridges. since most of the proteins inferred from genomic sequencing lack this structural information, the ab-initio prediction of disulfide bridges from protein sequences can be very useful in several molecular biology studies. this computational problem has received significant attention during the last few years and a number of prediction servers have been recently developed  <cit> .

typical approaches predict disulfide bridges by solving two separate sub-problems. first, cysteines are partitioned into two groups: half-cystine  and the rest . membership in one of the two groups is predicted by a binary classifier trained on known cases. second, given known bonding state, disulfide bridges are assigned by predicting which pairs of half-cystines are linked. the latter sub-problem is considerably more difficult from a machine learning perspective as it requires methods capable of predicting structured outputs. a noticeable exception to the two-stage approach was recently proposed in  <cit> . the main novelty in that method is the use of a recursive neural network that can predict the bonding probability between any pair of cysteines, so that bridges can be predicted directly from sequence .

methods for solving the bonding state sub-problem have been developed after fiser et al.  <cit>  first noted that amino acid composition around cysteines could predict their disulfide-bonding state. neural networks were applied later by fariselli et al.  <cit>  and by fiser & simon  <cit> , using multiple alignment profiles in a window centered around the target cysteine. mucchielli-giorgi et al.  <cit>  introduced the idea of adding a global descriptor  to improve prediction accuracy. ceroni et al.  <cit>  proposed a method based on string kernels , vector kernels for handling local features, and supervised learning by support vector machines . the subsequent improvement described in  <cit>  uses recurrent neural networks and viterbi decoding to convert single predictions into a collective bonding state assignment for all the cysteines in a chain. song et al.  <cit>  applied a linear discriminant using dipeptides as features. martelli et al.  <cit>  suggested the use of hidden markov models to refine local predictions obtained via neural networks. chen et al.  <cit>  used an ensemble of support vector machines trained with different feature vectors refined by a linear-chain markov model. in essence, state-of-the-art methods start by predicting the bonding state of each cysteine and then use a refinement procedure to improve chain prediction. concerning bonding state prediction, in this paper, we show that  a much simpler technique based on binary classification of chains allows us to achieve the same levels of cysteine level accuracy, and  prediction errors obtained in this way do not completely overlap with those of our previous method  leaving room for accuracy improvement by exploiting a combination of the two classifiers.

the disulfide connectivity sub-problem was pioneered in  <cit>  with a method based on weighted graph matching. vullo & frasconi  <cit>  introduced the use of multiple alignment profiles by means of recursive neural networks . taskar et al.  <cit>  also formulated disulfide connectivity as a structured-output prediction problem and solved it using a generalized large-margin machine. ferrè & clote  <cit>  proposed a feedforward neural-network architecture with hidden units associated to cysteine pairs and inputs encoding secondary structure. they recently extended their method to three-class discrimination   <cit> . tsai et al.  <cit>  confirmed that the profile of distances between bonded cysteines is an important feature for prediction of connectivity patterns and devised a prediction method based on svm and weighted graph matching. zhao et al.  <cit>  observed that the number of observed connectivity patterns is relatively small compared to the number of possible patterns: while a set of 2b cysteines can be potentially arranged in !! = ····3· <dig> ways, only a few dozens of patterns are actually observed. based on this observation they suggested a template-matching approach. a multiclass svm was applied by chen and hwang  <cit>  by considering each connectivity pattern as a distinct class. finally, few recent works proposed more complex architectures. the method by chen et al.  <cit>  is based on a two-level strategy where all cysteine pairs are first classified by an svm and all possible connectivity patterns are subsequently evaluated by second binary classifier that was trained with the correct connectivity patterns as positive examples. lu et al.  <cit>  proposed an ensemble of svms, using features derived from cysteine-cysteine coupling, and a genetic algorithm for feature selection; their method outputs the pattern maximizing the number of predicted pairwise interactions. in this paper, we show that a simple 1-nearest neighbor classifier considering both separation and evolutionary profiles is competitive to all previously proposed approaches, including those based on structured output prediction, with the exception of the most complex multiple stage architectures. the method needs no hyperparameter tuning, an appealing property making it more robust to overtraining. model selection is in fact sometimes difficult to carry out and different choices of hyperparameters  may affect significantly the results obtained in the experiments  <cit> . we hope in this way to provide a method which is less prone to overfitting and instabilities in the estimation of the generalization error.

overview of the proposed methods
we begin by observing that a significant fraction of chains tend to exhibit one of two extreme behaviors with respect to disulfide bridge formation: either no cysteines are bonded, or  all of them are. fiser & simon  <cit>  exploited this fact and showed that a majority voting scheme  was able to improve prediction accuracy. statistics on two data sets  are shown in table  <dig>  this justifies methods that focus on chain rather than cysteine classification. for example, if we classify all cysteines in a chain as disulfide bonded if and only if the chain is predicted to have at least one bridge, we incur in a predictive accuracy penalty of 3% and 6% for the pdbselect and spx- data set, respectively.

statistics for the pdbselect and the spx- data sets. the three types of chains are defined as follows. all: all cysteines are intra-chain bonded half-cystines. none: all cysteines are either free, metal bound, or inter-chain bonded. mix: both cases are present.

the new procedure for obtaining bridge predictions can be shortly summarized as follows . in the first step, a kernel machine is trained to predict if a given chain contains at least one intra-chain bridge. for this task, a chain is represented as a bag of cysteines. the resulting decomposition kernel between two chains is the sum of all the similarities between the amino acid environments around all possible pairs formed by taking one cysteine from each chain. the rationale of this kernel is that a new chain should be similar to a positive chain if it contains at least one pair of cysteine environments which is similar to a pair that is known to form an intra-chain bridge. this kernel is called the all-pairs decomposition kernel  in the remainder of the paper. the experiments reported below are based on this kernel in conjunction with svm. for this purpose, we employed the publicly available software svmlight  <cit> .

in the second step, a set of kernel machines classify chains according to their connectivity pattern. each of these machines focuses on a given number of cysteines. in this case, a chain is seen as a tuple of amino acid environments around its cysteines. the resulting decomposition kernel between two chains is the sum of the similarities between the environments associated with the two cysteines that have the same ordinal number in the tuple. the rationale of this kernel is that two chains should be more likely to fold according to the same disulfide connectivity pattern if they share a similar sequence of cysteine environments. this kernel is called the tuple decomposition kernel  in the remainder of the paper. the experiments reported in the next section use this kernel in conjunction with the cysteine separation profiles  <cit>  to compute distances  for the 1-nearest neighbor  algorithm.

in both the above kernels, the amino acid environments around cysteines are enriched with evolutionary information derived from multiple alignments in order to boost performance.

RESULTS
data preparation
we used three representative subsets of the protein data bank to assess the performance of our kernel methods. a third data set, extracted from the swiss-prot database, was employed in connectivity prediction assuming knowledge of the cysteine bonding state, for the sake of comparing results with respect to previous methods.

pdbselect data set
the july  <dig> pdbselect data set  <cit>  used in this paper contains  <dig>  non redundant chains. during the chain selection process, for any group of chains with homologies, only the one with the best quality was kept. the structures of chains included were determined both using nmr and x-ray crystallography. see  <cit>  for the complete list of chains with explanations. disulfide bridges were obtained by running the dssp program  <cit>  with default options. unresolved residues were labeled as free. in order to reduce noise in the data, we visually inspected protein structures in all cases in which two cysteines were found within a distance of  <dig>  Å, but were not labeled by dssp as being disulfide bonded. in  <dig> cases we over-ruled the dssp assignment from free to disulfide bonding. for the chain classification experiments only proteins with at least  <dig> cysteines were considered, resulting in a set of  <dig>  chains. the final data set with labeling information is available as additional file  <dig> 

spx data set
the data set is described in  <cit>  and available from the dipro website  <cit> . it consists of two sets of chains: one used for the chain classification problem , the other used for the pattern classification problem . the former contains  <dig> chains with at least one intra-chain bridge  and  <dig>  without any intra-chain bridge , for a total of  <dig>  chains. the latter contains  <dig>  chains with at least one intra-chain bridge. positives chains in spx- are less redundant  than those in spx+. a first difference with respect to the pdbselect data set is that no chain in the spx data set contains inter-chain disulfide bonds. a second difference is that disulfide bonds in spx are extracted from the ssbond record of the pdb files  <cit> .

pdb4136
the data set is described in  <cit>  and available from the cyspred website  <cit> . it consists of  <dig>  cysteine containing segments from the crystallographic data of the pdb, with less than 25% sequence identity and no chain breaks. the data set is included for the sake of comparison with the approach by chen et al.  <cit> .

sp <dig> data set
the data set is described in  <cit>  and available as additional file  <dig>  it consists of  <dig> chains from the swiss-prot database release n.  <dig> , having from two to five experimentally verified intra-chain disulfide bridges. the data set has been widely used as a benchmark for disulfide connectivity prediction assuming knowledge of the cysteine bonding state.

in order to incorporate evolutionary information, we obtained multiple alignments by running one iteration of the psi-blast  <cit>  program on the non-redundant  ncbi database using an e-value cutoff of  <dig> . depending on the experimental setting, we have used either position specific scoring matrices  or multiple alignment profiles.

evaluation procedure
bonding state
prediction performance was estimated by a 10-fold cross-validation procedure for pdbselect and spx, while for pdb <dig> we employed a 20-fold cross validation procedure with exactly the same folds as in  <cit> . for each of the folds, we optimized the main hyperparameters  by nesting a 10-fold cross-validation on each training set.

hyperparameters were found by a variable-resolution grid search algorithm in which we started by optimizing on a coarse log-scale and then refined the best set of hyperparameters on a finer scale. in this setting, a significant computational speed-up was obtained by caching the entire kernel matrix in memory.

connectivity patterns
prediction performance was estimated by a 10-fold cross-validation procedure for the spx+ and spx- data sets, while for the sp <dig> data set we employed a 4-fold cross validation procedure with exactly the same folds as in  <cit> . no model selection was carried out to fine tune kernel parameters, as our aim was to show the predictive power of the plainest approach.

performance measures
for binary classification problems, let us denote by tp, tn, fp, and fn the number of true positives, true negatives, false positives, and false negatives, respectively. also let n denote the total number of cases. we report the following measures:

accuracy q = /n;

precision p = tp/;

recall r = tp/.

in the case of bonding state predictions we can define the above measures at different levels:

• cysteine classification measures: qc, pp, rp. these are obtained by counting single cysteines as cases.

• sequence classification measures: q <dig>  p <dig>  r <dig>  these are obtained by counting chains as cases. positive examples are chains having at least one intra-chain bridge and negative examples are all the remaining chains.

performance measures for the disulfide pattern prediction problems are defined as follows:

• pattern prediction accuracy: qp defined as the total number of chains for which the correct pattern was predicted, divided by the total number of chains.

• bridge-level precision pb, defined as the number of correctly predicted bridges divided by the number of predicted bridges, and bridge-level recall rb, defined as the number of correctly predicted bridges divided by the true number of bridges.

binary classification of chains and cysteines
experimental comparison of various algorithms for binary classification of chains. a chain is a positive examples if and only if it has least one intra-chain disulfide bridge. we report two-state prediction accuracy , precision  and recall  on both pdbselect and the spx- data sets.

the last row contains the best results reported in  <cit>  for the dipro predictor on the spx- data set, obtained with a spectrum kernel with mismatches.

the protein chain classification approach can also obtain a good predictive accuracy at the level of single cysteine bonding state. aptk results in table  <dig> were obtained by classifying all cysteines in a chain as a half-cystines if they belong to a chain that has been predicted to have at least one intra-chain bridge. although this approach implies a systematic error on chains of mix type  these cases are not frequent and the overall accuracy is comparable to that of disulfind, as shown in table  <dig>  note that the aptk on chains outperforms d-simple without the need for a complex architectural design. this shows that the chain-level kernel yields better results than the cysteine-level kernel even when the task is the classification of individual cysteines.

                              c
                              c
                              c
                              c
                              c
                              c
                              c
                              c
                              c
experimental comparison of various algorithms for binary classification of cysteines. positive examples are disulfide-bond cysteines. we report two-state prediction accuracy , precision  and recall  on pdbselect, spx- and pdb <dig> data sets.

what is perhaps more interesting, is that a correlation analysis between the errors of the aptk and disulfind reveals that the two predictors disagree on many of the cysteines that are incorrectly classified by one of the two methods . the relatively low correlation between the two methods may be an advantage because we can hopefully boost performance by combining their predictions. indeed, as reported in the last row of table  <dig>  by combining aptk  and disulfind  we gain about one percentage point of accuracy in both data sets. the last columns of table  <dig> report evaluation results on the pdb <dig> data set, which confirm the overall behavior, with the exception that profiles are always as good or better than pssm, and are thus employed in the aptk + disulfind combination. the combination achieves basically the same accuracy as that of the best method from chen et al.  <cit> , which we indicated by multiple svm + css, and shows a more balanced precision/recall ratio.

connectivity prediction for positive chains
                              b
                              b
                              p
                              b
                              b
                              p
                              b
                              b
                              p
                              b
                              b
                              p
chains with at least one intra-chain bridge : comparison between 1-nn, disulfind, disulfind+1-nn and dipro.

by inspecting the overall results  we note that precision and recall levels for bridge prediction are very similar for both 1-nn and disulfind. conversely, dipro has higher recall but lower precision, which is mainly to be due to the higher number of false positives in the case of chains with a single bridge.

note that the bonding state of individual cysteines is unknown in the spx+ data set. thus the 1-nn algorithm is also implicitly solving a bonding state prediction problem . alternatively, the 1-nn classifier can be preceded by an explicit bonding-state predictor. in this case, the tuple-based kernel  as well as the topological features are restricted to those cysteines that are known to be bonded  or that are predicted to be bonded  when computing the nearest neighbor. we employed the first stage of disulfind to this aim, and the results of such a pipeline are reported in the disulfind+1-nn column of table  <dig>  the advantage of this combination is more evident in the case of two and four bridges.

connectivity prediction assuming knowledge of the bonding state
the performance of connectivity prediction methods is often assessed independently of the performance of an underlying bonding state predictor. in order to compare our approach to the literature state-of-the-art, we carried out experiments on the sp <dig> data set, assuming the bonding state was known a priori. results are reported in table  <dig>  in this setting, the number of predicted bridges and the number of true bridges are necessarily the same and, therefore, pb = rb. we also took advantage of bonding state knowledge by slightly changing the tdk that defines distances for the 1-nn classifier to use only bonded cysteines in the summation of equation  <dig> .

                              p
                              p
                              p
                              p
                              p
                              p
results obtained assuming knowledge of the bonding state : comparison between 1-nn, disulfind, dipro, sosvm, csp and svmpattern.

results from 1-nn are compared to those found in the literature for the following single-stage approaches: disulfind  <cit> , dipro  <cit> , taskar et al.'s structured output large margin algorithm  <cit>  , the pattern-wise svm by chen and hwang  <cit>  , while the cysteine separation profile approach  by tsai et al.  <cit>  was reimplemented in order to get results on exactly the same folds. in predicting entire connectivity pattern , 1-nn outperforms all other methods except svmpattern that obtains the same overall results. on the other hand, svmpattern is worse at predicting single pairwise interactions , where sosvm is the only approach achieving slightly better results. the latter, however, requires solving a hard convex optimization problem. it is interesting to note that the accuracy of 1-nn is consistently better than that of all other methods for more than three bridges. this is quite reasonable, as increasing the number of bridges, b, implies dramatically increasing the number of alternative patterns, !!, while lowering the amount of available data as well as the number of observed patterns . such a setting favors 1-nn, which can only predict observed patterns. the small advantage of 1-nn with respect to csp is due to the contribution of the evolutionary profile to the distance metric. in order to elucidate the cases in which this advantage is apparent, we analysed the differences between chains incorrectly predicted by the two methods. the analysis showed that the main reason for the increase in performance of 1-nn is due to correctly predicting the pattern of chains from two families: the alpha-type family in the conotoxin a superfamily, and the alpha subfamily of the sodium channel inibitor family, within the long  scorpion toxin superfamily. note however that in few cases adding the evolutionary profile actually decreased performance with respect to csp, as happened for two chains from the glycosyl hydrolase  <dig> family.

some recent multi-stage architectures  <cit>  outperform the above mentioned methods. however, the aim here is to stress the effectiveness of our method in comparison to the other existing single-stage approaches. by requiring no hyperparameter tuning, it can also be seen as a candidate component that might be more easily integrated into complex architectures.

connectivity prediction from scratch
we finally evaluated the performance of the method in predicting connectivity from scratch, that is assuming no knowledge about disulfide bonding state for a chain. the aptk predictor is employed to predict whether a given chain has at least one intra-chain bridge, while the 1-nn predicts the connectivity pattern for chains predicted to be positive. table  <dig> reports experimental results on the spx- data set for the aptk+1-nn pipeline, compared to disulfind and to the results for dipro as reported in  <cit> , confirming the advantage of the proposed architecture. the only case in which disulfind slightly outperforms aptk+1-nn is when chains have a single bridge. clearly in such a case the pattern prediction problem boils down to that of correctly detecting the two bonded cysteines. the disulfind connectivity predictor is not involved in this case, and 1-nn is only competing against the first stage of disulfind, which is explicitly trained for bonding state prediction. the disulfind+1-nn pipeline combines the advantage of the state-of-the-art bonding state predictions of disulfind with that of the 1-nn, achieving the best performance both overall and for most bridge numbers.

                              b
                              b
                              p
                              b
                              b
                              p
                              b
                              b
                              p
                              b
                              b
                              p
results on the spx- data set: comparison between aptk +1-nn, disulfind, disulfind+1-nn and dipro.

CONCLUSIONS
we have presented a new set of kernel-based methods for predicting disulfide bridges and cysteine bonding state from protein sequences. despite their extreme simplicity, these algorithms compare favorably to most existing techniques proposed in the literature. in the case of cysteine bonding state we have found that the correlation between predictions from the new chain classifier and previous methods  is low enough to allow us improving accuracy by combining the two classifiers. the combination achieves competitive results with the state-of-the-art approaches. concerning connectivity pattern prediction, we found that a simple 1-nearest neighbor approach performs surprisingly well, being outperformed by the most complex multi-stage architectures only. it must be remarked that the algorithm does not need any hyperparameter tuning, which makes it less prone to overfitting and prediction accuracy overestimation, and appealing for prediction of other properties of proteins that are inherently structured. the result is also interesting from a machine learning perspective as it shows that, depending on the probability distribution on the output space, it may be an advantage to employ multiclass classification instead of much more complex algorithms for prediction of structured outputs. different approaches to classification could be used in place of 1-nn. for example, using multiclass support vector machines one could take advantage of a loss function that weights differently prediction errors according to the number of correctly assigned bridges. these variants are currently under our investigation.

