BACKGROUND
microorganisms are widely used for producing antibiotics, therapeutic proteins, food and feed ingredients, fuels, vitamins and other chemicals. currently there is an increasing trend to replace chemical synthesis processes with biotechnological routes based on microbial fermentations. in order to economically produce desired compounds from microbial cell factories it is, however, generally necessary to retrofit the metabolism, since microorganisms are typically evolved for maximizing growth in their natural habitat. retrofitting of microbial metabolism has traditionally been done through classical strain improvement that involved random mutagenesis and screening, whereas in later years rational design strategies based on genetic engineering have been applied with an increasing success – often referred to as metabolic engineering. in metabolic engineering many experimental and mathematical tools have been developed for introducing directed genetic modifications that will lead to desirable metabolic phenotypes resulting in improved production of desirable compounds or in reduced production of by-products  <cit> . until now most of the successes in metabolic engineering have been based on qualitative or intuitive design principles. however, even though there are several success stories in metabolic engineering there are also many attempts that have failed due to the lack of rational strategies based on predictive analysis tools.

microbial metabolism is often subjected to tight regulation and is constrained by mass and energy conservation laws on a large number of intracellular metabolites, and this makes it difficult to predict the effects of introducing genetic modifications in a given cell. moreover, as metabolic pathways and related regulatory processes form complex molecular and functional interaction networks  <cit> , it is only through analysis of the metabolism as a whole in an integrative systems approach  <cit>  that one may evaluate the effect of specific genetic modifications. genome-scale models of microbial organisms  <cit> , comprising different levels of information, primarily on the stoichiometry of the many different reactions but possibly also comprising some information about regulation, could offer a suitable platform for developing systems level tools for analyzing and engineering metabolism  <cit> . although there have been some attempts to simulate dynamic behavior of whole cell systems  <cit> , currently these approaches enjoy limited applicability due to lack of kinetic and regulatory information on the whole genome scale. nevertheless, in absence of kinetic and regulatory information it is possible to at least partly predict the behavior of cellular metabolism by using steady state analysis based on genome-scale stoichiometric models.

genome-scale stoichiometric models represent the integrated metabolic potential of a microorganism by defining flux-balance constraints that characterizes all feasible metabolic phenotypes under steady state conditions. because of the large number of reactions occurring in cellular metabolism, the dimensions of the solution space  defined by genome-scale models  <cit>  is very large. consequently, combinatorial complexity prevents calculation of all feasible metabolic phenotypes that a microbial genotype can assume under a given environmental conditions  <cit> . one of the approaches to determine the metabolic phenotype  is to use flux balance analysis   <cit> . in fba a particular flux or a linear combination of various fluxes  in the model is optimized through linear programming, thus leading to a solution to the fluxes through all metabolic reactions. since several microbial metabolic networks have evolved towards operation of optimal growth rate  <cit> , the use optimization of growth rate is an often applied objective function in fba. there are, however, some other approaches to determine flux distributions, especially for deletion mutants that might not be capable of realizing the same objective function as the wild-type strain  <cit> . nevertheless, all these methods provide a basis for using genome-scale metabolic models to predict possible metabolic phenotypes, and hence for in silico metabolic engineering. however, despite of their potential, genome-scale stoichiometric models have been scarcely used for metabolic engineering purposes.

the algorithm developed by maranas et al.  <cit>   represents one of the first rational modeling frameworks for suggesting gene knockouts leading to the overproduction of a desired metabolite. optknock searches for a set of gene  deletions that maximizes the flux towards a desired product, while the internal flux distribution is still operated such that growth  is optimized. thus the identified gene deletions will force the microorganism to produce the desired product in order to achieve maximal growth. indeed, the design philosophy underlying optknock approach takes advantage of inherent properties of microbial metabolism to drive the optimization of the desired metabolic phenotype. the relation of optknock with the biological objectives of microorganisms makes it an attractive and promising modeling framework for in silico metabolic engineering.

optknock is implemented by formulating a bi-level linear optimization problem using mixed integer linear programming   <cit>  that guarantees to find the global optimal solution. in this report, we extend the applicability of optknock approach by formulating the in silico design problem by using a genetic algorithm , hereafter referred to as optgene. genetic algorithms use the principle of darwinian evolution to search  for the global optimal solution . direct relation of ga with biological evolution makes it a natural method of choice to identify suitable genetic modifications for improved metabolic phenotype. there are two major advantages of the optgene formulation. firstly, optgene demands relatively less computational time and thus it enables to solve problems of larger size. this is of particular importance as the relation between the size of the problem  and the corresponding search space  is combinatorial  . thus, the number of possible combinations of  <dig> reaction-deletions in a model with  <dig> reactions is more than  <dig>  ×  <dig>  whereas existing genome-scale stoichiometric models comprise a significantly higher number of reactions. secondly, the optgene formulation allows the optimization of non-linear objective functions, which is of considerable interest in several problems of commercial interest. one example of an important non-linear engineering objective function is the productivity .

RESULTS
optgene algorithm
two different versions of the optgene algorithm were used in this work, differing mainly on the representation of the metabolic genotype: binary  and integer  representations. the binary form of the optgene algorithm is schematically illustrated in figure  <dig>  and the important steps of both representations are explained in the following.

model pre-processing
since ga do not exhaustively search the complete solution space, it is necessary to avoid local optimal solutions by proper formulation of the problem. we therefore pre-processed the model to remove duplicate and dead-end reactions. also a linear pathway  was represented as a single reaction in ga. moreover, lethal reactions  were not included as the possible targets in ga. this pre-processing step reduced the problem size considerably and thus reduced the number of local optimal solutions .

chromosome representation of metabolic genotype
each reaction in the metabolic model can be associated with one or more genes in the genome. in the binoptgene algorithm each of those genes is represented by a binary variable indicating its absence/presence , and thus a set of these variables forms an "individual"  representing a particular mutant that lacks some metabolic reactions when compared with the wild type . for the intoptgene implementation, the individuals are composed of integer numbers representing only the genes to be deleted, according to their relative order in the metabolic model. this way, the number of genes to be deleted can be directly imposed by changing the size of the individuals. the phenotypes of every individual can be obtained by using fba or other algorithms. the problem then is to find the set of genes to be deleted from an individual so as to obtain a desired phenotype .

initialization of population
the ga begins with a predefined number of individuals, forming a population. in the binoptgene, individuals in the population can be initialized in different ways, e.g. by assigning present/absent status to each gene randomly, or assigning present status to all genes, while in the intoptgene representation, the population is usually initialized randomly.

scoring fitness of individuals
each individual is assigned a fitness score that determines whether it will reproduce and/or propagate to the next generation. the fitness score of an individual is calculated using the desired objective function value. the objective function value can be calculated using fba, minimization of metabolic adjustment   <cit> , regulatory on-off minimization   <cit>  or any other algorithm. the ga by itself is independent of scoring algorithm.

crossover of chromosomes
after the fitness score is calculated for all individuals in the population, the best individuals are selected for crossover. a selection scheme that is most commonly used is the roulette wheel, where individuals are selected based on the magnitude of the fitness score relative to the rest of the population. the higher the score, more likely an individual will be selected. selected individuals are then crossed to produce a new offspring. the crossover methods used in this study were one-point, two-points, and uniform crossover  <cit> .

mutation
individuals propagating to the new population are mutated  with a given probability.

new population and termination
mutation and crossover give rise to a new population, which can then again be subjected to a new round of evaluation, crossover and mutations. this cycle is repeated until an individual with a satisfactory phenotype is found.

we illustrate the principles and utility of optgene algorithm by using three interesting metabolic engineering problems with the yeast saccharomyces cerevisiae, which is one of the most widely used cell-factories. we applied optgene for s. cerevisiae to identify gene-deletion strategies for improving yield and substrate-specific productivity of three metabolites, namely vanillin, glycerol and succinate. the yield of a product  of interest is defined as the grams of product produced per unit gram of the substrate consumed, whereas substrate-specific productivity is defined as the grams of product produced per unit time per unit substrate consumed. it is important to note that models based only on stoichiometry can not predict rates without an assumption of a fixed substrate uptake rate. since the substrate uptake rates for deletion mutants might change substantially and the fact that it is very difficult to predict such changes a priori, in general the productivity can not be optimized by using stoichiometric models. one of the ways to circumvent this problem is to optimize the function . although, this quantity will be equal to the substrate-specific productivity under the assumption of a fixed substrate uptake rate, we will refer to this term as biomass-product coupled yield  rather than the productivity as this may cause confusion . bpcy represents an interesting example of a non-linear objective function that can be optimized by using optgene.

vanillin case study
vanillin is a natural flavor compound extracted from plants and is widely used as a food ingredient. there is some commercial interest in producing vanillin by using recombinant microorganisms and in particular saccharomyces cerevisiae which is a food grade organism. since vanillin is not produced naturally by s. cerevisiae, the corresponding reactions were inserted into the model as suggested by pharkya et al <cit> . then we used optgene to find gene deletion strategies to improve the bpcy as well as the yield of vanillin. we found that it was possible to improve the vanillin yield in silico up to  <dig> % of the theoretical limit by deleting only  <dig> reactions , while keeping the growth rate at 60% of the parental strain. a similar strategy was predicted for a mutant with the maximum bpcy. the suggested strategy diverts the pyruvate flux going to ethanol towards vanillin where nadh is oxidised back to nad+. furthermore, deletion of glutamate dehydrogenase results in an increased availability of nadph needed for vanillin biosynthesis. increasing the allowable number of deletions did not result in substantial improvement in the yield or bpcy.

glycerol case study
currently glycerol is mainly recovered as a by-product from soap manufacturing or produced from propylene and is widely used to synthesize several products ranging from cosmetics to lubricants  <cit> . alternatively, glycerol can also be produced through microbial fermentation using sustainable carbohydrate resources. saccharomyces cerevisiae naturally produces glycerol in small quantities during anaerobic fermentation or under osmotic stress. moreover, glycerol plays an important role in maintaining the cytosolic redox balance under anaerobic conditions and it is therefore interesting to study the effects of gene-deletions on yield and productivity of glycerol. we applied the optgene algorithm to identify gene deletions leading to improved yield and bpcy of glycerol under aerobic conditions, where the maximum theoretical yield of glycerol is much higher as opposed to anaerobic fermentation.

results suggested that no single gene deletion will result in glycerol production, whereas a strategy for double reaction deletion is identified, namely fbp <dig>  and genes encoding glyceraldehyde-3-phosphate dehydrogenase . this strategy makes intuitive sense as reactions that branch the flux away from dihydroxyacetone phosphate  are deleted . with this strategy it is possible to obtain a yield of  <dig>  g/g-glucose with a corresponding growth rate that is 80% lower than the reference strain. increasing the number of deletions up to six did not result in a further substantial increase in the yield. however, interestingly, the bpcy of glycerol improved with the number of deletions allowed. with six deletions, the bpcy reached up to  <dig> mg/g glucose-hr  with a growth rate equal to 50% of that of the reference strain. moreover, the identified deletions for yield and bpcy improvement are different  . notably, the suggested deletions span not only the central carbon metabolism but also extend to amino acid and vitamin metabolism, illustrating the tight links between different metabolic pathways arising from the mass balance constraints. this also illustrates the need for the here reported algorithm which can search this vast solution space efficiently.

succinic acid case study
succinic acid is one of the intermediates of the tca cycle and is an interesting chemical to be used as a feedstock for synthesis of a wide range of chemicals. as a metabolite from the central carbon metabolism, it is a good case study for devising metabolic engineering strategies. multiple gene deletion strategies obtained using optgene algorithm for improving succinic acid yield and bpcy are summarized in table  <dig> 

 <dig> only few of the suggested strategies, with high objective function values are shown. optgene found many strategies with different, but high objective function values. this tendency can be controlled by varying ga parameters.

 <dig> units are: yield in gram - <dig>  biomass product coupled yield in milli-gram -1

 <dig> uniqueness of the solution was verified by first optimizing for the biomass, and then minimizing and maximizing the succinate flux at fixed, optimal biomass value.

firstly, we note that the maximum theoretical yield of succinic acid is  <dig>  g/g glucose  when no biomass is being produced, and that no succinic acid can be produced at optimal biomass growth rate. moreover, no single gene deletion strategy resulted in succinic acid production. for a double gene deletion strategy, deletion of the sdh-complex  and thr <dig>  is predicted to result in a succinic acid yield of  <dig>  g/g glucose, with a 10% reduction in the growth rate. flux re-distribution leading to this improvement in the double-deletion mutant is quite interesting and non-intuitive. deletion or inactivation of the sdh-complex prevents the conversion of mitochondrial succinate to fumarate, while simultaneous deletion of thr <dig> forces threonine synthesis via glycine, which may be formed from glyoxylate. consequently there is increased flux through icl <dig> , thus creating surplus succinate that is secreted by the cell. moreover, this flux re-distribution is also associated with an increased flux through the pentose phosphate  pathway for increased nadph availability. we note that in the mutant with only the sdh-complex deleted, threonine is synthesized via aspartate, which is optimal route for maximizing biomass production. the same double deletion mutant was also predicted to show maximum bpcy .

the search for a triple deletion mutant with maximum succinate yield suggested deletion of the sdh-complex, zwf <dig>  and pfk <dig> . although this resulted in increased prediction of succinate yield , the corresponding growth rate is very low , making this solution unattractive. however, a triple deletion mutant with maximum bpcy  was found to have  <dig> % of the wild-type growth rate and a succinate yield of  <dig>  g/g glucose. the corresponding solution suggested deletion of ser <dig> in addition to the double deletion strategy discussed above. deletion of ser <dig> blocks the synthesis of l-serine via 3-phospho-d-glycerate, which increases the demand on glycine production via glyoxylate. overall, it leads to a further increase in the flux through icl <dig> ensuring a higher flux towards succinate while maintaining a high growth rate. this increase is also associated with a further increase in the flux through the pp pathway.

in spite of a slow growing triple deletion mutant for improved yield, the algorithm found a quadruple deletion mutant with not only improved yield , but also with much higher growth rate, as compared to the triple deletion mutant , and therefore higher bpcy. the suggested genes for deletion are the sdh-complex, zwf <dig>  pdc <dig>  and agp <dig> . deletion of zwf <dig> increases the flux through glycolysis and deletion of pdc <dig> increases conversion of pyruvate to oxaloacetic acid via pyc <dig>  this flux could be directed towards glutamate production and into the tca cycle. but since the sdh-complex is deleted the flux through tca cycle is limited, while deletion of secretion reaction for surplus glutamate forces malate formation from oxaloacetic acid. the flux through malate is then directed to succinate via fumarate. we also searched for a quadruple deletion strategy for maximum bpcy and the algorithm suggested the same deletion strategy as for the maximum yield, with a corresponding bpcy of  <dig> mg/g glucose-hr. this bpcy shows a substantial increase over the bpcy obtained with the triple deletion strategy.

results of a further search allowing more gene deletions, for improvement in yield and bpcy, are summarized in table  <dig>  here we note that it might be difficult to realize some of the suggested optimal strategies in vivo due to a variety of reasons, e.g. regulatory constraints, orphan reactions etc. however optgene provides not only the optimal solution found, but also generates a family of "good" solutions and thus provides many strategies that can be further analyzed manually before experimental verification. some of such alternative solutions are also reported in table  <dig> 

moma approach
the examples discussed above use fba as scoring function to evaluate fitness of an individual in the ga. however, as noted before, the flux distribution of mutants of echerichia coli have been shown to be better approximated by assuming that the fluxes tend to have a minimum distance from wild-type flux distribution, which may not correspond to the flux distribution for maximum growth  <cit> . nevertheless, although this approach, referred to as minimization of metabolic adjustments , might explain the flux distribution of mutants better than fba, such mutants might approach towards fba-predicted optimal solution when evolved under growth pressure  <cit> .

to check whether the two approaches for evaluating flux distributions  result in different predictions for multiple deletion mutants, we used optgene to search for double and triple deletion mutants with improved succinic acid yield and bpcy. the double deletion strategy for obtaining maximum yield with moma includes deletion of fum <dig>  and pda <dig> . this strategy is different from that suggested by using fba, and it also predicts a better yield  for a double deletion mutant. in case of bpcy the moma approach yielded the same productivity, although with different genes . however, an effective comparison of fba and moma for multiple deletion mutants can only be done after experimental evaluation.

significance and effects of different ga parameters
parameterization of stochastic optimization methods like evolutionary algorithms is recognized as a difficult task and for this particular problem only an empirical study of the effect of different parameters was conducted. the main purpose of this parameterization was to be able to obtain a global optimum within a reasonable computation time.

different sizes of the population were tested, and it was found that an increase beyond  <dig> individuals did not improve the results significantly. furthermore, a mutation rate of 1/ was found to be optimal for both representations  .

regarding crossover methods, for the binoptgene representation, one-point, two-points and uniform crossover methods were tested, and the different crossover techniques gave almost the same results, indicating that all approaches are equally good, probably due to their similar operation mode. for intoptgene, only one type of crossover method was tested, namely uniform crossover where a child obtains a gene from each parent with equal probability.

after parameterization, for both representations, and for a typical optimization run, the evolutionary algorithms were able to achieve a solution within  <dig> generation, although the algorithm was allowed to run until  <dig> generations. a typical convergence curve can be found in figure  <dig> 

resemblance to natural evolution
the theoretical foundations of genetic algorithms rely on a notion of short, highly fit schemata, also known as building blocks , that are propagated generation to generation and constitute the basis for the convergence to optimal solutions. for the strain design problem, building blocks can be regarded as subsets of genes in a close position on the individuals of the evolutionary algorithms that, when deleted together, improve process yield or productivity.

the differences on the representation of individuals in both approaches used in this work originate different requisites in terms of the formation of building blocks: as in the binary representation the order of the genes in the individuals follows closely that of the stoichiometric model , only related genes can be a part of the building blocks. on the other hand, for the integer representation any subset of unrelated genes can form a building block. a natural conclusion of this observation is that the more the genes in the metabolic model follow a biological meaningful order, the more similar the binoptgene optimization approach is to a biological evolution of microorganisms under a given selective pressure.

additionally, we observed that if the limitation on the number of genes to be deleted in binoptgene is imposed by using penalty functions after evaluation of individuals, the number of invalid individuals in the population at a given generation is very large and consequently negatively affects the convergence.

nevertheless, in spite of the described differences, and although it is known that usually genetic algorithms do not perform very good for problems of the size found for the binary implementation, similar results were obtained for both approaches, after parameterization. in fact, for the majority of the runs, and with both representations, there was a clear convergence to an optimum , and the solutions found were very similar among all the repetitions . additionally, most of the times the final solution was found very early, indicating that 500– <dig> generations are probably enough for converging to a satisfactory solution. however, by looking at the shape of the convergence curve in figure  <dig>  it is clear that there are several sudden increases in the performance of the best individual, as opposed to the most often observed smooth convergence curves obtained with evolutionary algorithms. these step changes in the objective function value are usually an indication that the optimization is being stopped very prematurely but, as more iterations do not improve the final solution, it is more likely that the problem itself is discrete. in fact, and although additional characterization of the search space is needed, this observation can be explained by the evidence that, when a good candidate for deletion is found, the performance of the best individual in a population increases significantly.

global optimal solution and computational cost
in case of succinate yield optimization, the optimality of the solution found by optgene was verified using exhaustive search with up to  <dig> deletions. in case of bpcy, although the optimal solution for  <dig> deletions represented a global optimum, for a  <dig> deletion case optgene found a sub-optimal solution. however, this solution was quite close to the global optimal solution . with  <dig> deletions the optimal solution found reached quite close to the maximum possible bpcy value. we hereby note that in cases where global optimality can not be directly verified, a good estimate for closeness to the global optimal solution can be found by using a curve similar to that presented in supplementary figure  <dig> . the plot in the supplementary figure  <dig> is generated by fixing the biomass yield at different values and then optimizing for the succinate production.

the computational cost of optgene  was found to be  <dig>  % of that found by using exhaustive search for  <dig> gene deletion case  and  <dig>  % for succinate bpcy case. however, we did not observe any direct correlation between the number of deletions and the computational cost. supplementary table  <dig>  summarizes the computational cost associated with the succinic acid optimization case.

multiple optima
since the flux distribution obtained using fba is not necessarily unique, the objective function value obtained in the fitness evaluation routine may not be unique as well. this is usually due to the possibility of other by-products being formed instead of the desired product . consequently it has an important implication while designing the deletion strategies. such check for uniqueness of objective function can easily be incorporated in the fitness evaluation routine by using flux variability analysis. thus, e.g., an upper and lower bound can be calculated for the product flux at the optimal growth rate. the choice between "pessimistic" and "optimistic" fitness value can be left for the user. however, we note that for the results presented in this study, the solutions obtained were unique as indicated in the last column of table  <dig> 

CONCLUSIONS
we report a ga based framework termed optgene for designing microbial strains in silico. optgene presents two major advantages, higher speed and ability to optimize for non-linear objective functions. the optimal solution for a four deletion problem  was found using optgene by searching only  <dig> % of the total solution space. for a higher number of deletions, the optgene search space represents considerably lower fraction of the total solution space that increases exponentially. as a consequence of an exponential increase in the search space, a detailed study of the correlation between the optgene search space and the total solution space was not feasible. nevertheless, as discussed in the results section, it is possible to estimate the closeness to the global optimal solution by comparing the results with the plots as reported in supplementary figure  <dig> . consequently, high computational speed of optgene enables addressing the problems involving large number of genes, and searching for higher number of deletions. this is of particular interest as genome-scale models of simple eukaryotic organisms like s. cerevisiae include more than  <dig> reactions. in case of simple minimal media that we used in our simulations, this set of  <dig> reactions can be reduced to  <dig> reactions as described in the algorithm. this number can still be large for solving quadruple deletion problem using exhaustive search algorithms.

the metabolic engineering strategies reported in this work suggest that non-intuitive genetic modifications spanning several different pathways may be necessary for solving challenging metabolic engineering problems. consequently a priori selection of candidate targets might lead to sub-optimal solution, and it is desirable to consider the whole model. moreover, with the recent advances on the experimental front, it is feasible to construct mutants with many knockouts in real time. it should also be noted that we might often need to recalculate the results in case of changes/errors in the model, e.g. after including regulatory information or addition of a new reactions. speed of calculations can be a key factor in such cases. optgene can serve to provide a quick hint to whether a particular function of interest can be improved at all or up to what extent. the ability of optgene to optimize for non-linear objective functions opens new opportunities for designing microbial strains with tailor-made metabolic phenotype, e.g. a strain with high bpcy of x and low yield of y.

the ga formulation can provide us with multiple solutions, and thus an opportunity to choose from many good solutions. this is of interest as many of the predicted solutions might be difficult to realize due to complex biological regulation, which is difficult to account for in scoring function models. moreover, the ga framework is very flexible and thus can easily be changed to use different scoring functions depending on the problem and system under investigation. in conclusion, optgene represents a computationally efficient, flexible and natural tool for in silico designing of microbial strains by using genome scale models.

