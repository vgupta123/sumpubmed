BACKGROUND
introduction and previous work
until recently, oncologists relied primarily on tumor stage and morphology to help outline an appropriate course of treatment for their cancer patients. malignant tumors were generally resected in operable cases, and follow-up radiation therapy was provided to victims exhibiting advanced-stage diseases. this methodology proved problematic in that a number of low-risk patients experienced cancer recurrence or death within a short time frame, while a contingent of high-risk patients went into permanent remission despite the bleak nature of their original prognoses. this indicated a need to explore other indicators by which doctors could understand the underlying prognosis of a given disease and decide on a treatment plan that would optimize the patient's chances for survival.

microarray technology provides a promising avenue. the availability of thousands of gene expression levels has enabled the pursuit of a new direction in cancer research. in particular, gene expression patterns can be thought of as multidimensional quantitative "expression phenotypes" which can in turn be correlated with clinical outcome. because a single microarray can measure the expression levels of tens of thousands of genes simultaneously, the challenge lies in the development of data mining methods and tools to extract biological meaning from this immense amount of data. more specifically, the aim is to filter the expression dataset down to the smallest possible subset of accurate predictor genes. reducing the number of predictor genes both decreases clinical costs and mitigates the possibility of overfitting due to high inter-variable correlations  <cit> .

the most common approach to identify a manageable group of predictor genes is called feature selection, in which a subset of relevant "features"  is selected from the full dataset in order to produce a robust learning model  <cit> . a well-designed feature selection algorithm will choose a small set of variables that is highly predictive of clinical outcome. univariate feature selection methods evaluate the usefulness of each variable on an individual basis. examples of univariate techniques include the t-test  <cit> , the signal-to-noise ratio  <cit> , the cox proportional hazards model  <cit> , threshold number of misclassification  score  <cit> , the between-groups to within-groups sum of squares  ratio  <cit> , and mean aggregate relevance  <cit> . multivariate methods are more sophisticated in that they perform combinatorial searches within the feature subspace to evaluate the effectiveness of groups of genes. examples include recursive feature elimination   <cit> , genetic algorithms  <cit> , floating search  <cit> , and top-scoring pair methods  <cit> . despite some evidence to the contrary , multivariate selection algorithms are generally preferable to univariate ones because they cut down on dependencies between variables and often lead to models with fewer predictive variables  <cit> . however, selecting multivariate features from microarray data is non-trivial since the number of patient samples is often limited  and the number of genes is large .

subsequent to or concurrent with the feature selection process, a supervised machine learning technique can be applied to generate a predictive function using the selected variables from a set of training data  <cit> . in a supervised learning algorithm, the input is a set of training samples paired with the corresponding labels of those samples. if the labels are exhaustive discrete classes to which the samples belong , then the learning model is a classifier . with microarray data, the most common approach is to apply a classification algorithm in which the patients are split into subcategories corresponding to different prognoses or diagnoses. in general, the subcategories are static and based on thresholds associated with some clinical variable . classification studies on microarray data have used gene expression levels to distinguish diseased tissue samples from normal ones  <cit> , identify cancer subtypes  <cit> , and assign discrete risk groups for survival prognosis  <cit> . see hu et al.  <cit>  for a comparative analysis of classification methods for microarray data. depending on whether the classifier is used to select relevant features, feature selection methods can also be divided into filter and wrapper methods  <cit> . wrapper methods utilize the classifiers as evaluation functions and search for the optimal gene set for classification. in contrast, filter methods rely on general characteristics of the training data to select genes without involving any classifier for evaluation. many filter methods evaluate a gene based on its discriminative power for the target classes without considering its correlations with other genes. wrapper algorithms can perform better than filter algorithms, but they typically require orders of magnitude more computation time.

in cancer research, gene expression data is often reported in tandem with time to event information . in order to take advantage of these continuous clinical variables under a supervised framework, survival analysis can be applied. survival analysis on microarray data differs from classification in that the sample labels are continuous rather than discrete. the overall goal in survival analysis research is to create the strongest predictive model of patient survival, and the most important components of this process are feature selection and model construction. in the context of survival analysis, a model refers to a set of selected genes whose regression coefficients have been calculated for use in predicting survival prognosis  <cit> . in the application of survival analysis to high-dimensional microarray data, a feature selection algorithm identifies this subset of genes from the gene expression training dataset. these genes are then used to build a statistical model for the continuous time to event data  <cit> . the choice of feature selection algorithm determines which genes are chosen and the number of predictor genes deemed to be relevant, whereas the statistical model gives the distribution of the time to the event.

in recent years, a number of studies have applied survival analysis to microarray data. beer et al.  <cit>  used univariate cox proportional hazards regression along with leave-one-out cross validation on an 86-sample lung cancer dataset to develop a risk index based on  <dig> genes that successfully divided an independent test set of patients into high- and low-risk groups. lu et al.  <cit>  improved on these results by using multivariate cox proportional hazards model with bootstrap resampling and forward selection to obtain a 64-gene model that yielded a greater predictive accuracy than beer et al. a popular approach to deal with high dimensionality in survival analysis is dimension reduction. for example, bair and tibshirani  <cit>  proposed a semi-supervised version of principal components analysis that is capable of generating a continuous predictor of patient survival. their algorithm consistently selected fewer than  <dig> genes and successfully divided patients into high- and low-risk groups in four different cancer subtypes: lymphoma, breast cancer, lung cancer, and acute myeloid leukemia. partial least squares  reduces the dimension of the original variables by constructing a smaller collection of latent variables that are linear combinations of the original variables. the application of pls in conjunction with the cox proportional hazards model in survival analysis to microarray data has been investigated  <cit> . a drawback of dimension reduction techniques is that usually a relatively large number of genes  are selected in the reduced dimension space. penalized methods such as lasso   <cit>  is a variable selection method, and hence is an alternative to dimension reduction techniques as it can be used when the number of samples is smaller than the number of variables . zhang et al.  <cit>  studied the theoretical properties of an adaptive lasso method for the cox proportional hazards model. kaderali et al.  <cit>  proposed a multivariate cox regression model embedded in a bayesian framework that combines dimension reduction and regression in one single step. they used a hierarchical prior distribution that is strongly peaked around zero on the regression parameters so as to produce a small number of relevant genes with non-zero regression parameters. a distinctive characteristic in kaderali et al. is that they assume that the constant baseline hazard rate in the cox proportional hazards model is known, and aim to directly predict survival times of patients. recently, bovelstad et al.  <cit>  compared the prediction performance of seven methods that are based on the cox proportional hazards model over three microarray datasets, and showed that ridge regression has the overall best performance. in their empirical studies, bovelstad et al. focused on prediction accuracy instead of the number of selected genes.

the accelerated failure time  model  <cit>  is a linear regression model in which the response variable is the logarithm or a known monotone transformation of event times. unlike the cox proportional hazards model which assumes that the ratio of the hazard functions does not depend on time and the baseline hazard is unspecified, one can directly predict event times using the aft model and hence, is a useful alternative to the cox model. however, the aft model has not been widely used in practice due to difficulties in computing the regression parameters even when the number of variables is small. recently, huang and colleagues  <cit>  studied the use of penalized methods in the aft model for survival analysis. however, these proposed methods were not applied to microarray datasets in which thousands or tens of thousands of variables are available. datta et al.  <cit>  investigated the performances of lasso and pls on microarray data using the aft model. they showed that lasso performed better than pls when there are many noise variables in their simulation studies.

our contributions
a problem with most feature selection algorithms used to produce continuous predictors of patient survival is that they fail to account for model uncertainty. with thousands of genes and only tens to hundreds of samples, it often happens that a number of different models describe the data about equally well. in this paper, we apply the bayesian model averaging  method  <cit>  to select a subset of genes for survival analysis on microarray data. instead of choosing a single model and proceeding as if the data were actually generated from it, bma combines the effectiveness of multiple models by taking the weighted average of their posterior distributions. in addition, bma consistently identifies a small number of predictive genes  <cit> , and the posterior probabilities of the selected genes and models are available to facilitate an easily interpretable summary of the output. yeung et al.  <cit>  extended the bma algorithm to classify high-dimensional microarray; they dealt with the very large number of potential predictors using an iterative approach. here we further extend their iterative bma method to survival analysis. in particular, we developed and implemented the iterative bma method for survival analysis as a bioconductor package, and we also demonstrated our algorithm on two cancer datasets. our results reveal that iterative bma consistently selects a small number of predictor genes while providing greater predictive accuracy than other algorithms, and the models themselves are simple and amenable to biological interpretation.

methods
data
breast cancer
the first dataset in this study consists of patient samples from primary invasive breast carcinomas  <cit> . the breast cancer dataset from van't veer et al. was comprised of  <dig> training samples and  <dig> test samples. previously van't veer et al. identified a 70-gene predictive signature which classified patient samples into good versus poor prognosis groups. subsequently, van de vijver et al.  <cit>  acquired a test set of  <dig> patient samples with clinical data on which to validate the 70-gene predictive signature. of these  <dig> patient samples,  <dig> samples overlapped with the  <dig> training samples from van't veer et al. since different clinical data and survival information were made available from these two publications, we used these  <dig> overlapping samples as our training set and the remaining  <dig> samples as our test set, both of which are available on our supplemental website . the samples in both breast cancer datasets were hybridized to two-color microarrays containing approximately  <dig>  genes. previously, yeung et al.  <cit>  filtered the van't veer et al. dataset down to  <dig> significantly regulated genes , and we have chosen to conduct our analysis with these  <dig> genes. of the  <dig> total samples in our training and validation datasets, the times to death or censoring ranged from  <dig>  to  <dig>  years, with a median of  <dig>  years.  <dig> patients  were still alive at the final follow-up visit. see table  <dig> for a summary of the breast cancer data.

lymphoma
our second dataset consists of tumor samples from  <dig> patients diagnosed with diffuse large b-cell lymphoma   <cit> . roughly 60% of dlbcl victims who are treated with chemotherapy do not survive, and the disease comprises 30–40% of all non-hodgkin lymphomas  <cit> . this dlbcl dataset was generated and first analyzed by rosenwald et al.  <cit> , and the expression profiles from  <dig> genes along with corresponding patient information can be downloaded from their supplemental website . the raw data were processed with "lymphochip" cdna microarrays  <cit> , which are specialized to include genes that are known to be preferentially expressed within the germinal centers of lymphoid organs. survival times ranged from  <dig> to  <dig>  years, with a median of  <dig>  years across all samples. of the  <dig> patients, only  <dig>  were still alive at the final follow-up visit. rosenwald et al. randomly divided the dataset into  <dig> training samples and  <dig> validation samples, and we have chosen to preserve their division in order to allow a direct comparison of results. see table  <dig> for a summary of the breast cancer and dlbcl datasets.

bayesian model averaging 
the strength of bma lies in its ability to account for model uncertainty, an aspect of analysis that is largely ignored by traditional stepwise selection procedures  <cit> . these traditional methods tend to overestimate the goodness-of-fit between model and data, and the model is subsequently unable to retain its predictive power when applied to independent datasets  <cit> . bma attempts to solve this problem by selecting a subset of all possible models and making statistical inferences using a weighted average of these models' posterior distributions.

the core of the bma algorithm is depicted in equation  below  <cit> . let Ψ denote the quantity of interest, and let s = {m <dig>  m <dig>  ..., mn} represent the subset of models selected for inclusion in the analysis. then the posterior probability of Ψ given the training data td is the weighted average of the posterior probability of Ψ given td and model mi, multiplied by the posterior probability of model mi given td. summing over all the models in set s, we get:

  pr⁡=∑i∈spr⁡⋅pr⁡. 

there are three issues to consider before equation  can be applied: obtaining the subset s of models to be included, estimating the value of pr, and estimating the value of pr. the remainder of this subsection will address these issues.

one challenge with bma is the sheer number of models that could potentially be explored by the algorithm, especially when dealing with microarray data. if there are g candidate explanatory genes in the expression set, then there are 2g possible models to consider. when working with tens of thousands of genes, such an undertaking is computationally intractable. in order to discard the noncontributory models and obtain a subset that approximates an average over all 2g possibilities, raftery  <cit>  proposed to use the regression by leaps and bounds algorithm from furnival and wilson  <cit> . this algorithm takes a user-specified input "nbest" and efficiently returns the top nbest models of each size . following application of the leaps and bounds algorithm, the occam's window method of madigan and raftery  <cit>  can be used to reduce the set of models. after identifying the strongest model returned by the leaps and bounds algorithm, the procedure can eliminate any model whose posterior probability is below the cutoff point in relation to the best model. the cutoff point can be varied, but the default is 20; that is, a model must be at least 1/ <dig> as likely as the strongest model in order to be retained. once this step is complete, the remaining group of models constitutes the set s to be used in equation .

an exact calculation of the predictive distribution pr requires an integration over the vector of regression parameters θi:

  pr = ∫ pr pr dθi. 

because this integral has no closed form solution for most censored survival models, the maximum likelihood estimate  can be used as an approximation:

  pr⁡≈pr⁡. 

while certain techniques such as the markov chain monte carlo  methods have been used in survival analysis to obtain a more exact predictive distribution  <cit> , the mle requires fewer computational resources and has been deemed sufficient for the purpose of averaging over contending models  <cit> .

finally, a calculation of the posterior probability of model mi given the training data td involves an integral whose value is impossible to evaluate exactly. bayes' theorem yields equation , which represents the posterior probability of model mi given td:

  pr ∝ pr pr, 

where

  pr = ∫ pr pr dθi. 

pr is the integrated likelihood of model mi, and θi is the vector of regression parameters  of model mi. the bayesian information criterion  first derived by schwarz  can be used to approximate the integral in equation :

  log⁡pr⁡=log⁡pr⁡−log⁡n+o. 

in equation , n represents the number of records in the data, ki is the number of regression parameters in model mi, and o is the error term. the approximation is more accurate for many practical purposes than its o error term suggests for certain reasonable choices of the prior distribution pr  <cit> . raftery  <cit>  gave further empirical evidence for the accuracy of this approximation. this method is implemented in the bic.surv function that is part of the bma r package available at 

while this section has focused on the posterior probabilities of the models included in the bma analysis, we are also interested in obtaining the posterior probabilities for each of the individual variables  involved. this information is helpful in facilitating biological discussion as it reveals which of the genes are relevant predictors. let the expression  indicate that the regression parameter for gene xi exists in the vector of regression parameters θi. then the posterior probability that gene xi is a relevant predictor can be written as:

  pr⁡=∑mswhere gene is relevantpr⁡. 

the posterior probability of gene xi is the sum of the posterior probabilities of all models in the subset s that include gene xi.

bma for survival analysis
volinsky et al.  <cit>  applied the bayesian model averaging methods  <cit>  to survival analysis. they assessed a patient's risk of stroke by using bma to select variables in cox proportional hazards models  <cit> . the data were made available by the cardiovascular health study and included  <dig> variables  that may contribute to a patient's chances of experiencing a stroke. bma selected a total of  <dig> models and  <dig> predictive variables, including diuretic, aspirin use, diabetes, stenosis, and timed walk. patient risk scores were calculated by taking the weighted average of the risk scores for each of the top five contending models. the patients were then assigned to either the high-risk, medium-risk, or low-risk group based on the empirical 33rd and 66th percentile cutoff points in the risk scores of the training set. to assess performance, volinsky et al.  <cit>  created an analogue to the log-score called the partial predictive score . the pps for bma was compared against the pps for the top bma model  and against the pps of the model returned by stepwise backward elimination. bma exhibited the highest pps, with a prediction mechanism 15% more effective than the top model alone and  <dig> % more effective than the stepwise procedure. furthermore, the patients assigned to a risk group using bma experienced fewer strokes in the low-risk group and more strokes in the high-risk group when compared with the other two methods.

extending bma for high-dimensional microarray data
iterative bma for classification
the bma implementation described above is incompatible with microarray data. this is because the typical microarray dataset contains thousands or even tens of thousands of genes, but the leaps and bounds algorithm from furnival and wilson  <cit>  tends to become slow when there are more than  <dig> variables or so. one common solution is to use stepwise backward elimination to reduce the number of genes down to  <dig>  but this is not applicable in a situation where the number of predictive variables is greater than the number of samples. yeung et al.  <cit>  developed an iterative bma algorithm that takes a rank-ordered list of genes and successively applies the traditional bma algorithm until all genes up to a user-specified value p  have been processed. the authors begin by using the ratio of between-group to within-group sum of squares   <cit>  to rank-order the genes from the microarray dataset. as the algorithm iterates, genes with a high posterior probability ) are retained while genes with a low posterior probability are eliminated. the default threshold for inclusion is set to 1%; genes whose posterior probabilities are less than 1% are discarded.

iterative bma for survival analysis
in this article, we report our efforts in extending the iterative bma method to survival analysis, which include a number of modifications to the algorithm. first, instead of applying the bss/wss technique  <cit>  to rank-order the genes in the preprocessing step, we use the cox proportional hazards model  <cit>  to rank each individual gene. cox regression is a popular choice in the realm of survival analysis due to its broad applicability and capacity for handling censored data. it is a semi-parametric method that quantifies the hazard rate for a subject s at time t as follows:

  λ = λ0exp. 

in this equation, λ <dig> is the baseline hazard function at time t, ps is the vector of effect parameters  for subject s, and θ is the vector of unknown predictor coefficients. cox observed that the baseline hazard function in equation  could be left unspecified if the effect of a covariate on one individual remains the same for all times t . therefore, an estimation of θ is all that is needed. this approximation can be calculated using the partial likelihood:

  pl=∏s=1n∑ℓ∈rsexp⁡)δi. 

in equation , rs is the risk set at time ts , and δi is an indicator for whether subject i is censored. once the regression parameters in the cox model are estimated by maximizing the partial likelihood, the genes can be ranked in descending order of their log likelihood.

following this step, the algorithm iterates through the user-specified p top-ranked genes, applying the traditional bma algorithm for survival analysis  <cit>  to each group of variables in the current bma window . this part of the procedure is similar to the classification method described previously; genes with high posterior probabilities are retained while genes with low posterior probabilities are eliminated. following yeung et al.  <cit> , we have chosen to adopt the 1% default threshold for inclusion. the algorithm relies on the elimination of at least one gene per iteration from the current bma window, so the method cannot proceed if all genes in the window have a posterior probability ≥ 1%. yeung et al. proposed an "adaptive threshold" heuristic to account for this possibility, whereby the genes with the lowest posterior probabilities are removed to make room for subsequent variables. we have incorporated this heuristic into our algorithm because yeung et al.  <cit>  reported that its inclusion boosts predictive accuracy. see figure  <dig> for an outline of the iterative bma algorithm for survival analysis.

furthermore, we have incorporated an additional heuristic in which the models that are discarded due to the adaptive threshold are re-considered when all the iterations are completed. specifically, we applied the occam's window method of madigan and raftery  <cit>  to reduce the set of models remaining from the last iteration of bic.surv and the models that are discarded due to the adaptive threshold. we also re-computed the posterior probabilities of the models and the genes accordingly. in our software implementation, this heuristic is available as an option called "keeprmmodels" and this option is set to false by default.

assessment
to evaluate the performance of our method, we discretize the risk scores of patients into risk groups. the overall risk score for a single patient is the weighted average of the risk scores calculated for each model mi in the set s of contending models. the equation is as follows  <cit> :

  ∑i∈spr⁡ 

in equation , θ^i represents the vector of regression parameters for model mi and xjv refers to the expression score of each gene xj within model mi for a patient in the validation dataset. therefore, the risk score is computed by multiplying the expression scores of all genes included in model mi by their corresponding predictor coefficients, adding these xjbj terms together, weighing this number by the posterior probability of each model mi and summing over all contending models in the set s. note that the predictor coefficients and the model posterior probabilities are all determined from the training data. our implementation employs uses the user-specified "cutpoint" for defining high- versus low-risk groups  using the risk scores of patients in the training data.

the kaplan-meier survival curves  <cit> , in which the proportions of surviving patients in each risk group are plotted against successive time intervals, are used to illustrate our results. an advantage of the kaplan-meier curve is that it takes censored data into consideration: small vertical tick-marks represent losses where patient data were censored. in addition, we measured predictive performance with the p-value calculated from the log-rank test using the central chi-square distribution. the log-rank test calculates a p-value testing the null hypothesis that the survival curves from the high- and low-risk groups are identical. therefore, a significant p-value indicates that the two risk groups are distinct.

selection of input parameters
the main user-specified parameters to the iterative bma algorithm for survival analysis include the number of top-ranked p genes to be included in the iterations, the nbest strongest models to be returned by the leaps and bounds algorithm from furnival and wilson  <cit> , the desired cutpoint for separating high- from low-risk patient samples, and the size of the active bma window . in order to determine the best combination of these input parameters, we performed a series of 10-fold cross validation runs on the dlbcl training data. preliminary analyses showed a cutpoint of  <dig> yielded better results than either  <dig> or  <dig> , and furthermore, a threshold of 60% has precedence in the literature . as noted previously, the leaps and bounds algorithm from furnival and wilson  <cit>  becomes inefficient for bma windows larger than  <dig> variables. on training sets with relatively small numbers of samples , maxnvar may need to be reduced below the 30-variable limit in order to avoid convergence errors caused by matrix singularity and instability in fitting the data. for this reason, we have chosen a conservative default value of  <dig> for maxnvar. a window size of  <dig> provides a good balance between approximating the maximum and avoiding convergence errors. our initial cross validation runs also showed that p <  <dig> performed poorly, while p >  <dig> did not add significant predictive value beyond that of the first  <dig> genes. table  <dig> presents the results from  <dig> runs of 10-fold cross validation with nbest =  <dig>   <dig>   <dig>  and  <dig> for both p =  <dig> and p =  <dig> genes on the dlbcl dataset. the means and standard deviations of the p-values and chi-square statistics are calculated across all folds and all runs for each line in the table. as shown in table  <dig>  the parameters p =  <dig> and nbest =  <dig> produced the lowest average p-value.

p
for the results shown in the rest of this paper, we adopted the optimal input parameters  determined from the 10-run/10-fold cross validation study on the dlbcl dataset shown in table  <dig> in addition to the chosen 60% cutpoint to define risk groups. on the dlbcl data, we used the default bma window size  of  <dig>  however, on the breast cancer data, we were unable to use the default maxnvar value of  <dig>  during preliminary analyses , we found that training sets with fewer than  <dig> samples tended to result in fatal errors at higher values of maxnvar. these errors occur because smaller matrices lead to instability in fitting the data. these singularity errors can be largely mitigated by reducing the number of variables in the active bma window. since the breast cancer training set is relatively small , we reduced the value of maxnvar from  <dig> to  <dig> variables in order to avoid convergence errors caused by matrix singularity.

RESULTS
breast cancer data
we applied iterativebmasurv to the breast cancer dataset of van't veer et al.  <cit>  using parameters p =  <dig>  nbest =  <dig>  maxnvar =  <dig> and cutpoint =  <dig>  and the algorithm selected a total of  <dig> genes across  <dig> contending models. please refer to the methods section for a detailed discussion of the selection of input parameters. the number of variables per model ranged from  <dig> to  <dig>  with an average of  <dig>  genes per model. table  <dig> shows the posterior probabilities, univariate log likelihood rankings, and descriptions of the  <dig> selected genes. this table shows that most of the selected genes have poor univariate rankings: the highest-ranked gene in this group is number  <dig> out of  <dig>  and genes ranked  <dig> through  <dig> are all included in this set of selected predictive variables. of the  <dig> genes selected by bma, only  <dig> of them  were assigned a univariate ranking above  <dig> by the cox proportional hazards model. furthermore, the average ranking of the five genes with a posterior probability of  <dig> % is  <dig> . since the iterative bma algorithm ranks each individual gene in descending order of the log likelihood resulted from fitting the cox proportional hazards model to each individual gene in the pre-processing step , we compared the magnitudes of the log likelihood of the top ranked gene to the genes selected by bma. our detailed analysis showed that the univariate cox proportional hazards model yielded similar log likelihoods across the top  <dig> genes. specifically, the log likelihoods for the top univariate ranked gene nm_ <dig>  the 437-ranked gene nm_ <dig> , and the 1000-ranked gene nm_ <dig>  are - <dig> , - <dig>  and - <dig>  respectively. hence, on this dataset, the poorly-ranked univariate genes produce comparable goodness-of-fit to the top ranked genes. as a result, it is not surprising that the bma selected genes with poor univariate rankings achieve substantial predictive power when considered in combinations.

the genes are sorted first in descending order of their posterior probabilities and second in ascending order of their univariate rankings.

the maximum likelihood estimate coefficients of the  <dig> selected genes and the posterior probabilities of the  <dig> selected models were used to compute the predicted risk scores of the  <dig> patients in the validation dataset. we computed the 60% cutoff point using the risk scores of the patients in the training set, and the test samples with predicted risk scores under the cutoff point were placed in the low-risk group. the patients whose risk scores exceeded the cutpoint were designated as high-risk. since the overall prognosis for breast cancer is fairly promising relative to other types of cancer,  <dig> patients  were still alive at the conclusion of the study. the iterative bma algorithm assigned  <dig> patients to the low-risk category and  <dig> to the high-risk category. of the  <dig> patients that survived,  <dig>  were placed in the low-risk group, while 69%  of the patients that succumbed to their disease were high-risk members. table  <dig> shows the number of patients in each group: high-risk/censored, high-risk/uncensored, low-risk/censored, and low-risk/uncensored, in addition to the corresponding margin totals.

in order to provide a more direct performance comparison between the iterative bma method and these alternative procedures, we made some modifications. first, we applied the previously selected  <dig> genes and  <dig> models to the full van de vijver et al. validation set of  <dig> samples. figure  <dig> displays the resulting kaplan-meier survival analysis curve . second, we predicted the risk scores for the validation set and calculated the difference between the risk groups using the top  <dig> genes with posterior probabilities of 100% from table  <dig>  figure  <dig> shows the kaplan-meier survival analysis curve using these  <dig> genes for n =  <dig> , and figure  <dig> provides the same information for n =  <dig> . the exclusion of the bottom-ranked  <dig> genes did not undermine predictive accuracy; in fact, the results are slightly better than those obtained from using all  <dig> genes originally selected by the algorithm.

furthermore, we investigated the effect of the adaptive threshold heuristic in which the posterior probability threshold is increased temporarily to ensure that at least one gene is removed in each iteration. our exploration showed that the adaptive threshold played an important role in the results shown in table  <dig>  specifically, many of the high univariate ranked genes were removed due to the adaptive threshold. if we turned off the adaptive threshold heuristic, there will only be a single iteration of bic.surv since all the top univariate ranked genes produced posterior probabilities greater than the 1% threshold. without the adaptive threshold, our analysis showed that using the top  <dig> univariate genes produced less distinct risk groups . we have also explored the keeprmmodels=true heuristic in which all the models discarded due to the adaptive threshold were re-considered by the occam's window method. in this case, our analysis yielded mostly high-ranked univariate genes  that produced slightly less distinct risk groups . please refer to additional file  <dig> for more detailed results using this heuristic.

the chi-square statistics marked with an asterisk  are computed using the p-values since the chi-square statistics are not directly available from bair and tibshirani  <cit> . our iterative bma method using the adaptive threshold produced the lowest p-value and highest chi-square statistic  using the smallest number of predictor genes.

dlbcl data
for the dlbcl data, the iterative bma algorithm for survival analysis with the adaptive threshold heuristic using p =  <dig>  nbest =  <dig>  maxnvar =  <dig> and cutpoint =  <dig> selected a total of  <dig> predictive genes contained within  <dig> contending models. the models contained  <dig>   <dig>  and  <dig> genes respectively. of the  <dig> genes selected,  <dig> had a posterior probability of  <dig> %, which means that these  <dig> genes were included in all three models. table  <dig> lists these  <dig> selected genes, along with their descriptions, posterior probabilities, and univariate log likelihood rankings. this table also demonstrates that genes with poor univariate rankings may be selected by our bma algorithm. for example, both the highest-ranked gene  and the lowest-ranked gene  in the top p =  <dig> genes were included in the final set of predictive variables. in addition, several genes with rankings between  <dig> and  <dig> were returned with calculated posterior probabilities of  <dig> % .

the genes are sorted in descending order of their posterior probabilities and ascending order of their univariate rankings.

our algorithm computed the predicted risk scores of the test samples using the maximum likelihood estimate coefficients of the selected genes and the posterior probabilities of the selected models. the risk groups were assigned using the 60% cutoff point of the calculated risk scores in the training set. of the  <dig> samples in the validation dataset,  <dig> were assigned to the high-risk category while  <dig> were deemed low-risk. only  <dig> patients in the high-risk group were still alive at the final follow-up visit, while  <dig> low-risk patients survived to the study's conclusion. table  <dig> provides a summary of the patient samples in each category, along with the margin totals. the majority of patients in the dlbcl validation dataset did not survive , which explains the relatively large number of dead patient samples assigned to the low-risk group. of the  <dig> patients who were alive at the final visit, only  <dig>  were placed in the high-risk category.

to assess the difference between high- and low-risk patient categories, the p-value from the log-rank test was calculated using the central chi-square distribution. the two risk groups showed a significant difference in survival probability at p-value =  <dig>  and chi-square =  <dig> . figure  <dig> shows the kaplan-meier survival analysis curve, where survival time is given in years. these results are comparable with previous studies using the same division between the training and testing sets on the dlbcl data. rosenwald et al.  <cit>  identified four separate gene-expression signatures within the patient samples, and the number of microarray features within each signature ranged from  <dig> to  <dig>  the p-values illustrating the difference between high-, medium-, and low-risk validation samples in each of the four signatures ranged from  <dig>  to  <dig> . bair and tibshirani  <cit>  used a semi-supervised principal components method to separate the validation set of  <dig> dlbcl patients into high- and low-risk groups. they used  <dig> genes in their analysis and reported a p-value of  <dig> . these results are summarized in table  <dig> 

the chi-square statistics marked with an asterisk  are computed using the p-values since the chi-square statistics are not directly available from bair and tibshirani  <cit> .

as with the breast cancer data, we restricted the number of predictor variables in the dlbcl training set to include only those genes with posterior probabilities of 100%. because  <dig> of the  <dig> genes originally selected by iterativebmasurv belonged in this category, the outcome was almost identical to the results presented in figure  <dig>  this information suggests that re-running the algorithm with a reduced set of predictor variables may be more worthwhile when relatively fewer genes are calculated to have the maximum posterior probability.

comparison with other methods
here we compared our iterativebmasurv results to that from using ridge regression which was shown to produce the best overall prediction accuracy in a recent empirical study from bovelstad et al.  <cit> . specifically, bovelstad et al. compared the prediction performance of seven methods that are based on the cox proportional hazards model, including univariate selection, forward selection, principal components regression, supervised principal components regression, partial least squares regression, ridge regression and lasso. since bovelstad et al. reported results produced by randomly splitting three microarray datasets into training and test sets, our results are not directly comparable with theirs. therefore, we downloaded their software implementation written in matlab from their supplementary web site  <cit> , ran their software on the breast cancer and dlbcl datasets from which we derived our results, and then assessed the results using the log-rank test. on the breast cancer data, ridge regression produced a p-value of  <dig>  using all  <dig> genes. in contrast, our iterativebmasurv algorithm produced a much more significant p-value of  <dig> e- <dig> using only  <dig> genes. on the dlbcl data, ridge regression produced a p-value of  <dig>  using all  <dig> genes. in contrast, our iterativebmasurv algorithm produced a p-value of  <dig>  using  <dig> genes. bovelstad et al. focused on prediction accuracy instead of the number of selected genes. in summary, ridge regression may produce good prediction accuracy, but it is not a variable selection algorithm. on the other hand, our iterativebmasurv algorithm typically selects a small number of genes and produces good prediction accuracy.

CONCLUSIONS
in this paper, we have proposed an extension of the iterative bma algorithm of yeung et al.  <cit>  for application to survival analysis with high-dimensional microarray data. this multivariate technique accounts for model uncertainty by averaging over the posterior probabilities of the strongest contending models . we have demonstrated that our iterativebmasurv algorithm achieves highly significant p-values and larger chi-square statistics from the log-rank test on the breast cancer data when compared to alternative methods using the same number of predictor genes. in addition, our algorithm produces similar results on the dlbcl dataset when compared to the best method in the literature. table  <dig> provides a summary of our results. the output of the iterative bma algorithm for survival analysis is particularly well suited to biological interpretation. the posterior probability of a chosen gene represents its overall contribution towards the patient risk score across all selected models. the posterior probabilities of the chosen models indicate the relative strength of the predictor genes from each model in patient risk assessment. the models chosen for the breast cancer and dlbcl datasets are relatively simple, consisting of anywhere from  <dig> to  <dig> genes. the p-values and kaplan-meier survival analysis curves are used to estimate the difference between risk groups, demonstrating the strength of the iterative bma algorithm as measures of high predictive accuracy.

breast cancer
n = 234
breast cancer
n = 295
breast cancer
n = 234
breast cancer
n = 295
our results showed that genes with poor univariate rankings are often selected by the iterative bma algorithm using the adaptive threshold heuristic . our analysis showed that genes with dramatic difference in the univariate rankings may in fact have similar goodness-of-fit  when fitted to the univariate cox proportional hazards model. on the breast cancer data, we showed that our selected set of genes  resulted in patients being assigned to more distinct risk groups than the top univariate genes. while it is true that the genes and models selected by the iterative bma procedure are contingent upon the initial univariate rankings, all p top-ranked univariate genes may be included in the models selected by our iterativebmasurv method. our results showed that setting the parameter p to a large value  generally yields high prediction accuracy. in addition to the parameter p, our algorithm requires the input of a few other user-specified parameters. one example is nbest, which is used by the leaps and bounds algorithm from furnival and wilson  <cit>  to isolate the nbest strongest models. higher values of nbest increase the computation time, but overly restrictive values undermine predictive accuracy by failing to return potentially contributory models. we found that nbest =  <dig>   <dig>  and  <dig> generally yielded good results, with a value of  <dig> exhibiting the ideal tradeoff between predictive power and computational efficiency on the dlbcl data. for example, it takes about  <dig>  hours to run the iterative bma algorithm with p =  <dig> genes and nbest =  <dig> on a machine with  <dig> gigabytes of ram and a  <dig>  ghz intel dual core processor. reducing nbest to  <dig> cuts the running time down to  <dig> minutes, but the p-value and chi-square statistic representing the difference between risk groups is slightly less favorable. on the other hand, setting nbest to  <dig> significantly increases the computation time with no appreciable improvement in prediction. cross validation can be used to determine the optimal input parameters for each dataset.

while the results obtained in this study are encouraging, the iterative bma algorithm for survival analysis presents some limitations and areas for future development. the mathematical calculations conducted by the bma methods are close approximations, but they could be computed with greater precision. for example, the maximum likelihood estimate of equation  provides a sufficient approximation to the predictive distribution, but the more computationally intensive markov chain monte carlo methods might yield the true predictive distribution with greater accuracy  <cit> . the approximation of the posterior model probabilities calculated in equation  could also be improved  <cit> . another area for future work lies in the assessment of the performance from different computational methods. currently, computational methods are evaluated by comparing the separation between different risk groups using the log-rank test . in our work, we divided patients into the high and low risk groups using cutpoint = 60% and evaluated computational methods based on the p-values and chi-square statistics computed using the log-rank test. note that we are only comparing the p-values over identical test sets. comparing p-values across different test sets could potentially be mis-leading, and hence, we recommend using both the p-values and chi-square statistics when evaluating different computational methods. further work is required to investigate the optimal number of risk groups and to propose statistical methods for the assessment of different computational methods across different test sets.

the iterative bma algorithm for survival analysis is easy to use, computationally efficient, and highly accurate. it identifies a handful of predictor variables from vast amounts of microarray data, making it a cost-effective diagnostic tool in the clinical setting. in terms of future work, we would like to collaborate with cancer biologists to validate the predictor genes selected by applying the iterativebmasurv algorithm to microarray data, and to assess the prediction accuracy of our methodology on pcr data generated using independent patient samples. furthermore, we would like to extend the iterative bma algorithm to other types of high-throughput data such as proteomics data produced from mass spectrometry. the multivariate nature of bma combined with its ability to account for model uncertainty makes it an attractive candidate to extract predictive genes from any high-dimensional biological data.

all analyses in this study were conducted using r statistical software . the bioconductor packages for the iterative bma algorithms for classification and survival analysis described in this paper are available for download from bioconductor's website  as the iterativebma and iterativebmasurv packages respectively. please visit our supplemental website for access to the breast cancer and dlbcl datasets, along with other helpful links and information.

supplemental website
url: 

software
our software implementation is publicly available as a bioconductor package called "iterativebmasurv" 

abbreviations
aft: accelerated failure time; bma: bayesian model averaging; bss/wss: between-groups to within-groups sum of squares ratio; dlbcl: diffuse large b-cell lymphoma; iterativebmasurv: iterative bayesian model averaging for survival analysis; lasso: least absolute shrinkage and selection operator; pam: prediction analysis for microarrays; pls: partial least squares; pps: partial predictive score; rfe: recursive feature elimination; sam: significance analysis for microarrays; tnom: threshold number of misclassification score

authors' contributions
aa carried out the software implementation, data analysis, drafted the manuscript and set up the supplementary web site. reb and aer provided guidance for the study, and edited the manuscript. aer conceived the project and developed the original bma algorithm. kyy coordinated the project and software implementation, edited and prepared the manuscript for submission. all authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary materials. this document contains supplementary tables, figures and method.

click here for file

 acknowledgements
we would like to thank drs. isabelle bichindaritz, donald chinn, steve hanks, ian painter, deanna petrochilos, and chris volinsky. bumgarner is funded by nih-nhlbi p <dig> hl <dig>  nih-niaid u <dig> ai <dig>  nih-ncrr r <dig> rr021863-01a <dig>  nih-nidcr r <dig> de012212- <dig>  nih-ncrr  <dig> ul <dig> rr 025014- <dig>  and a generous basic research grant from merck. raftery is supported by nih-nichd 1r01hdo54511-01a <dig>  nsf lls <dig>  nsf atm <dig>  and office of naval research grant n00014-01-1- <dig>  yeung is supported by nih-nci k25ca <dig> and nih-nigms r01gm084163-01a <dig> 
