BACKGROUND
identification of the metabolic pathway of a chemical compound and discovery of new metabolic pathways are important in various fields. in general, an enzyme reaction pathway is a sequence of applications of enzymes  that derives a goal compound from a given compound. in the field of drug discovery  <cit> , the mechanism of side effects based on information about metabolic pathways has been investigated to clarify the movement of drugs in the body and to optimize drug candidate compounds. in the field of toxicity prediction, exploration of the dynamics of in vivo chemical substances identified the metabolic pathway, leading to the elucidation of the mechanisms of toxicity  <cit> . prediction of the biochemical pathways for secondary metabolites has received the most attention in recent years. although secondary metabolites have been used as lead compounds for food and medicines, most of their biosynthetic pathways still remain unknown. further, computational methods that support de novo design of biosynthetic pathways are expected in the field of synthetic biology. in the synthetic biology approach, the de novo design is not necessarily limited to biochemical routes that already exist in nature  <cit> .

to solve the problem of predicting various metabolic pathways, many attempts from bioinformatics have been made so far. existing approaches can be broadly divided into three methods: the fingerprint-based method, the maximum common substructure search method, and the reaction rule-based method.

fingerprint-based method  <cit> 
a chemical compound is represented by a fingerprint of the molecular structure, and the tanimoto coefficient between fingerprints for compounds is calculated to indicate similarity. it then predicts that there is a metabolic pathway between compounds if the similarity exceeds a certain threshold. the necessary calculations are fast, but accurate path prediction is difficult.

maximum common substructure search method  <cit> 
this approach focuses on the maximum common substructure between compounds to predict a metabolic pathway. the maximum common substructure search is an np-hard problem, and requires enormous computation time in order to evaluate the similarity between compounds of complex structures  <cit> . various approximation algorithms have been studied in the search for a computationally tractable approach  <cit> .

rule-based method  <cit> 
this requires a database of reaction rules constructed from known metabolic reactions, and attempts to predict a metabolic pathway as a sequence of reaction rules. as a feature of reaction rules, some techniques focus on physicochemical properties and structures  <cit> , while other methods focus on enzyme and gene information  <cit> . since prediction ability depends on the size and type of metabolites used to build reaction rules, comprehensive prediction is difficult using the exhaustive search algorithm such as breadth-first search  <cit> , and the approach has only been used to predict specific pathways and enzymes. in addition, the complexity of the features used to construct the reaction rules is a factor that has made comprehensive prediction difficult.

this study aims at a comprehensive and de novo approach to predict metabolic pathways between two arbitrary known or unknown compounds, and belongs to the rule-based methods. using a simple feature that focuses only on the structural formula of compounds, our method enables comprehensive prediction that has been difficult for the conventional methods. enzyme reactions on the metabolic pathways are used as the reaction rules, and are extracted from the kegg database  <cit> . the feature on which we focus is the information before and after the structural change of the compound caused by the enzyme reaction. by using the information about this structural change, our method predicts the enzyme reactions that give the shortest path between two compounds for a given query. further, a constraint for applying an enzyme reaction rule to a compound is set as the substrate inclusion condition, that is, the compound must include the substrate of the enzyme reaction as part of its own structure. this constraint and shortest-path strategy lead to de novo prediction of unknown biosynthetic pathways that a knowledge-based approach  <cit>  cannot predict. in this study, the metabolic pathway prediction problem is reduced to the shortest path problem, and the search method is based on a* algorithm to traverse nodes in the order of priority and employs the lp solution as an admissible heuristics for estimating the distance to the goal.

methods
first, a chemical compound is represented by a feature vector which counts the frequencies of substructures in the structural formula. second, a set of enzyme reaction rules is collected from the kegg pathway database. third, a reaction rule is represented as an operator vector by detecting the structural change to compounds before and after the reaction. fourth, by defining compound vectors as nodes and operators as edges, prediction of a reaction pathway from a start compound to a goal compound is reduced to the shortest path search problem in the vector space. then, "the output for reaction pathway prediction consists of a sequence of applied reaction rules". the a* algorithm is used to efficiently search for the shortest path. finally, the linear programming  algorithm is used as an admissible heuristic for estimating the distance to the goal.

kegg reaction data
the data for compounds and metabolic enzyme reaction information used in this method all come from kegg. first, we extracted the information pathways from kegg pathway  <cit> . by using the kegg api, we concretely collected all enzyme reactions registered in the global map on the kegg pathway. in the kegg reaction, a pair of compounds that are registered as "main" before and after the reaction indicate that it is a metabolic reaction present in kegg enzyme or the kegg pathway global map. in this study, the 2d-sdf structure was extracted only for those pairs registered as "main" to ensure the focus on compound metabolic reactions. further, most kegg reactions are registered as reversible reaction, and therefore, the forward and reverse directions were treated as a separate reaction. as a result, the  <dig> enzyme reactions and the  <dig> related compounds were obtained.

representation of chemical compounds and enzyme reactions
a key idea in our method is that a chemical compound is converted to a feature vector that represents substructure statistics extracted from the structural formula of the compound. this feature-vector representation evaluates whether a feature, such as a specific substructure, exists in a chemical compound or how many times that feature appears. this converts information about compounds into numerical vectors, called feature vectors, whose ith value corresponds to the existence or frequency of the ith feature considered. this feature-vector representation enables us to reduce the pathway search problem to a computationally feasible problem in the vector space, as will be discussed later in detail.

substructures or paths extracted from chemical structures, which are regarded as graphs with atoms as nodes and bonds as edges, can be an effective descriptor of chemical compounds  <cit> . in this study, the feature vector based on the 2d chemical structure is defined as the number of appearances of each path in the structure of the chemical compound as follows:

  dluc=fcpp∈plu, 

where plu is a set of paths whose length , or number of bonds, is between l and u  and which appear at least once in the chemical structures in the dataset. fc is the number of appearances of path p in the structure of a chemical compound c.

for example, methane ,

  h|h-c-h|h, 

can be represented by the following feature vector:

  d02=, <dig> , <dig> ..., <dig> ..., <dig> ...,0). 

we call the path length range specified by l and u the "representation-depth", and denote it by "depth l-u", which is crucial for the expressiveness of vector representation.

according to the feature-vector representation of chemical compounds, every enzyme reaction rule in the  <dig> kegg enzyme reactions is represented as an operator vector. an operator vector expresses the change in chemical structure before and after the reaction, which is computed as the subtraction of the substrate compound vector from the product compound vector: let i denote the substrate compound of an enzyme reaction a and j denote the product compound of a. let dlui and dluj denote the vector representation of i and j, respectively. then, the operator vector oa for the reaction a is defined as :

 oa=dluj-dlui. 

further, every reaction rule ra for the reaction a is defined as a pair ra =  of the substrate vector ua=dlui and the operator vector oa. as a result, an application of the enzyme reaction to a compound can be achieved simply by "addition" of the operator vector to the compound vector , and a reaction pathway from a start compound s to a goal compound g is represented by a sequence of applications  of operator vectors:

s→u1≤sr1=u <dig> o1x1=s+o1→u2≤x1r2=u <dig> o2x2=x1+o2→⋯→xn-1→un≤xn-1rn=un,ong.

in this method, different reactions may sometimes be represented by the same vector because of insufficient short-length path counts in the compound vector.

two constraint conditions for applying enzyme reaction rules
as a constraint for applying a reaction rule to a compound, the substrate inclusion condition is set as inclusion of the substrate vector. when attempting to apply the operator vector of a reaction rule r =  to a compound vector c, the compound vector c must include the substrate vector u as part of its own structure . the precise determination procedure requires the entries ck in the compound vector c =  to exceed the corresponding value uk in the substrate vector u = , as represented by the following formula:

  ck≥uk,1≤k≤n,c=c <dig> …,cn,u=u <dig> …,un. 

note that this computationally easy procedure for substrate inclusion is a great advantage of our method using vector representation, because the graph inclusion problem for determining whether a compound structure contains a substrate structure is computationally hard .

the second constraint is the "non-negative" compound-vector condition. since the operator vector o denotes a change in structure before and after the reaction, it sometimes contains negative values and the application  of this to a compound vector c may produce a vector containing negative values. a compound vector is a vector that we define as representing the frequency of occurrence of partial structures, so negative values are not appropriate. therefore, we set the following non-negative condition to filter out compound vectors containing negative values, preventing inappropriate products that contain negative values as a result of applying an operator vector.

  ck+ok≥ <dig> ≤k≤n,c=c <dig> …,cn,o=o <dig> …,on. 

search algorithm between two compounds
the purpose of this study is, given a start compound s and a goal compound g, to find the pathway leading to g by applying reaction rules. here, the distance of a pathway between s and g is defined as "the number of rule applications ". by introducing this distance definition, the metabolic pathway prediction problem between compounds can be replaced by a mathematical shortest path search problem. that is, finding the shortest path for reaching the integer vector of the goal compound by successively adding integer vectors of reaction rules to integer vectors of intermediate compounds can be considered as the problem of finding the shortest path in the integer-vector space. in this search space, a node is an intermediate compound vector and an edge is an applied reaction operator vector .

a* algorithm and heuristics
the a* algorithm uses a best-first search and finds a least-cost path from a given start node to a goal node. it uses a distance-plus-cost heuristic function to determine the order in which the search algorithm visits nodes to be explored in the search space. in the a* algorithm, the evaluation function  f for each node t in the search space is defined as the sum of two functions, the past-cost function p, which is the cost  it has taken to get from the start node to the current node t, and a heuristic estimate h' of the distance to the goal :

  ft = pt + h′t. 

in addition, the condition that ensures the a* algorithm finds a shortest path is expressed by the following formula:

  h′t ≤ht, 

where h is the true distance to the goal. that is, a heuristic function h' that always underestimates the distance to the goal is required. such a heuristic function h' is referred to as an "admissible heuristics". if a given heuristic is admissible, the a* algorithm will reliably find a shortest path. the a* algorithm was implemented using the data structure "sorted priority queue" for maintaining the nodes to be traversed with weights of the evaluation function value f, while the breadth-first search uses the simple "queue" for the nodes to be traversed with no weight.

breadth-first search 
by setting the heuristic function h' to zero for any node t, the a* algorithm becomes equivalent to the breadth-first  search as exhaustive search.

manhattan distance
since each node t is an n-dimensional vector representing a compound, the most simple heuristic function h' is to use the manhattan  distance, denoted by mh, between the current node vector t and the goal node vector g:

  mht,g= ∑i|ti-gi|,t=t <dig> …,tn,g=g <dig> …,gn. 

however, naive use of the mh distance is inadmissible and does not guarantee the shortest path solution. therefore, we use the following modified mh heuristic function h':

  h′t=mht,g||omax||, 

where ||omax|| represents the maximum norm among all of the operator vectors. the mh distance divided by this norm becomes an admissible heuristic, because this modified mh distance indicates the number of times the goal node g is reached by only applying the largest norm operator, and hence does not exceed the true distance to the goal node.

linear programming  heuristics
a path from the current node t to the goal node g is represented by a sequence of reaction rules r <dig>  ..., rm, and hence the difference Δt = g - t between the current node vector t =  and the goal node vector g =  can be represented by a linear sum of operator vectors ok=ok <dig> …,oknrk=uk,ok,k= <dig> …,m. let wk denote the number of times that the operator vector ok is applied. then the difference Δt between the current node t and the goal node g may be expressed as follows:

  Δt= ∑kwkok, 

and the sum of the coefficients wk is exactly equal to the distance  between the current node and the goal node. now, consider the following optimization problem for the current node vector t =  and the goal node vector g = :

  minimize∑kwk 

  subject tog-t= ∑kwkok, 

  wk is a non - negative integer. 

this optimization problem is an integer programming  problem. the solution to this problem is similar to that for the shortest reaction path problem between the start node and the goal node, except that it does not take into account the order of application of the reaction rules and it ignores the constraint conditions when applying reaction rules. nevertheless, the solution to "minimize ∑k wk" provides the tightest underbound for estimating the distance from the current node t to the goal node g, and it is obviously admissible. however, a critical defect is that the ip problem is computationally hard.

our approach is to relax the constraints on the optimization problem "minimize ∑k wk" and to treat wk as a real number rather than an integer, that is, "continuous relaxation". the optimization problem now becomes an lp problem that can be solved in polynomial time. note that allowing wk to be a real number means that we may apply an operator a real number of times, for example "apply the operator  <dig>  times". in other words, a real-valued solution for the optimization problem "minimize ∑k wk" can be considered as the shortest distance to the goal node in a real vector space. in addition, it is well known and obvious that the real solutions for the optimization problem "minimize ∑k wk" with linear equation constraints are always smaller than the integer solutions. therefore, the lp solution is admissible for guaranteeing the shortest path. we use this value as the lp heuristic function, which is another advantage of our method using the vector representation.

for solving the lp heuristic, we used ibm ilog cplex in  <cit> . cplex is one of the fastest optimization problem solvers, and can be used for linear programming, quadratic programming, constraint programming, mixed integer programming, and is applicable to large-scale problems.

RESULTS
datasets and target pathways
kegg reaction dataset
this table shows the relationship between the representation-depth of enzyme reactions and the number of unique reaction rules.

 <dig>  some reactions are registered as different in kegg, but the changes in structure are the same and only the substrates are different.

 <dig>  some reactions are actually different but are represented by the same vector.

 <dig>  the structure registered as "main" is unchanged by the reaction.

the weakness of the second reason can be reduced by increasing the representation-depth for the vectors, which increases the number of reactions distinguished due to the improved expressive power.

ddt degradation pathway
in this study, we used the well-known ddt degradation pathway data set  <cit>  as pathway data to verify the validity of our method. ddt is a chemical substance that can be synthesized for minimal cost, and began to be used as an insecticide during the 1940s because of its insecticidal action against many insects. however, the human carcinogenicity of ddt and its long-term persistency in the environment has since been pointed out  <cit> . it is important to evaluate the negative impact on the environment, and human health studies analyzing the metabolism of ddt has continued in recent years  <cit> .

taking into account the number of involved pathways and compounds, as well as the fact that the pathway is a closed circuit, we consider the ddt degradation pathway ideal for verifying our approach. the pathway consists of  <dig> compounds and  <dig> enzyme reactions .

this table shows the number of reaction rules focusing only on the ddt degradation pathway in the kegg database.

in our experiments,  <dig> ×  <dig> =  <dig> pathway routes were selected for the search problem. the first validation experiment only used the  <dig> enzyme reaction rules contained in the ddt degradation pathway. in the second "more general" experiment, all kegg reaction rules were used to search the ddt pathway.

reconstruction of ddt pathway by shortest path finding
we first verified that the shortest path between the start node and the goal node implied the true metabolic pathway, identifying the shortest path using a bf search. table  <dig> shows the percentage for which the true distance and the shortest distance are equal, and the rates at which the true pathway and the shortest-distance path match, for each representation-depth. the agreement rate with the true pathway increased as the representation-depth became larger, and the depth 0- <dig> gave an agreement rate of 100%.

this table shows the agreement percentage between the true distance and the shortest distance , and the rates at which the true pathway and the shortest-distance path match.

computational times for heuristics
this table shows the computational time for each heuristic and each representation-depth to search for the shortest paths in the ddt pathway.



comparing the efficiency of the heuristic functions in this table showed in particular that a significant reduction in computational time was achieved by the lp heuristic. on the other hand, in the depth 0- <dig>  reduction in computation time was not seen for most heuristics. this implies that, as the representation depth increases, the substrate inclusion condition works more effectively, and the number of branches in the search space becomes smaller.

this table indicates the number of times that the search algorithm branched for each heuristic and each representation-depth.

prediction of ddt pathway using all kegg reaction rules
a more general reconstruction problem for ddt pathway was carried out using all kegg reaction rules, to verify whether the method is practical for comprehensively reproducing the ddt degradation pathways. table  <dig> shows the computational time for each heuristic and each representation-depth when all kegg reaction rules were used to search for the shortest ddt pathway. since increasing the number of operators increases the search space exponentially, none of the heuristics was able to accomplish the task within a realistic computational time  at depth 0- <dig> and depth 0- <dig>  at depth 0- <dig>  the bf search and the mh heuristics were unable to explore the solution space in a realistic computational time, and only the lp heuristic was able to calculate the shortest path solutions within a practical computational time.

this table shows the computational time for each heuristic and each representation-depth using all kegg reaction rules to search for the shortest paths in the ddt pathway.

the agreement rate between the true distance and the true pathway route using the lp heuristic were 100% . thus, despite using the generic operators , the results showed that the method had high reproducibility.

prediction of lutein biosynthesis pathway using all kegg reaction rules
another pathway prediction using all kegg reaction rules was executed for lutein biosynthesis pathway. lutein biosynthesis pathway is a secondary metabolic pathway from the start compound "lycopene" to the goal compound "lutein". lycopene is a red carotenoid and lutein is a plant carotenoid, and there are two routes from lycopene to lutein in kegg pathway database: the one is via zeinoxanthin and the other is via α-cryptoxanthin. the lutein biosynthesis pathway has other difficulty compared with ddt pathway prediction: the structures of chemical compounds in the pathway are significantly larger than the ones in ddt pathway, and the kegg pathway predictive tool pathpred  <cit>  could not predict this pathway.

our method with the lp heuristics succeeded to precisely predict all pathways between every pair of compounds on the lutein biosynthesis pathway. the average computational time for the lp heuristic to predict the shortest paths for all pairs was  <dig>  seconds. on the other hand, pathpred failed to predict the pathway between lycopene and lutein, where the default parameters of pathpred were used: "simcomp threshold" was set at  <dig> , "prediction cycle" was set at  <dig>  and reference pathway was set at "biosynthesis of secondary metabolites ".

finding novel biochemical pathways for secondary metabolites of plant origin
to demonstrate the effectiveness of our method for finding novel pathways, we applied our method to predict a biochemical pathway for the start node "delphinidin" and the goal node "gentiodelphin". both compounds are present in the kegg database. gentiodelphin is a plant-derived secondary metabolite associated with blue dye, and is known to be synthesized from delphinidin  <cit> . the kegg pathway predictive tool pathpred was also used for performance comparison.

our method with the lp heuristics predicted the two shortest path solutions shown in figure  <dig>  each arrow indicates the enzyme reaction as routing information, accompanied by the kegg reaction number. both predicted pathways consist of four enzyme reactions. the first path  is a metabolic pathway present in the kegg pathway database. the second path  is new and not registered in the kegg database, and there is the possibility of a new route where the enzyme reaction "r6798" is applied at the end. the computational times for the lp heuristic to predict the shortest paths were  <dig>  seconds for the first solution, and  <dig>  seconds for the second solution. pathpred only predicted the first pathway with a computational time of  <dig> seconds, where the default parameters of pathpred were used.

overall, our a*-based algorithm with the lp heuristic is more comprehensive and computationally efficient prediction method for biochemical pathway finding.

discussion
we have achieved high-speed pathway predictions using a vector-based search that simply focuses on the 2d structures of compounds. the a* algorithm guarantees the discovery of the shortest path, and the efficient search is achieved by the linear programming heuristic that estimates the distance to the goal. results of verification experiments show the high reproducibility of kegg pathways, the validity of the novel predicted pathway, and the versatility of our method.

search space for pathway predictions
an exponential increase in the search space accompanies an increase in the true distance. this is represented by the equation:

  p=nd, 

where p is the size of the search space if all solutions are explored, n is the number of reaction rules, and d is the distance from the start node to the goal node. in the heuristic search, the search space can be reduced by visiting the nodes on the true path on a priority basis. table  <dig> shows that the lp heuristic can significantly reduce the search space compared to searching all possible solutions.

in addition, taking into account the effect of the substrate inclusion condition that bounds the branching, the search space is improved as follows:

  p = n1 -bd, 

where b is the ratio that bounds the branching, that is, the ratio at which operator applications are eliminated. when b increases, the base of the exponential function becomes smaller and hence the exponential increase can be reduced. that is, b plays a role in minimizing the exponential expansion of the search space. the significant reduction in computational time achieved by increasing the representation-depth for the vector representation is considered to be due to this reason. in other words, designing a high-speed searching method requires both an accurate heuristic function that estimates the distance to the goal and an effective bound on the branching to reduce the search space.

reproducibility of kegg pathway
our experimental results for comprehensive predictions using all  <dig> kegg reaction rules show that our proposed method is able to reproduce enzyme reaction pathways in the kegg pathway database with high accuracy. this is presumably due to the lp heuristic and bound on branching due to the substrate inclusion constraint on the vector representation.

de novo prediction of known and unknown biosynthetic pathways
our proposed method in this paper is a de novo prediction method in the sense that it does not require any initial network such as kegg metabolic network as input and it is not a method just to traverse the pathway network. our method takes as input the set of enzyme reaction rules collected from the kegg pathway database. however, this does not necessarily imply that the pathway prediction using the list of all reaction rules is equal to the path search on kegg pathway network. for each compound occurring at a node in kegg pathway network, the kegg network only contains the enzyme reactions whose substrate is exactly equal to the compound as an edge connected to the node. on the other hand, our method applies all reaction rules to a given compound if the compound is not only equal to the substrate of the reaction rule but also contains the substrate as a sub-structure . therefore, the search space of our method is exponentially larger than the kegg pathway network. further, our method is able to predict unknown biosynthetic pathways between two arbitrary known or unknown compounds.

CONCLUSIONS
we have proposed a computationally efficient method to predict biochemical reaction pathways that derives a goal compound from a start compound. a chemical compound is represented by a feature vector that counts the frequencies of substructure occurrences in the structural formula. a set of enzyme reaction rules collected from the kegg pathway database was represented using operator vectors, by determining the structural change in the compounds before and after the reaction. two constraint conditions when applying reaction rules were substrate inclusion and compound formation. by defining each compound vector as a node and each operator as an edge, prediction of reaction pathways was reduced to the shortest path search problem in a vector space. we proposed an efficient search method that uses the a* algorithm for the shortest path search problem. we used an lp solution for heuristic estimation of the distance to the goal. the results showed that our method had high reproducibility for kegg pathways and a high possibility of predicting new reaction pathways. we understand that we need larger-scale experiments to test the general performance and stability of our method on a number of various known pathways. this is one of our important future works. also in the future work, the resulting shortest distance can be thought of as a kind of similarity measure between compounds that represents metabolic information, and hence applications to determining similarity of compounds for drug discovery such as  <cit>  can be also expected.

list of abbreviations
lp: linear programming; mh: manhattan; bf: breadth-first; ip: integer programming; ddt: dichlorodiphenyltrichloroethane.

competing interests
the authors declare that they have no competing interests.

authors' contributions
m.n. and y.sakakibara designed the study and analyzed the data. m.n. developed the system and performed the experiments. t.h., y.saito, and k.s. proposed the heuristics and analyzed the data. y.sakakibara wrote the manuscript. all authors read and approved the final manuscript.

author's information
department of biosciences and informatics, faculty of science and technology, keio university, 3-14- <dig> hiyoshi, kohoku-ku, yokohama 223- <dig>  japan.

