BACKGROUND
the classification of biological sequences is one of the fundamental tasks of bioinformatics, and faces special challenges in the genomic and post-genomic era. while it is a classical paradigm to base it on an initial multiple alignment of the sequences, a current trend is to provide alignment-free classification methods , in order to tackle datasets that cannot be amenable to multiple sequence alignment  methods. approaches based on k-mers have also been used for more than a decade to detect anchoring zones for whole genome alignments  <cit> .

in this paper, we describe a method for the alignment-free classification of families of nucleic or protein sequences . our aim is to rapidly detect similarity segments shared by these sequences without having to consider the order in which they occur inside the sequences. our approach allows us to take into account shuffled domains as well as repeated segments.

the local similarity detection uses a previously described method called n-local decoding  <cit> . the basic principle of the n-local decoding is to rely on the occurrences of similar substrings in sequences to cluster together positions in the sequences. more precisely, two positions in the considered sequences  are directly related when they occur at the same position in two equal substrings of fixed length n. the n-local decoding clusters together all indirectly related sites, that is, sites related by a chain of direct relations. this results in a partition of the set of sites. for each subset of clustered sites , the segments of length 2n -  <dig> which are centered on the sites exhibit local similarities. although it is based on exact matches, the indirect relation scheme results in the inclusion of an a priori unknown number of mismatches.

we have previously used successfully this k-mer based method for alignment-free classification  <cit> , without being able to solve the delicate problem of tuning the parameter n. in the present paper, we tackle this problem by developing a procedure to select among all the segments of similarity detected by n-local decoding for all n, a subset on which to base the classification. we call this alignment-free classification method ms <dig>  for multi-scale selector of sequence signatures.

the n-local decoding has been efficiently implemented using suffix trees. like in any k-mer based approach, there is no sensible criterion to fix a value of the parameter n. here, we follow how the partition of sites varies with the parameter n. when n increases, site classes tend to split into several subclasses, while for too low values of n, classes tend to group sites that do not share any detectable similarity. ms <dig> attempts to select among all these classes of sites those that correspond to relevant homologous segments. more precisely, ms <dig> selects for a given site the smallest n such that the average number of occurrences per sequence of the equivalence class of this site is smaller than a given threshold κ. the resulting values of n are different for different sites, and adapt to the context of appearence of the site among the studied set of sequences. the parameter κ, unlike n, has a sensible global interpretation, and can be tuned to a value reflecting the maximum number of repetitions in the sequences. finally, the classes selected by ms <dig> are used to compute a dissimilarity matrix on which the classification is based .

in this paper, we describe the implementation of the ms <dig> classification tool, which is accessible via a web-based interface. we also give a validation on some real biological data that are not so easy to classify: ms <dig> is illustrated on several families of hiv/siv sequences. these sets have already been classified by us with the help of n-local decoding method  <cit> , and it was shown that the n-local decoding classes correspond to segments of homology for these sequences  <cit> . the results obtained in  <cit>  were in good agreement with the accepted classification  <cit> , for several values of n. these "good" values are however data-dependent and hard to guess. the approach described in this paper replaces this parameter with the more intuitive parameter κ.

our present results show that ms <dig> gives correct classifications on coding and non-coding regions of hiv/siv. moreover the results are robust with respect to the variations of the parameter κ. in fact, even on sequences containing repetitions , the choice of κ =  <dig> gives satisfying results. therefore, ms <dig> may be expected to give reasonable results for this default value for κ when no other information on the sequences is available.

methods
as mentioned in the background section, we use the n-local decoding  in order to produce partitions of the set of all sites in the sequences under study  <cit> . a short recapitulation of nld is found here. the central part of this paper is the introduction of an object that describes the embedding of successive partitions as n increases. it turns out that this object is a tree. the tree structure is essential, because it provides a criterion for choosing "relevant" partitions of sites, which may occur at several values of n. we use the chosen classes to construct a dissimilarity matrix between sequences . this matrix becomes then the input for standard tree construction methods .

n-local decoding
we consider a collection s of sequences s over a finite alphabet . the site space consists of all pairs σ =  where s is a sequence, and p a position in it. this set is   

where ℓ  is the length of sequence s. the nld procedure starts with a collection of sequences and with an integer n ≥  <dig>  it consists of two steps:

 <dig>  to every site σ in ∑, associate a neighborhood of length 2n -  <dig>  consisting of σ and of n -  <dig> sites on each side of σ . this neighborhood carries a word w of length 2n -  <dig>  we consider all subwords w of length n of this word w. they can be "identified" by their position relative to σ, i.e. the index of the beginning of w inside w. the subword w of w at relative position i will be denoted by wi. given two sites σ and σ', we say that they are directly related if there exists an i such that the subword wi of w is identical to the subword  of w' . if two sites σ, σ' are directly related, we write σ ≃n σ'.

 <dig>  we define the equivalence relation ~n as the transitive closure of ≃n . in other words, we say that σ <dig> ~n σ <dig> if there is a chain of directly related sites connecting σ <dig> and σ <dig> 

we illustrate this on an example . we consider here a set of protein sequences, and examine one of the equivalence classes obtained by n-local decoding with n =  <dig>  this class consists of  <dig> sites. the first site is described by the pair : this means that it lies at position  <dig> of the sequence number "0", and similarly for the other five sites. since n =  <dig>  the neighborhoods around these sites are of length 2n -  <dig> =  <dig>  the words in these neighborhoods are shown on the picture, with the central letter displayed in red.

directly related sites are connected by solid lines. for instance, the sites ;  and  share the word lreided starting at the third position of their environment. the sites that are related  are connected by broken lines. for instance, the sites  and  are connected by the chain  →  →  → . the fact that every site is connected to every other site means that this set of sites is a class.

the partition tree
a recurring problem of n-mer-based methods is that there does not seem to be a good criterion to tune this parameter n to an acceptable value. there is moreover no real reason to believe that a single "optimal" value will always be meaningful, since the similarity between sequences can depend very much on the position of neighborhoods in sequences.

in the case of n-local decoding, we combine the different equivalence classes for various values of n by introducing a new construction, the partition tree, which encodes the way in which equivalence classes for successive values of n are related. this tree will allow us to choose a set of "relevant" nld-classes. let ℰn be the partition of ∑ induced by ~n.

lemma  <dig>  for all n ≥  <dig>  the partitions ℰn satisfy ℰn+ <dig> ⊂ℰn.

proof. compare the partitions of ∑ produced by ~ with the partitions produced by ~n. if any two sites σ <dig> and σ <dig> are ~-equivalent, we have to show that they are ~n-equivalent. notice that σ equivalence is reduced to a set of direct ≃ relations, and that σ <dig> ≃ σ <dig> implies trivially σ <dig> ≃n σ <dig>  if two neighborhoods share a word of length n +  <dig> at a given relative position, they also share words of length n at the same relative positions.

this simple lemma is crucial, and corresponds to the intuitive idea that it is harder to lump together big words than small words. we are now ready to define the partition tree.

definition  <dig>  for n >  <dig>  denote by ℰn the set of equivalence classes defined by the relation ~n. letting ℰ <dig> = {}, we can encode the set v = ∪i ≥  <dig> ℰi of equivalence classes for different values of n into the partition tree p = , defined by  

in other words: the vertices of p are all the equivalence classes that correspond to ~n for all values of n. the edges are drawn between pairs of classes that correspond to successive values of n and such that one is a subset of the other. by the above lemma, any two sites that are -equivalent are also n-equivalent. on the other hand two sites that are n-equivalent are not necessarily -equivalent. in other words, the n-classes split as n increases. the edges are drawn precisely between any n-class c and all the -classes into which c splits. from this definition, it is clear that any vertex of p has at most one ancestor, i.e. that p is a tree. finally, for memory saving purposes, all valency  <dig> nodes are suppressed from p . examples of partition trees are given in fig.  <dig> and fig.  <dig> 

a choice of classes
when we examine n-equivalence classes for all possible n, we face a deluge of information, moreover altogether redundant. we shall now use the tree of partitions to alleviate this problem. given any set c of sites, we can define the size of c as the number of sites in c and the spread of c as the number of sequences which contain at least one element of c. define κ as the ratio between the size and the spread of c as follows.   

for a given value κ ≥  <dig>  the condition κ  ≤ κ means that the average number of occurrences of class c per sequence where it occurs is less or equal than κ. in particular, κ  =  <dig> means that no sequence contains more than one element of c . we call the parameter κ the maximum average repetitivity. we use this parameter to select nodes in the partition tree that satisfy κ  ≤ κ.

this condition is not sufficient to make these classes relevant . indeed, the bottom of the partition tree is occupied by classes corresponding to large n, which occur in only one sequence. such classes are of no interest. in order to find relevant classes, we have to "climb upward" . since any vertex of a tree has only one ancestor, the following definition does make sense.

definition  <dig>  an nld class c will be called κ-relevant, if it satisfies κ  ≤ κ, while its ancestor does not.

the ms <dig> method consists in choosing all relevant classes in a set of sequences, and ignoring the others. the algorithm describing the implementation of ms <dig> is given in section appendix. an explicit toy example on which we can see both the n-local decoding and the selection of relevant classes at work for κ =  <dig> is shown in fig.  <dig> 

the dissimilarity matrix
at the end of the ms <dig> procedure, each sequence can be rewritten, by replacing the letter originally found at a given site by the identifier of the relevant ms4-class to which the site belongs . we use the number of ms <dig> classes shared by  <dig> sequences to define a similarity index in a similar way as described in  <cit> . this measure is closely related to the percentage of identity classically used for sequence comparison.

given any two sequences seqi and seqj, we compute a number dij as follows. for a class c, let ni be the number of occurrences of c in seqi. denote by cij the set of relevant classes that have representatives both in seqi and seqj. since the two sequences can contain a different number of occurrences, we put . let ℓ be the minimum of the lengths of seqi and seqj . we define then a dissimilarity dij by   

in fact, nij is the sum of local similarities shared by  <dig> sequences. any exact common word of length m corresponds to m common ms <dig> classes .

when κ =  <dig>  nij is simply the number of relevant classes having representatives in both seqi and seqj . this dissimilarity matrix is used as input in neighbornet of splitstree <dig>  <cit>  to produce the split networks displayed in fig.  <dig> and fig.  <dig> 

RESULTS
ms4-classification of complete hiv/siv genomes
we have applied the ms4-method, followed by a computation of the dissimilarity matrix , and the construction of a split-network  to a family of  <dig> hiv/siv genomes. the input for the calculation of the dissimilarity matrix consists of the classes selected by ms <dig> with κ =  <dig>  for values of n between  <dig> and  <dig>  we use here the same  <dig> non-recombinant hiv /siv  nucleotide sequences that we studied previously in  <cit>  by using the n-local decoding method. these sequences include four incomplete  sequences . these short sequences are subtyped in the sequence databases, so they appear to have kept subtyping signals that are in the complete genome sequences. the  <dig> complete sequences range in length from  <dig> to  <dig> nucleotides. all these sequences can be retrieved from the los alamos hiv sequence database  <cit>  . the accepted groups are as follows:

 <dig>  hiv- <dig> group m ,

 <dig>  hiv- <dig> group n,

 <dig>  hiv- <dig> group o,

 <dig>  hiv- <dig> groups a, b, g,

 <dig>  siv-cpz 

 <dig>  siv-smm 

we produce a network by application of splitstree <dig> on the basis of a dissimilarity matrix given by the ms <dig> method. fig.  <dig> shows the network obtained by our calculation. the network is quite tree-like. the two types of hiv are clearly distinguished: hiv- <dig> is closer to siv-cpz and hiv- <dig> is closer to siv-smm. the hiv- <dig> group m, on the left, is clearly separated from the rest. the nine subtypes of hiv- <dig> group m  cluster distinctly, with sub-subtypes significantly more closely related to each other . subtype k is more distant from sub-subtypes f <dig> and f <dig> than these are from each other, but closer to them that to other subtypes. the hiv- <dig> group n intercalates between hiv-1-m and siv-cpz . the hiv- <dig> group o is intercalated between these cpz and cpz-ant that is the borderline in the hiv-1/siv-cpz lineages. hiv- <dig> groups also form clear clusters, respectively, including c, d, e, and f that cover about half of the gag region.

within the hiv- <dig> viruses, notice that the hiv- <dig> area, with the exception of the groups a and g, is less tree-like than the rest. from the aspect of the network, it seems that hiv-2-c tends to cluster both with hiv-2-b and with siv-smm. another example is siv-smm-mac which tend to group with both hiv-2-f and with hiv-2-d. notice that the sequences hiv-2-c, hiv-2-d and hiv-2-f are short.

these groupings, which were obtained without alignments and without parameters, agree with accepted classifications.

in our previous paper, we varied the parameter n and we selected values of n that agree with existing knowledge; it turned out that correct tree topologies were found for n in the range from  <dig> to  <dig>  the fact that the same groupings were found by the ms <dig> method with no other input than the sequences themselves gives us some confidence in the validity of this approach.

hiv/siv sequences from the compendium 2000
we have also calculated a split network from the  <dig> hiv/siv complete nucleotide sequences of the compendium  <dig> , and compared it with a tree available at  <cit> . the result of our calculation is tree-like, and agrees with the topology of the compendium tree .

major genes of hiv/siv
the major genes  of the hiv/siv sequences  were also tested.

 <dig>  for gag we have  <dig> sequences:  <dig> complete sequences  and  <dig> partial sequences covering about half the gag regions .

 <dig>  for pol : we have  <dig> complete sequences .

 <dig>  for env : we have  <dig> complete sequences .

the regions pol and env were unavailable for the  <dig> hiv- <dig> groups c-f. the trees obtained for gag, pol and env give a good classification and the same description can be done for them as that detailed above for the  <dig> complete sequences .

ms4-classification of short sequences: nef and non-coding ltr sequences
non-coding ltr
in order to test our method, we have also looked at parts of the hiv/siv genomes that are notoriously hard to align due to inner repetitions in the sequences. one of them  covers the non-coding part of long terminal repeat . the lengths of this part range from  <dig> to  <dig> nt in the hiv-1/siv-cpz subset, and  <dig> to  <dig> nt in the hiv-2/siv-smm subset. these short non-coding segments contain many duplications/insertions/deletions that make them difficult for traditional alignment-based phylogenic studies.

the network obtained  shows again a clear separation between hiv- <dig> and hiv- <dig>  even though it was constructed with short and "difficult" subsequences. it is less treelike than the network obtained from the complete sequences, which is not surprising. the comparison between fig.  <dig> and fig.  <dig> show several features which may require further investigation: while the complete genomes produce very strong grouping of the sub-types hiv-1-m, the non-coding ltr show several discrepancies for these sub-types. the clustering of hiv- <dig> , siv-smm, hiv-1-o, siv-cpz and hiv-1-m is correct. the network  is similar to the tree in our previous paper  <cit> .

it is interesting to notice that the two hiv-1-n are not very clearly grouped together. the sequence aj271370_hiv-1-n is grouped both with the chimpanzee group  and with aj006022_hiv-1-n. on the other hand, aj006022_hiv-1-n tends to group both with the other hiv-1-n and with af061640_hiv-1-m-g . in the neighbor joining tree of  <cit> , the two hiv-1-n are grouped together with a bootstrap value of 95% and connected with the group siv-cpz with bootstrap value of only 55%.

even though our results show the difficulties of treating the non-coding part of ltr, it should be stressed that our method says something about these sequences. by contrast, these sequences are not tractable by standard alignment-based methods  <cit> .

the featured sequences are reputedly hard to align, because they exhibit several repeated segments. ms <dig>  used together with splitstree <dig>  gives relevant results on these data that are usually set aside for the typing and subtyping of hiv-siv, for lack of sufficient phylogenetic signal. this observation was already present in our previous study which used only the n-local decoding method. in this previous study, we proceeded to the careful - and tedious - scrutiny of several trees, resulting from the nld method for various values of the parameter n. we showed that, for the non coding ltr sequences, the best tree  was obtained for the value n =  <dig>  the splits networks that are obtained by ms <dig>  or by nld for n =  <dig> , are similar and yield correct groupings of the non-coding ltr. one only notes a discrepancy inside group m, nld giving a better clustering of the a subtypes, while ms <dig> groups h subtypes better.

it should be noticed that when we have here varied the maximum average repetitivity κ from  <dig>  to  <dig>  , the obtained classifications turned out to be remarkably robust to this variation .

nfkb region
we focus now on the non-coding region of ltr, to show how ms <dig> deals with repetitions in the sequences. the fig.  <dig> and the figures in additional files  <dig> and  <dig>  show the binding site of the transcription factor nfκb and its flanking regions  <cit> . this site is characterised by the signature gggactttcc, which is present one or two times in the non-coding region of the ltr of hiv/siv genomes .

it clearly appears that, although the parameter κ is here set to  <dig>  this zone contains relevant classes over the whole repeated region. each repeated motif of the nfκb pattern is identified by a different set of ms4-classes corresponding to n larger than the length of the repeated motif. fig.  <dig> illustrates how the ms4-classes on this repetitive region participate to the overall ms <dig> classification. we clearly distinguish the hiv-1-n group which has some similarity with siv-cpz, the group hiv-1-o, and the group hiv-1-m in which we can distinguish e.g. the subtypes hiv-1-m/g, c and j. the hiv- <dig> sequences are clearly separated into three groups a, b and g which show similarities with siv-mm. this example illustrates the facts that  repeated segments are taken into account by the ms <dig> method, even for κ =  <dig>  and  each repeated segment participates in the classification of our set of sequences. fig.  <dig> also illustrates the way that the re-writing of sequences in terms of ms4-classes defines the dissimilarity between sequences . for instance, in the sequences hiv-1-m/j, a class, such as 'a49', corresponds to an exact word of length  <dig> shared by the two sequences. these classes correspond to the value n =  <dig> when the similarity concerns only  <dig> sequences  but a smaller n when it is shared by more than  <dig> sequences .

the nef sequences
we have also studied the  <dig> nef sequences . the classification by ms <dig> is correct except for a few discrepancies : in the group hiv-1-m, sub-subtypes f <dig> and f <dig> mix together, and the position of subtype k is uncertain between f1/f <dig> and j . in both cases  that we just saw, it is obvious that a full classification is not possible due to conflicting signals, and it is necessary to find homologous sites on a multiple alignment .

here we examine more precisely nef, a sequence which is important for the virulence of the virus. we show a multiple alignment of the  <dig> sequences . the dialign  <cit>  multiple alignment has been manually edited by putting in the same column the sites corresponding to one ms <dig> class . the results have been visualized with the help of jalview  <cit>  which is a multiple alignment editor which allows the user to define, for each color, the set of sites that carry that color. the fig.  <dig> shows an unambiguous sector of this alignment. the identifiers of the classes are not shown on the figure, but jalview fortunately allows the user to click on a letter and recover this information. identical letters  that are on the same column and with the same colour belong to the same class. we clearly see on fig.  <dig> that there are classes that appear only in hiv- <dig>  classes that appear only in hiv <dig>  and classes that appear in both. the fact that sequences can be correctly classified by ms <dig>  suggests that the majority of sites regrouped in one class correspond to blocks of homology between sequences.

CONCLUSIONS
this paper gives a description of the multiscale selector of sequence signatures  method and uses it for an alignment-free classification  of a family of sequences. the core of the method consists in the selection of "relevant" classes of segments, which are assumed to carry similarity information, although the criterion for grouping them together is purely combinatorial . the point of our method is that it does not require the specification of a word length parameter and it does not consider only exact words.

the user may choose a parameter κ which reflects the average repetitivity of the set of sequences under consideration. the default value κ =  <dig> yields satisfying results in the examples we have considered so far. ms <dig> sets automatically a local length parameter n which depends on the starting set of sequences and local similarities between sequences.

in this paper, we test the method on a set of well-studied hiv/siv sequences  <cit>  on which one of us is an expert  <cit> . the results obtained are in excellent agreement with the accepted knowledge. the ms <dig> method has also been applied to other data . it should be noted that it is not accurate on too small datasets. in our experience, this program can be applied in its present state to sets composed from a dozen to a few hundreds of sequences . note also that ms <dig> works for protein data as well as genes .

as n decreases, the n-local decoding method detects weaker similarities, before being flooded by spurious ones  <cit> . concerning the selection of equivalence classes, our aim is to select as many non-redundant homologous segments as possible, while keeping the background noise at a low level. our default criterion for "relevant" classes locally sets n above this level, at the cost of losing some occurrences of repeated similar segments. by tuning the parameter κ, it is possible to accept a maximal average quantity of repetitions below a given threshold. when κ is set too high, the result of the classification can degenerate, and tends towards the mere letter-composition criterion as κ tends to infinity. by default, we exclude repetitions of any given class in the same sequence. however, even for this value, the repeated segments are not lost altogether. when the value of n becomes larger than the size of the repetition, the ms <dig> classes only change  up to the value where different repetitions are assigned a different ms <dig> class. this can indeed result in a clearer identification of the distinct homologous repetitions. this phenomenon is illustrated on the well known repetitive nfκb binding regions of non-coding ltr . although our current criterion can be tuned to take repetitivity into account, the classifications of the hiv/siv sequences turn out to be remarkably robust to the variations of the parameter κ . nevertheless, it seems desirable to get a more significant criterion, statistical-based, to prune the tree formed by the whole set of embedded partitions . the last step concerns the computation of the similarity matrix. our similarity is straightforward: it consists in counting the number of ms <dig> classes that are shared by  <dig> sequences. this corresponds to a usual basic scheme for the comparison of two nucleic sequences . we group together similar sites  as equivalence classes. as a result, a segment of identity of length n between sequences will result in n ms <dig> classes . each ms <dig> class has an equal weight in our dissimilarity computation . in the case of an exact repeated subword of length n between two sequences, the contribution of this subword to the dissimilarity is exactly n.

however, it could be also possible in the future to obtain a splitstree by constructing directly the splits themselves on the basis of the selected segment classes, and to avoid the computation of the matrix. the presence of incompatible signals  in the network constructed by splitstree <dig>  <cit>  from ms <dig> similarity matrices for short sequences, shows, as otherwise expected, that this method must usually be completed by visual expertise. this can be achieved by coupling ms <dig> with multiple alignment editor like jalview  <cit>  . therefore, the classes detected by ms <dig> can be used to help the manual editing of a multiple alignment. we also use them to determine anchor points for the multiple alignment programs  <cit> .

availability
a user-friendly web-interface is available at http://stat.genopole.cnrs.fr/ms4/. it takes as input a file with sequences in fasta format and gives the dissimilarity matrix in nexus format to run the option neighbornet of splitstree <dig>  the allowed parameters are κ  and the range of n for computing the partition tree . the python code is avalaible in additional file  <dig> and upon request from the corresponding author .

authors' contributions
ec and fp conceived the method and wrote part of the code, gg made the code available and implemented the web interface, il gave the original idea for the biological application and expertised the results, gd wrote part of the code, cd and ec drafted the manuscript, cd produced the results, expertised them, and supervised this work. all authors read and approved the final manuscript.

supplementary material
additional file 1
network for compendium <dig> sequences. network for the  <dig> compendium <dig> sequences computed by splitstree <dig> on our ms <dig> dissimilarity matrix with κ =  <dig> .

click here for file

 additional file 2
network for gag sequences. network for the  <dig> gag sequences computed by splitstree <dig> on ms <dig> dissimilarity matrix with κ =  <dig> .

click here for file

 additional file 3
network for the pol sequences. network for the  <dig> pol sequences computed by splitstree <dig> on ms <dig> dissimilarity matrix with κ =  <dig> .

click here for file

 additional file 4
network for env sequences. network for the  <dig> env sequences computed by splitstree <dig> on ms <dig> dissimilarity matrix with κ =  <dig> .

click here for file

 additional file 5
network for ltr sequences obtained with nld. the splitstree <dig> network for non-coding ltr sequences computed with the nld method for a fixed word length of n =  <dig>  nld method is described in  <cit> , it uses a similar similarity index but with a fixed length word. in  <cit>  we used neighbor joining instead of splits networks.

click here for file

 additional file 6
splitstree network for k =  <dig> for ltr sequences. network for the  <dig> non coding sequences parts of hiv ltr computed by splitstree <dig> on ms <dig> dissimilarity matrix for the value κ =  <dig> .

click here for file

 additional file 7
splitstree network for k =  <dig> for ltr sequences. network for the  <dig> non coding sequences parts of hiv ltr computed by splitstree <dig> on ms <dig> dissimilarity matrix for the value κ =  <dig> .

click here for file

 additional file 8
similarity blocks found by ms <dig> in non coding ltr sequences. superposition of ms <dig> classes on a manually expertised alignment of the non coding part of  <dig> hiv-siv ltr sequences focused on nfκb region. this is a nucleotide sequences alignment of the  <dig> non-coding ltr sequences. apart from minor modifications the alignment is the same as that in fig.  <dig> in  <cit> . the alignment is focused on the transcription factor nfκb binding site  and its flanking regions. the names of sequences are indicated with their accession number in los alamos hiv sequence databank. the sequence are regrouped according to their phylogeny. the letters are rewritten by applying the ms <dig> method to the whole non coding ltr sequences. the ms <dig> identifier is constructed as follows: e.g. c24_ <dig> . identical recoded letters that are in the same columns are displayed in the same colour. when they are not all aligned on the same column no colour is used . the repeated motifs inside one sequence are put one under the other. therefore the sequences are often written on several lines to highlight similarities between sequences and inside sequences. most often the similarity blocks are aligned and the great majority of identical indexed letters are on only one column.

click here for file

 additional file 9
region of nfκ b fixation site. the complete alignment, part of which is featured in fig.  <dig>  this figure corresponds to the figure in additional file  <dig>  the colours are the same as in the figure in additional file  <dig> but in this figure the ms <dig> identifier has been simplified as follows: we have just indicated the letter and the value of n. therefore it can be that two different ms <dig> classes that lie on the same column, with the same letter and the same n value are only distinguished by their colour .

click here for file

 additional file 10
network for the nef sequences. network for the  <dig> nef nucleic sequences computed by splitstree <dig> on ms <dig> dissimilarity matrix with κ =  <dig> .

click here for file

 additional file 11
network for the nef protein sequences. network for the  <dig> nef protein sequences on ms <dig> dissimilarity matrix with κ =  <dig> .

click here for file

 additional file 12
python code source. python implementation of ms <dig> algorithm for linux systems. see install and readme files to use it.

click here for file

 acknowledgements
we thank m. pupin, m. nadal and a. grossmann for helpful discussions, m. baudry for assistance with the code, and b. prum and j.l. risler for useful suggestions about this manuscript. ec was supported by genopole and by the deutsche forschungsgemeinschaft under reference dfg project mo 1048/6- <dig>  we thank anonymous referees for their comments.

appendix
algorithm  <dig> main steps to select relevant classes in the partition tree

input: all equivalence classes e ∈ ℰn, for n ∈ {nmin, ..., nmax}

input: ∑ set of all sites

1:

2: // initialize the ms <dig> equivalence classes

3: relevanteclist←{∅}

4:

5: // initialize the partition tree p: add leaves  in p

6: for each site σ ∈ ∑, ∑ set of sites do

7:    // add a new node in the partition tree p and initialize κ

8:    addnode

9:    κ ←1

10: end

11:

12: // main loop

13: n ← nmax

14: while n ≥ nmin do

15:    for each equivalence class e ∈ ℰndo

16:       // build a, the highest ancestor set of e in p

17:        ← {∅}

18:       for each site σ ∈ e do

19:           ← ∪ gethighestancestor

20:       end

21:       // compact the partition tree if only one ancestor is found

22:       if card() >  <dig> then

23:          // add a new node in the partition tree p

24:          addnode 

25:          // compute κ:  is the number of sequences where equivalence class e appears

26:          κ  ← card/

27:          for each equivalence class a ∈ do

28:             // set inclusion relation a ⊂ e in the partition tree p

29:             addedge).

30:             if κ  <κ and κ ≥ κ then

31:                relevanteclist ← relevanteclist ∪{a}

32:             end

33:          end

34:       end

35:    end

36:    n ← n - 1

37: end while

38:

39: // create root node , connect it to the highest ancestors in p

40: // same as above

41:

42: return relevanteclist
