BACKGROUND
the progress in biomedical field largely relies on results which are obtained both in laboratories and institutions from around the world and published in several journals. with the amount of publications increasing daily, the problem of searching for highly specific data is getting more difficult. as one of frequent activities for the study of biomedicine, bio-entity recognition is receiving greater attention. bio-entity recognition aims to identify and classify technical terms corresponding to the instances of concepts that are of interest to molecular biologists. examples of such entities include the names of proteins, genes, their locations of activity such as the names of cells or organisms, drugs, symptoms, pathologies and so on. entity recognition is becoming increasingly important with the massive increase in reported results due to high throughput experimental methods. it can be used in several higher level information access tasks such as relation extraction, summarization and question answering. recognising biological entities in texts allow further extraction of relationships and key concepts of interest and allowing those concepts to be represented in some consistent, normalised form. this task is challenging for several reasons, because a complete dictionary of biological entities does not exist, hence, simple text matching algorithms do not produce reliable results. in addition, the same word or phrase can refer to a different thing depending upon the context and some biological entities have several names. moreover, biological entities can have multi-word names which can complicate the task with the need to determine name boundaries and resolve the overlap of candidate names. because of the potential utility of this recognition and the complexity of the problem, named entity recognition has attracted the interest of many researchers, and generated much research. with the large amount of genomic information being generated by biomedical researchers, it should not be surprising that in the genomics era, much of the work in biomedical name-entity recognition has focused on identifying gene and protein names in free text  <cit> .

although the search problem has been simplified by search engines, the number of results returned is usually very large, while the relevance of the results may be small. the search based on keywords is unable to answer specific questions about the location and usage of the keywords in retrieval documents. for all these reasons the problem of discovering useful knowledge from unstructured text, is attracting increasing attention. the solution of this problem is called knowledge discovery in text and it refers to the process of extracting interesting and not-retrieval patterns or knowledge from unstructured text documents. the application of knowledge discovery in text in the biomedical field can improve efficiency for researchers by shifting the burden of information overload from them to the computer by applying text mining  automatic procedure. tm examines the relationships between specific kinds of information contained in a single document or across a whole volume of documents. for example, tm can aid database curators by selecting the articles most likely to contain information of interest. this could then lead to the discovery of potential treatments for migraines by looking for pharmacological substances that are associated with biological processes about migraines. knowledge discovery in text and applications of this process are available in the literature  <cit> .

the problems of application based on the mining methods, described so far, often occur in data-intensive situations. these situation require that the same logic be applied to a large collection of different data independent from each other. hence, the limits will be technological if these problems are addressed by traditional machines that sequentially perform the same set of instructions on an entire collection of homogeneous and independent data. the time required for execution will increase according to the size of the collection, hence, this will become the limiting factor in these applications. for awhile now, computing literature was offered possible solutions by proposing for parallel calculating like simd. this latter supercalculator, however, regards expensive centralized computing systems. a more economic solution with dynamic scaling characteristics according to the size of the data collection to be analyzed, is offered by systems weakly linked to calculating networks. recently, a computational paradigm is being explored which suggests creating computer technology pools. these pools have a high use efficiency and can achieve performance levels comparable monolithic calculating systems, i.e. supercomputers. the use of this technology is called grid computing. the type of computing is based on the use of a basic middleware infrastructure on which a middleware solution is constructed. in other words, services which orient the infrastructure to a specific class of use. much effort is being made in europe and internationally to develop this calculating tool for users in the fields of physics, biology and research in general  <cit> .

bio-medical informatics is one of the areas in which grid technology advances could bring significant benefit for the search studies of scientists well as the everyday work of clinicians. recently, there has been much excitement in the distributed and parallel systems community as well as that of distributed database applications in the emergence of grids as the platform for scientific and medical collaborative computing. grid computing promises to resolve many of the difficulties in facilitating medical informatics and medical image analysis by allowing radiologists and clinicians to collaborate without having to co-locate. grid technology can potentially provide medical applications with an architecture for easy and transparent access to distributed heterogeneous resources, like data storage, networks, computational resources, across different organizations and administrative domains. the grid offers a configurable environment whereby structures can be reorganized dynamically without affecting any overall active grid processing. in particular, the grid can address the following issue relevant to bio-medical domains: data distribution, that is, the grid provides connectivity for medical data distributed over different sites heterogeneity, that is, the grid addresses the issue of heterogeneity by developing common interfaces for access and integration of diverse data sources; data processing and analysis, that is, the grid offers a platform for transparent resource management in medical analyses; security and confidentiality, that is, enabling secure data exchange between hospitals distributed across networks which is one of the major concerns of medical applications  <cit> . even though the projects at international european and national levels attempt to achieve these goals on a large scale, work which reconstructs the scenario on a small scale can allow laboratory analyses through the testing of small problems which occur like the experimentation of new analytic procedures at the application level.

in this work, we present a feasibility study to build a middleware for simd applications. their performance is demonstrated with a case study of named bio-entity recognition. the application is based on the knowledge discovery in text to annotate new knowledge from unstructured textual documents. moreover, the middleware offers the ability to perform the application in a distributed environment using grid computing. in particular, software platform gate was used to perform automatic analysis of scientific documents. gate is a toolkit used with the gate java api and its documentation is available in  <cit> . globus is a toolkit which enables the construction of middleware grid services oriented towards data-intensive applications. a large amount of documentation is available in  <cit> . finally, it should be noted that new knowledge discovery procedures could applied to the results of textual analyses to generate new knowledge. an example of this is shown with an application known knowledge discovery in database . the study for the development of a middleware solution which little by little can supply the user with more and more instruments for the analysis of knowledge discovery could define new knowledge discovery procedures. these developments would be of great use for studies in fields such as bio-medicine.

methods
the bioinformatics application, discussed in this paper, concerns the extraction of biological entities related to symptoms and pathologies from a large collection of biomedical papers. in addition, the application searches for new knowledge about them using the knowledge discovery in text for grid computing. in this section, we briefly describe the kdt methodology and then we explain how to simplify a data-intensive application in a simd scalable job from the data and cpu computational resource point of view in a grid environment.

knowledge discovery in text refers generally to the process of extracting interesting information from a large amount of unstructured texts. specific methods and algorithms are required in order to extract useful patterns. text mining is the application of these algorithms and methods from the fields of machine learning and statistics to texts. the goal is to find useful patterns. to mine large document collections it is necessary to pre-process the text documents and store the information in a data structure, which is more appropriate for further processing than a plain text file. although, several methods try to also exploit the syntactic structure and semantics of text, most text mining approaches are based on the idea that a text document can be represented by a set of words. that is to say, a text document is described based on the set of words contained in it. figure  <dig> shows the kdt process based on two phases: text refining or text pre-processing and text mining. the central element of the text mining process is understanding the concepts being presented in the text. the process not only considers the presence or frequency of a word in a document but also aims at finding the relationship between them. by doing so, the mining process attempts to find information contained within a text. the text mining phases are: document clustering, document categorization, and pattern extraction. document clustering is the assignment of a multivariate entity to a few categories  previously undefined. the goal is to gather together similar entities. textual clustering is used as an automatic process which divides a collection of documents into groups. inside these groups, the documents have similarities based on selected characteristics: author, length, dates, keywords. textual clustering can be used to provide a planning of the contents of document collections, to identify hidden similarities, to facilitate the process of browsing and to find correlated or similar information. if the clustering works with keywords or features that represent the semantics of the documents, the identified groups will be distinguished on the basis of the different topics being discussed in the corpus. in document categorization, the objects must be attributed to one or more classes or categories which will have already been identified. classification is the process in which meaningful correlations among frequent data are identified. there are association rules for text categorization. all algorithms operate in two phases to produce association rules. first, all the whole keywords with greater or equal support with respect to the reference are listed to create what is called the frequent set. then, all the association rules, that can be derived from the frequent set and that satisfy the given confidence, are established. in pattern extraction, some patterns are identified following the analysis of associations and tendencies. the discovery of associations is the process in which meaningful correlations among frequent whole data are found. predictive text mining is used for identifying the tendencies in collected documents during a given time period while association analysis identifies the relationships among the attributes, for example, if the presence of a pattern implies the presence of another pattern in documents.  <cit> 

the middleware solution allows the user to move from the situation in figure 2a situation to that in figure 2b. to achieve these goals the system will operate on an open source grid infrastructural middleware based on a data-intensive grid toolkit solution. the operations required of the system are: locating, submitting, monitoring and deleting remote jobs on grid-based computer resources; a reliable data transfer which is optimized for high-bandwidth wide-area networks; a transfer optimization; a node discovery; a load balancing; the management of the user simd applications and finally a simple graphical user interface . figure  <dig> shows the functional components of the system and the organization of them. the computational grid with its services is the physical layer. it interacts with the system with the shell scripts. the functional management system layer, obtains the user requests with the graphical user interface and executes them using the shell script level parameterization and invocation. gui allows the user to specify: the applicative module that will be distributed on the grid, the data set on which the user module will be executed and the computational grid nodes. the user selects the simd application in order to perform the job by specifying the data set and the directory where the result produced by the grid can be stored. data and the instruction set are sent to the remote nodes after being compressed by the transfer optimizer. next, remote computation on the several grid system nodes begins. at the end of the remote computing, each node locally compresses the computing results, and the system makes the results available to the user. the functional management system is composed by several components that interoperate. the node research system is based on a scheduler to obtain all the information about the grid nodes' status, which allows a dynamic management of the grid nodes. the load balancer maintains a reasonable workload sharing between the grid nodes selected by the end user for the grid computation. the user job is processed analyzing the input data set and the computing node set with the aim to transform a single job in parallel jobs. the system propose a simd applications management component to extend the system applications based on the plug-in approach. after a preliminary phase in which the new application is linked to the system, the end user can select it with the gui. it is well known that a critical factor for the elapsed-time of grid distributed applications is the time required by communications. for our applications, the communications consist of network data transfer  and instructions  and then the remote computing results download in the user node. in order to optimize the communication time, the data is compressed to significantly reduce the data dimension run on the network. the compression factor and the advantage of this technology depend on the source data type. the transfer optimizer produces compressed packages containing a data set and an instruction set. before being sent to remote nodes, the compression is also applied when the results computation return. the shell script grid interface consists of a collection of script modules used to start a remote or local job and to allow the parallel execution of calls  <cit> .

RESULTS
the results of the feasibility study concern both the technological choices adopted for the construction of the prototype and the demonstration of these through the use of bioinformatics applications. the latter is in relation to the study of the knowledge discovery of bio-entities which included symptoms and pathologies contained in a collection of  <dig>  documents. figure  <dig> shows the system prototype's architecture with reference to the technological choices adopted. in particular, the software platform gate was utilized for the knowledge discovery in text. the infrastructure of the resources of the calculations based on the computational grid was created with globus toolkit. finally, the middleware solution system referred to a code developed in java language through the java virtual machine. moreover, it expressed the actual grid requests with linux shell script components and implements its internal services related to the job management functions through calls to the services available from gram, gridftp and condor system. gram enables the remote execution management where there is reliable operation, statefull monitoring, credential management and file staging. gridftp provides high-performance, secure technologies for reliable data transfer, while the condor system is a specialized workload management system for compute-intensive jobs. it provides a job queueing mechanism and a scheduling policy. moreover, the middleware solution is able to manage different user simd application modules. these modules give a codified description of the program, which is to be performed, through operational requests of knowledge discovery made available by the environment that is being used. the uams are built with the use of a template. figure  <dig> shows the gui of a prototype accessable to a user for communicating the job to the system

the experimental set-up used to execute the test-run of the prototype was as follows.:

a. using the gate plug-in standaloneannie.java template file  <cit> the bioinformatics application for pathology and disease recognition was written as a java module and integrated into the system;

b. a data collection consisting of  <dig>  medical publications in text files format was created by pubmed central repository

c. a list of keyword about symptoms and another keyword list about pathologies have been created by  and  respectively. they were specified as lst file as required by the template file of annie plug-in for gate;

d. the rules on which gate worked were defined in terms of exact matching with keyword lists and described using the jape template file of annie plug-in for gate. figure 6and figure 7show an example of pseudo-code rule specification.

e. a computational grid was based on three computational nodes, the server, alfa and beta, gnu/linux machines operative on  <dig> mbps ethernet lan were created using globus toolkit  <dig> . <dig> with the access interface for condor on the pool. prior to this, the condor scheduling system had been installed for each machine. the follows grid services were configured: gridftp, for file transfer, gram for resource management and job submission, the mds monitoring and discovery system  and rtf for the secure file transfer operating solely on the server node, which is a central grid node for the reliable transfer management

f. gate installation and configuration on all grid nodes.

the test run started with a user logging onto a generic grid node and launching the system which showed the graphical user interface. then the user specified the correct program module to be performed as well as the data set collection and the output directory. next, the user interacted with the node search system which, after query, showed a node list in the "available nodes" window for the computation. the user selected the nodes needed to execute the required user module and then used the "update" button to update the "selected nodes" window. figure  <dig> shows what appears on the graphical user interface of the prototype after the user interacts to describe the test-run. the system was then ready to start the simd computation on the grid and the text mining process was performed on the biomedical papers according to the job description specified in the user module. a part of the text mining results are show in figure  <dig> as the real output produced by the system. we evaluated the contribution in terms of the time needed by the grid for the application. first, a run-time module of the input data set, which consisted of  <dig>  documents, was evaluated on a traditional serial machine as follows:

  

then, the data upload and data download times and user program module on the grid nodes were calculated by performing a simple mathematical calculation. considering the typical adsl bandwidth and the user program module run-time on the one node, the total run-time on the grid was:

  

let:

  

the speedup factor referred to how much faster a parallel algorithm was in comparison to a corresponding sequential algorithm using the grid. the factor was computed for a node number ranging from  <dig> to  <dig> for various size documents. figure  <dig> shows the trend of the speedup coefficient in correspondence to the growth of the node multiplicity. it shows that the use of the proposed middleware gave a real advantage when applied to jobs treated as simd that find real implementation on distributed systems like those proposed by a computational grid. this benefit was more noticeable with the increased size of a document.

discussion
this study began from the standpoint that, in biological research, new finding can be expressed through the analysis correlated, unstructured information present in publications and scientific documents. the application executed in this study adapted the knowledge discovery in text process to the task of extracting biomedical knowledge, in terms of symptoms and pathologies. this facility could be a profitable support for physicians and medical researches needing to make important decisions. the strong points of the proposed system are that it can be used for applications in which the data can be partitioned into different and independent data-sets. moreover, another fundamental characteristic of the proposed system was the grid-based approach, which was to be able to supply high performance computing infrastructures to satisfy computational problems in this field. finally, we believe it is useful to emphasize that the knowledge discovery process in text should be considered one phase in a larger knowledge discovery program. here, we have briefly reported a part of the finding obtained by applying to the knowledge output from kdt a further important process of knowledge discovery in database . the field of kdd includes a new generation of techniques and tools for the automatic and intelligent analysis of large volumes of data, "data mines", in order to extract hidden knowledge.

kdd is a process of identification of patterns and charactering trends on data. the trends have a certain level of general validity which are not taken for granted or noted but are potentially useful and easily understood. numerous studies discuss the application of these techniques to biomedical studies. the findings presented here were obtained using the waikato environment for knowledge analysis or weka  <cit> . they show a further depth of knowledge extractable through the use of symptoms and pathologies, as reported in figure  <dig>  the final consideration could benefit from the development of a middleware solution specializing in more generalized cases of knowledge discovery. to achieve this objective, the next prototype will involve the integration of user application modules oriented for kdd based on the weka4ws  <cit> . the latter is designed to take advantage of a computational grid environment to propose data mining analyses, which are different on the same groups of data, for the creation of optimized models.

CONCLUSIONS
in this paper we have presented the development of a middleware solution for a bioinformatics knowledge discovery in text process. it was designed for medical text documentation using a testbed computational grid based on globus middleware. we have discussed a knowledge discovery in text process performed on medical papers with the purpose of identifying all the specific names for biological entities with particular attention placed on the name recognition of symptoms and pathologies. particular attention has been given to the grid-based environment, its software architecture and how it may be possible to design a modular application to use gate functionalities in a grid-based solution.

competing interests
the authors declare that they have no competing interests.

authors' contributions
mc conceived of the study, and coordinated the design and test of the middleware application and drafted the manuscript. gm participated in the design of bioinformatics application and evaluation. rb participated in the study of knowledge discovery techniques. gt participated in the test of middleware and knowledge discovery study and carried out experimental results for the knowledge discovery application, and helped to draft the manuscript. all authors read and approved the final manuscript.

