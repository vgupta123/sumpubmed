BACKGROUND
recent years have seen an explosion in the rate at which biological data is generated and utilized. high-throughput technologies such as microarrays and rna sequencing, that allow biologists to conduct experiments that measure the expression of tens of thousands of genes simultaneously, are becoming increasingly accessible and online data repositories continue to expand to give biologists unprecedented access to data recorded under an increasingly diverse set of experimental conditions  <cit> . it is widely recognized that these new sources of data have great potential to improve the diagnosis, treatment, and prevention of diseases  <cit> . however, the very scale and complexity of the data that gives it such potential can also make effective analysis problematic. if we consider a typical microarray data-set, we know that it can report gene expression for up to around  <dig>  genes over  <dig> conditions and  <dig> time points  <cit> . so, in a single experiment we can have over three million data values. simply storing or transforming these quantities of data can be problematic before we even begin to consider a way to present the data so that an analyst can extract valuable information.

a general methodology employed for the analysis of large scale gene expression data has been to use filtering and clustering to disregard less interesting parts of the data and generate a more 'manageable' data abstraction  <cit> . this allows the data to be visualized and an analyst to detect the general trends determined by the particular clustering algorithm employed. a disadvantage of this course of action is that it can lead to the loss of certain characteristic patterns such as changing activity over intervals of time . here, a rise then a fall in expression found over a particular interval could suggest that a group of genes are related to a particular biological process and that that process is associated with the experimental conditions. these types of pattern involve less of the data than the general trends found by clustering but nonetheless show great potential to generate biological insight  <cit> .

in order to allow biologists to discover these types of patterns we developed the time-series explorer  technique  <cit> . this allowed us demonstrate the ability of an animated visualization technique to reveal previously unsuspected patterns of temporal activity in large scale microarray data. the gene expression time-series explorer  builds on this functionality to support a broader spectrum of user requirements for the analysis of gene expression time-series. this includes various improvements such as better performance, the accommodation of missing data, the facility to compare multiple groupings, a view of gene groupings and new functionality to support collaborative visualization. this paper describes the design and development of the new application.

related work
current techniques developed for the exploratory analysis of large scale gene expression time-series data largely rely on procedures developed for the analysis of multidimensional data. these process the data to form clusters  of genes based on the relative similarity of recorded expression . time-series data can be conceptualized as a specialized subset of multidimensional data  <cit>  with the distinguishing characteristic that dimensions  are ordered. clustering techniques do not account for this aspect of the data and, as a consequence, are ill-suited to revealing certain potentially significant patterns in the data  <cit> . specifically, clustering tends to miss out patterns that occur exclusively over smaller intervals of an experiment's time frame such as previously described in figure  <dig>  despite the fact that genes may share a similar profile over an interval of the data time-frame, differences in their expression over the remainder of the time course prevent them from being assigned to the same cluster. the application of feature extraction and fuzzy clustering could resolve this problem by accounting for the order of values and allowing genes to belong to more than one cluster  <cit> . this would, however, greatly increase the number of results by returning a cluster for every temporal pattern in the data without providing the user with any obvious way to explore the results.

visual queries are an alternative method of analysis used to find genes with a specified pattern of activity over an interval of the data. to form a visual query the user draws a shape over a line-chart overview of the data to specify either: an acceptable range of values over an interval  <cit> , a positive or negative change between time-points  <cit>  or a profile of adjacent expression values  <cit> . since line-chart overviews of time-series data are only really effective at showing the range of values at individual time points the biologists needs to already know the sort of expression pattern they are looking for before forming their query. so, while these methods allow a biologists find out which genes have a particular known expression pattern, they are incapable of allowing them to reveal any new unsuspected patterns.

when visual queries are combined with clustering views, the combination provides both an overview and a means of querying the data to look at interval patterns. neither of these techniques is, however, capable of allowing a biologist to find unsuspected interval patterns and their combination does little to counter the limitation of either technique in this respect. likewise, when different clustering views are linked they can be used to compare dominant trends but there is still no scope to find the patterns that each clustering view would be incapable of finding if applied in isolation. so, the interactive techniques that supplement clustering do not allow biologists to find interval patterns in their data.

other techniques overlay line-chart views of gene expression data onto a gene network graph  <cit> . these techniques allow users to find interval patterns only if the genes involved already happen to be clustered together in the original gene network diagram. this makes it difficult to find co-expressed genes that do not already have some known association. these techniques are also limited by the amount of data that they can display and are generally used to view small parts of a gene network rather than provide an overview of the results of a high-throughput experiment.

the time-series explorer
the time-series explorer technique  <cit>   was developed to overcome the limitation of existing techniques in order to allow biologists to explore large scale gene expression time-series data to find unsuspected patterns of temporal activity . the technique employs two primary coordinated views of the data: a line-chart and a scatter-plot. the line-chart has two jobs. firstly, it provides an overview of the data-set by overlaying value versus time representations of the recorded activity for all genes. the line-chart also allows the user to specify an interval of time. the scatter-plot summarizes the data within the selected interval by representing each gene as a single point. genes are positioned so that their translation along the y-axis corresponds to activity over the selected interval and translation along the x-axis corresponds to change-in-activity from the start to the end of the selected interval. as the line-chart view controls are adjusted and the selected interval is moved , the positions of genes in the scatter-plot are recalculated with repeated continuous adjustments of the selected interval resulting in an animation. this allows users to perceive patterns of gene activity over time.

implementation
matse  <cit>   builds on the functionality of tse to support a broader spectrum of user requirements for the analysis of gene expression time-series. in order to ensure that the application would address a broad range of real world user requirements we held a one day workshop attended by biologists from diverse sub-disciplines such as vascular biology, immunology, bioinformatics, statistics, developmental biology, agriculture, botany and inflammation. this, and subsequent follow-up meetings, allowed us document the limitations of the time-series explorer and identify additional requirements for a new application. an example of a limitation was that patterns found were not measurable in tse and that the biologists wanted results to be quantifiable so they could be stored during an exploration and shared or referenced at a later date. examples of additional functionality requested were; the ability to cross-reference results with existing gene groupings, the representation of missing data, support for multiple experimental conditions, and rescaling to support different types of data. performance also needed to be improved for the software to handle larger data sets.

this requirements analysis informed development of matse. the initial stages of development focused on the core functionality of the data-model and animated scatter-plot. the objectives here were to improve performance and refine the layout to support measurable queries. we then worked to incorporate the display of missing values, the visualization of multiple conditions, the visualization of gene groupings and finally, the functionality required to support cooperative visualization. this plan focused on delivering working prototypes to involve users as early as possible in the software life-cycle. it was felt that the more we could engage potential users in evaluation the more effective our final application would be at addressing a wide variety of relevant end-user requirements.


from previous experience evaluating bioinformatics tools  <cit>  we found that biologists evaluating a technique working with their own data, or at least data directly related to their own work, tended to be more motivated and generate better results. biologists working with their own data also tended to find it easier to generate scenarios for evaluation since these can be based on their own objectives rather than simply imagined. they are also less likely to misunderstand the data and falsely interpret faults with the application. in general the process of evaluation was more natural when the biologists could envisage more familiar scenarios. this was crucial for the development of a system such as matse where the results of the analysis would depend a lot on how the user interacted with the system. a potential drawback of test subjects working on their own data is that users might focus on data-set properties that are of particular interest to themselves rather than leading phenomena in the data under study. this could lead to the development of a tool that was specialized toward a particular biologist or a smaller group of biologists. while the tool we planned to develop was specialized to a degree in that it would focus on exploratory analysis of temporal patterns, we also wanted the tool to be useful across different sub-disciplines. therefore, to mitigate the bias of any one particular biologist or group of biologists, efforts were made to validate evaluation findings with the larger group of biologists involved in our initial user requirements meeting. this was done before results were used to generate new user requirements. while this was costly due to time it took for new requirements to be vetted, we considered that the overall benefits of users working on their own data far outweighed the disadvantages.

data import
matse supports two separate repository file formats  and an additional native csv based file format for users who wish to import their data from a microsoft excel or equivalent spreadsheet. data import handles multi-condition data, replicates, ratios, and missing values. to ensure the data is properly interpreted a data import wizard helps users correctly identify data columns, compare conditions and re-order time points. the wizard also allows users to scale their data in order to better view the types of change they are most interested in. scaling options include per value rescaling  and rescaling to a given data point or combination of data points . initially these options were only available through the import wizard, but evaluation showed that users often wanted to change rescaling options during an analysis session depending upon which option was most useful at any given point in time. hence, rescaling options were eventually incorporated as an option that could be adjusted during analysis by selecting options in a toolbar directly above the main visualization panel.

scatter-plot view
the scatter-plot views of the time-series explorer application  <cit>  and matse  <cit>  both summarize data inside a selected interval by representing each gene as a single point with gene's translation along the y-axis corresponding to activity over the selected interval and translation along the x-axis corresponding to change-in-activity from the start to the end of the interval. the definitions of activity and change in activity, however, differ substantially . for matse, activity is calculated as the mean value over the interval and change in activity is measured as the difference or fold change between values. this allows matse to overcome a significant limitation of tse and operate with negative values and normalized data. matse also avoids a limitation of tse and allows the user to select a time interval with a duration of zero. here, the × axis change-in-value is interpolated using the values for the nearest proper intervals directly before and after the selected interval. this interpolation is also used for animation between time-points. to avoid the interpolated values being used to form queries , the start and end of the interval selection automatically click to the nearest time-points for which expression is recorded at any time the user is not adjusting the interval selection.

attribute definitions are illustrated in figure  <dig> 

visualizing missing values
gene expression data frequently suffers from missing values. this can be either due to experimental reasons or post-processing where the variability of recorded values makes it inappropriate to include any value in the resulting data-set. for the development of our gene expression time-series explorer application we decided against omitting the representation of missing values altogether since this might give the false impression that the genes for which data was not shown were not included in the experiment. instead we decided to interpolate missing values where possible and change the manner in which they were represented in order to avoid them being attributed undue significance.

to represent missing or interpolated values, matse uses dedicated visual attributes. these are dotted lines when interpolating over missing values in the line chart and dots with missing segments for interpolation in the scatter-plot . this is consistent with visualization guidelines to use less 'ink' to represent data with less evidence. while other applications use annotation and animation for missing values  <cit> , in matse animation is already used to communicate the change in expression for genes and we have too many genes to annotate them individually without introducing excessive clutter.

visualizing multiple conditions
high throughput gene-expression experiments are often repeated with a single variable changed and biologists need to compare data generated under different conditions. here the independent variable might be an environmental factor such as temperature, an exposure to a different treatment, or some form of genetic modification. the effect of these additional conditions on the data is to add another dimension and multiply the size accordingly. to support multiple conditions in matse we provide the user with an overview line-chart for each condition and a linked scatter-plot and line-chart for a single in-focus condition . this design allows users to compare patterns across conditions using line-chart views and explore to find patterns, or investigate patterns in more detail, as they would for a single-condition data-set using the linked line-chart and scatter-plot.

visualizing gene groupings
in bioinformatics, genes groupings can indicate things such as functional similarity, the encoding of a common protein or co-expression under particular conditions. these groupings can be extremely useful for biologists when it comes to assessing to significance of any patterns found during the analysis of a data-set. in matse, gene groupings can be imported from external sources, created from gene selections in the interface, visualized, and exported to files. the alternative methods for visualizing gene groupings are: colour coding, outline colour, symbols, areas with texture and colour, and smoothed outline shapes with transparent shading . these employ the qualitative colour-coding schemes proposed by brewer  <cit> .

when we evaluated these different methods it was found that users considered outlined transparent shading to be the most effective and aesthetically pleasing option. while this method had a potential false-positive effect of circling genes that do not belong to the encoded group, users did not consider this to be a serious disadvantage. this was how they expected the highlighting to work and if they specifically wanted to see the individual genes of a grouping highlighted in the scatter-plot they could select those genes by clicking on the group name in the gene-grouping panel. in order to interpret the display the biologists were able to use the metaphor of a line drawn around a group of points on a projection of a scatter-plot over a whiteboard. this technique worked well with up to four individual gene-groups being viewed at the same time. the biologists involved in evaluation considered that this would be sufficient for the majority of their requirements.

cooperative visualization
an advantage of having scatter-plot coordinates based on measurable parameters in matse is that it allowed us to adapt the interface to support a process of collaborative visualization where biologists are able to work together toward an understanding of the data and biological phenomena under investigation  <cit> . this process is based on entities called 'patterns' which are defined as findings or insights that can be summarized using a selection or group of selections together with their result. in matse genes are selected by first selecting an interval then clicking and dragging to draw a box around groups of genes in the scatter-plot. selections can be combined using boolean logic and, or and not rules and the stored specification of a pattern includes the parameters used to form queries, the logic used to combine the queries and contextual data such as the data-set identifier and details of any transforms applied to the data during pre-processing. patterns are automatically stored and listed in a 'patterns' panel  <cit> . this panel can also be used to annotate, restore, combine, refine or export patterns for them to be passed to other users. in order that patterns are understandable when they are recalled or shared, query parameters are restricted to rounded values  and superfluous parameters are removed as queries are formed .

RESULTS
the final matse prototype  allows users to perform exploratory analysis of gene expression data by controlling linked line-chart and animated scatter-plot views to view patterns of gene activity over time and find unexpected patterns of changing activity. this can be achieved for with at least  <dig>  genes with activity recorded over  <dig> time-points on a low spec desktop computer designed for personal use with 4gb ram and a 2ghz cpu. matse also allows the user to view missing data, visualize multiple conditions and overlay gene groupings. the user can also store the selections used to select genes. these selections are grouped together as 'patterns' which can be stored, restored, adjusted, exported and shared with other biologists .

matse provides a unique view of gene expression data that allows users to explore and find patterns of changing activity over intervals of time that have the potential to lead to biological insights  <cit>  . these patterns cannot be found using either clustering techniques or established techniques that allow the user to compose visual queries. clustering tends to lose these patterns due to more dominant patterns over a larger time frame while visual queries rely on a pattern being suspected before the user composes a query.

matse is also unique in that it allows queries to be adjusted in a predictable manner. while a number of tools allow users to share findings by saving and restoring application states , analysis steps cannot be adjusted in a predictable way or with adequate feedback of results. the majority of software applications used for the analysis of microarray data rely on clustering algorithms which prescribe a fixed set of gene clusters based on gene-gene activity similarity scores. a finding from this type of interface tends to be an individual cluster exhibiting a pattern of gene activity with a gene population that is correlated with a predefined gene grouping or biological pathway sourced from the literature. for a user to alter a query on which a clustering finding is based they would need to select an alternative grouping, specify alternative clustering parameters  or use an alternative clustering algorithm. in the former case the results would be unrelated to the original result and in the latter two cases the outcome is highly unpredictable as an entirely new set of gene clusters will be generated with little relation to the original set  <cit> . visual query techniques also fail to provide adequate feedback of results when queries are adjusted since the overview provided is unable to reveal anything other than the range of values at individual time points  <cit> . changes in activity are represented by angled lines between time-points in a line-chart and the majority of lines are occluded. conversely, since matse provides an overview of meaningful attributes for genes over the selected interval for every query that is formed , any specification or adjustment of query parameters has a predictable result with immediate feedback of results.

evaluation
usability is a critical factor for the effective development of information visualization applications  <cit> . it was therefore important for the matse project to employ a user-centred development methodology. to make use of user feedback throughout the software life-cycle we employed an iterative development strategy where a succession of prototypes would gradually introduce new functionality to be evaluated and refined before the production of a final prototype with full functionality. to ensure we considered the actual needs of a wide range of potential users, evaluation was conducted with real life representatives from all of our target user groups. these included academics, industrial users, bioinformaticians, experimental biologists, and users with a general knowledge of multiple areas.

during evaluation we used a mixture of techniques designed to elicit qualitative feedback from smaller groups of expert users  <cit> . these included interviews, demonstration and hands-on observation of real world exploration using the speak-aloud protocol and heuristic evaluations. our final evaluation involved interviews and further real world testing in the form of case studies. to remove bias, these employed users not involved in evaluation sessions during the earlier stages of development cycle.

case studies
this section describes excerpts from two case studies used to demonstrate the functionality of matse. the first of these studies was to compare results obtained with matse with those obtained with other approaches. this involved repeating the process of finding a known pattern that was previously unexpected and found using tse  followed by analysis of the same data with alternative analysis techniques. the second case study involved biologists analyzing a data-set to test functionality such as the creation and visualization of gene groupings.

the first case study involved a data-set  recording the expression of around  <dig>  genes over  <dig> time points belonging to four successive stages of development in mouse breast tissue: virgin , pregnancy , lactation  and involution . a more complete description of the data is made by stein et al and full annotated data is available online  <cit> . this data-set was analyzed first using matse then with software that allowed users to combine clustering and visual querying.


analysis with matse began with the data being rescaled in the data import wizard so that values are expressed as the fold change from the first time point for each gene. this involved selecting a 'per-value rescaling' method of 'log2' and a 'data category to scale to' of 'v10'. the next stage of analysis involved finding a known pattern of activity to confirm that there were no problems with the data or experiment and that matse displayed the data in the way the biologist expected it to. here the biologist moved the line-chart view sliders to focus on the time period at the start of lactation  and moved the mouse cursor over the scatter plot to look at genes with rising activity . a number of the genes labelled were found to be familiar. this reassured the biologist that their understanding of the matse scatter-plot layout was correct and that patterns found in the data could be trusted.

next the biologist shifted their attention to finding more unsuspected patterns of activity. this involved selecting an interval fixed at one time-point and exploring the data by pressing 'rewind' then 'play'  to animate through the data-set and sporadically pausing to adjust the selected time interval manually. the resulting animation allowed them to find a number of general trends in the data such as a general flattening of the scatter-plot along the horizontal axes at the start of lactation. this indicated that there were a large number of genes with significant changes in their expression around this time and was a pattern that could be seen again when the data was clustered. the animation also allowed the biologist to find a previously unsuspected pattern of activity with potential biological significance. this was evident when the scatter-plot was animated from interval p <dig> to p <dig> through to interval p <dig> to p <dig> . here a small group of outlying genes were seen to swing first out to the right of the scatter-plot, then out to the left. this indicated that the genes shared an outlying pattern of rising then falling activity over the time-frame of the animation. the animation was stopped and the pattern was highlighted in the line-chart view by selecting the genes in the scatter-plot using an excentric labelling tool . the pattern was then stored by dragging a box around the genes in the scatter-plot  and shifting to another interval to refine the selection .

to evaluate the added value of matse and see which patterns could be found using other techniques the analysis was repeated using applications combining various cluster and visual-query views of the data. figure  <dig> shows an example of this with the data being analyzed in the hierarchical clustering explorer application  <cit>  with average link hierarchical clustering using pearson's correlation coefficient as a distance measure. here, and with various other clustering methods, the data tended to cluster into two principle groups with activity either rising or falling after lactation. within these groups it was possible to identify a number of smaller subgroups that often indicated an earlier or later rise or fall in activity. these patterns were not unexpected but definitely held biological significance and could undoubtedly be described as some of the most significant patterns in the data. however, the interval pattern found during the analysis with matse was also considered to have potential biological significance but it was not possible to detect this pattern with any of the clustering methods used. despite the fact that the genes shared a similar profile over an interval of the data time-frame, it was always the case that more dominant patterns of expression over the remainder of the time course would cause the genes to be assigned to different clusters. this phenomenon can be observed by selecting the known pattern from figure  <dig> in a visual query view and highlighting the results in a cluster view of the same data . here the relative displacement of genes demonstrates how differently they tend to be clustered. this result is unsurprising since the objective of clustering is to find the most dominant patterns in the data and genes are assigned to clusters accordingly. even if genes could be assigned to more than one cluster and a cluster was produced for every temporal pattern, the number of potentially significant temporal patterns is likely to be massive and there would be no obvious way to explore the results to find patterns.

the interval pattern found using matse was also impossible to find using a visual query approach. here, the line-chart overview was found to be unable to reveal anything other than the range of values at individual time points and if a biologist has no knowledge of the timing or the genes that form a pattern they would need to execute an impractical number of speculative queries before the pattern could be revealed. this lead our test subject to conclude that the use of an interactive visualization technique such as matse, that allows the user to explore the data by filtering and navigating the data in a predictable manner, would be necessary to find this type of pattern.

our second case study involved time course data  examining osteoblast differentiation by comparing cells exposed to growth factors with control cells . this data records the activity of around  <dig>  genes over  <dig> time points . as with the previous data-set the data is rescaled so that values are expressed as the fold change from the first time point for each gene. during the analysis of this data-set, the user created  <dig> individual groups by selecting genes in the scatter-plot. these included an 'early rising' group of highly expressed genes at day 6- <dig>  a 'downward' group of those genes with very low expression at day 25-30; and an 'upward' group of those genes with highest expression at day 25-30). after selecting genes to create each group, the user scanned the names of the genes to check for known stem cell marker genes. this helped the user confirm that the groups were populated according to their expectations. after this the user selected a colour for each group  and animated the scatter-plot across time . this helped give the biologist a better impression of how the activity of the groups related to each other and allowed them to notice an overlap between the 'upward group' and the 'early risers' group from day  <dig> to  <dig>  this was considered to be of potential biological significance and the name of the overlapping gene was noted for further investigation.

discussion
during the evaluation of matse users generally expressed satisfaction and were positive about the potential of matse to help find valuable patterns in their data. in general they believed that matse would be of best use for exploratory analysis and hypothesis generation rather than for investigating known phenomena. it was suggested that a typical analysis workflow involving matse would start with a more prescriptive method such as clustering to find the most significant patterns in the data. matse could then be used to explore the data and find unsuspected patterns of temporal activity. this would be followed by statistical analysis of the results using a package such as r. it was also suggested that future work would benefit from fully harnessing the growing and highly valuable knowledge bases and annotation services such as the gene ontology  <cit> , as well as supporting the use of the large sets of gene group lists built up by experienced biologists, which would make analysis more convenient for users.

another suggestion from our test-users was that matse could also be useful for the analysis of large scale time-series data other than that produced by microarray experiments. this might include the analysis of similar data obtained at the mrna level, such as sequencing-based expression data  <cit> , or time series proteome profiling data obtained at the protein level  <cit> . the analysis of these types of data is often similar to that of microarray data with biologists having the same general objective of finding groups of genes or proteins with certain common patterns of activity. matse could also be used for non expression time-series data such as metabolite measurements  <cit>  or multivariate environmental data. in general, the added value of matse should be more pronounced for series with larger numbers of data elements and more time-points. both these factors affect the number of temporal patterns in the data that would be lost if the data were only analyzed using clustering methods.

CONCLUSIONS
in this paper we describe matse, a new information visualization application for the analysis of gene-expression time-series data. matse allows users reveal previously unsuspected patterns of gene activity over smaller intervals of an experiments time frame by allowing them to control an animated interval scatter-plot view of their data. matse also supports multiple condition experiments, data with missing values and allows the display of up to four different gene groupings using a novel method using smoothed outline shapes with transparent shading. users can also compose queries to define patterns that can be stored to be combined, refined, restored, annotated or exported for collaborative work. the utility of matse is demonstrated in case studies showing how the final prototype can be used to find patterns, store patterns and explore gene-groupings.

the development of matse demonstrates the benefits of an iterative software life cycle where developers work closely with potential users. it also allowed us to investigate some visualization problems that are likely to be common in the field of bioinformatics where large scale complex data is ubiquitous. examples of these are how to highlight multiple groups in a densely populated scatter-plot and how to deal with superfluous parameters when recording a selection. in the final evaluation, our testers were positive about the potential of matse to help them to find significant patterns in their data. here matse was characterized as an exploratory tool with potential for hypothesis generation and the creation of new biological knowledge. the biologists envisioned themselves using matse as part of an iterative cycle of investigation together with a gene expression data repository and/or a database of gene groupings.

competing interests
the authors declare that they have no competing interests.

authors' contributions
jessie kennedy acted as principle investigator and project manager on the scottish enterprise proof of concept project from which most of this work is sourced. paul craig acted as chief developer on the project and developed the original time-series explorer application as part of his phd supervised by prof. kennedy. alan cannon was responsible for evaluation and case studies while robert kukla developed the data model and web repository at http://www.matse.org.uk. all of the authors contributed to team meetings and discussions related to the design decisions described in the paper.

supplementary material
additional file 1
matse.jar. double click on this file and follow the instructions to install matse. the software requires java version minimum  <dig> . <dig> to run.

click here for file

 additional file 2
data.zip. sample data files.

click here for file

 acknowledgements
the authors would like to thank dr torsten stein and his colleagues at the institute of cancer sciences at the university of glasgow; simon tomlinson and his colleagues at the institute for stem cell research, edinburgh; the scottish crop research institute; cxr biosciences; and queen's medical research institute, edinburgh for participating in the requirements analysis and evaluation of matse. this project was funded by the scottish government funding body scottish enterprise. the data used in this paper can be found in their original format at; http://breast-cancer-research.com/content/6/2/r <dig> , and http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=gse <dig> .

declarations
this publication was funded by the ieee symposium on biological data visualization  as a supplement of highlights.

the articles in this supplement have undergone the journal's standard peer review process for supplements. the supplement editors declare that they have no competing interests.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2013: highlights from the 2nd ieee symposium on biological data visualization. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/14/s <dig> 
