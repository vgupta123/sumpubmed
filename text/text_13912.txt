BACKGROUND
remarkable advances in next generation sequencing  technologies  <cit>  and computational theory and practice as well as rapid developments of bioinformatics algorithms in recent years have significantly accelerated genomic researches.

sequencing steady-state rna in a biological sample   <cit> , as one of the major ngs approaches, has been widely used in many fields. rna-seq overcomes many limitations of previous technologies, such as microarrays and real-time pcr. most importantly, rna-seq has been shown to unravel previously inaccessible complexities in the transcriptome, such as allele-specific expression and novel promoters and isoforms, gene expression , detection of alternative splicing, rna editing, and novel transcripts.

in the past years, many tools and methods have been developed for rna-seq data analysis. some major categories of these tools including read-mapping, transcriptome assembly or reconstruction, and expression quantification  <cit> .

aligning rna-seq reads against a reference genome or transcriptome  is the most common job when a reference is available. there are a large number of general purpose aligners available such as bowtie  <cit> , bwa  <cit> , soap  <cit> , zoom  <cit> , shrimp  <cit>  and many others. programs such as tophat  <cit> , gsnap  <cit> , mapsplice  <cit> , qpalma  <cit> , star  <cit>  and hisat  <cit>  are rna-seq specific aligners, which are capable of identifying splicing events.

transcriptome reconstruction or rna-seq assembly is another route to analyze rna-seq data. this can be performed with or without a reference genome. scripture  <cit>  and cufflinks  <cit>  are examples of reference genome dependent programs. they take mapping alignments to a reference genome as the input. oasis  <cit> , transabyss  <cit>  and trinity  <cit>  are de novo assemblers that don’t require reference genomes.

mapping and assembly are relatively computation-intensive jobs, which supply data for downstream expression quantification using programs such as cufflinks  <cit> , miso  <cit>  and rsem  <cit> . for multiple rna-seq datasets under different conditions, differential expression can be analyzed with cuffdiff  <cit> , degseq  <cit> , edger  <cit> , deseq  <cit>  and several other methods.

to make sense of rna-seq data, a full analysis pipeline usually requires multiple procedures and different tools. besides the rna-seq specific tools discussed above, many other ngs data processing tools are also required such as solexqa  <cit>  and trimmomatic  <cit>  for sequence quality control, samtools  <cit>  and bedtools  <cit>  for alignment file processing.

difficulties in creating these complicated computational pipelines, installing and maintaining software packages, and obtaining sufficient computational resources all tend to overwhelm bench biologists from attempting to analyze their own rna-seq data. so, despite the availability of the great set of computational tools and methods for rna-seq data analysis, it is still very challenging for a biologist to deploy these tools, integrate them into workable pipelines, find accessible computational platforms, configure the compute environment, and perform the actual analysis.

today, rna-seq has been widely used in animal studies, so developing integrated bioinformatics systems specific to agricultural species, especially easy-to-use web portals, is of great importance for researchers in the agricultural community.

to this end, we have developed a web portal offering integrated workflows that can perform end-to-end compute and analysis, including sequence  qc, read-mapping, transcriptome assembly, reconstruction and quantification, and multiple analysis tools. the first workflow utilizes the tuxedo suite of tools   <cit>  for comparative reference-based analysis. the second workflow deploys trinity  <cit>  for de novo assembly, rsem  <cit>  for transcript quantification, and edger  <cit>  for differential analysis. the third combines star  <cit> , rsem and edger for data analysis. all these workflows support multiple samples and multiple groups of samples and perform differential analysis between groups in a single workflow job submission. the rna-seq portal is freely available from http://weizhongli-lab.org/rna-seq for all users. the backend software package is also available as open source software.

implementation
the portal is implemented with several state-of-the-art high performance computing , workflow and web development software tools including galaxy  <cit> , starcluster , running on modern scalable cloud compute and storage sources from amazon web services .

the system is illustrated in fig.  <dig>  the whole computer system supporting the rna-seq portal resides in the aws cloud environment. a virtual computer cluster consists of a head node and compute nodes is controlled by starcluster software. the initial one-time launch of the virtual computer cluster is performed from a desktop or laptop where starcluster software is installed and configured with our starcluster configuration file. the virtual computer cluster’s head node is running all the time. it serves as the portal’s front end and provides web server, ftp server and galaxy server for users to interact with the portal. compute nodes are automatically brought online or shutdown according to the need of user jobs. an ebs volume, which provides fast access and persistent data storage, is used as a shared file system for the virtual computer cluster. s <dig> storage, which provides cost-effective data storage, is used to store computed user data.fig.  <dig> cyber framework of the rna-seq portal



cluster head node
once the head node is up and running, the virtual cluster can be controlled within this head node, where starcluster software is also installed. the virtual cluster is configured with open grid engine  job scheduling system with parallel environment enabled. all user-submitted jobs will be managed by the oge. the starcluster auto-scaling script, which runs in the background on the head node, automatically starts up new compute nodes when jobs are waiting in the oge queue and shuts them down when the queue empties, reducing compute costs.

an apache web server runs on the head node. it supports the rna-seq portal website and provides reference genome data and user data download. an ftp server also runs on the head node, allowing users to download reference genome data and upload user data. a mysql server is used in tracking user jobs and supporting the galaxy server. the rna-seq portal documentation is supported by a dokuwiki server.

galaxy server
galaxy  <cit>  is a web-based platform that supports data intensive biomedical research through galaxy enabled tools and workflows. in recent years, galaxy has been widely used by the community. the main galaxy project server along with many other public galaxy servers offers many computational tools for users to perform data analysis and provides friendly environment and interface for users to manage jobs and data using web browsers. in this project, we run a galaxy server instance for user management and as a portal where users can upload data and run the workflows we implement.

workflow engine
rna-seq data analysis requires workflows with multiple procedures and many different tools. the tools all have different requirement in computer memory, i/o speed, disk space, network bandwidth, density of computing cores, parallel environment settings etc. so given a computer grid or cloud infrastructure, it is not trivial to make a fully automated workflow that meets the requirements of all distinct tools and maximize the usage of provided compute resources.

the galaxy platform supports running individual compute tools and also supports workflow integration. however, the workflow function offered by galaxy requires users to have relatively deep knowledge of galaxy software and the tools being integrated into the workflows, so it is quite difficult for common users to fully take advantage of the galaxy workflow capacity.

in this project, we provided users with pre-configured workflows, which are launched as standalone tools from the galaxy interface. the workflows in this project are configured with a lightweight workflow engine we developed in our earlier projects  <cit> , supported by the human microbiome project .

RESULTS
the rna-seq portal offers three integrated workflows. all these workflows are implemented so that a user can run multiple groups of samples under different conditions  with a single job submission. a workflow will perform identical process  for each individual sample, then compare results between groups, and can also analyze data based on pooled samples or groups.

tuxedo  workflow
the tophat, cufflink, cuffmerge and cuffdiff workflow, also know as the tuxedo package  <cit> , is one of the most widely used tools in rna-seq data analysis. the workflow we implemented here is largely based on the pipeline described in the tuxedo publication  <cit> . the pipeline is shown in fig. 2a.fig.  <dig> flowchart of the three workflows: a tuxedo workflow, b trinity de-novo assembly and post-analysis workflow, and c star mapping and post analysis workflow



given user input sequence files in fastq format for several groups of samples, the workflow first runs a three step sub-workflow for each individual:  sequence qc: for either paired end  or single end  read input, remove low quality reads and trim low quality bases using trimmomatic  <cit>  with default parameters;  reference-based alignment: align cleaned reads to a selected reference genome with tophat; and  transcript assembly: assemble the transcripts with cufflink.

the results of this process are then combined into a single merged transcriptome annotation with cuffmerge. finally, for each pair of sample groups, cuffdiff is used to identify differentially expressed genes and transcripts between them.

trinity de-novo assembly and post-analysis workflow
this workflow is implemented according to the trinity protocol  <cit> . additional information about the protocol is described at http://trinityrnaseq.github.io. the structure is outlined in fig. 2b.

this workflow first uses trinity to assemble all samples together into a combined transcriptome. it then indexes the transcriptome sequences using bowtie and annotates transcripts by comparing them to cdna sequences from reference genomes using blastn  <cit> . trinity itself has a qc component, so we rely on trinity’s own qc procedure for sequence cleaning. after transcript assembly, the workflow aligns high-quality reads from each sample back to the assembled transcript using bowtie, then performs transcript quantification using rsem  <cit> . finally, the workflow runs pair-wise differential analysis with edger  <cit>  using the scripts available from trinity package.

star mapping and post analysis workflow
this workflow uses star  <cit> , an ultrafast rna-seq aligner for mapping reads to a reference genome . similar to the tuxedo workflow, the star workflow first performs sequence qc using trimmomatic, runs star’s first pass mapping to a reference genome for each sample. splice junctions identified there are then pooled and used to map the high quality reads from each sample one more time with star’s second pass mapping to produce a new set of alignments, splice junctions and other results. these are then used to generate gene and transcript quantification results with rsem. finally, the workflow runs pair-wise differential analysis with edger. here, we use a set of scripts provided in trinity package to perform edger and to call several other functions.

choice of workflows
tuxedo and star workflows are reference genome/transcriptome based approaches. when reference genomes are available and the main goal is to quantify the expression level of known genes and transcripts, then these two workflows are the choice. tophat <dig> and star are both very popular aligners. regarding the accuracy and performance, they have been extensively evaluated, compared and discussed along with many other aligners in algorithm papers and in reviews  <cit> , as well as in public forums . between tophat <dig> and star, none is significantly better than the other in all aspects , except that star is much faster than tophat <dig> and tophat <dig> uses much less memory. given the current availability of high ram computers, the overall compute cost of star is significantly lower than tophat <dig>  it is importantly to understand their pros and cons by check these paper and resources in using the two workflows and interpret their results.

when there is no reference genome available or the reference genome is poorly assembled or annotated, trinity workflow can be utilized in rna-seq analysis. this is important for many non-model organisms or cancer samples.

given the convenience of our web portal job submission, it is possible for users to run multiple workflows on the same dataset once the input data are uploaded to users’ workplace. that way, it is possible to compare the results to see whether consistent observations can be obtained with different approaches, to identify questionable results, and to look for method specific predictions.

portal interface
the web portal to run the workflows  is implemented with galaxy framework. we did only necessary customization to the galaxy page so that the layout of the portal page is very similar to the official public galaxy server and therefore users with prior experiences with galaxy can easily start to use our resources. users new to galaxy are recommended to learn galaxy’s concept and know the basic usage before submitting jobs to the portal.fig.  <dig> screenshot of the rna-seq portal job submission page



the workflow saves all major output files from each step of the workflow so that users can access not only the final results but also all intermediate data. for example, all alignment outputs in bam format are saved and these bam files have been sorted by the workflow to assist users’ later analysis. when the workflow is completed, users can download a gzipped file that contains all the results from their analysis or browse and access each individual file from the rna-seq portal.

some results can be directly used from our server. for example, users can directly load data  into an instance of the integrative genomics viewer   <cit>  by providing the web url of the file from our server. we have pre-loaded genomes and annotations for all the species in our portal to support public igv instances so it is easy to visualize and explore data from our pipeline. more detailed documention is available from the rna-seq portal.

reference genomes
the workflows support important animal species including chicken, cow, duck, goat, pig, horse, rabbit, sheep, turkey, as wells as human, mouse and several other model organisms: yeast, c. elegans, drosophila, and others . ensembl  <cit>  is used as the primary source for genome data, except for goat which was obtained from the international goat genome consortium   <cit> . we downloaded the genome, gene, and peptide sequences, as well as gene models  for each genome. these were formatted and indexed with all of bwa, bowtie <dig>  star, resm, blastn, blastp and igv, for use in all the workflows from the portal. all are available for download through both our web and ftp servers if users want to perform down-stream analysis on their own systems. current genomics resources are based on ensembl release  <dig>  we plan to update the databases every 6 months. with each update, the new databases will replace the last set of databases in all workflows. but we will make last set of databases available for user download.table  <dig> a list of genomes supported by the workflows

gallus gallus
anas platyrhynchos
bos taurus
capra hircus
sus scrofa
equus caballus
oryctolagus cuniculus
ovis aries
meleagris gallopavo
saccharomyces cerevisiae
caenorhabditis elegans
drosophila_melanogaster
mus_musculus
homo sapiens


CONCLUSIONS
in order to assist researchers in the rna-seq field to deal with data analysis challenges, we implemented the rna-seq web portal with three integrated workflows, which can be used for end-to-end rna-seq data compute and analysis. rna-seq is a very active field with many great analysis tools. our web portal makes available tools more accessible to the broader research community using rna-seq technology but without access to either compute resources or expertise in bioinformatics. the tools, such as tuxedo, trinity and star, are all well-tested and established tools set up with standard analysis protocols. this is especially beneficial for researchers who are new to rna-seq data analysis. we plan to add additional tools and workflows based on users’ need or the available new tools .

to support users who prefer to run these workflows locally or want to setup web portal on their own servers, with the flexibility of using different parameters, our backend software package is available as open source software. the software package needs to be installed on generic linux computer clusters that support open grid engine. these systems are widely available from hpc facilities in universities and institutions, as well as from cloud providers . the installation documents are available from our project page at http://weizhongli-lab.org/rna-seq.

availability and requirements
project name: rna-seq web portal for animal species

project home page: http://weizhongli-lab.org/rna-seq.

operating system: platform independent

programming language: perl 

other requirements: web browsers

license: no license needed

any restrictions to use by non-academics: no restriction



abbreviations
awsamazon web services

hpchigh performance computing

iggcinternational goat genome consortium

ngsnext generation sequencing

ogeopen grid engine

qcquality control

funding
this study was supported by the u. s. department of agriculture  national institute of food and agriculture under award no. 2013-67015- <dig> to wl and rwl. names or commercial products in this publication is solely for the purpose of providing specific information and does not imply recommendation or endorsement by usda. the funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.

authors’ contributions
wl and rwl conceived the project. wl implemented the system. wl and rar wrote the manuscript. yj and qz contributed to portal development. all authors tested the software and web portal. all authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.
