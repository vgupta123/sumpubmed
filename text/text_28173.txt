BACKGROUND
around  <dig> % of all deaths worldwide are due to cancer  <cit> . cancer depicts a group of diseases which refer to abnormal new growth of cells which can spread and invade different areal parts throughout the body  <cit> . a tumor is most commonly described as an abnormal growth of clustered cells which can be either benign  or malignant   <cit> . treatment against cancer directly relates to the growth-behaviour rendering the onset of therapy critical for its outcome. as a matter of fact, oncology is primarily based on prediction aspects  <cit> . in this regard, we focus on the assessment and prediction of tumor growth. the growth of tumors depends on their supply of oxygen, nutrients as well as survival factors and is influenced by growth factors as well as its local surroundings  <cit> . characteristics are individually based on the different types of tumors  <cit> . the mathematical basis for tumor growth has been described in the mid of the last century not to be exclusively exponential but to be following a continuous deceleration as presented by the gompertz function  <cit> . modern approaches, for example, take the heterogeneous subclonal mixtures  <cit>  of tumor cells into account or even its interdependency to cellular motility  <cit> . our model includes basic ideas of tumor growth, set for further enhancement through multiple expansion possibilities. we apply in-silico modeling of tumor-growth as a primary tool, and further advance it to a novel web-based simulation, evenhandedly available for biomedical scientists and clinicians with a focus on feature visualization. features are key to learning and understanding. thus, features are of enormous importance for knowledge discovery.

computational modeling in biomedical science
these days, biomedical science heavily relies on computerized support for analyzing big data, quantifying dynamic and multiscale events, or likewise for simulating complex models. computational models have been applied for intra- and inter-cellular, tissue- and organ-specific aspects  <cit> . additionally, there is the ongoing project of creating a virtual physiological human  <cit>  in order to support clinical decision-making. the project includes multi-level modeling of a wide range of information dealing with patient-specific signaling and genetic data up to whole-organ physiological mechanisms.

there are two main advantages of the bioinformatic approach in computational modeling of disease. first, simulations can be used for predictions in regard to the basic idea of alternative testing methods in addition to or instead of laborious experimentation. alternative testing methods comprise the categories of replacement, reduction as well as refinement of in-vivo experimentation, that are summed up by the 3r principle  <cit> . thereby, in-silico methods are applied to in-vivo and in-vitro extrapolation  <cit> . secondly, prediction models overcome the lack of experimental methods for insufficient or nonexistent early screening tests. in general, models can be used to gain insight into complex biological systems and may address the gaps in literature as well as form the foundation for future research . simplification and approximation of the numerous detailed information gained from biomedical science offers the possibility to patient-personalized prediction, avoids hard-to-measure variables or compensates non-measurable factors  <cit> . still, models are, so far, inflexible to simple extensions or even rescaling. furthermore, we have to overcome the conflict between complexity and oversimplification. for instance, global mapping of cell community is computationally too laborious while the averaged approach lacks detailed description of molecular variables  <cit> . still, in silico modeling and other computational techniques help answering key questions in cancer research .

we emphasize the approach of computational modeling of biological systems and developing computational modeling tools for simulation and reproducibility of experiments in biologic research. fisher et al.  <cit>  coin the term executable biology which highlights the difference between mathematical and computational bio-models in regard to their representation. executable biology describes computational algorithms in support to reproducible results in biomedical research as well as efficient simulation and analysis of biological systems. in this regard, executable biology is recommended to be integrated as standard method into bio-science.

regarding the dynamics of tumor growth, computational models for various types of tumors exist, from animal models and the human body, dealing with the individual stages of tumor development  <cit> . in silico cancer modeling provides significant opportunities, however, edelman et al.  <cit>  argue that it is yet in its infancy.

understanding the tumor heterogeneity with respect to personalized cancer treatment represents the ultimate goal of computational tumor-growth modeling. for that matter, multiple groups of scientist have to work together, accentuating the need for interchangeable infrastructure of linking big data and adoptable specialized models  <cit> .

mathematical modeling of tumor growth
tumor growth kinetics follow relatively simple laws that can be mathematically described  <cit> . such mathematical models could forecast individual phases of tumor growth  <cit> . in general, there are basic modeling approaches of cancer kinetics  <cit> , that include exponential growth, the gompertz model  <cit> , metabolic models  <cit> , the so-called universal model  <cit>  and hybrid models  <cit> . various mathematical models have been developed for the description and prediction of tumor growth. each model, available so far, is optimized for specific scales of time and size plus certain aspects of metabolism or interactions  <cit> . in regard to different biological scales, deisboeck et al.  <cit>  discuss innovative multi-scale cancer modeling approaches, ranging from atomic and molecular up to macroscopic scale. however, there is no universal law yet. simple models have prediction rates less than  <dig> %, while some models used for specialized simulations achieve ≥ <dig> % prediction rates  <cit> . cancer models can be categorized based on their basic mechanisms to calculate tumor growth, but several additional factors have to be considered. tumors originate from differentiating cells exhibiting the behavior of excessive proliferation up to migration  <cit> . tumors can be either dormant or growing  <cit> . after reaching a critical mass, primary tumor growth stops and migration through metastasis will occur. from a biological perspective, tumor growth also depends on the underlying network structure .

cellular potts modeling of tumor-growth
the cellular potts model  poses a most widely used example of agent-based models which are feasible for research regarding cell-based phenomena and, therefore, are favorable for cancer research  <cit> . the cpm was first presented by graner and glazier  <cit> . the cpm or also named glazier-graner-hogeweg  model is based on individual cells in contrast to continuum models which summarize cell populations to tissues and continuous materials  <cit> . it represents a modeling approach on tissue level with the main focus on intracellular and intercellular events as well as the cellular microenvironment. it has been implemented for tumor progression and invasion before  <cit> . the model includes single-cell characteristics of cellular geometry and interactions, rendering the simulation more efficient for questions on a detailed level than for a general overview. glazier and graner’s model was originally developed for simulating the rearrangement of individual cells and cell sorting  <cit> . they upgraded the model to a compartmental view of cellular subelements. in principle, various cells are described as objects covering multiple shifting nodes on a 2d or 3d lattice while moving and changing their size. thereby, cpm simulations support studies on type-specific cellular morphology and interaction  <cit> . the model describes different cell states and allows for additional parameters such as cell division and migration  <cit>  as well as chemical diffusion and the extracellular matrix   <cit> . graner et al.  <cit>  showed that differential cell adhesion and chemotaxis can be controlled through cpm, while the model is robust in regard to certain parameter choices. glazier et al.  <cit>  revise several development steps of the cpm and szabo et al.  <cit>  summarize the usefulness of cpm for simulating multi-cellular processes related to cancer. boas et al.  <cit>  recently conducted a global sensitivity analysis of the cpm, taking model extensions for angiogenesis into account, and showed that introducing a dynamic parameter for chemoattraction has the highest impact, being followed by the diffusion coefficient and cell-cell adhesion.

cpm has been used in a wide range of applications and there are extensions in terms of kinetics also referred to as extended cpm as well as hybrid cpm models  <cit> . the background of cpm modeling on cell sorting for various cell-types has been successfully used for the simulation of benign tumor growth  <cit>  and cancer invasion  <cit> . moreover, multiscale-models based on cpm have been implemented for various cancer-related studies .

visualization for computational modeling
visualization supports the understanding of biological data and provides insight into biological systems  <cit> . visualization and computation mutually contribute to the sense-making process of biomedical analysts  <cit> . it is advised to provide integrated frameworks for biological studies. graphical representations used for biological data visualization need to be adjusted to an appropriate level of detail. graphs, in which each node represents a biological object and each edge a relation between these nodes, are often found in visualizations of biological data. while it has been primarily used for large interaction networks so far, graph visualization offers several user-friendly layout algorithms and is applicable for a wide are of application areas, ranging from social networks, finance to biology  <cit> . our recent study  <cit>  on integrated visualization of biological networks highlights current possibilities for using web technologies to support analysts in exploring biological relations.

the field of computational cancer biology lacks visualization types apart from network visualization. the “cbioportal” with its focus on cancer genomics offers interactive visualization of pathway networks, mutations in protein domains, statistical information and trends on gene sets and clinical patient data of  <dig> published cancer studies  <cit> . besides, there are only a few attempts on integrating visualization in computational modeling tools for cancer biology. simulation results of a multiscale model for glioma growth have been visualized by the use of the software scirun  <cit> . specific cell growth processes can be simulated and visualized with the tool cellsys  <cit> . compucell3d  <cit>  and the tissue simulation toolkit  <cit>  are exemplary frameworks for testing and extending computational models, integrating visualization features on cell interactions for simulation and analysis. last but not least, there have been efforts in developing a virtual biobank  <cit>  and a cancer modeling community  <cit>  to exchange data and to facilitate visualization integration.

though computational modeling has become a feasible tool for tumor growth research, simulation tools are rare. there is a step by step tutorial available how to simulate collective cell behavior based on cellular potts modeling  <cit> . compucell3d is one of these tools which has been used for in silico modeling of cellular and multi-cellular behaviors  <cit> . the latter research group introduces a tutorial for building cell-based simulations for visualizing tumor growth by making use of an open source library for simulating the cpm, written in c++. though providing step-by-step instructions, basic knowledge of the use of the terminal and a c++ compiler are required. this technical know-how is often a limitation to clinicians and researchers in biomedical sciences. moreover, they do not describe how to create iterative computations and how to differentiate between cell-types.

however, despite the availability of many different tumor growth models on the one hand and many web-based visualization libraries on the other hand, adequate and usable simulation tools are still rare. to our knowledge, there have been no efforts in creating easy to use, web-based computational cancer modeling tools that integrate visualization features. our main idea is creating usable and extendable implementations of tumor models to foster ease of use of simulations and support knowledge discovery.

methods
mathematical basis of tumor growth
in general, tumor growth is mathematically summarized by the gompertz function  <cit> : 
 vtv0=eax∗1−e−at  with tumor size at variable time vt and the initial tumor size v <dig>  a and b being tumor-type characteristic constants, for cell clone division  <cit> . in detail, we choose to describe tumor growth using the cpm by ggh where the probability for a spin copy and therefore cell proliferation is expressed as: 
  <dig> pσi,j→σi′,j′=e−ΔhtifΔh>0;1ifΔh≤0; 

the cpm is a time-discrete markov chain and its transitions σi,j→σi′,j′ are calculated by a hamiltonian  function Δh, a sum of several terms  <cit> . we further describe details on its implementation within the next subsection.

implementation of the cpm
the potts model is based on the differential adhesion hypothesis which states that motile cells rearrange themselves according to the lowest energy configuration along the potential energy landscape  <cit> . within the cpm by ggh, cells are assigned certain spin states. cells are build up by multiple cellular bricks, likewise termed  lattice nodes, sites or points. a multi-scale growth is accomplished through surface adhesion and space competition of cellular bricks scattered through the discrete lattice. cellular bricks are associated with spins at lattice sites. spins can be flipped between spin states allocating a celluar brick to another cell. these spin-copy attempts are calculated through monte carlo steps . mcs are the mathematical basis for the probability simulation. the key parts of the computation are the hamiltonian function Δh, also referred to as configuration energy  <cit> , shown in eq.  <dig>  and the temperature t shown in eq.  <dig>  
  <dig> h=j∑i,j1−δσi,jσi′,j′ 

if Δh< <dig> the new spin state is always accepted because the system’s energy will be decreased. if Δh≥ <dig> the new spin state is accepted with a certain probability. while the cell is growing its target volume increases too. a cell in the cpm is the set of all cellular bricks with the same cell-index. each cell relates to a certain cell-type. the cell-types are defined by the set τ.

Δh constitutes the energy of interactions between cellular bricks i with the neighbour j. the discrete version of the kronecker delta δ= <dig> if two neighbouring bricks are from the same cell, otherwise δ= <dig> 

a cell will reach a critical point for division upon minimum Δh. each cellular brick is assigned a σi,j with type-dependent interaction energies, the spin-spin coupling energy constants j to neighbouring cells. j effects a cell to be inclined to comprise a formation of connected cellular bricks over loose entities.

mcs is a series of n spin-copy attempts for a lattice consisting of n lattice sites. each mcs step resembles the rearrangement of cells and, therefore, the time. the calculation shown beneath includes the temperature t which resembles a cellular motility factor  <cit> . the mcs calculates a change in configuration of h <dig> to h <dig> for: 
  <dig> Δh=h1−h0≤0or otherwisep=e−Δht 

the cpm hamiltonian h is the sum of a series of terms that are related to different cell attributes such as interaction energy as well as volume. extended versions exist that include other addends  <cit> . the original cpm includes a second term next to the first term of all surface energies j. h also includes a λ as cellular constraint as function of elasticity, shown in eq.  <dig>  
  <dig> h=j∑i,j1−δσi,jσi′,j′+λ∑σ−vt) <dig> 

in more detail, h includes the number of lattice sites v in a given domain with the spin σ, and the target number vt within that domain. the second term confines a cell’s volume v to the range of a specific target volume v, while the variable σi′j′ sums up the number of neighbours. we focus on a schematic two-dimensional cellular grid. a cell’s volume v and target volume vt is thereby reduced to area a and at.

web-based model implementation
the implementation for the purpose of visual analysis of tumor growth includes: 
cpm implementation, based on glazier et al.  <dig>  <cit> 

servlet for client-server communication

network visualization based on cytoscape.js  <cit> 

line chart visualization based on flot  <cit> 

html <dig> frontend

tests

documentation



the cpm is implemented as server side backend. thereupon a cross-browser user interface integrates client side visualization libraries for multiple visualization outputs .
fig.  <dig> architectural representation of cpm-cytoscape: the architecture is composed of two distinct layers: the frontend layer contains a cross-browser web presentation layer. it contains the customizable visualization components as well as a dynamic user interface for interacting with the cpm implementation via ajax . at the backend layer the jsoncpmservlet serves as interface for the actual cpm lattice computation in the backend



the presented tool cpm-cytoscape offers an html <dig> based graphical user interface that makes use of javascript  libraries, first and foremost cytoscape.js. below the frontend, the backend is implemented in java and information between frontend and backend is exchanged in javascript object notation , a common data exchange format that is used by cytoscape.js. the json data holds a reference for the output container as well as several elements. the elements further contain child elements such as the complete set of edges and nodes, while each node again contains data about id, position, color, neighbour, parent, selection and other parameters. moreover, the json structure includes information about the graph’s layout and style parameters. by making use of a java implementation of the cpm computation, a set of java servlets are requested asynchronously and delivering the data needed both for the computation in the backend and for the visualization rendering in the frontend.

visualization
we developed an html <dig> frontend that can be easily adjusted by means of modern web design via editing markup, js and presentation stylesheets. the frontend can further be extended by integrating additional control elements as well as by making use of additional js-based visualization libraries. for the visualization we searched for a library capable of rendering nodes along a lattice, and we found cytoscape.js to be the graph visualization library of our choice. we use visualization libraries to create and update the visualization during a simulation run. the rendering method requests the jsoncpmservlet, a java servlet that delivers data needed for the frontend rendering. therefore, the jsoncpmservlet first receives json data, parses it, maps it and sends it back as json, that is then used for the graph rendering. for now, the frontend rendering parts include a graph visualization and a simple line chart. we use cytoscape.js to plot the lattice-based graph visualization as well as flot, a jquery.js extension, to draw simple line charts.

usage of cpm-cytoscape
based on a study on a brain cancer type modelled by cpm  <cit>  and our ongoing work on tumor growth profiles for simulation  <cit>  we introduce the tool through a short tutorial at https://github.com/davcem/cpm-cytoscape. we encourage readers to use github for having a closer look at our implementation, explore its features and suggest enhancements as well as participate in the development. design and implementation of the presented tool took place in an iterative manner. informal validations have been conducted by several discussions with a domain expert. the basic idea up to the model’s implementation and the tool’s user interface have been co-designed and reviewed by a domain-expert.

RESULTS
we present a new 2d visualization approach for a dynamic cellular model simulation that accounts for lattice size, cell size, environment parameters and interactions between cells. the tool developed and used for the simulations has been published in the github repository, saved as cpm-cytoscape. it can be obtained via the url address: https://github.com/davcem/cpm-cytoscape. further, we provide a demo version that is online available on: http://styx.cgv.tugraz.at:8080/cpm-cytoscape/.

we created the tool to allow for easy manipulation by its user. the upper region offers a number of variables which can be set by the user in order to discriminate and process various experiments. the cpm is computed solely in the java backend, while initialization parameters can be adjusted in the frontend and are communicated by requesting the servlet. by varying several parameters the user is allowed to simulate a wide range of conditions. these parameters are the lattice’s size , the count of monte carlo steps, its’ substeps, max σ, the matrix density, interaction parameters as well as the temperature. the java packages consist of the implementation of the cpm itself, a graph converter to convert the cpm lattice into a graph structure, a more specific cytoscape converter to represent the graph enrichment needed for the visualization library as well as the servlet to provide the communication interface between backend and frontend via json.

individual cells are visualized as group of nodes, we refer to as cellular bricks, on a grid. cytoscape.js provides a grid layout rendering algorithm that arranges the nodes in a square grid whereby the circular nodes represent subcompartments of cells. we differentiate between light cells that represent normal cells, dark cells that represent mutated cells and the ecm that surrounds cells. the ecm is represented as grey nodes. the other nodes with σ≥ <dig> are represented by the colored, either dark or light nodes. for now, we only differentiate between a light and a dark cell-type. nodes which are not indexed as light or dark cells are attributed to the ecm. they resemble the cellular surroundings without peculiar growth variables.

the growth rate can be visualized as line chart for σ= <dig> by using the button “show line chart”. the line chart shows the amount of computation steps on the x-axis and the amount of cellular bricks on the y-axis. experimental data can be exported as spreadsheet in the format of comma-separated values. this option offers the possibility of making the data available offline for further analysis.

initialization and lattice settings: the lattice is created on the left side of the browser window by pressing the button initialize . thereby, the size and likewise the number of nodes is determined by the input of variables x and y. this allows to adjust the experimental area. nodes are indexed randomly to light and dark cells or ecm according to the input of the number of cellular clusters σ, matrix density and the light/dark ratio. after initializing a random graph according to the user interface’s settings the computation possibilities with the button “compute next simulation run” and “compute next two simulation runs” are enabled .
fig.  <dig> overview of the tool’s user interface: ① at top there are adjustable parameter settings for cpm computation and ③ buttons for initializing and computing the lattice sites. ② the left side shows the initialization output as rendered graph with grey nodes representing parts of ecm, while colored nodes representing cellular bricks corresponding either to light blue colored  or dark red colored  cells. the table below shows information about the initialized cell data. ⑤ the right side shows the output for the last computation step, while the table below contains computed cell data. ④ a toggle buttons controls the ⑥ lightbox in the middle that provides line chart visualization and export



our implementation of the cpm currently consists of maxsigma cells relating to  <dig> different cell-types, while σ= <dig> attributes to the ecm, the odd numbers refer to dark cells and the even numbers to light ones. therefore, by making use of the maxσ parameter one can also define more than two different cells, also referred to as cellular clusters. max σ defines the quantity of individual cell components or respectively cellular clusters. if max σ is set to  <dig> we use the color lightblue for light  cellular bricks and darkred for the dark  ones . if max σ is set to > <dig> we use a colorscheme for coding dark and light cell nodes slightly differently to better distinguish between different σ, shown in fig.  <dig>  the factor σ can be redefined to resemble the number of cell-types. the cell-types are represented by τ, in some papers also referred to as cell or medium. we currently distinguish between three cell-types, namely ecm, light and dark cells as denoted in the original paper by graner et al.  <cit> . a cell-type is referred to as τi, while τ={ <dig> ,2} with τi=0=ecm, τi=1=dark, τi=2=light.
fig.  <dig> screenshot of a graph rendering with σ
max=14: the graph consists of  <dig> distinct cells . each cell is represented by a certain amount of nodes that we call cellular bricks. cellular bricks with dark red or purple color tones correspond to the dark  cells, while nodes in a light shade of blue to green are referencing the so called light  cells. the amount of these are listed in the table below the graph visualization. for this example, the cell with i
d= <dig>  represented by the purple nodes, consists of  <dig> cellular bricks at the initialization phase. after  <dig> computation steps, we see at the right side, that the cell with i
d= <dig> has grown and now holds  <dig> cellular bricks. grey nodes represent the ecm



the matrix density defines the number of cellular bricks indexed as light or dark cells in relation to the given number of nodes. setting matrix density = <dig> uses all lattice sites for cellular bricks. setting matrix density = <dig> represents a lattice site filled only with ecm.

the parameters mcs and #substeps represent units of time, while a substep is related to a random copy attempt. we implemented the number of mcs and substeps as variables and allow the parameters to be defined and adjusted by the user. each mcs is divided into a specified amount of substeps for simulating different time settings.

the temperature t functions as cellular motility factor since high t leads to frequent spin-copies, thus, an increase in the number of cellular bricks and an increase in cellular invasive radius. the impact of t on the overall run is highlighted in fig.  <dig> . the default temperature is set to  <dig> degrees as suggested in  <cit> . a comparison of our default settings with values, previously published by others, are summarized in table  <dig> 
fig.  <dig> cell growth in relation to varying parameters: line chart showing representative ratios between numbers of dark and light cellular bricks over computed steps. comparison of varying parameters, for temperature t= <dig> , <dig> ,− <dig> , λ= <dig> . <dig> . <dig> . <dig>  , j
mix= <dig> , <dig> , <dig>  , comparison of various js as indicated for j
dark, j
light, j
mix, j
ecm , j
ecm= <dig> , <dig>  , j
dark and j
light each  <dig> or  <dig> . adjusted to default settings of n
o
d
e
s=32∗ <dig>  m
c
s= <dig>  m
c
s
s
u
b
s
t
e
p
s= <dig>  σ
max= <dig>  λ= <dig> , t
a
r
g
e
t
a
r
e
a
s= <dig> , initial d
a
r
k/l
i
g
h
t
r
a
t
i
o=1/4

λ
≤40∗1000∗40∗1000


the parameter for area energy λ represents a limiting factor to cell growth, also termed cellular elasticity λ. panel b in fig.  <dig> demonstrates the impact of λ. high λ values more strongly constrain cell growth while low λ leads to frequent spin-copies. the target area at is related to the lattice’s size parameters x and y, while the target area factors for light and dark cells can be adjusted.

the energy interaction parameter j is the basis to the overall hamiltonian and spin-copy attempts. this so-called boundary energy coefficient determines cell growth as multiplicative degree of freedom  <cit> . panels c to f in fig.  <dig> illustrate the impact of low and high interaction values for different cells as light and dark cells and ecm on the overall simulation outcome and the underlying hamiltonian and spin-copy attempts. the impact on the simulation by the parameter variables are presented within fig.  <dig> 

application example of cpm-cytoscape
we created a step-by-step tutorial on the presented tool using a tumor growth example based on parameters from a study on a brain cancer type modelled by cpm  <cit> , available under https://github.com/davcem/cpm-cytoscape  <cit> . this example results in cellular growth of dark cells, representing tumor cells, showing a trend similar to gompertz law. the simulated cancer cells thereby imitate 2d cultured glioma cells or likewise tumor-spheroids implanted in animals  <cit> .

discussion
we present a web-based solution to allow for simple access to such a tumor growth visualization tool via internet. by making use of the cpm implementation, we describe a potential use case for the cpm-cytoscape tool. the manipulable tool offers the advantage of adjustable settings for several input variables. by correlating various growth parameters we highlight the importance of heterogeneous cell interactions regarding its impact on tumor growth.

options to visualization: there are many js-based visualization libraries which can be used to foster the goals of visualization, namely to facilitate understanding and to gain novel insight, in our case into one of the many questions of biomedical research  <cit> . we make use of cytoscape.js since it features user-friendly presentation of interaction data and supports several common browsers like chrome, firefox and safari, while the first is the fastest one. it represents an open-source library on graph theory that was written in js and developed for analysis and visualisation  <cit> . thereby, layouts of the display area can be altered while graph elements can be accessed offering several possible operations including sorting and filtering as well as graph querying. these options can be exploited for future extensions to the tool. moreover, cytoscape.js  <cit>  is regularly updated and supports directed as well as undirected, mixed or multi-graphs.

furthermore, cytoscape.js layouts can be easily changed by just specifying another graph layout for the layout parameter in the cytoscaperender method. there are also alternative visualization libraries that can be used in the frontend . possible alternatives to cytoscape’s layout algorithm would be using a bubble chart layout or even a three dimensional surface plot layout that can be created with another js library such as d <dig> js.

cytoscape.js offers different layout rendering options out of the box. we chose to use the grid layout that fits into traditional cpm visualization. in general, tumor growth kinetics and effects of cell growth can be visualized as line chart with the two dimensions of volume/size or cell number over time  <cit> . therefore, we use the extension of simple line charts. time series visualization may help users from the fact that time spans and iterations can dynamically be adjusted and are neither restricted by sensory constraints nor by experiment and animal costs.

lattice-based visualization of cells: the lattice is organized in two dimensions, since 2d-modeling reduces the computational load just as well as visualization comprehensiveness. still, in terms of numbers, the model could be manually transcribed and extended to a third dimension as the need arises.

in a figurative sense, the lattice represents tissue in the biological context. cellular bricks are translated as textural compartments of a biological cell-layer. by way of example, the two-dimensional cellular grid can then be described as representative cross-section translated from the possible style of tissue slices. in a conceptional matter of speaking, cellular bricks represent variable compartmental states of a cell that can be translated to several criteria such as the impact of genes or likewise proteins, effects by modulators, inhibitors as well as promoters, or localized phenomena in general. the specific factors can be applied and extended in regard to the individual focus of research in a problem-directed manner.

initialization and lattice-site settings: the variable number of lattice sites offers the possibility to adjust the computational workload according to the requirements of individual questions. in difference to general computational models, the web-based implementation is attempted to be computed with low latency. good rendering performance of computation results is needed to create dynamic output for smaller lattice sizes at once, as well as to enable animation for multiple computation steps at once. still, some experiments concerning specific timing problems will have to be conducted using a high number of nodes. thus, the variables can be be chosen in compliance with the requirements.

the random distribution, to a certain degree, simulates environmental behaviour and the random occurrence of mutations within cells. spheroid models start from an initial mass of proliferative cells only. still, in nature, mutated cells showing abnormal growth are intermixed with “normal” cells. thereby, our tool allows to set various cell-types. tumor cells are set to grow by means of proliferation and further invasion. the ecm can be set as background or individual cells to be equally or inhomogeneously in size and distribution  <cit> . for the future, we plan to implement extensions that will include additional initialization settings, such as the introduction of a dynamically configurable cell-type or another dimension. further variations could include the option of spheroid models. another elaborate feature could even offer pre-defined cellular mixtures corresponding to uploaded images from treated tissue-slices.

the impact and translation for mcs and #substeps: a mcs’s series of random copy attempts is equal to the total amount of cellular bricks. graner and glazier  <cit>  proposed mcs to be 16×x×y while x×y≈ <dig> and x=y≈< <dig> and did not make use of defining substeps. they suggested this setting for observing gradual movement behaviour. later works define one mcs to consist of as many index-change attempts as the number of pixels in the lattice x×y. if the setting for mcs×#substeps is lower than x×y, then unintended results are observed.

the time, by means of mcs steps, is an abstraction and relates to tumor specifics. the various kinds of tumor cells proliferate and divide more frequently than normal cells, depending on the localities and their differentiation status. thereby, tumors can be classified by their spatial occurrence, and further, be characterized by their temporal growth dynamics. for each case, mcs steps can be translated to either hours, days or years. future extensions to our tool will include pre-defined initialization settings of growth rates and time units corresponding to exemplary tumor types.

temperature t: in general, temperature affects movement, and in our case, cell growth. in more detail, t functions like a cellular motility factor since high t will lead to frequent division of cells, thus, an increase in the number of cellular bricks and an increase in cellular invasive radius as shown in fig.  <dig> . if the interaction energy, represented by the several j parameters, is much greater than t, cells will shed into loose bricks at the boundaries. if t is too large, relative to j, boundaries will become stiff. low temperatures inhibit proliferation. subzero temperatures stop changing spin values and therefore kinetics and growth. at very low subzero temperatures, any biological activity is effectively stopped but cells could also take damage through freezing, that could be taken into account as additional factor in future studies.

the energy interaction parameter j: the range of the individual interaction energies is defined by the original cell-types as well as the manifested mutations responsible for the excessive proliferation by tumor cells. thereby, these factors correlate with the class of tumor and it’s tissue-residency. individual cells exhibit heterogeneous tendencies towards growth correlating to tumor aggressivity, thus, interaction energies can vary over time. this phenomenon can be manually emulated by adjusting the individual interaction parameters after a specified number of mcs. future extensions could include this adjustment as an automatic option in correlation to underlying relations of further variables.

in our case, default parameters of cpm-cytoscape implicate low values within the first term for the hamiltonian computation, consisting of the interaction parameters j, in comparison to the second term, factoring values of area calculation such as λ, a and at . as can be seen in fig.  <dig>  a change in jmix, the interaction energy between different cells, impacts growth of dark cells considerably. however, there are no significant differences if the j parameter of dark or light cells is changed selectively . changes of jecm, the interaction energy between parts of ecm, result in similar insignificance, though high values can lead to sudden changes in the ratio between dark and light cells through dark cells migrating to and taking over former ecm space . rather high values are needed to manipulate ratios. figure  <dig>  demonstrates three cases of combined changes in the interaction parameters jdark, the interaction energy of dark cells, in comparison to the interaction energy of light cells jlight, as well as jmix and jecm. the ratio between dark and light cells is only slightly decreased upon an 100-fold increase of jdark. however, the number of dark cells over light cells is completely reduced upon increasing jmix and jecm. at the same time, the relation between jdark and jlight plays a minor role in determining the probability of spin-copy attempts rather to their measure in proportion to jmix and jecm. this fact can be translated to the biological importance of heterogeneous interactions between cells and their environment. further refinement will include the integration of additional parameters such as jdark−ecm, jlight−ecm or other jdiff as well as the search for suitable realistic values to relate to different cell-types, a factor to be taken into account in future studies.

the target area and the parameter for area energy λ: the factor λ is considered a constraint, in our case, for limiting cell growth. the so-called cellular elasticity λ attaches the value of area calculation within the hamiltonian computation. differences between current and target area will likely have more effect on spin-copy attempts if λ is high. if λ becomes too high relative to the residual calculation parameters, any spin-copy attempt should be refused. this is true as long as the cellular area is different from the target area. the quadratic function does not distinguish whether the cellular area is larger or smaller than the target area. in terms of cell size, cellular elasticity will play a major role for rigid cells which tend to stay within the range of their target volume. cell growth and division are correlated so that cells of unequal size will divide at a given speed and even out to a mean cell size. this is true only, if cell growth rate is constant. an abnormal increase in cell size is possible under the influence of excessive discharge of growth hormones or similar pathological circumstances such as hypertrophy. other cases of instant changes in cell size include the natural processes of cellular differentiation and enlargement or shrinkage according to the metabolic state.

generally, various cell-types are differently sized. some cancers are known to manifest giant cells. even normal cells exhibit different dimensions according to their origin. cell diameters range from 1μm to 1mm and more, for instance nerve cells can reach a length over 1m  <cit> . furthermore, cell-sizes vary within one cell-type. still, cells have medial sizes specific to their type. this constraint is thereby necessary to limit cellular growth to an underlying biological scale.

for future matters, the discrete view of cellular area can have a completely different meaning. cellular bricks resemble conceptional factors that occur or are replaced, distributed or accumulated within individual cells. these factors will be assigned by the researcher depending on a given task and scope of work.

the ecm occupies space which is not attributed to cellular clusters. its energy area is initially suppressed, but if reprogrammed to a positive number within the source code, the ecm will grow and spread like light and dark cells. this could simulate gap-filling after cell-death and be the case of radiation procedures, cellular starvation or exposure effects of chemicals. this variation will be of importance in future studies introducing multiple affectors of cell growth by integration of biomedical databases, including drug, protein and genetic information related to tumor growth.

the matrix density was introduced as factor for simulating various cell densities within the area of interest. for instance, tissue slices could show distinct cellular colonization in locally fragmented patterns. moreover, different cell-types as well as organelles can exhibit various densities. in general, varying cell densities can be attributed to the water content relative to the mass of proteins, nucleotides, carbohydrates or lipids within and around the cells.

cell density often resembles the proliferative state of cells controlling protein expression. consequently, the change in matrix density can be used for future studies focusing its effect on tumor growth, dormancy or metastasis. further, matrix density can be interpreted in a more formalized manner, such as the variable abundance and occurrence of discrete factors within cellular regions.

the role of fostering in silico modeling: there is a trend towards computational simulations of biological processes making use of different mathematical models  <cit> . in particular simulation-based experiments in the field of bioinformatical cancer research can save resources in terms of time and costs. collaboration between experimentalists and modelers has to be promoted and extended. this fact is most interesting for fostering cooperation of researchers from the interdisciplinary fields of computer science, mathematics, human-computer interaction, life sciences and biomedicine  <cit> .

the tool represents a basic instrument to supporting biomedical researches and a preliminary step towards supporting clinical scientists. until now, the tool has not been evaluated by clinicians. future plans are to conduct further iterative testing and verification and to experiment with machine learning approaches  <cit> .

CONCLUSIONS
recent advances in computational biology show high potential to deepen the understanding of origin and progression of cancer. our general aim is to enrich cancer research by providing a tool that will make computational biology applicable to both researchers and clinicians. we focus on the fundamental pathological processes of cancer which are represented by tumor growth. since abnormal cell growth involves chaotic, heterogeneous and highly differentiated structures, we chose to investigate cellular growth on the single-cell level. by refining model parameters of the cellular potts model, we highlight the impact of heterogeneous interceullular interactions on tumor growth.

herein, we describe the implementation of the cpm for the purpose of simulation and visual analysis of tumor growth and provide its sources on github. we chose the lattice-based visualization style as primary approach to present and display tumor growth for research purposes. the graph computation allows for multiple different visualization approaches. the user interface is highly adjustable and its implementation is designed to be extended. the possibilities and accessibility of our simulation and visualization approach might ultimately promote researchers and practitioners to progressing the field of tumor research towards personalized medicine.

our approach offers several potential future applications of studying tumor dynamics. first, we plan to implement more simplistic models in order to offer fast computations and visualizations. secondly, we plan to integrate various profiles into the tool, to offer exemplary simulations on different types of tumors  <cit> . next to iterative testing, profiles lead to the task of verification. furthermore, the implementation of additional dynamic parameters may enhance the simulation’s possibilities. multiple optional features to modeling as well as visualization styles will provide preferential outcomes in regard to detailed information or fast overview performance. another interesting step towards supporting researchers and clinicians is providing image loading and size detection of regions of interests as input parameter for the simulation. future integrations will include biomolecular networks such as drug-protein impact or genetic alteration patterns. harnessing tumor growth data and related gene data as well as providing an open source database for tumor growth related data  <cit>  are big steps forward to supporting science collaborations and clinical applications, and finally help contributing to fight cancer.

we believe that our approach is a motivator for fostering in silico modeling towards 3r and a better understanding of tumor dynamics.

abbreviations
cpm, cellular potts model; ecm, extracellular matrix; ggh, glazier-graner-hogeweg; js, javascript; mcs, monte carlo step

