BACKGROUND
bioinformatics has placed much emphasis on using various unsupervised clustering techniques as a means to understand the information present in gene microarray expression datasets. clustering techniques produce a rich taxonomy of results by defining groups of genes that act more or less similarly across a number of experimental conditions. the diverse approaches to clustering genes by expression levels include k-means  <cit> , self-organizing maps  <cit> , hierarchical algorithms  <cit>  and probabilistic models  <cit> . some approaches permit clustering of the conditions as well  <cit> . based on co-expression, genes that comprise individual expression clusters are often postulated to be co-regulated, and to the extent that this hypothesis is correct in any specific biological situation, the gene cluster definitions can offer key insights into gene regulatory network  structure and function.

another common data mining task is to try to identify small sets of genes that can serve as effective predictors of disease diagnosis or prognosis. while clustering at its best is good at finding sets of genes that are similarly expressed across all conditions within a dataset, many issues  can prevent clustering from successfully highlighting small groups of interestingly co-expressed genes  <cit> . this often encountered problem is addressed in part by hierarchical phylogenetic ordering algorithms such as average linkage in mike eisen's cluster program  <cit> , but the information biologists seek regarding shared sub-patterns of co-expression can be obscured by both algorithmic and visualization constraints. the algorithmic limitations in hierarchical clustering confound and "cover" the presence and organization of smaller and more specific gene groups that are similar across only a subset of conditions within the larger dataset. in any case, biologists generally subjectively define a cluster of genes from such phylogenetic trees based largely on human pattern recognition. finally, nothing inherent in the clustering approach helps to direct a biologist to which cluster is interesting or relevant. instead, biologists generally take the path of focussing on a group of genes exhibiting a pattern of expression that supports a specific hypothesis, or search for a known gene or genes of interest within a cluster to form an explanation for others in the cluster.

support vector machines have been shown to be useful for identifying small sets of related and predictive genes  <cit> , but represent a supervised learning approach which requires one to first define a set of known positive examples, a set of known negative examples, and a specific covariate to predict. we wanted an unsupervised algorithm that would help us to find relationships and structure in the data that is more specific than what clustering algorithms usually deliver, yet is hypothesis independent. we found it efficient and useful to use as an independent starting tool a very direct approach based on principal components analysis . a virtue is that this approach is computationally efficient for very large datasets, especially compared with most clustering algorithms, but is also applicable to much smaller ones. it allows one to directly explore each of the independent and diverse sources of variation present within a gene expression dataset and to subsequently identify the specific genes that vary the most, together with the conditions in which they vary.

unlike conventional clustering and ordering algorithms, this pca based approach permits a gene to be highlighted and grouped as influential in multiple condition sets, whereas in cluster membership a gene is typically assigned to one unique cluster. the "single cluster assignment" quality of traditional clustering and ordering algorithms is problematical because it tends to hide commonality of expression that is restricted to a small, interesting, and often entirely unpredicted subgroups of tissues, cell types, treatments or other condition types. this situation, perhaps because of inherent properties of gene network structure, will arise increasingly as the number and diversity of conditions represented in expression datasets increases.

the clustering method of barkai et al.  <cit>  addresses this issue of multiple membership in a different way, by using randomly-selected gene sets to iteratively search for and refine self-consistent groups. their approach, which is related to pca through singular value decomposition , also permits genes to be assigned to multiple "expression modules." in contrast to the method presented here, there is no provision for correlating modules with covariate data.

the use of principal components analysis presented here differs from other recent applications in gene expression analysis. pca is most commonly used in as a means of dimensionality reduction prior to clustering  <cit>  or prior to classification  <cit> . it is also used to visualize or confirm clustering results  <cit> . in contrast, our use of pca aims to find, then examine, and where possible, generate hypotheses to explain individual principal components. in this manner, we build on the observations by hilsenbeck  <cit>  raychaudhuri et. al.  <cit>  who used pca to gain insight into the underlying factors present in the chu et. al. yeast sporulation experiments  <cit> . wall et. al.  <cit>  introduced a novel use of singular value decomposition  for gene expression analysis that identifies non-exclusive gene groups, and selaru et. al.  <cit>  illustrated the potential of pca to detect molecular phenotypic bases that correspond to relevant clinical or biological features of human tumors. their approach identifies a subset of principal components that correlate well with known covariates. here we introduce methods that extend beyond producing gene groups and observing a few principal components. our methods provide a path for systematically analyzing each principal component by identifying the genes most influential in defining a particular principal component and the conditions in which those influential genes vary significantly. finally, we describe methods which aim to explain each principal component's observed variance in terms of the condition variables deemed most likely to be driving the variance. we also introduce a software package that implements these methods. these methods and our software package provide automated and objective way of doing what a biologist naturally tries to do through inspection and pattern recognition.

implementation
we have developed a python package to implement the pca interpretation capability described in detail in the methodology section. this pca analysis package has been added to compclust developed previously  <cit> . the combined packages allow one to cluster, classify and visualize numeric datasets that have discrete or numeric annotations , and to compare labelings with confusion matrices and metrics such as normalized mutual information   <cit> . this pca analysis tool  has also been made accessible through the compclustweb web-based interface  <cit> . our software makes use of data manipulation and graphical plotting using the matplotlib package  <cit> , and the statistics are generated using the rpy package  <cit>  and gary strangman's python stats package  <cit> .

the web-based front-end permits users to get a complete report on the interpretation of each principal component, including interactive pca projection plots with the principal component's extreme genes  highlighted; ranked lists of the pcegs with detailed annotations; interactive significance-ordered gene set trajectory plots that permit users to drill down to the individual gene level; similarly ordered condition reports ordered by expression difference and grouped by significance, including covariate info ; and finally a report of any suggestive covariates that are well correlated with the significant column grouping, including the confusion matrices and/or plots of statistics scores to back up the conclusions. all principal component analysis and results generation is implemented in a python package so that analyses of large datasets can be executed in a batch mode rather than through the graphical interface. further, the software that implements the compclustweb interface is provided within the compclust package, so a software developer can create his or her own compclustweb server to review results of their pca interpretation.

RESULTS
application to microarray expression data, case 1: gnf human data
we obtained gene expression data from the genomics institute of the novartis research foundation  gene expression database via their symatlas web site  <cit> . the dataset is a challenge for most clustering algorithms because it contains  <dig> tissue samples hybridized to two affymetrix microarray chips: u133a and gnf1h. the dataset combines the measurements of these chips to provide a total of  <dig>  unique probe identities across the  <dig> tissue samples. expression data are signal intensities estimated by affymetrix microarray suite v <dig>  for our analysis we used the log base  <dig> of the expression signal, and included data for all tissues and probes . we applied our principal components analysis tool to generate interpretations for each of this dataset's  <dig> principal components.

as detailed in the methodology section, for each principal component we identified a set of gene probes occupying the high and low extremes of that principal component's axis . one can adjust parameters to recover smaller and larger numbers of pcegs per component by specifying either a likelihood threshold or an explicit number of pcegs. the pcegs are those probes having the most highly weighted values for that principal component, selected because they stand out from the others, they influence the principal component's direction, and thus they warrant further investigation. we selected probes with likelihoods less than extremethresh =  <dig> , which yielded on average  <dig> low and  <dig> high extreme genes per principal component, though the sets sizes do vary considerably . next we identified the tissues in which the high pcegs showed significantly different expression than the low pcegs. visualizations produced include scatter plots of the extreme genes in pca sub-spaces , and extreme gene trajectories in original tissue order as well as with tissues ordered by decreasing difference of mean of high pcegs and mean of low pcegs. the latter trajectory plot emphasizes how the extreme genes for a principal component show a pattern of expression that imposes a partitioning of tissues. it is left to human interpretation to examine the extreme genes and the tissue partitioning exposed by each principal component, and thus to build hypotheses that attach meaning to the sources of variation. the percentage variance explained by the top  <dig> principal components is provided in table  <dig>  example results for two illustrative principal components, pc <dig> and pc <dig>  are shown in figures  <dig> through  <dig> and in tables  <dig> through  <dig>  and are discussed below. the complete analysis results generated for pc <dig> are provided as an example in the supplemental files: , , , , , . our supplemental materials web site  <cit>  contains the complete collection of pca interpretation results generated for these dataset for all principal components, as well as results of a comparable analysis done at extremethresh =  <dig>  which yielded larger pceg sets.

we addressed the question of biological and statistical significance of pcs and the sets of extreme genes identified. each set of high and low extreme genes from each principal component was tested for gene ontology  statistical enrichment when compared to the human go annotations from ncbi's loc2go dataset using the hypergeometric to calculate the p-value of each go term. terms that were enriched for a particular pc at 1% significance threshold and that were still significant following a bonferroni correction for multiple hypothesis testing as described in  <cit>  are reported as enriched .  <dig> of the top  <dig> pceg lists, derived using a stringent cut-off of  <dig> , produced significant go enrichments; no pceg sets beyond pc <dig> showed significant enrichment. as discussed below, many of the significant results showed obvious biological coherence and relationships to the specific samples associated with the pc of origin. this argues that pcs containing less than 1% of the total variation in this dataset are still relevant and point to coherent and important gene sets and their related samples.

relationships between extreme gene sets and the corresponding sets of driving samples could be discerned for many pcs. the methodology section presents a way to additionally correlate each principal component's sample partitioning with any available sample covariates. although some human sample covariate information is provided in our test case, the gnf human expression dataset is not amenable to this additional layer of analysis because multiple subject's rna samples were pooled prior to amplification and array hybridization. however, a second publicly available dataset with rich covariate information is presented below.

application to microarray expression data, case 2: human diabetes
we acquired a human diabetes expression dataset  <cit>  from the broad institute cancer program dataset repository  <cit>  along with the corresponding phenotype covariate data, and applied the filtering step as they described to produce a set containing  <dig>  probes across  <dig> samples. tissue samples were skeletal muscle biopsies from  <dig> diagnosis groups: normal glucose tolerance ; impaired glucose tolerance ; and type  <dig> diabetes mellitus . we used our pca interpretation software to perform an unsupervised analysis of the dm <dig> vs. ngt subset . as described in the methodology section, pceg sets were determined using an extremethresh likelihood threshold of  <dig> , which yielded about  <dig> high and  <dig> low extreme genes per principal component. for each principal component n, samples were partitioned in to upn, flatn and downn sample sets on the basis of pc-n extreme high and extreme low expression differences. the supplemental materials contain pca interpretation results for all  <dig> principal components, as well as results of a comparable analysis done at extremethresh =  <dig>  which yielded smaller pceg sets .

this dataset contains more than  <dig> covariates, which provides the opportunity to interpret each principal component by searching for covariates that correlate well with expression patterns in the pceg sets. as described in the methodology section, we asked if any of the covariate annotations are well correlated with the partitioning of samples into upn, flatn and downn sets. covariate distributions were compared across different partitions  and any significant trends identified were recorded . for covariates identified as significantly correlated with a principal component's sample partitioning, covariate distribution plots were generated to further investigate and evaluate the apparent relationship. for example, figure  <dig> illustrates that pc14's up <dig>  flat <dig> and down <dig> sample partitions appear to be significantly related to two covariate measurements: insulin_ <dig> ; and type2b_ . the pearson's correlation between the mean expression for the pc14eg-high set and insulin_ <dig> and type2b_ covariates are r =  <dig>  and r =  <dig>  respectively.

discussion
this pca-based data-mining tool highlights specific patterns of expression and associates them in a convenient way with the genes and samples responsible for those patterns. some associations in the first few principal components  of the gnf set reflect major features in the data that are expected. this includes the global high and low constitutive expression profiles of pc <dig> . a component similar to this is often the first or second pc in affymetrix array datasets. gnf pc <dig>  in contrast, highlighted brain/neuronal tissues, which we expected in this dataset because there are many more samples from brain regions than from any other tissue, and there are thousands of genes that are expressed in a general brain pattern. the go enrichment analysis associated with pc3lowegs confirmed this impression by identifying neurogenesis, central nervous system, and synaptic terms as significantly enriched for pc3eg .

we asked if principal components that account individually for small fractions of variation in the data are likely to be significant. conventional practice generally ignores principal components accounting for a few percent, or less, of total variation, on the assumption that such minor components are most likely dominated by noise. we believe this assumption, that all of the pc's accounting for small fractions of data should be ignored because they are artefact, to be wrong in the context of our analysis. we believe this, in part, because in our analysis we find many pcegs for minor components are statistically enriched . further, computational experiments using randomized data fail to produce any significant enrichments. this go enrichment analysis, it should be noted, tends to underestimate the fraction of gene sets that are significant. this is a known artefact in instances where the input gene number  is small, and its effects are exacerbated by the fact that go annotations for human are still very much in a building phase. many genes that will eventually be associated with go terms are not yet entered. this means that reducing the threshold modestly, and therefore increasing the gene number, can uncover additional significant go term enrichment in some of these pcs. for complete results of gnf analysis at p < =  <dig>  see our supplemental materials web site  <cit> .

viewed from a biological perspective, this pca mining revealed several different classes of relationships. gnf pc <dig> is a good example of a component that highlights a coherent gene set and its corresponding tissues, many of which would also be grouped together by conventional clustering algorithms. this is true even though pc <dig> accounts for just  <dig> % of total variation. the pc21eg-low set  was enriched in a statistically significant way for five different go terms , and these terms  tell a simple and internally consistent story about muscle development and function. the top tissue samples driving pc21-low are skeletal muscle, tongue , heart and thyroid . most top-ranked genes in this pceg set are so specific for striated muscle that they would also appear together in conventional clusterings, although many clustering approaches become technically problematic with datasets of this size. however the pc21eg-low list differs from a conventional muscle cluster because it also includes some genes that are partly associated with muscle and partly associated with other tissues. pp1r1a, a regulatory subunit of protein phosphatase <dig>  is such a gene. a role for it in striated muscle is suggested based on its coherent presence in tongue, skeletal and cardiac samples, even though it might well not have been seen in this light by standard clustering.

the second example is gnf pc <dig>  which accounts for  <dig> % of variation. it illustrates a different kind of biological relationship that more strongly distinguishes results of pca mining from classical clustering. top extreme genes associated with pc <dig> by inspection turn out to be a "who's who" of extracellular matrix components ; and matrix associated signalling and matrix associated signal modulators . go analysis confirms what inspection of the top pc7egs suggested: namely that a set of extracellular matrix components are expressed in these driving tissues. it is instructive to look at the individual expression profiles for these genes directly at the gnf website and also in aggregate, as represented in the tissue  list in table  <dig>  the most prominent contributing tissues associated with high expression of these genes are informative specifically because they do not constitute a group that would have been selected a priori as a coherent set based on known tissue function or shared developmental origin.

this is useful because a biologist interrogating the gnf database would not likely have constructed a query combining adipocytes, smooth muscle, bronchial epithelium, nor would one expect traditional clustering algorithms to place these genes so close to each other as to catalyze the same observation. similarly, conventional ordering algorithms would not have placed them adjacent to each other because other parts of their expression profiles, containing different genes than those in pc <dig>  would dominate their positions. and concerning genes, they have, in addition to commonalities of expression highlighted by pc <dig>  differences from each other in additional diverse tissues not highlighted by pc <dig>  the pca grouping gives impetus and a necessary starting gene list to search for one or more factors or regulatory rnas with a similar expression pattern, or to search for a shared and perhaps evolutionarily conserved cis-acting dna sequence motifs. it is unlikely that these working hypotheses would have been arrived at easily by widely used methods of gene expression analysis.

the diabetes dataset offered us an opportunity to add more value to principal component interpretations by searching for covariates that appear correlated at some significance level. the relationships highlighted between covariates and principal components are suggestive, but not conclusive by themselves. rather, they provide hypotheses that a researcher may wish to further investigate. while we have not delved deeply into this dataset, we believe that a number of the principal components are highlighting a number of meaningful sources of variation present. it is not clear whether this set should exhibit the same proportion of meaningful principal components as the gnf dataset, as by design the ngt vs. gm <dig> dataset does not contain substantial diversity of samples. likewise, the selection of covariates was focused on a narrow set of measurements selected to be indicative of diabetes status, and so many covariates are redundant. we anticipate this tool will be maximally useful in cases where datasets are rich in both sample complexity and diversity of covariates.

CONCLUSIONS
results presented above show that this pca-mining approach can guide a user to biologically significant observations that both complement and reinforce those from conventional clustering analysis. the software package and web interface make this style of microarray analysis straightforward and accessible.

we have applied this to four additional microarray datasets  and to one multi-spectral imaging dataset. in each case we found the interpretations that the tool presented to be useful. in general, it seems that the top few principal components identify very broad characteristics of the data. digging to the deeper components that comprise smaller but more particular substructure in the data leads to more subtle but often meaningful observations, many being complementary to standard clustering.

with respect to the top few components, pc <dig> is usually the approximate diagonal through the sample/condition space, explaining the overall variation in absolute expression level. for some other datasets we have noticed that the top few pcs can also highlight effects of preprocessing normalization steps or global data quality issues. this means they do not necessarily expose the most important biological variation. thus, in one microarray dataset not shown here, pc <dig> was found to be extremely well correlated with a measure of quality of samples, as reflected by the percent of affymetrix probes called present. given this evidence of data quality effects comprising a major source of variation over the entire dataset, one might be motivated to remove the major offending conditions, and then repeat the pca interpretation on the remaining conditions . the idea is that an independent source of variation might be obscured by more dominant signals or noise present in the data from the offending condition.

our experience thus far leads us to think that this pca interpretation method will contribute to microarray expression analysis, as one part of a panel of methods that are sensitive to different features in a dataset, such as sample number, gene number, and distribution of variation across the samples. the pca method should be especially useful for large, complex datasets that offer rich variation among many samples. what is certain is that there are almost always multiple sources of variation in a dataset and that in any specific study their nature and relative strength is informative, whether the origin is an easily-understood biologic one, a technical one, or a poorly-understood but nonetheless biologically pertinent one.

we are continuing to explore ways to improve our methodology and software package. we anticipate further advances will come with software infrastructure improvements to permit covariate analyses of both column  covariates and row  covariates. the compclust dataset labeling capability  <cit>  allows a user to attach diverse and numerous labelings to rows or columns. for example we can pull in additional row  annotations such as gene ontology  functional groups. beyond explicitly comparing the nmi significance of specific row partitionings for discrete covariates, we plan to add routines to compclust to automatically indicate when a group of genes are found to be enriched in specific go categories , and more generally to handle large, discrete, multi-valued distributions of values. our use of nmi treats discrete covariates as discrete random variables that can have at most a single value per condition, and so does not optimally address issue of multi-valued discrete random variables . we are considering more elaborate extensions of mutual information or alternatives that might be able to take further advantage of such multi-valued entries.

availability and requirements
the pca interpretation software is implemented as one component of the compclust python package  <cit> , which is freely available for non-commercial use. the software capability is also accessible through the compclustweb web-based interface  <cit> . the software that implements the web application is also included within the compclust software distribution.

project name: the pca interpretation component of compclust

project home page: 

operating system: platform independent 

programming language: python

other requirements: python  <dig>  or higher 

license: mlx public license  <dig>  

use by non-academics: licence needed

we recommend that interested researchers use the web-based application, compclustweb, from any platform to review the pca interpretation results for the gnf human gene expression and broad institute human diabetes expression data sets. we have written a compclust pca interpretation tutorial that demonstrates how to use compclust's programming interface to generate pca interpretations. following the tutorial requires that compclust and its python prerequisites be installed. we created an easy-to-use compclustshell installer for windows that provides everything needed. for other operating systems  we recommend that a software developer or system administrator help with the compclust source code installation. we are working to simplify installation and plan to provide user-friendly installers for other operating systems in the near future.

methodology
we have developed the following algorithm for identifying and analyzing multiple independent sources of variance present within multi-dimensional sample datasets, in particular those that are produced by gene microarray expression experiments. the overall approach can be summarized as follows: 1) perform principal components analysis of the dataset; for each principal component: 2) identify the most extreme gene probes  for that principal component; 3) identify and group any conditions in which those extreme probes vary significantly; 4) identify any condition covariates that correlate well with the condition grouping. by extending the interpretation of each principal component from extreme genes  to ordered groups of significant conditions  and further to identifying statistically significant correlations with column covariates, we attempt to make full use of the available data, in an objective and data-driven way, to analyze and provide meaningful interpretations of the diverse sources of variation present within the dataset.

determine the principal components of the dataset
our dataset d consists of nc columns  and nr row vectors , each row vector xi ∈ ℜnc where i ∈ . such a dataset is usually represented as a two-dimensional nr × nc matrix . the dataset may optionally have nk supplemental covariate annotations c associated with each row or column. each annotation ck where k ∈  can be either discrete  or continuous , to permit the association of one discrete value per column , or one continuous value per column .

our procedure starts by employing principal components analysis  to sequentially identify a series of new basis vectors or axes pc <dig>  pc <dig>  ...pcnc in the high-dimensional column space ℜn that are each aligned sequentially to capture the most as-yet unexplained variance. this is accomplished by applying the numeric procedure singular value decomposition  to the covariance matrix of d, cov, to produce the decomposition cov = usvt that contains the eigenvectors of cov in the columns of u and eigenvalues in the diagonal of s such that the eigenvalues are sorted by descending size. each covariance eigenvector, or principal component pc <dig>  pc <dig>  ...pcnc, explains a fraction of the total variance contained in the dataset, and each principal component pcn+ <dig> is orthogonal to the previous principal component pcn. such that they define the basis of a new vector space p. these results are made available to the users in the form of nc plots, one for each of the principal component vectors, as well as a plot of the singular values contained in the diagonal of s to indicate the relative amount of variance each component explains.

identify extreme gene probes for each principal component
next, we project each data point xi  into the new coordinate system by p = du, effectively rotating the entire data point set d into the new principal component axes space, producing the rotated data set p. each data point pi in the rows of p corresponding to xi has a coordinate for each principal component axis that describes where the data point pi lies when projected along each axis pc <dig>  pc <dig>  ...pcnc. for each principal component pcn  we select a set of data points from each end of that principal component axis- these are the extreme points for pcn, called the principal component extreme genes, or pcegs for convenience. the pcegs can be identified and ranked in one of two ways: by identifying points having a low probability  of belonging to a gaussian fit to the distribution of points along the pcn axis, or by taking a fixed number of nextreme points at each tail of the distribution. hn is the resulting set of data points having the highest coordinate values for pcn, and ln is the resulting set of data points having the lowest coordinate values for pcn. these high and low extreme gene point sets are informative in and of themselves because they represent the most extreme of the data points along a principal axis of variation. as such, the high and low pceg sets are some of the primary outputs generated by our procedure. we use the term "extreme" in a very general sense, in that the points stand out because they are far from the main distribution. we do not mean to imply that such points are either biologically relevant or nuisance data that should be removed; rather we are interested in these points in an unbiased way. by further analyzing their pattern of expression in the original axes we hope to gain a better understanding of their possible biologic significance.

identify significant conditions for each principal component
the extreme gene points comprising hn are located near one edge of the high-dimensional cloud of points, and points ln are near the opposite edge. thus, points hn are likely to have coordinate values that are maximally different from points ln in a subset of the original column space coordinate system. our procedure next seeks to identify in which of the original columns  we find the greatest difference of values for points hn versus points ln. we do this by comparing distributions of values in hnj versus lnj for each of the original columns j . a two-sided wilcoxon rank sum test is used to estimate the likelihood that these two sets of values are drawn from the same distribution  <cit> ; the resulting p-values for each column are used to rank order and group the columns, rather than as actual probabilities. columns having a likelihood less than a user-defined significance level test1thresh are identified and placed into one of two column sets: upn for those where column j has mean > mean, and downn for those columns j where mean <mean. remaining columns that do not show significant variation are placed in the column set flatn. the column sets are also meaningful outputs of our procedure, as upn and downn describe the groups of columns in which the extreme genes hn and ln vary significantly. our procedure can output these columns and column sets in various orders simply as an aid to human interpretation, including: original column order; grouped by set and within set ordered by the wilcoxon p-value significance; ordered by mean difference, mean – mean; or ordered by the eigenvector column loading. taken together, the pceg point sets and significant column sets should provide valuable insight to researchers wishing to interpret each of the sources of variation identified by the principal components procedure.

interpret each principal component using covariate annotations
when provided additional covariate annotations c, the procedure seeks to determine which, if any of the annotations ck are well correlated with the partitioning of columns into the sets {upn, flatn, downn}. a discrete annotation ck containing m unique values v <dig>  v <dig>  ... vm also defines a partitioning of the columns {kv <dig>  kv <dig>  ..., kvm} where kv <dig> is the set of columns that share the value v <dig>  kv <dig> are those that share value v <dig>  and so on. an information theoretic measure known as normalized mutual information   <cit>  describes the degree to which two discrete random variables share information. when there is high mutual information, knowing the value of one of the variables should be useful predictor of the other variable.  we construct the  <dig> x m confusion matrix to compare the {upn, flatn, downn} column partitioning with the {kv <dig>  kv <dig>  ..., kvm} partitioning and calculate an nmi score between the partitionings. because the usual nmi score is not symmetric  ≠ nmi), we use a variant that we refer to as the average nmi score, which is simply the average of the nmi of the confusion matrix and the nmi of the transpose of the confusion matrix. those covariates ck having an average nmi greater than a user defined threshold nmithresh are added to the set of significant covariate annotations an.

we apply a different approach when evaluating the ck that are continuous covariates. we need to assess whether each principal component's {upn, flatn, downn} column partitioning correlates with each ck distribution of values. we can separately score three different partitioning schemes, upn vs. downn, {upn+flatn} vs. downn, and upn vs.{flatn+downn}, by determining if ck's value distributions differ significantly across the partition. e.g. does ck within upn have a different distribution than ck within downn? next, does ck within {upn + flatn} have a different distribution than ck within downn? finally, does ck within upn have a different distribution than ck within {flatn+downn}? for each partition scheme we again use a two-tailed wilcoxon rank sum test, including the small sample adjustments when sample size is less than  <dig>  to determine whether the covariate's value distributions on each side of the partitioning differ significantly from each other. a minsetsize parameter can be specified as desired to reduce false positives when set sizes are very small, e.g. when comparing a distribution of  <dig> values vs.  <dig> values. thus we calculate the wilcoxon p-value for three partitionings of columns: upn vs. downn, {upn+flatn} vs. downn, and upn vs. {flatn+downn}. those covariates having a p-value less than the user defined threshold test2thresh for any of the three partitionings are added to the set of significant covariate annotations an.

upon completion of the covariate analysis, covariates in the set an, that previously met user-controlled significance thresholds are reported by the software. covariate reports provide the following information: for discrete-valued covariates, corresponding confusion matrices and average nmi scores are reported; for continuous-valued covariates, the three wilcoxon p-values are reported together with supporting plots illustrating the covariate distributions. there is no guarantee that any covariates will be significantly related to a principal component. conversely, spurious relationships might be reported, especially in the case of small numbers of samples due to small column partitions. the tool simply points to those covariates related to a principal component that also satisfy a user-controlled significance threshold. it is up to the investigator to consider these hypotheses and to confirm the interesting ones through further investigation.

terminating condition
we have shown that some large-scale expression datasets have biologically pertinent structure that is revealed by deep pc analysis that goes well beyond the first few principal components. however there are limits to the depth of mining and these limits depend on both size and character of the dataset. in all cases, the last principal component is not free to seek a source of variation because it must be orthogonal to all prior nc- <dig> components. to some degree that is also true of some portion of latter principal components that explain ever-diminishing fractions of the variance. we suggest that a natural terminating condition exists: when a principal component cannot find any columns in which the extreme gene sets show significant differences, there is no need to proceed to subsequent principal components. we observe that this condition is often not met because the extreme genes are typically differentially expressed in at least a few of the original columns , even for the most minor principal components. we also observe that variants of a dataset  can affect the relative ordering, but not the existence, of multiple factors or sources of variation that are reflected in the minor principal component regime. we may therefore choose to investigate all principal components, but do so with the expectation that minor principal components will describe increasingly subtle sources of variation, which can, and often do, include noisy processes inherent in the data source.

authors' contributions
jr and ch conceived the methodology of exhaustively analyzing and interpreting principal components, in particular how to identify extreme genes and significant conditions, and how to automate correlating these conditions with covariates to aid interpretation. jr, bk, dt and ch carried out the software development. jr carried out the initial pca interpretation studies and drafted the manuscript. bk and dt performed additional pca analyses and results interpretation. am performed the gene set go term enrichment analysis. bw conceived of the gnf dataset interpretation study, participated in its design and results interpretation, and helped to draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
the supplemental files provided with this publication are only a representative set of those generated by the pca interpretation software. the complete collections of pca interpretation results for both the gnf and diabetes datasets are provided as a supplement to this publication at  <cit> .

tab-delimited text file listing the high and low extreme genes for pc <dig>  including pc <dig> coefficient and additional gnf gene annotations: probeid, name, aliases, description, function and protein families.

click here for file

 additional file 2
the supplemental files provided with this publication are only a representative set of those generated by the pca interpretation software. the complete collections of pca interpretation results for both the gnf and diabetes datasets are provided as a supplement to this publication at  <cit> .

tab-delimited text file listing the conditions that are up, flat and down for pc <dig>  ordered by decreasing difference of means.

click here for file

 additional file 3
the supplemental files provided with this publication are only a representative set of those generated by the pca interpretation software. the complete collections of pca interpretation results for both the gnf and diabetes datasets are provided as a supplement to this publication at  <cit> .

trajectory plot of the pc <dig> eigenvector, or "eigen-condition".

click here for file

 additional file 4
the supplemental files provided with this publication are only a representative set of those generated by the pca interpretation software. the complete collections of pca interpretation results for both the gnf and diabetes datasets are provided as a supplement to this publication at  <cit> .

scatter plot of gene probe expression levels projected onto pc <dig> vs. pc <dig> space. the pc <dig> high and low extreme gene sets are highlighted in red and blue colors, respectively.

click here for file

 additional file 5
the supplemental files provided with this publication are only a representative set of those generated by the pca interpretation software. the complete collections of pca interpretation results for both the gnf and diabetes datasets are provided as a supplement to this publication at  <cit> .

gene trajectory plots for pc <dig> high and low extreme gene sets with tissues in the order in which the original data were provided.

click here for file

 additional file 6
the supplemental files provided with this publication are only a representative set of those generated by the pca interpretation software. the complete collections of pca interpretation results for both the gnf and diabetes datasets are provided as a supplement to this publication at  <cit> .

gene trajectory plots for pc <dig> high and low extreme gene sets with tissues ordered by decreasing mean differences, and thus grouped by significance .

click here for file

 acknowledgements
this work was supported in part by grants to bjw from the department of energy and the national cancer institute's director's challenge program. additional support was provided by the nasa office of biological and physical research  program. we also acknowledge eric mjolsness for discussions at the earliest phases of this research, and ken mccue for additional discussions. we acknowledge that the gnf gene microarray expression data presented herein was obtained from genomics institute of the novartis research foundation, and is © 2003– <dig> gnf. we acknowledge that the diabetes expression data presented herein was obtained from the broad institute's cancer program dataset repository.

figures and tables
                              name
go: <dig> synaptic transmission 
go: <dig> central nervous system development 
go: <dig> cell division 
go: <dig> phosphoinositide-mediated signaling 
go: <dig> cell cycle 
go: <dig> dna replication 
go: <dig> protein serine/threonine kinase activity 
go: <dig> atp binding 
go: <dig> nucleus 
go: <dig> cellular defense response 
go: <dig> extracellular matrix  
go: <dig> collagen 
go: <dig> phosphate transport 
go: <dig> muscle development 
go: <dig> collagen binding 
go: <dig> heparin binding 
go: <dig> cell adhesion 
go: <dig> antigen processing, exogenous antigen via mhc class ii 
go: <dig> mhc class ii receptor activity 
go: <dig> t cell activation 
go: <dig> cell surface receptor linked signal transduction 
go: <dig> transmembrane receptor activity 
go: <dig> cellular defense response 
go: <dig> antimicrobial humoral response  
go: <dig> lipid transporter activity 
go: <dig> blood coagulation 
go: <dig> acute-phase response 
go: <dig> serine-type endopeptidase inhibitor activity 
go: <dig> chymotrypsin activity 
go: <dig> trypsin activity 
go: <dig> transport 
go: <dig> lipid catabolism 
go: <dig> extracellular region 
go: <dig> heparin binding 
go: <dig> proteolysis and peptidolysis 
go: <dig> intermediate filament 
go: <dig> epidermis development 
go: <dig> extracellular region 
go: <dig> structural constituent of cytoskeleton 
go: <dig> extracellular space 
go: <dig> epidermis development 
go: <dig> lipid transporter activity 
go: <dig> structural constituent of muscle 
go: <dig> actin binding 
go: <dig> striated muscle contraction 
go: <dig> oxygen transporter activity 
go: <dig> structural constituent of muscle 
go: <dig> actin binding 
go: <dig> lipid transporter activity 
go: <dig> oxygen transporter activity 
go: <dig> extracellular space 
