BACKGROUND
protein tertiary structure comparison is widely employed in the field of structural biology, with applications ranging from protein fold classification  <cit> , protein structure prediction and modeling  <cit>  to structure-based protein function annotation  <cit> . with the rapid increase in the number of protein structures deposited in the protein data bank   <cit> , it is important to develop faster and better algorithms to compare protein structures. in general, there are two types of protein tertiary structure comparisons approaches. the easiest involves the comparison of a pair of protein structures with an a priori specified equivalence between pairs of residues . the second type involves the comparison when the set of equivalent residues is not a priori given. therefore, an optimal structural alignment needs to be identified; this problem is np-hard with no exact solution  <cit> . nevertheless, a number of methods have been developed that employ heuristics to search for the best structural alignment. these methods use different representations of protein structure, definitions of similarity measures and optimization algorithms  <cit> . some approaches compare the respective distance matrices of each protein structure, trying to minimize the intra-atomic distances for the set of aligned substructures  <cit> ; this is the approach employed in the widely used dali algorithm  <cit> . another approach, tries to minimize the inter-atomic distances between two structures  <cit> ; representatives of this type of algorithm include ce  <cit> , mammoth  <cit> , and tm-align  <cit> .

in practice, most structural alignment procedures start with the generation of an initial set of equivalent residues. then, using a structural similarity score, the initial seed alignment is extended and/or refined using methods such as dynamic programming or monte carlo procedures. finally, the structural similarity score is assessed; this is generally done on the basis of the statistical significance of the structural similarity. in practice, many structural alignment algorithms use fragment assembly to build the initial set of equivalences  <cit> . this involves the comparison of many, if not all, small fragments in the two structures. then, similar fragments are assembled into a larger, consistent set. fragments can be secondary structure elements  <cit>  or arbitrary substructures of a given length as in ce  <cit>  or mammoth  <cit> .

in most structural alignment methods, structural similarity is assessed by a structure comparison score. one commonly used measure is the root-mean-square deviation, rmsd, between a pair of structures with a specified set of equivalent residues. as pointed out by zhang and skolnick  <cit>  among others  <cit> , statistically significant values of the rmsd are length dependent. another problem is that the rmsd can be reduced by decreasing the coverage . these issues were addressed by introduction of the tm-score  <cit> , which is a modification of the levitt-gerstein  weight factor  <cit>  that weights residue pairs at smaller distances greater than those at larger distances. the tm-score is length independent, with a value of  <dig>   for the average  tm-score of the best structural alignment for randomly selected pairs of proteins  <cit> .

based on the tm-score, a new structural alignment algorithm tm-align  <cit>  was developed. tm-align employs a very simple approach that uses both gapless threading and secondary structure similarity to generate the initial set of equivalent residues. this set of aligned residues is refined using dynamic programming to maximize the tm-score. the scoring matrix used for dynamic programming is derived from the tm-score rotation matrix, which results in faster convergence and a better structural alignment. on average, tm-align provides structural alignments with higher accuracy and coverage than the most often-used methods such as dali and ce. in a separate study  <cit> , tm-align was compared with other competitive structural alignment programs using different measures of structural similarity, with the result that tm-align is one of the best structural alignment programs  <cit> . however, tm-align sometimes is unable to identify a good structural similarity. to address this issue, in the present work, we improve the tm-align program by generating a better initial set of equivalences using a fragment assembly approach. this is followed by heuristic iterations involving the tm-score rotation matrix and dynamic programming to obtain the structural alignment with the largest tm-score.

methods
datasets
we have used two datasets for the evaluation of different structural alignment programs. the first dataset is the same as that used in the original tm-align paper  <cit>  and consists of  <dig> proteins that range in size from  <dig> to  <dig> residues. the first dataset is also used in deriving various parameters for fr-tm-align algorithm. the second dataset has  <dig> proteins, and is a randomly selected, representative subset of the pdb template library of non-homologous proteins with pairwise sequence identity of ≤ 35%  <cit> . it is comprised of proteins whose length ranges from  <dig> to  <dig> residues and includes representatives of all secondary structure classes, viz. all α, all β or mixed α/β proteins.

algorithm and implementation
fr-tm-align employs the backbone cα coordinates of the protein structures for the structural alignment. the fr-tm-align algorithm consists of the following steps:

 <dig>  generation and scoring of aligned fragment pairs
in the first step, an optimal superposition between the fragments from two protein structures is obtained that maximizes the structural similarity score as given by the gl-score, defined as:

  gl−score=∑i=1lf− <dig> 

where da =  <dig>  and lf is the length of the fragment. here, the value of da is derived empirically. in order to derive the empirical value of da, we have used four reasonable values for da =  <dig> ,  <dig> ,  <dig>  or  <dig> , and the value which resulted in the maximum average tm-score for all pairs of alignments in the training dataset using fr-tm-align was selected. in addition, the secondary structure similarity between the two fragments is given by the ss-score, which is simply the number of residues with identical secondary structure normalized by the length of the fragment. the secondary structure assignment procedure is same as in tm-align  <cit> .

let la and lb be the length of the first and second chains respectively, and let lf be the length of the fragment. then, the numbers of fragments are i = la/lf and j = lb/lf. the length of the fragment is selected empirically. lf, is  <dig> residues, if the length of the smaller protein is less than  <dig> residues; otherwise, lf =  <dig> residues. we perform an all-against-all  structural superposition of the non-overlapping fragments from the two protein structures. the structural similarity and secondary structure similarity of the fragments from the two proteins as given by their gl-score and ss-score are stored in the g and s scoring matrices respectively.

 <dig>  assembly of fragments and generation of seed alignments
in order to generate different seed alignments, the fragments are assembled into a large consistent set. for this, we employ dynamic programming  with no end gap penalty to align fragments using the scoring matrices derived from the fragment comparison in the first step. we observed that the optimal fragment alignment does not usually result in the structural alignment with highest tm-score. hence, in addition to the optimal alignment obtained using dp, we generate three suboptimal alignments using a variation of the waterman and eggert algorithm  <cit> . the generation of suboptimal alignments involves re-computing of the forward trace matrix for finding the optimal path with the modification that the similarity score of the previously aligned positions is not used in the calculation of the forward trace matrix. the optimal path alignment is obtained by back tracing from the last column/row using this forward trace matrix using no end gap penalty. other variations of the dp algorithm to generate the suboptimal alignment  <cit>  would have been equally applicable.

we have used two scoring matrices for dp, g and +s)/ <dig>  along with three different gap opening penalties of - <dig> , - <dig>  and  <dig> , which are chosen empirically to generate various fragment alignments. the fragment alignment, in turn, provides the initial set of equivalent residues between the two protein structures. we could use these initial set of alignments as seed alignments and use heuristic iteration to get best structural alignment. however, we observed that refining the alignment with another round of dp before heuristic iteration results in alignments with improved tm-score.

the fragment alignment is used to generate initial equivalent residues, which are modified by dp using three different scoring matrices to form the final set of seed alignments. the three scoring matrices are:  a distance score matrix generated by rotating one of the structures by the rmsd rotation matrix based on the aligned residues. the rmsd rotation matrix is the matrix which minimizes the distance between pairs of equivalent residues for given two structures. this provides the best structural superposition  of the predefined equivalent residues between two structures and is used to calculate the distance matrix ), which is used in the dp step.  modification of the first scoring matrix based on the identity of the secondary structure assignment of the residues. when the secondary structure assignment of the pair of aligned residues is the same,  <dig>  is added to the respective score.  a distance score matrix generated using the tm-score rotation matrix based on the aligned residues. along with these scoring matrices, we have used gap opening penalties of - <dig>  and  <dig> . this step is repeated for each fragment alignment. finally, this gives a set of seed alignments, which are refined using the heuristic iteration procedure discussed below. the generation of initial seed alignments is an exhaustive process. however, we can generate fewer seed alignments by using only one gap opening penalty rather then using two. this decreases the computational time of the algorithm. we have implemented this in the faster version of the program .

 <dig>  heuristic iteration
the above mentioned initial alignments are submitted to heuristic iteration as described in tm-align  <cit> . in this procedure, we first rotate the structures by the tm-score rotation matrix  based on the aligned residues in the initial alignment. this rotation matrix is identified in the process of finding the set of equivalent residues that gives maximum tm-score. the score similarity matrix is defined as:

  s =11+dkl2/d02  

where

  d0= <dig> lmin⁡−153− <dig>  

here, dkl is the distance of the kth residue in structure  <dig> from the lth residue in structure  <dig> under the tm-score superposition, with lmin the length of the smaller protein. a new alignment can be obtained by implementing dp on the matrix s, with optimal gap opening penalties of - <dig>  and  <dig> ; these parameters were chosen empirically . we then superimpose the structures by the tm-score rotation matrix according to the new alignment and obtain a newer alignment by implementing dp with the new score matrix. the procedure is repeated until the alignment becomes stable and the alignment with the highest tm-score is returned.

in all the above mentioned dp procedures, we obtained gap opening penalties with the objective function being the maximization of the average tm-score of the final alignment for all pairs of proteins in the training dataset. for this, we spanned gap penalties from - <dig>  to  <dig>  with a bin width of  <dig> . the gap opening penalty value selected was the one that resulted in the maximum average tm-score of the final alignment for all pairs of proteins in the training dataset.

alignment quality assessment
there are various metrics used in the literature to objectively assess structural alignment quality  <cit> . however, most involve normalization of the rmsd by the number of aligned residues and protein length. hence, the metric is not completely independent of the lengths of proteins being aligned. here, we have used a geometric match metric, the tm-score, for the objective assessment of the structural alignment quality from various structural alignment programs. this metric provides a balance between coverage and alignment accuracy . the tm-score is defined as:

  tm−score=max 

here, ltarget is the length of the target protein that other pdb structures are aligned to; lali is the number of aligned residues; di is the distance between the ith pair of aligned residues and d0= <dig> ltarget−153− <dig> , which is the average distance between a pair of residues for the best structural alignment in a randomly selected pair of structures of length ltarget.

in addition, we have used other scores for the objective structural alignment quality assessment and for the comparison of structural alignment algorithms. the percentage of structural similarity  is defined as the number of aligned amino acid pairs with cα atoms that are closer in space then  <dig> Å after optimal superposition normalized by the length of the shorter chain in the alignment. the relevant psi  value does not include fragments shorter than four aligned amino acid from the calculated psi value. the coordinate rmsd  is computed for all aligned pairs after optimal superposition. the crmsd  is computed for those aligned pairs that contribute to the psi value  <cit> . here, psi/rpsi provides a more detailed view of the alignment. however, these values are length dependent.

RESULTS
in the literature, various structural alignment methods have been evaluated in different ways  <cit> . most evaluations use scop  <cit>  or cath  <cit>  as the gold standard and assess the structural alignment based on the fold classifications found in these databases  <cit> . because the scop and cath classifications are discrete, a drawback in this kind of evaluation is that the detailed alignment quality is not taken into account. moreover, evolutionary information is also used in the scop or cath classification apart from the structure of the protein under consideration. recent studies  <cit>  have shown that significant structural similarity exists between proteins belonging to different fold families in the cath and scop classifications. here, we have compared different structural alignments pairs of structures purely by their geometric match.

comparison of alignment quality
in the present analysis, we have evaluated the performance of the structural alignments algorithms ce, tm-align and fr-tm-align on two different datasets . we have compared the alignment quality of fr-tm-align with other structural alignment algorithms using crmsd, tm-score, psi and rpsi. these measures of alignment accuracy capture various features of the alignment. for example, psi counts spatially close residues, whereas rpsi represents core continuous fragments that are spatially close. the tm-score represents a quality measure that combines both alignment coverage and accuracy.

a results are averaged over all structure pairs. crmsd, cr, l, cov, tm, psi and rpsi denotes coordinate rmsd , crmsd  for all aligned pairs that contribute to psi, number of aligned residues, coverage of aligned residues, tm-score, percentage structural similarity and relevant percentage structural similarity . the number in parenthesis is the standard deviation.

in table  <dig>  columns 2– <dig> show the alignment accuracy as measured by various scores and columns 7– <dig> show the number of aligned residues and coverage averaged over  <dig>  protein pairs. based on crmsd, the structural alignments from fr-tm-align have on average better accuracy in comparison to both ce and tm-align for both datasets. similarly, crmsd  is also better on average for both tm-align and fr-tm-align in comparison to ce. however, crmsd  shows no difference between fr-tm-align and tm-align. based on another alignment accuracy score psi or rpsi, fr-tm-align performs better in comparison to both ce and tm-align for both the datasets. all three programs show a significant decreased value in the value of rpsi in comparison to psi. this shows that all three programs achieve high psi value by finding aligned fragments of length less than four residues in length.

based on another structural alignment accuracy measure , fr-tm-align resulted in structural alignments with higher tm-score in comparison to both tm-align and ce. the higher tm-score could result from better identifying structurally similar regions with/without including more residues in the aligned region or by decreasing the number of aligned residues. as shown in table  <dig>  the average coverage and average number of aligned residues is higher for fr-tm-align in comparison to tm-align and ce for both datasets. hence, the improvement observed in tm-score by fr-tm-align mainly results from the better identification of structurally similar regions in the pair of structures. this is also evident by the observed higher psi/rpsi value for the alignments from fr-tm-align. this suggests that fr-tm-align better identifies structurally similar regions with increased accuracy and higher coverage. next, we tested the statistical significance of the observed increase in the mean tm-score, psi and rpsi for fr-tm-align in comparison to tm-align and ce, using the unpaired t-test for the independent samples. the improvement in the mean tm-score, psi and rpsi for fr-tm-align is found to be statistically significant .

while the data in table  <dig> are averaged over all structure pairs, where the majority have different folds and low tm-score, a more realistic assessment is to evaluate the performance of different methods for the most significant match to a given target protein. various methods employ different metrics of structural similarity: ce uses the ce z-score, whereas tm-align and fr-tm-align use the tm-score. in the present analysis, we used both measures of structural similarity, the ce z-score and tm-score, to extract the most significant structurally similar protein pairs for the evaluation of the three methods.

in table  <dig>  for datasets  <dig> and  <dig>  we analyzed protein pairs identified as being the most structurally similar as assessed by their ce z-score. for each protein in datasets  <dig> and  <dig>  the protein pair with the highest ce z-score was selected from the ce alignments, and the structural alignment was generated by ce, tm-align and fr-tm-align. it is evident from table  <dig> that structural alignments from fr-tm-align have better alignment accuracy than those from both ce and tm-align, when structural similarity is assessed by crmsd. moreover, on average, the fr-tm-align generated alignments have higher coverage. thus, using the tm-score as the metric for structural similarity, fr-tm-align is able to better identify structurally similar regions in comparison to both ce and tm-align. this conclusion also holds when other measures of alignment quality  are used.

a for each protein, we selected the protein pair with the highest z-score using the ce program. we used the same set of protein pairs selected from ce for comparison with the other programs. crmsdz, crz, lz, covz, tmz, psiz and rpsiz denotes coordinate rmsd , crmsd  for all aligned pairs that contribute to psi, number of aligned residues, coverage of aligned residues, tm-score, percentage structural similarity and relevant percentage structural similarity . the number in parenthesis is the standard deviation.

next, we used the tm-score to select the most structurally similar protein pairs. that is, for each protein in both datasets, we selected the template protein with the highest tm-score obtained by fr-tm-align. then, structural alignments between the selected pair of proteins are also generated by ce and tm-align, and the averages reported in table  <dig>  as is evident, structural alignments from fr-tm-align have comparable or better accuracy in comparison to ce and tm-align when assessed by their crmsd. indeed, fr-tm-align gives comparable or higher structural alignment accuracy as assessed by crmsd, crmsd , psi and rpsi in comparison to both ce and tm-align.

a for each protein, we selected the protein pair with the highest tm-score using the fr-tm-align program. we used the same set of protein pairs selected from fr-tm-align for comparison with the other programs. crmsdm, crm, lm, covm, tmm, psim and rpsim denotes coordinate rmsd , crmsd  for all aligned pairs that contribute to psi, number of aligned residues, coverage of aligned residues, tm-score, percentage structural similarity and relevant percentage structural similarity . the number in parenthesis is the standard deviation.

for a more detailed analysis, we have mostly used the tm-score to compare the alignments from tm-align and fr-tm-align. as discussed before, the tm-score provides an appropriate combined quality measure of coverage and accuracy . in addition, we have previously shown that the tm-score also has the strongest correlation with foldability using modeller  <cit> , in comparison with other structural similarity scores  <cit> .

comparison of tm-align and fr-tm-align
as shown in table  <dig>  on average, for both the training and testing datasets, fr-tm-align resulted in alignments with higher tm-score  and higher average number of aligned residues  in comparison to tm-align. here, we explore in detail the distribution of differences in tm-score between fr-tm-align and tm-align. for a pair of protein structures, if fr-tm-align results in a higher tm-score, when the second protein is used as target length, usually, it usually also results in a higher tm-score when the first protein is used for target length. hence, in order to avoid double counting, we have considered only  <dig>  pairs of structures with tm-score calculated with respect to the length of the smaller of the two proteins. figures 1a and 1b shows the difference in tm-score between fr-tm-align and tm-align plotted against the tm-score from tm-align for dataset  <dig> and dataset  <dig>  respectively. as is evident from figure  <dig>  fr-tm-align results in a better tm-score for most  pairs of structures. however, in a few cases , fr-tm-align could not recover the structural alignment as given by tm-align.

next, we compare the number of aligned residues. as shown in figure  <dig>  for most  protein pairs, fr-tm-align results in a higher number of aligned residues. hence, fr-tm-align results in a higher tm-score with increased coverage. in addition to tm-score, we have also used psi to compare alignment quality between tm-align and fr-tm-align. figures 3a and 3b show the frequency distribution of psi  for the training and testing datasets respectively. fr-tm-align identifies alignments with higher psi in comparison to tm-align. in fact, fr-tm-align assigns a psi > 40% in ~27% of alignments, whereas tm-align is only able to assign a psi > 40% in ~17% of the protein pairs.

next, we have analyzed the relative improvement in the tm-score by fr-tm-align. the tm-score difference  is defined as  – tm-score ). the exact value of dtm which shows a significant change in the alignment quality is difficult to quantify. in fact, the numerical value of the tm-score has a contribution from the mean square distance between residues as well as from the number of aligned residues. the origin of a given dtm value depends on the tm-score as well. for example, an increase of  <dig>   in the tm-score from the initial value of  <dig>  most likely arises because alignments with lower rmsd at identical coverage are generated. whereas given an initial tm-score of  <dig> , the increase to  <dig>  most likely reflects both a decrease in rmsd and an increase in alignment coverage. since most tm-scores of interest , are below  <dig> , we have empirically considered a dtm ≥  <dig>  as a significant improvement and a dtm between  <dig> and  <dig>  as not so significant only for the heuristic comparison of performance of tm-align with fr-tm-align.

we present the results below only for dataset  <dig>  using this criterion , fr-tm-align shows improvements in tm-score for ~28% of protein pairs being compared. of the  <dig>  pairs, ~56% of protein pairs have a dtm between  <dig>  and  <dig> , and for ~8%, the tm-score remains unchanged. we have also assessed the correlation between dtm and the tm-score from tm-align, to see if fr-tm-align results in improved tm-scores for only a range of tm-score as reported from tm-align. dtm is divided into  <dig> bins . for a bin size of  <dig>  of tm-score as reported from tm-align, we calculated the fraction of proteins in the above mentioned dtm bins. figure  <dig> shows the fraction of proteins in each dtm bin for the range of tm-scores. it is evident that fr-tm-align clearly improves the tm-score over all the ranges of tm-score as reported from tm-align. it is interesting to note that significant improvement  is observed for more protein pairs in the lower ranges of tm-score. it was previously reported that using tm-align, the average tm-score for a randomly related protein structures is  <dig>   <cit> . in our study, of the 40% of protein pairs in the range of tm-score , ~35% of pairs of protein pairs show an improvement of more than  <dig>  in tm-score by fr-tm-align. this suggests that many pairs, which previously were defined as randomly related by tm-align, now have a significant tm-score. next, we evaluated the dependence of dtm on the length of the proteins being aligned. figure  <dig> shows the histogram of the fraction of proteins in various dtm bins versus the length of the smaller of the two proteins. it is evident from figure  <dig> that improvement in tm-score by fr-tm-align is not strongly dependent on the lengths of the structurally aligned proteins.

in figures 6a and 6b, we show illustrative examples of the improvement in structure alignments when fr-tm-align is used. figure 6a shows the structural alignment between 1a1m_b and 2gzq_a, which have a common β-sheet core. fr-tm-align is able to align the common β-sheet; in addition, it is able to extend the alignment to include another two β-stands relative to the alignment obtained from tm-align. figure 6b shows the alignment between 1aol and 1akp, which have β-strand regions in common. in comparison to the structural alignment from tm-align, fr-tm-align extends the region of structural similarity in the common region of β-strands, which results in a better tm-score value.

on average, fr-tm-align takes ~ <dig>  seconds of cpu time per structure pair on a single core of a  <dig> ghz amd opteron processor. this is ~ <dig> times slower than tm-align. the speed of the program might limit its application for performing structural alignments on a very large scale, but with the increase in the number of cores/processor, this is not likely to be a practical impediment. to increase the speed of fr-tm-align, we have implemented a slightly fast version of the algorithm, which essentially scans a smaller number of initial seed alignments with the heuristic iteration . this is provided as an option before the execution of the program. on average, for all structure pairs compared, fr-tm-align with the fast option takes ~ <dig>  seconds with a final average  in the tm-score of  <dig>  . this is comparable to the average  tm-score,  <dig>  , obtained using the slower and more sensitive version of fr-tm-align. the faster version of the algorithm results in a tm-score improvement of ~ <dig> % in comparison to tm-align and is ~ <dig> times slower. this could potentially be used for large scale scanning to detect remote structural similarities. the slower version provides slightly better structural alignments for some structure pairs. the source code and executables of fr-tm-align are available at: .

CONCLUSIONS
we have developed an improved structural alignment algorithm fr-tm-align that uses a fragment alignment and assembly approach to generate initial seed alignments which when refined generates more significant structural alignments than those provided by the original tm-align program. we have compared fr-tm-align with other competing structural alignment algorithms, tm-align and ce, using various alignment quality assessment scores such as psi and the tm-score. the evaluation shows that fr-tm-align performs better in comparison to both tm-align and ce. in comparison to tm-align, on an average, fr-tm-align results in an improved tm-score  and increased coverage  in comparison to tm-align. a more detailed comparison between fr-tm-align and tm-align shows that alignments from fr-tm-align have an improved tm-score for ~86% of protein pairs. the improvement in tm-score by fr-tm-align is observed for all lengths of protein pairs and over all tm-score  ranges. however, fr-tm-align achieves this higher accuracy and coverage at the expense of longer computation time. on an average, fr-tm-align is ~ <dig> times slower than tm-align. nevertheless, the ability of fr-tm-align to detect more subtle structural similarities is a more desirable attribute. for a more practical application of fr-tm-align, we have modified the algorithm that has reduced the computation time by ~ <dig>  times with a decrease in final tm-score only by ~1% relative to the slower version of the algorithm.

authors' contributions
sbp participated in the design of the study and implemented the algorithm. js conceived of the study, participated in its design and coordination and helped to draft the manuscript. all authors read and approved the final manuscript.

