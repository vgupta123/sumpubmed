BACKGROUND
gene expression levels in biological systems can be influenced by different stimuli, e.g. pharmacological or medical treatments. the response is a dynamic process, usually different for different genes. one of the goals of modern molecular biology is the high-throughput identification of genes associated with a particular treatment or a biological process of interest. the recently developed microarray technology allows one to simultaneously monitor the expression levels of thousands of genes, thus providing a "molecular picture" of a biological system under study and a potential of describing evolution of gene expressions in time. however, this potential has not yet been fully exploited since there is still a shortage of statistical methods which take into account the temporal relationship between the samples in microarray analysis. in fact, most of the existing software packages essentially apply techniques designed for static data to time-course microarray data. for example, the sam software package  was recently adapted to handle time course data by regarding the different time points as different groups. the anova approach by  <cit>  was applied to time course experiments by treating the time variable as a particular experimental factor. papers by  <cit>  and the limma package by  <cit>  have similar approaches.

all these methods can still be very useful when very short time course experiments have to be analyzed , however the shortcoming of these approaches is that they ignore the biological temporal structure of the data producing results that are invariant under permutation of the time points. on the other hand, most classical time series or signal processing algorithms have rigid requirements on the data  which microarray experiments rarely meet. the past few years saw new developments in the area of analysis of time-course microarray data .

in what follows, we present bats , a user-friendly software package which implements a novel, truly functional and fully bayesian approach of  <cit> , specifically designed for the analysis of 'one sample' time series microarray data. similarly to the other functional approaches to time course data , the proposed method is particularly suitable for time course experiments where at least 5– <dig> time points are available. presence of replicated measurements is recommended, but not required.

the software allows an user not only to automatically identify and rank differentially expressed genes, but also to estimate their expression profiles. the latter feature allows an user, for each differentially expressed gene, to visualize its response to the treatment in the course of time as a single smooth curve and, hence, to reveal important biological features that can be hidden in the raw data. the estimates of gene expression profiles are, in fact, more robust than the classical straight-line connecting of the raw data and allow to compare responses of genes to treatment at any arbitrary time point. the truly functional approach of bats successfully manages various technical difficulties such as non-uniform sampling intervals and replicated or missing data.

methodology
the present version of bats is designed for the analysis of 'one sample' time series microarray data. the name 'one sample' refers to all microarray data where the problem can be formulated in terms of analysis of a single time series. such kind of data can be obtained, for example, by direct hybridization of the samples corresponding to two biological conditions  and measuring relative expression values on a time grid. thus, in a 'one sample' problem the data consists of the records, for n genes, of the differences in gene expression levels between the sample of interest and a reference  in the course of time. each record is modeled as a noisy measurement of a function si at a time point t ∈  which represents the differential gene expression profile:

  zij,k=si)+ζij,k,i= <dig> ...,n,j= <dig> ...,n,k= <dig> ...,ki. 

here the number n of time points is relatively small, with very few replications available at each time point  =  <dig> ...,k), while the number n of genes is very large, and a total of mi=∑j=1nki observations are available for each gene. the objective is to identify the genes showing different functional expression between treated and control  ≠ 0), and then to evaluate the effect of the treatment ).

for each gene i, we expand its expression profile si into series over some standard orthonormal basis on  with coefficients ci, l =  <dig> ...,li:

  si=∑l=0liciϕl. 

legendre polynomials and fourier basis suitably rescaled and normalized in  are supported in the current version of bats.

following  <cit> , genes are treated as conditionally independent and their expressions are modeled as zi = dici + ζi. here, di is the block design matrix, the j-row of which is the block vector  replicated ki times; zi=,⋯,zin, <dig> …zin,ki)t, ci=,…,ci)t and ζi=ζi <dig> ,…,ζi <dig> ki,⋯,ζin, <dig> …,ζin,ki)t are, respectively, the column vectors of all measurements for gene i, the coefficients of si in the chosen basis and random errors. the following hierarchical model is imposed on the data:

 zi|li,ci,σ2lici|li,σ2~n~truncated poisson ~π0δ+n 

all parameters in the model are treated either as random variables or as nuisance parameters, recovered from the data. noise variance σ2is assumed to be random, σ <dig> ~ ρ in order to account for possibly non-gaussian errors, quite common in microarray experiments. currently, bats supports three types of priors:

model 1: ρ = δ, the point mass at σ <dig>  the marginal distribution of the error is normal.

model 2: ρ = ig, the inverse gamma distribution. the marginal distribution of the error is student t.

model 3: ρ = cμσmi−1e−σ2μ/ <dig>  the marginal distribution of the error is double exponential.

an automatic detection of differentially expressed genes is carried out on the basis of bayes factors , which are used for taking into account multiplicity of errors. this technique is based on the novel methodology of  <cit>  which is similar in spirit to the procedure of  <cit>  for controlling the false discovery rate .

once the differentially expressed genes have been detected, the coefficients ci and, subsequently, the curves si are estimated by the posterior means.

the algorithm is self-contained. the hyperparameters π <dig> and σ <dig>   are estimated from the data , or they can be entered as known by an user. gene specific parameters τi <dig> are estimated by maximizing the marginal likelihoods, while li are estimated by the posterior mean or mode. explicit formulae and other details can be found in  <cit> .

a great advantage of the bayesian model described above is that all evaluations are carried out in analytic form , with very efficient computations.

remark  <dig> bats implements a truly functional bayesian approach. hence, by construction, it is designed for those time-course experiments where at least 5– <dig> time points are available, although in order to fully exploit the advantage of the functional approach a somewhat larger number of time points and of arrays is recommended. a sharp limit is hard to elicit, since the decision depends also on whether the replicates are available, on the type of the grid design and on the biological assumptions on the process under investigation. in principle, bats can also be used with fewer than  <dig> time points, but in that case no particular gain is guaranteed with respect to a classical regression based approach. however, we point out that similar requirements are typical to the other functional data approaches.

algorithm
the algorithm is performed by carrying out the following steps:

 <dig>  choose the prior parameters λ, lmax and ν, fix the type of the orthonormal basis that will be used in the analysis.

 <dig>  estimate global parameters: σ <dig> and π <dig>  and additional case-specific hyper-parameters σ <dig> , γ and b  or μ . several options are provided to an user, including the possibility of custom definition of parameters.

 <dig>  for each gene i, estimate the gene specific parameter τi <dig> by maximizing the marginal pdf of the data.

 <dig>  for each gene i, estimate the degree of polynomial li by the posterior mean or the posterior mode.

 <dig>  for each gene i, conditionally on l^i, compute bayes factor bfi.

 <dig>  perform the bayesian multiple testing procedure of  <cit>  to rank the genes according to the ordered bayes factors. the user can choose to automatically determine a cut-off of significance according to different priors or to simply order the genes.

 <dig>  estimate the gene expression profiles by s^i substituting the posterior mean estimator of ci in .

remark 2
since all evaluations in bats are carried out in analytic form, the computational cost remains very moderate. the n gene-per-gene one-dimensional maximization in step  <dig> represents the most computationally demanding part of the algorithm. the results of the analysis up to  <dig>  probes and  <dig> arrays is usually returned in  <dig> minutes using the compiled windows version on a pentium iv pc computer with  <dig>  ghz and  <dig> gb of ram, the exact time depending on the total number of probes and the distributions of missing data.

in principle all the probes available on the arrays can be analyzed. however, from a practical point of view, probes containing too many missing values should be removed from the analysis since they may not carry reliable information. similarly, control probes or probes which are not expressed can be removed if information which they carry is not considered significant or of biological interest.

implementation
bats is a graphical user-friendly software written in matlab. executable program for windows, linux and mac osx, the source code and the user manual can be freely downloaded from .

permission to use, copy, modify, and distribute bats for any purpose without fee is granted by the bats permissive license . the compiled software needs to run the matlab component runtime , also available on the website for the sole purpose of running bats.

current implementation of bats is designed for a single processor, and it is fast enough for any practical purpose. version  <dig>  of bats is composed of two main applications: analysis and simulations; it is equipped with a third option, utility, which provides additional functions. each application can be activated from the main window .

a context-specific help button is present in all windows, providing all necessary information as well as a short description of all the parameters required by a procedure. the about button reports the terms of the license. a more detailed description can be found in the user reference manual. the guided tutorial available on the website can be used for a fast introduction to the software. in what follows, we briefly describe each application.

analysis
the analysis application allows to apply the methodology developed in  <cit>  to either synthetic or real data-sets. the menu of analysis application is divided into sub-windows  which allow an user to define the parameters of the analysis. obviously, analysis constitutes the most important part of bats from biologists' point of view.

data can be loaded into the system and analyzed on the basis of any of the three error models described in section "methodology" and denoted in the software as model  <dig>  model  <dig> and model  <dig>  respectively. the input data should be in the excel spreadsheet or a tab-delimited text file format prepared as follows. the first row should contain a text string  in the first column, and, in the remaining columns, the numerical values of the time measurements t in ascending order and represented in the same time units . from the second row on, the first column should contain the gene identifier, a unique string of letters or a combination of letters and numbers . the remaining columns should contain data, zi=,⋯,zin, <dig> …zin,k)), in the form of log2-signal-to-reference ratios. missing values can be entered as either empty cells or nan. before analyzing microarray data with bats, the data should be pre-processed to remove systematic sources of variation. for a detailed discussion of the normalization procedures for microarray data we refer the reader to e.g.,  <cit>  or  <cit> . we recall  that bats is particularly suitable for those experiments where at least 5– <dig> different time points are available. moreover, although bats automatically accounts for missing data, for a reliable analysis we suggest that the proportion of missing data should remain relatively small . note, if the data set to be analyzed does not meet these general requirements, a warning message will be displayed. from the analysis window, an expert user can choose prior parameters . we briefly discuss these choices below. a detailed description can be found in the user-manual.

the type of basis functions can be either legendre or fourier, with default choice legendre. the global regularity ν of the gene expression profiles is a real number in  <cit> , . the maximum degree lmax allowed in the expansion is an integer value, default value  as a compromise between the goodness of fit and variance of the estimate. the parameter λ of the poisson distribution truncated at lmax has to be chosen in order to match the prior expected degree of the polynomial.

choosing appropriate parameters for the analysis of a particular data-set with bats usually requires some preliminary knowledge of statistics and some level of expertise. however, a user who is not an expert in statistics should not be discouraged, since for all parameters bats provides default values that can be used in most cases, and the parameters' sub-windows are hidden by default. if necessary, hidden windows can be opened in order to change the default values.

after that, the user can either select a specific method for estimating global parameters π <dig> and σ <dig>  or enter their values manually by choosing the custom option . in the current version of bats, estimation of the global parameters is based only on the nc genes for which the complete set of m observations is available. if the default option standard remains selected, for each array of observations at a time point t, σ is estimated by the sample standard deviation σ^. on the other hand, if normal distribution of the data can be justified, by selecting the corresponding option mad, the sample variance can be replaced by a more robust estimator like the median absolute deviation, which is usually proposed when the majority of array components are zeros  <cit> . in both cases, the estimator σ^ <dig> is obtained by averaging of ) <dig>  j =  <dig> ..,m.

given σ^, with the option universal, following  <cit> , the global parameter π <dig> is estimated by averaging over the arrays the proportion of data points which fall below the universal threshold σ^2log⁡nc. note that this method tends to overestimate π <dig> when the error is normally distributed, but not when the error distribution has heavier tails, which is very common in microarray data.

once one of the three error models has been selected in the box choice of the prior model, the model-dependent parameters are estimated automatically for models  <dig> or  <dig>  if model  <dig> is selected, the user can further choose the way for estimating the hyperparameters b and γ. specifically, with choice  <dig>  γ and b are estimated by using the maximum likelihood estimator  on the set of values σ^, j =  <dig> ...,m, which are treated as a sample from the distribution of σ ) <dig> ~ ig, then )- <dig> ~ gamma). if the user selects alternative option choice  <dig>  he/she has to fix γ and then parameter b will be automatically evaluated by matching the mean of ig with σ^ <dig>  we observe that with selection of choice  <dig> an user does not have to specify any parameters. with choice  <dig>  an user have to specify the positive parameter γ . the two options produce slightly different lists of genes and allow to check the robustness of the selections.

an user can also choose whether to estimate the degree of the polynomial li by the posterior mean  or the posterior mode   from the box estimation of the polynomial degree, and what procedure to use for testing which of the genes are differentially expressed  from the box test procedure. in the latter, the default option binomial refers to the binomial prior elicited on the number of alternative hypotheses, option truncated poisson  is based on the truncated poisson prior. options standard odds, standard bf do not implement any multiplicity control and option full rank only ranks the genes without providing any automatic cut off.

an user has an option to print out the estimated profiles  for the top 'nfirst' genes according to ranking, either in 'global scale'  or in 'auto scale' . we note that visual inspection of the profiles can be very useful for a quick assessment of the fit.

alternatively, expression profiles of individual genes can be generated later using the utility – plot profiles.

once the necessary parameters have been defined, an user has to choose a project name and launch the analysis. by default, for each run of the analysis, three files are generated in the folder projects: a summary of the analysis _sr.txt , the ordered list of differentially expressed genes _gl.xls for windows systems or _gl.txt for linux or mac osx, and the estimated gene profiles _sh.xls for windows systems or _sh.txt for linux or mac osx. the dialog window shows intermediate results and stages of the algorithm during the execution of the analysis.

simulations
the simulations application enables an expert user to generate, analyze and save synthetic data. this feature can be useful for planning experimental design , for preliminary verification whether bats is a suitable tool for a given type of experiments, or for generating synthetic data which can be used for comparison of other statistical tools. this application can also be used to enhance understanding of some features of the proposed software. simulations are indeed a typical tool for validation and comparisons of statistical procedures. they are also widely used in microarray analysis, see, for example,  <cit>  and  <cit> . running an appropriate simulation study requires some basic knowledge of statistics and some experience in computing.

the simulations application consists of two windows. in the first window  an user provides parameters required to generate synthetic data. in the second window the user can choose how to analyze the generated data set .

synthetic data-sets can be generated and saved for later use in the original form, or after removing some data. for example, an user may decide to generate data using a very fine time grid and after that to analyze them using only a sub-set of the synthetic arrays or by randomly replacing some synthetic values with missing numbers. the simulated data are recorded in the bats-input format with an extra sheet or an additional file  containing the flags which are set to one for the genes which are differentially expressed and to zero for those which are not. synthetic data-sets can also be used to compare performance of bats with other available methods as it is done in  <cit> .

in the process of generating data-sets, an user has to choose the following parameters: the total number of genes n, the number of differentially expressed genes de, the time grid t, j =  <dig> ...,n, and the maximum number of replications k at each time point t . for each significant curve, the algorithm first samples the degree of the polynomial litrue from a discrete uniform distribution in . polynomials of degree zero are avoided since a nonzero constant signal is questionable from a biological point of view. after that, for each gene i, a vector of coefficients ci is randomly sampled from the multivariate normal distribution n where the experimental variance σ <dig> is chosen by the user . matrix qi is set to be qi = diag  where νi ~ u. an user can also choose the range from where the gene specific variance τi <dig> is randomly sampled. for this purpose, from the box signal to noise ratio range the user can choose parameters a and b such that τi <dig> is sampled uniformly in order to produce the signal-to-noise ratio  in .

synthetic data-sets are generated according to the model  by adding i.i.d noise to the simulated profiles. two types of noise distributions are supported in the current version of bats: normal n and student t with at least  <dig> degrees of freedom. in order to make results of several simulation comparable, student noise is scaled to have the same variance σ <dig> as in the normal case. in addition, setting a threshold t in the box threshold for unrealistic values forces simulated values larger than t to be filtered out and replaced with "missing values", mimicking pre-processing of real data where unrealistic values are eliminated.

the simulation scheme is similar to the one proposed in  <cit> . if the parameters of the simulated data are chosen correctly, the synthetic profiles should resemble the true raw data. synthetic profiles can be displayed using the utility plot profiles and visually inspected in order to assess their biological resemblance. in figure  <dig> a synthetic profile is shown. the profile was generated choosing the time observations on the grid  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> hours with two replicates for each time point and three replicates at t =  <dig>   <dig>  16); the values of the other parameters were n =  <dig>  d =  <dig>  lmax =  <dig>  λ =  <dig>  ν =  <dig>  σ =  <dig> , snr =  <cit> , the noise affecting the data was t. it should be noticed that synthetic data can only provide basic suggestions about the performance of bats since real data often has complex structure which is very hard to model precisely in mathematical terms.

using the same simulation set-up, several data-sets can be created with several randomly generated sets of profiles si and several different noise realizations. each synthetic data-set can be analyzed assuming any of model  <dig>   <dig> or  <dig> 

performance of the technique is automatically evaluated using the false discovery rate , false negative rate , the numbers of correctly detected, not detected or misclassified genes and some other standard measures . the results are automatically averaged in order to provide statistically relevant information which is not dependent on a particular random realization. an output .txt file contains the results of the analysis, while the dialog window shows intermediate messages during computations.

utilities
the utilities menu  provides a set of procedures filter data, data box plots, compare results and plot profiles that help an user to process and visualize input or output files. other utility functions will be added to future versions of bats.

the procedure filter data can be used to remove genes with a number of missing measurements larger than a desired threshold before starting the analysis . a new bats input data file will be created containing the filtered data.

similarly, the utility data box plots can be used to compactly represent data for inspection before starting the analysis . for each array the boxplot shows the median of all values , the range which covers 50% of values , the range which covers 75% of values  and all the remaining individual values . normalized array values should all have the same median and also approximately the same range of values. additional information about the experiment such as the total number of missing values, the number of missing values per gene and per array are displayed in the dialog box.

after a series of analyses have been performed on the same data-set using different parameters or models, the utility compare results allows an user to easily compare the results stored in _gl.xls  files and, hence, investigate the robustness of the lists of the differentially expressed genes. two files are created by this option: a _common.xls  file containing the intersection of all the selected lists and reporting for each gene the rank obtained in each analysis, and a _union.xls  file containing all the genes present in at least one of the lists.

finally, the function plot profiles provides an alternative way to visualize the data and the selected gene expression profiles. for this purpose, an user can choose whether to plot the raw data or the expression profiles for differentially expressed genes, or both. the input data-set needs to be loaded from the sub-window select a raw data file name together with the name of the file  which contains estimated expression profiles resulted from the previous analysis, if the profiles of the differentially expressed genes need to be plotted. then, the list of all genes in the files is shown, and the user can select the genes of interest. additionally, the user can choose some plotting options such as the color of the line or the type of the marker. the corresponding individual profiles are displayed sequentially, and the plots can be saved as image files.

RESULTS
the statistical method implemented in bats has been validated using both real and simulated data in  <cit>  and  <cit> . the performance of bats has also been compared with two recent competitive methods:  <cit>  and  <cit> . the first method is implemented by the edge software  <cit>  while the second by the r-package timecourse .

in the following, in order to illustrate the benefits of using bats, first, we summarize the results of its application to the real data set contained in the examples folder in bats and used in the tutorial for a guided analysis, then we compare the findings with the ones obtained using edge and timecourse on the same data-set.

we note that since all three methods apply to different experimental designs, account for different biological information and are valid under different assumptions, we felt that it would be more fair to compare our method with the others using a real data set that does not conform to the assumptions in the present paper.

the data-set refers to the experiment described in  <cit> . in the experiment, human breast cancer cell line zr- <dig>  cultures were stimulated with 5·10-8m 17β-estradiol  after being maintained for  <dig> days in steroid-free medium. rna samples were extracted before the stimulation and after  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> hours of stimulation. the cdna microarray analysis was carried out with human unigem v  <dig>  glass arrays . for each time point at least two replicates were available .

complete data can be downloaded from the ncbi public gene expression data repository gene expression omnibus . in this context the results of  <cit>  provides a "biology-guided" selection of significant genes that can be used as a "benchmark" in our comparisons. for a more detailed comparisons including simulated data the reader is referred to  <cit>  and  <cit> .

the data file 'cicatiello_et_at.xls' contains the relative expression values zij,k measured as the log <dig> treated to control fluorescence intensity ratio. data contained in the provided file have been already pre-processed, normalized and presented in the bats input format.

the data set has been analyzed using models  <dig>   <dig> and  <dig> and various combinations of parameters. different outputs were then compared in order to seek for genes common to all options of the analysis and for those which are selected only under a particular combination of parameters. after each analysis, the list of genes detected as differentially expressed was saved in a project_name_gl.xls file. after several runs of the analysis, the _gl.xls files were compared using the function compare results in the utility menu. in what follows, we report the results of the analysis with models  <dig>   <dig> and  <dig> and various choices of λ. table  <dig> displays the number of genes declared affected by the treatment for lmax =  <dig>  ν =  <dig> and λ ranging between  <dig> and  <dig> . it is easy to see that the results are quite robust with respect to the number of detected genes, with smaller λ providing larger lists. using the function compare results we discovered that the technique is also robust with respect to the list of genes declared differentially expressed:  <dig> genes were common to all  <dig> lists  while  <dig> genes have been selected in at least one of the  <dig> lists. a more detailed discussion of the results of the analysis is provided in  <cit> . the plot profile function allows an user to visualize both raw data and estimated profiles. figures  <dig> and  <dig> show an example of a gene expression profile selected as differentially expressed by both bats and  <cit>  and an example of a gene selected by bats but not in  <cit> , respectively.

next, for comparative purposes, we applied edge and timecourse to the same data-set. to be fair, we should mention that functional statistical approach implemented in edge was originally designed for the "two-sample" problem following the paper of  <cit>  and afterwards equipped with a special tool to handle the "one-sample" problem. the approach of  <cit>  applies both to the "one-sample" and the "two-sample" problems for classical longitudinal data where replicates are biologically meaningful, however, it is not a functional data approach. in  <cit>  the authors proposed a new functional data approach, but their software is not yet available to the community.

since the edge software does not automatically account for missing values but only suggests a preliminary procedure  for filling them in, we repeated the analysis both using this procedure and filtering out genes with missing values. additionally, edge allows an user to choose the degree of the splines or the polynomials common to all genes. we carried out the analysis with different choices for the maximal degree of the polynomials and found out that the results were robust with respect to those choices . to estimate the distribution of the statistics under the null hypothesis, edge uses a bootstrap approach, thus requiring a high computational effort and appropriate memory resources. we used  <dig> permutations in our comparisons and we discovered that the gene selections were robust with different random seeds . in order to control the multiplicity error, edge uses the q-values, which we chose to be q =  <dig>  and q =  <dig>  in our analysis. timecourse neither allows missing values nor suggests a specific procedure for treating them; moreover, it requires that each time point has the same number of replicates. thus, in order to apply the method, we filtered out all the genes with missing observations and discarded the third observations which was available at time points t =  <dig>   <dig>   <dig>  to be fair, we should mention that since timecourse is designed for data where replicates are biologically meaningful. since dataset  <cit>  contains only technical  replicates, in our study timecourse package could not take advantage of the replicate identification. on the other hand, the information about the time measurements is not used by timecourse method. since the method only provides rank-ordered list of genes , we performed the comparisons taking the top  <dig> and  <dig> genes in the resulting list.

CONCLUSIONS
this paper describes bats, a novel statistical user-friendly software specifically designed for time course microarray data. in particular, bats allows an user to analyze time series microarray experiments having possibly non-gaussian errors and as few as 5– <dig> time points per gene, although a modest increase in the number of available time points will produce a significant improvement of the findings. presence of replicated measurements is recommended, but not required. it is highly computationally efficient, since all calculations are based on analytic expressions. bats automatically manages irregular experimental design issues, such as non-uniform sampling intervals and missing or replicated data. the method accounts for multiplicity of errors, selects and ranks differentially expressed genes.

analysis of the human breast cancer data-set from  <cit>  is provided as a guided example and also for comparison of the results with other possible approaches. although originally designed for handling cdna microarray experiments, bats can be used to analyze data produced by using any microarray platform as showed in  <cit>  where the software is applied on a data-set generated with illumina beadchips.

version  <dig>  of bats is designed for the 'one sample' problem. the extension of the statistical model to the 'two sample' case is currently under development, its implementation will be added in future releases.

availability and requirements
the bats software, user manual and illustrated examples can be downloaded from the bats website.

 <dig>  project name: bats 

 <dig>  project home page: 

 <dig>  operating system: windows, linux, mac osx

 <dig>  programming language: matlab

 <dig>  other requirements:  <dig> mb ram,  <dig>  ghz pentium  <dig> cpu,  <dig> mb free disk space on hard drive, matlab component runtime .

 <dig>  license: bats permissive license 

authors' contributions
all authors participated in writing the code for the software package, developing the project website, the documentation, and writing the manuscript. all authors also read and approved the submitted manuscript.

