BACKGROUND
with exponentially increasing genomic sequences available in the public domain  <cit>  comparative genomics demonstrates its power to help biologists identify novel conserved and functional regions in genomes  <cit> . based on the comparison of cross-species genomic sequences, biologists can understand the evolutionary relationship of genomic regions among species, discover conserved regions between different genomes, such as yeast species genomes  <cit> , metazoan genomes  <cit> , vertebrate genomes  <cit> , and mammalian genomes  <cit> , discover regulatory motifs in the yeast  <cit>  and human promoters  <cit>  or identify potential conserved non-genic sequences   <cit> .

however, genomic sequences can be megabase long and thus the traditional sequence alignment tools based on dynamic programming would not work efficiently due to their time and space complexities. to better tackle this problem, several tools for genomic sequence alignment have been proposed, such as pairwise sequence aligners like mummer  <cit> , gs-aligner  <cit> , avid  <cit>  and lagan  <cit> , and multiple sequence alignment  programs like t-coffee <cit> , mafft  <cit> , multipipmaker  <cit> , multiz  <cit> , mlagan  <cit> , mavid  <cit> , and muscle  <cit> . these alignment tools, however, are heuristics based and do not provide any indication of how far they are from an optimal solution. the comparisons of alignment tools using a set of benchmarking sequences have also been conducted in recent years  <cit> . we found that the majority of these tools usually fail to generate consistent results especially in aligning divergent cross-species sequences. as a result, the more alignment tools there are available in the public domain, the more confusion it creates for users to decide which tool is most suitable to align their sequences.

although the comparison results in  <cit>  provide some evaluations of several popular alignment tools, the conclusions may not be directly applicable to users' sequences. furthermore the user usually does not know for sure whether those poorly aligned regions produced by the alignment tools are indeed non-homologous or just due to inappropriate tools or scoring systems used. consequently, if some homologous regions are unaligned, the estimated evolution distances of these sequences may be inaccurate and therefore the constructed phylogenetic trees may be incorrect. facing this problem, the user may have to try different tools or scoring systems to evaluate the correctness and accuracy of alignment results in the initial stage of sequence analysis. on the other hand, new alignment tools are released continually. users may want to compare these newly released tools with those that they are most familiar with. thus, it is desirable and most useful to have a visualization system that provides a direct and efficient method and can assist users to cross compare and inspect alignment results obtained by different msa tools especially at the initial stage of sequence analysis.

in recent years, a number of visualization tools have been released in the public domain. these tools can be roughly divided into two categories: integrated genome/sequence browser and individual alignment result visualization. in the former category, such as ucsc encode project  <cit> , ucsc human genome browser  <cit> , ensembl  <cit> , ecr browser  <cit> , users can view alignment results mapped onto the sequenced genomes. some of these browsers also provide registered users to submit alignment results and see the conservation regions between different genomes. in the latter category, the tools are developed to visualize individual alignment results. the vista-related tools are among the famous ones that have been developed for several years  <cit> . mvista is a set of programs for comparing dna sequences from two or more species up to megabases long and visualize these alignments with annotation information  <cit> . rvista  combines database searches for transcription factor binding sites with a comparative sequence analysis  <cit> . genomevista compares users' sequences with several whole genome assemblies  <cit> . phylo-vista analyzes alignments of multiple dna sequences from different species while considering their phylogenetic relationships  <cit> . in general, the vista family of tools provides users with a novel graphical user interface  to view alignment results from different viewpoints. in addition to the vista family, pipmaker  <cit> , and zpicture  <cit>  are also popular visualization tools for sequence or genomes alignment results. all of these tools are web-based with friendly user interfaces, and allow users to easily visualize alignment results with annotations. however, these tools are limited solely to single alignment results. the capability of simultaneously comparing multiple results from different alignment tools or different parameters of a scoring system, such as changing match rewards or mismatch penalties, is notably lacking.

in this article, we present a versatile alignment visualization system, sinicview , which enables users to efficiently compare and evaluate assorted alignment results obtained by different tools. sinicview for the present calculates similarity of the alignment outputs under a fixed window using the sum-of-pairs method and provides scoring profiles of each set of aligned sequences. other scoring matrices, such as emboss dna scoring matrix  <cit>  and yass  <cit> , are also provided in sinicview for users to select. besides, users can also upload their preferable scoring matrices to calculate the scoring profile curves. users can visually compare alignment results either in graphic scoring profiles or in plain text format of the aligned nucleotides. in addition, the information about alignment gaps and sequence annotations is also presented. the real-time juxtaposition of the visualization results from different msa programs would bring more insights into the evaluation process. with sinicview, users can use their own sequences to survey and compare various multiple alignment tools and thus to unveil their merits . moreover, the cross-tools comparison can provide users more confidence in their final alignment results especially for those poorly aligned regions.

implementation
there are three viewing sections in sinicview: global view, detailed view, and information view  the global view section shows the whole percent identity plots that calculate the sum-of-pair scores based on one specified reference sequence. in the detailed view section, the panels show the whole percent identity plots of different alignment results individually. by observing the graphical results, it is much more intuitive and straightforward to judge the consistency of the alignment results. when the sliding window is less than  <dig> base pairs, the detailed view section will automatically switch from the curve-based plot to the display of the detailed alignments in a colored text format where identical characters are shown. the information view section containing annotation and gap information is stacked beneath the detailed view section. sinicview also provides several global comparison charts that can assist biologists to choose the best alignment result among those produced by the programs under consideration. sinicview is implemented entirely in java language to ensure portability across major platforms and is accessible with a web browser and internet connection. the main features of sinicview are summarized as follows:

 <dig>  visualization of the scoring distribution of alignment results in a curve-based graphic format;

 <dig>  generation of the comparison charts using stacked-bar and pie charts, which shows the distribution of the identical rates among various alignment programs for benchmarking purposes;

 <dig>  inclusion of a versatile manipulative functionality ;

 <dig>  visualization of annotation information and display of the phylogenetic trees provided by users in which the drawing tree program uses the atvtree  <cit> ;

 <dig>  visualization of detailed text alignments results;

 <dig>  capability to export the visualization results to portable image files.

in what follows, we will introduce the characteristics and functionality of sinicview in more detail.

manipulative operations in sinicview
sinicview offers a series of manipulative and navigational controls, such as zooming, shifting, and gap/annotation toggling. as shown in figure  <dig>  sinicview displays the alignment results obtained by three different msa methods. the input sequences contain the orthologous regions around the stem cell leukemia  gene in five vertebrate species: human, mouse, chicken, pufferfish and zebrafish. the buttons and text-field boxes of manipulative functions are located on top of the frame. users can manually input numerical values or click on the highlighted colored region in the global view section that specifies the zooming or shifting factors in a drag-and-drop fashion. when the highlighted region is clicked and dragged, the equivalent of a shift action will be performed and the display region can be resized by adjusting the edge of the highlighted area.

sinicview can display more than one alignment result obtained by different alignment programs  the assorted mixed-color span under the global view panel shows among the alignment tools used the preferred aligner, which generates comparatively better results on the spot. each of the aligners is denoted by a pre-defined color with the "performance color" label right next to the name of the tool.

multi-panel functionality in sinicview
in the detailed view section, the percent identity plot  panels show, from top to bottom, the similarity curves of the alignment results obtained by different programs, along with the names of the alignment tools. in the information view section, the gap & annotation panels  display the information of annotations provided by users, and gaps of aligned sequences. the information and similarity ratios can also be displayed as the current scan-line  moves. the boxes in maroon denote the annotation area and the horizontal line represents the original sequences interleaved with inserted gaps  the gap display can be toggled on or off via the checkbox on the right.

because different alignment results are usually of different lengths, it is not plausible to compare these results base-pair by base-pair. in sinicview, therefore, we let users select one of input sequences as a reference and then calculate the sum-of-pair scores of each base pair in the reference within a fixed window. for example, each alignment result in the pip panels at the scan-line position corresponds to human sequence, selected as the reference in figure  <dig>  when the user selects different sequences as the reference, sinicview can demonstrate the variations between the pip curves of the alignment results.

visualization of sinicview: comparison chart and text-mode comparison
the functionality under the "tools" menu, called "comparison charts", offers two types of charts for quick-and-easy evaluation of the alignment quality. the stacked bar chart, in figure  <dig>  illustrates the distribution of the identical rates with the threshold over 40%. the pie chart, on the other hand, displays the distribution of the identical rates from  <dig> to  <dig> percent based upon a selected alignment program. the statistics on which these charts are based can also be displayed in a tabulated text form.

sinicview also provides a plain-text view of the alignment results in the detailed view section when the sliding window size is less than  <dig> aligned base pairs. as shown in figure  <dig>  the plain-text alignment results replace the percent identity curves and the fully identical bases in a column are labeled in red blocks. thus, users can check the correctness of detailed alignment results base pair by base pair.

installation and execution of the standalone sinicview
the applet version can be accessed via any jre -enabled browsers with internet connection, thus making the installation and choosing the right platform hassle-free. however, the ease of running sinicview on-the-go cannot accommodate the bandwidth requirement in case of huge amount of sequence data involved. hence, we have also implemented a standalone application of sinicview, which is wrapped in jre, for off-line use.

the execution procedure of the standalone sinicview is quite straightforward. upon launch, the user will be prompted three options. the first two are to read user's phylogenetic tree files, an option, and msa results from the local disk.

RESULTS
in what follows, we will introduce two examples to demonstrate how sinicview can assist users to analyze alignment results in the initial stage of sequence comparison. the total alignment lengths in both of the examples are few hundreds of thousands of base pairs and several millions of base pairs, respectively. the conservations of the aligned sequences are different in each example. more examples can be found in  <cit> .

example 1: scl  gene
the stem cell leukemia  gene plays a critical role in normal processes that, when disrupted, can result in leukemia. the scl gene, also known as tal- <dig>  encodes a basic helix-loop-helix transcription factor that is pivotal for the normal development of all hematopoietic lineages, and is highly conserved between mammals and zebrafish  <cit> . previous analyses of the scl genes in five vertebrate genomes, including human, mouse, chicken, pufferfish, and zebrafish, have revealed that the scl promoter/enhancer motifs are conserved in all five species  <cit> . the alignment and visualization tools used in their analyses included blast  <cit> , pipmaker  <cit> , and dialign  <cit> . shah et al.  realigned these gene regions in five species by a pairwise alignment tool, lagan  <cit> , and demonstrated the alignment result by phylo-vista  <cit> . in this paper, we also downloaded these sequences and realigned them by the multiple alignment tools: clustalw, mavid and mlagan. the lengths of the human, mouse, chicken, pufferfish, and zebrafish sequences are approximately  <dig> kb,  <dig> kb,  <dig> kb,  <dig> kb, and  <dig> kb, respectively.

example 2: the greater cftr region
the cystic fibrosis transmembrane conductance regulator  gene is responsible for the cystic fibrosis disorder that spans approximately  <dig> k bp of genomic dna and consists of  <dig> exons  <cit> . the greater cftr region is defined as a genomic segment of about  <dig>  m bp on human chromosome 7q <dig>  containing the cftr gene and nine other genes, including tes <dig>  cav <dig>  cav <dig>  met, capza <dig>  st <dig>  wnt <dig>  gasz, and cortbp <dig>  <cit> . the comparative analysis of this region in  <dig> vertebrate species has been reported in thomas et al.,  <dig>  <cit>  in which the alignment tool used was blastz on pipmaker web server  <cit> . in this paper, we downloaded the sequences of four mammalian species, including human, baboon, dog, and mouse, from the nih intramural sequencing center  website  <cit> . however, the original sequences had been updated in other genome browsers. thus, we eventually downloaded the last versions of these sequences from the ucsc genome browser. the lengths of these sequences are from  <dig>  m bp to  <dig>  m bp. we realigned these sequences by mlagan, mavid, and tba   <cit>  and the total number of bases of the final alignment results, including gaps, are approximately  <dig> m bp,  <dig> m bp, and  <dig>  m bp, respectively.

figures  <dig> and  <dig> show the global pip curves and their detailed views of three alignment results, respectively. in general, most of high identity regions are well and consistently aligned by these three programs. but those not as high identities are not reported by tba because the kernel of this program, multiz, is based on the local alignment results by blastz. as shown in figure  <dig>  the stacked-bar charts show the quality and the quantity of these alignment results where the average identical rates for tba are somewhat better than those for mlagan and mavid although the total number of aligned conserved regions for mlagan is larger than those for the others.

for comparisons of these alignments from a functional viewpoint, we downloaded the annotation of the human sequence, including exons and repeats, from the ensembl genome browser  <cit> . the detailed comparisons of the alignment results by different aligners demonstrated that the alignments of noncoding regions are often inconsistent. but for the coding regions, the alignment results by different aligners seem consistent and well-aligned.

figures 6– show the detailed alignment results at four different intervals. in figure  <dig>  we find that some conserved regions are not aligned by tba but identified by mlagan and mavid. this region is annotated by repeats and implies that some repetitive elements were inserted into these sequences of their common ancestor. however, this conserved insertion event could not be observed by using tba. although the kernel of tba, multiz, is known not to align regions with repetitive elements, we still find that some other regions with repetitive elements are aligned by this program, as shown in figure  <dig> 

generally speaking, the regions aligned by tba usually have higher identical rates than by others. as the frames shown in red in figures  <dig> and  <dig>  the alignment of these regions by tba seems superior to those by others. however, the kernel of tba, multiz, usually neglects to align the regions with low conservations. thus, some lowly conserved regions may not be aligned by tba.

since each alignment tool has its own advantage and reveals different alignment results, we therefore wonder whether a better alignment result can be generated by hybridization of these alignment tools.

loading performance and platforms test
sinicview is implemented totally in java. theoretically, it should be portable across different operating systems  and platforms. to demonstrate interoperability on real cases, we tested the applet and application versions of sinicview on different platforms and oss. as shown in table  <dig>  both versions of sinicview seem to perform well. thus, users can use either the applet version or the standalone application of sinicview, according to their requirements.

besides, we also tested the loading performance of sinicview. because the performance of an applet on the web is strongly dependent on the network bandwidth and traffic, the estimation of loading time may not be a fair comparison. thus, in this part we only estimated the loading performance of the standalone application of sinicview.

in general, the loading performance of a java application is dependent on the memory heap size. the default values of the initial heap size and the maximum size of a java virtual machine  are  <dig> m  bytes and  <dig> m bytes, respectively. these values can be adjusted by the following command in the terminal mode:

java -xms64m -xmx128m -jar sinicview.jar,

where the parameters xms64m and xmx128m represent that the initial heap size is  <dig> m bytes and the maximum size is  <dig> m bytes, respectively. thus, we used different input data sizes, initial heap sizes, and the maximum sizes to estimate the loading time of sinicview. as shown in table  <dig>  using the default maximum heap size,  <dig> m bytes, the standalone sinicview can handle up to approximately  <dig> m bytes alignment data. if the maximum size is set up to  <dig> m bytes, the loading ability of input data size could be over several dozens of mega bytes. moreover, table  <dig> shows that the maximum data size is dependent on the maximum heap size and the loading times are linearly dependent on the sizes of input data. all performance test results were benchmarked on a  <dig> ghz pentium <dig> pc with  <dig> gb ram.

discussion
repetitive elements in sequence alignments
the eukaryotic genome is usually characterized by the presence of repetitive dna consisting of nucleotide sequences of various lengths and compositions that occur from a few times to thousands of times in the genome either in tandem or in a dispersed fashion <cit> . the repetitive fractions can be classified into two types of repeated families: localized and dispersed  <cit> . localized repetitive sequences usually occur as tandem arrays and they are called tandem repetitive dna. dispersed repetitive sequences are dispersed throughout the genome. in addition, there are moderately repetitive sequences, which are usually transposable elements or processed pseudogenes and are usually dispersed over the genome. alu is the largest family of interspersed mobile elements  and propagated to more than one million copies in primate genomes. this type of repeat has been inserted into these genomes within the last  <dig> million year period  <cit> . because this type of repetitive elements only appears in the primate genomes, when we align homologous sequences of primate and non-primate genomic sequences, these alu inserted regions should not be aligned. however, other interspersed elements may possibly have been inserted into the ancestral sequence of mammalians. the regions of these repeats may be able to align together between the sequences of different mammalians, as shown in example  <dig>  however, these regions in the alignment results by different aligners are inconsistent. since these repetitive elements in sequences could be detected by repeatmasker  <cit> , the poorly aligned regions may have to be checked whether they belong to repetitive elements.

comparative approach for alignment validity
as the comparison results using sinicview show, the alignments of sequences using different msa tools are inconsistent. we begin to wonder whether the computational results obtained by different tools may in fact lead to different findings. for identification of alignment correlation, a need for additional checks of alignment validity by using different tools and scoring systems has been recognized in the literature  <cit> . thus, a cross comparison approach along with visualization could provide an efficient and easy way for general users to verify and validate the alignment results as to whether the aligned regions are reasonable and whether those poorly aligned regions are indeed non-homologous.

how to decide on a "good" alignment result
except evaluation of the alignment quality by comparison charts in sinicview, how to decide on a good alignment with biological meanings may need much more experiences and knowledge. sometimes, this judgment depends also on what kind of the biological problems users want to study. here, we suggest some general rules for users to judge the alignments by biological meanings.

in the coding regions, a triplet of adjacent nucleotides constitutes a codon. usually, the first two nucleotides are identical between the two sequences and allow the third one to be either identical or different. thus, when the partial alignment results reveal the two-out-of-three regularity for each triplet, it may imply that the aligned regions are potential coding regions. this alignment result should be more biologically meaningful than those without the two-out-of-three regularity.

from molecular evolutionary viewpoint, nature prefers inserting or deleting considerable consecutive nucleotides together to interspersed individual nucleotides  <cit> . thus, an alignment with consecutive gaps would be better than those with interspersed gaps.

if one of the alignment sequences has been annotated, the information is definitely useful for users to judge the alignment results by different aligners.

comparative environment to promote new alignment tools
it is not easy to promote newly developed tools because users usually cannot directly compare the new tools with the traditional ones. with sinicview, users can compare the alignment results obtained by different tools and select an appropriate one for further analysis. thus, if the new tool can align more regions than those by the old ones and can also indicate their statistical significances, it will be welcomed and better received by the community. we would like to make sinicview available to the community of computational biologists. in addition to helping the user find a most appropriate alignment tool to use, sinicview may also be used to check whether previously obtained alignment results by different tools are worth a re-investigation, and see if this revisit of alignment results would lead to different conclusions.

further possible enhancements for sinicview
the capability of fine-tuning parameters relevant to the alignment process will be made available in a user-friendly interface. furthermore, the ability to allow plug-ins of more alignment programs, in addition to the currently pre-selected ones, such as clustalw, mavid, mlagan, and gs-aligner, will inevitably broaden the usage of sinicview. the issue of the compatibility of the input and output formats for each alignment tool also needs to be resolved. for example, both mavid and mlagan require the phylogenetic tree data as input, but clustalw does not. the ordering of the outputs of these aforementioned tools is usually switched without notice. thus, to be able to work under a unified comparison framework requires further processing of these outputs. besides, identifying a standard-bearer mechanism is still a challenge in entrusting existing alignment programs. so far, we have used the "sum-of-pairs" method to define the "identical rate" in each alignment result. in the future, we may provide other criteria for users to use to measure their alignment results, in addition to what have been already provided in sinicview.

CONCLUSIONS
deluged by the increasing number of completed genomic sequences, biologists have encountered a challenge of aligning more and much longer sequences from divergent species. thus, the need to align longer sequences, like mega base-pair sequences or even genome-scale sequences, and evaluate the alignment results becomes more urgent. in this paper, we have presented a visualization tool for comparison of multiple sequence alignment programs. with a standard simple protocol for the input/output format, it is quite easy for users to upload their own alignment programs to sinicview. the performance of sinicview depends on the system's internal memory. in a  <dig> m ram java environment, sinicview can load and visualize several mega bases alignment results. users can easily perform sequence alignment by employing multiple alignment tools and visualize the results on the fly by sinicview. more information can be found at  <cit> .

availability and requirements
project name:  <dig>  development of novel large-scale sequence alignment and visualization tools and their applications to bioinformatics

 <dig>  development of a web-based personalized research environment for study of computational and evolutionary genomics

project home page: 

operating system: window xp, sun os  <dig>  sparc, mac os  <dig> . <dig> tiger, and linux fedora core 3

programming language: java

other requirements: java  <dig> . <dig> or higher

license: any restrictions to use by non-academics: free downloads and usage for academics only.

list of abbreviations
sinicview: sequence-aligning innovative and interactive comparison viewer

jre: java runtime environment

scl: stem cell leukemia

cftr: cystic fibrosis transmembrane conductance regulator

authors' contributions
arthur chun-chieh shih and d.t. lee contributed the original idea, developed the system organization, and drafted the paper. laurent lin supervised the system implementation and also drafted some parts of the paper. chin-lin peng, yu-wei wu, chun-yi wong, meng-yuan chou, and tze-chang shiao implemented the codes. shiang-heng chen and mu-fen hsieh implemented some partial codes before leaving their positions.

