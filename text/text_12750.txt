BACKGROUND
the ability of next-generation sequencing technologies to analyze eukaryotic genomes in a fast and cost-efficient manner  <cit>  is providing new opportunities for investigating biological problems that, due to their complexity, could not be addressed before. one such question concerns the role that repetitive dna plays in shaping the structure and evolution of plant genomes. its elucidation depends in large part on performing a comparative analysis of repeat composition in a large number of plant species differing in size and other characteristics of their genomes. however, repetitive sequences, composed of numerous and diverse families of mobile elements and tandem repeats, account for up to 97% of plant nuclear dna  <cit> . thus, genome-wide characterization of repetitive elements can only be achieved when large volumes of sequencing data are available, which has long been limited to a few model species due to the speed and cost constraints imposed by classical sequencing. compared to the conventional, clone-based sanger sequencing approaches, the next-generation technologies work at unprecedented speed, sequencing up to several gigabases in a single reaction for a fraction of the cost  <cit> . although this amount of sequencing data is still not sufficient to provide the coverage typically needed for whole genome assembly, it enables representative sampling of elements present in a genome in multiple copies. for example, a low-pass sequencing providing only  <dig>  × coverage of the pea  genome was found to efficiently capture repetitive sequences present in the genome with at least  <dig> copies. moreover, the proportion of individual sequences in the reads reflected their genomic abundance, thus providing a simple and reliable means for quantification of repetitive elements  <cit> .

the potential of bioinformatic analysis of low-depth sequencing data for plant repeat investigation has been further demonstrated in several studies. for instance, the identification of bac clone regions representing soybean genomic repeats was achieved by quantification of the number of similarity hits to a database of the soybean  whole-genome  <dig> reads  <cit> . an alternative approach was adapted for repeat detection in barley clones, using data from solexa/illumina sequencing. in this case, the genome sequence reads were decomposed to 20-mers and their summarized frequencies were used to build an index of mathematically defined repeats, which was then employed to detect repetitive regions  <cit> . while these applications utilize the sequencing data only for repeat content evaluation in reference genomic sequences, there is also the possibility of performing de novo repeat identification and reconstruction solely from the sequence reads. this can be achieved by direct assembly of the reads, as has been reported for soybean, where 41% of  <dig>  genomic  <dig> reads were assembled into contigs using the phrap program  <cit> . due to the low genome coverage of the sequencing, most of the contigs did not represent specific genomic loci; instead, they were composed of reads derived from multiple copies of repetitive elements, thus representing prototype  sequences of genomic repeats. even though the exact form of this consensus does not necessarily occur in the genome, this representation of repetitive elements is sufficiently accurate to enable amplification of the whole length repetitive elements using pcr  <cit> . the contigs could then be used to evaluate the abundance of their corresponding genomic sequences based on the number of assembled reads, and some of them could be classified based on their similarity to known repetitive elements.

another approach for repeat identification and quantification was introduced in a study of the pea genome by  <dig> sequencing and subsequent clustering analysis of the reads  <cit> . this analysis was based on an all-to-all comparison of sequence reads to reveal their similarities, which were used to build clusters of overlapping reads representing different repetitive elements. information about cluster sizes  was used to quantify individual repeat families, leading to characterization of repeats representing up to 48% of the pea genome. as there is considerable sequence variability in genomic copies of repeated elements, their assembly typically includes only part of their reads and results in multiple contigs. thus, the advantage of the cluster-based quantification over the contig-based approach is that evaluation of individual reads better captures repeat variability and is therefore more informative. subsequent contig assembly is then also possible, and it is made computationally less-demanding and suitable for parallelization, because it is performed within individual clusters instead of the whole set of reads.

while the clustering-based repeat analysis has proved to be principally sound, its initial implementation using the tclust program  <cit>  suffered from the formation of chimeric clusters made of several unrelated families of high-copy elements  <cit> . tclust employs a simple transitive-closure clustering algorithm, which is well suited for its original purpose of clustering est sequences  <cit> . however, when applied to whole genome sequencing it is prone to producing mixed clusters due to the occurrence of "bridge" reads with partial similarity to two groups of unrelated sequences. such reads can presumably originate from insertion sites of mobile elements or from structural and regulatory sequences conserved across diverse families of elements. to overcome these limitations, we focused on developing more sophisticated approaches facilitating precise repeat clustering and analysis.

in this work, we describe the principles and implementation of graph-based methods for similarity-based clustering of sequence reads and further analysis of sequence clusters. these methods were applied to real datasets of  <dig> reads from soybean  and pea , chosen to represent different-sized genomes and different sequencing coverage. moreover, these datasets have already been investigated  <cit> , thus allowing comparison of the newly developed methods to those used previously. we demonstrate that our methods provide several advantages over previous approaches, including improved partitioning of different types of repetitive elements. in addition, the analysis of the graph structure of sequence clusters enables partial classification of sequences without prior knowledge of sequence information, which can be specifically helpful in the characterization of novel repeats from poorly characterized genomes.

RESULTS
principles of graph-based clustering of sequence reads
the analysis is performed on a set of  <dig> sequence reads, representing short nucleotide sequences randomly sampled from the analyzed genome. it starts with the identification of read similarities by performing all-to-all pairwise comparisons and recording all read pairs with sequence overlaps exceeding a specified threshold. this information is then used to construct a graph in which the vertices correspond to sequence reads, overlapping reads are connected with edges and their similarity score is expressed as an edge weight. the graph construction, its corresponding data structures and subsequent analysis are implemented in the r programming environment  <cit> . a simplified example of a graph is given in fig. 1a, showing various features of the graph structure. in the case of low-depth sequencing, providing less than  <dig> × genome coverage, single-copy sequences are only sparsely covered and thus overlaps of their reads are rare, resulting in isolated nodes with no connections to other parts of the graph. on the other hand, repetitive sequences constitute groups of mutually connected nodes, due to frequent sequence overlaps of reads pooled from their multiple copies. an isolated group of nodes in which any two vertices are connected by a path and no more vertices or edges can be added is termed a connected component . identification of connected components is a principle of sequence clustering performed by the tclust program  <cit>  that has previously been employed for repeat clustering analysis  <cit> . ideally, such clustering should be sufficient to separate sequence reads originating from different families of repetitive elements. in reality, frequent interspersion and partial sequence similarities of genomic repeats lead to merged  clusters including multiple distinct elements, especially as the repeat abundance and/or sequencing coverage increases. to deal with this problem, we performed further analysis of the graph structure using a hierarchical agglomeration algorithm  <cit>  for detecting communities  <cit>  which are defined as groups of vertices in a graph that are more densely connected internally than with the rest of the graph . to find the optimal graph partitioning into these communities, the greedy algorithm is used to find graph divisions into subgraphs with the maximal modularity. briefly, modularity, which is the quality measure for graph clustering, is used to evaluate the frequency of node connections within the same community with respect to the value that is expected for a randomly connected graph  <cit> . if the number of edges within a communities is no better than random, then the modularity of that division into communities is zero, whereas a modularity close to  <dig> indicates strong community structure. analysis of the hierarchical structure of the network is thus an excellent tool for identification of highly connected communities of nodes that are less densely connected with nodes belonging to other parts of the graph. data partitioning is then performed by splitting the graph into clusters according to its community structure .

the resulting clusters of reads, representing different families of repetitive elements, can be further analyzed to gain information about the abundance and sequence composition of these repeats in the genome. since the number of sequence reads generated by the random sequencing approach is proportional to the genomic abundance of their corresponding sequences, the cluster sizes provide a direct measure of the repeat proportion in the genome. moreover, various statistics can be used to assess the type and properties of repetitive elements by evaluating the graph topology of individual clusters. these statistics include graph diameter, defined as the longest distance between any two nodes, where distance is the shortest path between the vertices; graph density, which is the ratio of the number of edges to the number of all possible edges; and maximal degree, which is the maximal number of edges leading to a single vertex of the graph. we have found that high graph density and maximal degree values are indicative of short tandem repeats or satellites, and that graph diameter is proportional to the repetitive element length .

in addition, cluster graphs can be inspected visually. we used the 3d version of the fruchterman and reingold algorithm  <cit>  to determine the informative placement of the vertices in 3d-space. this algorithm minimizes edge crossing and brings the vertices connected by an edge  near each other. the placing of vertices is also affected by the attraction along the edges, which is proportional to the edge weight. in our case edge weight was based on the similarity score. in order to interactively investigate such graph structures we developed seqgrapher, an r package that provides a simple graphical user interface for interactive visualization of sequence clusters using the ggobi program and the r package rggobi  <cit> . seqgrapher also enables the selection of groups of reads from a graph and simultaneous viewing of the graph layout, sequence assembly results and similarity searches .

application of graph-based methods to global repeat analysis in glycine max and pisum sativum
the analyzed datasets consisted of whole-genome  <dig> sequence reads from g. max  <cit>  and p. sativum  <cit> , representing small and medium-sized plant genomes with haploid dna contents of  <dig>  mb and  <dig>  mb, respectively. the average read length was similar in the two datasets ; however, they differed in genome coverage, due to the higher read quantity and much smaller genome size, almost 10-fold higher in g. max  than in p. sativum . the analysis was performed using a computational pipeline integrating sequence similarity searches with a set of result-parsing and sequence-manipulation tools implementing the graph-based methods outlined above.

in the set of  <dig>  reads from g. max, detected sequence overlaps resulted in a graph of  <dig>  nodes connected by  <dig> , <dig> edges. no sequence overlaps meeting our criteria  were found for the remaining  <dig>  reads , which probably represented single- or low-copy genomic sequences. in p. sativum,  <dig>  analyzed reads yielded a graph including  <dig>  nodes connected by  <dig> , <dig> edges, while  <dig>  reads  remained single. it should be noted that in spite of the higher genome coverage of the g. max dataset, there was a much larger proportion of single reads than in p. sativum, reflecting the smaller repeat content in the former species.

using hierarchical agglomeration, reads included in the g. max and p. sativum graphs were partitioned into  <dig>  and  <dig>  clusters, respectively. when graphs were partitioned into individual connected components, the number of clusters obtained was slightly lower, at  <dig>   and  <dig>  . this is because connected components can be either equivalent to hierarchical agglomeration clusters or can be broken down into multiple clusters . this division into smaller clusters was the most frequent in large connected components and is demonstrated in fig.  <dig>  showing separation of the largest connected component of the p. sativum graph  into clusters based on maximal modularity. to analyze the efficiency of clustering with respect to the separation of distinct repetitive elements, the reads within the clusters were scanned for similarity to a database of plant repetitive elements using repeatmasker  <cit> .the analysis showed that the largest connected component contained reads derived from several families of ty3/gypsy and ty1/copia elements and also from a tandem repeat. these distinct types of repetitive elements were separated by hierarchical agglomeration clustering. the dendrogram  shows hierarchy of divisions of this connected component into  <dig> sub-clusters. in summary, the twelve largest connected components in p. sativum, which contained  <dig>  reads, were further partitioned into  <dig> smaller clusters by hierarchical clustering. similarly, in g. max,  <dig> connected components, accounting for  <dig>  reads, were broken down into  <dig> clusters. on the other hand,  <dig>  and  <dig>  connected components that were composed of  <dig>  and  <dig>  reads were identical to hierarchical agglomeration clusters in p. sativum and g. max, respectively.

comparison of our clustering analysis of g. max data with the previously published analysis produced by direct contig assembly  <cit>  revealed that in both methods a similar fraction of reads was utilized in contigs or to form clusters. a total of  <dig>  clusters consisted of  <dig>  reads while  <dig>  contigs comprised  <dig>  reads. the major differences were found in the size and the number of large clusters and contigs consisting of more than  <dig> reads. hierarchical agglomeration clustering resulted in a smaller number of larger clusters  while partitioning by direct contig assembly led to higher number of smaller contigs .

the size and identity of the clusters summarized the known differences between genomes of g. max and p. sativum well . differences in the "slopes" of the bar plots reflect the distinct repetitive content in the g. max and p. sativum genomes. in general, the p. sativum genome can be described by a greater number of larger clusters than found in the g. max genome. specifically, clusters that contain at least  <dig> % of sequence reads are representative of 47% and 24% of the genome in p. sativum and g. max, respectively. the similarity search using repeatmasker, which was performed for these largest clusters, enabled us to characterize the composition of these portions of the genomes . both genomes showed the greatest prevalence of ty3/gypsy ltr elements and a smaller fraction of ty1/copia elements. the g. max genome also contains highly amplified satellite sequences making up more than 3% of the genome, whereas p. sativum tandem repeats do not reach such high proportions.

detailed characterization of repeat families
examples of sequence clusters derived using hierarchical agglomeration are shown in fig.  <dig> and their characteristics in table  <dig> . the first four clusters  are derived from various tandem repeats, including p. sativum satellites pistr-b and tr- <dig> which make up  <dig> % and  <dig> % of the genome, respectively  <cit> . the different monomer lengths of these two satellites contribute to the distinct graph layouts. while pistr-b, with a monomer length of  <dig> bp which is shorter than the average length of the sequence reads, forms a star-like structure, tr- <dig>  with a monomer length five times larger than the average read length , forms a graph with a ring-like shape. these same types of layouts were also observed in other clusters of tandem repeats. g. max satellite sb <dig>  which occupies  <dig> % of the g. max genome, was separated into four clusters, gmcl <dig>  gmcl <dig>  gmcl <dig> and gmcl <dig>  accounting for  <dig> ,  <dig> ,  <dig> and  <dig> reads respectively. the layout of gmcl <dig> and the joint layout of all four sb92-containing clusters are shown in fig.  <dig>  the joint layout clearly shows two distinct major clusters in the sb92-like sequences, which were separated by the clustering algorithm. the minor clusters gmcl <dig> and gmcl <dig> cannot be visually distinguished from the major clusters gmcl <dig> and gmcl <dig> due to their manifold smaller size. sb92-like satellite sequences were also analyzed previously using direct contig assembly and similarity search  <cit> . this led to classification of the sb92-like sequences into  <dig> contigs. this again shows that direct contig assembly leads to a higher number of smaller contigs while hierarchical agglomeration can organize sequences more loosely into larger clusters. in general, the graphs based on satellites with short monomers are characterized by a high graph density and small diameter . conversely, graphs based on satellites with monomer lengths significantly longer than the read length are less dense and have a larger diameter .

graphs derived from dispersed repeats with long units, like ltr retrotransposons, are characterized by the presence of long multiple parallel paths that form the more or less linearly organized parts of the graph layout . the linear parts of the graph that contain nodes densely connected into thread-like structures represent potential contigs, which could be assembled from the reads in the cluster. this demonstrates an important feature of organizing reads using the graph, which is not limited by the stringent criteria required for contig assembly. thus a group of reads that would normally be separated into distinct contigs can be captured in one graph due to the possibility of thread branching and looping . the rdna cluster is the last example shown in fig.  <dig> . the conservation of the rdna copies in the genome  and its tandem organization is responsible for the tight circular layout. in general, a circular layout of a graph is a sign of either tandem organization or the presence of terminal repeats as in the case of ltr-retrotransposons . conversely, linearization of such a layout can be caused by the absence of sequencing coverage or by the presence of variable sequence regions with low coverage, which will cause partitioning into multiple clusters . overall, the contrasting graph layouts of distinct classes of repeats and their basic graph characteristics show that graph-based partitioning and graph based visualization of genomic  <dig> reads can serve well for the first coarse, unbiased characterization of sequence reads.

examples of analysis of individual sequence clusters
in this section we will demonstrate two examples of how the graph layouts explored using the seqgrapher tool are useful in elucidating the variability of repetitive elements and how they can help in reconstructing repetitive element consensus sequences. the first example is the pea cluster pscl <dig> containing  <dig> reads, representing the ty1/copia ltr-retrotransposon angela  <cit> . this seventh largest cluster identified in the p. sativum genome represents approximately 2% of all reads. our attempts to assemble the sequences using the cap <dig> program resulted in several imperfectly overlapping contigs. even though it was not possible to assemble sequences of the cluster pscl <dig> into a single contig, graph visualization using seqgrapher  showed one major thread of similar reads with three 'shortcuts'. a major thread of reads is representative of the most frequent form of the angela elements while the shortcuts, containing fewer reads, correspond to less frequent form with deletions . the concurrent view of the contig information and the graph layout is especially useful since it can be used in the manual assembly and finishing of a consensus sequence. in addition, seqgrapher enables counting of the reads present in individual structural parts of the graph and thus provides rapid quantification of element variation. by counting reads in the loops labeled  <dig>   <dig> and  <dig>  we estimated that there are 13%, 7% and 3% of angela elements with deletions in these regions, respectively.

the second example shows the clusters gmcl <dig> and gmcl <dig> from g. max with  <dig>  and  <dig> reads respectively. since both these clusters are linked together by  <dig> similar reads and show similarity to the same ltr retrotransposon gmgypsy <dig>  <cit> , we combined the respective data into one graph structure with  <dig>  reads that correspond to  <dig> % of the g. max genome. the branched structure of the graph suggests that the retrotransposon family includes related elements that share some similar segments but differ in others. to further decipher the structure of the graph we marked all reads that were found by similarity search to be part of gag and pol regions. moreover, similarity searching against a database of 3' ends of trna sequences also identified reads containing putative primer binding sites . annotation of the graph using these features allowed us to estimate the positions of other structural regions, such as the ltrs  and 5'utr . since we could identify branching and two parallel threads corresponding to the ltrs, we concluded that the graph reflects the presence of two types of closely related elements . moreover, there are additional branch points in the graph, suggesting that the elements differ not only in the ltrs but also in other segments, namely parts of the 5'utr and pol. finally, a significant difference between the lengths of the two threads corresponding to pol suggests that one of the elements has a deletion in this region. to verify these conclusions, we investigated whether elements with the predicted structure really exist in the soybean genome. the full-length elements were retrieved from the genbank nr database  <cit>  using similarity searching against sequences from distinct parts of the graph. comparison of two identified elements  with sequences in the graph showed that our prediction, based solely on the graph structure and its annotation, was correct because both elements could be fully mapped and marked all threads visible in the graph .

discussion
graph theory and methods are used in multiple areas of biology including phylogenetic analysis, the study of protein-protein interaction networks, and the description of gene regulatory networks  <cit> . in genomics, graph methods are used by several programs to facilitate sequence assembly  <cit> . in this paper, we have introduced a graph representation of sequence similarities of  <dig> sequence reads as a novel approach for the detection and characterization of repetitive sequences in eukaryotic genomes. we have implemented graph-based methods in a two-step analysis procedure, consisting of partitioning the data into clusters of overlapping reads representing individual repeated elements, and further characterization of these clusters.

the newly implemented hierarchical agglomeration algorithm is superior to the previously used methods and can be considered a balanced approach between the direct contig assembly  <cit>  and clustering using the connected component method  <cit> . compared to using contig sequences obtained by direct assembly of the whole set of non-partitioned  <dig> reads  <cit> , the cluster-based approach is in principle more suitable for repeat detection and quantification as it better captures the sequence variability that is the typical feature of repetitive elements. although the direct contig assembly approach can also be considered a special case of read clustering, its typical outcome is an excess of small clusters  consisting of reads with high similarities and a large number of singlets that are not assigned to any contig despite their partial similarity with other sequences. this is because direct assembly can only group sequences that can be organized into linear contigs without branching and excludes regions with low or no similarities. in this view, clustering can be considered a higher order classification, while contigs describe the smaller, more conserved parts of repetitive elements. clustering can thus be used as a complementary method to sequence assembly, which can organize resulting contigs and singlets into logical higher order groups. the hierarchical agglomeration clustering was successful in the separation of groups of unrelated sequences  and thus improved the main drawback of the connected component-based clustering, which suffers from the occasional formation of chimeric clusters  <cit> . in addition, it provided the possibility of investigating relationships between separate clusters by inspection of the hierarchical tree. it should be noted, however, that the hierarchical tree shown in fig.  <dig> does not necessarily represent the phylogenetic relationship between individual clusters. instead, it reflects the number of mutually similar reads between the clusters. clusters in neighboring branches are thus those that contain a fraction of sequences with high similarities but in which the rest of the sequences is dissimilar. as a consequence, neighboring branches on the tree may contain related repetitive elements but also elements that share short regions of similarity but are otherwise unrelated. this can be explained either by common evolutionary origins of repetitive elements in these clusters or by co-localization of distinct repetitive elements in the genome either side by side or by insertion of one element into another. thus, the hierarchical clustering analysis could be useful in investigating repeat co-localization in the genome caused by e.g. the insertional preferences of some mobile elements.

ideally, every cluster would contain all reads from a particular class or type of repetitive element. while this is true for some repeats and clusters, we have found that some types of elements are separated into multiple clusters. this is either caused by a "missing link" where the chain of overlapping reads is interrupted, or by a "weak link" when the number of overlapping reads is low and the element is split into two or more subclusters. low coverage or missing links can be caused by a number of factors. one possible explanation is a low read depth of the particular sequence, which increases the probability of gaps in the coverage. another cause could be the presence of regions with high sequence variation and subsequent absence of similarity hits. the clustering outcome can also be affected by the total genome coverage of the sequencing itself. since the coverage of a particular sequence is proportional to its abundance and to the total genome coverage, decrease in the amount of reads will cause breakage of less abundant repeats into multiple clusters due to insufficient coverage. on the other hand, clusters derived from more abundant repeats will remain unaffected by lower read coverage. with increasing read depth, clustering will be more efficient even for less frequent repeats.

in extreme instances where coverage is close to or even greater than 100% of the genome, the majority of the reads will be connected to one large connected component, which makes the connected component method useless. on the other hand, the modularity measure, which is used to quantify the quality of partitioning of the graph into clusters, is not only derived from the total number of nodes but also from the proportion of expected and observed edges inside and outside clusters. consequently, clustering by hierarchical agglomeration should still be successful, even with very high sequencing coverage, since this partitioning is an outcome of the proportions of the edges in a cluster and not solely of their absolute number.

the second step of our analysis is characterization of the graph structure of sequence clusters by calculating various graph parameters and also by direct graph visualization. sequence cluster visualization alone provides a fast and intuitive understanding of the relationship between reads and can reveal sequence variability and important structural features. analysis of the graph layout can be extended by coloring the vertices based on sequence similarity with known elements or protein domains. another application is the concurrent viewing of graph layouts and results from contig assembly using our interactive visualization tool seqgrapher, which helps significantly with manual finishing of the consensus sequence assembly. for example, in the staden package for sequence assembly finishing dot-plotting is used as a tool to help decide which two contigs will be merged together  <cit> . while this approach is sufficient in principle, we suggest that a suitable graph layout view provides a more intuitive overview of the contig relationships than the dot plot view.

as the technology advances, new versions of  <dig> sequencing will provide larger quantities of longer reads than were used analysis described here. according to our preliminary tests, an increased read number and length will not negatively affect the outcome of our analysis. it should be noted, however, that analysis of large graphs is a computationally demanding task. for example, the running time for the fruchterman-reingold algorithm is proportional to v <dig> + e  and this can be significant in the case of large clusters. on our computer which has  <dig> gb of ram with eight  <dig> ghz amd processors, the single-threaded layout calculation takes from seconds up to hours depending on the cluster size and density. based on our empirical testing, datasets containing  <dig>  million reads with an average length of  <dig> nt can be processed when a swap partition with sufficient space is available. a potential limitation to our approach could be the presence of large proportions of simple tandem repeats, which can significantly slow down computation due to the frequent mutual similarities of their sequence reads. hypothetically, if there are  <dig>  reads derived from a tandem repeat with a monomer size smaller than the average read length, its corresponding graph structure could contain, in an extreme instance, billions of edges, because every read is similar to all reads derived from the same repeat. this can cause an increase both in the amount of data that has to be handled and in computation time. we suggest that including a prior analysis of sequencing data to identify highly abundant short tandem repeats and then removing these sequences from the dataset will have a great effect on computational time without affecting the clustering outcome. moreover, significant progress in graph analysis can be expected when the use of gpu and parallelization is implemented  <cit> .

CONCLUSIONS
compared to the previously used approaches for repeat characterization from  <dig> sequencing data, the graph-based method described in this work proved to be more precise in read clustering and superior in providing additional information about repeats in the investigated genomes. the hierarchical agglomeration algorithm used for clustering provides an additional level of classification information on top of contig assembly. this information can be used to assess the variability and evolutionary divergence of repeat families and to classify and characterize novel repetitive elements. graph visualization of clusters proved to be useful for finishing consensus sequence assembly and identifying sequence variants of repetitive elements.

