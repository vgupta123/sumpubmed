BACKGROUND
there is a rapidly increasing number of complex, high dimensional deterministic models in systems biology and these play a crucial role in gaining an understanding of important biological systems that would be impossible to achieve using lab-based approaches alone. tools that can be used in a systems biology iterative cycle to enable the development and analysis of models and their fitting to data are becoming increasingly important.

sensitivity analysis is an important approach that has been successfully employed to do the above, but it is just one part of dynamical systems perturbation theory  <cit> . this extensive theory enables one to probe the behaviour of dynamical systems locally in parameter space. in general the systems of interest are nonlinear and, unfortunately, a general global nonlinear theory is not possible because our current understanding of dynamical systems, though extensive, is not adequate for this. however, we can develop a relatively powerful and useful theory based on local analysis about a particular set of parameter values using the extensive and powerful perturbation theory for differential equations. pettsy does the most important calculations that underlie such perturbation theory. it provides tools to enable this perturbation theory to be used for the analysis, adjustment, optimisation and design of models including complex models with large numbers of parameters and variables. it allows one to probe the model dynamics and to understand their behaviour under parameter changes. these changes can mimic perturbations to some rates, pulse experiments, or can even mimic the creation of specific mutations such as gene knock-outs or knock-downs.

moreover, the design of purpose-built add-ons by users or detailed user-designed analysis is enabled by the facility to export all the basic calculation results. for flexibility, results can be exported into the matlab workspace, and then further analysis can be done by the user. pettsy also provides an interface to xppaut  <cit> . pettsy input parameter and initial condition files, or output time series files can be used to generate an input.ode file for xppaut. in this way further parameter exploration via simulation within xpp or bifurcation analysis in auto can be performed. moreover, almost all the internal structures of pettsy can be exported. this is particularly useful when one is using or designing custom analysis algorithms.

currently available sensitivity analysis tools  cater to some of the above needs: however they only deal with a very restrictive set of observables that can be measured  or only offer insight into systems with steady state dynamics . more importantly, aside from  <cit>  none of the software tools give insight into how temporary changes to parameters can affect the dynamics: hence they cannot describe the effect of pulse experiments or any temporary changes to the systems dynamics. in the case of  <cit> , the output is limited to only changes to the model solution.

pettsy has been designed to run simulations and to perform a global form of sensitivity analysis  on the simulated time series. this shows how the model observables  will change as parameters are perturbed either permanently or temporarily.

the methodology we use is system global in that the user can study the impact on the whole time-series  or a set of observables of interest rather than being limited to one output at a time.

the versatility of the software is illustrated by the way it has been used in a number of recent papers to engineer systems to have specific complex properties and so aid understanding. for example, it was used in  <cit>  to design a temperature dependent version of the plant circadian clock. it was used to simplify the model so only the most important temperature inputs had to be considered and it was used to understand how the behaviour of the model could be reconciled with the experimentally observed behavior. another, different application was the use in  <cit>  to understand how to design clocks that are insensitive to external perturbation due to daily fluctuations in light and temperature. in this paper we refer to several of our publications where the software has been essential to give significant biological insight that could later be verified by further experiments.

another very significant aspect is the ability to implement experimental design or multiple experiments on complex systems via the derivative matrix of the mapping from parameters to the solution of interest and its link to the fisher information matrix. for example, one can use this to design different perturbations of an experiment in order to optimise the amount of information coming from each of these experiments.

we illustrate the use of pettsy by analysis of several complex and high dimensional biological models. we will focus on the the clock plant model, counting  <dig> variables and over a hundred parameters and on the nf- κb model counting  <dig> parameters and  <dig> variables. our aim is to provide an overview of the software, to illustrate its use by considering the analysis of several biological models and to demonstrate pettsy’s broad capabilities. specific technical details of the software are described in the user manual that is available with the software, and the references within.

toolboxes for sensitivity analysis of ode models and related areas generally use one of two methodological approaches, deterministic derivative-based methods using mathematical analysis and methods based on sampling of the parameter space. the former is generally considered to be local in parameter space although dynamical systems methods such as bifurcation theory allow one to deduce more global results. potentially the sampling methods are more global in that they allow exploration of a larger area of parameter space but they are subject to the curse of dimensionality because you need o  points in an ε-grid to cover the unit disk in rd. an advantage of the derivative-based methods is that they are more directly connected to rigorous results in the mathematical theory, particularly those coming from dynamical systems theory and this is the approach that this paper follows.

toolboxes employing parameter sampling include senssb  <cit> , sbtoolbox <dig>   <cit>  and dyglosa  <cit>  and those involving deterministic derivative-based methods include pathpsa  <cit> , amigo  <cit>  and data2dynamics  <cit> .

derivative-based toolboxes such as amigo and data2dynamics analyse systems and fit parameters using a likelihood function that measures the distance between the solution at certain times and corresponding data using a sum of squares of the differences. pettsy uses a different approach in that it calculates the linearisation m of the mapping from parameters to the solution of interest  and then analyses m using a number of tools including calculating its principal components and singular values. though m can be calculated in these other toolboxes, most of the pettsy analysis depends upon the decomposition of the solution change given in eq.  below and this distinguishes our paper from others. in particular, the sensitivity matrix s=  is not used in any of those cited above. the detailed justification for using this definition of sensitivity is given in  <cit> . the graphical plots that then summarise this analysis are specific to this toolbox and include plots for the singular spectrum, the parameter sensitivity spectrum, the sensitivity heat map, time series plots with sensitivity, the amplitude/phase derivatives scatter plot and composite plots. another distinguishing feature from other toolboxes is that the calculation of m and the analytical tools mentioned above are developed for periodic orbits.

a key advantage of pettsy is that one can export all of pettsy’s internal structures for use in the design of purpose-built add-ons by users and for detailed user-designed analysis and design of systems and their properties. for example, pettsy routinely calculates the variational matrices c along trajectories between all relevant times s<t and stores this in a convenient way. having these matrices at hand enables a large amount of perturbation theory to be practically implemented very efficiently. finally, we note that pettsy fully implements the perturbation theory for periodic orbits.

implementation
overview
pettsy is a matlab package, requiring matlab r2012a or later to run, the symbolic math toolbox, and optionally, the parallel computing toolbox. as such it will run on any platform that matlab supports . pettsy can be freely downloaded from the website: http://go.warwick.ac.uk/systemsbiology/software. detailed manual documentation is provided with the software. some of the analysis calculations can be greatly speeded up using matlab’s parallel computing toolbox.

the user can also opt to use the cvodes solver  <cit>   to speed up the ode calculations. solvers can be optimised for stiff or non-stiff problems so the user can determine the best options for their particular model.

the package consists of command line modules that can be run most easily using the graphical interface that is provided. an overview of the pettsy workflows is shown in fig.  <dig>  the user begins with a model template defining its equations. there are a number of these pre-installed and the manual describes how to create new templates by entering the model equations, or by importing a model from sbml format. the first step is to compile the model using either the make command or the graphical interface. model derivative matrices are then generated in order to make the model available for analysis. this process employs matlab’s symbolic math toolbox to create various files that contain symbolic representations of these matrices. then one defines the solution of interest. for example, for an oscillator this is likely to be an attracting periodic orbit while for a signalling system it may be a solution with a given initial condition.
fig.  <dig> pettsy flow chart. this shows the main details of the possible pipelines for the use of pettsy



note that pettsy also allows the export of models to sbml level  <dig> format. model odes are converted to sbml rate rules. the required mathml is generated using snuggletex, available freely from the school of physics and astronomy, university of edinburgh . the required modules are, however, distributed as part of the pettsy package so the user need not install snuggletex separately.

as well as the differential equation one can define a number of temporal force profiles that can be used to force the system. these are similar to the external factors function of amigo and the experimental treatment function of data2dynamics. a typical use of these would be when modelling a forced oscillator such as a circadian oscillator entrained by light or temperature, but they can also be used to model experiments where the system is perturbed artificially such as when external signals are used to synchronise a system or induce expression of specific genes.

the software then finds this solution of interest. the second step is to accurately compute it. for example, if this is a periodic solution the software first runs the model with the specified parameters and initial conditions to find it approximately and then uses a boundary value solver to increase the precision.

the third step is to solve the variational equation along this solution and to use this to calculate the derivatives of the solution of interest with respect to all the parameters. these steps are needed for all the subsequent analysis. at this stage one already has several classical  and new  and phase ircs) analysis tools available. these outputs can be selected using the graphical interface. this process involves significant computation and therefore using the graphical interface one can configure what aspects need to be computed and see how accurate the computation is likely to be. for the latter, after being presented with an informative analysis, the user can opt to re-calculate the fundamental matrices  by increasing the time resolution at which the computations are done. more details about the time resolution required are outlined in the accompanying manual. if the user has a copy of the matlab parallel computing toolbox installed, then they will be given the option of running the analysis using one of the user defined parallel configurations. the computation of the fundamental matrices is ideal for parallelisation and a substantial speed-up can be achieved.

the fourth step is to use the global sensitivity analysis tools as described below. this gives a systems global picture of all changes that occur as parameters are changed and presents this in a way that grades the effects so that one can gain better understanding. this uses a version of singular value decomposition . an optional fifth step is to use the software for experimental optimisation.

all of these operations can be carried out via command line operation or via the extensive graphical interface . this enables the user to define and manipulate all models choices, inputs , definitions and computations and present the outputs graphically or numerically. pettsy allows the automated plotting of the results of all analyses, including the ability to select the parameters and variables of interest. results are saved to file in matlab format, but in addition can be exported to the matlab workspace. this allows the user to save them in any format they wish for post-processing.
fig.  <dig> first gui . the graphic user interface provides an easy way for the user to run the simulation and perform sensitivity analysis for the models. once the user has run at least one simulation, the results are saved and the user can access the time series . plot of the time series is provided below, and the user can also plot variables separately, or as a 3d plot 



time series analysis
after calculating the solution derivatives the user can choose to display the following plots:

solution derivatives
suppose we are studying an ode model 
 dxdt=f.  here t is time, the vector x= represents the model variables and the vector k= represents the model parameters. we denote by x=g the solution of interest which is taken to be determined over a specific time range 0≤t≤t. for oscillator models, the time t will be the period of the limit cycle oscillation, while for signalling systems t will be the length of the time the model is simulated. for the i-th variable of the solution g the solution derivative with respect to the jth parameter evaluated at time t is .

given a differential equation of the above form there is a unique solution ξ defined by the initial condition ξ=x <dig>  in signalling systems such as the oft-studied nf- κb system, the solution of interest is a solution of the form ξ where k is the parameter vector relevant to the stimulated situation and x <dig> is the equilibrium solution found when the parameters take the value relevant to unstimulated conditions. thus the solution of interest is defined by the fixed initial condition. if, on the other hand, we are interested in a periodic solution g then g=ξ,k). thus, the initial condition depends upon the parameters k and is implicitly defined.

for signal models, the derivatives will always be non-periodic, and for forced oscillators they will always be periodic. for unforced oscillators, the derivatives will generally be non-periodic because the period changes with parameters. however, if instead of considering g, one replaces it with g¯=g with λ=λ chosen so that the period is locally independent of parameters, then the derivative  is periodic and tells one how the shape of g changes with parameters. the user can plot non-periodic or periodic derivatives. further details of the above scaling are outlined in the manual. details about the theory behind all this are given in  <cit> .

period derivatives
this plot is only relevant for unforced oscillators. in the software this derivative is obtained from the irc curves described below in section infinitesimal response curves  integrated over the full time interval i.e. ϕ1= <dig> and ϕ2=τ . theory behind this calculation is explained in  <cit> .

the user can select different scaling of the period derivative, for example looking at relative change rather than absolute change, as well as which values to plot, and these can be sorted by value or parameter name.

phase derivatives
this plot type applies to entrained forced oscillators only. for such systems the period is invariant provided the system stays entrained but the phase of the periodic solutions can change as parameters are varied. the phases ϕ measured are the times of the peak and troughs. the phase derivatives with respect to model parameters  are plotted as a bar chart. there are options to plot derivatives with respect to log parameter, and to represent the resulting derivative on a logarithmic scale and there are several other plotting options. a description of the derivatives is given in the si.

infinitesimal response curves 
this plot type applies only to unforced oscillators. it plots the period change produced by an infinitesimally small perturbation of the parameter at a single time point during the free running limit cycle. more specifically, for a oscillator with a stable limit cycle with period τ, changes to some output of interest q , given by δq, can be described as a linear combination of changes to each parameter ki  of the form, 
 δq=∑i=1sδki∫ϕ1ϕ2fki,qjdϕ.  here the function fki,qj is the infinitesimal response curve  for parameter ki on the output qj, and the changes to the parameters have only between applied over the time window t∈. namely, k is changed to k+δk where δk= only during the time . for more details the user is referred to  <cit> . a different but related irc is also calculated by the toolbox pathpsa  <cit> .

the user can sort parameters by maximum phase advance, maximum phase delay or by the areas under the irc curve. the integral of the irc is equal to the derivative of the period of the limit cycle with respect to that parameter. a value of zero indicates that a permanent change to that parameter would cause no overall change to the phase or period of the limit cycle. a positive value means an overall phase advance , and a negative value an overall phase delay . ircs can be plotted as heat maps or as line plots.

a practical example of the use of these ircs is given in  <cit>  where they are used to study temperature compensation and show that the imposition of temperature compensation  does not conflict with the need for entrainment by daily temperature oscillations .

phase infinitesimal response curves 
this plot type applies only to forced oscillators. the phase infinitesimal response curves represent changes to phases  of the model variables in response to parameter perturbations. note that period of forced oscillators is fixed by the external force when they are entrained and so it will remain constant under parameter perturbations. each phase irc has a discontinuity at the time of the peak in question. change of phase is represented by summing the integral of the phase irc and a partial derivative, for details refer to the appendix, that is represented on the plots as a single point drawn at time of phase. the rest of the interpretation of how phase changes as parameter is perturbed follows similar lines to the interpretation of the ircs. namely, if the selected parameter is perturbed over the whole limit cycle then change in phase is indicated by the area under the whole phase irc and the single time point value. if the parameter is perturbed over the time interval that does not include the time of the phase, then the phase change is given only by the corresponding area under the phase ircs curve. for a permanent perturbation of the parameter, if the area under the phase irc is positive and the aforementioned single point value is positive, then there will be a phase advance. likewise, if both are negative, this will result in a phase delay. however, if they are found to be of opposite sign, then determining whether the perturbation will result in a phase advance or delay requires examination of their actual values. phase ircs apply to a particular variable, and so the user must specify the variable of interest, and in the case of multiphasic variables, specify the peak of interest too. as for the ircs, the user can sort parameters by maximum phase advance or maximum phase delay in response to a parameter change at a single time point. however, rather than area under the irc curve, instead total phase change values are displayed for when the parameter is perturbed permanently, i.e for the whole of the limit cycle.

systems global sensitivity analysis via svd
after calculating the solution derivatives, svd analysis can then be performed in order to investigate global sensitivity. this is done in order to analyse the linearisation of the mapping from parameter perturbations δk∈rs to changes δg in the solution of interest. this is a map into an infinite dimensional space of smooth functions. pettsy approximates these functions by the high-dimensional vectors given by evaluating the function on a very fine grid of times. this is a good approximation as the functions are generally very smooth and the grid is chosen appropriately. if there are n of these times, then m is represented by a nn×s matrix . we denote this matrix by m=∂g/∂k. to understand why analysis of this is likely to be useful for experimental optimisation note that f=m∗m is the fisher information matrix for a natural stochastic extension of the model being considered.

svd decomposes m as 
 m=uΣvt  where u is an orthogonal matrix whose columns are the principal components , the matrix σ is diagonal with the singular values, σi, along the diagonal, and the columns vj of the matrix v form an orthonormal basis for parameter space that provides information for the construction of the sensitivity heat maps , detailed later on. they are the eigendirections for the fisher information matrix f introduced above.

the principal global sensitivities are the numbers sij=σiwij where w is the inverse v−1=vt of v. note that ∑jsij2=σi2∑jwij2=σi <dig>  in  <cit>  it is shown that for the change δg of the solution g due to a change δk= in the parameters, can be written as 
  δg=∑i,jwijδkjσiui+oδk <dig> 

  =∑i,jsijδkjui+oδk <dig> 

where σ1≥σ2≥…≥σs≥ <dig> are the singular values, the ui are the principal components and the wij are the entries of w. a key relation that follows from this is 
 ∥δg∥2=∥s·δk∥ <dig>   see  <cit> . note also that the above mentioned fisher information matrix equals sts.

the analysis workflow in this section of pettsy uses the basic module of an experiment. let us try and make this notion clear and explain why we use this terminology. for a given system such as the circadian clock we may have a single model but in related experiments we may modify this in various ways. for example, we may knock out genes, alter the forcing by light or temperature, and biochemically alter rate constants. to model each case we would modify the model somewhat. for example, to model a gene knockout we might set the transcription or translation rate of that gene to zero. to work out the value that one of these experiments adds to the others we would need to construct a big model that combines all the individual ones. pettsy effectively does this. although a single experiment is a single parameterised model in the usual sense, as explained below, when they are combined one can ask interesting questions. pettsy calculates all of the above quantities for the combined system and therefore enables a quantitation of the value mentioned above. an advantage of the way that pettsy does this comes from the fact that to add an extra experiment to a set of them that have been previously calculated, one only has to calculate the derivative matrix for the new experiment and then concatenate it to the previously calculated matrices and then calculate the svd of the combined matrix .

this approach which is implemented in petssy could be used in other toolboxes such as amigo and data2dynamics that implement the calculation of the linearisation matrix m.

there are many output options for this analysis, so it has its own gui, see fig.  <dig>  as in the main pettsy gui, the desired model can be selected via the menu system. analysis is then performed on the experiments both separately and combined.
fig.  <dig> second gui . the graphic user interface provides an easy way for the user to select an ’experiment’. in this case, the ’experiment’ generated is called ’ctslightexpt’. the user can select which parameters to include in the svd analysis and once svd is done, can select a plot type 



there are a number of variations included in the package that allow one to focus on different aspects. firstly, because in many models the actual parameter values kj can differ by orders of magnitude it includes an option where all calculations use the logged parameters so that one is studying relative rather than absolute changes. it also offers an option of using the relative change for the solutions of the system. in addition, for solutions of unforced oscillators one can opt to decompose the change in the solution into a change in period and a change in shape of the solution. one can also choose selected time points to include, which can be done graphically by clicking on a time series plot. then one is just looking at the variation of g at these timepoints. this enables one to optimise the choice of timepoints when doing experimental optimisation. similarly, one might want to only include certain variables or form composite variables by forming linear combinations of two or more. this allows the user to replicate experimental conditions. for example, a model may include a particular protein in both the nucleus and cytoplasm but the experimental data may only include the overall levels in the cell and so the user would then want to sum the two model variables. all of these aspects are built into pettsy.

classical sensitivity coefficients
classical sensitivity coefficients cjq for some output of interest q  can be written in terms of sij and ui components because 
 cjq·δk=l·δg  where l is the linear operator that associates to a change δg in the solution the corresponding linearised change in q. this is calculated for all the obvious q within pettsy. a detailed derivation and list of all of them is provided in  <cit> .

experimental optimisation
before performing the svd analysis the user chooses which experiments will be included, which variables or combintions of variables and which time points. these actions will change the matrix m that will be analysed, namely it uses row operations on the matrix  or removal of relevant rows of the m matrix .

in particular, one can compute the fisher information matrix f for each combination of the various experiments. usually, one is interested in seeing the extent to which a new experiment or set of experiments increases the eigenvalues of f or decreases their decay. these are given by σi <dig> where the σi are the singular values introduced above. pettsy displays the relevant information to enable this.

displaying the outputs
the plotting panel allows the user to select a variety of ways to view the input to and output from the svd analysis. the first two, time series and solution derivatives, are similar to the corresponding plots in the main pettsy gui, except that they relate to the selected experiment rather than the raw time series file, and so show the effect of combining and omitting variables and selecting time points.

the other main graphical outputs from the global analysis include the following:

singular spectrum plot.
this plots the largest singular values so that the user can assess how fast they decay. the user can choose how many are plotted.

parameter sensitivity spectrum .
the pss plots the matrix of the principal global sensitivities sij=σiwij. this spectrum can be plotted as either a 3-dimensional surface plot or bar chart  one for each pc. the user is able to sort by parameter and select the most important to plot, and also to choose whether to plot the raw spectrum, absolute values or log <dig> absolute values. when performing experimental optimisation, a separate plot is produced for each experiment, plus an additional plot for the combined matrix. one is able to view how combining experiments changes the spectrum. this is a particularly useful plot as from it one can immediately see which are the most sensitive parameters and how they affect the global solution.

sensitivity heat map.
sensitivity heat maps  are used to identify what variables gm are most sensitive to parameter variation and the temporal profile of how this sensitivity manifests itself. this information can be used to determine which outputs q have high coefficients and for which parameters, kj. instead of inspecting the variation in the solution one can also do the same for the principal components ui. in the former case one plots 
  fi,m=maxj|sij||ui,m| 

and 
  fi,md=maxj|sij||u˙i,m|. 

we choose these because the sensitivities cjq discussed above can be written as linear combinations of terms of the form sijui,m and siju˙i,m for all the usual choices of the observable q. for the latter case instead one plots the variables from the scaled principal components, σi|ui,m|.

these time series fi,m and σi|ui,m| are plotted as a heat map with colour representing value and distance along the heat map representing time. there is an option to select the most important variables, defined as those with a maximum sensitivity value |,fi,m or fi,md) exceeding a specified proportion of the global maximum. it is also possible to mark the most important regions on each heat map, again defined as those exceeding a specified proportion of the global maximum.

when performing experimental optimisation, two figures are produced for each experiment, one representing the experiment analysed on its own, and one representing this experiment’s component of the combined matrix.

time series with sensitivity plot.
this plots the selected time series showing which parts are sensitive and to what parameters.

composite plot.
the composite plot combines several of the above plot types. these are: the sensitivity values  or fi,m) for the selected variable and pc, plotted as a heat map and line plot; derivatives  or fi,md, respectively) plotted as a heat map; time series of the selected variable; and the pss for the chosen principal component, σiwij . this allows the user to view the sensitivities in a compact form. when performing experimental optimisation two figures are produced, one representing the selected variable/pc combination for the experiment that the variable was taken from, and a second plot representing this experiment’s component of the combined matrix.

amplitude/phase derivatives scatter plot.
this plot visualises the extend to which the change produced by a parameter variation is a simple phase change or an amplitude change. effectively it takes the change δgm in the mth variable and decomposes it as αmrm+βmam+sm where rm is the unit vector that represents an infinitesimal translation by time, am is an infinitesimal amplitude change of gm and sm is a vector orthogonal to rm and am. it then plots the pair  for any user-defined subset of the variable indices m. a detailed derivation of rm and am is given in the additional file  <dig>  instead of doing this for the variable changes δgm one can do it for the principal component ui and thus determine to what extent they are a simple translation or an amplitude change.

RESULTS
model time series and solution derivatives
pettsy has been applied to a broad range of examples , but for purposes of illustrating the software we will be applying it to two exemplar systems: the plant circadian clock model of  <cit>  and the model of nf- κb oscillations from  <cit> .

the plant clock model consists of  <dig> variables representing the mrna and protein levels of the genes lhy, cca <dig>  toc <dig>  prr <dig>  prr <dig>  ni, lux and elf4; ztl protein, lhy modified protein; mrna of elf <dig> and gi, cytoplasmic proteins of elf <dig>  gi, cop1; nuclear proteins of elf3; gi and cop <dig> in day and night forms; and the cytoplasmic protein complexes elf3-gi, gi-ztl  and nuclear protein complexes elf3-gi, elf3-elf <dig>  and ec. the model has a complex structure that consists of multiple positive and negative feedback loops and contains  <dig> parameters ). note that  <dig> of the parameters are hill function coefficients so we will keep them at a fixed value  and we will not vary them, thus reducing the parameter dimension to  <dig>  we will simulate the model subject to two different experimental perturbations: constant light  and ) and  <dig> h light and  <dig> dark conditions ).
fig.  <dig> plant clock  <cit>  and nf- κb  <cit>  network diagrams and different plot options for their model times series. a plant circadian clock network of  <cit> . b nf- κb signalling network from  <cit> . c-d simulated time series of different models in pettsy. several mrna time series of the plant circadian clock under constant light in  2d and  3d. e several mrna time series of the plant circadian clock under  <dig> h light and  <dig> h dark cycles . f several time series of nf- κb signalling system  <cit>  under four  <dig> min pulses administered every  <dig> min and then no pulse for the remaining  <dig> min 



for an exemplar signalling system we use the nf- κb model of  <cit> . it describes the oscillations in the level of cytoplasmic and nuclear nf- κb concentration resulting from an incoming signal of tumor-necrosis factor- α, tnf- α. we consider both the effect of constant stimulation by tnf- α and of pulsatile tnf- α stimulation using a  <dig> min pulse every  <dig> min. the model has  <dig> variables describing cytoplasmic and nuclear nf- κb, i κbα, their complexes, a <dig> mrna and protein and the kinase ikk in its activated and inactivated states. the ikk system is activated by tnf- α and goes on to cause phosphorylation and subsequent degradation of i κbα freeing nf- κb to move into the nucleus. in the nucleus nf- κb activates i κbα transcription subsequently producing i κbα protein that bind the nuclear nf- κb and exports it back into the cytoplasm, causing the process to repeat ).

for both models we are interested in changes to the solutions that are brought about by changes to model parameters. suppose that we are interested in understanding the behaviour of lhy mrna levels of the plant clock model ) under various parameter perturbations. in fig.  <dig>  we show the periodic solution derivatives of lhy mrna with respect to six parameters: p <dig>  p <dig>  p <dig>  p <dig>  p <dig> describing the translation of lhy, prr <dig>  prr <dig>  toc <dig> and gi protein, respectively, and m <dig>  the degradation rate of lhy mrna.
fig.  <dig> time series, irc and period derivative plots. a top panel, the time series for lhy mrna from the plant circadian clock model plotted for one cycle of the oscillation. bottom panel, the solution derivatives of lhy mrna with respect to different parameters. b infinitesimal response curves for top seven parameters and an inset  of the time series of the first variable of the model, lhy mrna. c period derivatives for  <dig> parameters with the largest period derivative values



the results show that increasing the lhy mrna degradation  will lower the peak levels of mrna . increasing the translation of repressors of lhy mrna, namely toc <dig> and lhy protein, represented respectively by parameters p <dig> and p <dig>  also lowers the amplitude of lhy mrna oscillations .

on the other hand, small increases in translation of repressor prr <dig>  has almost no effect on the lhy, while increasing the translation of gi protein  will counteract the effect of the repressor prr <dig>  and raise the level of lhy mrna amplitude. extracting this information from the network scheme itself is difficult: gi plays a dual role of an implicit activator of lhy, via toc <dig>  and its repressor, via ec and prr <dig> . our results show that in this case gi will acts as an overall activator, and this could be down to the fact that activation goes via fewer intermediaries. furthermore, though prr <dig> and prr <dig> are repressors, changes to their translation rates appear to be less striking than changes to translation of toc <dig> and gi repressors of lhy. this insight cannot be gained from the network diagram alone.

the real power of this approach is that in fact, in order to explore the effects of a simultaneous change to several parameters, one just has to combine the effects of each solution derivative for each parameter of interest  <cit> . the combination is just a linear sum of the solution derivatives where the weights of the sum describe the desired percentage change of each parameter. so, in fig.  <dig>  any increases in the translation of gi protein  will counteract any effect of increases to the other five parameters. whether the actual lhy mrna peak increases or decreases will be subject to how much each parameter is changed.

the solution derivatives can be used as a predictive tool to show how combined parameter changes will affect the model dynamics  and what sort of experimental data features the model will be able to match under these parameter changes. for a further example of this type predictive analysis, we point the reader to our paper  <cit>  .

response curves and derivatives for the plant circadian clock
oscillatory behaviour and any changes to this behaviour are of interest when probing the plant circadian clock. the infinitesimal response curves  are a useful tool from which two types of information can be extracted:  the effect of a permanent or temporary change to a parameter value on the period of oscillations, τ, and  the effect of such a change to a parameter value on the phase advance or delay of oscillations.

from fig.  <dig>  the ircs for all the parameters shown reach their maxima or minima around the time of the trough of lhy mrna levels  and likewise are close to zero around the times when lhy mrna levels are high . this means that an introduction of an infinitesimal  perturbation of parameters when lhy mrna levels are low will elicit a greater phase shift of the oscillations than a perturbation introduced when levels of lhy mrna are high. this information can be used to check the model response to pulse experiments and to create phase response curves  where the authors show how approximations of the prc obtained from the irc closely match the measured prcs of a drosophila circadian clock model of  <cit> ). in general terms, a change to phase can be obtained by taking the negative of the value of the signed area under the relevant irc for the relevant length of the perturbation. in fig.  <dig>  a short increase of gi translation for a short period administered approximately  <dig> hours after the peak of lhy mrna will elicit a phase advance of the clock, while a short increase in gi mrna degradation will have the opposite effect.

period derivatives summarise the information provided by ircs on the question of the effect of a permanent change to a parameter value on the period of oscillations, τ. as explained above, ircs are used to calculate the period derivatives. the plot of period derivatives for the plant clock model for the top 20-odd parameters with greatest effect on period is shown in fig.  <dig>  the period is most sensitive to dynamics of genes gi and elf <dig>  with parameters having greatest effect being those related to gi transcription and translation , elf <dig> mrna degradation  and formation of the elf3-gi complex , as well as gi mrna degradation , elf <dig> transcription and translation of cytoplasmic protein . while increasing the value of the first four aforementioned parameters will increase the period, doing the same to the last three will decrease the period of oscillations. this is comparable to the information provided by the ircs.

for the plant clock models, period information is very important, since for the clocks, the ability to maintain near-constant period across changing temperatures is a key feature of the system. in circadian literature this feature is referred to as temperature compensation. models of temperature-compensated clocks can be designed by ensuring that the model parameters change according to specific balance equations of  <cit>  that rely on the information from period derivatives. in a recent paper  <cit>  the authors used period derivatives calculated by pettsy to construct and parametrize a model of a plant clock that can temperature compensate. further information on this can be found in  <cit> .

in case of plant clocks subject to entrainment by some sort of forcing, such as day-night cycles of light or temperature cycles, the interest is not in the period of oscillations  but in the changes to phase  that can occur. in fig.  <dig> we show the phase ircs for lhy mrna of the plant clock model subject to  <dig> hour light:  <dig> hour dark cycles. we plot the phase ircs for several parameters whose permanent perturbation was identified in the last subsection as having the greatest effect on the period of lhy mrna, fig.  <dig>  note that a permanent perturbation to parameters for lhy mrna light-degradation and transcription  has a similar effect on lhy mrna phase, but any shorter temporal perturbation of each one will elicit a different phase change in lhy, fig.  <dig>  we can plot the zoomed figure of each phase irc separately . an infinitesimally perturbation of m <dig>  administered after the peak of lhy mrna and during the time that the lights are on  will lead to an phase advance  of lhy mrna. a slightly longer duration pulse, say starting  <dig> h after lights are on  will also lead to a phase advance. on the other hand, a duration of perturbation to g <dig> with the same timing will result instead in a very small phase delay . this example shows us that though a permanent perturbation of each parameter will have the same effect, the shorter perturbations of each parameter over specific times in the oscillation cycle can in fact lead to a very different response.
fig.  <dig> phase irc and phase derivative plots. a phase ircs for three parameters of the plant clock model under diurnal forcing with  <dig> h light and  <dig> h dark periods with an inset of the time series of the variable of interest, lhy mrna. b phase derivatives of the lhy mrna with respect to all model parameters



as in the case of period ircs and period derivatives, the phase ircs information about the effect of a permanent parameter change on model phase, is summarised in the phase derivatives. we show the plot of phase derivatives for the plant clock model subject to ld forcing in fig.  <dig> for all the model parameters. here the phase derivative graph shows that the phase of lhy mrna is most sensitive to rates describing lhy transcription and mrna light-dependent degradation, protein degradation and translation , as well as degradation of light-active protein p . it is not surprising that parameters describing lhy dynamics feature at the top of the list. other parameters that the model is sensitive to are related to dynamics of ni protein, a repressor of lhy  and lhy dark-dependent translation . what is surprising is that only a dozen or so parameters have any significant effect on the phase of lhy mrna peaks, with only a handful have any significant effect. as would be expected, increasing the rate of mrna light-degradation  leads to an earlier peak in lhy mrna . effect of changes to lhy protein dynamics on the mrna is harder to interpret using the network structure alone, since lhy has a negative feedback on itself via other morning loop genes  and many of the evening loop genes, but appears to have an overall positive feedback via evening gene toc <dig> . information from the phase derivatives indicates that increase in translation of lhy  will delay the peak of lhy mrna, while increasing the rates of the lhy protein and lhy modified protein degradation  will advance the phase.

svd analysis of the plant clock model
we start by getting an overview of the sensitivity of the plant clock and initially study the clock in constant light. plotting the log <dig> singular values with them normalised by the maximum singular value shows that they decrease rapidly ). already the third singular value is a bit more than only  <dig> % of the value of the first singular value. this indicates that we only need to consider a handful of principal components in order to understand any changes to behaviour of the model variables when subject to parameter changes.
fig.  <dig> singular value spectrum plot, the pss and the shms. a singular value spectrum plot of the top  <dig> singular values ranked in order of decreasing value. b the pss with each group of bars corresponding to the value of |σ
i
w
ij| for any parameter k
j. only those for which the values are significant are plotted, i.e. for i= <dig> , <dig>  the parameters k
j are ordered by maxi= <dig> ,3|σ
i
w
ij| and only top  <dig> are plotted. c sensitivity heat map showing f
i,m  and fi,md . the threshold is set to be  <dig> % of the global maximum of f
i,m. the only values of principal components  and variables  for which maxt
f
i,m is greater than this threshold have i<= <dig>  these are ranked in order of decreasing size with the ratio change also given. the plotted f
i,m and fi,md are coloured on the scale where their amplitudes are scaled to 1



an easily generated plot associated with the pss is shown in fig.  <dig>  the plots generated for shms are shown in fig.  <dig>  part , top panel indicates that the main changes are associated with the first three pcs. we see that the biggest changes are to gi mrna and lux protein and the main changes occur around t= <dig>  by inspecting the pss we see that the main parameters causing a change in the direction corresponding to pc  <dig>  are n <dig>  m <dig> and p <dig>  we also see that  <dig> most sensitive parameters mainly move the solution in the direction of pc <dig> but that the 13th  moves the systems in the orthogonal direction given by pc <dig> 

the top three principal components, u <dig>  u <dig> and u <dig> are shown in fig.  <dig> and they indicate that main change to the selected time series will happen to gi mrna, lux and toc <dig> mrna, and this will be during the time of the peaks of these time series or when the time series levels are high. this indicates that parameter changes will change the shape of the oscillations and will most likely change the phase  of the oscillations.
fig.  <dig> principal components, singular value analysis plot and time series with sensitivity plot. a time series of several components of the plant clock model with constant light forcing  and first three principal components u
 <dig>  u
 <dig> and u
 <dig> plotted for the variables selected . b singular value analysis plot showing the effect on the singular values when removing one variable from the analysis in turn. only  <dig> variables with the highest mean difference in the singular values from the original set of singular values are plotted. c time series with sensitivity plot where only trajectories with the times marked when f
i,m for all i,m is larger than  <dig> % of the maximum value



the plot of sensitivity value analysis in fig.  <dig> shows that removal of gi mrna from the svd analysis has the largest effect on the singular spectrum. this is followed by the removal of lux protein. note that the higher signal value is below  <dig> , so even the removal of the gi mrna from the analysis has a relatively small effect on the singular values.

in the previous section we explained that in order to understand the changes to any sensitivity coefficients cjq related to model observables, it is enough to identify all principal components , all variables  and all times  such that either fi,m or fi,md have significant values. the shm fi,m for the plant clock model are shown in fig.  <dig>  the thresholds are set at appropriate values in order to make the shm more compact. the shm shows that gi mrna variable plays a large role in the value of the sensitivity coefficients and that most important timing is  <dig> h after the peak of lhy mrna .

the shm of fi,md is shown in fig.  <dig> in top panel. this can be used to show how, the phase changes for all the maxima and minima of the model under any parameter perturbation. the maxima times can be identified by white lines and minima ones by black lines. from fig.  <dig> bottom panel, it becomes clear that for all the higher valued derivatives fi,md, the peaks of lux protein and mrna and elf <dig> mrna happen at times of high f <dig> md i.e. when the shm are red. this indicates that these maxima will be sensitive to parameter changes . the pss in  <dig> shows that the phases will be most sensitive to just a handful of parameters . only values of i  and m  where fi,m are higher than  <dig> % of the global maximum of fi,m are shown. this means that only two variables are plotted and the any change to time series of these will come about during the times indicated by markers . we see that both gi mrna and lux protein are most affected during the time of their peaks, indicating that any parameter changes will likely bring about a phase advance or delay of the two trajectories of these two variables.

since it is clear that the first pc indicates the largest change to the model trajectories, and all the current analysis has indicated that gi mrna as a variable that will be most affected by any parameter changes, we can also plot the a composite plots just looking at this specific variable and the first pc. figure  <dig> shows the composite plot that combines the shms, as well as the plot of the gi mrna time series and the pss for the first principal component. the analyses show that the levels when gi mrna is rising and peaking it is most amenable to change under parameter perturbations. again, greatest sensitivity will come from the parameter identified in the earlier pss plot, but what is striking is that no more than 20-odd parameters out of  <dig> will have any bearing on this sensitivity.
fig.  <dig> composite plot of the plant clock model. top three panels show the heat map and line graph f
 <dig> m and the derivative heat map f <dig> mdwhere the m is the index of the variable gim standing for gi mrna. fourth panel shows the plot of gi mrna time series and the bottom panel shows the pss where s=σ
1
w
1j for all model parameters, k
j, ranked in order of decreasing value



we can also combine different experiments together and use this functionality to see the difference in the singular values and the flexibility of the model. addition of the the 12l:12d experiment to the continuous light experiment has different consequences to the addition of the experiment for toc <dig> mutation in constant light, fig.  <dig>  note that toc <dig> mutant model is made by turning the translation of the toc <dig> protein off . outputs of the combined experiments are the time series of all mrna and protein products of the combined models. the singular values of the combined experiment when the diurnal experiment is added result in a slower decay of the singular values, indicating higher flexibility to explore and optimise any of the potentially ’badly fitted’ model time series. in the case of the addition of the toc <dig> mutant experiment, the opposite is the case.
fig.  <dig> singular value spectrum plots for different experimental combinations. a the singular value plot of the combined constant light and 12l:12d experiment and b combined constant light and toc <dig> mutant constant light experiment



CONCLUSIONS
here we have introduced pettsy , a free matlab based toolbox for analysis of large and complex biological models. pettsy performs simulation and analysis of models subject to a variety of conditions. it also allows experimental optimisation of complex combined experiments. pettsy examines sensitivity analysis of the models in a system-global setting and provides a unique set of tools, making it a valuable addition to the existing suite of sensitivity analysis toolboxes. as such pettsy will have broad applicability to biologists, modellers and systems biologists.

availability and requirements
pettsy can be downloaded free of charge under the terms of the gnu public license  from the warwick systems biology centre software downloads page at http://go.warwick.ac.uk/systemsbiology/software. the only requirement is matlab, and it will run on any platform supported by matlab. there are though two optional dependencies. to import models from and export to sbml format requires the sbml toolbox for matlab, available form http://sbml.org/software. to use cvode in addition to matlabŠs built in ode solvers requires the sundials matlab interface, sundialstb, available from http://computation.llnl.gov/casc/sundials/main.html. pettsy uses two further pieces of third party software that come as part of the package and do not need to be installed by the user. these are snuggletex from the school of physics and astronomy, university of edinburgh , which is used to generate mathml in the export of models to sbml format, and the file findjobj.m, by yair altman  which is used in the construction of parts of the user interface. we thank all the authors of these software packages for making them available and acknowledge their contribution.

additional file
additional file  <dig> this pdf includes the derivation of period derivatives, phase derivatives, phase infinitesimal response curves and describes the projection of the solution derivative onto rotational and amplitude variations .



competing interests

the authors declare that they have no competing interests.

authors’ contributions

the first version of this software was developed by bvs and dar. pettsy was developed from this by peb, md and dar with md planning and contributing new tools in addition to writing and testing some of the programme functions, peb organising, writing, testing and maintaining the programme and dar directing the research. the paper was written by md and dar with input from peb. all authors read and approved the final manuscript.

