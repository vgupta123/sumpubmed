BACKGROUND
the estimation of substitution rates and selective constraints is an essential step in the study of fundamental questions in evolutionary biology, including the evolution and organization of genomes  <cit> , and the genetic basis of species differences  <cit> . estimation approaches based on maximum-likelihood  provide highly accurate estimates of substitution rates and related variables of interest  <cit> . arguably the most popular ml-based program for evaluating evolutionary hypotheses is paml , and the two programs codeml and baseml are its core use cases  <cit> . codeml in particular allows the user to obtain estimates of substitution rates per branch and/or per site and to compare the likelihood of multiple models of molecular evolution given the data and a phylogenetic tree.

the strong mathematical capabilities of codeml and baseml are counterbalanced, however, by their lack of a graphical user interface . the availability of the complete genomic sequences of many organisms and the consequent increase in popularity of genomic-scale evolutionary studies have made addressing this deficit a priority. a program that requires the laborious creation of text-based input files does not scale well to an analysis of hundreds of genes. the benefits of using a set of loci representative of an entire genome to better elucidate the properties of species or clades or the evolution of genome properties are limited when there is no easy way to compare the results obtained for different genes.

we created idea with the goal of easing the researcher's burden in two key areas. first, a graphical interface allows the easy input of parameters for many datasets, automating the distribution of jobs in parallel and allowing the user to monitor the progress of an analysis while it is executing. this input gui also prevents initiation errors since the use of format-controlled and validated input fields is less error-prone than the editing of flat files. second, the availability of a visual display of the main results immediately after the completion of an analysis eliminates the need for extensive handling and parsing of output files before the general attributes of the data can be accessed, and the interactive nature of the output gui facilitates in-depth investigation.

implementation
idea is written mostly in java; its design reflects the key consideration of extensibility. in particular, the incorporation of new parameters that may be added to future versions of paml should not necessitate any modifications to the idea code. perl is used as a scripting language to provide text input to third-party c programs such as codeml, baseml and the programs in the phylip suite  <cit>  and to parse their output. paml and phylip are not packaged with idea and must be installed prior to the installation of idea.

idea's graphical user interface is built from swing components, and java2d is used to create adjustable histograms. the visualization component that displays the distribution of selective constraints across a protein is written in perl and makes use of the apache batik rasterizer  <cit>  to convert scalable vector graphics  files to jpeg images. the phylogenetic-tree visualization component is written in jruby  <cit> , a java implementation of ruby that offers a 2x-5x performance advantage over traditional ruby and integrates easily with java. to avoid unnecessary computation, both visualization components create images on demand the first time the user requests them and then save them for later reuse.

the distribution of computing jobs is handled by the workflow process manager, a multi-threaded java application that manages the creation, execution and monitoring of a directed acyclic graph  of commands. workflow is ideally suited to bioinformatics applications, which often involve computational pipelines hierarchically composed of many analysis components. execution of jobs on the grid is accomplished by interaction with any of multiple distributed resource managers  the user may have available; although the current version of workflow has been tested with only condor and sun grid engine, the upcoming version of workflow, expected later in  <dig>  will support other drms through the distributed resource management application api . workflow is included with idea and is also available for download separately at . supported platforms include linux, solaris, mac os x and tru <dig> 

RESULTS
data input and processing
an idea user first elects to run either codeml, which performs maximum likelihood analysis using codon substitution models, or baseml, which uses nucleotide substitution models. idea presents the parameters for the chosen paml program grouped visually into three categories  and allows the user to provide a value for each . sensible default values are provided; the user may also load or save customized default values. a key to the interpretation of each parameter can be viewed by mousing over an icon next to that parameter's name . idea performs limited input validation to detect some common errors. a help menu connects the user to idea's online documentation.

idea augments the standard paml parameters with additional options. as an alternative to paml's existing support for multiple-locus analyses, idea's multi-dataset option offers the key advantages of increased speed and capacity: up to hundreds of genes may be analyzed simultaneously on a computing grid, and the total number of datasets is for practical purposes unlimited, making genome-wide analyses possible. because codeml's maximum likelihood estimation of ω  is an iterative algorithm that may arrive at a local likelihood optimum, another option allows the user to define multiple starting ω values. idea runs codeml once with each value and automatically displays only the results of the run in which the best likelihood score was obtained.

because many paml analyses require phylogenetic trees as input, phylip  <cit>  is integrated into the idea pipeline, allowing the user to quickly estimate phylogenetic trees as an initial step in analysis using maximum parsimony or neighbor joining . maximum parsimony is used for datasets with six or fewer sequences, as implemented in dnapenny , while nj  is used for larger datasets. these options are hard-coded in idea, and the programs are automatically run with default parameters. the option to estimate the tree in idea is particularly well suited to studies that include a large number of datasets and in which a good approximation to the true phylogeny is sufficient to address the particular questions of interest. if desired, trees previously generated outside of idea may be used instead. in a multi-dataset analysis, a separate phylogeny may be estimated or provided for each dataset. this is especially useful when the set of species analyzed is not the same for all datasets.

once the computational utility and parameters are specified, the idea pipeline processes each dataset  in four steps . the user may monitor the progress of an analysis by summoning the graphical monitor, a part of the workflow process-management suite . icons indicate which steps of the process are running, completed or waiting to start. the view outand view err buttons allow the user to see the complete command-line output of each process.

visualization
idea's input interface allows the user to run any baseml or codeml analysis. however, its output display is currently configured primarily for codeml analyses using site models or run in pairwise mode. idea's output gui displays the results of codeml runs in an intuitive format that gives the user immediate access to relevant molecular evolution results. its layout differs for pairwise analyses  and tree-based analyses .

the output gui's core element is a table listing the main parameter values estimated in the analysis. in the case of a pairwise analysis, the parameters displayed are likelihood score, tree length, κ , ω , dn and ds . the table can be sorted based on any column and saved in tab-delimited text format for easy parsing. a histogram is available for each column of parameters estimated by codeml. the number of bins in the histogram can be adjusted interactively to fit the data.

the table displaying the results of analyses of three or more sequences shows, for each dataset, the following characteristics: number of sequences, model of evolution , likelihood score, tree length, κ and ω . when multiple models of evolution have been run, the parameter estimates under each model are shown in a separate row. the row for the model with the highest likelihood in each dataset is shown in bold, and rows with ω ≥  <dig> are highlighted .

two pairs of evolution models available in codeml  are nested; that is, one is a specific case of the other, more general, model. each of these nested pairs comprises evolution models that are identical except that the second allows some amino acid residues to evolve under positive selection  whereas the first does not. when a nested pair has been analyzed, the results table indicates the outcome of a likelihood ratio test performed to determine if there is statistical support for the hypothesis of the presence of positive selection during the evolution of the gene. this test is based on the p-value for the test statistic 2Δℓ ; this p-value is obtained using the paml tool chi <dig>  if the likelihood ratio test suggests positive selection, a check mark is displayed next to the model that allows positive selection; otherwise, an x is displayed. this feature enables the user to immediately pinpoint genes with evidence of positive selection. the details of a likelihood ratio test can be viewed by mousing over the check or x mark .

to the right of the data table for a tree-based analysis is a graphical depiction of the phylogenetic tree for a given dataset under a given model. the lengths of branches in the tree are proportional to the evolutionary distance between nodes as estimated based on that model. the tree's topology can be quickly evaluated; this is particularly useful for analyses in which trees were first estimated in the idea pipeline.

below the tree-based analysis data table is a scrolling display of ω values for each amino acid residue in the sequence alignment for a dataset selected in the main table. this colorful display, based on the codeml text output file "rst", features a stacked bar chart of the probabilities that each site evolves with an ω value in one of several ranges determined by codeml based on the data and the evolution model. fast-evolving protein regions are immediately obvious from the bar chart . individual amino acid residues with probability > 50% of being under positive selection are shown in reverse color .

discussion and 
CONCLUSIONS
experimental results obtained using idea
we undertook several experiments both to benchmark idea and to illustrate its usefulness for the exploration of data.

first, to quantify the time-saving potential of idea's parallel processing feature, we performed a codeml analysis on  <dig> mammalian genes obtained using orthomam  <cit>  using a cluster of three 8-core, 3-ghz intel xeons with  <dig> gb of ram each. this allowed  <dig> processes to execute simultaneously, with an average of  <dig> gb of ram per processor. each gene dataset had sequences for  <dig> species and was analyzed twice  using codeml's nssites models  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  this analysis took  <dig> hours,  <dig> minutes,  <dig>  seconds. in comparison, performing the same analysis on  <dig> of these genes on a single core of one of these machines took  <dig> hours,  <dig> minutes,  <dig>  seconds, or about  <dig>  times longer. the increase in average single-core run time per dataset between the parallel single-core analysis  and the cluster run  reflects the additional time required for task scheduling on multiple machines.

the performance of idea in pairwise run mode was tested using a set of  <dig>  orthologous gene pairs from two plasmodium species, p. vivax and p. knowlesi. pairwise codeml analyses are much faster, allowing an analysis of many genes to run in a workable amount of time. indeed, the  <dig>  gene datasets were analyzed in  <dig> hours,  <dig> minutes,  <dig>  seconds on a single core of one of our eight-core intel xeons. by contrast, using our cluster of three xeons, performance deteriorated to  <dig> hours,  <dig> minutes,  <dig>  seconds. this can be attributed to job scheduling overhead and demonstrates the importance of selecting an execution mode  to match the data. our results suggest that, for pairwise analysis, idea can be most efficiently run on a single machine.

these analyses also present opportunities to demonstrate the usefulness of idea's interactive output display. the analysis of one of the genes in the  <dig> genes/ <dig> species analysis, pig-a , and in particular the comparison of the two nested evolution models m <dig> and m <dig>  suggests the presence of several positively selected sites, even though the overall estimated ω value for the gene, based on model m <dig>  was a relatively low  <dig>  . the display of selective constraints along the gene  clearly indicates that the sites under positive selection are concentrated in the first  <dig> amino acid residues. this type of signal is made quickly available to the user of idea, without requiring any additional data handling or parsing, and can subsequently be interpreted in the context of protein structure and function, cellular localization or other appropriate attributes of the gene in question.

the usefulness of idea for data exploration in pairwise analyses was investigated using genome-wide data from plasmodium vivax and p. knowlesi, two closely related parasitic species, for which the primary mammalian hosts are humans and monkeys, respectively. previous analyses of the three mitochondrial genes from these species showed a divergence in synonymous sites of only  <dig> %  <cit> , suggesting a very recent common ancestry between the two species. in order to determine whether the nuclear genome corroborated this result, an analysis was conducted on the set of  <dig>  orthologous nuclear gene pairs for the two species used in the benchmarking experiment. a histogram of ds values obtained for the two species  shows a modal ds of approximately 50%, revealing a clear discordance between the mitochondrial and nuclear genomes and implying a much older divergence time between the two plasmodium species than it was previously believed .

the accuracy of idea's estimates was assessed using  <dig>  single-copy ortholog sets in human, mouse and rat. based on these genes, we calculated a median ds of  <dig>  between mouse and rat. unlike dn or ω, the ds value is fairly independent of the genes included in the analysis and can therefore be compared across datasets. the value we obtained is consistent with previous estimates of  <dig>   <cit> ,  <dig>   <cit>  and  <dig>   <cit> . similarly, a median ds of  <dig>  for human and mouse and  <dig>  for human and rat are comparable to previous results  <cit> .

avenues for further development
the modular organization of the idea pipeline greatly simplifies alterations to its back-end processes. planned expansions of idea's capabilities include using phyml  <cit>  for phylogeny estimation and extending idea's output gui to support a wider range of paml analyses, including the graphic display of baseml results as well as those from branch and branch-site codeml analyses, which allow ω to vary across branches of a phylogeny as well as across sites in a gene. other goals are to allow the user to launch any of the paml analysis programs and to resume an aborted analysis mid-execution.

despite the current existence of software with overlapping capabilities, such as hyphy  <cit> , paml remains an extremely popular program to use for molecular evolution analyses. idea simplifies the process of running analyses using two of paml's core components, codeml and baseml, and provides an intuitive graphical interface for the exploration of codeml results. the ability to launch and monitor analyses and to parse, view and explore results all in a single tool significantly expedites data handling and result acquisition. the ability to analyze multiple datasets in parallel can provide an improvement in run time of over an order of magnitude, and idea's ability to display the results of multiple dataset analyses in a single interactive table is unmatched. these advantages make idea ideally suited to large datasets such as those encountered during genome-wide molecular evolution analyses.

availability and requirements
idea is available at  and is free to non-commercial users. documentation and a discussion area are also available on sourceforge. system requirements include a linux, solaris or mac os x operating system and the installation of programs used by idea, including paml and phylip. currently, either condor or sge is required if the ability to distribute jobs on a computing grid is desired; other job schedulers, including torque/pbs, will be supported in an upcoming release.

authors' contributions
jcs and jmc conceived the project. jcs developed the initial computation pipeline. ae developed and tested idea. am developed the workflow suite. jc contributed the code for the selected sites display. jhb contributed code for drawing trees and interfacing with phylip to create trees. ae and jcs wrote the paper.

