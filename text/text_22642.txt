BACKGROUND
genomic selection  is a new breeding paradigm that promises higher accuracy in estimating breeding values and a higher rate of gain from selection per unit time for complex quantitative traits compared to phenotypic selection or traditional marker assisted selection   <cit> . gs was conceived with the advent of high-throughput technologies for whole genome sequencing, genotyping and identifying genetic variation in individuals  <cit> . plant and animal breeders are finding gs appealing due to the progressive decline in genotyping cost and easier access to genome-wide markers such as single nucleotide polymorphism  markers, which can be genotyped using snp array or genotyping-by-sequencing  technologies. however, the huge amount of data on which gs relies is challenging in its management, analysis and accessibility. the computational infrastructure and bioinformatics expertise gs requires are beyond the reach of a typical breeding program. a data management system and user-friendly web-based tool for gs analysis would add efficiency to the breeding decision-making process and make gs more accessible for breeders.

genomic selection is a type of mas. individuals are genotyped with dense, genome-wide markers, such as snps, and phenotyped for traits of interest. this set of individuals, also called a training population, is used to create a genomic prediction model. a model estimates the sum of the additive genetic effects of the genome-wide alleles on the trait of individuals, referred to as, genomeic estimated breeding values . in selection cycles, individuals are genotyped, with the same set of markers as the training set, and the prediction model is used to predict their gebvs for the trait of interest. superior performers are selected based on their gebvs and advanced to the next cycle of selection. thus, skipping the phenotyping step of the same traits evaluated in the training set during selection cycles  <cit> , which saves time.

an important step in the gs model fitting is the validation of its accuracy, which should be done before selecting candidates based on gebvs. the most common approach is to estimate the correlation between gebvs and observed phenotypes of individuals in the validation set  <cit> . a validation set can comprise of  <dig> - 30% of random individuals from the training set  <cit> . the gebvs of the validation set are estimated using a model created based on the rest of the training set.  <dig> or more fold cross-validation tests are done; each time the validation set contains different individuals.

genomic selection is being applied in animal and plant breeding programs. as early as  <dig>  animal breeders were experimenting, initially using simulation, with gs on dairy cattle traits  <cit> . currently, it is also being tested or applied in plants such as maize  <cit> , wheat  <cit> , sugar beet  <cit>  and cassava  <cit> . hayes et al.  <cit>  have extensively reviewed gs in animals. nakaya and isobe  <cit>  also have documented a long list of animal and plant breeding programs where gs was used, including the traits, marker and population details, statistical methods used for the gs models and their accuracy.

gs is superior to mas for complex traits, which is due to large scale of genome-wide markers capturing qtls with medium and small effects  <cit> . gs experiments now typically include hundreds of individuals genotyped for thousands of markers. a maize gs experiment used  <dig> individuals genotyped for  <dig>  snp markers  <cit>  and another wheat experiment used lines genotyped for  <dig>  snp markers  <cit> . the nextgen cassava project is genotyping hundreds of clones with up to  <dig>  snp markers .

the data intensive nature of this approach poses a computational challenge in terms of infrastructure for data storage. it has a high demand for expertise in data management, statistical analysis workflow, accessibility of results and data sharing. furthermore, the complexity of gs statistical analysis is insufficiently understood by breeders  <cit> . flexible gs databases and user-friendly web-based analytical tools would advance gs application in breeding programs  <cit> .

solgs is a web-based tool that aims to address the bioinformatics and statistical challenge in gs. its intuitive and user-friendly web-interface allows breeders to create prediction models and apply the model to predict gebvs of selection candidates. it displays data graphically and interactively on a browser and also has options to download output into one’s computer. it uses an organism-agnostic database schema to store phenotype and genotype data, as well as experimental metadata  <cit> . the statistical modeling is based on the ridge regression best linear unbiased predictor  r package  <cit> ; gblup  method is used to estimate gebvs.

solgs is, currently, used by the nextgen cassava project  and implemented at the cassavabase website . here, we describe solgs using its implementation at the website using cassava data.

implementation
software
solgs is developed using open source software and runs on a debian-based linux server. for data storage, it uses a generic, organism-agnostic, relational chado database schema, called natural diversity   <cit>  on a postgresql system . the schema is ontology driven and is designed to store large-scale genotype, phenotype, and experimental data. for statistical analyses, it uses r  <cit>  and specifically nlme  for the statistical modeling. the application is developed on catalyst model-view-controller  web framework  <cit>  and is mostly in perl. mason templates are used for display layout, whereas javascript, including jquery , d <dig>  and flot chart  libraries are used for client-side user interactivity and graphical visualization of data. the web tool is compatible on all major browsers including firefox, safari, chrome, and internet explorer.

data curation
phenotype, genotype and experimental data are described with controlled vocabularies developed by curators in consultation with breeders; a reference for cassava trait ontology is at http://www.cropontology.org/ontology/co_334/cassava. in the current implementation, a curator also loads both phenotype and genotype data into the database, since the data may require preprocessing such as quality control, data clean up, ontology annotation in the case of phenotype data, and rigorous imputation in the case of genotype data. accepted encodings for genotypes are  and  <cit> . considering the large size and complexity of the phenotype and genotype datasets and the need for experimental metadata, a fair amount of correspondence between curators and data providers is required. the loading scripts, as well as the rest of the code, are publicly available.

statistics
prior to the prediction model fitting, phenotype data are preprocessed as follows: for individuals evaluated in randomized complete block design , alpha lattice and augmented incomplete block designs, genotype effects are calculated using nlme r package’s lme function  <cit> . genotypes are fit in the model as fixed effects whereas replications and/or blocks are fit as random effects. the model is fit by restricted maximum likelihood . when trials have multiple phenotypic values per individual, for example when replications are completely randomized or no experimental design was stored in the database for the dataset, or multiple trial datasets were combined, an arithmetic mean for the individual is used. individuals with missing phenotype values are omitted.

currently, when multiple trials are selected to combine individuals and create a training population, first genotype effects or arithmetic phenotype mean, depending on the trial design, are calculated for the individuals within each trial. then the genotype effects or arithmetic means are averaged across trials to create a single phenotype value for each individual.

by default, all missing marker values are imputed using k-nearest neighbors  method, from the imputation r package . however, we have not tested the effect of this method on the accuracy of a model. it is recommended that missing marker values are imputed prior to loading the marker data to the database, as is now practiced on cassavabase.

the genomic prediction modeling is univariate and based on ridge regression best linear unbiased predictor  method  <cit> , as implemented in the rrblup package  <cit> . the mixed.solve function, a linear mixed-model equation estimates marker effects and gebvs. gebvs are derived from the realized  relationship matrix of individuals calculated from marker genotypes. the kinship.blup function, gblup, which uses mixed.solve, is called to predict gebvs of selection candidates. given preprocessing of phenotypes, a simple linear model for rr-blup applies: y=μ+g+ε  g∼n <dig> kσg <dig>  ε∼n <dig> iσε <dig> 

where is the vector of preprocessed phenotypes, μ is the population mean, g is the vector of genetic values, and ε is the vector of residuals. k is the additive  relationship matrix calculated from marker genotypes. σg <dig> and σε <dig> are the additive genetic and error variances, respectively. the vector of genetic values is the sum of the additive genetic random effects and is assumed to follow a normal distribution. from these parameters, narrow-sense heritability h <dig>  <cit>  is calculated using h2=σg2σg2+σε <dig> 

to estimate model accuracy, a 10-fold cross-validation is performed. the training dataset is randomly divided into  <dig> equal sets or folds. in ten separate analyses, each fold is used as the validation set while the remaining nine folds are used to train the model. a correlation analysis between the gebvs and the observed phenotype values of the validation sets is performed and the average correlation value of the  <dig> tests estimates the model accuracy.

usage
solgs is web-based and runs on a central server. after loading the relevant datasets into the database, breeders need only an internet connection to access the tool, which in this case is hosted at http://cassavabase.org/solgs. an intuitive and user-friendly workflow guides breeders to perform the gs modeling, validation, and prediction of gebvs. with essentially mouse-based input, breeders proceed through the workflow, visualize and download the results. below, we demonstrate the analysis workflow with three use cases: trait approach, trial approach, and custom list approach .

use case 1: trait approach
creating a prediction model
this approach can be useful, for example, when breeders are about to initiate a breeding program to improve certain traits for a target environment and want to identify breeding material with superior breeding values for the traits to use in parental selection. assume also that they have no prior knowledge of the trials or locations the traits were evaluated.

in this scenario, breeders can search the database with the names of the traits of interest, one trait at a time, e.g. ‘dry matter content’, from the tool’s homepage . they will get a list of training populations and trials containing individuals with genotype data and that are phenotyped for the trait of their interest . in principle, all individuals in a trial with phenotype and genotype data can be used to create the prediction model for the trait. therefore, they can choose a trial or combination of trials, relevant to their target environment, and include all individuals in fitting the model. as a result, they will get the prediction model, its accuracy value, heritability of the trait, the gebvs of all the individuals used in the model, additive genetic effects of each marker, and a list of relevant selection populations to which the model can be applied to predict their gebvs for the trait. the gebvs, visualized in a scatter plot, can be explored interactively by mousing over or zooming into the plot and downloaded in text format. this is demonstrated in figure  <dig>  which shows an example analysis output from a prediction model for the trait ‘dry matter content’ evaluated in a cassava training population called ‘nacrri cassava training population’. additional diagnostic outputs include descriptive statistics , scatter and frequency distribution plots of the phenotype data used in the model  and scatter plot of the gebvs against the phenotype values as deviations from the mean .figure  <dig> 
example of single prediction model output. a single trait model output includes model summary , a graphical representation of the phenotype data , model accuracy , the gebvs of individuals in the training population , and marker effects . from the same model page, breeders can apply the model to predict gebvs of selection populations . gebvs can be viewed in the browser using interactive graphs and be downloaded in text format.
graphical representation of phenotype data used in a model. panel a shows an example interactive scatter plot of the phenotype data used in the model, where as panel b displays the frequency distribution of the same phenotype data.
relationship plots. panel a shows an example phenotypic correlation among traits in a training population. panel b shows the relationship between the gebvs and phenotype values  for a trait in a training population. mousing over a data point in both plots shows the data for the corresponding coordinates.



estimating gebvs of selection candidates
suppose the breeders are further in their breeding programs and have selection candidates with genotype data only which are stored in the database. they want to estimate the breeding values of the selection candidates for the trait using a prediction model and advance superior performers to the next cycle of selection using the estimated breeding values.

the first step is to choose a training population and generate a prediction model to use as described above in use case  <dig> . once on the prediction model web page, they will get a list of all relevant selection populations in the database composed of individuals associated with the training population. only selection populations genotyped by markers matching the ones used to genotype the training population will be shown . additionally, if breeders have a custom list of selection candidates, they will programmatically also appear on the prediction model web page, when logged in to their user account . to predict the breeding values of all the selection candidates for the trait, they click the population name or the ‘predict’ link; a display of the trait name indicates the analysis result is ready, which can be viewed by following the link. the resulting gebvs of the selection candidates are visualized in a scatter plot and the data can be viewed interactively by mousing over or zooming into the plot. the whole gebvs dataset is also downloadable in text format.

use case 2: trial approach
creating a prediction model
this approach is useful when breeders know their traits of interest were phenotyped in one or more trials of a training population. it can be used when they want to search for trials or training populations relevant to their target environment. this approach is also useful when breeders want to estimate gebvs for multiple traits simultaneously.

for this approach, breeders can browse and select a trial, a combination of trials, or existing training populations in the ‘select a training population or create a new one using one or more trials’ section on the homepage of the tool . if they select multiple trials, individuals from all trials and with common traits phenotyped are combined. next, a ‘training population’ webpage, with all traits phenotyped in the chosen trial or common traits in the case of combined trials will be shown . from this webpage, they can select the trait for which to fit prediction model. if they select a single trait, then they will obtain the same model output and workflow to predict gebvs of selection candidates as shown in use case  <dig> .

if breeders select multiple traits, e.g. traits ‘cassava brown streak disease leaf incidence’, ‘dry matter content’, and ‘fresh root weight’ from the ‘nacrri cassava training population’ , a prediction model for each trait will be created simultaneously. each model’s summary and utility features are presented on a new web interface . on the webpage, a summary of each model including prediction accuracy, trait heritability and a link to the detail page of each model is displayed . following the links of each trait model, they will see in detail the respective model results and workflow as described in use case  <dig> .figure  <dig> 
example of multiple prediction models output. panel a shows a list of models simultaneously fitted for multiple traits from a single training population , with their correspoxnding accuracy and heritability of the traits. detailed results of each model can be viewed by clicking the trait names . in panels b and c are lists of selection populations that the models can simultaneously be applied to estimate the gebvs for the respective traits. display of a trait name indicates the prediction for the trait is done. in panel d, the selection index calculator is shown for individuals, from training and selection populations, with gebvs.



also on the multiple models page , breeders will see selection populations on which the models can be applied to, section c is visible only when logged in. this enables them to simultaneously apply all the models on a selection population and estimate gebvs of the selection candidates for each trait, which adds efficiency and flexibility to the gs process.

from the single trait model page, breeders can obtain the gebvs of a trait and use it for tandem selection. however, they are most likely to select individuals based on their performance on multiple traits as revealed by a selection index. to facilitate this, when gebvs are estimated for multiple traits, they can use a selection index calculator  on the multiple models page. with this tool, they can assign relative weights to each trait, compute the selection index for each individual and download the result.

when planning to improve traits, it is important to know if there are correlations between the traits of importance. this can help in understanding how selection of one trait can influence the selection of another trait. hence, phenotypic correlation coefficients  are computed for traits evaluated in a trial and graphically presented. by mousing over coordinates in the correlation heatmap breeders can learn the strength and magnitude of the relationship between any pair of traits.

use case 3: custom lists approach
in the above two cases, when building a gs model a whole set of individuals from a trial or multiple trials is used. there are scenarios, however, when breeders may want to cherry-pick individuals evaluated in a trial or multiple trials and create a prediction model based on the custom list of select individuals. alternatively, breeders may want to apply a prediction model and estimate gebvs for a custom list of selection candidates.

on cassavabase, a ‘lists’ tool  allows breeders to compose custom lists of individuals, which can be used for training and selection populations. the lists are stored in the users account and persist between log-ins. the individuals for a training population can be selected on an observation unit basis, e.g., their plot identifier, whereas for the selection candidates the genotype name can be used. to build a prediction model using a training population from a custom list as input, breeders can go to the ‘select a list-based training population or create new’ section on the gs tool home page . once they select a custom training population, a list of traits evaluated on the custom training set will be shown. they can then individually or simultaneously fit prediction model for their selected trait. the rest of the workflow for this approach is as described in use case  <dig> for the trial approach.

prediction of gebvs for a custom list-based selection population is the same as for trial based selection populations as described above in use case  <dig> and  <dig>  to estimate gebvs of a custom list-based selection population, they can go to a relevant model output page, where their custom selection population will be shown, and apply the model.

RESULTS
solgs makes gs data management, analysis, visualization and sharing user-friendly and efficient for breeders, as demonstrated using its implementation on the http://cassavabase.org/solgs. the application depends on a generic, flexible, data storage relational database schema that can make the tool relevant in any breeding program implementing the gs approach. once relevant data is in the database, data analysis, visualization and sharing is a matter of point-and-click on an intuitively designed workflow.

the tool provides three approaches to choose a training population for fitting a prediction model.  with a trait in mind but little knowledge about what individuals were genotyped and phenotyped for the trait or in what trials they were phenotyped, breeders can search the database using the trait name and use the individuals in one or more relevant trials to build the prediction model for the trait.  alternatively, they can browse the list of trials with phenotype and genotype data and select one or more trials relevant to their target environment or selection candidates.  additionally, they can also compose and use a custom list of individuals, known to have phenotype and genotype data in the database. approaches  <dig> and  <dig> are more efficient options in that breeders can  see all traits evaluated in the chosen trial and study their correlation and thus decide efficiently on what traits to focus,  build models for multiple traits at once,  simultaneously apply multiple models on selection candidates to predict their gebvs for the respective traits, and  use the built-in selection index calculator.

breeders at later stages of selection cycles predict gebvs for their selection candidates by first deciding on what training population to use for the prediction model fitting as described above. once the model are generated, on the model page they will automatically see the relevant selection populations listed. a click on a selection population predicts and generates the gebvs of the candidates using the model.

the graphical representation of data in the browser enables breeders to interactively explore the input and output of a model. the analysis result is also downloadable in text format.

several statistical models are used for genomic prediction, including rr-blup, bayesa, bayesb  <cit> , and bayesian lasso  <cit> . lorenz et al.  <cit>  have reviewed the differences among the models including their effects on prediction accuracy. yi and jannink  <cit>  suggest a multivariate approach for genomic selection of multiple traits to improve prediction accuracy on low heritability traits genetically correlated to high heritability traits. currently, the solgs tool implements a univariate rr-blup method, which is the most common method  <cit> .

there are some public efforts to build bioinformatics infrastructure for gs. a united states department of agriculture  database stores only genotype data of dairy cattle from a single snp array for use in genomic selection and animal tracking  <cit> . the triticeae coordinated agricultural project , usda, is developing a web portal  for accessing and analyzing gs data for barley and wheat generated by the project. an international crops research institute for semi-arid tropics  project is also developing a desktop application called ismu  <dig>  for snp and gs analysis with methods including rr-blup, bayesian and random forest methods  <cit> . however, the application is for local use only and depends on the user’s computer file system for data storage. this limitation creates challenges in a long-term storage, community access, analysis and data sharing. also often, project-centric web-portals that use custom-designed database schemas are difficult to adapt to new projects.

solgs relies on a generic, modular, flexible database schema for all gs data storage that can be employed for any organism. the schema is developed by a community of curators from several public databases and is already implemented by the solanaceae genomics network  <cit> , cassavabase , genome database for rosaceae , cool season food legume genome database  <cit> , vectorbase  <cit>  and knowpulse . therefore, the solgs web application can be integrated easily into websites that use the nd database schema as backend for their data storage.

the application can serve as a medium for community data and knowledge exchange, similar to the functioning of the sgn community annotation  <cit>  and qtl analysis and linking to genomes tools  <cit> . depending on data access privileges, solgs can facilitate web access and exchange of data on breeding material among a community of researchers. sharing gs output can be done conveniently through exchanging model output page links or data downloads.

in the near future, we plan to integrate more features into the application to enhance the decision-making efficiency and capability of gs breeders. we will calculate superior progeny values of individuals based on expected mean values of progenies, expand the univariate rr-blup modeling into multivariate analysis, and run genetic correlation analysis and principal component analysis of individuals based on their genotypes. depending on the availability of r packages, we will add more modeling options such as the bayesian methods and supervised classification algorithms. we will add algorithms to preprocess phenotype data from experimental designs newly added to the database. we will write a comprehensive user manual and tutorials. to speed up the prediction process, we will parallelize analyses.

CONCLUSIONS
solgs is a web-based tool for genomic selection. it has an intuitive workflow for choosing a training population on which to fit a prediction model and estimating gebvs of selection candidates. model input and output is visualized graphically and can be interactively explored or downloaded in text format. its dependence on the generic, flexible, chado nd database schema, for its data storage system, makes the tool adaptable to wide range of gs breeding programs.

availability and requirements
project name: solgs, genomic selection tool.

project home page:http://github.com/solgenomics; http://cassavabase.org/solgs.

operating system: platform independent.

programming language: r, perl, mason, javascript, d3

other requirements: internet connection, a browser.

any restrictions to use by non-academics: none.



additional files
additional file 1: 
solgs homepage: web-interfaces for choosing a training population to create a genomic prediction model. from the tool’s homepage breeders decide what individuals to use in their models in three ways. the first method, shown in panel a, uses a trait name to search the database for individuals phenotyped for that trait and select the individuals from any number of trials . a second way  is to search for a training population or trials of interest and use the set of individuals evaluated in a trial or combination of trials. a third way  is to make a custom list of individuals using cassavabase’s ‘list’ feature.

additional file 2: 
example of a list of trials in all of which a given trait was phenotyped. when breeders search using a trait name for phenotyped individuals to create a training population and use in a prediction model, they get a list of relevant training populations or trials. all individuals from a trial or combination of trials can be used.

additional file 3: 
example of training population detail page. from a training population’s page, breeders can select any number of traits and simultaneously fit models for them. they can also study the phenotypic correlation among the traits .



competing interests

the authors declare that they have no competing interests.

authors’ contributions

iyt conceptualized, designed and developed the algorithms, workflow and interface for the analysis and drafted the manuscript. jde and nm wrote genotype and phenotype data loading scripts and loaded the data to the database. ce, iyr, pk, and rk provided data for training the tool. jlj provided scientific advice. lam oversaw the development of the tool. all authors contributed in discussions and approved the final draft of the manuscript.

