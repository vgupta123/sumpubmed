BACKGROUND
uncovering the relationship between the conserved chromosomal segments and the functional relatedness of elements within these segments is an important question in computational genomics. it is often suggested that regions with similar gene content among different species are evidence for phylogenetic relationship and trace through evolution the inheritance of function from a common ancestor. within one genome, the presence of large duplicated blocks may be due to the ancient large-scale or whole genome duplication, while presence of segments with homologous genes, named conserved gene clusters in multiple genomes more likely indicates an evolutionary constraint for a functionally related group. our primary contribution is a local sliding-window algorithm that starts from an existing protein family classification and produces two results: first, concerved gene clusters, and second, a subdivision of families into orhtologous subgroups. our approach can be seen as using conserved gene clusters in order to sift through the family structure to uncover orthology. we evaluate the biological relevance of our approach on the example of protoploid yeasts  <cit> .

a number of studies indicate that regions of conserved homology among multiple species may result from functional pressure to keep these genes close, but it may also be conserved because the genomes under study have not sufficiently diverged. for the former, the most well known examples are that of operons in prokaryotes  <cit> , but also the existence of functional interactions  <cit>  and similar expression patterns  <cit>  in closely located genes. for the latter, existence of conserved gene clusters is the computational basis for ancestral genome reconstruction  <cit>  and search for ancestral homologs among genes in the same family  <cit> . orthologs are homologous genes related by speciation  <cit>  which retain the same functionality as their common ancestors. homologous genes related by duplication within one lineage are called paralogs and generally differ in functionality  <cit> . a number of papers introduce algorithms to compute conserved gene clusters and orthologous groups, see for example,  <cit> . these approaches vary on a number of parameters. first, there are authors who consider strictly conserved chromosomal segments with similar gene order and orientation  <cit> . second, come the approaches where one considers conserved contiguous regions but without co-linearity  <cit> . third, the authors relax the definition of conserved regions by allowing gaps  <cit> . four, paralogous gene copies within one chromosome are allowed in order to explore many-to-many homologous relationships  <cit> . finally, some authors study the effect of varying the gap between adjacent neighbors  <cit> .

in this paper we start from the notion of gene teams introduced in  <cit> . this model allows only one copy of a gene on a given chromosome. we relax this restriction by following the approach of homology teams defined in  <cit> . furthermore, we set the gap threshold not only for adjacent genes, but by requiring the distance for any two genes considered as being neighbors to be smaller than a certain threshold. a similar choice was made in  <cit> . we call the obtained gene clusters synteny teams.

our syns  algorithm refines existing families into orthologous sub-families, by analyzing the neighborhoods around the members of a given family with a locally sliding window. this is done for all pairs of chromosomes in multiple genomes on which family members appear. the pairwise conserved contiguous segments are agglomerated by relying on a partial homology and biological criteria introduced in  <cit>  between segments. this results in larger conserved segments that we call syntenic zones. we evaluate our algorithm on the existing homologous families for five genomes of the hemyascomycete yeasts from the genolevures database  <cit> . indeed, there already exists a sub-classification of these families into orthologous sub-families  <cit>  that has undergone expert validation and thus can be used as a reference point for the evaluation of biological relevance of our results. we further illustrate the results of our method for the particular case of the pdrp  phylogenetic subfamily of abc transporters that has been manually analyzed in  <cit> .

methods

in this section we define the notion of unordered conserved gene clusters that allows for paralogous copies and gaps on multiple genomes. following the work of  <cit> , we allow one homologous gene to appear more than once in one chromosome. we refine the approach of homology teams  <cit>  by distinguishing between orthologous and paralogous copies of genes. large syntenic zones are built my merging clusters based on genes common among them instead of directly merging the ordered chains with overlapping families as in  <cit> . for mathematical notations and examples in a textual format we follow  <cit> .

definition  <dig> a chromosome is defined as a pair c = , where Σ = {f <dig>  f <dig>  …, fm} is the set of homologous families and g =  is an ordered sequence of genes. each gene gi ∈ g is a couple , where pi is the position of gene gion c and gibelongs to some homologous group fi ∈ Σ.

here, Σ is the alphabet for any chromosome c and pi is an integer. when it is necessary to indicate to which chromosome belongs a given gene, this is done by a subscript: c.

definition  <dig> given a chromosome c, with two genes gi =  and gj = , the distance between gi and gj is defined by Δ = |pi– pj|.

example  <dig> let c1and c2be two chromosomes over the same alphabet Σ = {f <dig>  f <dig>  f <dig>  f4} of homologous families with genes on c1being , , , , , and on c2being , , , , . this is denoted by:

c <dig> = 〈f2f1*f4**f3f1〉,

c <dig> = 〈f1f2f2f3*f4〉.

asterisks stand for genes that are unassigned to homologous groups; notice that * is not part of the alphabet Σ.

a gene subset g′ ⊆ g induces the subset of families Σ′ denoted by Σ such that fi ∈ Σ′ if and only if there exists gi ∈ g′ such that gi = . a set of genes g′ from the same chromosome, forms a chromosomal segment s =  with or without gaps. when it is clear from the context, we will assimilate a set of genes g′ with the corresponding chromosomal segment.

for example, in the case of g′ = {, , } and alphabet Σ′ = Σ = {f <dig>  f4}, g′ defines a chromosomal segment with gaps on c <dig> = 〈f2f <dig> * f <dig> * *f3f1〉. this segment g′ is non-contiguous on c1; the gaps correspond to ,  and .

definition  <dig> a chromosomal segment s =  is contiguous if for any two genes gi =  and gj =  from g′ and any psuch that pi <p <pj, either the gene g =  at the position p belongs to g' or this position corresponds to an asterisk. otherwise, the segment is said to be non-contiguous for example, g′ = {, , } on c <dig> = 〈f2f <dig> * f <dig> * *f3f1〉 forms a contiguous segment.

synteny teams
two genes gi =  and gj =  on the same chromosome are considered to be neighbors when Δ <δ for a given threshold δ >  <dig>  for a gene gi, we denote the set of neighbor genes ni to be centered around it, that is ni = {gk =  | pi – ⌊δ/2⌋ ≤ pk ≤ pi + ⌊δ/2⌋}.

definition  <dig> a chromosomal segment s is called a δ—segment if every pair of genes of s is separated by a distance smaller than δ, that is s = {gi | ∀gj ∈ s, Δ <δ}. a window w is a contiguous δ-segment.

definition  <dig> we say that Σ′ ⊆ Σ is a δ—subset if there exists at least one δ—segment s′ =  such that Σ' = Σ. we say that s' is the witness of this δ—subset.

example  <dig> for δ =  <dig>  the δ—subsets on chromosome c <dig> = 〈f1f2f2f <dig> * f4〉 are the following:

- {f <dig>  f2} as witnessed by , ), , ), and , , );

- {f <dig>  f3} as witnessed by , ), , ), and , , );

- {f <dig>  f4} as witnessed by , ).

definition  <dig> let Σ be the set of homologous families over a set of chromosomes c. we say that Σ′ ⊆ Σ is a δ—cluster if Σ′ is a δ—subset for all chromosomes in some c′ ⊆ c, where |c′| ≥  <dig>  we say that the set of genes  

witnesses the δ—cluster Σ′.

a witness s is thus a set of all genes that participate in the segments witnessing the relevant  the corresponding witness set s has genes belonging to at least two different chromosomes and  there does not exist a δ-cluster Σ′ with a witness set s′ such that

example  <dig> let c <dig>  c2and c3be chromosomes as shown in figure <dig> 

c <dig> = 〈f <dig> * *f5f4f <dig> * f2* f5f4〉

c <dig> = 〈f1f <dig> * *f3*f4f5f <dig> * f5〉

c <dig> = 〈f <dig> * f <dig> **f5*f1f <dig> * f5〉

let .

c <dig> = 〈f <dig> * *f4* f6f6f7f8f9〉

c <dig> = 〈*f5* f3f6* f2f4f8f7f9〉

c <dig> = 〈f4f8f4f7f8f8* f8f2〉

let c <dig>  c <dig>  c <dig>  c <dig>  c <dig> c <dig>  c <dig>  c3} and Σ <dig> = {f <dig>  f8} for witness s <dig> = {c <dig>  c <dig>  c <dig>  c <dig>  c3}. notice, that Σ <dig> ∩ Σ <dig> = {f8} ≠ ∅and s <dig> ∩ s <dig> = {, } ≠ ∅. we obtain one non-trivial δ—zone {f <dig>  f <dig>  f7} by agglomerating δ—syntenies Σ1and Σ2based on the transitivity . notice that this leaves the gene c <dig>  out of the δ-zone. the transitivity relationship in the syns algorithm combines each pair of two δ—syntenies sharing at least one witness into one δ-zone. the notion of a δ—zone aims at uncovering even distant evolutionary relationships based on conservation of gene content within neighborhoods. it is slightly amended based on the following two considerations.

 <dig>  several paralogous genes may exist on the same chromosome. when two or more paralogs appear within one window of size δ, we include them in the same witness set of a δ-synteny since it is not possible to computationally distinguish between them.

 <dig>  it may happen that two distinct δ-syntenies share only one paralogous gene. this is what we call a weak bond. creating a δ-zone based on a single gene intersection may either lead to a δ-zone that is phylogenetically valid or may create an erroneous result .

definition  <dig> given a δ—synteny teamand its witness set s = {si, sj} we say that s forms a weak bond if |si ∩ sj| =  <dig>  we further define g = si ∩ sj to be the witness of a weak bond.

the δ—zone {Σi, Σj} resulting from a weak bond may be erroneous. we rely on phylogeny to solve this issue. we consider a total order over all the species under study defined by phylogeny: a ≺ b if species b has diverged from the common ancestor earlier than species a . when no other witness from a other than g exists, we split the erroneously obtained synteny in two parts: one that contains the orthology relationships within a given family f and another one that keeps the supposed paralogs. the details of how this is done are presented in results section.

definition  <dig> letbe a δ— synteny team over the witness set s = {si, sj} such that |si| > |sj| and let g = si ∩ sj be the witness of a weak bond. if g is from the biggest species according to ≺ in sj, we say that siwitnesses a maximal orthologous c <dig>  c <dig>  c <dig>  c3} and Σ <dig> = { f <dig>  f8} with witness s <dig> = {c <dig>  c <dig>  c <dig>  c <dig> c <dig>  c3}. indeed, {c2} is the witness of this weak bond. since c <dig> ≺ c <dig>  then Σ2is the maximal orthologous δ-synteny with witness s <dig>  while Σ1is the one with the paralogous copy of f <dig> . the set s1becomes members of a family are split into an orthologous and paralogous subsets present in different syntenies. at the end of our procedure, only the largest orthologous c2} is the witness of a weak bond between the δ-syntenies {f <dig>  f2} and {f <dig>  f8}. colors indicate the homology relationship. connections indicate the relevant δ—clusters. crossed box indicates the witness of a weak bond.

syntenic teams algorithm
in this section, we present the syntenic teams  algorithm which computes δ—zones in multiple genomes. in previous work gene teams between two chromosomes of size m and n are computed by an olog <dig> algorithm consisdering only one-to-one homologous relationships  <cit> . the approach by  <cit>  solves the ordered gene clusters problem by proposing a directed acyclic graph model and an np-hard longest path solution; results contain maximal but also non-maximal orthologous clusters. our approach relies on the same sliding-window general approach as in  <cit> . however, we gain in time efficiency by limiting the sliding of the window only around positions of family members. given a set of families Σ and a predefined window size δ, we examine neighborhoods of each family f ∈ Σ in all chromosomes. for all genes of f including paralogous copies, we consider a neighborhood from –δ to +δ around them. this neighborhood is examined by a sliding window of size δ and we form sets of genes corresponding to families in a given window position. these sets are intersected to look for common gene content if they belong to different chromosomes. the intersections define synteny conservation within the family neighborhoods by using definitions in methods section. we further look for transitivity among δ—syntenies and build  the two clusters define a valid  and b  are considered to be plausible from the evolutionary perspective, while case c  is difficult to explain. different colors represent the orthologous and paralogous δ-syntenies emerging from these cases. vertical links represent synteny while horizontal arrows represent the weak bond.

time complexity
gcfinder
ordered
k = #genes, d = window size
d = max #genes in a window
evaluation of 
RESULTS
the genolevures database provides families of proteins across the phylum of hemyascomycetous yeasts. to evaluate the performance of our algorithm, we have executed it on the existing families from the genolevures release  <dig> candiate  <dig>   <cit> ,  <cit>  with  <dig> families covering  <dig> protein coding genes from five protoploid yeast species  <cit> .

comparison with other methods
the critical window-size parameter δ of syns was set to  <dig> for all experiments. this value was obtained in order to match our results with the previously defined and expert validated orthologous subgroups  <cit> . we have compared the orthologous groups obtained by syns on the yeast data to those obtained by the following methods: coco-cl  <cit> , multiparanoid  <cit>  and orthomcl  <cit> . table  <dig> shows the numbers of orthologous groups classified by these methods. orthomcl  <cit>  was run with default inflation index=  <dig> , e-value cut-off= – <dig> and percent match cut-off =  <dig> values starting from input fasta files. coco-cl was run recursively starting with fasta sequences with boostrap threshold score=  <dig> and split score=  <dig>  and using clustalw for multiple sequence alignment. multiparanoid was run using default parameters , using blosum <dig> matrix for blast alignments. table  <dig> shows the total number of classified proteins and the total number of orthologous groups detected by syns and these algorithms using the original genolevures families as a baseline  <cit> . in comparison with the sons method, the syns classifies a comparable number of proteins, but generates more orthologous groups, implying that these groups are more fine-grained.

we compare the orthologous groups between the syns method and those obtained by other algorithms in table  <dig>  to compare two classifications we first look at how many groups are identical between two methods  and compute the similarity value  over the intersection of the covered protein sets . second, we analyze the differences between two classifications. for these we report the number of proteins that are classified only by the syns  when compared to those only classified a given method . the remaining differences are classified according to granularity: a split when a group obtained by a given method is split into multiple subgroups by the syns algorithm, a merge in the opposite case, and messy when the split/merge relationship is complicated. we further analyze the differences with respect to sons classification case by case . we have found that in the case of splits between the resulting groups  and messy events  there is no clear-cut qualitative difference. however, for these  <dig> cases more functionally plausible groups can be obtained by syns when using a smaller window size δ =  <dig>  overall, syns method appears to be the best match with the curated sons results  <cit> , while relying on a clear mathematical definitions and having satisfactory running time.

analysis of two protein families
we illustrate the functional relevance the syns algorithm by considering the classification of pdrp  subfamily performed in  <cit> . this is a subset of the pdr proteins from the gl3c <dig>  genolevures family. we compare this manual analysis with the results obtained automatically by sons and syns algorithms.

seven sons, six syns and seven groups obtained by manual curation provide hypothethis on the evolution of this protein family. the manually curated orthologous groups are confirmed by gene cluster analysis. but in some cases the results differ. groups p <dig> through p <dig> in table  <dig> denote four orthologous groups over five species annotated in  <cit>  according to their s. cerevisiae members, namely pdr12p group , snq2p group  and pdrp5p/15p group . groups p <dig> through p <dig> in table  <dig> contain genes whose relationship to pdr5p/15p is based on phylogenetic evidence only  <cit> . three tandem gene repeats appear in ergo , klla  and sakl  and are found in a similar neighborhood  <cit>  in groups p <dig> and p <dig> 

comparatively to the sons classification, our approach proposes a more conservative classification for these proteins into orthologous groups. indeed, sons exclude zyro0d17710g from the snq2/ynr070w phylogenetic cluster, while re-grouping the remaining proteins belonging to p <dig> and p <dig>  moreover, according to  <cit> , sakl0f04312g belongs to the aus1p/pdr11p group which has no shared neighborhood in pre-wgd five species. thus, it is not surprising that this gene is missing in the syns classification .

a similar analysis is done for the gl3c <dig> family that has  <dig> members and four different functionally annotated groups. figure  <dig> illustrates the evolutionary pattern based on the combination of phylogenetic analysis and functional annotations of this family. sons algorithm produces  <dig> orthologous gene clusters, while syns generates  <dig> clusters functionally more relevant. both sons and syns successfully classify the l-ornithine transaminase  group . however, sons classification fails to distinguish the ygr019w uga <dig> gamma-aminbutyrate  transaminase group from the ynr058w amino-pelargonic acid aminotransferase  group. on the contrary, syns method separates the cluster having the ygr019w uga <dig> gene according to its functional anotation. our algorithm also succeeds to correctly distinguish the single orthog gene clusters from the ygr019w uga <dig> group. for the yol140w arg <dig> acetylornithine aminotransferase group, both sons and syns algorithms provide similar conserved gene clusters. however, sons erroneously mixes some genes of this group with ygr019w uga <dig> cluster and ynr058w bio <dig> cluster, whereas syns algorithm succeeds to distinguish them. the combined functional annotations and neighborhood analysis support the evolutionary pattern illustrated in figure  <dig> for the gl3c <dig> family. therefore we can conclude that the final δ-zones in our algorithm may preserve a functionally meaningful conserved gene clusters.

CONCLUSIONS
the double goal of this study is to identify locally conserved gene clusters and to use them in order to subdivide an existing family structure into orthologous groups. to this end, we define a model for unordered local synteny and propose an algorithm to identify conserved gene clusters and their division into orthologous and paralogous clusters among multiple genomes. to validate our approach we have executed our method for the five hemyascomycetous yeasts and genomes and examined the conserved non-overlapping gene clusters that arise from each homologous family of genolevures database  <cit> . our approach shows 99% protein coverage for existing homologous groups.

we perform similar comparisons with the existing sons groups  <cit>  over the genolevures families. the 90% similarity between our approach and sons groups indicates that our automatic method comes close to the manually curated results, especially since part of the differences between these groups can be explained by the non-classification of the paralogous conserved gene clusters by sons. this confirms the pertinence of our definition of conserved neighborhoods based on transitivity and phylogenetic constraints that make it possible to include tandem repeats as well as loss, fusions or transpositions of gene copies in chromosomal rearrangements of genomes. the syns method makes it possible to distinguish between orthologous and paralogous conserved gene clusters and thus makes it possible to include tandem repeats as well as loss, fusions or transpositions of gene copies in chromosomal rearrangements of genomes. this implies that the proposed sliding window and partial traversal approach, efficiently produces biologically relevant conserved gene clusters and corresponding orthologous groups with o × c × t)4) worst-case complexity, for a pre-defined window size δ.

competing interests
the authors declare that they have no competing interests.

authors' contributions
conceived and designed the experiments: as, mn. performed the experiments and analyzed the data: as. wrote the paper: as, hs, mn.

