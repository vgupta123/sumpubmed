BACKGROUND
the use of chromatin immunoprecipitation in combination with high-throughput sequencing  has enabled the study of genome-wide mapping of protein-dna interaction and epigenetic marks. by sequencing millions of immunoprecipitated dna fragments in a single experiment, chip-seq outperforms the array-based chip-chip  technology in terms of quality, specificity, and coverage  <cit> , and has the potential to greatly improve our understanding of the mechanisms underlying transcriptional regulation  <cit> . many peak detection methodologies and software tools have been developed for the analysis of chip-seq data since the introduction of the technology  <cit> . although peak detection is important for the analysis of chip-seq data, it is only the first step. additional computational tools are needed to help interpret the genome-wide transcription factor binding and histone mark enrichment patterns revealed by peak detection procedures. we have developed chipseeqer, a comprehensive computational framework that enables broad, but also in-depth, analysis of chip-seq data. the framework includes:  gene-level annotation of peaks,  pathways enrichment analysis,  regulatory element analysis, using either a de novo approach, known or user-defined motifs,  nongenic peak annotation ,  conservation analysis,  clustering analysis,  visualization tools,  integration and comparison across different chip-seq experiments. these components share a common architecture: they take as input a set of chip-seq peaks, perform the defined analysis, and output one or more sets of peaks that can be used by any of the other tools provided. thus, our framework was designed to offer the flexibility required to perform complex analyses by defining custom workflows. in principle, chipseeqer can use peaks generated by any peak-calling program as initial input, assuming these peaks are in a simple and standard format . for convenience, chipseeqer also includes its own fast and accurate peak finding algorithm, previously evaluated and compared with other algorithms in qin et al.  <cit> . details and additional validation of our peak detection algorithm are provided in additional file  <dig>  by analyzing a published chip-seq dataset, we show how the modular nature of the framework can help the users create easily computational pipelines and address sophisticated biological questions.

comparison with related work
although numerous approaches already exist for the analysis of chip-seq data, many of them focus on the peak detection process and provide few or no tools for the interpretation of chip-seq peaks  <cit> . several frameworks for interpreting chipseq datasets have nonetheless been developed, all of which have strengths and limitations. for example, the cistrome project  integrates several analysis tools, such as gene annotation, motif and pathways analysis, and peak conservation. however, users must upload their chip-seq data to the cistrome server, which will be increasingly time-consuming and less practical as the size of chip-seq datasets increases. moreover, feeding the results of an analysis directly into another tool within the same framework can be difficult for some users because each tool supports different input formats. galaxy  <cit> , which is used as cistrome's backend, is a powerful framework but possibly too general for the analysis of chip-seq data. in particular, galaxy does not allow control over several important parameters in chip-seq data analysis, such as the maximum or minimum distance between the peak and its closest gene in the peak-gene association task  <cit> . cisgenome  <cit>  also supports tools for the integrated analysis of chip-seq data, such as annotation of peaks with their neighbor genes, conservation analysis, and motifs discovery. however, cisgenome does not allow the correlation of peaks and their target genes with gene ontology  terms and pathways that could shed light on the biological processes and pathways controlled by the transcription factors  or histone modifications assayed by chip-seq. the gpat program  <cit>  provides systematic annotation of genomic positions in general. it uses gene annotation from different public databases, such as refseq and ensembl, and provides access to the expression status of the corresponding genes from existing transcriptomic databases, or user-generated expression datasets. the limitation of gpat is the lack of other tools for the analysis of chip-seq data, apart from genomic annotation. thus, gpat users cannot perform motif discovery, pathways enrichment, and other analyses that are useful in the chip-seq context. epichip  <cit>  offers gene-based enrichment analysis of chip-seq datasets. in particular, epichip looks for enrichment of the chip-seq reads over the control sample in specific regions of the genes, such as the 5'- or 3'- end, exons or introns. this approach has the advantage of identifying directly the genes that are enriched in the tf or the histone modification of the reference dataset. however, the program lacks in providing further annotation of the enriched regions. the seqminer platform  <cit>  aims at integrating and comparing different chip-seq datasets in terms of read density. the algorithm first estimates for a set of genomic regions  the read density of multiple chip-seq datasets. clustering and visualization methods are then provided to show groups of regions with similar binding features. although this approach is useful to integrate chip-seq datasets, it focuses on the comparison of read density profiles and does not integrate other sources of information, such as the motifs and pathways enrichment or the level of conservation. homer  <cit>  provides a suite of programs originally developed for motif discovery, and later for chip-seq peak detection. although it includes tools for gene annotation, clustering, and visualization of the peaks , it does not support conservation analysis and can only run from the command-line. bedtools  <cit>  is a unix-based collection of utilities that allow common operations on genomic features in general . although the bedtools are designed to provide fast solutions to basic operations on large data volumes produced by dna sequencing, they do not offer computational tools for the functional interpretation of chip-seq peaks . their command-line nature also demands extra effort and computer skills from users. ceas  <cit>  is a stand-alone extension of a web application previously developed for chip-chip data  <cit> , but is also offered through the cistrome framework. the tool provides basic annotation tools for chip-seq data, such as the estimation of peaks distribution across the genome, identification of genes associated with peaks by proximity, and more. however, one drawback of ceas, when using it through the cistrome application, is that it produces graphical representation of the results and does not output lists of peaks that belong to specific genomic categories . peakanalyzer  <cit>  can subdivide chip-seq peaks that have multiple sites of enrichment into smaller peaks; this procedure may facilitate more detailed analysis of individual subpeaks. it also offers annotation functions, and can locate the nearest downstream genes and transcription start sites for each peak. it can also determine overlapping peaks between different datasets. although peakanalyzer allows the user to perform gene annotation, motifs analysis, annotation with functional elements, and comparisons across datasets, it does not support the functional interpretation of the chipseq results through their association with pathways. on the other hand, great  <cit>  is a web application that supports the analysis of functional significance of chip-seq peaks using  <dig> different information sources . importantly, the tool integrates not only proximal but also distal binding events to obtain a gene-based p-value for enrichment  <cit> . however, great does not offer an automated way to retrieve lists of genes and peaks associated with a specific pathway, gene ontology term, or motif. this feature  would enable users to perform further and more targeted analysis on subsets of the initial peaks, which were found to be functionally significant. in contrast, chipseeqer has many advantages compared to these programs. first, it offers a variety of tools that cover not only basic gene annotation, but also a wide range of computational analyses, including motif analysis, pathways enrichment, estimation of conservation, read density analysis and more. second, chipseeqer allows the comparison of multiple datasets based not only on read density profiles, but also on peak binding overlap, and integration with other chip-seq datasets. third, the framework provides a straightforward and effortless connection between the tools; no data format transformation is needed to combine the tools and perform a comprehensive and sophisticated data analysis. fourth, the framework allows the users to control all parameters of the analysis, such as the minimum distance away from transcripts, the upstream distance from transcription start site , the database annotation and more. in addition, chipseeqer runs locally on the user's computer enabling the analysis of very large datasets. finally, it provides a user-friendly graphical interface that can be used effortlessly even by non-expert users.

implementation
software distribution and availability
chipseeqer is available as a set of standalone command line tools. for advanced users, command line tools provide great flexibility and automatability. for less advanced users, we have made these tools available via a graphical user interface , developed using the multi-platform qt framework  <cit> . the bundle  has been tested on linux and mac os x. detailed installation instructions and documentation for all tools included in the framework are also available online  <cit> . our implementation is available as free software, released under the gnu general public license  v <dig>  <cit> .

comparison of genomic intervals
many computations performed in chipseeqer involve assessing overlaps between hundreds or thousands of genomic regions , and therefore, efficient algorithms are needed to quickly determine and characterize these overlaps. in chipseeqer, fast comparison on genomic intervals is performed using interval trees  <cit> , ordered tree structures that store and index intervals with fast querying and processing times, and ensure efficient searching of all indexed intervals that overlap with any given interval or point. an interval tree is an augmented binary search tree: each node contains an interval and also stores the maximum endpoint of the subtree rooted at the particular node. apart from the insert and delete operations that characterize the binary search trees, interval trees also support a query operation that allows searching the tree for overlaps with a given interval. the first step of the algorithm sets the root of the tree as current node. the second step checks if the given interval overlaps with the current node; if not, it compares the low endpoint of the given interval with the maximum value stored at the left child of the current node. if the low endpoint of the interval is lower than the maximum value stored, then the current node is set to the left child; otherwise it is set to the right child. then the algorithm goes back to the first step and repeats the same procedure for the new current node until it finds an overlap of the given interval with the interval stored in the current node, or until the whole tree is explored. of note, we are using a modified implementation of the original algorithm  <cit> , so as not to stop at the first overlapping interval but find all intervals that overlap with the given one. moreover, we use a randomization procedure that takes into account the natural clumping of features  <cit>  to assess the statistical significance of the observed number of overlapping peaks between two peak files. this procedure consists of generating many "random" lists of peaks maintaining peak sizes and number of peaks as well as the chromosomal and genomic distribution of the peaks in the first peak file. the latter means that each random list of peaks maintains the same fraction of peaks in promoter, exonic, intronic, downstream, and intergenic regions as the original peak file. then, for each random peak list, the number of overlapping peaks with the second peak file  is calculated. a p-value is determined by counting the number of times the random overlap is equal to or greater than the originally observed number of overlapping peaks. additionally, the z-score is estimated, representing the distance  betweem the observed number of overlapping peaks and the average number of overlapping peaks expected by chance.

supported formats, annotations, and species
one of the advantages of the framework is the support of different formats that are well-established in deep sequencing experiments, such as sam, bam, eland, extended eland, bed and export. chipseeqer also provides gene-based annotation from multiple sources and databases, such as refseq, ensembl, ucsc genes, and aceview. finally, four species are currently supported, namely homo sapiens, mus musculus, drosophila melanogaster, and saccharomyces cerevisiae. support for additional species can be added to the framework as described in additional file  <dig> and in our online documentation.

RESULTS
chipseeqer user-defined workflows
chipseeqer is a comprehensive and fully integrated framework offering a dry-lab workbench for the processing and analysis of chip-seq data. table  <dig> summarizes the basic tools in the framework along with a short description of their functionality and their availability in the chipseeqer interface. a detailed description of these tools is provided in the chipseeqer modules section. the framework includes a peak detection program as well as tools for performing quality control of the raw reads . however, the most interesting aspect of chipseeqer is the variety of independent analysis modules, all of which have the same structure:  they take as input a list  of peaks in a simple tab-delimited format,  perform a given analysis, and  output one or more peak lists. these modules can be used in any order, since their input and output are peak lists of the same format . thus, the novelty of the framework is the capability to combine these modules and design specific workflows that enable multi-step bioinformatics analyses of chip-seq data, according to the user's objectives and hypotheses. figure  <dig> shows two scenarios that combine some of the chipseeqer modules. these scenarios are indicative examples based on our experience in analyzing several chip-seq datasets, and others could be considered as well. for example, a potential workflow  involves:

the table shows the names of the tools, short description of their functionality and their availability within the chipseeqer interface. this is not an exhaustive list; all available tools are documented online  <cit> .

 running the peak detection algorithm for a tf  chip-seq dataset,

 finding the peaks that have a specific motif  using the chipseeqermotifmatch module,

 identifying the peaks that bind at the promoters of known refseq genes using chipseeqerannotate, and

 performing pathways analysis on these genes with chipseeqeripage, in order to find biological processes in which the given tf is likely involved. another workflow  identifies putative enhancers based on tf and histone modifications chip-seq data. in that case, the intergenic peaks are first detected using chipseeqerannotate, and then the peaks that also overlap with enhancer marks  <cit>  are reported using compareintervals. the corresponding subset of peaks represents putative enhancers; to discover informative regulatory elements within these peaks, unsupervised de novo motif analysis can be performed using chipseeqerfire. finally, the chipseeqercons module can be used to compare the conservation between putative enhancers and random genomic regions, in order to determine enhancers that are most likely to be functional.

use of chipseeqer - example
to illustrate the power and flexibility of chipseeqer, we analyzed a published ets <dig> chip-seq  <cit> , performed in jurkat t cells. ets <dig> is an oncogene  <cit>  and member of the ets family of eukaryotic transcription factors. it is preferentially expressed at high levels in b and t cells, and plays a critical role in t cell activation  <cit> . recent studies based on chromatin immunoprecipitation have shown ets <dig> binding events in both promoters and enhancers in jurkat t cells  <cit> .

ets <dig> binds to thousands of locations and is associated with binding sites of other tfs
our peak detection algorithm identified  <dig>  ets <dig> peaks. we associated these peaks with genes using the chipseeqerannotate module and the refseq annotation . this analysis revealed a large occupancy of ets <dig> peaks at the promoters of the genes , but also that ets <dig> binding occurs on intergenic regions , at least  <dig> kb away from known tss. using the lists of these promoter peaks and distal peaks automatically generated by chipseeqerannotate, we performed "supervised" motif analysis  and de novo motif discovery. in the supervised analysis on the promoter peaks chipseeqermotifmatch module), we determined subsets of ets <dig> peaks that contain motif occurrences for other ets family members   <cit> , using motif weight matrices from the jaspar  <cit>  and uniprobe  <cit>  databases. chipseeqermotifmatch reveals that a large fraction of ets <dig> peaks  contain such matches . the unsupervised analysis  for the distal peaks revealed that multiple motifs appear from the same regions, among which ets-domain motifs , but also motifs resembling binding elements recognized by non-ets related factors . for example, the hlf motif, which is bound by the hepatic leukemia factor and has been implicated in childhood b-lineage acute lymphoid leukemias, was also found in the intergenic ets <dig> peaks. a motif resembling the aml-1a/runx <dig> binding sites was discovered as well using this de novo analysis. runx <dig> is a tf associated with several types of leukemia and is known to bind to t cell receptor enhancers  <cit> . the runx <dig> association with ets <dig> distal peaks led us to look for ets <dig> binding in putative enhancers as described in the next section.

ets <dig> binds to many putative enhancers
to identify and characterize putative enhancers among the ets <dig> peaks, we use the list of distal peaks obtained from the chipseeqerannotate analysis. to better identify enhancers, we also analyzed the cbp chip-seq dataset described by hollenhorst et al.  <cit>  , as well as the chip-seq histone marks datasets of primary cd4+ t cells described by barski et al.  <cit> . cbp protein shares regions of very high sequence similarity with p <dig>  a protein that binds to many enhancers  <cit> . moreover, several studies  <cit>  have suggested high levels of h3k4me <dig> combined with low levels of h3k4me <dig> as a signature for predicting enhancers. our peak detection algorithm identified  <dig> ,  <dig>  and  <dig>  enriched regions for cbp, h3k4me <dig> and h3k4me <dig> datasets respectively. in order to locate the putative enhancers, we looked for the ets <dig> distal peaks that have histone signature for enhancers--presence of h3k4me <dig> and absence of h3k4me3-- and are also co-occupied by cbp. using the chipseeqer compareintervals module, we identified such peaks . first, we determined all ets <dig> distal peaks  that also overlap with at least one peak in the h3k4me <dig> dataset . second we looked for peaks that have absence of h3k4me <dig> marks , and finally, we determined which of the remaining peaks  overlap with at least one cbp peak . statistical assessment of the overlaps described here showed that not all of them were different from chance expectation . however, in what follows, the  <dig> peaks obtained from this analysis are considered to be putative ets1-binding enhancers. we then performed unbiased motif discovery for this set of putative enhancers, using the chipseeqerfire module. this analysis revealed over-representation of two ets domain-related motifs, the elk- <dig> and the c-ets motifs  in the putative ets1-binding enhancers peaks, and under-representation in the random regions. finding these highly enriched motifs in such a small subset of peaks , but not in random regions, shows that the putative enhancers were not arbitrarily identified.

moreover, to examine whether these regions are also conserved , we performed conservation analysis using the chipseeqercons module. one of the capabilities of this module is to determine the conservation profile in and around the chip-seq peaks, using the phastcons scores  <cit> . the conservation profiles in randomly selected regions were also determined, in order to compare the level of conservation between the input peaks and randomly generated genomic regions. after averaging the conservation profiles in the two groups , higher level of conservation was indeed noticed for the group of putative enhancers, as can be seen in figure  <dig>  in this example, we showed how the identification of putative enhancers could be performed in chipseeqer, starting from the distal peaks and progressively filtering them with histone modification enhancer marks and cbp binding. de novo motif discovery and conservation analysis were then performed, which revealed highly enriched ets-domain motifs and high conservation scores for the set of putative enhancers compared to random genomic regions. to further investigate the biology of ets <dig> binding in jurkat t cells, we also looked for potential biological pathway differences between the genes associated with ets <dig> binding peaks in promoters  and with ets <dig> binding peaks in intergenic regions . we used the chipseeqeripage module, in order to find pathways that can discriminate the two groups of genes, . we used the two lists of genes as input, one list for each group. using the gene ontology annotation, we noticed a higher enrichment of t and b cell related pathways  <cit>  in the distal peaks group, such as leukocyte differentiation, lymphocyte activation, immune response, immune system development and others , rather than in the promoter peaks group. we also observed similar results using signaturedb  <cit> , a database of gene expression signatures mainly derived from b and t cells. in particular, we found a significantly higher enrichment of many t cell-related pathways and gene sets in the distal peaks compared to the promoter peaks , such as the signatures "tcell_piind_csadown4x"  <cit>  and "thymic_sp_cd4+tcell_gt_blood_cd4+tcell"  <cit> .

the table shows some of the pathways and lymphoma-related signatures that were found enriched in the distal peaks and the promoter peaks groups. the distal peaks group was highly associated with t cell and b cell related ontologies and signatures, while for the promoter peaks group more general and housekeeping categories were enriched. the gene ontology and the signaturedb gene expression signatures were used for this analysis . the p-values for each pathway for both groups are also shown.

the former signature originates from a study focusing on the signalling pathways network downstream of the t cell receptor  <cit> , explaining the gene expression changes during t cell activation, whereas the latter signature comes from the analysis of phenotypic and functional parameters of t cell differentiation stages by studying human thymocytes, an important organ of t cell production  <cit> . on the other hand, the promoter peaks group was highly associated with more general pathways and gene sets, such as rna processing, rna splicing, metabolic process, proliferation and others . these results are consistent with previous findings  <cit> , where ets <dig> bound intergenic regions were associated with genes involved in t cell specific functions, while ets <dig> occupancy in promoters occurred at genes related to housekeeping functions. using comparegenes, a tool in our framework that allows comparisons on the gene level, we also looked for genes that have ets <dig> peaks in their promoters  and in intergenic regions . this analysis gave us  <dig> genes . one hypothesis that can be formed is that binding of ets <dig> at both promoters and enhancers of these  <dig> genes mediates looping of the distal elements onto proximal promoters. thus, these genes may be regulated by ets <dig> through a chromatin looping event. this prediction can be further tested using chromosome conformation capture based techniques  <cit> . in summary, using the chipseeqer framework on a published ets <dig> chip-seq dataset we showed that:

the table shows the  <dig> genes that were found to have both promoter and intergenic ets <dig> peaks. it is possible that ets <dig> binding at the promoters and enhancers of these genes is explained by looping of the distal elements onto proximal promoters. this hypothesis could be tested using chromosome conformation capture based techniques.

• there is a large occupancy of ets <dig> peaks at the promoters but also at intergenic regions.

• ets <dig> regions are bound by multiple motifs, either from the ets-domain or non-etsrelated .

• specific pathways are preferentially related to genes with ets <dig> binding in promoters or intergenic regions.

• it is straightforward to characterize ets <dig> binding to genomic regions with enhancers signatures .

• it is possible to determine a list of genes that may be regulated by an enhancer-bound

tf, through a chromatin-looping event. although these analyses could have been performed by combining several published tools or custom scripts, in chipseeqer this is fast  and straightforward and does not requiring any programming knowledge. thus, by creating custom workflows that combine powerful computational programs, chipseeqer facilitates the comprehensive and in-depth analysis of chip-seq datasets.

chipseeqer modules
this section demonstrates the diversity and versatility of the framework by presenting basic chipseeqer modules in further detail. a more exhaustive description of these tools is available online  <cit> .

chipseeqerannotate: gene-level annotation of peaks
this module associates a set of chip-seq peaks, given as input, with the closest genes in the genome, and determines where each peak is located in these genes. in particular, chipseeqerannotate classifies input peaks in categories, . this module generates lists of peaks found in each of these classes of genomic regions. this analysis is controlled by default or user-defined parameters controlled by the user, such as the promoter window around the tss and the annotation database. for example, promoters are defined by default as 4kb-long regions, around the tss but not extended further than the downstream extremity of the genes. moreover, chipseeqerannotate reports peaks overlapping with the first intron, since it has been reported that some first introns play a vital role in transcriptional control and splicing  <cit> . the tool also determines peaks not overlapping with any gene part, but found to be at least at a user-defined distance away from known genes . we call these peaks distal or intergenic, because they occur in intergenic regions . the lists of peaks generated by chipseeqerannotate can be directly used in other tools within the framework to perform subsequent analyses. this can be useful to focus further analyses on specific classes of peaks ; chipseeqerannotate lets users extract these subsets of peaks. chipseeqerannotate has other interesting features. it generates a gene-based matrix that summarizes the number of peaks found in each gene part  and can help the user identify quickly the peak binding occurring in their gene of interest. we have also developed tools that merge and combine this matrix output, in order to extract, for example, the genes with both promoter and intergenic peaks. the expected fraction of peaks in different genomic categories  is also provided, based on the fraction of the genome in each of these regions, so that it can be compared to the observed fraction of the input peaks in each category. finally, several widely used gene annotations are supported, such as the refseq, ensembl, ucscgenes, and aceview . this feature enables comparing the peak-gene association results between different databases.

pathways analysis modules
pathways analysis can help elucidate important biological mechanisms associated with genome-wide binding and histone modification patterns. and can be performed after peaks have been associated with genes, as described in chipseeqerannotate. we have integrated two pathways analysis modes in the framework that involve:  looking for a given pathway of interest within the genes associated with input peaks and  looking for any pathways that are enriched in these genes. pathways annotations are obtained from the gene ontology  <cit> , kegg database  <cit> , biocarta pathways  <cit> , the signaturedb online resource  <cit> , and the reactome pathways  <cit> . importantly, both modes generate lists of peaks associated with genes in the query pathway or in the enriched ones. these peaks can then be used as input to other tools in the framework.

 <dig>  chipseeqerpathwaymatch: user-specified pathway analysis
when using this tool, the user first selects which of the input peaks to include in the analysis, based on their association with genes. for example, only peaks that belong to promoter regions can be included . alternatively, all peaks can be included, irrespective of where they reside within gene regions. then, the user either selects the desired pathway from a list of available pathways in the provided pathway database , or directly enters a pathway name . chipseeqerpathwaymatch then finds all genes that belong to the selected pathway and outputs the corresponding chip-seq peaks. these peaks can then be used as input to other modules . the hypergeometric distribution is used to assess the statistical significance of the pathway association: it determines whether the input peaks are associated with more genes in the query pathway than expected by chance .

 <dig>  chipseeqeripage: pathways analysis using ipage
in order to discover highly enriched pathways in the genes associated with input peaks, we use ipage  <cit> , an information-theoretic pathway analysis framework. in ipage, sets of genes are used as input, and pathways that are enriched in each set are reported  <cit> . chipseeqeripage, is the module that integrates ipage within user-defined workflows. as with the previous module, users choose which input peaks to include in the analysis, based on their association with genes. the program then outputs the lists of peaks associated with specific enriched pathways.

regulatory element analysis modules
regulatory element analysis of chip-seq peaks can discover the dna sequence motifs bound by the tf assayed by chip-seq, and/or to find sequences bound by its co-factors. we have integrated two regulatory element analysis modes in the framework:  analysis based on known motifs or user-defined motif patterns, and  de novo motif analysis. both analyses require extracting dna sequences under the peaks from the genome reference sequence. efficient extraction is performed by pre-indexing genomes using the samtools c library  <cit> .

 <dig>  chipseeqermotifmatch: user-specified regulatory element analysis
several software tools support searching for peaks that match a specific motif, but they often have limitations that restrict their usability. for example, in cistrome  <cit>  it is not straightforward to look for a specific motif, since available motifs are not shown to the user . in homer  <cit> , only motifs previously detected by the software are available for searching; the integration with public and popular sequence motif databases such as jaspar that would enlarge the pool of available motifs is limited. chipseeqermotifmatch seeks to overcome some of these limitations. to perform known motif analysis in chipseeqermotifmatch, the user either selects the desired motif from a compiled dataset of ~ <dig> tf binding sites  from jaspar  <cit>  and uniprobe  <cit>  databases, or provides a consensus sequence in the form of regular expressions . in the former case, peak regions are scanned using the berg and von hippel method  <cit>  and a user-defined affinity threshold  <cit> , and peaks containing one or more occurrence of the motif are given as output. additional information such as motif positions within the peak and orientation are also reported. in the latter case, user-specific consensus sequences are used instead of weight matrices, and peak regions are scanned using regular expression matching algorithms from the pcre c library  <cit> .

 <dig>  chipseeqerfire: de novo regulatory element analysis
de novo motif analysis is performed using fire, an information-theoretic methodology for identification and characterization of regulatory elements  <cit> . in order to search for any informative motifs that are highly enriched within the detected chip-seq peaks, background sequences are first created. these background sequences can be extracted either randomly across the entire genome , or immediately adjacent to the peak regions . they can also be extracted so as to preserve the c+g and cpg content of the input sequences using two different options. the "cgi" option estimates the fraction of the original peaks that overlap with cpg islands, and then produces random background regions that maintain this fraction of cpg islands overlap. alternatively, using the "1mm" option, the program calculates for each input peak sequence 1st order markov frequencies and uses these frequencies to generate new random sequences. as shown in additional file  <dig> figure s <dig>  both cgi and 1mm preserve c+g and cpg frequencies of the input peaks. the option that the users should use depends on the question they want to address . after identification of the motifs that best explain the distinction between peak regions and background sequences, peak lists containing each motif are extracted and can be used as input to other tools in the framework, such as pathway analysis tools.

chipseeqernongenicannotate: nongenic peak annotation
the ability to integrate the results of a chip-seq study with existing and publicly available chip-seq is an important. for example, this integration could suggest transcription factor, co-factors or histone modification that should be further explored because of their extensive overlap with a set of chip-seq peaks. in the chipseeqer framework, the chipseeqernongenicannotate provides such capabilities; it can determine the subset of input peaks that overlap with peaks obtained from tf or histone modification chip-seq datasets of the encode project  <cit> , as well as the statistical significance of this overlap . chipseeqernongenicannotate can perform additional integrative analyses. for example, extensive literature has shown that tf binding sites and specific histone modifications can be associated with repeated elements  <cit>  and other nongenic elements, such as cpg islands  <cit> . filtering the peaks based on that type of features could reveal interesting groups of peaks that have the potential to alter and impact gene expression . using the chipseeqernongenicannotate module and track-based data from the ucsc genome browser, users can quickly and easily determine which of their input chip-seq peaks overlap with:  known repeated sequences ,  cpg islands and  segmental duplications. while such comparisons can be performed via the ucsc table browser , chipseeqernongenicannotate facilitates these analyses and allows their integration with other analyses within the framework.

chipseeqercons: conservation analysis
cross-species conservation analysis is necessary in order to discover functional genomic elements  and also to prioritize the most promising genomic elements for experimental validation. for these reasons, we have developed chipseeqercons, a tool that estimates the conservation for a given set of peaks and outputs the peaks whose average conservation score is greater than a user-defined threshold . the most useful aspect of this module, is estimating the conservation level of sequences adjacent to the input peaks, or of randomly selected sequences, thus allowing global assessment of peak conservation.

another interesting feature of chipseeqercons is producing conservation profiles for regions around the summit of the peaks , and for random intervals: the average conservation score is estimated for every n-sized bins of the regions . by plotting the resulting conservation profiles, we can easily compare the level of conservation between the input peaks and randomly generated genomic regions . chipseeqercons uses the phastcons  <cit>  or phylop  <cit>  scores , calculated from placental mammalian genomes or primates.

analysis of read density profiles
the analysis of read density profiles, when combined with clustering methods, can help identify groups of genes with similar binding profiles in their promoters, or groups of peaks that tend to have similar histone modification or tf binding patterns. in chipseeqer, we have developed tools that take as input a set of genomic regions and:  calculate the read density profile of the regions ,  count the maximum or average number of chipseq reads for each genomic region. these tools can also perform rpkm-style read count normalization  <cit>  prior to read counting, in order to compare multiple experiments with different numbers of short reads.

 <dig>  chipseeqerdensitymatrix: read density matrix
chipseeqerdensitymatrix lets the users explore and analyse the average read density profiles, either for user-defined regions around the tss or tes of the genes , or around the summit of the given peaks . for each region, bins of n nucleotides  are created and the average number of reads for each bin is counted. for example, if  <dig> kb regions are extracted around the tss of genes, the result of this module will be a matrix that contains for each promoter the average number of reads for  <dig> bins of  <dig> nucleotides each. clustering the promoters of the resulting matrix is then performed based on their read density profiles, using either the built-in self-organizing map algorithm  <cit> , or by interfacing with cluster  <dig>  software  <cit>  . the results can be directly visualized using postscript/pdf heatmaps produced using our built-in visualization tools or using treeview  <cit>  . lists of genomic regions for each cluster can be exported and then used as input into other tools, in order to answer questions such as "are there any regulatory elements associated with a given promoter binding pattern?" and "which pathways discriminate between promoter binding patterns?".

 <dig>  chipseeqerreadcountmatrix: read count for multiple chip-seq experiments
chipseeqerreadcountmatrix estimates for each of the input peaks the maximum or average number of reads for multiple chip-seq datasets. the result of this module is a matrix that contains, for each of the input peaks, the maximum or average reads count for every chip-seq experiment. similarly, the chipseeqercluster module can be used to cluster the peaks of this matrix based on the reads number across multiple datasets, in order to reveal groups of peaks that share common binding in several tfs or histone modifications. the clusters of peaks can be extracted and used as input into other tools.

integration and comparison of chip-seq experiments
as more and more chip-seq datasets become publicly available, the need for data integration and comparison is becoming essential. such integration can reveal how different tfs cooperate to regulate gene expression  <cit> , as well as the interplay between tf binding and histone modifications  <cit> . the integration between chip-seq datasets can be realized by determining the overlap between sets of peaks. in chipseeqer, we have addressed this need by implementing fast interval tree-based tools for comparing chip-seq experiments at the peak level . these tools can be used to compare sets of peaks, and quickly:  identify overlapping peaks,  merge sets of peaks, or  determine peaks in the first set that do not overlap with any peaks from the second set . moreover, as described in previous section, these tools can assess the significance of the overlap between two sets of peaks using randomization tests that take into account the genomic distribution of peaks. in addition to simply counting how many peaks overlap between two peak lists, we provide tools that can also quantify the extent to which two sets of peaks overlap by estimating the pairwise jaccard similarity coefficient between pairs of chip-seq datasets . the jaccard index is estimated as the number of peaks that overlap between two peak files, divided by the union of the two files. the larger the coefficient, the more similar two datasets are in terms of overlapping peaks . such comparisons can also be performed at the gene level; we have developed similar tools for gene-based comparisons  that can be easily used on the genes-based output of chipseeqerannotate. finally, the annotation of peaks against a collection of encode chip-seq datasets , as well as the read density analysis across multiple datasets , both described in previous paragraphs, were also developed in the context of integration and comparison of multiple chip-seq experiments.

visualization tools
visualization is tightly integrated to all modules of the framework in order to facilitate chip-seq data exploration and summarize the results of each analysis. chipseeqer includes tools for creating ucsc genome browser tracks representing peak location and genome-wide read densities. it also includes tools for drawing pie charts summarizing the genomic distribution of the peaks, creating motif and pathway enrichment tables and conservation plots . the output of clustering read density profiles can be visualized either using heatmaps, or 2d kohonen maps  <cit> . finally, we provide tools  for the visualization of reads density and peaks number in gene parts . the description of these tools and examples of the visualization they provide can be found at the chipseeqer tutorial  <cit> .

discussion
the chipseeqer framework can considerably facilitate the bioinformatics analysis of chip-seq data by providing an integrated suite of computational tools that are fast, easy to use , and can be combined with each other. the variety of tools and the flexibility offered by their parameters  makes it possible to address most biological questions that are often raised when analyzing chipseq datasets. notably, as demonstrated before, chipseeqer users can create personalized workflows in order to perform specific but sophisticated analysis, often requiring integration of multiple datasets .

chipseeqer is a continuously developing project and we are actively working on implementing several additional components. for example, more species will be supported soon , as well as more visualization components. moreover, facilitating the integration of chip-seq data with gene expression data, obtained from microarray or rna-sequencing  experiments, also represents an important avenue for future improvement of the framework.

CONCLUSIONS
in order to fill the gap between the identification of chip-seq peaks and the biological interpretation of the data, we have developed chipseeqer, a comprehensive computational framework that can be adapted to a user's needs and to the hypotheses of a chip-seq study. we showed that using the chipseeqer framework we can perform sophisticated analyses of chip-seq datasets , explore the data from multiple perspectives , and address specific biological questions, such as "how do promoter peaks differ from distal peaks?", "are there genes with both promoter and enhancer peaks?". we believe that this framework will be of great assistance to investigators who wish to perform high-level analysis of genome-wide chip-seq datasets, but do not yet possess advanced computer programming skills.

availability and requirements
chipseeqer is freely available and can be downloaded at http://physiology.med.cornell.edu/faculty/elemento/lab/cs_files/chipseeqer- <dig> .tar.gz the system requirements, instructions on how to install and run the software, and a detailed tutorial are also provided at http://physiology.med.cornell.edu/faculty/elemento/lab/chipseq.shtml the ets <dig> and cbpdatasets used in this paper can be found at the geo , and the h3k4me <dig> and h3k4me <dig> datasets are available at http://dir.nhlbi.nih.gov/papers/lmi/epigenomes/hgtcell.aspx 

list of abbreviations used
kb: kilobase; chip-chip: chromatin immunoprecipitation followed by dna microarray hybridization; chip-seq: chromatin immunoprecipitation followed by sequencing; gui: graphical user interface; rna-seq: rna sequencing; tes: transcription end site; tss: transcription start site; tf: transcription factor.

authors' contributions
egg implemented the chipseeqer gui version and parts of the command-line version, performed the analysis of the chip-seq datasets and drafted the manuscript. oe implemented parts of the command-line version, supervised the project and edited the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
this file describes in detail the quality control analysis tools and the peak detection algorithm, implemented within the chipseeqer framework, as well as performance evaluation results for several tools of the framework.

click here for file

 acknowledgements
the authors would like to thank all members of melnick lab  for their suggestions and ideas during the development of the framework and the elemento lab members  for fruitful discussions. in addition, they wish to acknowledge the three anonymous reviewers, as well as vasileios p. kemerlis, for their suggestions in the revision of this manuscript. this work was supported by the career grant from national science foundation , as well as by startup funds from the institute for computational biomedicine, weill cornell medical college.
