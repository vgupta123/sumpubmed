BACKGROUND
multiple alignment is an important step in various phases of comparative studies of rnas, such as the detection of common secondary structures from a set of homologous sequences and the preparation of an alignment as a query for database search tools including infernal  <cit> . since the discovery of functional non-coding rnas , the necessity for the incorporation of secondary structural information into a multiple rna alignment has been recognized, and many efforts are being made toward this goal  <cit> . secondary structure prediction and multiple rna alignment are closely related to each other. according to gardner and giegerich  <cit> , there are three possible plans to infer common secondary structures from a set of unaligned rna sequences, align-then-fold , simultaneous  and fold-then-align . plan b generally has a higher computational cost than plans a and c.

the sankoff algorithm, which simultaneously performs sequence alignment and secondary structure prediction, is available for plan b. this algorithm is not applicable to real analyses with more than two sequences due to its time complexity, o, where l is the sequence length and n is the number of sequences. even if a virtually optimum pairwise structural alignment were successfully obtained by using variants of the sankoff algorithm or by other algorithms, handling multiple sequences would remain a nontrivial task. the situation would be similar to that of a pure sequence alignment problem, for which the optimum solution is exactly calculated by using a two-dimensional dynamic programming  algorithm  <cit>  in cases with two sequences. with an increased number of sequences, it becomes difficult to obtain the exactly optimum solution. for predicting common secondary structure in multiple unaligned sequences, some sort of heuristics will inevitably be required, since an exact application of plan b is impossible.

judging from previous studies on multiple sequence alignment, obtaining the optimum solution in plan b is not the most important issue, from a biological viewpoint. it is known that the optimum solution of a multiple sequence alignment problem is not always the correct one  <cit> . this suggests that we should pay attention to a biologically relevant objective function as well as to algorithmic techniques for obtaining the optimum solution. this is one of the reasons why various multiple sequence alignment schemes have been intensively studied to date, and why there are no definitive ones yet. moreover, the accuracy of multiple alignment is improved by using information of homologs, probably because homologs make family-specific information available and enrich the profiles used in the multiple alignment processes  <cit> . this point is possibly related to the strange observation, reported in bauer et al.  <cit> , that a purely sequence-based method, mafft-g-ins-i  <cit> , performed better with a growing number of input sequences; in cases with  <dig> or  <dig> sequences, it even outperformed structural alignment methods, except for lara.

since the application of plan b to multiple rnas has both computational and biological difficulties, as explained above, various structural alignment techniques have been developed, partly or wholly incorporating plans a and c. for example, lara  <cit>  constructs a set of pairwise structural alignments by a novel graph-based approach and subjects them, as a primary library, to the t-coffee sequence alignment program  <cit>  to construct a multiple structural alignment. mxscarna  <cit>  is a multiple alignment extension of a rapid pairwise structural alignment algorithm, scarna  <cit> , which is based on fixed-length stem fragments as the representation of secondary structure. these two methods employ plan b with novel techniques at the pairwise alignment stage, while constructing a multiple alignment with consistency-based techniques  <cit>  originally developed for multiple sequence alignment. the common secondary structures are predicted from the resulting multiple alignment, as in plan a. in contrast, the combination of rnacast and rnaforester  <cit>  can be classified into plan c. rna sampler  <cit>  takes a different approach, in which the common structures between each pair of sequences are probabilistically sampled and iteratively updated. at the cost of cpu time, rna sampler achieved a remarkable improvement in accuracy.

based on these and other previous studies, we sought to develop a multiple global alignment method that efficiently utilizes structural information at the multiple alignment stage. we focused on the multiple global alignment of ncrnas, rather than similarity searches and motif finding by local alignment. as a starting point, we selected mafft-g-ins-i, since it was reportedly the most accurate among the sequence-based alignment methods for globally alignable ncrnas in the bralibase benchmark test  <cit> . as no structural information is considered in g-ins-i, there could be room for further improvement in the accuracy. hence, we developed a new objective function, four-way consistency, that is calculated from the base-pairing probability of every aligned group at each multiple alignment step. it was implemented in a new option of mafft, x-ins-i, which loads pairwise structural alignments computed by an external pairwise alignment method, such as scarna  <cit>  and lara  <cit> , and combines them into a single multiple alignment through a progressive method and a subsequent iterative refinement method, based on the new objective function. to facilitate rapid computation, the objective function was designed to have an affinity to a group-to-group alignment algorithm based on dp.

x-ins-i can be classified as an intermediate plan between b and c: it adopts plan b at the pairwise alignment stage, while the base-pairing probability calculated from individual sequences is used, as in plan c, at the multiple alignment stage. we also introduced a simplified variant, q-ins-i, which can be classified into plan c. q-ins-i uses a purely sequence-based pairwise alignment algorithm, instead of a pairwise structural alignment algorithm, together with the four-way consistency objective function, calculated from the base-pairing probability of each sequence. as both x-ins-i and q-ins-i simply output a multiple sequence alignment, they require, like plan a, an external program to predict a common secondary structure, such as rnaalifold  <cit> , mccaskill-mea  <cit>  and pfold  <cit> .

to clarify the advantages and limitations of the present methods, their performances were assessed with the sum-of-pairs score , assuming that the manually curated alignment in rfam  <cit>  is correct. we also evaluated the accuracy of the secondary structures predicted from the resulting alignment. the accuracy of the secondary structure prediction can be affected by both the alignment process and the prediction process. the improvements in the prediction accuracy due to these two processes were separately assessed, by examining various combinations of alignment methods and structure prediction methods.

methods
algorithm
the g-ins-i algorithm  <cit>  is schematically illustrated in fig. 1b.  all pairwise alignments are calculated by a global sequence alignment algorithm.  based on these alignments, an initial multiple alignment is built with the progressive method  <cit> .  then, the initial alignment is subjected to an iterative refinement process  <cit>  to maximize an objective score. the objective function of g-ins-i has the weighted sum-of-pairs  term and the consistency  <cit>  term that is derived from the pairwise alignments.

the proposed method, x-ins-i, is an extension with structural information incorporated into g-ins-i, as illustrated in fig. 1a. the differences between x-ins-i and g-ins-i are the following two points:  x-ins-i uses a structural alignment method, instead of a global sequence alignment method, at the pairwise alignment stage. the present version uses either scarna  <cit>  or lara  <cit> .  in the progressive stage and the iterative refinement stage of x-ins-i, structural information is incorporated into the objective function through one more term, four-way consistency. the objective function for a group-to-group alignment between groups x and y is represented as:

 objective score=∑x∈x,y∈ywxwy, 

where wx is the weight for sequence x  <cit> , and wm, wi and wr are weighting factors . these three values were empirically determined mainly using 5s rrna and trna sequences and structures  <cit> , but have not finely tuned yet. with the second term, consistency, a multiple alignment is evaluated with respect to its consistency with the pairwise alignments  <cit> . unlike other consistency-based methods, such as tcoffee  <cit>  and probcons  <cit> , mafft  uses only the primary library. the third term, four-way consistency, is derived from the base-pairing probability calculated from every single sequence as well as from every partly aligned group at each multiple alignment step.

the basic idea of four-way consistency is illustrated in the shaded area in fig.  <dig>  let blocks a and a' be homologous to each other. when the evolutionary distance between the two sequences is large, a is sometimes misaligned because false homology, say b', occurred by chance. when blocks c and c', which are complementary to a and a', exist and are detected, the alignment between a and a' can be correctly recovered by using the information from the alignment between c and c'. in order to incorporate such information into an objective function, a combination of three types of the dynamic programming  algorithm is performed at each node of the guide tree in both the progressive stage and the iterative refinement stage. we will first explain the algorithm for the pairwise alignment between sequences x and y and then clarify how to extend it to a group-to-group alignment. let the lengths of sequences x and y be lx and ly, respectively.

 <dig>  for sequence x, the base-pairing probability bx between residues i and j is calculated. either the mccaskill algorithm  <cit> , implemented in the vienna rna package  <cit> , or the contrafold algorithm  <cit> , implemented in the contrafold package  <cit> , can be used for calculating bx.

 <dig>  the vingron-argos algorithm  <cit> , which performs a global dp for both directions, is applied to sequences x and y. this algorithm produces an lx × ly matrix, in which the optimum alignment score sx,yopt is assigned on the optimum path. on other elements  of the matrix, smaller values sx, y are assigned as a result.

 <dig>  the similarity score ax, y between residue i of sequence x and residue k of sequence y is defined as

 ax,y=max⁡sx,yopt,0). 

 <dig>  four-way consistency, denoted as qx, y, between residue i of sequence x and residue k of sequence y is defined as

 qx,y=∑0<j<i,0<m<kbxax,yby+∑i<j≤lx,k<m≤lybxax,yby, 

to which all possible base pairs contribute, according to their base-pairing probabilities.

 <dig>  a dp matrix is constructed using qx, y and two remaining terms to create an alignment between sequences x and y.

this procedure can be extended to a group-to-group alignment, as follows. the base-pairing probability bx for group x is calculated as a weighted summation of bx of all sequences in group x:

 bx=∑x∈xwxbx,jy), 

where wx is the weight for sequence x, ix is the residue number of aligned site i in sequence x and jy is the residue number of aligned site j in sequence y. the similarity score ax, y  between aligned site i of group x and aligned site j of group y is obtained with a group-to-group alignment between groups x and y. the four-way consistency score between the two groups is thus

 qx,y=∑0<j<i,0<m<kbxax,yby+∑i<j≤lx,k<m≤lybxax,yby, 

where lx and ly are the alignment lengths of groups x and y, respectively. at every step in the progressive and iterative refinement stages, a dp matrix is constructed using q and the two remaining terms, and a group-to-group alignment is performed on it. the group-to-group alignment algorithm is the same as that for the sequence-based method used in other options of mafft  <cit> .

implementation
the aforementioned algorithm was implemented as the x-ins-i option of the mafft sequence alignment program version  <dig> . we used the mccaskill routine  <cit> , taken from the vienna rna package  <cit>  and mccaskill-mea  <cit> , to calculate the base-pairing probability. this routine can be replaced with an alternative method, contrafold  <cit> . at the pairwise alignment stage, we used the scarna algorithm  <cit>  implemented in the mxscarna  <cit>  package for pairwise structural alignment. lara  <cit>  can also be selected, instead of scarna. we chose scarna because it gave the best sps score in the n =  <dig> subset of the bralibase test. we also chose lara as an alternative pairwise alignment method, because it shows a characteristic pattern of the sps score for pairwise alignment  and it has a remarkably high structure conservation index  <cit> . both mxscarna and lara can potentially compute a multiple alignment, but they are solely used as pairwise alignment methods.

the mccaskill algorithm consumes cpu time proportional to l <dig>  where l is the sequence length. it runs n times for computing the four-way consistency, where n is the number of sequences. it also runs two times within the scarna routine, which is called n/ <dig> times. in total, the mccaskill routine runs n + n times. when scarna is used as a part of the proposed method, the mccaskill runs within the scarna part can potentially be omitted, because they are simply repetitions of the same calculation. if the repetitions are omitted, then the total number of mccaskill runs could be reduced to n. however, as the source of mxscarna is currently unavailable, we could not adopt this modification, and thus, used an n + n version in this report. in the progressive alignment and iterative refinement stages, dp runs three times  at each node of the guide tree. thus, these processes are approximately three times slower than the corresponding processes of g-ins-i, which has a time complexity of o. therefore, the overall time complexity of x-ins-i is o + o = o, in the present implementation.

when lara is selected as the pairwise alignment algorithm, the present version of x-ins-i runs lara n/ <dig> times. thus, a part of lara calculation might be potentially omitted if the source of lara is open. in a preliminary experiment, however, it was not clear how much cpu time could be reduced by omitting the redundant calculation.

the experiments were performed on a red hat enterprise linux ws rel. <dig> on a  <dig>  ghz intel xeon with  <dig> gb of ram.

benchmark
there are presently about a dozen methods for global multiple ncrna alignment. as representatives of the exiting methods, we selected the five latest methods, murlet  <cit> , mxscarna  <cit> , rna sampler  <cit> , lara  <cit>  and mastr  <cit> , which reportedly outperformed the other methods, including foldalignm  <cit> , rnacast  <cit> , dynalign  <cit>  and stemloc  <cit> , consistently. as for rna sampler, both the default and fast options were examined. we also compared purely sequence-based methods, clustalw  <cit> , probconsrna  <cit>  and mafft-g-ins-i  <cit> , in order to clarify the effect of the inclusion of structural information. in total, we tested these nine existing methods and the present method. the version number and the command-line arguments for each method are listed in table  <dig> 

* as the latest version of lara  frequently aborted for cases with more than two sequences, version  <dig>  was used together with the parameter file of version  <dig> .

we used two benchmark datasets, bralibase version  <dig>   <cit>   and a dataset extracted from rfam by kiryu et al.  <cit>  . for both datasets, the manually curated alignments in rfam were assumed to be correct.

bralibase was used for evaluating only the alignment accuracy, because it includes no reference structures. we used the compalignp program distributed at the bralibase page  <cit>  to calculate the sum-of-pairs score , which is defined as the fraction of pairs out of all possible character pairs that are aligned in both the predicted and reference alignments.

the kka dataset was used for assessing the accuracies of both alignment and consensus structure prediction. the kka dataset is composed of the  <dig> rna families listed in table  <dig>  a flowchart of benchmarks using the kka dataset is shown in figure  <dig>  according to kiryu et al.  <cit> , each alignment was taken from rfam seed alignments with the consensus structures published in the literatures. note that we did not use sequence-based re-alignments, which were used by kiryu et al.  <cit>  in a different context. in addition to the alignment accuracy measured with the sps score, the accuracy of secondary structure prediction was assessed as follows; after subjecting an alignment to three different prediction methods, pfold  <cit> , mccaskill-mea  <cit>  and rnaalifold  <cit> , the predicted structures were compared to the rfam structure. the internal predictions by rna sampler and mastr were also compared. the difference between a predicted structure and the corresponding rfam structure was evaluated with the mcc criterion  <cit> ,

the length and identity values were taken from table  <dig> in kiryu et al.  <cit> .

 mcc=tp×tn−×fn, 

where tp is the number of 'true positives' , fn is the number of 'false negatives' , tn is the number of 'true negatives' , fp is the number of 'false positives'  and ξ is the number of base-pairs that were incorrectly predicted but were compatible with the reference structure  <cit> . we used the compare_ct.pl program  <cit>  for calculating ξ.

RESULTS
in comparison with g-ins-i, x-ins-i has two additional components, pairwise structural alignment and four-way consistency, to incorporate the structural information, as illustrated in fig.  <dig>  in order to clarify the effect of each of the two components, we evaluated the accuracies of x-ins-i variants with and without the two components. we tested three different pairwise alignment methods , and three different types of objective functions . there are thus nine possible variants in total.

the accuracy values of the nine variants are listed in table  <dig>  in both of the two criteria, sps and mcc, the alignment accuracy was successfully improved by introducing four-way consistency, when comparing the accuracy values of variants with and without it. the difference between the mccaskill algorithm and contrafold was unclear.

the kka dataset was used as the benchmark. the accuracies of alignments measured by the sps criterion are listed in the sps column. the accuracies of predicted common secondary structures are shown in the three columns on the right. the alignment by each method was subjected to three external prediction programs, pfold, mccaskill-mea and rnaalifold, and then the differences from the rfam curated structure were calculated with the mcc criterion.

among the three different types of pairwise alignment routines , scarna was better than lara and the sequence-based method. the difference between scarna and lara probably reflects the difference in the the accuracy of pairwise alignment: according to the n =  <dig> subset of bralibase, the average sps score of scarna is higher than that of lara.

based on this result, we decided to use mainly the x-ins-i algorithm with the combination of scarna and mccaskill, which is referred to as x-ins-i-scarnapair hereafter. as scarna internally uses the mccaskill algorithm, this combination keeps the method internally consistent. moreover, the mccaskill algorithm is somewhat faster than contrafold with similar accuracy. we also examined the combination of lara and mccaskill, which is referred to as x-ins-i-larapair, in order to compare the direct application of lara for multiple alignment problems and the use of the lara pairwise alignment within the x-ins-i framework.

the kka dataset was used as the benchmark. the accuracies of alignments measured by the sps criterion are listed in the sps column. the sps value was computed for each alignment and then averaged across all the alignments. the accuracies of predicted common secondary structures are shown in the four columns on the right. the alignment by each method was subjected to three external prediction programs, pfold, mccaskill-mea and rnaalifold, and then the differences from the rfam curated structure were assessed. the mcc values were computed for each sequence and then averaged across all the sequences. the accuracy values for secondary structure internally predicted by rna sampler and mastr are shown in the  column. the highest score in each column is underlined. the scores close to the highest  are shown in bold. mccaskill-mea was run with the default value α =  <dig> .

the mcc values of mastr was not so high in the kka test. this contradicts lindgreen et al.  <cit> , in which the accuracy of mastr is comparable to or only slightly lower than that of rna sampler. we also performed a benchmark test using the dataset collected by them and confirmed that their result was reproduced and that x-ins-i-scarnapair outperformed both rna sampler and mastr . probably, an alignment problem that is easily solved by a method is not always an easy problem for another method. it may be meaningful to provide a guideline to select an appropriate method, by testing which method is suitable for which type of problem.

the highest scores within each group  are underlined. the scores close to the highest  are shown in bold. as murlet and rna sampler aborted for a small number of datasets, the wilcoxon test was carried out using a limited set , for which every method returned an alignment.

discussion
since mxscarna and x-ins-i-scarnapair use the same pairwise alignment algorithm, scarna, the difference in the accuracy between them should reflect the difference in the multiple alignment part. in all of the tests with more than two sequences, x-ins-i-scarnapair significantly outperformed mxscarna in the sps criterion. the difference should be interpreted as the improvement achieved by the present framework. the same observation was made with the comparison between lara and x-ins-i-larapair. the improvements in the accuracy from lara to x-ins-i-larapair should reflect those introduced by the present method.

mxscarna seems to use the probcons framework to extend the scarna pairwise alignments to a multiple alignment. lara combines pairwise structural alignments into a multiple alignment using tcoffee. in contrast, x-ins-i uses the base-pairing probability of every aligned group at every step of the progressive and iterative refinement stages. rna sampler also incorporates the base-pairing probability into the iterative refinement stage. our experiments suggest that the simple combination of a pairwise structural alignment algorithm and existing multiple sequence alignment framework is insufficient and that it is important to incorporate the structural information at the multiple alignment stage.

x-ins-i uses structural information at two components:  the pairwise alignments and  the four-way consistency objective function. the improvement solely by the latter can be assessed with the second and third raws in table  <dig>  in which only the four-way consistency objective function was used but no pairwise structural alignment was performed. interestingly, by incorporating the base-pairing probability for every sequence into the iterative refinement step through the new objective function, a considerable improvement in the accuracy was observed. we made this method selectable as the q-ins-i option.

the present methods, both x-ins-i and q-ins-i, output a multiple sequence alignment but predicted structural information is hidden in the output. the process to infer a structure from the base-pairing probability is left to external programs. within the present method, the structural information is always used in the form of base-pairing probability, but not as a single structure. this strategy has merit, since we can keep the ambiguity of the prediction during the alignment process, whereas the present methods cannot calculate an alignment assuming a single optimum secondary structure deterministically predicted. at this point, it is unclear which type of multiple alignment strategy is better: to align sequences assuming a single secondary structure or to align sequences based on an ambiguous secondary structure. we designed the present method based on the presumption that the secondary structure may have undergone small changes in the course of evolution, and so it may be difficult to determine a single structure for a set of diverged ncrna sequences. accordingly, in equation  <dig>  all possible base pairs are summed to contribute to the objective function along with the base-paring probabilities.

when we evaluated the accuracy of a common secondary structure, we examined the effects of the alignment method and the structure prediction method separately. the results suggest that, at present, the quality of the alignment affects the prediction accuracy much more than the selection of a structure prediction program does, and that external prediction programs perform slightly better than prediction functions internally implemented in the currently available rna alignment methods. these observations are consistent with those of previous studies  <cit> .

pseudoknots were not considered at all in the present analyses. if a method to compute the base-pairing probability also considers pseudoknots, then it can be incorporated into the present formulation.

CONCLUSIONS
x-ins-i builds a multiple structural rna alignment incorporating secondary structural information of aligned groups at every step of the progressive and iterative refinement processes, through the four-way consistency objective function. in the sps criterion, x-ins-i-scarnapair, a combination of x-ins-i with scarna, significantly outperformed existing methods. as a basis of common secondary structure prediction, the quality of the x-ins-i-scarnapair alignment was estimated to be comparable to or somewhat higher than those of existing methods.

the current version of x-ins-i-scarnapair is faster than rna sampler and murlet, but slower than mxscarna. if the source of mxscarna becomes open, then the time complexity of x-ins-i-scarnapair can be reduced from o to o + o, as explained in the implementation section.

any type of pairwise structural alignment can be incorporated into the present method simply by adjusting the input/output format, to build a multiple alignment. the latest version of foldalign , which is based on the sankoff algorithm, can be selected instead of scarna and lara. both the local and global options of foldalign are selectable with the --foldalignlocalpair and --foldalignglobalpair options, respectively. if a new method for computing base-pairing probability is developed in the future, then it can also be incorporated into the present framework.

supplementary data
additional benchmark results are available at  <cit> .

availability and requirements
project name: mafft

project home page: 

operating systems: mac os x, windows , linux, unix

programming languages: c, c++

license: the code for the mccaskill algorithm was taken from rnaalifold  <cit>  and mccaskill-mea  <cit> . this part should be distributed under their own licenses. the remaining part is under the bsd license.

authors' contributions
kk conceived the study and developed the computer program. kk and ht wrote the manuscript. both authors read and approved the final manuscript.

