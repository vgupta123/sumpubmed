BACKGROUND
noncoding rnas  serve a variety of cellular functions depending on their primary sequences and secondary structures  <cit> . a group of ncrnas sharing sequence and structural homology is annotated as one family, and included in the database  <cit> . recently, high-throughput transcriptome sequencing has uncovered tens of thousands of ncrnas that lack significant homology to known families  <cit> . thus, evaluating homology among these unannotated transcripts, that is, clustering has become an important task to identify novel ncrna families  <cit> .

accurate clustering of ncrnas needs a reliable similarity measure that takes into account primary sequences and secondary structures. given a pair of sequences without known structures, the sankoff algorithm  <cit>  simultaneously predicts their sequence alignment and consensus secondary structure ; thus, the obtained alignment score can be a suitable choice for a similarity measure. however, the original sankoff algorithm is too time-consuming to deal with an all-against-all comparison of many sequences required in clustering procedures. to address this problem, similarity measures based on the approximation of the sankoff algorithm have been proposed, and shown to be applicable to hierarchical clustering  <cit> . each method has its own heuristics to reduce the huge dynamic programming matrix used in the sankoff algorithm. will et al.  <cit>  have developed locarna that precludes unsure secondary structures including low-probability base pairs. torarinsson et al.  <cit>  have developed foldalignm based on the foldalign program  <cit>  that dynamically excludes low-scoring sequence alignments by means of length-dependant thresholds. sato et al.  <cit>  have developed stem kernel that employs heuristics similar to locarna, but further precludes secondary structures including any bifurcation.

although the approximate sankoff-style algorithms have enabled similarity measures based on structural alignment, the quality of clustering results has not been so high. in the previous studies  <cit> , resultant clusters in a hierarchical tree were quite unclear, requiring additional verification or manual inspection. this was partly because of the diversity within one ncrna family. most ncrna families have only less than 60% identity at the primary sequence level  <cit> , and cannot be correctly aligned without taking into account secondary structures  <cit> . the approximate sankoff-style algorithms seemed to be degraded by discarding the secondary structures in the excluded portion of the dynamic programming matrix.

to improve the reliability of the approximate sankoff-style algorithms, we focus attention on the information of suboptimal structural alignments. among the existing methods, locarna and foldalign calculate the similarity based on the score of one optimal structural alignment. this means that these methods ignore the scores of suboptimal structural alignments, and only use one optimal sequence alignment and one optimal secondary structure. in contrast, stem kernel sums up the scores of structural alignments allowed in the approximate sankoff-style algorithm, incorporating a subset of sequence alignments and a subset of secondary structures. thanks to this strategy, stem kernel gives comparable clustering results to locarna, while employing the more reduced dynamic programming matrix. these observations suggest the possibility that we can design a more reliable similarity measure by utilizing all possible sequence alignments and all possible secondary structures. this is not trivial because if we naively try to incorporate all possible structural alignments, it will require the full-size dynamic programming matrix used in the original sankoff algorithm with the prohibitive computational cost.

in this paper, we describe a new similarity measure for the hierarchical clustering of ncrnas. we approximate the problem of structural alignment by the two separate problems: the prediction of sequence alignment, and the prediction of secondary structure for each sequence. for this purpose, the sankoff algorithm for structural alignment is approximated by the combination of the smith-waterman  algorithm  <cit>  for sequence alignment, and the mccaskill algorithm  <cit>  for secondary structures. the approximation allows to obtain all possible sequence alignments from the sw algorithm, and all possible secondary structures from the mccaskill algorithm, much faster than obtaining all possible structural alignments from the original sankoff algorithm. we first describe a similarity measure using the scores of all possible sequence alignments between two rnas. then, we design a scoring function for these sequence alignments using all possible secondary structures of each of the two rnas. we start from a scoring function that measures the similarity between two secondary structures using the state of base pairing at each position. the proposed scoring function is defined as an expectation of this scoring function over all possible secondary structures of each of the two rnas.

we demonstrate that our method can achieve the best balance between the computational cost and the quality of the clustering among the existing methods. in particular, our method can keep its high performance even when the sequence identity of family members is less than 60%.

methods
in this section, we propose a new method for measuring the similarity between two rna sequences without known structures. the proposed method is applied to the hierarchical clustering of ncrnas with the weighted pair group method with averaging  algorithm. given a set of sequences, we calculate an all-against-all similarity matrix using our method. then, we derive the distance matrix by one minus the similarity, and obtain the cluster tree by the wpgma algorithm.

the idea of our similarity measure is to approximate the sankoff algorithm for structural alignment by the combination of the sw algorithm for sequence alignment, and the mccaskill algorithm for secondary structures. this approximation allows to utilize the ensembles of all possible sequence alignments and all possible secondary structures separately from each of the two algorithms. first, we describe a similarity measure using the scores of all possible sequence alignments between two rnas. next, we design a scoring function for these alignments using all possible secondary structures of each of the two rnas.

ensemble of all possible sequence alignments
to measure the similarity between two rnas, one common approach is to perform pairwise alignment, and to calculate its alignment score. the sankoff algorithm simultaneously models sequence alignments and secondary structures, and is extremely time-consuming. therefore, we first approximate the sankoff algorithm by the sw algorithm that only models sequence alignments apart from secondary structures. although this is a strong approximation, we attempt to improve the reliability by utilizing all possible sequence alignments rather than one optimal sequence alignment.

for an rna sequence x, we denote its length by |x|. for each position  <dig> ≤ i ≤ |x| in x, we denote the nucleotide by xi∈ {a, c, g, u}.

for two sequences, x and y, let Πxy be the set of all possible sequence alignments in the sw algorithm. let πxy denote one particular sequence alignment in Πxy.

we calculate the similarity between x and y by accumulating the alignment score of πxy over Πxy. for this purpose, we employ local alignment  kernel  <cit>  defined as follows:   

where β ≥  <dig> is a parameter, and score is the alignment score of πxy under a given scoring scheme . in practice, we take the logarithm of la kernel, and similarity values are normalized to range from  <dig> to 1:   

la kernel  can be computed by the variant of the sw algorithm as follows:

initialization:

for i ∈ { <dig> …, |x|} and j ∈ { <dig>  …, |y|} do

m = ix = iy = tx = ty = 0

m = ix = iy = tx = ty = 0

end for

iteration:

for i ∈ { <dig> …,|x|} and j ∈ { <dig> …,|y|} do

m = eβsxy + iy + m)

ix = eβgm + eβdix

iy = eβg + ix) + eβdiy

tx = m + tx

ty = m + tx + ty

end for

termination:

k =  <dig> + tx + ty + m

where the parameters g and d are the penalties for gap opening and gap extension, respectively, and sxy is a scoring function for matching the i-th position in x and the j-th position in y. the design of sxy impacts the performance of the resulting similarity measure, and will be described later.

at this point, we note that our method can take into account all possible sequence alignments in o time. if we use the exact sankoff algorithm instead, it takes prohibitive o time, which is not practical. in the case of the approximate sankoff-style algorithms employed in the existing methods, all possible sequence alignments cannot be incorporated to the reduced dynamic programming matrix. therefore, la kernel based on the sw algorithm is an efficient way to deal with the ensemble of all possible sequence alignments.

ensemble of all possible secondary structures
to design a scoring function sxy for la kernel, we need secondary structures of x and y. as mentioned above, the sankoff algorithm models secondary structures simultaneously with sequence alignments which we have already modeled by the sw algorithm. therefore, we next employ the mccaskill algorithm that only models secondary structures apart from sequence alignments. although this is an additional approximation, we attempt to improve the reliability by utilizing all possible secondary structures rather than one optimal secondary structure.

for an rna sequence x, let Θx be the set of all possible secondary structures. let θx denote one particular secondary structure in Θx. we represent a secondary structure as a set of binary variables θx = {θx}1≤i<j≤|x|, where θx =  <dig> means that the i-th position and the j-th position in x form a base pair. for each position  <dig> ≤ i ≤ |x| in x, we represent the state of base-pairing using three kinds of binary variable: lx = ∑ j:j>i θx =  <dig> means that a base pair is formed with one of the downstream positions; rx = ∑ j:j<i θx =  <dig> means that a base pair is formed with one of the upstream positions; and ux =  <dig> – lx – rx =  <dig> means that the position is unpaired. given a fixed pair of secondary structures, θx and θy, we can measure the similarity between the i-th position in x and the j-th position in y using their state of base pairing:

wxy = α ly + rxry) + s uxuy, 

where α ≥  <dig> is a weight parameter for structural similarity, and s is a substitution matrix for rna sequences like the ribosum 85- <dig> matrix  <cit> . this scoring function takes a non-zero value in three different cases: it takes α when both of the two positions form a base pair with one of their downstream positions, respectively; it takes α when both of the two positions form a base pair with one of their upstream positions, respectively; and it takes s when both of the two positions are unpaired.

the mccaskill algorithm defines a probability distribution p over Θx. the binary variables θx and {lx, rx, ux} are converted to the probabilities by taking the expectation over Θx. for θx, we obtain a base-pairing probability px that the i-th and the j-th positions form a base pair:  

for {lx, rx, ux}, we obtain three kinds of probability that the i-th position is paired with one of the downstream/upstream positions, or unpaired, respectively:  

we design a scoring function sxy by taking the expectation of  over Θx and Θy:   

the proposed method is obtained by combining the normalized la kernel  with the scoring function .

it should be noted that our method can take into account all possible secondary structures in o time, thanks to the mccaskill algorithm. just as in all possible sequence alignments, the exact sankoff algorithm results in o time, and the existing methods cannot incorporate all possible secondary structures. our method requires o + o time in total, which is more efficient than the exact sankoff algorithm. therefore, our strategy that combines the sw algorithm and the mccaskil algorithm allows to utilize the ensemble information with the reasonable computational cost.

variations of the proposed method
the scoring function  proposed in this study is similar to the scoring function used in bpla kernel  <cit> . bpla kernel is a prediction method that we previously developed for detecting new members of known ncrna families. although bpla kernel was not applied to clustering problems in our previous study, we here clarify its relation to the proposed method. the scoring function used in bpla kernel is defined as follows:   

where  ,  , and . therefore, the scoring function  can be regarded as a variation of the proposed scoring function  with the additional coefficients cl, cr, and cu. these coefficients take large values when the probabilities  and  are small. that is, bpla kernel emphasizes the contribution of low-probability  secondary structures compared to the proposed method. in the next section, we experimentally verify this theoretical implication; the proposed method outperforms bpla kernel.

because of the resemblance between the scoring functions,  and , we set the parameters of the proposed method as used in bpla kernel: α =  <dig> , β =  <dig> , g = – <dig>  and d = – <dig> 

RESULTS
in this section, we examine the performance of the proposed method in the hierarchical clustering of ncrnas.

dataset and experimental system
we compared our method with the state-of-the-art methods developed for the hierarchical clustering of ncrnas: locarna v <dig> . <dig>  <cit> , foldalign v <dig> . <dig>  <cit> , and stem kernel v216c  <cit> . we also performed the experiments with clustalw v <dig>   <cit>  and la kernel by setting  in our method .

we can summarize our method and the existing methods as follows. our method utilizes all possible sequence alignments and all possible secondary structures. locarna and foldalign only use one optimal sequence alignment and one optimal secondary structures. stem kernel utilizes a subset of all possible sequence alignments and a subset of all possible secondary structures. clustalw and la kernel ignore secondary structures; clustalw only uses one optimal sequence alignment, while la kernel utilizes all possible sequence alignments.

we created a dataset as summarized in table  <dig>  this dataset was collected from the bralibase benchmark v <dig>   <cit> , which includes multiple alignments of a broad range of ncrna families established in the rfam database  <cit> . we treated each multiple alignment as a reference cluster, and each ncrna sequence in a multiple alignment as a member sequence. the reference clusters were divided into four categories according to their sequence identity: 20–39%, 40–59%, 60–79%, and 80–99%. we sampled the dataset ten times from the bralibase benchmark, and evaluated the average performance.

#clusters: number of reference clusters; each reference cluster represents a different ncrna family.

#members: average number of member sequences per reference cluster. length: average length of sequences over all reference clusters. the dataset is divided by the sequence identity in a reference cluster.

we produced three versions of dataset. first, we used ncrna sequences without modification, and named them the “normal” dataset. second, we concatenated random sequences to both ends of ncrna sequences, and named them the “plus flanking regions” dataset. this dataset was intended to simulate the situation where we do not know the exact boundaries of unannotated transcripts. a random sequence was generated from a ncrna sequence so that it had the quarter length and the same dinucleotide contents. third, we added false reference clusters, each of which contains one random sequence, and named them the “plus unrelated sequences” dataset. this dataset was intended to simulate the situation where non-functional ncrnas arise from transcriptional noises. therefore, we evaluated whether a false reference cluster could be a resultant cluster with a single member. we used a quarter number of false reference clusters compared to true reference clusters. a random sequence was generated from a ncrna sequence so that it had the same length and the same dinucleotide contents.

we evaluated the overall quality of the cluster tree by the roc analysis proposed in  <cit> .  given a distance threshold, the number of true positives  was defined as the number of sequence pairs that belong to the same reference cluster and are correctly assigned to the same resultant cluster. analogously, the numbers of false positives , true negatives , and false negatives  are defined, respectively, by counting the pairs from different reference clusters but the same resultant cluster, the pairs from different reference clusters and different resultant clusters, and the pairs from the same reference cluster but different resultant clusters. the roc analysis was performed by plotting true positive rates tp/ versus false positive rates fp/ for different distance thresholds. the quality of the clustering was measured by the area under the roc curve . we measured the total time for computing similarity matrices on a  <dig>  ghz intel xeon processor.

quality of the clustering
we first examined the quality of the clustering for the “normal” dataset . our method achieved the better or comparable auc to the existing methods in all the range of sequence identity. the accuracy of our method was especially remarkable in the sequence identity range below 60%, where the existing methods resulted in low auc. this means that our method successfully grouped diverse member sequences in each reference cluster by detecting their remote homology.

our results can be attributed to the design of each method. the auc of clustalw and la kernel, which ignore secondary structures and only use sequence alignments, drastically fell down as the sequence identity decreased. locarna, foldalign, and stem kernel, which consider secondary structures, kept the auc relatively moderate in the low sequence identity range. however, their accuracy was still limited when the sequence identity was extremely low  because these methods only use one optimal secondary structure or a subset of secondary structures. our method, which utilizes all possible sequence alignments and all possible secondary structures, achieved the sufficiently high auc in this region. these results suggest that our design of the similarity measure is effective for identifying a broad range of ncrna families.

next, we evaluated the quality of the clustering for the “plus flanking regions” dataset , and the “plus unrelated sequences” dataset . in both cases, we observed the same tendency as in the results for the “normal” dataset . our method kept high accuracy in all the range of sequence identity, and achieved the best auc in the sequence identity range below 60%. these results further support the effectiveness of our method in the practical situations that involve flanking regions and unrelated sequences.

differences in the variations of the proposed method
as described in methods, the proposed method has the theoretical advantage compared to bpla kernel, which can be regarded as a variation of our method. to verify this point experimentally, we compare the proposed method and bpla kernel using the scoring functions  and , respectively.

computational cost
finally, we evaluated the computational cost of the similarity measures using three version of the dataset . our method was faster than locarna and foldalign by several orders of magnitude, and achieved the comparable computational cost to stem kernel. considering the high accuracy of our method , we achieved the best balance between the computational cost and the quality of the clustering among the existing methods.

the total time for computing similarity matrices is shown for three versions of the dataset.

in the design of the proposed method, our idea was to improve the reliability of approximate algorithms by the information of suboptimal solutions in their dynamic programming frameworks. among locarna and foldalign, which only use one optimal solution in their approximate sankoff-style algorithms, there was a trade-off that locarna was faster but less accurate than foldalign . stem kernel, which utilizes a subset of solutions in the more approximate sankoff-style algorithm, partly improved this problem, being faster and more accurate than locarna. our method, which utilizes all possible solutions in the combination of the smith-waterman algorithm and the mccaskill algorithm, successfully overcome the trade-off. these results suggest that our strategy is essential to enable fast and accurate clustering of ncrnas.

CONCLUSIONS
we have described a new method for the hierarchical clustering of ncrnas, which can be applied to the identification of novel ncrna families. our method can achieve the best balance between the computational cost and the quality of the clustering compared to the existing methods.

the performance of the clustering is determined by similarity measures based on the scores of structural alignment. the existing similarity measures, which only use one optimal structural alignment, suffer from the trade-off between time-consuming accurate algorithms and fast approximate algorithms. our similarity measure, which is designed to utilize all possible sequence alignments and all possible secondary structures, have overcome this problem. the improvement is especially remarkable when the similarity among family members is not detectable at the primary sequence level.

in conclusion, our method enables fast and accurate clustering of ncrnas, providing a promising way to explore the functional diversity of ncrnas.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
y saito and ks developed the algorithm and wrote the code. y saito performed the experiments and drafted the manuscript. y sakakibara initiated and coordinated the project. all authors have read and approved the final manuscript.

