BACKGROUND
one of recent important developments in biology is the success of human genome project. this project was done with a great deal of help from computer technology. the technique for obtaining sequenced genome data is getting mature. more and more sequenced genome data are available to scientific research community. based on those data, the study of pooling designs has become a very important research direction. doing research in this direction requires high-quality dna libraries. a dna library is a collection of cloned dna segments, usually from a specific organism. those cloned dna segments are called clones. given a dna library, the problem is to identify each clone whether it contains a probe from a given set of probes. a probe is a piece of dna, labeled with radioisotope or fluorescence to identify specific dna sequences by hybridization. a clone is said to be positive if it contains a given probe, and negative, otherwise. a pool is positive if it contains a positive clone, and negative, otherwise. in a pooling design algorithm, a clone may appear in two or more pools. hybridization is one of techniques to reproduce clones or to do dna cloning.

dna microarray is a solid surface where sequences from thousands of different genes are immobilized, or attached, at fixed locations. dna microarray is also a tool for performing large numbers of hybridization experiments in parallel. genechip  <cit>  is one of dna microarray technology. it contains a very large number of genes in a small size chip.

dna microarray technology falls into two applications. we can determine the expression levels of gene-specific probes by observing hybridizations of mrna to different probes on a microarray. this can be used for drug development, drug response, and therapy development. we can also identify the presence or absence of gene sequences by observing appropriate hybridization reactions. many domains benefit from this application, such as medicine, environmental science, and industrial quality control.

a biological sample is a biological object such as blood. targets are for example viruses or bacteria. in order to identify the target sequences in a biological sample, unique probes are preferred since each unique probe only hybridizes to a specific target. in terms of identification, it has strong separability of target sequences. thus establishing the presence of targets in a sample by using unique probes is obvious and straightforward. although probes selection is of great importance in many applications, only a few works have been done on this problem. other than using random probes, some methods choose probes based on their frequencies in the clones  <cit> . several methods select probes according to g+c content  <cit>  and free energy and melting temperature  <cit> . this problem has been devised as an optimization problem in  <cit> , in which a greedy heuristic derived from clustering and entropy has been proposed. furthermore, two heuristics have been proposed for two alternative formulations of the probes selection problem in  <cit> . one heuristic is based on simulated annealing, which has been proposed for mdps  and the other heuristic based on lagrangian relaxation has been proposed for mcps .

in reality, finding unique probes for every target is a difficult task because of the strong similarity of closely related targets, for example, virus subtypes, though temperature and salt concentration are helpful experimental conditions for a probe to uniquely hybridize to its intended target. we need to make use of non-unique probes which hybridize to more than one target in a sample. in terms of non-unique probes, only two works have addressed this problem in literature to the best of our knowledge. a greedy heuristic algorithm has been proposed in  <cit>  to identify the presence or absence of targets in a sample using non-unique probes. indeed, at first, a 1-separable submatrix is constructed by adding probes one by one, and then a number of pairs of target sets are added randomly to distinguish all those target sets. therefore, the constructed submatrix is not totally d¯-separable. it is the first work that explicitly considers cross-hybridization and experimental errors. this algorithm is simple, practical and time effective. however, the resulting probe set is not guaranteed to be minimal. moreover, the corresponding decoding algorithm is complicated and time-consuming. an integer linear programming method has been proposed in  <cit>  to reduce the number of probes in the greedy design. this method consists of two ilp formulations. the master ilp guarantees the pairwise separation of all targets, which means all targets are separated by at least d probes. the slave ilp guarantees the separation between pairs of small target groups. a cutting plane approach has been proposed to handle the master ilp and the slave ilp. whenever there is a feasible solution to the master ilp, the slave ilp is applied to check for violated group inequalities which are added to the master ilp to solve it again. this process is iterated until no further violated inequalities are found. the ilp algorithm studies a 1-separable matrix with k errors. therefore, there is no improvement in terms of decoding complexity.

the identification problem of determining the presence of targets in a biological sample using non-unique probes can be solved in three steps suggested by schliep and torney  <cit> :  pre-select suitable probe candidates and compute the probe-target incidence matrix m  <cit> .  select a minimal set of probes and compute a suitable design matrix h  to identify up to d targets.  decode the presence or absence of targets in a sample from testing outcomes. an example of this algorithm is shown in figure  <dig>  the rows in m represent the set of non-unique probes pi, and the columns in m represent the set of targets tj. let mij denotes an entry at cell m. mij= <dig> if probe pi hybridize to target tj; otherwise, mij= <dig>  v is a test outcome vector. vi= <dig> if probe pi hybridizes to at least one target in the sample; otherwise, vi= <dig>  in figure  <dig>  an example of v is given when two targets t <dig> and t <dig> are present in a given sample. a column is called an isolated column iff there is a row containing only one 1-entry at the intersection with that column. in the non-unique probes selection problem, a column  tj is isolated if there is a probe pi that only hybridizes to one target tj, that means pi is a unique probe. since we only consider non-unique probes, we can assume that the given matrix m does not contain any isolated column. our study focuses on the second step which is called non-unique probes selection. it is concerned about selecting a minimum set of probes while maintaining good decoding ability. using all probes in m always gives the best separation properties of the design. however, some probes have overlapped decoding ability and several probes might hybridize to the same target set so that keeping all of them in the design is not necessary. the number of selected probes is exactly the number of hybridization experiments needed. by selecting a minimum set of probes, we can reduce the number of hybridization experiments, which results in reducing the experimental cost and effort. and also we can have a smaller design which leads to a smaller chip and significant reduction of cost.

while minimizing the number of probes, the decoding ability should not be compromised. the following definitions need to be introduced first. a matrix is a d-separable matrix iff the unions of any d columns are distinct. the union of d columns is the boolean sum of these d columns. a matrix is defined as a d¯-separable matrix if the unions of at most d columns are different. a matrix is a d-disjunct matrix iff the union of anyd columns does not contain any other column. for example, the submatrix h in figure  <dig> is a 2-disjunct matrix. d-disjunct matrices have a decoding complexity of o, which is much lower than that of d-separable matrices, which is o. we choose to construct a d-disjunct matrix h instead of a d-separable matrix considering the computational complexity of decoding. in this study, we propose efficient non-unique probes selection algorithms using d-disjunct matrices to identify the presence of up to d targets in a given sample. we also consider the error tolerance case where there are at most k experimental errors. the experimental results show that the decoding time is much faster than that of the methods using d-separable matrices while running time and solution size are comparable.

RESULTS
the first algorithm
in this section, we study the following problem:

problem 1: min-d-ds : given m non-unique probe candidates and a m × n probe-target incidence matrix m, select a minimum set of the probe candidates such that the h × n submatrix h is d-disjunct, where h≤n.

in  <cit> , du and hwang have shown that min-d-ds is np-hard  <cit>  when d= <dig>  recently, thai and znati have shown that min-d-ds is np-hard for any fixed d≥ <dig> <cit> . due to its hardness, we present a heuristic to approximate the minimum set of non-unique probes selected for the min-d-ds problem.

the following is another definition for a d-disjunct matrix:

definition 1: h is a d-disjunct matrix iff for any  columns, there exist a row such that an entry at one of those  columns is  <dig> and entries at the remaining d columns are  <dig> 

we assume that a given matrix m does not contain any isolated columns since we only consider non-unique probes. the submatrix h certainly does not contain any isolated columns either. we have the following definition and lemma:

definition 2: h is called -disjunct if for any column tj,tj must have at least k+1
1-entries not contained in the union of other d columns.

lemma 1: every -disjunct matrix without isolated column is a -disjunct matrix.  <cit> 

we propose an ilpef  algorithm which consists of two ilp formulations  to deal with problem  <dig>  according to definition  <dig>  we eliminate those probes that hybridize to at least n-d+ <dig> targets since they do not contribute to d-disjunctness. then based on lemma  <dig>  we use ilp <dig> to construct a -disjunct matrix which facilitate the construction of a d-disjunct matrix later. ilp <dig> is applied to find violations of d-disjunctness and those violations are addressed one by one. finally, the resulting submatrix h is d-disjunct.

ilpef algorithm:

 <dig>  eliminate all the probes that hybridize to more than n-d- <dig> targets

 <dig>  select the minimum number of probes p to construct a -disjunct matrix using ilp1

 <dig>  while 

if there is a probe p that hybridizes to the single column in s and does not hybridize to any columns in set r

p=p u {p}

else

return no solution;

end if

end while

our formulation of the ilp <dig> is based on the following definitions. m is an m × n binary matrix with rows representing a set of non-unique probes pi, ∀i= <dig> …,m and columns representing a set of targets tj, ∀j= <dig> …,n. if probe pi hybridize to target tj; otherwise, mij= <dig>  xi is a set of binary variables with xi= <dig> if probe pi is chosen in the submatrix h and  <dig> otherwise. the details of the ilp <dig> are as follows.

ilp <dig> formulation:

 min⁡∑i=1mxi∑i∈m|mij−mijmik|xi≥d∀j,k∈n,j≠kxi∈{ <dig> }∀i∈m 

the first constraint simply guarantees that any column in m has at least d 1-components not contained in any other column.

after applying the ilp <dig> on m, we have a submatrix which is a -disjunct matrix. in order to construct a d-disjunct matrix h, we need to find any target sets r and s that violate d-disjunctness and add an appropriate probe to cover r and s until no violation can be found. a probe is said to cover r and s if this probe hybridizes to the single column in s and does not hybridize to any columns in set r. the followings are definitions for the formulation of the ilp  <dig>  wr is the vector that results from the union of columns in target group r. x is the index set of the currently chosen probes. x={i|xi*=1},, x* is a solution vector of the ilp  <dig>  we define σi01= <dig>  iff wir= <dig> and wis=1; otherwise, σi01= <dig> r and s are variable vectors of target groups r and s. we define rj= <dig> if tj is in group r and sj= <dig> if tj is in group s. the formulation of the ilp  <dig> is as follows.

ilp <dig> formulation:

 min⁡∑i∈xσi <dig> 

s.t.

  σi01≤1−rj∀i∈x,∀j∈n:mij= <dig> 

  σi01≤∑j∈nmijsj∀i∈x 

  σi01≥∑j∈nsj−∑j∈nrj∀i∈x:mij= <dig> 

  ∑j∈nsj= <dig> 

  ∑j∈nrj=d∀j∈n 

  rj+sj≤ <dig> 

  0≤σi01≤1∀i∈x 

  rj∈{ <dig> }   ∀j∈n 

  sj∈{ <dig> }   ∀j∈n 

the first two constraints defines two conditions that σi01= <dig>  constraint  defines the condition that σi01= <dig>  constraint  guarantees that s is a singleton set and constraint  makes sure that r is a set of d targets. constraint  keeps r and s disjoint and the rest constraints are trivial. the ilp <dig> is repeated until the minimum value found is at least  <dig>  which means no violation of d-disjunctness is found.

when there is a violation of d-disjunctness, an appropriate probe needs to be added to the design. if there is more than one probe that hybridizes to the single column in s and does not hybridize to any columns in set r, p is selected using a greedy heuristic. we pick the one that covers the most number of  pairs. a probe covers a pair  when it hybridize tos but does not hybridize to any target in r. for a probe candidate that hybridizes to k targets, the number of covered pairs is ck1cn−kd.

after applying our ilpef algorithm, the resulting submatrix h is d-disjunct. the decoding algorithm for a d-disjunct matrix is simply based on the following lemma:

lemma 2: for testing based on a d-disjunct matrix, the number of targets not appearing in any negative results is no more than d.  <cit> 

in the decoding algorithm, we just need to remove all columns that appear in the negative results. the remaining columns are the targets that need to be identified in the sample. the time complexity of this decoding algorithm is o, where n is the number of targets in m and h is the number of selected probes inh.

the second algorithm
the presence of errors due to the noise of hybridizations complicates the non-unique probes selection problem. test outcomes may consist of two kinds of experimental errors: false positives and false negatives. we can easily add error tolerance in order to identify at most d targets with the presence of at most k errors in experiments. to achieve this purpose, we can construct a -disjunct matrix  <cit>  and study the following problem:

problem 2: min--ds  disjunct submatrix): given m non-unique probe candidates and a m × n probe-target incidence matrix m, select a minimum set of the probe candidates such that the h × n submatrix h is  disjunct, where h<n.

we propose an ilpet , which also consists of two ilp formulations  to find a solution for problem  <dig>  same as in the ilpef algorithm for problem  <dig>  we eliminate those probes that hybridize to at least n-d+ <dig> targets since they do not contribute to d-disjunctness. then ilp <dig> is used to select the minimum number of probes p to construct a  disjunct matrix. the ilp <dig> is then applied to the constructed matrix to find any violations of  disjunctness. the violations will be addressed and the ilp <dig> is applied again until all the violations have been addressed. the resulting matrix is a  matrix. the detailed algorithm is given as follows.

ilpet algorithm:

 <dig>  eliminate all the probes that hybridize to more than n-d- <dig> targets

 <dig>  select the minimum number of probes p to construct a -disjunct matrix using ilp3

 <dig>  while -disjunctness, i.e., s only contains v  entries not contained in the union of all the columns in r)

if there are 2k+1-v probes p <dig> that all hybridize to the single column in s and do not hybridize to any columns in set r

p=p u p1

else

return no solution;

end if

end while

the ilp <dig> is similar to the ilp  <dig>  it is based on the same definitions as the ilp <dig>  the details of ilp  <dig> are given as follows.

ilp <dig> formulation:

 min⁡∑i=1mxi∑i∈m|mij−mijmik|xi≥d+2k∀j,k∈n,j≠kxi∈{ <dig> }∀i∈m 

the resulting matrix of the ilpet algorithm is a  disjunct matrix. du and hwang have proven the following lemma:

lemma  <dig>  <cit>  every -disjunct matrix is a k-error-correcting d-disjunct matrix. according to lemma  <dig>  our ilpet algorithm can correct at most k errors. the decoding is made very simple by the following lemma from  <cit> .

lemma  <dig>  <cit>  suppose testing done on a  – disjunct matrixh with at most k errors, a target is present iff it appears in at most k negative results.

based on lemma  <dig>  the decoding can be done with time complexity of o, h is the number of probes in the matrix. for each target, we just count the number of negative results containing it. if this number is less than k, then this target must be present.

experimental result
our experimental study is carried out on sun fire 280r, with solaris  <dig> operating system. the ilp software package we utilize is ilog inc's cplex  <dig>   <cit> . we use java as the programming language. the program invokes cplex functions via a concert technology library provided by the cplex software.

we tested our ilpef algorithm on three randomly generated datasets, with  <dig>   <dig>   <dig> probe candidates and  <dig>   <dig>   <dig> targets respectively. the result is shown in figure  <dig>  from the figure, we can see that the absolute running time of our ilpef approach for the randomly generated datasets is in the range of  <dig> to  <dig> seconds, which is comparable to the running time of klau's ilp approach  <cit> . the number of candidates chosen by our ilpef approach is between 12% and 20%, which is also comparable to klau's approach. in our experiments,  <dig> % of the constructed  matrices from the ilp <dig> are already d-disjunct matrices, which saves the effort to run the ilp <dig> iteratively. moreover, our ilpef approach has much faster decoding time. as shown in figure  <dig>  all decoding operations take less than  <dig> second. all the decoding results are correct, as expected.

in summary, we chose to generate a d-disjunct matrix using our ilpef approach for the simplicity of decoding. our experimental study shows that our ilpef approach can greatly reduce the decoding time while maintain comparable running time and solution size compared with previous approaches, which achieves our design goal.

CONCLUSIONS
a minimization problem arises from the study of non-unique probes selection. however, it is misleading to minimizing the number of probes regardless of the decoding ability of the corresponding design. efficient non-unique probes selection algorithms for dna microarray design should reduce the number of probes, which results in the reduction of experimental cost and time, while maintain good decoding ability. in addition, the designed algorithms should be error tolerant since errors are very common in biology experiment.

we have presented solutions for two cases, error free and error tolerance. for each case, we have shown efficient algorithms to select a minimum number of probes as well as to decode the results. these algorithms are able to identify at most d targets in a given sample. our non-unique probes selection can also identify the presence of at most d targets in a case of at most k experimental errors. in addition, we have also analyzed the running time of how to decode the test results obtained from the microarrays experiments. the time complexity of our decoding algorithms is o where h is the number of selected probes. experimental study has been carried out for the ilpef algorithm and the results have shown that our ilpef algorithm can greatly reduce the decoding time of existing approaches while maintain comparable running time and solution size.

note that d-disjunct matrices have a stronger property than that of d∀i= <dig> …,m-separable matrices. therefore, a d-disjunct matrix should have more rows  than that of ∀i= <dig> …,m-separable matrix. that is a trade-off for having a faster decoding algorithm. we choose to construct a d-disjunct matrix which results in a very simple decoding algorithm.

