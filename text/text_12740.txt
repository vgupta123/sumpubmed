BACKGROUND
evaluation of model accuracy is an essential step in protein structure prediction. the existing methods for quality assessment of protein models  are usually based either on a physical effective energy which can be obtained from fundamental analysis of particle forces or on an empirical pseudo energy derived from known protein structures . systematic assessment experiments, e.g. critical assessment of techniques for protein structure prediction  and livebench demonstrated that models with a correct fold can be confidently recognized, especially by the fold-recognition meta-servers  <cit> . however, comparative models, especially those based on remotely related templates, often exhibit local inaccuracies that are difficult to identify by a global evaluation, in particular misthreadings of short regions  corresponding to shifted alignments within individual secondary structure elements  <cit> .

in casp <dig>  we proposed that inaccuracies due to local alignment shifts can be identified and corrected by identification of variable conformations in alternative homology models, comparison of their verify3d scores averaged over only  <dig> neighbouring residues, and construction of hybrid models comprising the best-scoring fragments  <cit> . our method  turned out to consistently produce very accurate models, especially if regions with initially poor scores were systematically varied to generate additional models for evaluation  <cit> . however, detailed inspection of cases where we failed to identify the most native-like local conformation based on the verify3d score revealed a considerable variation of scores even among models with similar structural features. therefore, we decided to carry out a systematic evaluation of the capability of verify3d and several other popular mqaps, including the recently published method proqres  <cit> , to identify the best method for prediction of local accuracy of protein models. however, as the work progressed, we realized that none of the mqaps we analyzed was sufficiently accurate and robust and that they exhibited very different strengths, and weaknesses. this in turn prompted us to develop a new "meta-predictor" specifically optimized to detect local errors.

implementation
preparation of protein models for the local quality assessment
training data
we downloaded all models generated within the framework of the critical assessment of techniques for protein structure prediction  rounds  <dig> and  <dig>  for cases classified as 'template-based modeling', i.e. 'comparative modeling' and 'fold recognition'  <cit> . in these cases a large fraction of models have a correct fold and exhibit widely varying degree of global and local similarity to the native structure, with some completely wrong models . to create the model database we used only models that covered at least 90% residues of the target sequence and did not exhibit any internal deletions . if the casp target was a multidomain protein, it was split into individual domains, which were then regarded as separate models. ultimately, we collected  <dig> models for  <dig> casp5& <dig> targets. then these models where superimposed onto their experimentally solved counterparts using lga  <cit> , routinely used in casp assessment. for our datasets, the average root mean square deviation  on c-α atoms between the models and the templates is  <dig>  Å and the average gdt_ts score is  <dig> 

many of casp models are 'non-physical' in the sense that they often exhibit steric clashes, non-standard bond lengths and angles, improper stereochemistry or they lack parts of residues . thus, we 'idealized' our casp5& <dig> model dataset to minimize the most severe local errors by simply running modeller  <cit>  with default options, using the original model as a template to derive spatial restraints to build a refined full-atom model. we want to emphasize that such procedure can lead to false positives in the case of bad regions of a model and false negatives in the case of excellent refined models.

the average rms deviation between the idealized models and their original counterparts is  <dig>  Å reflecting a slight positional adjustment of the most distorted residues during the idealization. nonetheless, the gdt_ts score of the idealized models remains  <dig>  the same as for the original models, and the average rmsd with respect to the native structures changes negligibly from  <dig>  to  <dig>  Å, indicating approximately the same amount of movement towards and away from the native structures during 'idealization'. analysis of the rmsd and gdt_ts values for models of different accuracy reveals that on the average, our 'idealization' has slightly improved the absolute accuracy of original models with gdt_ts score <  <dig>  and slightly decreased the quality of models with gdt_ts ≥  <dig> . hereafter, the resulting set of models will be referred to as casp5&6+.

the aim of our analysis was to develop a method that would be able to accurately estimate the deviation of c-α atoms with respect to the corresponding residues in the native structures without any knowledge of the native structure. despite we introduced 'idealization', we intended to make predictions for the original models. thus, we trained metamqapii with the deviations between original models  to the native structures, even though the other component of training was the mqap score for the idealized models.

test data
in the last part of this article we compare metamqap with casp <dig> winners in the mqap category. thus, from the casp <dig> website we downloaded both the server models and quality assessment predictions done by winners of the mqap category. the accuracy of server models calculated by the lga method was taken from the casp <dig> website  <cit> . casp <dig> server models have been processed in the same way as the training casp5& <dig> data, e.g. they have been 'idealized' with modeller and scored with metamqap. as with the casp5&6+ dataset, deviations between the models and the experimental structures were calculated for models before 'idealization'.

statistical analyses
we applied wide range of statistical tools: such as pearson and spearman's rang correlation, roc curve analysis, t-test, multivariable regression, and cluster analysis. all statistical analyses were done using statistica  <dig> software .

model quality assessment programs 
for the evaluation of protein models from the training dataset and for the development of the metamqap we used  <dig> primary mqap methods: verify3d  <cit> , prosa <dig>  <cit> , prove  <cit> , anolea  <cit> , bala-snapp  <cit> , tune  <cit> , refiner  <cit> , and proqres  <cit> . verify 3d evaluates the environment of each residue in a model with respect to the expected environment as found in the high resolution x-ray structures. it operates on a '3d-1d profile' of a protein structure, which includes the statistical preferences for the following criteria: the area of the residue that is buried, the fraction of side-chain area that is covered by polar atoms , and the local secondary structure  <cit> . in our own experience, verify3d is rather permissive . prosa  <dig> relies on empirical energy potentials derived from pairwise interactions observed in high-resolution protein structures  <cit> . in our own experience, prosa  <dig> is very strict compared to verify3d, i.e. it often detects even very minor errors, such as distorted geometry of hydrogen-bonded residues, and therefore may be more useful for the evaluation of nearly-native homology models than for the fold-recognition models that are plagued by local errors. anolea is also based on a distance-dependent empirical potential. it evaluates the non-local environment  of each heavy atom in the model. the nle is defined as the set of all heavy atoms within the distance of  <dig> Å that belong to amino acids farther than  <dig> residues in the analyzed polypeptide. owing to the focus on non-local contacts, anolea is able to identify some errors that remain undetected both by verify3d and prosa  <cit> . prove analyzes the packing in protein models by evaluating the regularity of the atom volume, defined by the atom's radius and the planes separating it from other atoms  <cit> . bala-snapp evaluates the structure by means of a four-body statistical potential, applied to tetrahedral quadruplets or spatially neighbouring residues  <cit> . tune uses a neural network to predict local quality of residue from both a local and non local contact of residues in the model  <cit> . refiner is based on a statistical potential, which includes terms such as: contacts potential, long distance potential, hydrogen bonds and burial pseudo energy  <cit> . finally, proqres is the only method in this set, which has been developed specifically to predict local errors in crude protein models. this method applies a neural network to estimate local structure from: atom-atom contacts, residue-residue contacts, secondary structure context, and solvent accessibility  <cit> .

in the final comparison, we analyzed the results of "blind" assessment done for the casp <dig> dataset by  <dig> methods: qa <dig> – lee , qa <dig> – qa-modfold  <cit> , a method based on the nfold protocol  <cit> , qa <dig> – proq, qa <dig> – proqlocal  <cit> , qa <dig> – pcons <dig> a new variant of pcons  <cit> , qa <dig> – circleqa 

RESULTS
preparation of a set of models for evaluation
the evaluation of the capability of mqaps to predict the local accuracy of protein models requires a carefully prepared dataset. we aimed to identify the most native-like segments in a set of high quality models, in particular those generated by comparative modeling and fold-recognition methods. therefore, rather than analyzing popular sets of decoys with a clear majority of globally incorrect versions of various protein structures  <cit> , we decided to use models of all casp5& <dig> targets in the cm and fr categories . we used only models that covered at least 90% residues of the experimentally solved structure and exhibited no missing internal residues  . models from the cm and fr categories are usually based on templates with the same fold as the native structure, and the major reasons of their deviation from the native structure are alignment shifts  and/or structural divergence between the target and the used template. these models are 'relatively good' only with respect to the correct position of the backbone atoms in the protein core, but they often contain various errors, such as steric clashes between the side chains, missing side chains, unmodeled residues corresponding to insertions or terminal extensions, and discontinuities in the place of deletions. such models may be considered native-like in terms of c-α atoms, but non-physical in details. unfortunately, most mqap methods were optimized for the structures of crystallographic quality, and all 'non-physical' details contribute to their scores in unpredictable ways – either as very serious errors  or as artificially positive elements . in addition, casp models are generated by different modeling protocols which exhibit various peculiarities with respect to inclusion or omission of atoms. variants include c-α atoms, backbone and c-β atoms, all heavy atoms, or all atoms including hydrogens, or different combinations of the above . obviously, it is very difficult to compare the accuracy of residues modeled at such a different level of precision, even if the aim is to assess the accuracy of c-α coordinates only. moreover, most mqaps require complete models, without chain breaks or missing atoms, but often also without any hydrogen atoms. our casp <dig> results  clearly demonstrate that utilization of 'crude' casp models leads to decreased performance of mqaps, compared to the 'idealized' variants of the same models.

taking into account the above-mentioned considerations, we constructed an 'idealized' set of models  using modeller  <cit> , which minimizes the violation of stereo-chemical constraints as well as restraints derived from the template and yields the canonical set of atoms for each residue. the restraints were derived from the original casp models, instead of templates. this procedure reconstructed a heavy-atom representation for all residues except the omitted terminal residues and optimized the bond lengths, angles and packing. on the other hand, the backbone structure of such 'idealized' models maintained the conformation nearly identical to the starting structures . we envisage only one situation that can lead to a false significant improvement in an idealized model: if the original model contains big gaps  between c-α atoms of adjacent residues , modeller will attempt to seal the gap, causing conformational change in the neighboring regions and bringing it closer to what may be a native-like conformation . however, such cases are quite rare in practice.

the idealized models were used only to compute mqap scores, while the deviation between the modeled and experimentally observed positions of c-α atoms  was calculated for the original, unmodified models. additional file  <dig> shows the distribution of residue deviation in our set of 'original' models.

critical assessment of mqaps
all models in the casp5&6+ dataset were evaluated with  <dig> popular mqap methods that we found to be available for download and local installation: verify3d, prosa <dig>  prove, anolea, bala-snapp, tune, refiner, proqres . verify3d, anolea and refiner report series of "raw" scores for individual residues. prosa reports the composite score and its two components. anolea and bala report an additional score corresponding to the number of contacts/neighbours of each residue. tune and proqres report only a single score for each residue. we also analyzed the correlation between residue deviation with local residue features such as: solvent accessibility calculated using naccess  <cit> , residue depth calculated using msms  <cit>  as well as with the agreement between secondary structure predicted with psi-pred  <cit>  and calculated from the model using dssp  <cit> . in addition, we studied the accuracy of a trivial score , based on residue depth in the structure size of the protein and type of an amino acid. trivialscore divides the residues into  <dig> classes based on the  <dig> bins of model size ,  <dig> bins of residue depth in the structure  and  <dig> bins defined by each amino acid. the predicted trivialscore values directly correspond to the average residue deviation of residues grouped in a given class. trivialscore should be regarded as a baseline mqap, which predicts that on the average residues in the protein core are modeled well, and residues on the surface are modeled poorly.

according to our benchmark , the scores reported by proqres exhibit best correlation with the real residue deviation . this result was expected, since proqres is the only method in our test set that has been developed specifically to predict local quality of theoretical models, such as those from casp. however, our analysis also revealed that proqres score performs only slightly better than the global model accuracy . apart from proq and proqres, the correlations of primary mqap scores with the local accuracy of the model appear very poor – only a few scores exhibit a correlation coefficient above  <dig> . the scores that correlate best with the local model accuracy, are bala, verify3d score averaged in a window of  <dig> residues , anoleaw <dig>  and refiner. it is noteworthy that the 'smoothened' verify3dw <dig> score is a much better predictor of local model accuracy than the corresponding "raw" score . the same is observed for the anolea and its 'smoothened' variant anoleaw <dig>  another interesting observation is that the composite score reported by prosa  comprises a relatively well-performing component score describing atom-atom interactions  and a much poorer component score describing atom-solvent interactions . we also observed that scores reported by different methods are poorly correlated with each other, which provides a stimulus to develop a method that combines strengths of different methods and eliminates the individual weaknesses.

we were most surprised by a finding that per-residue deviation can be predicted to some extent by using trivial features that can be calculated directly from the model, without any sophisticated mqaps. features strongly correlated with per-residue model deviation include nonlocalneigh, resdepth, and relaccessibility, which describe depth or burial of residue in the protein structure. from our results, it appears that one of the best predictors of the local quality of the model is the satisfaction of the residue's preference to be buried in the core  or exposed on the surface . -in particular, trivialscore  shows  <dig>  correlation with residue deviation , better than most of common mqaps, e.g. verify3dw <dig> or prosa. further, we found that prove, bala, and proqres show the highest correlation with trivialscore among all mqaps tested , which suggests that the scores of these methods mainly indicate the depth of a residue in the structure rather than truly predict the local quality of the model. this phenomenon is even more visible in the results of cluster analysis, which show that mqaps and residue features group into a few clusters. on of them contains mostly trivial parameters i.e. localneighbours, absaccessibility, resdepth as well as two mqaps: prove and bala , suggesting that these mqaps are biased toward trivial features. among other clusters, the one grouping proqres, proq and deviation is most closely related to the cluster of trivial parameters. this means that the residue feature parameters related to depth in the structure are essential for prediction of residue deviation. however, it also means that predictions made by proqres may be significantly biased by trivial components.

summarizing, we observed that the local quality of the model can be predicted to a large extent by consideration of trivial features such as amino acid accessibility and depth in the structure. in other words, as a rule of a thumb, residues buried in the core are on the average predicted more accurately than residues on the surface. application of sophisticated algorithms implemented in mqaps provides only a minor added value. to our knowledge this important fact has escaped the attention of developers and users of mqap. nonetheless, different mqap scores are surprisingly poorly correlated with each other, which suggest that these added values might be different in each case. thus, there is a hope that combination of different mqaps together with informed analysis of trivial features may provide a much stronger predictor of local model quality than any of these approaches alone.

development of a meta predictor
combination of different sub-optimal predictive methods into 'meta-predictors' has been very successful in structural bioinformatics, in particular in protein and rna secondary structure prediction  <cit> , membrane protein prediction  <cit> , protein fold-recognition  <cit> , and identification of protein domains  <cit> . although sometimes even simple averaging shows improvement over the results obtained by the primary methods, there are machine learning techniques that allow more intelligent combination of the best features that different methods have to offer. here, we used a multivariate linear regression model to develop an mqap meta-predictor . we used the residue deviation as the dependent variable, while mqaps and residue features were used as predictors.

in order to develop a meta-predictor that would not be biased towards trivial parameters, we applied multivariate linear regression statistical models for selected groups of residues. the selection was based on trivial residue features: global model quality, residue depth in the structure, residue hydrophobicity and secondary structure assignment. in the case of global quality, the residues were first divided into  <dig> bins, corresponding to  <dig> groups of models with progressively better proq scores , with bin  <dig> comprising residues from the 1/ <dig> of models with the worst proq scores, bin  <dig> comprising residues from the 1/ <dig> of models with best proq scores etc. second, residues in each proq bin were divided into a new set of  <dig> bins according to the criterion of resdepth . here, bin  <dig> comprised 1/ <dig> of most exposed residues , while bin  <dig> comprised 1/ <dig> of most buried residues. third, we binned the residues according to hydrophobicity  and fourth – according to secondary structure . ultimately, all residues were divided into  <dig> groups . for each of these groups we created a unique linear regression statistical model to predict residue deviation based on parameters described in table  <dig>  it is worth mentioning that linear regression assumes that the relationship between dependent variable  and independent variables is linear, but this criterion would not be satisfied in our study. thus, we transformed both deviation and other parameters into ranks from  <dig> to  <dig> to amend this problem. finally, we applied the least squares method to estimate linear regression parameters for each of  <dig> models. each of the models was created by statistica  <dig> software, then the output was parsed by in-house python scripts.

it must be emphasized that the linear regression statistical models described above can predict rank  of deviation instead of the deviation in Ångströms, however the rank can be easily transformed into distance. the predicted rank of deviation were assigned to residue deviation according to average residue deviation of residues of the same rang as predicted in training data

in order to train and test the metamqap the dataset of all casp5&6+ targets was randomly divided into training data  and test data . the training data was used to train the metamqap method . the test data  was used to evaluate metamqap and compare it with the 'primary' mqaps.

accuracy of metamqap
the score reported by metamqap corresponds to the predicted absolute deviation of a c-α atom of each amino acid in the model from its counterpart in the native structure. some authors average local model accuracy over a  <dig> or  <dig> residue window along the protein sequence  <cit> . in this benchmark we decided to average score for each residue over the window of  <dig> residues. this procedure was applied both to metamqap as well as to other mqaps. all such smoothed scores show higher correlation coefficient than corresponding raw scores , and metamqap shows a considerable improvement in prediction of the local model accuracy in comparison with the best primary mqaps . the deviation predicted by metamqap correlates better with an observed deviation than a deviation predicted only using primary mqaps . the difference between metamqap and proqres  is statistically significant  we also computed a partial correlation coefficient between mqaps and residue deviation. partial correlation is a method used to describe a relationship between two variables whilst taking away the effects of another variable or variables . we selected global model accuracy , residue depth in the structure  and buried area  as the control variables. as expected, the correlation coefficient of mqaps with residue deviation decreased significantly, when the effect of control variables has been subtracted. despite that fact, metamqap has shown the best correlation of  <dig>  in comparison to  <dig>  observed for proqres . table  <dig> shows the observed residue deviation of residues that were predicted to be of the best and of the worst quality according to mqaps. the table presents also the true deviation considered here as a reference. the average deviation of 10% top residues  is  <dig>  Å. the average for 10% top residues according to metamqap is  <dig>  Å, which is more similar to the reference average  than in the case of other mqaps. here, metamqap significantly outperforms common mqaps such as veryfy3d  and anolea . the observed differences between metamqap and other mqaps are statistically significant .

the table presents average  <dig> % confidence interval of average and standard deviation for residue deviation. for a well-performing method, the average of  <dig> % highest quality residues should be low and for the  <dig> % lowest quality residues it should be high. in general, the bigger the interval between average residue deviation for best and worst quality residues, the more accurate a method . in addition the area under the roc curve  is shown

the advantage of metamqap is even greater in a context of standard deviation . for metamqap, the 10% top-scoring residues exhibit deviation of  <dig>  Å +/- std.dev.  <dig> , while for proqres, its 10% top-scoring residues exhibit deviation of  <dig>  Å +- std.dev.  <dig>  Å. in comparison, the  <dig> % truly best residues exhibit deviation of  <dig>  Å +- std.dev. <dig> .Å, which indicates that metamqap really pushes the prediction close to the limit. these data clearly show, that metamqap is more confident in detecting residues of highest quality than proqres or any other method. a similar situation is observed for the residues predicted to be of the lowest quality. the mean deviation of the residues marked as 10% worst by metamqap is  <dig>  Å and is significantly higher than mean deviation of  <dig> % worst residues selected by each of remaining methods, with a deviation of proqres  at the level of  <dig>  Å. it is noteworthy that 10% truly worst residues have avg. deviation of  <dig>  Å, which shows a room for further improvement even in the case of our method . in addition we also present the roc curve analysis  which confirms the performance of metamqap and overall ranking of other mqaps.

the predicted absolute deviation of individual residues in the model has a similar meaning to the b-factor parameter. it allows for assigning different confidence to regions that are of particular interest for the prediction of biological function of the modeled protein. on the other hand, in some applications it is more important to confidently rank the relative quality of different variants of the same sub-structure in a set of alternative models. the comparison of the ability of mqaps to estimate the rank of accuracy of the same residue in alternative models is shown in figure  <dig> 

the study was made for all residues in casp5&6+ test dataset as well as separately for a few group of residues whose variants in our data set exhibit mean deviations 0–2Å, 2–4Å, 4– <dig> Å and >  <dig> Å. intuitively, it should be easier to rank '4–8Å' sets of residues that include both very accurate and very inaccurate variants than sets '0–2Å' or '>8Å' of residues. in the 0– <dig> Å range, most variants have similar deviations from the native structure in all models and are typically all very close to the native structure. on the other hand, the set of residues with deviation at least  <dig> Å usually come from models with globally low quality, so their relative local quality becomes very difficult to predict by all mqaps. interestingly, prosa estimates better rank of variant accuracy than prosapair in spite of the fact that prosapair is better correlated with absolute residue deviation than prosa . another useful information for modelers is that prosa has the same accuracy as proqres for the most accurately modeled variants . despite the fact that metamqap was trained to predict absolute residue deviation, here again it outperforms all other mqaps in ranking different variants of a given residue. the advantage of metamqap over any another method is statistically significant in the case of each studied group of residues 

metamqap in casp7
a prototype of metamqap was one of the methods participating in the model quality assessment contest held within the "7th critical assessment of protein structure prediction methods" . the models submitted by all servers in tertiary structure prediction category were scored by all participating mqap's, and the assessments were compared with actual model accuracy. predicted gdt_ts was taken as the global reference score, while single residue deviations from the native structure were taken as the local reference scores  <cit> .

almost all casp <dig> benchmarks have shown that our prototype of metamqap exhibited rather poor accuracy. the phenomenon was observed both for global and local model accuracy. we conclude that it was caused mainly because of two reasons:

first, casp <dig> assessors compare mqap method using z-score of pearson's correlation instead of a regular value of the correlation. the z-score of correlation was calculated in the following way:

 z−score=n−3*−log⁡/2) 

r – correlation coefficient, n – number of scored models

the equations show that the z-score is proportional to the square root of the number of predictions submitted by an mqap method. our method was penalized for providing predictions of only a half of server models, which were full atom models and didn't contain any steric clashes. metamqap  submitted evaluations for  <dig> models while the winning pcons <dig>  scored  <dig> server models. thus, even if the pearson's correlation between i.e. global model score and gdt_ts would be nearly the same for the two methods, the z-score is much higher for pcons <dig>  we conclude that the mqap scoring system used in casp <dig> had an unexpected bias and in our opinion does not necessarily show the discrimination value of the methods tested.

second, metamqap was trained on casp5&6+ database containing models idealized by modeller. in the casp <dig> experiment we made a very serious mistake and used metamqap to evaluate models without any idealization. after casp <dig> experiment we realized that all models evaluated by our method would be evaluated more accurately, if they were first idealized by modeller, exactly as we have done for our training set. such behaviour is now default for  metamqap.

below we present the benchmark of the current version of metamqap on the same set of casp <dig> server models that was used in real casp <dig> mqap benchmark. all of these server models were scored by our method after idealization by modeller. for both global and local deviations in the benchmark, we use data deposited on casp <dig> website  instead of the ones calculated by ourselves.

global model accuracy prediction
there are two important questions for which answers are sought. first, how accurate is a given model , without considering any alternative models? second, if there are number of alternative models, how do they compare to each other according to accuracy?

according to the casp <dig> quality assessment , the four methods that are best in predicting gdt_ts are: qa_ <dig>  qa_ <dig>  qa_ <dig>  and qa_ <dig>  while four winners in predicting the rank of alternative models are: qa_ <dig>  qa_ <dig>  qa_ <dig>  and qa_ <dig>  <cit> . to our best knowledge, the qa_ <dig> method is so far unpublished and we could not find any web server, thus it was impossible for us to replicate its results. according to casp <dig> abstracts  <cit> , qa_ <dig> is based on global optimalization of a scoring function. a set of models for given target sequence is clustered together and the clusters are evaluated by modeller scoring function  <cit>  and/or dfire energy  <cit> . methods qa_ <dig> , qa_ <dig> , and qa_ <dig>  were developed by elofsson and coworkers  <cit> . proqlocal combines score of proqres and proqconf  <cit> .

the pcons method analyzes the set of protein models and looks for recurring three-dimensional structural patterns  <cit> . based on this analysis, each model is assigned a score reflecting how often its three-dimensional structural patterns are present in a whole ensemble of submitted models. it is based on the assumption that recurring patterns are more likely to be correct than patterns than occur only once or in few models. pcons returns one score reflecting the predicted global quality and scores for all individual residues reflecting their predicted local quality. unfortunately, the latest version of pcons -pcons <dig> does not allow to submit a single model to score it. it can be used only to score set of models created by the pcons.net modeling server  <cit> .

the qa_ <dig> method is called qa_modfold. it combines the scores of modcheck, proq-lg, proq-lx and modssea using a neural network to predict global model accuracy  <cit> . the method is available as web server  <cit> .

the qa_ <dig> method, also called circle-qa, predicts model quality in two steps. first, it predicts target difficulty to assign weights for two scoring functions used in a second step. these functions are: 1) agreement between secondary structure predicted for the target sequence and observed in the model, and 2) combined score of burial area, fraction of polar area, and secondary structure. unfortunately we were not able to find a web server of the method.

only  <dig> methods of qa_ <dig>  qa_ <dig>  and qa_ <dig> belong to both of presented groups of winners . in a following benchmark we compare metamqap with these  <dig> methods. we decided to focus our analysis on models that were scored by all the compared mqaps. fortunately, almost all of these methods were able to score almost all servers models, so for such a benchmark we used  <dig> of  <dig> casp <dig> servers' models. additional file  <dig> presents a number of predictions for each of the considered mqap methods.

prediction of model gdt_ts
additional file  <dig> shows the accuracy of mqaps as a function of target difficulty. the targets were divided into two different groups: "tbm"  and "tbm/fm or fm" . we decided to combine tbm/fm and fm targets, because the distribution of gdt_ts score for models submitted for these targets are similar, given that we consider only single domain targets. as expected, all mqap methods work better for tbm targets. the three most accurate methods in the case are qa_ <dig>  metamqap and qa_ <dig>  all of these methods exhibit degraded performance for more difficult targets . still, our metamqap is also among three best methods, while qa_ <dig> and qa_ <dig> fail in predicting gdt_ts for hardest targets. surprisingly, for most difficult targets, the size of a model is the best predictor of a model gdt_ts. actually, it is better than any mqap score: the correlation with coefficient of - <dig>  indicates that the longer a target sequence the poorer are the models. on the other hand, for the tbm group, the size of a target is only weakly correlated with gdt_ts .

our findings also indicate, that the number of missing residues can greatly influence the mqap accuracy. additional file  <dig> presents the correlation of global mqap scores with gdt_ts with respect to completeness, measured as the ratio of a number of residues in the model to the total number of residues in the experimentally solved target structure. all methods except qa_ <dig> exhibit significantly decreased accuracy for models which have less than 80% of residues. therefore we strongly recommend using metamqap only for models, in which no more than 20% of residues are missing.

predicted ranking of models
one of the two most important characteristics on an mqap is the ability to discriminate between better and worse alternative models for a given target sequence. figure 5b shows the mean spearman's rank correlation between global model accuracy measured by gdt_ts and the mqaps' global score. we use spearman's rank correlation instead of pearson correlation, because it is more appropriate for ranking alternative models. the spearman's rank correlation was averaged over all casp <dig> targets. we observe that the correlation is similar both when we consider all casp <dig> models and when only the models evaluated by all mqap methods. the correlation of metamqap global score with the rank of model accuracy is  <dig> , and it is significantly lower that in the case of method qa_ <dig>  or qa_ <dig> . both of these methods used clustering of large sets of alternative models and then assigned higher scores to models that were members of big clusters. we conclude that availability of numerous alternative models and their clustering based on geometric similarity is a method of choice for ranking of models. this criterion has been implemented earlier for selection of best decoys both from de novo folding  <cit>  and fold-recognition analyses  <cit> .

additional file  <dig> presents the ranking abilities of mqaps relative to the target difficulty. exactly as before, we grouped single domain casp <dig> targets into two classes: 1) tbm and 2) fm and tbm/fm. for easy targets  the highest accuracy is achieved by qa_ <dig>  but the effectiveness of the method significantly decreases for difficult targets . for the group of hard targets, pcons <dig> performs best, because its accuracy is quite insensitive to target difficulty.

in figure  <dig> and  <dig> presents an overview of metamqap accuracy over all single domain targets in casp <dig>  figure  <dig> shows the spearman's rank correlation between the global score of metamqap and the model accuracy. comparison of accuracy calculated as a difference between the model ranked best by metamqap with the truly most accurate server model is shown in figure  <dig>  the lowest correlation was observed for target t <dig> . the model that was ranked best by metamqap has the gdt_ts score of  <dig> , while the best server model has the gdt_ts score of  <dig> . other significant mispredictions of our method are observed for targets t <dig>  t <dig>  and t <dig>  even though the spearman's rank correlation of these predictions is quite high. in the case of t <dig> the highest ranked model contained only 47% of residues, which could have caused metamqap to fail by overpredicting its accuracy. a similar phenomenon is observed for targets t <dig> and t <dig>  metamqap selected model t0335al333_ <dig>  which contains only 39% of residues and t0360ts102_ <dig> which, contains 84% of residues. for the remaining targets t <dig>  and t <dig> , ranking errors made by metamqap are difficult to explain. it seems that single outstanding models could have been misevaluated by metamqap assessment.

in table  <dig> we present gdt_ts scores of models ranked as best according to mqaps. we were surprised to see that models ranked as best by pcons  have significantly lower overall mean gdt_ts score  compared to other mqaps e.g. qa_ <dig> . this demonstrates that even if an mqap generates scores that have a good pearson's correlation coefficient with the true model quality, this method is not necessarily the one most appropriate to select the truly best model. pearson's correlation coefficient is very sensitive to extreme values, such as those of models with incorrect folds. contemporary methods can usually predict a correct fold for 'easy' fold-recognition targets, and therefore if alternative models are generated by a number of methods, most of them usually share the same fold and are similar to each other. thus, a trivial mqap that only clusters models can reach high correlation coefficient for sets of models for 'easy' targets, only because of its ability to discriminate outliers with clearly non-consensus  folds. in our opinion it would be beneficial to focus the evaluation on the ability of mqaps to select the most accurate model  in sets of relatively high quality alternative models for a target, and to weigh down the consideration of the ability to discriminate between bad and very bad models .

the table shows the average gdt_ts score calculated for each top-ranked  model for all targets, as well as cumulative scores for different percentiles of top-ranked models.

local accuracy prediction
in casp <dig> experiment only  <dig> servers competed in predicting the local quality of models. in the following benchmark we compared metamqap with  <dig> mqaps that were most accurate in that category: qa_ <dig>  and qa_ <dig> . figure 8a presents overall pearson's correlation between the local residue error and the local mqap score. exactly as before, the correlation was calculated for residues in all submitted models  or only for the residues in models that were scored by all of the compared methods . we note significant difference between the current version of metamqap and the previous version that did not attempt to 'idealize' models. however, the multi-model comparison method qa_ <dig> has still an advantage, as it uses information unavailable in a single-model regime of metamqap.

additional file  <dig> presents the pearson's correlation between local mqap scores and true residue deviation as a function of target difficulty. for tbm targets metamqap is the 2nd best method, with the correlation of  <dig> . for more difficult targets the accuracy of all methods decreases significantly, but the effect is lowest in the case of pcons <dig>  such a result was expected, because for very poor models statistical potentials used by e.g. metamqap or proqlocal become less accurate and only the information how common a given fragment is in set of alternative models seems to be an effective indicator of model quality.

there is also a clear correlation between mqap accuracy and residue difficulty . it can be measured as an average error between instances of a residue in all different models with respect to native structure. the residues were split into four residue difficulty bins: the "easiest" residues are those with a mean deviation in models of less than  <dig> Å, the "easy but not easiest" have mean deviation between 2– <dig> Å, and so on. the most difficult residues have mean deviation above  <dig> Å. for all residue difficulty classes, metamqap shows accuracy comparable to proqlocal. the accuracy of all methods drops down significantly when the residue mean deviation is >  <dig> Å.

CONCLUSIONS
we have developed a new method for the quality assessment of protein models, which uses the results of eight other mqap methods  and a wide range of local residue features to predict the local deviation of residues in the model from their counterpart in the  native structure. to our knowledge, this is the first publicly accessible method that attempts to predict the absolute deviation  for the individual residues in the model in a manner completely independent of used modeling protocol and without any additional alternative models. the development of such methods was recently strongly encouraged in the course of discussions of members of the protein structure prediction community on the forcasp website  <cit> . among similar methods, the modfold server v <dig>   <cit>  can predict local residue deviations , but only for multiple models.

when our method is compared with the winners of mqap category in last 7th edition of the casp experiment  <cit> , our method is outperformed by a few methods that use to their evaluation a large set of alternative models. however, thus far none of these methods has been made available as a public web server. moreover, these methods require that a potential user provides a large set of models, whose size and diversity would be comparable to all models submitted by all casp modelers for a given target. it is very unlikely that such an effort would be possible outside the casp experiment itself. therefore, metamqap has a potential to become a tool of choice for researchers interested in evaluating just a single model of their target protein, or a few individual models, without necessity to provide a multiplicity of state-of-art models with many different modeling methods.

we hope that our server will be useful for many researchers, perhaps not only computational modelers, but also experimental structural biologists willing to identify confident parts of low-resolution models, e.g. structures generated by automatic tracing of crystallographic electron density maps or preliminary models from an nmr experiment. one possible area of immediate practical application for our method could be the identification of regions of comparative models that deviate less than ~ <dig> Å from the native structure and could be used to solve the crystal structures directly from the diffraction data, using the molecular replacement approach  <cit> . another possible application is to ensure that the overall quality of the model is sufficient for the intended application and to predicting regions of lower quality for further refinement.

it should be remembered that metamqap is a 'meta-server', and critically depends on the 'primary' methods for the assessment of the local quality of models. the training protocol described in this work can be extended in the future to include additional models  and additional primary mqap methods  – both general ones as those that specialize in detection of very minor or very large errors, or deviations of some particular type.

availability
we implemented metamqap as a web server available for free use by all academic users at the url . any user can submit a model in the protein data bank  format. after assessment, the web server sends three different files by e-mail. a first file contains a simple report about whether all mqaps used for computing metamqap score were successfully executed. the second file contains raw scores of primary mqaps and the deviation predicted by metamqap for each residue, as well as a gdt_ts score predicted for the whole model. the third file contains the model pdb with the temperature  fields replaced with the metamqap scores. one option corresponds to linear scaling of values onto the range of  <dig>   and  <dig>  , similar to the colorado3d server  <cit> . if an option of 'absolute values' was used, then raw metamqap scores are reported without scaling . the results can be conveniently visualized e.g. with any macromolecular viewer that allows coloring the structure according to b-factor values . per-residue prediction accuracy is visualized as a color in a spectrum between blue , and red . figure  <dig> shows an example of three alternative comparative models scored with metamqap, with the results visualized as temperature factors.

thus far, we have used metamqap in a number of modeling analyses to discriminate between alternative models and to illustrate the uncertainty of different regions in modeled proteins. table  <dig> list the published modeling analyses that relied on metamqap that can be used as guides or case studies for potential users.

authors' contributions
mp developed metamqap, made statistical analysis and drafted the manuscript. mjg provided advice on development on metamqap and revised the manuscript. rm wrote code to parse mqaps. jmb conceived of the project, coordinated it, and edited the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
absolute deviations  between the modeled and true positions of c-α atoms of all residues. deviations were calculated by comparing the casp5& <dig> model dataset with the native structures .

click here for file

 additional file 2
the distribution of prediction of mqap methods as well as metamqap for casp <dig> server methods. our benchmark database contains  <dig> models evaluated by each of the methods. dataset of models: server casp <dig> models

click here for file

 additional file 3
pearson's correlation between the predicted global accuracy of models  and the actual accuracy. correlation was computed only for models evaluated successfully by all mqap methods. as a reference, we also present the correlation of a trivial parameter, namely the number of amino acids in the target sequence. evaluation was performed on a set of all models submitted to casp <dig> by servers.

click here for file

 additional file 4
accuracy of mqap as a function of model completeness. the picture presents the pearson's correlation between the global mqap score and a model global accuracy . the correlation was computed only for models scored by all of presented mqaps. evaluation on all casp <dig> server models.

click here for file

 additional file 5
mean spearman's rank correlation between ranking of a model  and a prediction of global model score. tbm, tbm/fm and fm are casp <dig> target difficulty classes . correlations were calculated only for single domain models evaluated by all mqap methods. we assumed the 95% confidence interval. evaluation on a set of all casp <dig> server models.

click here for file

 additional file 6
pearson's correlation between predicted and observed residue deviation. dashed bars – correlation on a set of single-domain casp <dig> models evaluated by all presented mqaps, black bars – correlation for a set of all single-domain casp <dig> server models.

click here for file

 acknowledgements
we are grateful to the developers of primary mqaps, in particular those used in this work: verify3d, prosa, bala, anolea, prove, tune, refiner, and proq, for making their methods available. our method can stand only 'on their shoulders', and without them the development of metamqap would not be possible. we also thank our colleagues, in particular marcin feder, michal pietal, and maciej fijalkowski for critical comments and useful suggestions and for their help with the installation of metamqap as a publicly available server. this work was supported by the polish ministry of science . m.p. and j.m.b. were additionally supported by the nih 
