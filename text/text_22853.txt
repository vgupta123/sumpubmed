BACKGROUND
the peer-reviewed scientific literature is a major source of information for developing research hypotheses and creating new knowledge through synthesis of research findings  <cit> . the information explosion in biomedical science has created a huge challenge for researchers, who want to obtain useful information promptly and efficiently. human genetic association studies epitomize this challenge because they have proliferated rapidly since completion of the human genome project  <cit> . systematic review and meta-analysis have become important approaches for evaluating the robustness of such associations across different study platforms and populations  <cit> . a key factor in the quality of a systematic review is complete capture of the relevant studies  <cit> . many databases that deposit genetic association information, including citations from pubmed, have been built and curated  <cit> . pubmed  <cit>  is the largest publicly accessible biomedical literature database and is the main source for such activities. however, because of its large size and the complex syntax required for query formation, it is fairly difficult to comprehensively and effectively search pubmed for genetic association studies. the necessarily labor-intensive screening and curation process makes the maintenance of such databases extremely challenging.

automatic literature classification is becoming increasingly attractive and has already demonstrated some successes in the biomedical literature  <cit> . the support vector machine  method  <cit>  is a powerful machine learning technique that has been used to solve classification problems  <cit> . an earlier report described a potential application of svm methods to classify literature on human genome epidemiology  <cit> . in this paper, we report a novel method for feature selection and show that using it to train the svm model significantly improved its ability to classify reports of human genetic association studies. we implemented the method as a java-based application named gapscreener  that can be freely downloaded  <cit> .

implementation
svm model generation
data sources
to generate the training dataset for the svm experiment, we used  <dig>  randomly selected abstracts from articles published between  <dig> and  <dig> in pubmed as a background dataset. the positive dataset consisted of  <dig>  randomly selected gene-disease association articles from the huge navigator  <cit>  , a continuously updated database of studies relevant to human genome epidemiology sponsored by the national office of public health genomics. inclusion and exclusion criteria for positive dataset from the huge pub lit database has been reported  <cit> .

pubmed abstract text retrieval
we developed a pubmed text extraction tool using the ncbi e-utility  <cit>  to retrieve text content based on pubmed identification numbers . the text used for processing consisted of the title and the abstract, or the title alone if the abstract was not available. the text data were stored in a data structure for processing.

text processing and extraction of keywords
the abstract and title of each article were then processed with the text-processing tool we developed. a stemming technique was used to deal with morphologic word changes, for example, polymorph and polymorph were considered the same word. a stop word list was generated for some common english words, such as pronouns and articles, to reduce the number of words extracted.

significant keyword generation
we selected keywords by identifying statistically significant differences between the probability of their occurrence in the text  of human genetic association articles, compared with their frequency in all other articles. the sample sizes of both groups were large enough that the distribution of differences in probabilities was approximated by a normal distribution. thus words with a z score greater than  <dig>  or less than –  <dig>   were chosen as feature keywords.

the statistical formula  <cit>  used for calculating the z score is given by:

 z=p1−p2pq if p=n1p1+n2p2n1+n2q=1−p 

where:

p <dig> = probability of occurrence of word in genetic association abstracts.

p <dig> = probability of occurrence of word in non-genetic association abstracts.

n <dig> = total occurrences of word in genetic association abstracts.

n <dig> = total occurrences of word in non-genetic association abstracts.

generating svm input data
the statistically significant keywords are called feature keywords and were used to construct the svm features. each feature keyword was weighted according to its z score, normalized to values from - <dig> to + <dig>  for the training and testing data sets, the script generated the svm input based on sparse format  <cit> . the presence of each keyword was represented by its position on the feature keyword list, followed by a colon and the normalized z score; the absence of keywords was ignored and each feature was separated by a space, for example, 1: <dig>  30:-  <dig> . in the training data set, the first column of the input data was set to the known outcome, i.e.,  <dig> for positive, - <dig> for negative. in the test set, the first column of the input dataset was set to  <dig> 

two sets of significant keywords were generated. one set contained those with positive z scores above the threshold  ; the other contained key words with both positive  and negative z scores  .

svm model training
we used libsvm  <cit> , a freely available svm software library, to train the svm model. the accompanying utility, grid.py, was used to find optimum parameters for penalty parameter c and gamma in the radial basis function  kernel. the rbf kernel was chosen based on its potential in terms of performance  <cit> .

stand-alone application implementation
gapscreener is a stand-alone application built with the java programming language. java swing  <cit>  components were used to build the graphical user interface . the application incorporates open-source libsvm java codes for prediction, employing the svm model we trained. java-based web services in the ncbi e-utility were used to query and retrieve pubmed records. ezinstall  <cit> , a freeware application, was used to package the application with a java runtime environment , for automatic, self-contained installation.

performance evaluation
general performance evaluation
to evaluate the performance of the screening tool, we used a series of new test data . the first test data set  consisted of selections from pubmed during five consecutive weeks  according to the routine, traditional screening process used to build the huge navigator  <cit> . positive or negative status assigned by the routine process was considered the gold standard. we used this data set to evaluate two keyword weighting schemes. a second data set , selected from pubmed during four subsequent weeks , was used to evaluate false-positive results generated by the gapscreener using the selected weighting scheme.

recall, specificity and precision were calculated from the test data to evaluate the performance of the application. the formulas for calculating these parameters are as follows:

 re⁡call=tptp+fnpr⁡ecison=tptp+fpspecificity=tntn+fp 

where tp, tn, fp and fn represent the number of true positive, true negative, false positive and false negative results, respectively.

to compare the results of classification by the svm tool with the gold standard, we used logistic regression . we produced separate logistic regression models for results of the one-way and two-way svm schemes during the 5-week experiment . results from each model were used to generate receiver-operating characteristics  and calculate the area under the curve  with 95% confidence intervals. the auc of roc curves for the two models were compared using nonparametric methods  <cit> .

domain-specific performance evaluation
a list of articles compiled independently by domain experts was used as the gold standard to evaluate the predictive accuracy of the application. a network of eight experts in the analysis of genetic associations with preterm birth performed a comprehensive literature search to build a knowledge base for systematic review and meta-analysis. the search was limited to articles published from january  <dig>   <dig>  to april  <dig>   <dig>  complex queries compiled by a librarian were used to query pubmed and embase  <cit> . the complex queries consisted of sophisticated pubmed and embase syntax filling more than four single-spaced pages. the results were manually reviewed by the domain experts.

for comparison, we used the gapscreener to screen all pubmed abstracts published during the same period of time in a two-step process. first, we compiled a broad pubmed query based on common terms related to preterm birth. the  <dig>  pubmed abstracts returned by this query were then classified by the svm tool.

query: prematurity or infant, premature or infant, low birth weight or labor, premature or preterm labour or premature birth or preterm birth or preterm infant or preterm premature rupture or preterm pregnancy outcome or preterm delivery or adverse outcomes of pregnancy or obstetric labor, premature.

RESULTS
svm feature selection
we generated a list of significant keywords using the z score method, based on comparing their relative frequencies in  <dig>  general pubmed abstracts and  <dig>  gene disease-associated abstracts included in the huge pub lit database. the one-way and two-way weighted schemes generated lists of  <dig>  and  <dig>  keywords, respectively. normalized z scores between  <dig> and - <dig> were used as weighting parameters for each keyword.

the two-way weighted scheme  performed better than the one-way scheme in terms of recall, specificity and precision . the auc for the two-way scheme was significantly larger than for the one-way scheme .

one-way: key words with z scores greater than  <dig>  were selected as featured key words.

two-way: key words with z scores greater than  <dig>  or less than - <dig>  were selected as featured key words.

auc: area under the curve.

ci: confident interval

using the svm tool for huge pub lit database screening and curation
the routine screening process used to perform weekly updates of the huge pub lit database was based on a complex query that combined medical subject headings  terms and selected text words, followed by a labor-intensive, time-consuming manual review by a single curator   <cit> . because a previous evaluation had concluded that the recall of this process was about 80%  <cit> , we re-evaluated the svm false positives and found that the svm was able to pick up  <dig> positive articles missed by the traditional curation process during the 4-week evaluation period; however,  <dig> positive abstracts were missed by the svm .

* true positives re-evaluated by the curator.

the number of abstracts returned by the query is a crucial factor in determining the burden of curating the huge navigator database. the ever-increasing number of genetic association studies – combined with curator fatigue – may also influence the quality of the database. our 4-week experiment showed that using the gapscreener reduced the number of abstracts requiring manual review approximately 8-fold .

note: the number for the svm tool was generated based on entrez date; the number for the previous method was generated based on mesh date.

*: previous method: the screening method described in the reference  <dig> 

screening pubmed for genetic associations with preterm birth
we built this application not only for general screening of the pubmed literature on genetic associations but also as a tool that could be customized for searching genetic association literature in any specific domain. we used preterm birth as an example to evaluate the application's performance in this setting. an independent screening process performed by domain experts first identified  <dig>  articles in pubmed and embase by complex pubmed and embase queries. after reviewing each abstract manually,  <dig> articles were included in the knowledge base. all  <dig> articles were recorded in the pubmed database. in a parallel process, the gapscreener was used to perform the initial screening automatically with the preterm birth specific query , identifying  <dig> articles. of these,  <dig>  overlapped with the set of  <dig> articles identified by the domain experts. the gapscreener missed two articles found by the traditional process but picked up six additional articles that the traditional process had missed .

implementation of the user-friendly application
the gapscreener includes all components in the screening process: pubmed record retrieval from ncbi, text content processing for keyword extraction, svm input data formatting, and svm output display and record export . a graphical user interface  provides a user-friendly environment . the application can be freely downloaded and its self-installation capacity makes the process fairly easy.

discussion
the number of published genetic associations has exploded during the past decade  <cit> . finding these associations in major online databases like pubmed is critical for establishing the knowledge base on genetic factors in specific diseases  <cit> . automated tools are needed to help scientists cope with the information overload. for  <dig> years, the huge pub lit database has continuously collected pubmed literature related to human genome epidemiology, providing a great opportunity to test machine learning techniques for automating the screening process  <cit> . compared with the existing, traditional screening process, the gapscreener dramatically reduced the burden of manual review and substantially improved screening recall, from 80% to  <dig> %.

feature selection is an important element of the support vector machine technique. our weighted z score method performed better than a previously reported method based on the term frequency × inverse document frequency  weighting scheme  <cit> . representing statistical information for each keyword as a normalized z score  performed better than the binary representation  <cit> .

as we demonstrated in the example of preterm birth, a potentially important application of the gapscreener is identifying genetic association literature in a specific domain . this could be very useful to disease-specific networks or consortia, such as those that have banded together in a global hugenet collaboration  <cit> . the gapscreener takes advantage of pubmed search capacity to narrow down the returned abstracts to a specific topic before applying the svm technique.

the gapscreener could become a routine screening tool for researchers and database curators for maintaining a local reference database. the tool can be downloaded at no charge and source code is available upon request. it is a freeware search tool that can assist researchers with systematic reviews by identifying genetic association literature in pubmed in a user-friendly and sensitive way. to our knowledge, it is the first free application that uses svm techniques to classify published literature related to human genetic association studies. certainly, a similar approach could be used to classify literature in other biomedical fields.

although the gapscreener demonstrated high recall and specificity, it has many aspects that could be improved. for example, the two-way weighted z score scheme based on a threshold of ±  <dig>  generated  <dig>  keywords. the number of featured keywords influences the processing speed, which in this example averaged about  <dig>  second per abstract. we are planning to experiment with shorter featured keyword lists to improve processing time without sacrificing recall.

the keyword approach is only one of many ways to transform text into a feature vector. use of controlled vocabularies can make "keywords" more meaningful and condense the list by reducing synonyms for a particular concept to a single term. the unified medical language system  sponsored by the national library of medicine provides a central repository for standard controlled vocabularies in the biomedical fields  <cit> . metamap transfer  is a tool that maps free text to concepts in the umls metathesaurus  <cit> . umls terms could be used during the selection of featured keywords.

CONCLUSIONS
gapscreener is the first free svm-based application available for screening the human genetic association literature in pubmed. it uses a novel svm weighted-feature selection scheme. a performance evaluation demonstrated high recall and specificity. the user-friendly graphical user interface makes this a practical, stand-alone application.

competing interests
the authors declare that they have no competing interests.

availability and requirements
project home page:



operating systems: windows

programming language: java

software packages: j2ee  <dig> .

license: gnu general public license. this license allows the source code to be redistributed and/or modified under the terms of the gnu general public license as published by the free software foundation. the source code for the application is available at no charge.

any restrictions to use by non-academics: none

authors' contributions
wy designed and implemented the infrastructure, wrote the source codes, and drafted the manuscript. mc was involved in the data curation and evaluation tests. sd was involved in the test data preparation and evaluation. ay was involved in the data analysis and helped in manuscript preparation. aw participated in design of the system evaluation, data collection and analysis. tl performed the statistical design and data analysis. mg provided advice on the project and revised the draft manuscript and led the project. mjk oversaw the project and revised the draft manuscript. all authors read and approved the final document.

