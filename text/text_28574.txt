BACKGROUND
genome annotation is used to identify and denote function of different segments in a genome sequence  <cit>  and forms a basis for many downstream genome analyses. several annotation methods  for eukaryotes  <cit>  and prokaryotes  <cit>  have been developed. this multitude of ams brings some natural questions such as those regarding the strengths, weaknesses and differences of these ams and annotations generated by them, as well as a possibility to combine them to extend annotations of individual ams. in spite the fact that a tool with such utilities will be of great help to researchers in the field, the public automated systems that provide detailed comparison between annotations are not available. here, we present a simple, yet effective, automated tool for bacterial genome annotation comparison , which addresses these issues for functional annotations of prokaryotic genomes.

beacon is capable of generating rapid, comprehensive, visual and informative analytical results. it can be used to: 1) compare annotations from multiple ams relative to a selected reference annotation   <cit>  published records, or broad institute  <cit> ); 2) perform annotation comparison between annotations obtained by different ams for the same genome; 3) generate extended annotation for gene function when different ams assign different functions to the similar gene ; 4) expand ea by adding uniquely annotated genes from other annotations . for example, one of the potential uses of beacon can be to update annotations for large number of microbial genomes that are deposited long time ago and are not updated since then  <cit> . in these cases, multiple ams can be deployed by beacon.

there are many ams used to annotate prokaryotic genomes with different tools being developed. for example: the ncbi prokaryotic genome automatic annotation pipeline   <cit> , the automatic annotation of microbial genomes   <cit> , the rapid annotations using subsystems technology   <cit> , the bg <dig> system  <cit> , the rapid prokaryotic genome annotation prokka  <cit> , the prokaryotic annotation pipeline from the institute for genome science   <cit> , and the integrated microbial genome expert review system   <cit> . the annotation output of these ams for the same genome may vary considerably since there are no commonly accepted standards for gene function annotation process  <cit> . a few methods  were used to evaluate and compare genome annotations, each having its advantages and drawbacks. an annotation confidence score  scheme was introduced  <cit>  to provide a score to the annotation of particular genomes based on a group of selected reference genomes. acs method that is based on genome comparison approach may reduce the number of gene annotations that have to be checked manually. however, it depends on the number of reference genomes and their phylogenetic distances. another method  <cit>  was introduced for comparing different annotations after removing hypothetical genes . nevertheless, this method is not automated. in  <cit> , the halorhabdus utahensis  genome was used to compare three different functional genome annotations. the method involved some manual procedures as well. a semi-automatic protocol to compare functional genome annotations is proposed in  <cit> . the system from  <cit>  is difficult to setup and test due to complex input requirements and the need for interpretation of the reported results that could be subjective. the method implemented in beacon provides a fully automated, simple and quick comparison of genome annotations generated by multiple ams and addresses the four points indicated previously. its ea provides the extended annotation of gene function increasing the number of genes annotated with functions. this increases the number of genes with assigned function  as compared to individual annotations. on the other hand, eua, in addition to ea, expands the gene set of individual annotation by adding uniquely annotated genes from other annotations.

in what follows we present the method used, the implementation of beacon, the evaluation datasets, and the results obtained by applying beacon to h. utahensis genome annotations generated by three different ams. in additional file 1: section  <dig> we provide the comparison results of annotations by different ams for the additional three genomes  k- <dig> strain, e. coli ty <dig> strain and candidatus carsonella ruddii dc ).

implementation
beacon: method and implementation
in order to have automated, rapid, simple and informative genome annotation comparison we developed a tool, beacon, which can analyze and compare annotations generated by multiple ams and extend the annotation generated by an individual am. beacon is implemented in c++ and its workflow is outlined in fig.  <dig> fig.  <dig> beacon workflow. this diagram illustrates the flow of the processes in beacon tool



annotation comparison
the first functionality of beacon is the comparison of multiple annotations and, as mentioned above, it works with or without a reference annotation. initially, beacon collects basic relevant statistics from each of the annotations. this information includes: the number of coding dna sequences , transfer rna , ribosomal rna , non-coding rna , overlapping genes, pseudogenes, frameshifted genes, discontiguous genes, genes encoding hypothetical products , genes encoding non-hypothetical products , and whether they are with gene symbol, without gene symbol, or conserved  <cit>  according to the existing annotations in public databases. then, beacon starts the annotation comparison process. for comparison to a reference annotation, let us assume that for a genome sequence we generated an annotation x using one am and we want to compare this annotation to a reference annotation, z . beacon first parses the z annotation, records the gene count and detailed information about each gene, such as locus name, locus tag, gene strand, gene type: cds, rrna, trna, ncrna, genomic start and stop positions of a gene, whether the gene is pseudogene or frameshifted based on its annotation, and the other gene information. beacon then finds overlapping genes within the same annotation, either with significant or short overlap. by default, beacon considers two genes on the same strand significantly overlapping if they contain common locations and if the start and stop positions of the shorter gene relative to that of the longer one are deviating for no more than a given offset  of the length of the shorter gene. greater deviations are considered by beacon as a short overlap. however, users can define other percentage of mismatch of gene ends for this purpose. beacon then parses annotation x, keeping track of gene count and information on individual genes to compare those to the reference annotation z. in the process, beacon compares the start and stop locations of each gene in annotation x  to the start and stop positions of all the genes in annotation z. as a comparison condition, genes should be on the same locus, same strand and if one of the genes is pseudogene, we will consider identical or significantly overlapping genes from other ams pseudogene as well. additional comparison condition for cds genes is to be in the same frame, then beacon reports the same frame or frameshifted genes. beacon then assigns a status to each gene in annotation x. these genes could be denoted as identical, similar, unique with overlap or unique without overlap:genes from annotation x that completely overlap  with genes in annotation z will be identical genes for x and z.

genes from annotation x that are not overlapping with any gene from annotation z will be unique for x and vice versa, genes from annotation z that are not overlapping with any gene from annotation x will be unique for z.

all other genes are overlapping to some extent:▪ if genes share some common locations and if the start and/or stop locations are deviating between the two annotations for no more than a given offset  of the length of the shorter gene , and in the same frame for cds genes, then such genes will be similar genes for x and z.

▪ if this mismatch is larger than the offset , these genes are considered unique genes with overlap for x and z.





at the end of the comparison, beacon calculates a similarity score between x and z annotations according to :  <dig> similarityscore=identical+similartotalx+totalz∗2∗ <dig> where identical and similar are the numbers of identical and similar genes, respectively, between annotations x and z. totalx and totalz are the total number of genes in annotations x and z, respectively. note that this similarity score is symmetric. in other words, similarity score between x and z relative to x or relative to z will be the same.

in the case when no reference annotation is available, or if one wishes to mutually compare multiple annotations, beacon processes each annotation as previously mentioned including overlap checking. after that, beacon finds common genes based on their genomic location between input annotations with all possible combinations of these annotations. beacon uses this information to generate venn diagram based on the r  <cit>  ‘venndiagram’ package  <cit> , that illustrates intersections between annotations. venn diagram can be generated for up to five annotations, otherwise beacon just reports results textually.

deriving extended annotations
the second functionality of beacon is the use of the annotations generated from the comparison stage to derive an ea of gene function and to expand the individual am annotations. beacon provides a list of common genes  between two or more annotations. the original annotations of gene function from different annotations are enlisted and combined to generate ea. since comparing the text of gene description provided by different ams is not straightforward, beacon prefers to list all the descriptions from the multiple ams and leave it to the user to choose one of the ams or use a combination of them. in a separate list beacon provides genes unique to each of the annotations together with their annotation of function. these are combined with ea and produce eua. the eua is also provided in a clean form where the pseudogenes and frameshifted ones are excluded. the extended annotation information is provided in both tabular and the gff file format, so it can be used further to visualize or to carry out other analysis using other software. through this mechanism one may complement individual am annotation of gene functions , where the difference between original annotation and ea of genes, that might encode orphan or functional proteins, is presented. both ea and eua can benefit users to get more comprehensive information about the genome in question.table  <dig> statistics for different annotations for h. utahensis genome along with the extended annotations. for orphan and functional genes we show the actual number of genes and the percentage relative to the total number of annotated genes



usage
the beacon tool is accessible at: http://www.cbrc.kaust.edu.sa/beacon/. the source code is also available for download for the command line use at the beacon website and in additional file  <dig>  for the command line use, the user has to specify output directory, short name for the genome, similarity offset, and files with the annotations in the genbank format, as well as a label for each of these annotations. these annotations will be read by beacon. beacon will mutually compare all annotations . a user can specify the first listed genome annotation as a reference annotation. a detailed documentation for the usage of both web-interface and command-line is described in additional file 1: section  <dig> and is provided on the beacon’s website also. beacon is provided under gnu general public license version  <dig> .

data
in this study we considered annotations from three ams  for four microbial genomes, namely h. utahensis  <cit> , e. coli k- <dig> strain, e. coli ty <dig> strain and c. ruddii dc  <cit> . the h. utahensis genome annotations were obtained from ncbi, and also generated by rast and aamg. the e. coli k- <dig>  e. coli ty <dig> and c. ruddii dc data and annotations were obtained from  <cit>  with additional annotations generated by rast. the comparison of ams for the last three genomes is provided in additional file 1: section  <dig>  all of these data sets are available at the beacon website.

RESULTS
as the first example to illustrate capabilities of beacon, we used h. utahensis genome to compare the annotations by aamg and rast to the annotation from ncbi. a detailed study of h. utahensis genome was presented in  <cit> . h. utahensis genome annotations were generated by rast and aamg. the resultant genbank files from rast and aamg were submitted to beacon together with the ncbi annotation for h. utahensis as the reference. the comparison results were obtained in less than 7 s on a typical laptop .

in the other examples , the aamg and rast annotations were compared against the ncbi annotation for both e. coli k- <dig> and c. ruddii dc. for e. coli ty <dig>  aamg, rast and bg <dig>  <cit>  annotations were compared against the broad annotation.

the beacon output is categorized into five groups: ‘annotations information’, ‘comparison to reference’, ‘extended annotations ’, ‘venn diagram’ and ‘web’. the detailed description of the analytical tab-delimited output of each of these groups is found in additional file 1: section  <dig> and figures s4-s <dig>  the results are visualized using google’s chart api  <cit>  to display information in histograms that show distribution of statistical and comparison data , and a venn diagram that illustrates intersections between annotations .fig.  <dig> ams features comparison stats. histogram that shows the distribution of the statistical and comparison data of h. utahensis genome

fig.  <dig> venn diagram showing unique/common genes from different ams. venn diagram that illustrates intersections between different annotations of h. utahensis genome



the statistical comparison results of h. utahensis genome are summarized in table  <dig> along with ea information . one can observe that ea among two or more ams has the least percent of genes with undefined protein functions and the maximum percent of genes annotated as functional , as compared to annotations from ncbi, aamg and rast . therefore, in the case of the h. utahensis genome, ea is the ‘best’ overall. as the ‘best’ annotation we consider here the one that has the largest number of genes with annotated function and the least number of genes with hypothetical functions. we have to highlight that the functions assigned to genes by different am could be putative. however, as such they still hint to potential gene functions. we do not assess the quality of annotations generated by individual ams. table  <dig> illustrates the result of annotations comparison, showing that the aamg annotation is  <dig>  % similar to the one from ncbi, whereas the rast annotation is only  <dig>  % similar. the results of other tested genomes are shown in additional file 1: tables s4-s <dig> and figures s17-s <dig> that shows ea to be with the largest proportion of genes with annotation of function and the aamg annotation appears to be most similar to the reference for all different genomes we analyzed.table  <dig> aamg and rast annotations compared to the ncbi annotation that is taken as the reference. false negatives  are genes that exist in the ncbi annotation but are not predicted by an am. false positives  are genes predicted by an am but not present in the ncbi annotation



discussion
our intention is to provide a tool  that can help in analysing and comparing different annotations that could be generated by different ams. we have illustrated the capabilities of beacon by performing comparisons of several annotations for  <dig> genomes. while this is not a proof of the efficiency of beacon, it is sufficient to point out its potential for such types of analyses.

currently, beacon is limited to the use of the genebank format annotation. in the case when no reference annotation is selected/provided, the comparison is made in all-against-all fashion. beacon does not resolve inconsistencies of different annotations, but lists them and make them available to users to analyse and choose from. for this reason, beacon, for example, does not correct the stop and start positions in a genbank file. in future versions of beacon we intend to address some of these issues.

CONCLUSIONS
we developed a fast publicly accessible tool beacon for an automated and a systematic comparison of different genome annotations that also generates extended annotations. it can help users decide which annotation suits better their studies, or if they will use a combination of the genome annotations. it also provides possibility to increase the number of genes to which a function could be assigned, thus complementing annotations by individual ams and extended it by uniquely annotated genes from different annotations. we believe that beacon may help improve the quality of bacterial genome annotations deposited in public databases when multiple annotations are available for the same bacterial genome.

availability and requirements
the beacon web tool is accessible at the following address: http://www.cbrc.kaust.edu.sa/beacon/.beacon is free for use by academic and non-profit users. the input is genbank-formatted annotation files. the source code  is available at the main page of beacon for the command-line use and in additional file  <dig>  it requires: c-shell compatible shell, make utility, c++ complier, gnu tar utilities and r language with the “venndiagram” package. further information can be found in additional file 1: section  <dig> 

additional files
additional file 1: 
has three sections: section  <dig> provides documentation for the usage of both web-interface and command-line of the beacon tool; section  <dig> explains how to interpret the output in detail including illustration figures; and section  <dig> shows detailed results of applying beacon to four different genomes. 

additional file 2: 
contains the source code of beacon in c++ for command line use along with makefile, a readme file and the license text. 



abbreviation
beaconautomated tool for bacterial genome annotation comparison

amsannotation methods

ncbinational centre for biotechnology information

eaextended annotation

euaextended union annotation

pgaapprokaryotic genome automatic annotation pipeline

aamgautomatic annotation of microbial genomes

rastrapid annotations using subsystems technology

igsinstitute for genome science

img/erintegrated microbial genome expert review

acsannotation confidence score

h. utahensishalorhabdus utahensis

cdscoding dna sequence

trnatransfer rna

rrnaribosomal rna

e. coliescherichia coli

c. ruddii dccandidatus carsonella ruddii dc

manal kalkatawi and intikhab alam contributed equally to this work.

competing interests

the authors declare no competing financial interests.

authors’ contributions

mk, ia and vbb developed the method implemented in beacon. mk developed the beacon system and performed the experiments. ia developed web implementation. all authors wrote the manuscript. all authors read and approved the final manuscript.

authors’ information

mk is a phd student of vbb. ia is a research scientist in computational bioscience research center  at kaust. vbb is professor at kaust and director of cbrc.

