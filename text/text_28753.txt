BACKGROUND
a full understanding of a biological process requires its investigation from two points of view: a functional point of view, and a mechanistic point of view. from the functional point of view, discovering the structures and the functions taking part in the biological process is of crucial importance, while from the mechanistic point of view, the focus is on deciphering the mechanisms underlying these functions.

cellular processes are mostly studied at the molecular scale. in that case, describing a cellular process from the functional point of view consists in describing the molecular activities that underpin it, as well as the influences these activities have on each other. such descriptions are generally represented in the form of influence graphs. describing cellular processes from the mechanistic point of view involves describing the molecular entities and the molecular processes that take part in the cellular process. these descriptions are mainly represented in the form of reaction networks. in reaction networks, nodes represent molecular entities  and arcs represent reactions or influences of some molecular entities on reactions. reaction networks allow to model a large variety of biological processes, such as metabolic  <cit>  or signaling processes  <cit> . the majority of available comprehensive reaction networks model metabolic processes . yet, comprehensive networks modeling signaling processes with several hundreds of nodes have been built during this last decade .

standardized representations of molecular networks  have arose with the continuously growing available biological knowledge. one of the main standards is the systems biology graphical notation   <cit> .

molecular networks such as influence graphs and reaction networks are static representations. one of the main motivations for establishing dynamical semantics on a static map is the ability to verify if the knowledge gathered by the map is sufficient to reproduce known behaviors. indeed, analyzing the dynamics of the cellular processes they describe requires building formal dynamical models that can then be either analyzed exhaustively or automatically checked against dynamical properties of interest . influence graphs are conveniently interpreted using qualitative semantics  whereas reaction networks are usually interpreted using quantitative semantics ).

in this paper, we are interested in qualitative semantics for modeling reaction networks expressed in the systems biology graphical notation process description language  using asynchronous automata networks. in the rest of this section, we first present sbgn-pd. we then give an overview of the standard techniques usually used to model reaction networks, before presenting the asynchronous automata network formalism. finally we motivate the two qualitative semantics introduced in this article.

sbgn process description
sbgn consists of three complementary languages: process description , activity flow  and entity relationship . each of these languages allows us to represent biological knowledge at a different level of abstraction: sbgn-pd at the reaction level, sbgn-af at the more abstract activity level and sbgn-er at the conceptual influence level. these languages rely on the systems biology ontology   <cit> : each glyph of the three languages is associated to a term from sbo. therefore, sbgn is more than a standard way to represent reaction networks. it also allows to standardize the concepts and vocabulary used to model biological processes. as we are interested in modeling reaction networks, we focus on sbgn-pd in this paper.

sbgn-pd has four main classes of glyphs, that form together the nodes and arcs of any sbgn-pd map: 
entity pool nodes : an epn represents a pool of molecular entities, a perturbing agent, a source or a sink. source nodes  are used when one does not want to specify the molecular entities from  which a particular epn is synthetised . there are four subtypes of epns: unspecified entity, simple chemical, macromolecule and nucleic acid feature.

process nodes  and flux arcs: a pn represents a molecular process. flux arcs, that link epns to pns, represent consumption and production of epns by processes. there are six subtypes of processes: process, omitted process, uncertain process, association, dissociation, and phenotype.

modulation arcs: modulation arcs, that link epns to pns, represent the possible effects epns have on processes. there are five subtypes of modulations: modulation, stimulation, catalysis, inhibition and necessary stimulation.

logical operators and logic arcs: the and operator represents necessary conditions for modulations to be performed, the or operator sufficient conditions for modulations to be performed, and the not operator the non-existence of a modulation. logic arcs link epns to logical operators, or logical operators to other logical operators.



sbgn-pd contains five additional types of glyphs: compartments, clone markers, reference nodes, equivalence arcs and submaps. the compartment glyph is used to represent compartments, whereas the other four glyphs are used to refer to other nodes already present in the map. each of these glyphs will not be interpreted per se in the semantics presented in the next section as they do not have any meaning when considering the dynamics of the network. however, the location of an epn into a specific compartment is taken into account: two epns that share exactly the same attributes but are in different compartments are considered as different epns. then, since we focus on qualitative semantics, we do not consider the stoichiometry of processes. also, the semantics of the not operator given in the specification has no meaning regarding dynamics of networks: hence, we will not take into account this operator. finally, reversible processes are not taken into account as their representation  is based on the spatial localisation of their reactants/products. however, a reversible process can be taken into account by rewriting it into two processes  in the map.

the correspondence between the different glyphs of sbgn-pd and the biological concepts they represent is given in fig.  <dig>  real-life examples of sbgn-pd maps are given in figs.  <dig> and  <dig>  sbgn maps can be stored and exchanged in the sbgn-ml format  <cit>  and edited by a variety of software .
fig.  <dig> reference card of the sbgn-pd language from  <cit> . every glyph of sbgn-pd is associated to the biological concept it represents



in the rest of the article, we will refer to an epn linked to a pn by a consumption arc  as a reactant  of the process represented by the pn.

for the sake of simplicity, we will use the same terms for the glyphs and arcs of sbgn-pd and the concepts they represent. for example, we use the term “epn” to refer to the node just as well as to the entity pool it represents; the term “stimulation” refers to a stimulation arc and to the stimulation it represents. also, terms “epn”, “process” and “modulation” refer to the associated concept  as well as to all concepts that are subtypes of these concepts. for example, the term “modulation” also refers to a stimulation, and the term “process” also refers to a phenotype.

qualitative dynamics of reaction networks
the dynamics of reaction networks is usually modeled with quantitative semantics such as population  semantics , or continuous deterministic semantics  . these models rely on multiple parameters, including reaction kinetics, that are often difficult to measure, thus limiting their applicability.

formalisms that do not rely on kinetic parameters, such as flux balance analysis  <cit> , are also widely used to model reaction networks. however, these formalisms are based on the steady-state assumption and do not allow to model the dynamics of networks.

we can find in  <cit>  a classification of the main modeling formalisms for reaction networks  depending on whether they lead to quantitative or qualitative models. in this study, authors also propose a unified framework to integrate these different formalisms by means of graph transformations.

in addition, let us mention qualitative formalisms such as boolean or discrete networks, that are used to model the dynamics of molecular networks and do not consider any kinetic parameters. this type of modeling introduces a notion of threshold for the number of molecules  of the modeled chemical species. to each chemical species is assigned a number of thresholds and the population of each species is quantized following its thresholds. species are then modeled by variables with finite domains, and the changes in the values of the different variables are no longer considered as continuous phenomena but discrete transitions.

qualitative modeling has primarily been introduced by s. kauffman in order to model the dynamics of gene regulatory networks, and are now also used to model the dynamics of other types of networks, such as signaling networks. several formalisms have been proposed in that respect, depending on the type and the size of the domains considered for the variables: boolean networks  <cit> , multi-valued models  <cit> , bounded petri nets  <cit>  or fuzzy logic  <cit> . the dynamics of qualitative models is coarser than the one of the quantitative models, but it helps the tractability of the analysis of attractors, that are the final states of the system, and reachability properties while abstracting away kinetic parameters. on medium-size models, the computation of the exhaustive dynamics is possible, whereas methods to handle large-size qualitative models are emerging .

qualitative formalisms have also been applied to model the dynamics of reaction networks where, in addition to influences, consumption and production of molecules are taken into account. the main contribution to this field is the biological abstract machine  modeling environment  <cit> , that allows to analyze reaction networks using a boolean semantics, and that we present hereafter.

boolean semantics of biocham
in the biocham boolean semantics  <cit>  each molecular entity of the network can be either absent or present. each compound is associated to a boolean variable whose binary value represents its state . in biocham, a reaction a+b→c+d is interpreted by four different boolean transitions : 
a∧b→a∧b∧c∧d

a∧b→¬a∧b∧c∧d

a∧b→a∧¬b∧c∧d

a∧b→¬a∧¬b∧c∧d



occurrences of variables a and b in the left-hand side of the transition express the fact that all reactants must be present for the reaction to occur; occurrences of c and d in the right-hand side express the fact that the occurrence of the reaction causes the presence of all the products; finally the combination of variables a and b or of their negation in the right-hand side expresses the fact that reactants may or may not be completely consumed by the reaction.

this semantics can take into account stimulation  by adding the stimulator to the reaction as both a reactant and a product. the corresponding transitions can then be fired only if the stimulator is present, and this stimulator remains present as it appears among the products of the reaction.

the boolean semantics of biocham is an over-approximation of the quantitative population semantics  <cit> , in the sense that every trace of the quantitative semantics has a corresponding trace in the boolean semantics. hence the absence of a behavior in the boolean semantics guarantees the absence of this behavior in the population semantics.

asynchronous automata networks
an automata network  is defined as a set of finite-state automata, where each automaton has a finite set of exclusive states called local states. at any time, each automaton has one and only one local state active, and the global state of an an is the set of the active local states of its automata. transitions between local states of each automaton are conditioned by the local state of other automata in the network.

more formally, an an is defined as a triple  where 
Σ is a finite set of automaton names;

for all a∈Σ, s={ai,⋯,aj} is the finite set of local states of automaton a. we note s=∏a∈Σs the set of all the global states of the an.

t⊆ai→ℓaj∣a∈Σ,ai∈s,aj∈s,ℓ⊂⋃b∈Σ,b≠as is the finite set of local transitions with conditions .


 Σ={a,b,c}s={a <dig> a <dig> a2}s={b <dig> b1}s={c <dig> c1}  t=a0→{b1}a <dig> a1→{c1}a <dig> b1→{a <dig> c0}b <dig> c0→{a1}c <dig> fig.  <dig> an example of asynchronous automata network and its transition graph. top: an asynchronous automata network composed of the  <dig> automata a, b and c. automata are represented by labeled boxes, and their local states by circles identified with the ticks. for instance, the circle ticked  <dig> in the automaton a is the state  <dig> of a, noted a
 <dig>  local transitions are represented by directed labeled edges, where the labels indicate the set of conditions that have to be satisfied for firing the transition. the local states in blue represent a potential global state of the automata network: the state a
 <dig> b
 <dig> c
 <dig>  bottom: the transition graph of the asynchronous automata network, from the global initial state represented in blue. this graph represents all transitions that can be successively fired from the global initial state. for example, from the global initial state, it is possible to fire the transition labeled la <dig> or the transition labeled lb¯. one of these two will be fired non-deterministically. firing transition la <dig> will change the state of a from  <dig> to  <dig>  hence replacing a
 <dig> with a
 <dig> in the global state of the network, becoming a
 <dig> b
 <dig> c
 <dig>  firing transition lb¯ will change the state of b from  <dig> to  <dig>  hence replacing b
 <dig> with b
 <dig> in the global state of the network, becoming 〈a
 <dig> b
 <dig> c
0〉



given a  state s∈s of an an, there is a transition to a state s′∈siff there exists a local transition ai→ℓaj∈t such that the automaton a is at state ai in s, and all local states in ℓ are present in s. the state s′ is then the state s where the local state ai of automaton a has been replaced with aj. such dynamics are called asynchronous as one and only one local transition is applied at a time. note that from a state s, there may exist several applicable local transitions leading to non-deterministic dynamics.

more formally, given an an , the global asynchronous transition relation → included in s×s is defined by: 
 s→s′⇔Δ∃ai→ℓaj∈t:ai∈s,ℓ⊂s,aj∈s′∀ck∈s:ck≠ai⇒ck∈s′ 

in the scope of the article, we consider only the asynchronous update scheme for ans, widely integrated in software. other update schemes can be of interest in the scope of reaction networks, in particular the general update scheme which mixes asynchronous and synchronous automata transitions.

relation of automata networks with petri nets
asynchronous ans are very close to so-called 1-bounded petri nets  <cit>  : one can encode an an into petri net with one place per local state of the automata, one transition per local transition, having one incoming, one outgoing arc and any number of read-arcs, and where places have at most one token  <cit> . therefore, all semantics formalized with ans, and in particular the semantics we propose in the following sections, can be encoded with petri nets. an example of such an encoding for the an of fig.  <dig> is given in additional file  <dig> with an illustration of the differences between the two approaches.

the stories semantics we introduce merges sets of sbgn-pd entities into components: a component aims at representing a molecular entity whose current state corresponds to one of the epns composing it. therefore, we distinguish three features in our models: the components, their local states, and the transitions . 1-bounded petri nets have only two features, places  and transitions, and therefore cannot represent explicitly components. only computations on their structure and dynamics allow to uncover mutual exclusive places, delimiting components. on the other hand, ans directly offer the adequate model structure: automata , local states , and transitions.

moreover, in order to address large sbgn-pd maps in the application to the rb/e2f map section, we rely on scalable computational techniques that are currently defined only for ans, as they exploit the explicit modeling in automata.

more elaborated encodings in general petri nets of qualitative models such as multi-valued networks have been proposed  <cit> , but they cannot be used straightforwardly for the general ans we consider here: local states of automata are not necessarily ordered, i.e., there can be local transitions between any local states of each automaton . petri nets extensions such as colored petri nets  <cit>  could provide an alternative encoding, but for the sake of notation simplicity, the an formalism has been preferred in this paper.

motivation
so far, no qualitative semantics taking into account the main features of sbgn-pd has been proposed. to remedy it, we introduce two qualitative semantics, namely the general semantics and the stories semantics, that both take into account the main features of sbgn-pd. these two semantics are formalized using asynchronous automata networks, that is a simple yet expressive formalism to formalize dynamical systems.

while the general semantics extends biocham’s boolean semantics by taking into account the main features of sbgn-pd, the stories semantics proposes a different interpretation of reaction networks. the stories semantics allows to focus on physical states  of molecular entities rather than on the entities themselves. applied to a reaction network, this semantics collapses the different physical states of a given molecular entity into a unique abstract entity, called story. this leads to models that are more understandable and closer to the way experts apprehend biological processes, while still considering all the detailed mechanisms depicted in reaction networks. in addition, by lumping several entities in so-called stories, the stories semantics reduces the dimension of the dynamics , which may increase the scalability of its analysis.

the rest of this paper is organized as follows. in the ‘results’ section, we define the general semantics and the stories semantics, and illustrate them with a large-scale map of the cell cycle centered on the rb/e2f dynamics . in the ‘discussion’ section we compare stories to related work, and discuss the applicability of the stories semantics to various types of reaction networks, as well as the application of model-checking to the resulting dynamical models. finally, the ‘methods’ section gives the formal definitions and encodings in asynchronous automata networks of our qualitative semantics.

RESULTS
in this section, we propose two different qualitative dynamics semantics for sbgn-pd networks expressed in the asynchronous automata network framework. first we propose a general semantics that takes into account all the main features of sbgn-pd maps. then we introduce a completely new qualitative dynamics semantics that we call the stories semantics. finally, we illustrate both semantics on a cell cycle detailed map.

general semantics
in the general semantics, we consider that an epn can be either present or absent in the system. therefore, in this context, we choose to interpret epns by boolean values rather than by bounded-integers as we do not have any a priori information on differential effects epns may have based on  quantities. analogously to epns, a process can be either occurring or non-occurring, and a modulation either active or inactive. occurrence of a process  is conditioned by the presence of all its reactants, and the activity of all its modulations.

the general semantics extends the boolean semantics of biocham by taking into account inhibitions as well as the and and or logical operators.

dealing with modulations
the input of a modulation can either be a single epn or a set of epns structured by a logical function . a modulation is said to be active if its input is satisfied, and inactive otherwise. if the input is a single epn, satisfaction of the input means that the epn must be present; if the input is a logical function, satisfaction of the input means that the states of the modulators that form the function must satisfy it.

a single process may be targeted by more than one modulation. in this particular case the mechanism underlying the global modulation of the process is unknown , otherwise it would be structured by some logical function. hence, for the dynamics to be as general as possible while taking into account the effects of modulations, we choose to consider that a process can change from a non-occurring to an occurring state only if the following two conditions are satisfied: 
all its necessary stimulations are active and

at least one of its stimulations  is active or at least one of its inhibition is inactive.



with this interpretation, a process modulated by both a stimulator and an inhibitor can occur if its stimulator and its inhibitor are both present, both absent, or if its inhibitor is absent and its stimulator present.

this weak constraint  ensures that the obtained dynamics includes all dynamics that would be obtained with more restrictive conditions, and in particular the one that would be obtained from the model built with the  accurate logical functions. therefore, if a process can get activated with a stronger constraint , it can get activated considering our weak constraint. note that we do not take into account modulations that are neither stimulations nor inhibitions, as we do not know their effect on the processes.

from sbgn-pd to automata networks under the general semantics
the semantics we propose in this paper are expressed in terms of asynchronous automata networks . recall that asynchronous automata networks gather a set of automata with a certain number of local states, and a set of local state transitions within each automaton that can be constrained with conditions on the active local states of other automata in the network.

in the scope of the general semantics of sbgn-pd maps, each epn is associated to one automaton having two local states labeled  <dig>  and  <dig> . similarly to epns, each process is associated to one automaton having two local states labeled  <dig>  and  <dig> .

local state transitions are built as follows: 
a process can change from its non-occurring to its occurring state iff all its reactants  are present, all its necessary stimulations are active, and at least one of its stimulations is active or one of its inhibition is inactive;

a process can change from its occurring to its non-occurring state iff all its products  are present;

an epn can change from an absent to a present state iff there is an occurring process that produces it;

finally an epn can change from a present to an absent state iff there is an occurring process that consumes it and all the products of this process are present.



note that as we do not have a priori information on the equilibrium of the different processes of the map we model, full consumption of reactants by an occurring process is not made mandatory, exactly as in biocham’s boolean semantics. this is achieved by encoding transitions as presented above, and by considering asynchrony: the transition that consumes an epn may or may not be triggered before the process becomes non-occurring.
fig.  <dig> a sbgn-pd process modeled by an asynchronous automata network under the general semantics. top: an example of sbgn-pd map. the legend of the map is given by the sbgn-pd reference card reproduced in fig.  <dig>  bottom: the asynchronous automata network modeling the sbgn-pd map under the general semantics, with the different automata and for each transition, its firing conditions. the global initial state <a
 <dig> a
t
p
 <dig> b
 <dig> m
 <dig> a
p
 <dig> a
d
p
 <dig> c
 <dig> p
 <dig> q
0> is represented in blue




an initial state defined on a map is a set of epns of that map that are considered as being present at time t <dig>  an initial state of a map can be straightforwardly encoded into a global initial state of an an built under the general semantics: for each epn of the initial state of the map, we add the present state of that epn to the global initial state of the an.

the exhaustive dynamics of an an is obtained by computing all transitions from a given global initial state of the model. it results in a finite graph called a state transition graph whose nodes are the global states of the an. this graph may contain cycles indicating oscillations and a node may have several successors, indicating a non-deterministic choice between two transitions.

stories semantics
sbgn-pd has been designed in order to model, among others, changes of physical states or locations of molecular entities. for instance, an unphosphorylated protein and its phosphorylated form are two states of the same protein that are represented in sbgn-pd by two different epns, and linked together by a process that changes one epn into the other. similarly, a molecule involved in an association process can have a free state and a bound state, and a molecular entity involved in a translocation process can have two states, one for each compartment involved. a single molecular entity can be the target of several of those changes, and therefore have several different states, each represented by a different epn.

a particular state of a molecular entity might correspond to an active state of the molecular entity, meaning a state where the entity performs a function. for example, in signaling, a kinase often performs its function only once it gets phosphorylated. such a kinase activity  will be represented by one kinase activity node in an influence graph, and modeled by one variable that can take two values under a boolean semantics:  <dig>  when the activity is not performed and  <dig>  when the activity is performed. hence, within this setting, a kinase will be either active or inactive, but not both at the same time. we say that both states  are mutually exclusive. since, in our example, the active state of the kinase corresponds to its phosphorylated state and the inactive state to its unphosphorylated state, this way of modeling implies that physical states of the kinase are also made mutually exclusive.

the stories semantics aims at modeling changes of state of a molecular entity from this perspective. it constrains the general semantics by ensuring that all epns representing different states of the same molecular entity are mutually exclusive, meaning that they will never be present at the same time.

stories
given a molecular entity, we define a story as a set of epns , each representing a different physical state of that molecular entity. given an sbgn-pd map, a story must respect the following constraints:

for any two distinct epns of the story, there exists a path in the map between the two epns such that all the edges of the path are flux arcs and all the epns of the path belong to the story;

if an epn of the story is a product of a process, then at least one reactant  of that process belongs to the story;

for two epns of the story, there exists no process that consumes both of them;

for two epns of the story, there exists no process that produces both of them.



constraint  considered together with constraints  ensures that all epns of a story represent the different states of a given molecular entity that appear by transformation of that entity. constraints  allow to define a semantics where the epns of a story are mutually exclusive: constraint  ensures that no process can produce an epn belonging to a story without first consuming an epn of that story. constraint  ensures that, for a given process, all its reactants can be present at the same time, so that it can be triggered. finally, constraint  ensures that a given process can produce all its products.

two epns that are different states of the same molecular entity often share a common sbgn-pd label, that names the molecular entity. hence an optional constraint  allows to ensure that all epns of a story represent different states of the same molecular entity: 
all epns of the story have the same  label .


fig.  <dig> stories of an sbgn-pd map. top: the sbgn-pd map of fig.  <dig>  bottom: the set of possible  stories respecting constraints  and the maximally valid sets of stories. final sets are colored in blue, and epn-maximal sets are colored in green. each of the constants a, b, c, adp and atp denotes the epn whose label equals that constant. constant ap denotes the phosphorylated macromolecule labeled “a”

fig.  <dig> at 1ar-mediated erk activation map. this map represents the two main pathways responsible for the at 1ar-mediated  erk activation. the at 1ar receptor activates the  g protein pathway to reach erk but also the less known β-arrestins pathway. these pathways are tightly regulated by the presence of molecules called the g-protein coupled receptor kinases , which act directly on the phosphorylation of the receptor. this map is represented using the sbgn-pd language. epns with bold borders constitute the initial state of the map. every colored epn belongs to a story, and each color is assigned to a different story. the story in pink focuses on the receptor hr and comprises seven different physical states of this receptor: unbound, phosphorylated , bound to β-arrestin  <dig> or β-arrestin  <dig>  the other stories focus on erk , on protein g , on pip <dig> , and on pkc 



it is worth noticing that, despite the above constraints, the epns of a story are not necessarily mutually exclusive in the general semantics. stories are not emerging properties from the net, and as such, are different from usual structural properties of petri nets  which reflect specific dynamical properties of the system. since the epns of a stories are enforced to be mutually exclusive in the stories semantics, they form places invariants  in this semantics: it is a property of the stories semantics but not a property of the initial map.

an sbgn-pd map may focus on several molecular entities of interest and thus contain several stories. we are therefore interested in characterizing combinations of stories. since the epns of a story are intended to be mutually exclusive, two stories cannot share a same epn as it would exist in both stories independently. we define a set of stories as valid if its stories do not intersect pairwise. given a map, we are interested in finding one meaningful valid set of stories in order to model that map under the stories semantics. the requirement for a set of stories to be valid might induce a necessary choice between two alternative stories sharing the same epn. in particular, association processes might lead to alternative stories, one for each compound of the resulting complex, that share the same epn . figure  <dig> gives all maximally valid sets of stories of the sbgn-pd map introduced previously.

although computing individual stories is scalable with the map size, the number of valid combinations of stories can be very large, as it depends on both the number of epns and the number of individual stories of the map.

in order to drastically reduce the number of candidate valid sets, we define two progressive maximality constraints.  a set of stories s is said to be finaliff  it is valid and  there exists no valid set of stories s′≠s such that for every story of s, there exists a story of s′ that is a superset of that story. note that all final sets are also maximally  valid.  a set of stories s is said to be epn-maximaliff  it is valid and  there exists no valid set of stories s′≠s such that the total number of epns in s′ is greater than the total number of epns in s. note that all final sets of stories are maximally valid, and that all epn-maximal sets of stories are final. figure  <dig> shows final sets of stories in blue, and epn-maximal sets of stories in green.

furthermore, additional constraints can be specified following expert knowledge. this requires to focus on particular molecular entities relevant for the biological application.

finally, in order to apply the stories semantics, the choice of the valid set of stories should be guided by expert knowledge and the specific biological question.

illustration on the at 1ar-mediated erk activation map
in order to illustrate the concept of stories and of valid sets, we computed all final sets of stories considering constraints . there were only two final sets of stories: one including one story for each β-arrestin, and one including a story focusing on the receptor. this illustrate the necessary choice between alternative stories induced by the property of validity: as β-arrestins can associate with the receptor, one should choose between a story focusing on the receptor and stories focusing on the β-arrestins. stories focusing on the epns of the rest of the map were the same in the two sets, namely: a story for protein g, one for pip2/dag, one for pkc, and one for erk.

the set containing a story focusing on the receptor is represented in fig.  <dig>  this set includes a story that contains all epns of the map related to the receptor , each representing a particular state of the receptor: unbound, phosphorylated , bound to β-arrestin  <dig> or β-arrestin  <dig>  hence such a story allows to model the succession of physical states of the receptor, and some of these physical states are also active states: for example, the free receptor can activate protein g when phosphorylated on its first site, and it loses this capacity when associated to any of the β-arrestins.

note that the story containing pip <dig> and dag, represented in blue in fig.  <dig>  does not respect constraint  while it has a biological meaning: this constraint is too stringent for processes that transform small molecules that always have different labels .

from sbgn-pd to automata networks under the stories semantics
the stories semantics differs from the general one only in the modeling of epns that belong to stories. instead of modeling each of those epns by dedicated automata, a single automaton is declared for each story with one local state per non-source and non-sink epn of the story. each automaton of a story also possesses a special local state, referred to as the empty state. each local state of the automaton associated to a story but the empty state corresponds to a physical state of the molecular entity related by the story. as for the empty state, it corresponds to the absence of this molecular entity.

local state transitions for stories are built as follows: 
a story can change from a  local state to another  local state iff an occurring process consumes the epn to which corresponds the first local state and produces the epn to which corresponds the second local state;

a story can change from a local state to the empty local state iff an occurring process consumes an epn to which corresponds the local state and does not produce any epn belonging to that story.



since processes of an sbgn-pd map consume and produce epns, and because the semantics of processes and modulations in the general semantics is built upon the presence and absence of epns, the notions of presence and absence for epns of a story is defined as follows: an epn of a story is present if the automaton associated to the story containing that epn is in the state corresponding to that epn; this epn is absent otherwise.

in order to avoid conflicts between processes acting on a same story, we impose the exclusivity between the occurrence of such processes. therefore, a process acting on a story can occur only if no other process acting on the same story is occurring.
fig.  <dig> a sbgn-pd map modeled by an asynchronous automata network under the stories semantics. top: the sbgn-pd map from fig.  <dig>  we chose a final set of two stories 𝔰 and 𝔱, whose epns are colored in yellow or blue, respectively. bottom: the corresponding asynchronous automata network using the stories semantics with the stories 𝔰={a,ap,c} and 𝔱={adp,atp}. each of the constants a,c,a
d
p and atp denotes the epn whose label equals that constant. constant ap denotes the phosphorylated macromolecule labeled “a”. the global initial state 𝔰a,𝔱atp,b <dig> m <dig> p <dig> q <dig> is represented in blue. note that here, p
#
q. therefore q
0∈l
p and p
0∈l
q




given a map and a set of stories, an initial state of that map must respect the following constraint: two epns that belong to the same story cannot be both in the initial state. this constraint is needed so that the initial state does not contradict the property of mutual exclusivity of the epns belonging to stories. an initial state of a map can be straightforwardly encoded into a global initial state of an asynchronous an modeling that map under the stories semantics. all epns of the initial state that do not belong to a story are encoded the same way as for the general semantics. for each epn of the initial state that belongs to a story, we add to the global initial state of the asynchronous an the local state of the automaton associated to the story that corresponds to that epn.

relation between the general and the stories semantics
the stories semantics offers a more constrained dynamics than the general semantics, notably by enforcing the mutual exclusiveness of epns within a story. in particular, the stories semantics forces the total consumption of the reactant epns within stories: considering a process triggering a transformation a→a′, the general semantics allows to produce a′ while keeping a present , whereas the stories semantics replaces in one step the activity of a with a′. intuitively, it results that the stories semantics produces a sub-dynamics of the general semantics.

to each global state x in the stories semantics corresponds one global state in the general semantics where each epn embedded in a story is in a present state if and only if it is the current local state of its associated story. the two semantics satisfy the following relationships:

property <dig> 
let x,x′ be states where no process is active. if x′ is reachable from x in the stories semantics, then  is reachable from  in the general semantics.

property <dig> 
let x,x′ be states where no process is active. if  is reachable from  in the general semantics, then x′ is not necessarily reachable from x in the stories semantics.

the detailed sketches of proof are in additional file  <dig>  property  <dig> is proved with a counter-example; we give here the main arguments for property  <dig>  by definition, the occurrence of processes in the stories semantics is more constrained than in the general semantics . therefore, if a process occurs in the stories semantics, it can occur in the general semantics. similarly, if a process stops occurring in the stories semantics, it can stop occurring in the general one as the constraints are equivalent . the application of a process differs in the stories semantics: when the local state of a story changes, it corresponds to a simultaneous production and consumption of the product and reactant epns; whereas in the general semantics, the products have to become present first, prior to the  consumption of the reactants. however, as at most one process acting on a story can occur at the same time, this difference in the order of production/consumption cannot introduce spurious transitions in the dynamics: the process has to be fully applied before the implied epns can be used for triggering the occurrence of other processes.

property  <dig> allows to conclude that cyclic attractors in the stories semantics are not necessarily attractors in the general semantics, although, by property  <dig>  there is a corresponding transient cycle. moreover, one can derive that if a state  is a fixed point in the general semantics, then x is a fixed point in the stories semantics; the converse is not true when a story embeds a source epn .

figures  <dig> and  <dig> show the state transition graphs of the ans modeling our sbgn-pd map example under the general semantics  and the stories semantics , respectively. states that are point attractors are circled.
fig.  <dig> transition graph for a dynamical model built under the general semantics. transition graph of the asynchronous automata network of fig.  <dig>  modeling the sbgn-pd map of fig.  <dig>  each node represents a global state of the asynchronous automata network. there is a directed edge from a state s to a state s
′
iff
s
′ is reachable from s. circled states are point attractors. states colored in blue are all states present in the transition graph of the asynchronous automata network modeling the same map under the stories semantics 

fig.  <dig> transition graph for a dynamical model built under the stories semantics. transition graph of the asynchronous automata network of fig.  <dig>  modeling the sbgn-pd map of fig.  <dig>  each node represents a global state of the asynchronous automata network. there is a directed edge from a state s to a state s
′
iff
s
′ is reachable from s. circled states are point attractors

fig.  <dig> 
rb/e2f map. this map represents the regulation of the cell cycle by e2f/rb. the cell cycle is a succession of four phases  that are tightly regulated by so-called pocket proteins, whose main representative is the rb protein. the rb protein major function is to inhibit transcription factors belonging to the e2f family, and in particular the e2f <dig> protein. diverse cyclin dependent kinases  play a key role in the regulation of the cell cycle. in particular, cdks’ function is to phosphorylate the rb protein, decreasing its inhibiting effect on e2f transcription factors. this map is represented using the sbgn-pd language. epns with bold borders constitute the initial state of the map. every colored epn belongs to a story, and each color is assigned to a different story



the state transition graph of the model built under the general semantics is composed of  <dig> states. it has nine attractors, that are all fixed points. five of these attractors include both local states ap <dig> and c <dig>  meaning that in those states, epn ap and epn c are both present at the same time. hence in the model built under the general semantics, it is possible to produce both ap and c, one after the other. there are two possibilities to produce both of them: either process p occurs first and is followed by process q, or q occurs first and is followed by p. either way, the process that occurs first only consumes a partially, leaving a present so that the second process can occur. two of the other attractors contain local states ap <dig> and c <dig>  and the last two ones ap <dig> and c <dig>  the former are reached when process p occurs first and the latter when process q occurs first. in all four cases the first process to occur consumes completely a, leaving a absent  and preventing the other process from occurring.

the model built under the stories semantics has only  <dig> states, three of which are point attractors. this illustrates how the stories semantics induces a lower dimensional dynamics. two of the attractors contain the local state 𝔰c, meaning that molecular entity a is in the state where it is bound to b, and only one contains the local state 𝔰ap, meaning that a is in a phosphorylated state. as for the point attractors, no other global state contains both local states 𝔰c and 𝔰ap: epns c and ap belong to the same story, hence they are mutually exclusive . among the two point attractors containing the local state 𝔰c, one contains b <dig>  and the other b1: when process q occurs, it can consume b completely or only partially, leaving b absent or present, respectively, as b does not belong to any story.

the part of the state transition graph of the general semantics that correspond to the dynamics of the stories semantics is highlighted in blue in fig.  <dig>  it corresponds to the sequences of transitions that lead to total consumption of epns belonging to the delimited stories. because the ordering of production/consumption is different in the stories semantics and requires more steps in the general semantics, there are more blue states than states in the state transition graph of the stories semantics.

application to the rb/e2f map
in this section, we illustrate how both semantics can be applied to a large network containing  <dig> nodes, namely the rb/e2f map, and how the resulting models can be checked against interesting dynamical properties.

the rb/e2f map, represented in fig.  <dig>  was first published in  <cit>  and made available by the authors at  <cit>  under the celldesigner format in two versions: the whole map and the map without the transcriptional activations and inhibitions . we chose to consider the map restricted to proteins for two reasons: first, celldesigner’s transcriptional modulations are not sbgn-pd compliant. second, the protein and the gene parts of the complete maps are distinct from each other, and only the protein part has some effect on the gene part . the map reproduced in fig.  <dig> is the map restricted to proteins initially built in celldesigner. it describes the regulation of the cell cycle focusing on the g <dig> transition monitored by the retinoblastoma protein  and the e2f transcription factors. the cell cycle is a succession of four phases  that are tightly regulated by checkpoints. rb plays a crucial role in ensuring a proper entry into s phase . its major function is to inhibit e2f <dig>  diverse cyclin dependent kinases  intervene at different moments in the cell cycle and thus play a key role in its regulation. in particular, cdks phosphorylate rb, slowly releasing its hold on e2f transcription factors. cdks are only active when associated to their cyclin. there are six major cdks: cdc <dig> , cdk <dig>  cdk <dig>  cdk <dig>  cdk <dig> and cdk <dig>  cdc <dig> is associated to cyclin b <dig>  cdk <dig> to cyclin e <dig> and cyclin a <dig>  cdk <dig> to cyclin c, cdk <dig> and cdk <dig> to cyclin d <dig> and cdk <dig> to cyclin h. as for the e2f transcription factors, they can be divided into two groups: activators  and inhibitors .

the stimulation by growth factors switches the cells from a quiescent condition  to entry in the cell cycle. cyclin d1-cdk <dig>  complexes are activated and start phosphorylating rb which maintains the g <dig> checkpoint. as rb starts to be phosphorylated, it frees e2f <dig> from the inhibitory complex. e2f <dig> begins to mediate the synthesis of major players of the cell cycle. cyclin e1-cdk <dig> complex brings the cells from g <dig> to the s phase, where dna is replicated. following dna replication and mainly under the action of cyclin a2-cdk <dig>  cells enter a second gap phase, the g <dig> phase, and finally go through mitosis in the m phase where cyclin b1-cdc <dig> seems to be one of the main regulators.

models under the general and the stories semantics
we built two models of the rb/e2f map, the one under the general semantics and the other under the stories semantics.

the model under the general semantics was built automatically and contained  <dig> automata.

to build a model under the stories semantics, we first chose a valid set of stories computed from the sbgn-ml file as follows. since e2fs and cdks play a key functional role in the regulation of the cell cycle, we defined one story for each cdk , each story containing itself all epns representing a physical state of the cdk . we also defined a story beforehand for the p <dig> protein. finally, we chose to compute only epn-maximal sets of stories in order to reduce the size of the model as much as possible.

there were only eight epn-maximal sets of stories including all stories defined beforehand, due to three pairs of alternative stories resulting from three different association processes with two reactants . all eight sets contained  <dig> stories for a total of  <dig> epns, out of the  <dig> epns of the map. we chose the valid set focusing on the molecules mga, atm and apc, and that is represented in fig.  <dig>  and built a model under the stories semantics accordingly. this model contained  <dig> automata.

the analysis of the dynamics of such large models requires advanced techniques to avoid the state space explosion . hereafter, we use mole for this purpose. we show in the next sections how both models can be used to answer biological questions on the network.

building an initial state
in order to check dynamical properties for both models, we first built an initial state that represents a quiescent cell  just after it has been stimulated by a growth factor . we included in the initial state all epns that are inputs of the map. we also included two epns that can be produced but belong to cycles: the e2f <dig> protein in the cytosol and the prb-e2f1-dp <dig> complex in the nucleus. the epns included in the initial state are shown with a thick black border on the map of fig.  <dig> 

study of the succession of phases
to illustrate how models built under either semantics can be used to check some interesting dynamical properties on the underlying biological model, we studied the succession of the different phases of the cell cycle in both models. for this sake, we used the software mole  <cit> . mole is a concurrent model analyzer that allows to check for reachability properties in large models where multiple transitions can occur independently, such as those we considered in this work.

phases markers
we associated to each phase of the cell cycle a set of epns that are markers for this phase. we assume that the system is in a given phase of the cycle at a given time if any of the markers associated to that phase is present at that time. for example, we associated phase g <dig> to the set of epns that represent a complex cyclin b1-cdc <dig> of the cytosol, with cdc <dig> phosphorylated or not. g <dig> and s phases are separated into two periods, early and late, to better characterize transitions.

we define a phase as reachable if there exists a state reachable from the initial state such that at least one marker of the phase is present in that state. in a model, a phase marker can be disabled by removing all transitions ingoing or outgoing the local state corresponding to the present state of the marker. as for a phase, it can be disabled by disabling all its markers. hence a phase that has been disabled is no longer reachable.

phases succession in prior-knowledge models
in order to check whether the different phases are reached successively in both models, we first checked if each phase was reachable from the initial state using the mole tool. as all phases were reachable from the initial state for both models, we checked whether each phase was still reachable when e2f <dig> was blocked to its initial state. as e2f <dig> has a central role in the regulation of the cell cycle, preventing any changes in the state of e2f <dig> should also prevent some phases  from being reachable in both models. it appeared that all phases but late g <dig> were still reachable under these conditions in both models.

to test further the validity of our models, we investigated the succession of the different phases in both models. we expected that, apart from early g <dig>  all phases should necessarily be reached successively. hence we checked, for each phase, whether it was still reachable when its previous phase was disabled. all phases but late g <dig> and m were still reachable in both models. the fact that early g <dig> was still reachable under those conditions was expected: indeed, dividing cells can go through multiple cycles without going through g <dig>  however, the models could not reproduce the expected behavior for some of the other phases.

this result shows that the succession of phases observed during the cell cycle cannot be reproduced by the only molecular processes of the map. indeed, in the obtained dynamical model, the different phases can be reached independently from each other. the sequentiality of phases might be possibly achieved, for instance, by considering the kinetics of processes, or by taking into account additional processes that would enforce synchronization between the pathways of the different phases.

in the scope of this article, we propose to take into account transcriptional effects and investigate the obtained qualitative dynamics by checking if it does reproduce the expected succession of cell cycle phases.

phase succession in models with transcriptional effects
in order to model adequately the succession of phases, we enriched both models by adding known effects of e2f <dig> on the transcription of some genes whose proteins play a major role in the regulation of the cell cycle. for example, e2f <dig> is known to upregulate the transcription of cdc <dig>  <cit> . as the particular form under which e2f <dig> is able to regulate cdc2’s expression is not known, we first considered that e2f <dig> could upregulate cdc <dig> when associated only to dp <dig> or when associated to a phosphorylated form of rb, as we know that unphosphorylated rb is an inhibitor of e2f <dig>  we modeled this effect in both models by adding a transition from a state where the molecular entity cdc <dig> is absent to a state where the cdc <dig> epn is present and such that it could be triggered only when e2f <dig> is in one of the states mentioned above. we added this type of influences on four main regulators of the cell cycle   <cit> . note that these transcriptional effects are not present as such in the celldesigner version of the map that contains the transcriptional modulations, as these modulations only state that some molecular entities  stimulate or inhibit the transcription of some genes. hence the physical state under which these molecular entities perform their effect is not specified in this map, and there is no explicit processes linking genes to their corresponding rna or proteins.

all phases were still reachable from the initial state in the models augmented with transcriptional effects. yet, no phases but early g <dig>  late s and g <dig> were reachable when disabling, for each phase, its previous phase. the reachability of late s could be prevented when narrowing the forms of e2f <dig> able to upregulate the cyclin a <dig> gene to the complexes where e2f <dig> is associated only to dp <dig> or associated to dp <dig> and rb phosphorylated three times. this suggests that the increase of cyclin a <dig> after phase g <dig>  that leads to the replacement of cyclin e <dig> by cyclin a <dig> in complexes formed of cdk <dig>  might be triggered by the phosphorylation of rb on a third site by the complex cyclin e1-cdk <dig>  as for the succession between late s and g <dig>  it could have been restored in the model by adding a positive influence of cyclin a2-cdk <dig> on the activation of cyclin b1-cdc <dig>  such an effect has strong evidence , but the precise mechanism remains, to our knowledge, unknown. hence, adding some transcriptional effects of e2f <dig> allowed to restore a correct succession for the majority of phases.

finally, we checked in both augmented models whether two distinct phases of the cell cycle could be reached simultaneously. for each pair of phases, we checked whether there existed a reachable state containing at the same time one marker of the first phase and one marker of the second phase. in the model built under the general semantics, all pairs of phases could be reached simultaneously whereas the couples  and  could not be reached simultaneously in the model built under the stories semantics.

the difference observed between the two models is due to the property of mutual exclusiveness of the epns of a story. if two markers associated to two different phases belong to the same story, the two phases might not be simultaneously reachable. this last analysis illustrates how the stories semantics can help reasoning about biological processes where successive functional states of some key molecular entities can be linked to biological events that situate at a macro-scale.

discussion
related work
notions bearing some similarities with stories can be found in the literature. in  <cit> , authors present a semi-automatic algorithm in order to find components in a given pathway. for them, a molecular component corresponds to a biological entity that can appear in the form of different molecular species in the pathway. hence a component is a species name associated to a set of molecular species that share that name. their algorithm for inferring pathway components relies on the law of mass conservation, and proceeds iteratively as follows: 
pick arbitrarily a reaction of the pathway not examined yet;

associate each reactant of the reaction to a different product or to a product split in two parts , and memorize these new associations and splits;

update the associations in the other reactions according to the new associations found and the new splits.



in case of ambiguity when associating the reactants and the products, their algorithm asks the user for the right association.

stories respecting constraints  and molecular components both aim at modeling the changes of states of a particular molecular entity. the main difference between stories and components is that elements of a component are not required to be mutually exclusive. hence they are not built upon dynamical constraints as for stories, and cannot directly be used within a qualitative semantics in the general case. let us illustrate this difference on a small example. we consider a pathway containing two processes: the first process is a reaction that transforms a into b, and the second process is an association between a and b to form a complex c. there would be only one possible story respecting constraints : {a,c}. on the same pathway, the algorithm presented in  <cit>  would automatically find a unique component associated to the set {a,b,ca,cb} where ca and cb are the parts originating from the split of c. this component would not be relevant within a dynamics semantics: associated to a unique automaton whose local states would be the elements of the component, a and b would never be both present at the same time. hence, the association process would never occur. therefore the notion of component is not adequate from a dynamics qualitative semantics point of view.

in  <cit> , the authors decompose the rb/e2f map into  <dig> network modules using the cytoscape plugin binom  <cit>  as follows. first, modules are built by decomposing the rb/e2f map network into subnetworks, each focusing on a particular molecular entity. the resulting subnetworks that have more than  <dig> % overlap are then merged automatically. finally, the newly-built modules are modified manually to give a biological meaning to each of the networks, which, in most of the cases, corresponds to the different forms that protein can take  along with their modifiers . the influences between the modules are derived by integrating the influences between the individual molecules within the modules. the resulting network is a modular map of the initial comprehensive map, analogous to an influence graph. thus, the binom approach focuses on the structure of the complex and detailed network, the sbgn-pd map, by abstracting and simplifying it into an influence network in order to identify possible motifs, such as negative or positive feedback loops, that may be responsible for certain dynamics, but without providing the dynamics. in our case, the stories semantics conserve the level of details of the sbgn-pd model while adding constraints of its dynamical semantics.

two semantics to model different types of networks
the general semantics extends biocham’s semantics by taking into account inhibitions. this semantics can be applied to all biological networks for which precise molecular processes, such as reactions or translocations, are known. that is usually the case for metabolic processes, and for some signaling pathways, such as those presented in the ‘results’ section.

as for the stories semantics, it can be applied only on networks where physical states of molecular entities can be defined and gathered into stories, that are mainly signaling networks. using the stories semantics to model metabolic networks would certainly make less sense in general since these networks hardly contain molecules that can be in different states . yet modeling some particular metabolic networks under the stories semantics could be imagined. for example, part of the photosynthetic process in plants is based on consecutive electron transfers between molecules. one could then build a story focusing on electrons, by regrouping all molecules of unique chains of transfers.

hence, the general semantics has a broader application range than the stories semantics, as it can be easily applied to metabolic networks. however, as shown for the rb/e2f map, the stories semantics allows to build more compact models that are still able to reproduce expected behavior. moreover, by pruning large portions of the state space entailed by the general semantics, the stories semantics may lead to more realistic models for biological processes that include successive discrete events, such as the phases of the cell cycle.

relation between the stories semantics and the boolean semantics applied to sbgn-af maps
the stories semantics suits well to signaling networks, where products of reactions are modulators of other reactions, transducing and amplifying an initial signal in this way.

most molecules of such networks are proteins that can be defined by two states, active and inactive, corresponding in most cases to a normal and a post-translationally modified state , respectively. these kinds of networks are often represented by influence graphs, where nodes are activities of molecules and arcs are influences between these activities. sbgn-af is one standard to represent such influence graphs, and a semi-automatic method has been proposed to translate any sbgn-pd map into an sbgn-af map  <cit> . given an sbgn-pd map representing a signaling network, each molecular entity of this network might appear in the form of two different epns  and can be modeled by a story of these two epns. hence the number of automata of the model would be approximately half the number of epns of the map. we can then presume that modeling the signaling cascades of a sbgn-pd map representing a signaling network under the stories semantics is analogous to modeling its corresponding  sbgn-af influence network under a classical boolean semantics. however, if for simple signaling cascades, modeling the network under the stories semantics might be equivalent to modeling in a more classical way the corresponding influence network, it is not the case for more complicated signaling networks or other types of networks. the at1ar-mediated erk activation map might well illustrate this difference between modeling simple cascades and more complicated pathways under the stories semantics. the protein g pathway is a simple cascade with reversible processes where one reactant is transformed into one product, and the product of each forward process stimulates the next downstream process. translating this pathway into sbgn-af would result in a linear pathway of activities, each of which having a positive influence on the next downstream activity. modeling this pathway under the stories semantics with three stories of two epns as done in the ‘results’ section would be equivalent to modeling the corresponding sbgn-af pathway under a boolean semantics. by contrast, the β-arrestin pathway is not a simple cascade, and its translation into sbgn-af results in a more complicated map than a simple linear pathway. hence a model of the resultant sbgn-af pathway built under a boolean semantics will not be equivalent to a model of the sbgn-pd map built under the stories semantics. the relationship between the stories semantics applied to sbgn-pd maps and the boolean semantics applied to the corresponding sbgn-af maps for signaling networks should be deepened in a future work.

model-checking, state transition graph, and dynamical properties
our approach builds dynamical models, i.e., models of state transitions, from sbgn-pd maps. on the resulting models, one can straightforwardly apply generic algorithms for the analysis and inference of dynamical properties, as on any other dynamical model. most of dynamical analyses have a theoretical computational cost that makes their application to large networks challenging, even though more and more techniques allow to increase their tractability. in the remaining of this section, we give an overview of the use of model-checking and dynamical analyses in systems biology, with mentions to recent computational methods to tackle large models.

model-checking refers to a wide range of computer science techniques to verify the absence or presence of behaviors within dynamical models. the dynamical properties are typically specified using temporal logic  <cit> , which allow a high-level description of either a trace , or an execution tree . then, generic algorithms have been designed to verify the accordance of a dynamical model with a dynamical property, expressed in temporal logic  <cit> . model-checking has been extensively applied to the analysis of biological systems, for instance for gene regulatory networks  <cit> , signalling pathways  <cit> , and models of the circadian clock and the cell cycle  <cit> . examples of dynamical properties relevant for biological systems include the reachability of a state where a given molecule is active , the reachability of a given differentiated state after a perturbation, the existence of sustained oscillations and their period. all these properties can be analyzed from our models.

dynamical analyses also allow to make predictions. for instance, the inference of intervention strategies  in order to control the behavior of the system. recent works have designed algorithms for predicting mutations to prevent or enforce the reachability of particular cell states  <cit> , and methods relying on model-checking for deciphering the reprogramming capability of t-helper cells by determining the inputs of signalling pathways that trigger a change of the cell type  <cit> . these prediction methods can also be applied to our models.

the computational complexity of model-checking limits, in theory, its applicability to large networks: verifying classical temporal logical formulas, including reachability properties, is pspace-complete  <cit> , meaning in practice it is exponential with the number of interacting molecules. a few algorithms for model-checking rely on computing the state transition graph, i.e. all the state transitions specified by the dynamical model. for large systems, such a graph may be too large to fit in memory. therefore, techniques relying on symbolic representations  <cit>  or partial order reductions  <cit>  of such a graph allow to support larger models. efficient model-checkers  shipping those techniques are available and can be applied to a large variety of dynamical models, including those introduced in this paper.

numerous recent works improve the tractability of algorithms for the analysis of biological systems, for instance by exploiting the concurrency  of transitions  <cit> , or using abstract interpretation  <cit> , as well as methods to reduce the model size while preserving properties of interest . aforementioned applications of model-checking to systems biology tackle networks ranging from dozens to thousands of interacting molecules.

size of the stories and size of the state space
the computation of a valid set of stories for the rb/e2f map suggests that there exists a tradeoff between the number of stories of a valid set and the size of the stories of the set. indeed, we computed a valid set of stories maximizing the total number of distinct epns involved in a story for the rb/e2f map. this set contained  <dig> stories for a total of  <dig> epns, to be compared to the  <dig> stories for  <dig> epns of the valid set computed by defining stories beforehand . hence, in this example, increasing the total number of epns involved in a story led to smaller stories. this tradeoff can be illustrated on a simple example. let us consider a map with two processes that model the reactions a→b and b+c→d. given constraints , the map has two maximally  valid sets of stories: {{a,b},{c,d}} and {{a,b,d}}. only the first set maximizes the total number of epns . however, its ratio epn/stories is smaller than for the second set: it contains two stories, compared to the second set that contains only one story of three epns.

building models under the stories semantics induces a reduction of the number of automata and subsequently a large reduction of the size of the state space. hence dynamics that may be intractable for an exhaustive analysis under the general semantics may become tractable under the stories semantics.

considering the stories semantics as an abstraction of the quantitative population semantics  <cit> , its property of mutual exclusiveness of the epns of a story comes down to force synchronous transitions between all molecules of a population . hence the stories semantics prunes all the traces of the  population dynamics where a molecule can be simultaneously into two states.

future work
adding constraints
some additional constraints could be considered in order to define stories. for example, we do not consider the case where a story contains two epns one being a reactant of a process and the other being the only stimulator of the same process. modeling a map with such a story under the stories semantics would prevent the process from occurring. hence constraints forbidding such cases will be added in a future work.

formalizing models into sbml-qual
the systems biology markup language   <cit>  is a standard to store and exchange systems biology models built upon reaction networks. sbml-qual  <cit>  is an additional package that allows to store qualitative models such as boolean networks or petri nets. models built under the general semantics can be stored in the sbml-qual format and a tool to convert asynchronous an models built under the general semantics into this format is under development. however, sbml-qual does not yet allow to encode models containing variables that take their value onto unordered domains. hence automata representing stories cannot be properly encoded within the current version of sbml-qual.

software development
a user-friendly software taking into account the whole framework presented in this article  is under development.
fig.  <dig> workflow of the method. rectangles represent objects and ellipses tasks. pink processes are those developed as part of this work; blue processes are users’ interventions; yellow processes are tools publicly available that were used for this study



this software should allow to compute all valid sets of stories respecting constraints on the content of stories and on maximality defined by the user thanks to a gui, and build an dynamical models automatically.

CONCLUSIONS
in this article we propose two qualitative dynamics semantics for sbgn process description maps, that represent a particular class of reaction networks. besides extending existing generic interpretations of reaction networks with boolean logic, we introduce the new concept of stories, that allows to focus on physical states of molecular entities rather than on the entities themselves. the dynamics in stories semantics have a lower dimension than the general one and prune multiple behaviors  by enforcing the mutual exclusivity between the activities of the different epns of a given story. moreover, the stories semantics leads to more realistic models when discrete successive events can be underlined in the biological process to be modeled. we illustrate these two semantics applying them to a large network. by performing a dynamical analysis of the rb/e2f pathway, that contains more than  <dig> nodes, we show how the qualitative approach allowed us to propose improvement of the initial model.

