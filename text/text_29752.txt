BACKGROUND
advances over the past years have yielded a vast amount of experimental high-throughput data on relationships between biological entities such as proteins and genes  <cit> . this information is spread across multiple databases, containing different types of the stored data, accession nomenclature and interface . the main difficulty to merge the data provided in these databases is having distinct identifiers for the same biological entity  <cit> . therefore a protocol that unifies biological data independently of the identifiers used on each data source is required. a number of works have addressed the standardization of nomenclature and format of biological entities  while some others have tackled the problems of redundant data produced by cross-references .

here we present biana, a tool for biological database unification and network management that can be used as a standalone application or as a plugin for cytoscape. biana uses a generic method to find entries of a given molecule that are equivalent across different biological data repositories. moreover, biana incorporates and empowers a variety of network analysis methods through networkx  <cit> . in addition to unifying all major biological repositories, biana is easily adaptable to newly created data repositories. biana is an extension of the protein interaction and network analysis   <cit> , which was focused on protein-protein interactions. biana bridges the network visualization of cytoscape and the network analysis capabilities of networkx and cytoscape with customizable data unification for relationships between genes and their products. biana addresses the challenge of unambiguously gathering available data for biological entities of interest and working with networks built with its relationships. biana network-analysis capabilities have been compared with other programs under the same set of features as those presented in cline et al.  <cit>  . biana data integration capabilities have also been compared with up-to-date software focused on data integration .

biana has been compared with the same programs and using the same set of features as the ones presented in  <cit> . compared software: cy, cytoscape  <cit> ; gm, genmapp  <cit> ; va, visant  <cit> ; os, osprey  <cit> ; cd, celldesigner  <cit> ; ar, ariadne genomics pathway studio  <cit> ; in, ingenuity pathways analysis http://www.ingenuity.com; gg, genego http://www.genego.com; pi, piana  <cit> ; pr, proviz  <cit> ; bl, biolayout  <cit> ; pa, patika  <cit> ; bi, biana.

biana has been compared with other biological databases integration software/webservers. compared software: pi, piana  <cit> ; ap, apid  <cit> ; ap <dig>  apid2net  <cit> ; bn, bndb  <cit> ; uh, unihi  <cit> ; mi, mimi  <cit> , on, ondex  <cit> , iri, irefindex  <cit> . according to the original manuscript, "the installation and use of the data integration methods is still command line driven and requires technical expertise to install, configure and use this component of the ondex system".

implementation
software architecture
biana is a python framework composed of four different modules : 1) database management ; 2) parser management ; 3) network management ; and 4) session management . the cytoscape plugin is a separate and user friendly interface to biana .

data model
biana uses a high level abstraction schema  to handle databases providing biological information . any data source that contains biologic or chemical data parsed by biana is defined as an external database. similarly, biana adopts the concept of external entity, corresponding to entries in external databases, and integrates these external entities coming from different external databases. for example, a uniprot entry , a genbank entry , an intact interaction , a kegg pathway  or a pfam alignment are all represented as external entities. in order to achieve data uniformity, the participants of a partnership and its relationship are considered external entities, whereas the relation itself is annotated as external entity relation which is a subtype of external entity. external entities are characterized by several attributes, such as database identifiers, sequence, taxonomy, description or function. each external entity relation is further characterized by some attributes . alternatively, the participants in external entity relations can have their particular attributes . biana unifies external data inserted into its database based on a specific protocol. this protocol, called unification protocol, consists of a set of rules  that determine how data in various data sources are combined . each rule is composed of attributes crossed and the pair of external databases used. two external entities  will be considered "equivalent" provided that they share the same annotation  for the specified attribute in the rule. the set of external entities that are decided to be equivalent with respect to a given unification protocol is called user entity . user entities inherit all the attributes of their included external entries. each external entity can belong to a single user entity, unless the database is defined as promiscuous database, where a single external entity can belong to multiple user entities.

biana user interface
depending on user background and objectives, biana offers three user interfaces: 1) command line interface for most advanced users , interested in using all biana functionalities, network analysis procedures provided by networkx and other python modules, and interested in automatic processes by using scripts; 2) cytoscape plugin interface benefits users interested in the interactivity offered by a graphical interface without lost of functionality. the plugin has one main advantage: it provides a command line terminal to help most advanced users to create scripts that run in biana as a command line application or to execute other python or networkx commands; and 3) online interface for non-expert users who prefer using a web-server that provides only basic functionalities of biana. this is the easiest access and it does not require installation. the web-server uses a pre-stored database of interactions with a default unification protocol, but prevents benefiting from the user-driven unification capabilities.

RESULTS
biana working procedure has two preliminary steps : 1) installing biana package and cytoscape plugin; and 2) populating a biana-database store plus creating one or more unification protocols for this database. after these steps, a working session can be started.

biana database creation
after biana installation, the next step consists of creating and populating a biana database with desired external databases. biana offers several parsers for most well known biological databases  and includes most common attributes . biana also offers the possibility to add new parsers for other third-party databases or to add user provided data using a generic format, as well as to add new attributes . new parsers for other databases or for user provided data can be uploaded to our project website http://sbi.imim.es/web/biana.php?page=biana.parsers and be shared with the rest of biana users. for example, we provide three different datasets used in our group  one dataset contains ec codes  and the relationships between them defined by the compounds involved in their reactions , and it includes several new features such as the number of common metabolites and the direction of the reaction ; 2) a second set contains interactions predicted from sequences/structure distant patterns  <cit>  ; and 3) we have also included a set of transcription factors and their regulated genes plus information on their cooperativity  <cit>  .

external database
biana provides the following parsers for common public biologic databases. updated database parsers can be uploaded in the project webpage http://sbi.imim.es/web/biana.php.

furthermore, we created a biana-database for the convenience of users as an initial starting point to start using biana  whose accessibility information is given on the project web page. the online database contains information parsed from the following resources : uniprot swissprot, gene ontology , ncbi taxonomy database, intact database, mint database, psi-mi ontology, reactome, plus specific tutorial sets for the theoretical example and sbi datasets used in previous works  <cit> .

unification protocols
once a database has been loaded in biana mysql server, next step consists on the integration of data and its relationships. biana utilizes user entries defined by a certain unification protocol chosen by the user. a recommended unification protocol is also provided for non-expert users , but users are free to create their own unification protocols according to their needs. as an example, a user may be interested in creating a unification protocol defined by crossing entities using sequence and taxonomy information between two or more databases . in another example, the user can use sequence and taxonomy as well as uniprot accession code between two or more databases. different unification protocols applied to the same external databases can lead to different outcomes . the advantages of this unification approach are: 1) biana database only contains raw data , therefore it does not entail any assumption on data integration and it allows the user to specify how the integration should be done. 2) information from a single database or the combination of multiple databases can be selected by the user in each experiment. and 3) the original data can be easily tracked back with all its user interfaces .

list of external databases and the attributes  proposed to be used in a unification protocol.

the data available on the online biana database is unified with respect to the following criteria of equivalence: all entries coming from any biological data repository are grouped in the same user entity if and only if they share uniprotaccession code "or", both sequence and taxonomy identifier, "or" geneid. in particular, when biana is queried for erf1_yeast as uniprot entry code, it groups all the entries coming from swissprot , intact , mint  and reactome  in one user entity .

biana working-session capabilities
after creating a biana database and creating one or more unification protocols, a biana working session includes the following capabilities:

-network creation
integrated biological entities consisting of proteins, genes or drugs are considered as nodes of a network, while relationships between them such as interactions, gene regulation, metabolic reactions or signal transduction are edges. the first step to obtain a network is the acquisition of an initial set of seed nodes . then, biana creates the network of relationships by retrieving their direct partners . the network construction procedure can run iteratively, defining successive levels of partnership . users can create the network using various types of relationships and impose restrictions based on the attributes of these relationships or their nodes . networks are widely employed to study specific pathologies  <cit> .

-analysis of networks
biana grants access to most of existing methods for the analysis of networks through networkx and cytoscape: finding shortest paths and connected components, calculating node degrees and network connectivity, etc. in addition, biana includes new methods such as network randomization, node and edge tagging, calculation of linker degree based on node tags  <cit> , intersection and merging of networks. recently, biana has been used in simplifying the improvement of fold recognition using protein-protein interactions  <cit>  or in modeling and analysis of aneurism-related molecular interactions using text-mining seed-nodes  <cit> .

-predictions of edges
biana predicts novel relationships by transferring existing edges between nodes with common properties. basically, let x, y, z be biological entities obtained with the unification approach. an interaction is predicted between x and y if: i) x is observed to interact with z; and ii) y shares some attributes  with node z. this is an extension of the definition of interologs  <cit>  using other relationships different than orthology. for example, we generated protein-protein interaction networks from proteins we compared them with networks of protein-protein interaction predictions based on the transfer of interactions between proteins  whose 90% of its sequence could be aligned with at least 90% of sequence similarity .

comparison of three different networks at level  <dig> using reported protein-protein interactions vs. using inferred interactions by sequence homology. a biana database has been created using the following databases: uniprot swissprot, intact, mint, biogrid, dip and hprd. three different initial data sets related with three different pathologies have been created by a keyword search in fields disease, keyword, description and function. two networks at level  <dig> have been created for each set: 1) using reported protein-protein interactions by third-party databases and 2) using inferred interactions by using sequence similarity . for each network we calculated the number of proteins involved in the pathologies according to hefalmp  <cit>  with a p <  <dig>  . by using inferred interactions a higher number of candidates are retrieved.

-unification backtracking
as biana database architecture and access is pretended to be transparent for users, biana offers the possibility of backtrack the results of the unification protocol with the information as defined in original sources. for example, in the biana cytoscape plugin, users can check all entries from external databases fused into a single node during the unification protocol. users can also check which are the exact relationships defined by external databases. these options are explained in the first example of the tutorial. in summary, when selecting the option "view set details" the user can select one or more nodes in the table and click the button "view details". this option shows in a new table all the original entries fused for each node . a similar procedure can be applied to show the relationships as defined in the original sources.

example: investigating relationships between pathologies using biana
we have used the study case of the relationship between the networks of genes involved in the pathologies of alzheimer and diabetes diseases. under the context of systems and network biology, researchers are interested in discovering actors involved in diseases, their relationships and key shared elements on the organism level. considering that alzheimer's disease  and diabetes are shown to be coupled, where having diabetes bears an increased risk for ad , as an example of the use of biana, we look for proteins playing a role both in alzheimer's disease and diabetes. biana is perfectly suited for pursuing such kind of tasks where one needs to fetch species-wide sequence annotation and interaction information spread across various data resources. for this example we integrated data from publicly available proteome knowledge bases such as uniprot  <cit> , kegg  <cit> , ipi  <cit> , go  <cit> , scop*  <cit> , hgnc  <cit>  and major interaction data resources such as reactome*  <cit> , intact*  <cit> , hprd*  <cit> , biogrid*  <cit> , mint*  <cit> . all the databases with a star  are inserted as promiscuous. all of the listed databases are unified based on uniprot accession identifier; sequence in combination with taxonomy identifier; and geneid identifier. in addition to these unification rules, the data coming from scop & uniprot databases are further unified using pdb codes. for step-by-step details of this case study we suggest to follow the chapter  <dig> of the tutorial and a video summary.

using biana we identified proteins interacting with an alzheimer or diabetes associated protein in the mouse proteome . among the proteins contained in the intersection of the protein-protein interaction network, the mitogen-activated protein kinase  interacts both with proteins associated with ad and diabetes . strikingly, jnk <dig> has been demonstrated to be involved in maintenance of neuronal mictrotubules  <cit> , in beta-amyloid-mediated stabilization of p <dig>  <cit> , and in cell death in the brain of patients with ad  <cit> , but also in major risk factors of diabetes type ii such as insulin resistance  <cit>  and adiposity  <cit> .

in order to extend our knowledge, we created interaction networks for all proteins stored in biana-database that were associated with ad and diabetes with independence of the proteome specie . this was possible thanks to the unification protocol used in biana. next, we filtered the proteins contained in these two networks, so that only proteins linked at least to two alzheimer-associated proteins or to two diabetes-associated proteins were taken into account. then, we extracted the intersection of these two subsets with biana and we selected those proteins that had not been attributed to any of the pathologies in the initial sets. remarkably, we found direct supporting evidence in the literature that some of the proteins in this selected set were products of genes that had been reported to play key roles in both ad and diabetes .

finally, we included predicted interactions . we defined interaction predictions based on the transfer of interactions between proteins with at least 90% of sequence similarity and 90% of sequence covered by the alignment. this increased the initial list of potential mediators from  <dig> to  <dig> . a visual inspection on the list yielded some new interesting candidates to be evaluated, such as calreticulin or drebrin. for example, chaperone calreticulin appeared in the literature related with ad  <cit>  and also with insulin receptors  <cit> . we also found drebrin, which has been related with ad and diabetes in the literature  <cit> . clearly, this example was easily done thanks to the protocols of unification and network handling capabilities of biana.

CONCLUSIONS
we have presented biana, a software framework designed to integrate several sources of biological data, exploit its relationships and facilitate its analysis. biana introduces an abstract data model to allow user-defined biological database unification and an easy to use interface for network creation and analysis. in order to make sure that biana would be freely accessible by anybody, biana framework uses either free open-source software or publicly available free software. for users who want to skip the software requirements, we provide biana web server at the price of loosing freedom on how to decide data unification, relinquishing to incorporate user-defined data and obliging simplified network analysis and visualization protocols.

the main advantage of biana against existing software is its design, which allows adding user specific data types and allows the user to handle his own unification protocol. however, unification is a non-trivial problem for non-expert users in bioinformatics. therefore, we recommend a unification protocol for the databases for which we have provided a parser in our web page. biana website also offers a repository where users can download/upload new parsers for other third-party databases and make their own parsers available for the scientific community. additionally, biana helps to handle the network, to expand with predictions or combined resources of information and to extract biologically relevant information from the network .

we believe biana will be of high interest for users who want to incorporate their own data on the analysis with other available biological data sources. it is also noteworthy that other software  integrating several sources of interactions can only distribute data if there are no restrictions , while in biana the user is free to download interactions from official sites and freely integrate them. the capability of executing biana as a cytoscape plugin allows users to benefit from existing cytoscape plugins in a complementary manner; and the capability of executing biana through its python api allows users to write scripts to access and analyze their data automatically.

availability and requirements
• project name: biana. biologic interactions and network analysis.

• project home page: http://sbi.imim.es/web/biana.php

• operating systems: unix based systems, windows

• programming language: python , java 

• other requirements: in windows all requirements are embedded in the software installer. in unix based systems it requires g++ compiler, python <dig>  and mysql server  <dig> . biana cytoscape plugin requires cytoscape  <dig> . <dig>  <cit> . in case one is interested in relations of biological data derived from sequence similarity , cd-hit  <cit>  and blast  <cit>  are also required.

• license: gnu gpl 

• restrictions: not applied

authors' contributions
bo conceived of the biana project and provided scientific guidance. biana software architecture was mainly designed by jgg with contributions of eg. jgg and eg implemented the code for the framework and the plugin and performed analyses. ra implemented the web server whose user interface is later improved by jgg. jp did the analysis on the reactome network. jgg, eg wrote the manuscript and jp, ra and bo contributed to the final version. all authors read and approved the final manuscript.

