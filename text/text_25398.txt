BACKGROUND
one of the most common applications of rna sequencing  is to identify differentially expressed genes under differing experimental conditions. before biological insights can be gained, one must process and analyze the large datasets generated from each sequencing experiment. each sample contains millions of reads that must be trimmed and assessed for read quality, mapped back to a reference genome , counted for transcript abundance, and tested for differential gene expression. many computational analysis tools have been developed specifically to work with rna-seq data; however, a single tool is often not suitable and requires several different applications assembled into a workflow. this task can be complicated as both the tool choice and input and output file formats for a given tool need to be considered and potentially modified to meet the requirements for the subsequent analysis step. several rna-seq analysis workflows exist, however, most are designed for eukaryotic organisms . the goal of this work is to assemble several open-source computational tools to deliver a complete, accessible, and easy-to-use reference-based bacterial rna-seq analysis workflow that is amenable to both the research laboratory and undergraduate classroom.

implementation
the sparta workflow  is implemented utilizing python for file input/output management and tool execution, combining several open-source computational tools. the sparta workflow analyzes data by: conducting read trimming and adapter removal with trimmomatic  <cit> ; performing quality analysis of the data sets with fastqc  <cit> ; mapping the reads to the reference with bowtie  <cit> ; counting transcript or gene feature abundance with htseq  <cit> ; and, analyzing differential gene expression with edger . within the differential gene expression analysis step, batch effects can be detected and the user is warned that potentially unintended variables need to be considered. if left unaccounted for, batch effects can significantly skew the results of the data analysis, leading to inappropriate experimental conclusions  <cit> . following analysis, sparta outputs quality analysis reports, gene feature counts and differential gene expression tables and scatterplots.fig.  <dig> sparta workflow diagram. single-end illumina fastq files, a fasta formatted reference genome, and genome feature file  are given as inputs to the workflow. trimmomatic and fastqc perform trimming of adapters and low quality bases/reads and quality assessment reports, respectively. bowtie maps the trimmed reads to the reference. htseq quantifies transcript abundance. r/edger tests for statistically significant genes and warns the user of potential batch effects present in the analyzed data set



sparta requires python  <dig>  numpy , java and r. once python is installed, the user initializes sparta, which then checks for the necessary dependencies at runtime. if any of these dependencies are not met, sparta informs the user of the missing components. to reduce complex software installation, sparta is distributed with the required software and an online tutorial  guides the user through installation and data analysis procedures for each operating system platform. the workflow maintains analytic flexibility for specific use cases by allowing the user to tailor the options utilized for each analysis step, but can proceed without requiring option specification. further, sparta will write the necessary r commands at runtime and will generate the appropriate contrasts to test all possible comparisons between user defined experimental conditions. the workflow is distributed with an example data set containing the first  <dig>  reads from a previously published study  <cit> . this data set is included to allow the user to become rapidly familiarized with the analysis procedure as well as ensure the appropriate dependencies are met.

RESULTS
rna-seq transcriptional profiling is becoming increasingly routine, and there is a demand for applications such as sparta that enable stand-alone workflows. though several bacterial rna-seq analysis workflows have been developed  <cit> , sparta is currently the only workflow capable of addressing the possibility of batch effects within the data set as well as the other necessary analysis procedures to identify differentially expressed genes. using a previously published data set  <cit> , sparta was capable of analyzing  <dig> experimental conditions containing  <dig> samples with approximately  <dig> million reads per sample in 4 h on an off-the-shelf imac computer . sparta can also be implemented in high performance computing environments utilizing the non-interactive mode functionality.

as ngs technologies and applications continue to permeate life science research, undergraduate education must incorporate the use of contemporary sequencing techniques to address biological questions. however, despite the rapid increase in data intensive experimental biology, undergraduates receiving a life sciences degree are often not exposed to the tools and basic computational skills required to study ngs data sets. to address this shortcoming, we have developed an online tutorial to guide students through the rna-seq analysis process . the sparta teaching tool was integrated into a senior level genomics course and successfully engaged students in the theory and application of rna-seq data analysis.

sparta and rockhopper <dig> are both bacterial rna-seq workflows that provide similar features  <cit> . an execution time comparison was conducted between the two platforms. sparta was executed with default parameters and rockhopper <dig> was tested with default parameters, verbose output, sam output, and operon and untranslated region identification turned off. further, the rockhopper <dig> cache was cleared before each test to mimic a first time analysis. when sparta was compared to rockhopper <dig> for execution, sparta exhibited greater scalability . therefore, differentiating features of sparta as compared to rockhopper <dig> include: improved scalability; incorporation of trimming and quality control of reads; and, a check for potential batch effects within the data set. notably, rockhopper <dig> provides additional functions not provided by sparta, such as operon analysis, definition of untranslated regions, and files for visualization of the results in a genome browser.fig.  <dig> data analysis execution time comparison between sparta and rockhopper <dig>  the two programs were compared for execution time when processing one, two, or three experimental conditions as compared to a reference condition. both sparta  and rockhopper <dig>  were installed and tested on an off-the-shelf imac . dependencies: java , python , and r . data are the mean of three software executions and error bars represent the standard deviation. data files  utilized were the example data bundled with sparta



future directions and functionality
additional features and functionality that will be incorporated into future releases of sparta are listed below and will be updated at http://sparta.readthedocs.org/en/latest/wishlist.html. further, to become involved into the active development of sparta, the current state of the code base and feature development can be found on github through http://sparta.readthedocs.org under the “contribute” heading. future releases of sparta will include but not limited to: 1) automated batch effect correction, 2) additional input file format support, 3) paired-end reads support, 4) read mapping output with normalized expression values, 5) operon analysis and definition of untranslated regions, 6) files for visualization in common genome browsers, and 7) reference-free transcriptome analysis.

CONCLUSIONS
sparta is a bacterial rna-seq analysis tool capable of taking raw illumina reads to differentially expressed genes in a turn-key, stand-alone workflow format that takes advantage of existing state of the art analysis tools and warns the user of potential batch effects. by reducing the required computational proficiency to perform transcriptional profiling experiments using rna-seq, sparta can enable microbiologists to accelerate their research and provide instructors the ability to incorporate a hands-on approach to ngs technologies in the classroom. further, sparta maintains analytic flexibility by allowing the user to tailor the analysis through option specification but is capable of proceeding with default values.

availability and requirements
project name: sparta.

project home page: http://sparta.readthedocs.org; http://sparta-teaching.readthedocs.org.

operating system: platform independent.

programming language: python.

other requirements: java and r.

license: creative commons by version  <dig> or greater.

abbreviations
ngsnext generation sequencing

rna-seqrna sequencing

competing interests

the authors declare that they have no competing interests.

authors’ contributions

bj and ra conceived of and planned project. bj, ms, and tt developed code base and tutorial. bj and ra wrote the manuscript. all authors read and approved the final manuscript.

