BACKGROUND
biological pathways are reaction-networks of the biological processes within a cell, which can be classified into three categories: gene regulatory networks, metabolic pathways and signaling pathways. due to the nature of concurrency of biological pathways, petri nets have been used to model and analyze biological pathways in many studies  <cit> .

nagasaki et al.  <cit>  have proposed an object-oriented petri nets called hybrid functional petri net with extension  for modeling complex biological systems. hfpne-based modeling allows users to easily understand biological networks with a graphical representation and reveals the expressiveness when representing the dynamic behaviors of sophisticated biological pathways. to improve the maintainability and reusability of hfpne models, we have developed an xml format called the cell system markup language   <cit> , with the aim of creating an exchange format for modeling, visualizing, and simulating biological pathways.

information about biological networks has been accumulated over many years, mainly through experimental analyses. however, there is a growing need for a framework to interpret biological data in an integrated manner and, further, to simulate and predict biological functions beyond simply storing and querying data. it is essential for such a framework to have incorporated the capability to visually represent system dynamics. there are several works to convert biological pathways into petri net representation  <cit> . however the results are not saved into an exchange format. although there are several formats to represent biological pathways, such as sbml  <cit> , cellml  <cit> , and biopax  <cit> , these formats do not fully support both visualization and simulation of biological pathways. instead, various tools have been developed to perform these functions independently. however, visualization tools generate images, mostly displayed as static pictures, and save them in noneditable binary files. simulation tools usually encode model parameters into the programming language. hence, it is not easy to change those parameters or to integrate them with other resources.

in this paper, we present a method for increasing the overall utilization of the valuable pathway data available in conventional pathway databases.

hybrid functional petri net with extension
csml is based on hfpne, a graphical language, for modeling and simulation of biological pathways. thus, we first describe the basic elements of hfpne and then how these elements are modeled in csml. the formal definition of hfpne is provided in nagasaki et al.  <cit> .

• hfpne consists of two types of nodes, called entities and processes, and three types of connectors – the formal terms in petri nets are places, transitions, and arcs, respectively. renaming the elements would make them more intuitive and easier for biologists to understand.

• entities, represented by circles as a visual component, model biological objects , conditions , states , and cellular organelles . in the case of chemical reactions, the compounds involved usually have specific quantities. in hfpne, an entity can take any object that can be represented in programming languages like an instance of a class in c++ or java. in a simple model, an object may take a primitive value such as a positive integer for the copy number of an mrna and a real value for the concentration of a protein.

• processes, represented by boxes as a visual component, model events among entities, such as phosphorylation, translocation, and apoptosis. in hfpne, each process can define any event/function that can be performed by programming languages. in a simple model, the event/function can be the speed of a reaction or a discrete reaction.

• connectors always connect an entity with a process via a directed edge and describe the relationship between nodes. hfpne defines three different types of connectors – a process connector, an association connector, and an inhibitory connector – represented by a solid line, a dashed line, and a solid line with a rectangle head as a visual component, respectively. the process connector can be used both as an input and output connector. in addition, it is possible to assign a function to each process connector. therefore, the values of entities increase or decrease depending on the direction of the process connector and the function defined in the connected process. on the other hand, the values of entities connected with association or inhibitory connectors are not changed. the association connector can be used only as an input connector and is used to enhance the reaction of the process, whereas the behavior of the inhibitory connector is the opposite. all connectors can take values or scripts as a threshold attribute and specify the active state of the process. the graphical notations of hfpne components are shown in figure  <dig> 

model structure in csml
the csml format primarily consists of model, view, biological property, and simulation property. the structure of csml is as follows: the top-level element in csml is csml:project, which has an id and a version attribute, and represents a pathway model. the csml:project element contains a single csml:model element. the csml:model element also has an id and a name attribute, and takes the following elements: csml:entityset, csml:processset, and csml:factset; these are sets of csml:entity, csml:process, and csml:fact, respectively. the outline of the csml structure is shown in table  <dig> 

the tags explained in the context are shown in black. on the other hand, the grey part is not explained in the manuscript, which is mainly to describe the global properties for the project level.

the csml:entity and csml:process elements respectively represent an entity and a process in hfpne. in csml:process, the entities involved in a process are represented via the csml:connector element, which denotes a connector in hfpne. the csml:connector element connects the corresponding process and the involved entities by referencing the ids of csml:entity. the csml:fact element represents some of the properties of the modeling pathway that cannot be described in hfpne. for example, the functionality of a pathway and the status of a dynamic simulation are useful in gaining an overall understanding of the pathway. this kind of information is represented as csml:fact.

each of csml:entity, csml:process, csml:fact, and csml:connector has a type attribute indicating the semantic constraints on the meaning of each element. the type attribute has a value that is a class name hierarchically conceptualized in the cell system ontology   <cit> . cso is a formal ontology for biological pathway modeling with dynamics. the basic components of hfpne – csml:entity, csml:process, and csml:connector – have their own biological properties, simulation properties, and view properties. the csml:biologicalproperty element is associated with the core terms defined in cso to annotate biological properties such as cellular components and biological events. cso also defines controlled vocabulary terms internal to the ontology. the csml:simulationproperty element is used to represent detailed simulation rules in hfpne. the csml:viewproperty element comprises several elements for the visualization of pathway components, such as an image file, graphical shape, and geometrical position. this property is rarely included in other formats such as sbml <cit>  and cellml <cit> .

additionally, in csml, it is possible to create sub-models from the main model by using filtering and selection. for such sub-models, multiple views can be assigned. however, these features are not used in this work.

transpath
the transpath database  <cit>  is designed to provide information about the intracellular signaling pathways. the database presents such information on different abstraction levels of the reactions with all the required molecular information about post-modification processes and complexes. transpath offers molecular details of the signal flow from the cell surface into the nucleus, focusing on mammals such as humans, mice, and rats. the database contains information manually extracted from the literature, except for the  <dig>  initial molecules imported from swiss-prot release  <dig>  as of april  <dig>  transpath professional release  <dig>  contains about  <dig>  molecules, over  <dig>  genes and over  <dig>  reactions collected from approximately  <dig>  references  <cit> . in addition, each reaction is provided with a reliability value based on the quality of experimental data in the primary literature. in terms of both the quantity and quality of data collected, transpath is considered to be very valuable to researches in biochemistry and molecular biology.

summary
modeling, visualizing, and simulating biological pathways are becoming increasingly important tasks for understanding dynamic cell systems. we have been developed an xml language, csml, as an integrated framework for such tasks. this work provides a methodology for reconstructing information from the transpath database into the csml format, one based upon the hfpne modeling rules. a major challenge is to accurately translate the information from a pathway database to an exchange format that enables dynamic simulation with visualization. the csml and its platforms  <cit>  could be used to check whether the model is represented in a consistent way, it is amenable to quantitative simulation, and the pathway components are correctly located in cellular location. the individual reactions and combinations of reactions in transpath are evaluated by the hfpne modeling rules and translated into csml. in addition, the reconstruction could allow easy exchange and integration of signal transduction information, which will enhance the usability of the transpath database.

RESULTS
the full contents of the transpath database are supplied in the xml  format  <cit> . hereinafter, we refer to the transpath database as tp; the term tp might be used to indicate the xml format itself whose tags are prefixed with "tp:." based on the hfpne modeling rules described in methods section, we have implemented the converter transpath2csml that can reconstruct reactions and pathways defined in tp into csml. during reconstruction, entities and processes deficient in tp but necessary for simulation-based models are inferred and added to create valid csml models.

in the following sections, we describe the reconstruction results for the main components in tp: molecule, reaction, and pathway. the hfpne modeling rules are developed at the reaction level in tp. for molecules including genes, we focused on the visualization.

note that there are also elements common to the tp components, such as tp:creator, tp:updator, tp:name, tp:synonyms, and tp:comments. the tp:creator and tp:updator elements indicate who registered and updated the data, respectively. the tp:name and tp:synonyms elements denote the name of the component and its synonyms. the tp:comments element is a text-based comment for information that cannot be described in other tags. these tags are also mapped to the csml format without any loss of information, although they are not shown in this paper.

for molecules
the molecules in tp are hierarchically classified  <cit>  such as basic, isogroup, family for proteins. this type is not distinguished from the name of the molecule without extracting the detail. visualization can help interpret large quantities of complex data. for this, we propose the visualization method to fully reflect the relationship among molecule types.

regular polygons are used for proteins. each nonprotein is also depicted as an icon. different numbers of line segments are used to distinguish families, isogroups, and basic types, i.e.,  <dig>   <dig>  and  <dig>  respectively. different line patterns of polygons are used to distinguish proteins at the level of an orthofamily. there are, in total,  <dig> orthofamily proteins in tp. each orthofamily is assigned to a line pattern and color, and then the proteins belonging to the same orthofamily are assigned to similar colors during conversion. in addition, an mrna and its product protein use the same color to indicate their relationship. we also designed icons representing different species and post-translational modification. these icons are attached to polygons on the fly during conversion. a complex protein is shown as composed of the graphics of its components. the generated graphics are saved in the svg  format  <cit>  and embedded into csml. currently both scalable and nonscalable image formats are supported in csml. figure  <dig> shows the automatically generated graphics of molecules categorized into the cdc <dig> family.

from the graphic of a molecule, the type of molecule is easily identified. for example, in tp, two semantic type reactions, xn <dig> and xn <dig>  have the same tp:name, avo <dig> --> rictor, i.e., avo <dig> expresses rictor in humans. the difference between the two reactions is the type of rictor, i.e., a basic type in xn <dig> and an isogroup type in xn <dig>  figure  <dig> shows the converted results for two reactions:  xn <dig> and  xn <dig>  the output entity rictor is drawn as hexagon in  and pentagon in , which will reduce the effort required to extract the details of the molecule type.

for reactions
we have defined the hfpne modeling rules for the effect terms of the reactions in tp. basically, a reaction in tp is converted into one or more csml:process elements in csml. the participants in a reaction are converted into pairs of csml:entity and csml:connector elements. the type attribute of csml:connector indicates the role of an entity and whether it is involved as an input or an output in a process. the values are class names defined in cso  <cit> : inputprocess as an input substrate, inputassociation as an input activator, inputinhibition as an input inhibitor, and outputprocess as an output product. the role of the participating entity is decided from the combination of the effect terms and the description of the entity in tp. the outputprocess type connector may indicate the role of the process as an input.

the reactions in tp are mainly divided into three types: pathway step, molecular evidence, and semantic. the first two types are converted into simulatable processes in csml, while semantic level reactions cannot be directly converted into processes since the details of the reactions are not given. however, a semantic level reaction may have the tp:pathway_step and tp:molecular_evidence elements, which store the related pathway step and evidence reactions, respectively. in such a case, it is possible to reconstruct a simulatable model. during conversion, default values are assigned to simulation related parameters defined in csml. otherwise, the semantic reaction is mapped to the csml:fact element in csml, which is still useful for examining the result of the model simulation. for example, one semantic reaction describes that molecule a is increased after the stimulation of drug b via an unknown indirect regulation. because there are no details of the reaction, the participants of the reaction  and any effect terms will be saved into csml:fact. in a simulation tool such as cell illustrator  <cit> , the user can check the correspondence between the simulation results of the whole pathway and the experimental results described in csml:fact for the reaction.

the conversion results based on the hfpne modeling rules described in methods section are shown in figure  <dig> and figure  <dig>  because of the limitation of space, the results are divided into two figures. we have selected one reaction for each group of rules as an example and provide the conversion result of the reaction. the left and right columns list the element names and their corresponding values in tp and csml, respectively. the last row shows a drawing by pathwaybuilder  <cit>  for transpath and that by cell illustrator  <cit>  for csml. pathwaybuilder uses the following legend for modeling: an oval with a name for proteins; rectangle with name, genes; small rectangle with no name, reactions; black line, mass flow; grey line, activation; red line, inhibition; and blue line, catalysis. in the cell illustrator drawing, the icons of the processes are also defined in cso with their corresponding names as predefined instances. after conversion, the inferred entity that is necessary for simulation but missing in the original tp model is represented in italics and emphasized with a red box in the cell illustrator drawing. however, some effect terms that are assigned to pathway steps or molecular evidences in the original tp are ambiguous and cannot be directly used in the csml simulation model. for example, as in figure  <dig> and figure  <dig>  the effect term that includes "regulation" cannot clarify the role of a participant, e.g., whether it activates or inactivates the event. therefore, we must add two connectors for the participant.

for pathways
a pathway is considered as a logical combination of reactions. the tp:pathway element, which consists of reactions and molecules, is converted into one csml:project element including one csml:model element. during conversion, we first consider pathway level reactions. if there are no pathway level reactions, evidence level reactions are considered. in addition, reactions related to a specific molecule as upstream and downstream are also used to build a pathway in csml. as an example, we selected a pathway that fmlp activates erk <dig> via the predominant mek isoform in human neutrophils, mek <dig> in tp. the pathway consists of two reactions xn000015421; fmlp ---> mek <dig>  and xn000000703; mek <dig> ---> erk <dig> . figure  <dig> shows  the pathwaybuilder view from traspath,  cell illustrator view after conversion,  and  simulation results with default and adjusted parameters, respectively.

discussion
we are developing a systematic translation method for generating dynamic pathway models with visualization in csml. we have suggested a formal mechanism that combines petri nets modeling and the semantics in each biological reaction. the modeling rules generate a simulatable model for the whole pathway as a combination of processes as well as for an individual process. our modeling rules can be applied to semi-structured information stored in tp.

when translating data, we have first observed that tp has an inconsistent and incomplete representation. in tp, the roles of the molecules in tp:reactants and tp:produces are changed along with the effect terms described in the tp:effect element. this inconsistency occurs because the effect terms reflect the descriptions in the literature. the relationship between tp:reactants and tp:produces is similar to that between a subject and an object in english grammar. therefore, it does not reflect the biological relationship in a reaction. for example, from the sentence "a activates the binding of b," a is defined as a reactant and not an enzyme. this kind of description makes consistent interpretation impossible.

secondly, tp is a database for static pathway models and generates a static drawing with a high level of abstraction, which is useful in providing a broad overview of pathways; moreover, this representation style is familiar to biologists. however, it increases the effort required to extract the essential information to generate a simulatable model. the implicit representation is shown as follows:

• the modification information for the molecule is mixed together in the name of the molecule in tp:molecule.

• the locations where the reaction has been shown indicate places including the cell line, stage, organ, and species used in the original literature, which are described all in tp:locations in tp:reaction. csml separately describes the tissue type, cell type, and organism  as biological properties.

• cellular compartment for the molecule and reaction is important to locate them at biologically meaningful locations in a cell. for example, the effect term "translocation" indicates a regulated transfer of a signaling molecule from one location to another location. it will improve the understanding of the pathway if the cellular compartments are described. however, tp does not explicitly define this information.

to improve the exchange and integration capabilities with the successive releases of transpath, we suggest that transpath uses a common vocabulary to annotate data such as tp:effect. mature core terms defined in cso for biological properties such as biological events and cellular locations will be useful because cso includes most of the external references referred in biopax  <cit>  for controlled vocabularies and reorganizes them for system dynamics.

in this work, we implemented rules for the automatic generation of icons for molecules, reflecting the species, modification, and subsumption relationship in the hierarchy of the molecules. the visualization could be improved by using a description in tp as follows:

• the similarity between proteins, and between an mirna and its precusor pre-mirna can be indicated by using similar line patterns. it could be supported by tp:klass, the classification stretches over all molecules, and tp:go, the go terms from molecular functions and biological processes.

• the stroke widths of connectors reflect the quality of the experimental results in the primary literature, ranging from  <dig> to  <dig> in tp:quality .

CONCLUSIONS
we used a systematic method to reconstruct dynamic signaling pathways from static pathway databases. we identified a set of rules for hfpne modeling in terms of biological processes. the basic methodology for these rules can be applied to other similar databases to build dynamic pathways. the conversion results are saved in csml and can be used for further biological investigation, e.g., conversion to other formats for use with different visualizing tools and different simulating tools. the proposed methods were applied to the transpath professional  <dig> . during our research, transpath  <dig>  is released with more data, but with no changes of the format. the converted results in csml are available for both professional  and academic  users via the cell illustrator online   <cit> . transpath  <dig>  in csml is free to all academic users upon registration. it is possible to search which entities  are related to a queried entity and which processes include the queried entity. the part of or all results can be used to build a pathway. each pathway stored in transpath is provided as one project in cio.

