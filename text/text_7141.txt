BACKGROUND
the cellular function of a vast majority of proteins is performed through physical interactions with other proteins. indeed, essentially all of the known cellular and biological processes depend, at some level, on protein-protein interactions   <cit> . therefore, the controlled interference of ppi with chemical compounds provides tremendous potential for the discovery of novel molecular tools to improve our understanding of biochemical pathways as well as the development of new therapeutic agents  <cit> .

considering the nature of the interaction surface, protein secondary structures are essential for binding specifically to protein interaction domains. peptides also represent templates of choice for mimicking a secondary structure in order to modulate protein-protein interactions  <cit> . furthermore, they are a very interesting class of therapeutics since they display strong activity, high selectivity, low toxicity and fewer drug-drug interactions. they can also serve as investigative tools to gain insight into the role of a protein, by binding to distinct regulatory regions to inhibit specific functions.

yearly, large sums of money are invested in the process of finding druggable targets and identifying compounds with medicinal utility. the widespread use of combinatorial chemistry and high-throughput screening in the pharmaceutical and biotechnology industries implies that millions of compounds can be tested for biological activity. however, screening large chemical libraries generates significant rates of both false positives and negatives. the process is expensive and faces a number of challenges in testing candidate drugs and validating the hits, all of which must be done efficiently to reduce costs and time. computational methods with reasonable predictive power can now be envisaged to accelerate the process, thus providing an increase in productivity at a reduced cost.

as an example, peptides ranging from  <dig> to  <dig> aa represent the recognition unit for the mhc . being capable of predicting which peptides bind to a specific mhc alleles would be of tremendous benefit to improve vaccine based therapy, possibly generating antibodies with greater affinity that could yield an improved immune response. moreover, simply having data on the binding affinity of peptides and proteins could readily assist system biology modelling of interaction pathways.

the ultimate goal is to build a predictor of the highest binding affinity peptides. this task would be facilitated if one had a fast and accurate binding affinity predictor. indeed, with this predictor, one could easily predict the binding affinity of huge sets of peptides and select the candidates with the highest predicted binding affinity, or use stochastic search methods such as simulated annealing if the set of peptides were too large. this paper provides a step in this direction with the use of a machine learning algorithm based on kernel methods and a novel kernel.

traditional machine learning approaches focused on using binary binding data for classification of compounds   <cit> . non-binding compounds are rarely known and valuable quantitative binding affinity information is lost during training, a major obstacle to binary classification. other approaches used information from the us food and drug administration’s adverse event reporting system for the prediction of off-target protein interactions  <cit> . these methods can predict unknown drug-target interactions from fda approved drugs but are not suited for the identification of new pharmaceutical compounds. new databases, such as the pepx database, contain binding affinities between peptides and a large group of protein families. the first part of this paper presents a general method for learning a binding affinity predictor between any peptide and any protein, a novel machine learning contribution to biology.

the immune epitope database   <cit>  contains a large number of binding affinities between peptides and major histocompatibility complex  alleles. predicting methods for mhc class i alleles have already obtained great success  <cit> . the simpler binding interface of mhc-i molecules makes the learning problem significantly easier than for mhc-ii molecules. allele specific  methods for mhc class ii alleles have also reasonable accuracy, despite requiring a large number of training examples for every allele in order to achieve adequate accuracy  <cit> . pan-specific  methods, such as multirta  <cit>  and netmhciipan- <dig>   <cit> , were designed in order to overcome this issue. these methods can predict, with reasonable accuracy, the binding affinity of a peptide to any mhc allele, even if this allele has no known peptide binders.

we propose a new machine learning approach based on kernel methods  <cit>  capable of both single-target and multi-target  prediction. we searched for kernels that encode relevant binding information for both proteins and peptides. therefore, we propose a new kernel, a generic string  kernel, that generalizes most of kernels currently used in this setting . the gs kernel is shown to be a suitable similarity measure between peptides and pseudo-sequences of mhc-ii binding interfaces.

for the machine learning algorithm itself, we show that kernel ridge regression  <cit>   is generally preferable to the support vector regression  algorithm  <cit>  because krr has less hyperparameters to tune than svr, thus making the learning time smaller. the regression score obtained with the pepx examples is competitive with the ones generated on data sets containing peptides binding to a single protein, even if the former task is, in theory, much more difficult. for the peptide-mhc binding problem, comparison on benchmark datasets show that our algorithm surpasses netmhciipan- <dig>   <cit> , the current state-of-the-art method. indeed, in the most difficult pan-specific case , our algorithm performs better than the state of the art in most cases. finally, we have found that ridge regression outperforms svr on three quantitative structure affinity model  single-target predictions benchmarks  <cit> . we thus propose a machine learning approach to immunology and a novel string kernel which have shown to yield impressive results on benchmark datasets for various biological problems.

methods
statistical machine learning and kernel ridge regression in our context
given a set of training examples , the task of a learning algorithm is to build an accurate predictor. in this paper, each example will be of the form , e), where x represents a peptide, y represents a protein, and e is a real number representing the binding energy  between the peptide x and the protein y. a multi-target predictor is a function h that returns an output h when given any input . in our setting, the output h is a real number estimate of the “true” binding energy  e between x and y. the predictor h is accurate on example , e) if the predicted output h is very similar to the real output e. a predictor is good when it is accurate on most future examples unseen during training.

with kernel methods, each input  is implicitly mapped to a feature vectorϕ = , ϕ <dig>  …, ϕd) of large dimensionality d. moreover, the predictor is represented by a real-valued weight vector w that lies in the space of feature vectors. given an arbitrary input , the output of the predictor hw is given by the scalar product 

 hw=w·ϕ=def∑i=1dwiϕi. 

the loss incurred by predicting a binding energy hw on input , when the true binding energy is e, is measured by a loss functionℓ, e). as is usual in regression, we will use the quadratic loss function 

 ℓ,e)=) <dig>  

the fundamental assumption in machine learning is that each example , e) is drawn according to some unknown distribution d. then the task of the learning algorithm is to find the predictor hw having the smallest possible riskr defined as the expected loss 

 r=defe,e)∼dℓ,e). 

however, the learning algorithm does not have access to d. instead, it has access to a training set s=def{,e1),,e2),…,,em)} of m examples where each example , ei) is assumed to be generated independently according to the same  distribution d. modern statistical learning theory  <cit>  tells us that the predictor hw minimizing the ridge regression cost functionf will have a small risk r whenever the obtained value of f is small. here, f is defined as 

 f=def∥w∥2+c∑i=1mℓ,ei)=∥w∥2+c∑i=1m) <dig>  

for some suitably-chosen constant c >  <dig>  the first term of f, ∥w∥2=defw·w, which is the squared euclidean norm of w, is called a regularizer and it penalizes predictors having a large norm . the second term measures the accuracy of the predictor on the training data. consequently, the parameter c controls the complexity-accuracy trade-off. its value is usually determined by measuring the accuracy of the predictor on a separate  part of the data that was not used for training, or by more elaborate sampling methods such as cross-validation.

the representer theorem <cit>  tells us that the predictor w∗ that minimizes f lies in the linear subspace span by the training examples. in other words, we can write 

 w∗=∑i=1mαiϕ, 

 where the coefficients αi are called the dual variables and provide collectively the dual representation of the predictor. this change of representation makes the cost function dependent on ϕ only via the scalar product ϕ·ϕ=defk,) for each pair of examples. the function k is called a kernel and has the property of being efficiently computable for many feature maps ϕ, even if the feature space induced by ϕ has an extremely large dimensionality. by using k instead of ϕ, we can construct linear predictors in feature spaces of extremely large dimensionality with a running time that scales only with the size of the training data . this fundamental property is also known as the kernel trick <cit> . it is important to point out that, since a kernel corresponds to a scalar product in a feature space, it can be considered as a similarity measure. a large  value of the kernel normally implies that the corresponding feature vectors point in similar directions, although a value close to zero normally implies that the two feature vectors are mostly orthogonal .

as was proposed by several authors  <cit> , we restrict ourselves to joint feature maps having the form ϕ=ϕx⊗ϕy where ⊗ denotes the tensor product. the tensor product between two vectors a =  and b =  denotes the vector a ⊗ b =  of all the nm products between the components of a and b. if we now define the peptide kernel kx by kx=defϕx·ϕx, and the protein kernel ky by ky=defϕy·ϕy, the joint kernel k simply decomposes as the product of kx and ky because 

 () k,)=defϕ·ϕ=ϕx⊗ϕy·ϕx⊗ϕy=·ϕx)·ϕy)=defkxky. 

consequently, from the representer theorem we can write the multi-target predictor as 

 hw∗=w∗·ϕ=w∗·⊗ϕy)=∑i=1mαikxky. 

in the case of the quadratic loss ℓ, e) = ) <dig>  f is a strongly convex function of w for any strictly positive c. in that case, there exists a single local minimum which coincides with the global minimum. this single minimum is given by the point w∗ where the gradient ∂f / ∂w vanishes. for the quadratic loss, this solution w∗ is given by 

  α=k+1ci-1e, 

where α=def, e=def, k denotes the gram matrix of kernel values ki,j=kxky, and i denotes de m × m identity matrix. hence, the learning algorithm for kernel ridge regression just consists at solving equation . note that for a symmetric positive semi-definite kernel matrix k, the inverse of k + i / c always exists for any finite value of c >  <dig>  note also that the inverse of an m × m matrix is obtained in o time with the gaussian-elimination method and in o time with the coppersmith-winograd algorithm.

finally, we will also consider the single protein target case where only one protein y is considered. in this case, the predictor hw predicts the binding energy from a feature vector ϕx constructed only from the peptide. hence, the predicted binding energy for peptide x is now given by w·ϕx. so, in this single protein target case, the cost function to minimize is still given by f but with ϕ replaced by ϕx. consequently, in this case, the solution is still given by equation  but with a kernel matrix k given by ki,j=kx. the single-target predictor is thus given by 

 hw∗=w∗·ϕx=∑i=1mαikx. 

kernel methods have been extremely successful within the last decade, but the choice of the kernel is critical for obtaining good predictors. hence, confronted with a new application, we must be prepared to design an appropriate kernel. the next subsections show how we have designed and chosen both peptide and protein kernels.

a generic string  kernel for small bio-molecule strings
string kernels for bio-molecules have been applied with success in bioinformatics and computational biology. kernels for large bio-molecules, such as the local-alignment kernel  <cit>  have been well studied and applied with success to problems such as protein homology detection. however, we observed that these kernels perform rather poorly on smaller compounds . consequently, kernels designed for smaller bio-molecules like peptides and pseudo sequences have recently been proposed. some of these kernels  <cit>  exploit sub-string position uncertainty while others  <cit>  use physicochemical properties of amino acids. we present a kernel for peptides that exploits both of these properties in a unified manner.

the proposed kernel, which we call the generic string  kernel, is a similarity measure defined for any pair  of strings of amino acids. let Σ be the set of all amino acids. then, given any string x of amino acids , let |x| denote the length of string x, as measured by the number of amino acids in x. the positions of amino acids in x are numbered from  <dig> to |x|. in other words, x = x <dig>  x <dig>  …, x|x| with all xi ∈ Σ.

now, let ψ:Σ→rd be an encoding function such that for each amino acid a, 

  ψ=,ψ <dig> …ψd) 

is a vector where each component ψi encodes one of the d properties  of amino acid a. in a similar way, we define ψl:Σl→rdl as an encoding function for strings of length l. thus, ψl encodes all l amino acids of a concatenning l vectors, each of d components: 

  ψl=def,ψ,…,ψ) 

let l ≥  <dig> be a maximum length for substring comparison. we define the generic string  kernel as the following similarity function over any pair  of strings of length at least l: 

  gs=def∑l=1l∑i=0|x|-l∑j=0|x′|-le-22σp2e-∥ψl-ψl∥22σc <dig>  

in other words, this kernel compares each substring xi+ <dig>  xi+ <dig> ,.., xi+l of x of size l ≤ l with each substring xj+1′,xj+2′...,xj+l′ of x′ having the same length. each substring comparison yields a score that depends on the ψ-similarity of their respective amino acids and a shifting contribution term that decays exponentially rapidly with the distance between the starting positions of the two substrings. the σp parameter controls the shifting contribution term. the σc parameter controls the amount of penalty incurred when the encoding vectors ψl and ψl differ as measured by the squared euclidean distance between these two vectors. the gs kernel outputs the sum of all the substring-comparison scores.

also, note that the gs kernel can be used on strings of different lengths, which is a great advantage over a localized string kernel  such as the rbf, the weighted degree kernels  <cit>  or kiss  <cit> , a well known kernel method for the prediction of peptides binding to mhc-i. in fact, the gs kernel generalizes eight known kernels. table  <dig> lists them with the fixed and free parameters. for example, when σp approaches + ∞ and σc approaches  <dig>  the gs kernel becomes identical to the blended spectrum kernel  <cit> , which has a free parameter l representing the maximum length of substrings. the free parameter values are usually determined by measuring the accuracy of the predictor on a separate  part of the data that was not used for training, or by more elaborate sampling methods such as cross-validation.

 substituting ψl by ψl-lnβl where the βl’s are the weighted degrees defined in  <cit> . eight known kernels can be obtained by fixing different parameters of the gs kernel.

in contrast, leslie et al.  <cit>  proposed the mismatch kernel which also extends the spectrum kernel, adding the important notion of mismatches  in the comparison of k-mers. this was motivated by the fact that mutations occur in proteins and thus k-mers should be considered up to a certain amount of mismatches. not all mutations are equal, some will not affect the function of a protein as others will dramatically change the conformation of a protein or the binding affinity of a peptide. this is the motivating idea behind the ψ encoding function, amino acids properties are used to have a smooth transition between unimportant and critical mutations. moreover, the transition can be adjusted thought the σc parameter.

also, saigo et al.  <cit>  proposed the local alignment  kernel which sums all possible alignments with gaps between two sequences. the la kernel is closely related to the popular smith-waterman alignment algorithm. in contrast, the gs kernel sums the contributions of all substrings according to their physicochemical properties with a position uncertainty penalising term. also, the gap penalisation in the la is well adapted to protein similarity by incorporating biological knowledge about protein evolution but not so much for identifying localized signals in sequences. indeed, a small gap of only one amino acid in a peptide will have a dramatic influence on its contacting residues and therefore on its binding affinity. finally, the la kernel suffers from diagonal dominance, an issue the authors got around by taking the logarithm of the kernel. unfortunately this operation does not preserve the positive definiteness of the kernel. however, the gs kernel does not suffer form diagonal dominance, thus avoiding many workarounds.

in the next subsection, we prove that the gs kernel is symmetric positive semi-definite and, therefore, defines a scalar product in some large-dimensional feature space . in other words, for any hyperparameter values , there exists a function ϕx transforming each finite sequence of amino acids into a vector such that 

 gs=ϕx·ϕx. 

 consequently, the solution minimizing the ridge regression functional f will be given by equation  and is guaranteed to exist whenever the gs kernel is used.

symmetric positive semi-definiteness of the gs kernel
the fact that the gs kernel is positive semi-definite follows from the following theorem. the proof is provided as supplementary material .

theorem 1
let Σ be an alphabet . for each l ∈ { <dig>  .., l}, let kl:Σl×Σl→r be a symmetric positive semi-definite kernel. let a:r→r be any function which consists of a convolution of another function b:r→r by itself. in other words, for all z,z′∈r, we have 

 a=∫-∞+∞bbdt. 

then, the kernel k defined, for any two strings of length at least l on the alphabet Σ, as 

 k=def∑l=1l∑i=0|x|-l∑j=0|x′|-la×kl, 

is also symmetric positive semi-definite.

the positive semi-definiteness of the gs kernel comes from the fact that the gs kernel is a particular case of the more general kernel k defined in the above theorem. indeed, first note that both kernels are identical except a in kernel k is specialized to exp22σp2) in the gs kernel, and kl in kernel k is specialized to exp-ψl∥22σc2) in the gs kernel. moreover, this last exponential is just an rbf kernel  defined over vectors of rld of the form ψl; it is therefore positive semi-definite for any l ∈ { <dig>   <dig>  .., l}. for the first exponential, note that exp22σp2) is a function that is obtained from a convolution of another function since we can verify that 

 exp-22σp2=2σpΠ∫-∞+∞exp-2σp2×exp-2σp2dt. 

indeed, this equality is a simple specialization of equation  of  <cit> . it is related to the fact that the convolution of two normal distributions is still a normal distribution.

finally, it is interesting to point out that theorem  <dig> can be generalized to any function a on measurable sets m , provided that a is still is a convolution of another function b:m → m. we omit this generalized version in this paper since theorem  <dig> suffices to prove that the gs kernel is positive semi-definite.

efficient computation of the gs kernel
to cope with today’s data deluge, the presented kernel should have a low computational cost. for this task, we first note that, before computing gs for each pair  in the training set, we can first compute 

 e=def∥ψ-ψ∥2=∑p=1d-ψp) <dig>  

for each pair  of amino acids. after this pre-computation stage, done in o time, each access to e is done in o time. we will not consider the running time of this pre-computation stage in the complexity analysis of the gs kernel, because it only has to be done once to be used for any 5-tuple . recall that the binding affinity predictor, given by equation  <dig>  can be built only after we have computed the m <dig> elements of the kernel matrix k . since m <dig> is usually much larger than d · |Σ| <dig>  we can omit this pre-computation time in the complexity analysis of kernel evaluations.

now, recall that we have defined ψl:Σl→r as the concatenation of vectors of the form ψ ). hence, ∥ψl - ψl∥ is an euclidian norm, and we have 

  ∥ψl-ψl∥2=∑k=1l∥ψ-ψ∥2=∑k=1le 

following this, we can now write the gs kernel as 

  gs=∑l=1l∑i=0|x|-l∑j=0|x′|-le-22σp2e-∑k=1le2σc <dig> 

  =∑i=0|x|∑j=0|x′|e-22σp2×∑l=1mine-∑k=1le2σc <dig>  

where min is used in order to assure that i + k and j + k are valid positions in strings x and x′.

now, for any l, |x|, |x′|, and any i ∈ { <dig>  …, |x|}, j ∈ { <dig>  …, |x′|}, let 

  bi,j=def∑l=1mine-∑k=1le2σc <dig>  

we therefore have 

  gs=∑i=0|x|∑j=0|x′|exp-22σp2·bi,j. 

since min ≤ l, we see, from equation , that the computation of each entry bi,j seems to involve o operations. however, we can reduce this complexity term to o by a dynamic programming approach. indeed, consider the following recurrence: 

  tk=1ifk=0tk-1·e-e2σc2otherwise. 

we thus have 

  bi,j=∑k=1mintk 

the computation of each entry bi,j therefore involves only o operations. consequently, the running time complexity of each gs kernel evaluation is o .

to test the efficiency of this dynamic programming algorithm, we conducted an experiment measuring the speedup obtained from using this algorithm versus a naïve implementation of equation  that did not exploit dynamic programming. for peptides of length  <dig>   <dig> and  <dig>  we measured the speedup obtained while computing  <dig>  kernel values as a function of the kernel parameter l.

for a given value of l, the speedup s is given by s = tn / td, where tn is the running time of the naïve implementation and td is the running time used by the dynamic programming algorithm.

the results shown in figure  <dig> demonstrate that as the value of l increases, the dynamic programming algorithm is much more efficient than the naïve implementation.

gs kernel approximation
in this section, we show how to compute a very close approximation of the gs kernel in linear time. such a feature is interesting if one wishes to do a pre or post treatment where the symmetric positive semi-definite  property of the kernel is not required. for example, as opposed to the training stage where the inverse of k + i / c is guaranteed to exists only for a spsd matrix k, kernel values in the prediction stage could be approximated. indeed, the scalar product with α is defined for non positive semi-definite kernel values. this scheme would greatly speed up the predictions with a very small lost of accuracy and precision.

the shifting penalizing term, exp-22σp <dig> in equation , implies that the further two substrings are from each other, no matter how similar they are, their contribution to the kernel will vanish exponentially rapidly. let δ be the maximum distance between two substrings that we intend to consider in the computation of the approximate version of the gs kernel. in other words, any substring whose distance is greater than δ will not contribute. we propose to fix δ = ⌈3σp⌉. in this case, the contribution of any substring beyond δ is bound to be minimal. for the purpose of demonstration, let p be the |x| × |x′| matrix 

  pi,j=def0if|i-j|>δexp-22σp2otherwise. 

p is thus a sparse matrix with exactly δ|x| + δ|x′| - δ <dig> non-zero values around it’s diagonal. we can therefore write this approximation of the gs kernel as 

  gs′=∑i=0|x|∑j=0|x′|pi,j·bi,j. 

it is clear that only values of b for which the value in p is non-zero need to be computed. the complexity of gs′ is dominated by the computation of matrix b whose δ|x| + δ|x′| - δ <dig> entries can be computed in o). since l and δ are constant factors, we have that gs′ ∈ o ), giving an optimal linear complexity.

to determine the speedup that can be obtained by approximating the gs kernel, we conducted an experiment measuring this speedup for different peptide lengths. for a given value of σp, the speedup s is given by s = tf / ta, where tf is the time required for the computation using the gs kernel and ta is the time required for the computation using the approximated gs kernel.

kernel for protein binding pocket
hoffmann et al.  <cit>  proposed a new similarity measure between protein binding pockets. the similarity measure aligns atoms extracted from the binding pocket in 3d and assigns a score to the alignment. pocket alignment is possible for proteins that share low sequence and structure similarity. they proposed two variations of the similarity measure. the first variation only compares the shape of pockets to assign a score. in the second variation, atom properties, such as partial charges, re-weight the contribution of each atom to the score. we will refer to these two variations respectively as sup-ck and sup-ckl. since both scores are invariant by rotation and translation, they are not positive semi-definite kernels. to obtain a valid kernel, we have used the so-called empirical kernel map where each y is mapped explicitly to , k, …, k). to ensure reproducibility and avoid implementation errors, all experiments were done using the implementation provided by the authors. an illustration of the pocket creation for the supck kernel is shown in figure  <dig> 

kernel for protein structure
the mammoth kernel is a similarity function between protein secondary structure proposed by qiu et al.  <cit> . this kernel is based on a sequence-independent structure alignment heuristic originally proposed by ortiz et al.  <cit> . structural information from crystals is used to align two proteins using their secondary structure, a score is assigned to the alignment. the greater the similarity between the two proteins’ secondary structure, the greater the alignment score will be. ortiz et al.  <cit>  showed that the heuristic was able to produce an accurate alignment for both high and low resolution structures. also, this kernel was recently used with success for prediction of protein-protein interactions  <cit> . to ensure reproducibility and avoid implementation errors, all experiments were done using the implementation provided by the authors.

metrics and experimental design
when dealing with regression values, classical metrics used for classification such as the area under the roc curve   <cit>  are not suitable. to compute the auc, some authors determine a binding affinity threshold value and use it to transform the regression problem into a binary classification problem. the real value outputs of the predictor are then mapped to binary classes using the threshold and the auc is computed using these binary values. unfortunately, this approach makes the value of the auc metric dependent on the chosen treshold value. for this reason, we decided not to present results for the auc metric in this paper. nevertheless, these results are provided as supplementary material .

fortunately, metrics such as the root mean squared error , the coefficient of determination  and the pearson product-moment correlation coefficient  are more suited for measuring the performance of predictors on regression problems. therefore, in this paper, we have used the pcc and the rmse to evaluate the performance of our method.

except when otherwise stated,  <dig> folds nested cross-validation was done for estimating the pcc and the rmse of the predicted binding affinities . for all n  outer folds, n -  <dig> inner cross-validation folds were used for the selection of the kernel hyperparameters and the c parameter of equation . note that, all reported values were computed on the union of the outer fold test set predictions. this is important, since an average of correlation coefficients is not a valid correlation coefficient. this is also true for the root mean squared error.

more precisely, let ē denote the average affinity in the data set d. let tk for k ∈ { <dig>  …, 10} denote the testing set of the kth outer fold and let hd∖tk be the predicted binding affinity on example , ei) of the predictor built from d∖tk. the correlation coefficient was computed using: 

  pcc=1-∑k=1n∑i∈tkei-hd∖tk2∑i∈dei-ē <dig>  

an algorithm that, on average, produces a predictor that makes the same quadratic error as the constant predictor ē will give pcc =  <dig> and an algorithm that always returns a perfect predictor will give pcc =  <dig> 

as for the rmse, it was computed using 

  rmse=∑k=1n∑i∈tk)2|d| 

therefore, the perfect predictor will give rmse =  <dig> and the value of this metric will increase as the quality of the predictor decrease.

all the p-values reported in this article were computed using the two-tailed wilcoxon signed-ranked test.

finally, for all the experiments, hyperparameters for the gs kernels and the learning algorithms were selected by grid search using the following ranges: c ∈ ] <dig>  100], σp ∈ ] <dig>  18], σc ∈  <cit>  and l ∈  <cit> .

data
pepx database
the pepx database  <cit>  contains  <dig> high-quality peptide-protein complexes along with their protein and peptide sequences, high quality crystal structures, and binding energies  computed using the foldx force field method. full diversity of structural information on protein-peptide complexes is achieved with peptides bound to, among others, mhc, thrombins, α-ligand binding domains, sh <dig> domains and pdz domains. this database recently drew attention in a review on the computational design of peptide ligands  <cit>  where it was part of large structural studies to understand the specifics of peptide binding. a subset of  <dig> non-redundant complexes was selected based on the dissimilarity of their binding interfaces. the authors of the database performed the selection in such a way that this smaller subset still represented the full diversity of structural information on peptide-protein complexes present in the entire protein data bank , see  <cit>  for a description of the method. we will refer to the smaller subset as the “pepx unique” data set and to the whole data base as “pepx all”.

the few complexes with positive binding energies were removed from the dataset. no other modifications were made to the original database.

major histocompatibility complex class ii 
two different approaches were used for the prediction of mhc class ii - peptide binding affinities: single-target and multi-target .

single-target prediction experiments were conducted using the data from the iedb dataset proposed by the authors of the rta method  <cit> . the latter consists of  <dig> separate datasets, each containing data on the peptides binding to an mhc class ii allotype. for each allotype, the corresponding dataset contains the binding peptide sequences and their binding affinity in kcal/mol. these datasets have previously been separated into  <dig> cross-validation folds to minimize overlapping between peptide sequences in each fold. it is well known in the machine learning community that such practice should be avoided, as opposed to random fold selection, since the training and test sets should be independently generated. these predefined folds were nevertheless used for the purpose of comparison with other learning methodologies that have used them.

pan-specific experiments were conducted on the iedb dataset proposed by the authors of the netmhciipan method  <cit> . the dataset contains  <dig> different hla-dr allotypes, with  <dig> to  <dig> binding peptides per allotype. for each complex, the dataset contains the hla allele’s identifier , the peptide’s sequence and the log50k transformed ic <dig> , which is given by 1- log50000ic <dig> 

as pan-specific learning requires comparing hla alleles using a kernel, the allele identifiers contained in the dataset were not directly usable for this purpose. hence, to obtain a useful similarity measure  for pairs of hla alleles, we used the pseudo sequences composed of the amino acids at highly polymorphic positions in the alleles’ sequences. these amino acids are potentially in contact with peptide binders  <cit> , therefore contributing to the mhc molecule’s binding specificity. the authors of the netmhciipan method proposed using pseudo sequences composed of the amino acids at  <dig> positions that were observed to be polymorphic for hla-dr, dp and dq  <cit> . with respect to the imgt nomenclature  <cit> , these amino acids are located between positions  <dig> and  <dig> of the mhc’s β chain. pseudo sequences consisting of all  <dig> amino acids between these positions were also used to conduct the experiments.

quantitative structure affinity model  benchmark
three well-studied benchmark datasets for designing quantitative structure affinity models were also used to compare our approach:  <dig> angiotensin-i converting enzyme  inhibitory dipeptides,  <dig> bradykinin-potentiating pentapeptides and  <dig> cationic antimicrobial pentadecapeptides. these data sets were recently the subject of extensive studies  <cit>  where partial least squares , artificial neural networks , support vector regression , and gaussian processes  were used to predict the biological activity of the peptides. gp and svr were found to have the best results on the testing set, but their experiment protocol was unconventional because the training and test sets were not randomly selected from the data set. instead, their testing examples were selected from a cluster analysis performed on the whole data set—thus favoring learning algorithms that tend to cluster their predictions according to the same criteria used to split the data. instead, we randomly selected the testing examples from the whole data set—thus avoiding a bias that would favor some algorithms a priori. theses datasets were chosen to demonstrate the ability of our method to learn on both small and large datasets.

RESULTS
pepx database
to our knowledge, this is the first kernel method attempt at learning a predictor which takes the protein crystal and the peptide sequence as input to predict the binding energy of the complex. many consider this task as a major challenge with important consequences for molecular biology. standard string kernels for protein primary structures such as the la-kernel and the blended spectrum  were used while conducting experiments on proteins. they did not yield good results, mainly because they do not consider the protein’s secondary structure information. to validate this hypothesis and improve our results, we tried using the mammoth kernel. the mammoth kernel did improve the results  over the blended spectrum  but was still missing an important aspect of protein-peptide interaction. the interaction takes place at a very specific location on the surface of the protein called the binding pocket. two proteins may be very different, but if they share a common binding pocket, it is likely that they will bind similar ligands. this is the core idea that motivated the design of the sup-ck binding pocket kernel  <cit> .

best results are highlighted in bold.

choosing a kernel for the peptides was also a challenging task. sophisticated kernels for local signals such as the rbf, the weighted degree, and the weighted degree rbf could not be used because peptide lengths were not equal. in fact, peptide lengths vary between  <dig> and  <dig> amino acids, which makes the task of learning a predictor and designing a kernel even more challenging. this was part of our motivation in designing the gs kernel. for all experiments, the blosum  <dig> matrix was found to be the optimal amino acid descriptors during cross-validation.

figures  <dig> and  <dig> present an illustration of the prediction accuracy using sup-ck for the pepx unique dataset and sup-ckl for the pepx all dataset. for illustration purposes, the absolute value of the binding energy has been plotted. we observe that the predictor has the property of maintaining ranking of binding affinities. consequently, peptides with high binding affinity can generally be identified—an important feature for drug discovery. peptides with the highest binding affinities are the ones that, ultimately, will serve as precursor drug or scaffold in a rational drug design program.

experiments showed that a pearson correlation coefficient of ≈ <dig>  is attainable on the training set when using the binding pocket kernel, the gs kernel and a large value for the complexity-accuracy trade-off parameter c , thus giving little weight to the regularization term. this is a strong indication that the proposed method has the ability of building a good predictor, but the lack of data quality and quantity may be responsible for the reduced performance on the testing set. hence better data may improve the quality of the predictor. initially, biological validation will be necessary but ultimately, when sufficient data is gathered, the predictor may provide accurate results that are currently only achievable by high cost biological experimentation.

major histocompatibility complex class ii 
single-target predictions
we performed a single-target prediction experiment using the dataset proposed by the authors of the rta method  <cit> . the goal of such experiments was to evaluate the ability of a predictor to predict the binding energy  of an unknown peptide to a specific mhc allotype when training only on peptides binding to this allotype. for each of the  <dig> mhc allotypes, a predictor was trained using kernel ridge regression with the gs kernel and a nested cross-validation scheme was used. for comparison purposes, the nested cross-validation was done using the  <dig> predefined cross-validation folds provided in  <cit> . again, this is sub-optimal from the statistical machine learning perspective, since the known guarantees on the risk of a predictor  <cit>  normally require that the examples be generated independently from the same distribution.

three common metrics were used to compare the methods: the pearson correlation coefficient , the root mean squared error , and the area under the roc curve . the pcc and the rmse results are presented in table  <dig>  auc values can be found as supplementary material . the pcc results show that our method significantly outperforms the rta method on  <dig> out of  <dig> allotypes with a p-value of  <dig> . the inferior results for certain allotypes may be attributed to the small size of these datasets. in addition, the rmse results show that our method clearly outperforms the rta method on all  <dig> allotypes with a p-value of  <dig> .

best results for each metric are highlighted in bold. the pcc results show that the proposed method  outperforms the rta method with a p-value of  <dig> . the rmse results show that krr+gs outperforms the rta method on all  <dig> allotypes with a p-value of  <dig> .

pan-specific predictions
to evaluate the performance of our method and the potential of the gs kernel, pan-specific predictions were performed using the dataset proposed by the authors of netmhciipan  <cit> . the authors proposed a new cross-validation scheme called the leave one allele out  where all but one allele are used as training set and the remaining allele is used as testing set. this is a more challenging problem, as the predictor needs to determine the binding affinity of peptides for an allele which was absent in the training data. the binding specificity of an allele’s interface is commonly characterized using a pseudo sequence extracted from the beta chain’s sequence  <cit> . during our experiments, the  <dig> amino acid pseudo sequences were found to be optimal. the  <dig> amino acid pseudo sequences yielded similar, but slightly suboptimal results. for all experiments, the gs kernel was used for the allele pseudo sequences and for the peptide sequences. all results were obtained with the same loao scheme presented in  <cit> . for each allele, an inner loao cross-validation was done for the selection of hyperparameters.

to assess the performance of the proposed method, the pcc and the rmse results are shown in table  <dig>  auc values can be found in the supplementary material . since we performed loao cross-validation, the pcc, rmse and auc values were calculated on each test fold individually, thus yielding results for each allele.

best results for each metric are highlighted in bold. the pcc results show that the proposed method  outperforms multirta with a p-value of  <dig>  and netmhciipan- <dig>  with a p-value of  <dig> . the rmse results indicate that krr+gs outperforms multirta with a p-value of  <dig> .

the pcc results show that our method outperforms the multirta  <cit>   and the netmhciipan- <dig>   <cit>   methods. since the dataset contained values in log50k transformed ic <dig> , the calculation of the rmse values required converting the predicted values to kcal/mol using the method proposed in  <cit> .

the rmse values are only shown for our method and the multirta method, since such values were not provided by the authors of netmhciipan- <dig> . the rmse results indicate that our method globally outperforms multirta with a p-value of  <dig> .

quantitative structure affinity model  benchmark
for all datasets, the extended z scale  <cit>  was found to be the optimal amino acids descriptors during cross-validation. all the results in this section were thus obtained using the extended z scale for the rbf and gs kernels. all peptides within each data set are of the same length, which is why the rbf kernel can be applied, as opposed to the pepx database or the two mhc-ii benchmark datasets. note the rbf kernel is a special case of the gs kernel. hence, the results obtained from our method using the gs kernel were likely to be at least as good as those obtained with the rbf kernel.

best results are highlighted in bold.

we observed that kernel ridge regression  had a slight accuracy advantage over support vector regression . moreover, svr has one more hyperparameter to tune than krr: the ϵ-insensitive parameter. consequently, krr should be preferred over svr for requiring a substantially shorter learning time. also, we show in table  <dig> that the gs kernel outperforms the rbf kernel on all three qsam data sets . considering these results, krr with the gs kernel clearly outperforms the method of  <cit>  on all data sets.

additionnal results and external validation
to act as an external source of validation for our results and to assess the performance of the gs kernel, we participated in the  <dig> machine learning competition in immunology  <cit> . the goal of this competition was to identify, given unpublished experimental data, which new peptides were naturally processed by mhc class i pathway for  <dig> target molecules. our method achieved the best prediction performance for hla-b* <dig>  hla-b* <dig>  h2-db, and h2-kb molecules, validating the suitability of the gs kernel for such problems.

these results support our claim that the gs kernel is a state-of-the-art kernel for peptides and a valuable tool for computationnal biologists.

CONCLUSIONS
we have proposed a new kernel designed for small bio-molecules  and pseudo-sequences of binding interfaces. the gs kernel is an elegant generalization of eight known kernels for local signals. despite the richness of this new kernel, we have provided a simple and efficient dynamic programming algorithm for its exact computation and a linear time algorithm for its approximation. combined with the kernel ridge regression learning algorithm and the binding pocket kernel, the proposed kernel yields promising results on the pepx database. for the first time, a predictor capable of accurately predicting the binding affinity of any peptide to any protein was learned using this database. our method significantly outperformed rta on the single-target prediction of mhc-ii binding peptides. impressive state-of-the-art results were also obtained on the pan-specific mhc-ii task, outperforming both multirta and netmhciipan- <dig> . moreover, the method was successfully tested on three well studied datasets for the quantitative structure affinity model.

a predictor trained on the whole iedb database or pdb database, as opposed to benchmark datasets, would be a substantial tool for the community. unfortunately, learning a predictor on very large datasets  is still a major challenge with most machine learning methods, as the similarity  matrix becomes hard to fit into the memory of most computers. we propose to expand the presented method to very large datasets as future work. the proposed kernel is freely available at http://graal.ift.ulaval.ca/downloads/gs-kernel/.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
sg designed the gs kernel, algorithms for it’s computation, implemented the learning algorithm and conducted experiments on the pepx and qsam datasets. mm designed the learning algorithm. fl and mm did the proof of the symmetric positive semi-definiteness of the gs kernel. ad conducted experiments on mhc-ii datasets. jc provided biological insight and knowledge. this work was done under the supervision of mm, fl and jc. all authors contributed to, read and approved the final manuscript.

supplementary material
additional file 1
the proof of theorem  <dig>  this file presents the proof of theorem  <dig>  therefore it proves that the gs kernel is symmetric positive semi-definite.

click here for file

 additional file 2
auc results for experiments on mhc-ii. this file presents auc values obtained for the experiments on mhc-ii datasets and provides an explanation on how these values were calculated.

click here for file

 acknowledgements
computations were performed on the scinet supercomputer at the university of toronto, under the auspice of compute canada. the operations of scinet are funded by the canada foundation for innovation , the natural sciences and engineering research council of canada , the government of ontario and the university of toronto. jc is the canada research chair in medical genomics. this work was supported in part by the fonds de recherche du québec - nature et technologies  and the nserc discovery grants .
