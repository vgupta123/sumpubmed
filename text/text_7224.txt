BACKGROUND
next generation sequencing technology has led to the frequent application of deep sequencing projects, and the use of systems that require a large number of oligonuceotide primers for pcr. the design of a high number of primers is a challenge logistically both in terms of achieving good coverage of target regions and in terms of cost. although there are a number of primer design programs available, utilizing them for high throughput design can be difficult and financially costly. we aimed to produce a system in which a large number of primers could be designed cost effectively by using the fewest necessary primers, hence the lowest cost, at multiple priming sites where possible whilst maintaining an acceptable level of coverage, and avoiding degeneracy in amplicon targets which overlap in the same regions.

in designing our program we compared our approaches and performance with several other available programs; primer <dig> 
 <cit> , batchprimer <dig> 
 <cit> , primer-blast 
 <cit>  and pamps 
 <cit> . the core algorithm for the first three of these programs is that of primer <dig>  the primer <dig> algorithm takes into account the primer size, melting temperature , gc content, and concentration of monovalent and divalent cations within the pcr reaction mixture, a selection of salt correction formulae and different parameters for simulating the thermodynamics of primer hybridization. potential primers are then checked by using a mispriming repeat library from the human, rodent or drosophila genomes, allowing interspersed repeats or other sequence regions to be avoided as primer annealing locations. primer-blast utilizes the primer <dig> algorithm and the blast local alignment search tool 
 <cit>  to ensure only unique primer pairs are selected, thus preventing primers becoming designed around undesired targets such as introns. these two programs output a range of primer pair possibilities for single dna sequences, but they are not designed for high throughput primer design. the need for high throughput primer design was recognized by you et al. 
 <cit> , who produced batchprimer <dig> in which multiple sequences can be input for primer selection, but only one primer pair per input sequence is produced.

minimizing the cost of a primer design can be achieved by  designing degenerate primers able to anneal to a number of related target sequences and  implementing primer reuse utilizing primers that bind to conserved loci that are repeated. although degeneracy allows for amplification of greater numbers of related sequences, the more degenerate primers are the less specific amplicons will be. therefore achieving an optimal degree of degeneracy is important to obtaining a suitable trade-off between the number of related sequences amplified and the specificity of these amplicons. a number of variants exist for tackling this problem and achieving a good trade-off for the specificity and sensitivity. the maximum coverage degenerate primer design  approach as used in hyden 
 <cit>  tries to identify a primer of length l and a maximum degeneracy dmax that covers a maximum number of sequences, each of length l. the minimum degeneracy degenerate primer design  attempts to find a primer of length l and a minimum degeneracy dmin that can cover all input sequences with a length equal to or greater than l. the minimum primers degenerate primer design  attempts to find the fewest number of primers of length l and a maximum degeneracy of dmax for a set of sequences, so that each sequence is covered by at least one primer. whereas this approach has the constraint that all input sequences have the same length as the primers and may be inadequate in practice, the multiple degenerate primer design  allows the input sequences to have different lengths of greater than lmin and attempts to identify primers of length at least lmin and degeneracy dmax, allowing each sequence to be covered by at least one primer. this was the approach taken by mips 
 <cit>  and pamps 
 <cit> . pamps is a heuristic, high throughput algorithm which designs degenerate primers through a process of consecutive ad hoc pairwise alignments 
 <cit> . this program has been shown to outperform other degenerate primer design systems such as hyden and mips in terms of computational time.

algorithms for implementing primer reuse have also been developed: doi and imai have described a heuristic algorithm for greedy primer design within multiplex pcr, which attempts to minimize the cost of primers required for multiplex pcr and snp genotyping 
 <cit> . muplex is another heuristic algorithm designed for multiplex pcr, which uses a graph based approach to assign the largest number of non-conflicting primers into the fewest ‘cliques’ that can be assigned to multiplex pcr tubes 
 <cit> . lui and carson have utilized a simulated annealing optimization to maximize primer reuse, which exhaustively searches primer space and aims to converge upon the optimal cost solution 
 <cit> . despite individual cost benefits from either optimization of primer reuse, or automated design of degenerate primers, combining the two techniques is likely to offer additional cost advantages.

optimizing primer design to make use of degeneracy and multiplexing has been referred to as the multiple degenerate primer selection problem , and variants have been shown to be np-complete. previous approaches to mdpsp, such as those undertaken by balla et al 
 <cit>  have shown that primer coverage and cost can be improved through approximate  greedy algorithms. jabado et al. provide a heuristic algorithm for degeneracy, greene scprimer 
 <cit> . in this method phylogenetic trees are constructed from multiple sequence alignments to identify candidate primers, which are used by a greedy set covering problem  solving algorithm to determine the minimum set of degenerate primers that may amplify all members of the alignment, so combining degeneracy with primer reuse. although heuristic approaches generally outperform global optimizations in computation time, the reverse can potentially be true in quality of output. given that optimization of large multiplexed primer design is not generally time-critical, a global optimization approach seems appropriate.

in order to improve on greedy approaches to mdpsp we present here an algorithm that takes a markov chain monte carlo  approach, which allows sampling through primer parameter space using a probability distribution of acceptance of iterative primer designs. primers are weighted according to their degree of reuse provided their degeneracy is kept below a user-defined threshold. we have implemented a metropolis-hastings algorithm, in which new proposals  are accepted if they provide a more optimal solution to the current proposal, with the system tending to revert probabilistically, to the current state if the new proposal is more costly. we call the algorithm the markov chain monte carlo optimized degenerate primer reuse  algorithm. we show that the mcmc-odpr program outperforms primer <dig>  primer-blast, batchprimer <dig>  and pamps in terms of cost and in terms of sequence coverage.

implementation
the main goal of mcmc-odpr is to optimize the cost of a design by introducing degeneracy into primers and stochastically searching the cost landscape. the goal is to find the fewest necessary primers , whilst maintaining an acceptable coverage throughout all input target sequences. we define the cost as the number of nucleotides present in a set of primers identified in a sequence set and define the coverage as the number of base pairs within the sequences that will be amplified by the primers identified for the set. we summarize the two aforementioned statistics as cost per covered bases which is defined as cost / coverage. for a given set of target sequences s, and a set of primer design constraints c, there are typically either  <dig> or very many possible designs d, each constituting a set of overlapping primer pairs, which can potentially amplify s in a multiplexed pcr reaction. typical design constraints include the melting temperature, tm; the maximum and minimum primer pair length, lmax, and lmin; and the maximal desired degeneracy, dmax. we aim to optimize d|. the full list of constraints that the primers belonging to the optimized design must satisfy are listed below:

 <dig>  the gc content of the primers must be taken into account. due to the stronger intermolecular forces between the guanine and cytosine nucleotides, tm is highly dependent on this, which in turn has implications for how well primers hybridize to template sequences and for specificity of amplicons.

 <dig>  primers should be minimally degenerate with a limited number of degenerate nucleotides per primer.

 <dig>  the forward and reverse pair of primers must not allow amplification of a target that exceeds the desired target length.

 <dig>  the primers should ideally be used multiple times, to keep the financial cost down. however, primer pairs should also be unique, otherwise the specificity of the targets will be reduced.

 <dig>  primers should not be designed that will hybridize to the target between a forward and reverse primer of an already established amplicon, unless this will lower the cost of the overall design.

 <dig>  primers should not be designed which are complementary to other primers, i.e. form dimers with other primers.

 <dig>  primers should not be designed which are likely to self-hybridize and form hairpin structures.

for a primer i of length li we assume:

  costiαli 

therefore, for a primer set design d, targeting sequences s that contain k distinct primers we assume:

  costdα∑i=1kli 

we attempt to minimize costd by allowing degeneracy in i and by sampling possible designs within design constraints using an mcmc sampler. greedy approaches to minimizing costd in a primer set design for multiple target sequences will result in a final costd which depends in part on which of the target sequences is chosen first, to begin the design, and on which position within each sequence the primer design is begun for that sequence. we sample from uniform prior distributions on both of these parameters. we also allow our sampler to vary the position of individual primers within the design, and the degeneracy of individual bases within each primer within the chosen degeneracy limit, both also with uniform priors. our sampler allows each of these parameters to vary, initially preferring to sample from the earlier of the four parameters and increasingly preferring to sample from the latter.

program input
for ease of use inputs to mcmc-odpr are specified in a simple text document, which is then read into the program, table 
 <dig>  the input data to the program are three sets of nucleotide sequences in fasta format. the first fasta file contains genomic background sequences, which could be the whole genome, a large est or gss set, and will be searched using the blast local alignment search tool to asses the redundancy of possible primers and the uniqueness of forward and reverse primer pairs. the two remaining files provide mcmc-odpr with the sequences to amplify and with snp marker information respectively. the ‘sequences to amplify’ file contains a representative gene sequences  for each entry while the snp marker information file contains the same sequences with all collated snps for that gene, known as the exceptions sequences. depending on the availability of snp information, not all consensus sequences need be present in the exceptions sequence file, however. a small program has been included in the mcmc-odpr package, exceptions_generator, which on taking a fasta file of all variants of sequences of genes to be amplified, will automatically generate the consensus and exceptions files. in the absence of snp information, no exceptions file is necessary.

the parameters that may be input by the user into the mcmc-odpr parameter file are in the left-most column. if the user chooses not to enter one of these parameters, then the default value on the right-most column will be used.

mcmc-odpr primer preparation stages
mcmc-odpr initially goes through three stages of valid primer enumeration. firstly, it searches all input consensus sequences for all possible primers meeting design constraints, whilst iterating through the input range of melting temperatures. at the second stage primer-dimers are removed and the redundancy of primers and uniqueness of primer pairs is assessed. primers that have the propensity to self hybridize are subsequently removed. primers are weighted according to their redundancy, with more highly weighted primers being preferred later in the optimization. in the third stage, for all remaining accepted primers, mcmc-odpr recursively generates all possible degenerate primers to the input target level of degeneracy and tests whether they match other primers in the data set, to reassess their redundancy. in order to restrict a lack of specificity in the targets of the designed primers, the degree of degeneracy and redundancy must be limited, however. in the case of redundancy a high cut-off value allowing large redundancy values could favor primers being designed from low complexity or microsatellite regions of the target genes. a cut-off of three s or w degenerate bases yielding  <dig> potential priming sites for degeneracy and a maximum redundancy of  <dig> are the default values in mcmc-odpr; these can be changed by the user. after these initial stages, the metropolis hastings mcmc optimization begins.

mcmc-odpr degenerate primer design
when designing degenerate primers, it is important to maintain a degree of specificity within the primers by limiting the number of degenerate nucleotides per primer, otherwise designed primers will likely hybridize to numerous loci on the target sequence; generating highly unspecific amplicons and reducing the scope for primer reuse and cost effectiveness. furthermore, if primer tm is constrained, the possible combinations of degenerate loci that are permitted within a design must also be constrained to avoid generation of degenerate primers with variant tm. for instance, a primer having one degenerate position allowing an a or a c  would generate two primers with different tm values, which is inappropriate if primers are being designed for a specific tm. for our purposes, therefore, the degree of possible degeneracy per primer is limited with primers having lower degeneracy, yet higher redundancy being more highly weighted for each proposal. degenerate oligonucleotides which are permitted in our primer designs are w  and s . take p to be the set of all possible primers extracted from the candidate gene set. a degeneracy threshold α is implemented and represents the maximum proportion of degenerate nucleotides within the primer. mcmc-odpr then iteratively generalizes through all possible degenerate variations of the primers within p, whilst not contravening α. this exhaustive set is then searched during the greedy mcmc algorithms described below.

mcmc-odpr greedy primer selection method
the primer cost optimization itself consists of three different greedy proposal generating methods that are progressively applied more frequently in succession. the first covers all input gene sequences by randomly selecting genes progressively and then picks primers from a random seeded position within the sequence, building amplicon targets from that seed in a periodicity which matches a user defined size range by randomly selecting amplicon sizes within that range to look for subsequent primer positions. this process is repeated, with the subsequent primer set being selected if the global cost is lowered. in this process primer loci may be ‘swapped’, with more reusable primers being accepted over less reusable primers. the second method  repeats the seeding process for each gene individually having accepted the global primer arrangement from the first step. the final greedy method adjusts final primer positions by repositioning each primer randomly. again, if each primer adjustment results in a cost reduction, the adjustment is accepted. to allow the algorithm to converge upon a solution, it is desirable to allow a transition from optimizations that greatly affect a design to more ‘fine tuning’ optimizations. therefore these methods may be weighted according to how many iterations within the optimization have passed: with the first greedy method being weighted for within the first third of all iterations, the second within the second third of optimizations and the third within the last third. these methods are stochastically chosen, however, hence all three greedy methods can still be chosen randomly by the algorithm at any time, allowing primer set design space to be sampled in different ways.

proportion of accepted failed proposals and proportions of ‘hot’ chains
the primer cost sample space may be visualized as a landscape, with various local cost minima and the global minima. the metropolis-hastings algorithm takes a solution proposal and then assesses whether this current proposal is more optimal than previous proposals. if this is the case, the markov chain is allowed to continue stepping through the landscape. otherwise the algorithm reverts back to a previous state. an initial random cost, c is proposed. at each iteration the cost associated with the new proposal, c’ is compared to c, with δs = c’-c. unless δs is negative, the proposal is accepted with a probability proportional to e-δsh; where the heating h is a user input variable . the heating variable is defined as the proportion of primers that have failed their redundancy/weight check proposals that may be accepted, allowing chains to escape local minima and allowing efficient convergence. a variable specifying the proportion of optimizations to consider as ‘young’ is also input to allow convergence to be estimated in mature chains, as an alternative to specifying a fixed number of iterations.

tuning parameters and convergence
the parameter initial_overlap allows the user to build ‘slack’ into the initial proposal, allowing for a more extensive exploration of the cost landscape before the proposed solution tends towards being trapped in a local optimum. if larger values of initial_overlap are used, the initial proposal becomes more expensive because more primer pairs are used to cover the target sequences, but by initially proposing a more expensive design there is more scope for the algorithm to explore the cost landscape by changing the positions of individual primer pairs, whilst still satisfying the maximum amplicon length constraint. the parameter prob_remove_redundant constrains the rate at which this initial slack is removed from the design in cases where two neighboring primer pairs have changed position to the extent that the pairs become nested.

currently the algorithm only aims to optimize cost, and not coverage. because of this, as the design begins to approach an optimum cost for a given coverage, it will then likely allow coverage to reduce in order to further minimize the cost by removing one or more primer pairs from the design, for instance, and leaving the corresponding sequence uncovered.

mcmc-odpr output
the output of mcmc-odpr is a single text file, containing an enumeration of all primers designed at each input tm, the selected degenerate primers, the number of covered bases and the final cost in nucleotides.

RESULTS
mcmc-odpr overall performance
by observing the final cost results of the primer design every  <dig> iterations and running mcmc-odpr for a maximum of  <dig>  iterations, we explored the effect of the number of mcmc iterations on the cost, figure 
 <dig>  primers were designed with tm =  <dig> degrees centigrade, and with an amplicon length between  <dig> and  <dig> bp. the algorithm was repeated  <dig> times and the final cost was recorded every  <dig> iterations from  <dig> –  <dig>  iterations, to assess the variance in the convergence. a small set of  <dig> barley fasta gene sequences were input into mcmc-odpr due to the extra computational costs incurred by running the algorithm for these many runs . unlike heuristic approaches to primer design which calculates a set of primers, mcmc converges upon a stationary distribution giving the optimal primer set, through random chain mixing. we would therefore expect a degree of variance amongst repeated runs. exact convergence can be difficult to measure with mcmc and a number of different diagnostic approaches have been suggested to allow this measurement to be made . the samples drawn from a mcmc sampler will diverge from the prior distribution and approximate to the stationary distribution as the time taken tends to infinity, therefore the bias arising from these samples that is not representative of the prior distribution can be a measure of convergence to the stationary distribution. furthermore, as the markov chains converge there will be an increasing correlation between samples and the variance can therefore be another measure. these measures of convergence can be assessed graphically or quantitatively and some of the underlying diagnostic tools are applicable from one mcmc variant  to many. however, ultimately slow chain mixing can confound any diagnostic as the stationary distribution is always unknown. for our purposes, however, we were interested in validating our approach by observing a decrease in cost over time, therefore we observed the cost in the designed primers over a large number of iterations. an overall trend can be seen that as the number of iterations increases, the total cost decreases and the variance is small. however, the improvement in cost was slow after  <dig>  iterations so we carried out all our analyses using this iteration number in this study.

to effectively assess the variance in the cost, coverage and the degree of redundancy achieved after  <dig>  iterations, the mcmc-odpr algorithm was run  <dig> times. an average cost per covered base over the  <dig> samples was  <dig>  nucleotides with a standard error of  <dig> x10- <dig> nucleotides. we analyzed the degree of redundancy that we obtained from the  <dig> runs in table 
 <dig>  the vast majority of runs achieved 4x coverage, with the maximum degree of redundancy at 5x and the lowest redundancy at 2x. we also assessed the variance in the number of primers identified at each level of redundancy over the  <dig> runs, table 
 <dig>  standard errors were calculated for the number of primers at each degree of redundancy and it was clear that the variance was low. by multiplying the average number of identified primers in table 
 <dig> by their degree of redundancy and then summing over these values, we arrive at a value of  <dig>  primers required to obtain the same coverage when no redundancy is used. with redundancy, only  <dig>  primers are needed , a reduction of  <dig> %.

the algorithm was repeated  <dig> times with a small subset of  <dig> sequences. the maximum achieved redundancy obtained by mcmc-odpr in each run was recorded and when no primers were obtained at a certain level of redundancy, a zero was added as an observation, ensuring observations at all levels of redundancy summed to  <dig>  column  <dig> gives the number of frequency of primers found at each level of redundancy throughout all  <dig> runs when their numbers were greater than none. the average number of primers identified by the algorithm each run and the standard error is presented.

mcmc-odpr performance over a temperature range
the mcmc-odpr algorithm enumerates through the input tm range and designs primer sets for each temperature, which allows inspection of the trade off between coverage and primer cost over the tm range. a set of  <dig> fasta sequences was input into mcmc-odpr, and primers were recursively designed from a tm range of  <dig> - 70°c. the optimization was run for  <dig>  iterations at each temperature enumeration, with a target amplicon length range between  <dig> and  <dig> bp. for each sequence we see a gradual increase in primer cost as tm is raised: suggesting mcmc-odpr’s ability to effectively design reusable primers is constrained due to the rarity of suitable priming sites as tm increases, figure 
 <dig>  the global coverage of sequences in our dataset by our designed primers was also calculated as a function of tm, figure 
 <dig>  unsurprisingly, the coverage decreased as melting temperature was increased again due to the increasing constraint on suitable priming sites for the required tm.

to observe the effect of a range of tm on primer reuse, the number of primers for each level of redundancy at each tm was plotted, figure 
 <dig>  it is clear that a higher degree of reusability is achievable at lower melting temperatures with the majority of reusable primers having 2x redundancy. two primers that were reusable over  <dig> times were found at a tm of  <dig> with one more found at a tm of  <dig>  we therefore suggest to users of mcmc-odpr, that when possible, designing primers at slightly lower temperatures than ‘standard’ may make a large difference to cutting costs.

performance comparison of mcmc-odpr with other primer design software
comparison with other primer design software primer  <dig> and primer-blast
we compared mcmc-odpr with primer design programs primer <dig>  primer-blast, batchprimer <dig> and pamps. for primer design from single input sequences mcmc-odpr was compared to primer <dig>  primer-blast, and for multiple input sequences batchprimer <dig> and pamps. tm =  <dig> was used for the design of primers from mcmc-odpr, with  <dig>  iterations. all of the programs we compared with mcmc-odpr produced many more primers than would be required to amplify the target regions, with many amplicon targets occurring in the same area. consequently, the total primer cost was noted, but the outputs were processed with a script such that non-overlapping primer pairs were selected that represented the maximum coverage of the target gene sequences.

primer <dig> and primer-blast for single input sequences
the primer <dig> algorithm has been implemented in a number of other primer prediction programs, including batchprimer <dig> and primer-blast. primer <dig> and primer-blast may only process one fasta sequence at a time, therefore, the three barley gene sequences were randomly selected from our list of  <dig> barley genes and input into all three programs. comparisons were made on the basis of the cost of designed primers in nucleotides, and the sequence coverage obtained from using these primers . for the comparison of both programs with mcmc-odpr the default parameters on the website were used, with a range of tm of  <dig> to  <dig> degrees centigrade  with no allowed difference in tm and primer lengths of 18- <dig> nucleotides . both programs allow the user to specify the number of primer sequences returned, therefore the same number of primers as designed by mcmc-odpr was selected. the pcr product size input into primer <dig>  primer-blast and mcmc-odpr was a minimum of  <dig> and a maximum of  <dig> base pairs. for the specificity check that primer-blast performs to eliminate unspecific primer pairs the hordeum vulgare non-redundant database was chosen for blast searching.

mcmc was input with one sequence corresponding to one gene  and run for  <dig>  iterations. the cost per bases covered in nucleotides was used as a comparison of performance. mcmc-odpr performs less optimally with one sequence, yet was able to outperform single sequence programs primer <dig> and primer-blast in all examples but one.

total number of primer sites identified shown in parentheses.

primer <dig> designed  <dig> to  <dig> primer pairs per input sequence, from which  <dig> to  <dig> primers were selected to provide optimal coverage without overlap, table 
 <dig>  mcmc-odpr achieved a lower cost per unit coverage than primer  <dig> in all sequences except dehydrin  <dig>  where primer  <dig> achieved a value of  <dig>  compared with mcmc-odpr, which achieved a value of  <dig> . primer-blast designed the number of primers specified in each case , from which an optimal subset  <dig> to  <dig> was selected. the resulting cost of primer for the coverage achieved was consistently lower in mcmc-odpr. furthermore the amount of target sequence that was covered by the pcr systems designed by mcmc-odpr was over 95% in all cases, whereas the maximum coverage achieved by primer <dig> and primer-blast was  <dig> % and  <dig> %, respectively.

comparison with multiple sequence input programs: batchprimer <dig> and pamps
the same underlying algorithm as primer  <dig> was compared with mcmc-odpr with multiple sequences using batchprimer <dig>  and the comparison with pamps allowed us to compare the capability of mcmc-odpr to design reusable degenerate primers in terms of cost. a subset of  <dig> sequences was used from our list of  <dig> genes because of a limitation in pamps, which is restricted to sequences of  <dig> base pairs or less. all sequences over  <dig> base pairs were therefore removed. this subset was used for all three programs. batchprimer <dig> was used with the same default values for melting temperature and product size as with primer <dig>  batchprimer <dig> allows the user to input the desired number of primers to be returned per sequence, therefore for this value we chose the highest number of primers returned for all sequences by mcmc-odpr, which was  <dig> primers. the analysis was performed first with allowing no difference in tm between primer pairs for the batchprimer <dig> algorithm, as no difference in tm is permissible with mcmc-odpr, and then allowing the default tm difference of  <dig> degrees centigrade between pairs. when no tm difference was input to batchprimer <dig> the sequence coverage of batchprimer <dig> was  <dig> % with the total sequence coverage of mcmc-odpr at a tm of  <dig> degrees centigrade being  <dig> % . the cost of the primers designed by batchprimer <dig> was  <dig>  nucleotides, approximately half the cost of  <dig>  nucleotides yielded by mcmc-odpr, however, the coverage yielded was just over one third of that achieved with mcmc-odpr. mcmc-odpr achieved a lower cost per unit coverage than batchprimer <dig> of  <dig>  compared with  <dig> . when a maximum difference of ten degrees centigrade was allowed between primers for batchprimer <dig> it achieved a sequence coverage of  <dig> % at a cost of  <dig>  nucleotides, yielding a cost per coverage of  <dig>  . despite the lower cost of batchprimer <dig> in this case, mcmc-odpr still achieved a greater sequence coverage and summary cost per unit coverage value close to that of batchprimer <dig> with the added constraint that mcmc-odpr only designed primers with no difference in tm.

mcmc-odpr was run with  <dig> sequences for  <dig>  iterations with the cost per bases covered and runtime was used as a comparison statistic for performance. mcmc_odpr outperformed multiple sequence input programs batchprimer <dig> and pamps in terms of cost per bases covered, yet was clearly slower in terms of runtime.

total number of primer sites identified shown in parentheses.

* mcmc-odpr execution was performed on a  <dig>  ghz intel® core™  <dig> duo macbook running mac os x version  <dig> . <dig> with  <dig> gb ram. execution time for batchprimer  <dig> was provided by the batchprimer <dig> web server  found at 
http://probes.pw.usda.gov/batchprimer3/. execution for pamps was performed on a  <dig>  ghz amd phenomtm  <dig> triple-core processor pc running windows xp with  <dig>  gb of ram.

pamps designs degenerate primers according to ad-hoc pairwise alignments. the output of pamps is a list of degenerate primers consisting of a range of tm with no information on which sequence its primers have been generated from. a script was therefore written to match the primers generated by pamps to our sequence dataset, keeping the same amplicon length constraints as above and only choosing primers with tm =  <dig> degrees centigrade.

pamps designed  <dig> primers that gave maximal coverage, which was comparable to the number generated by mcmc-odpr at  <dig> primers. pamps achieved the lowest coverage of  <dig> % of the input sequences with a cost of  <dig>  nucleotides. mcmc-odpr outperformed pamps in terms of cost per unit coverage, with this value being calculated to be  <dig>  for pamps.

from the execution times given in table 
 <dig> it is clear that mcmc-odpr is by far the slowest of the three compared programs. from table 
 <dig> we see a dramatic decrease in the execution time when the number of input sequences is reduced, which shows that the primer space is highly influential towards execution time. mcmc-odpr has not been optimized for speed and we recommend that users who require fast primer design should consider alternative programs, such as the comparison programs used in this study.

execution time was measured when  <dig>   <dig> and  <dig> sequences were input into the program. execution was performed on a on a  <dig>  ghz intel® core™  <dig> duo macbook running mac os x version  <dig> . <dig> with  <dig> gb ram.

CONCLUSIONS
mcmc-odpr is a useful addition to the suite of primer design programs available in particular reducing costs through improved solutions to the mdpsp. the bench tests carried out in this study show that mcmc-odpr consistently produced the lowest cost primer design all cases but two, but even then the slightly higher cost achieved a much larger coverage. consequently, mcmc-odpr was the most economically efficient primer design in all cases. the comparisons with other software show that by combining degeneracy with optimal primer reuse the user may increase the coverage of the sequences obtained by the designed primers at significantly lower costs. mcmc-odpr’s enumeration through an input temperature range will allow the user to observe the trade off between tm and the suitability of the sequence space for invoking reuse. however, as mcmc-odpr is an optimization technique that utilizes the metropolis-hastings algorithm for optimizing primer reuse, it is intrinsically slow when compared to heuristic algorithms, and may possibly require a number of hours for multiple sequences, especially if a range of tm has been input.

availability and requirements
project name: mcmc-odpr

project home page : 
http://www <dig> warwick.ac.uk/fac/sci/lifesci/research/archaeobotany/downloads/mcmc_odpr

operating system: macosx

programming language: perl, java

license: gnu general public license 

any restrictions to use by non-academics: none.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
jdm and jlk developed the program. jlk wrote the manuscript and implemented the program. sap helped in design of the program. rga designed and supervised the project. all authors tested the program, and read and approved the final manuscript.

