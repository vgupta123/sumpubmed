BACKGROUND
differentiating or partitioning objects from background or other objects on an image is called image segmentation. solutions to the image segmentation have widespread applications in various fields; including medical diagnosis and treatment. plenty of methods have been generated for grayscale and color image segmentations  <cit> . four popular approaches  <cit>  for image segmentation are: edge-based methods, threshold techniques  <cit> , neighborhood-based techniques, graph-based methods  <cit> , and cluster-based methods. edge based techniques investigate discontinuities in image whereas neighborhood-based methods examine the similarity  among different regions. threshold methods identify different parts of an image by combining peaks and valleys of 1d or 3d histograms . also, there exists numerous innovative graph-based image segmentation approaches in the literature. shi et al. 1997- <dig>  <cit>  treated segmentation as a graph partitioning problem, and proposed a novel unbiased measure for segregating subgroups of a graph, known as the normalized cut criterion. more recently, felzenszwalb et al.  <cit>  developed another segmentation technique by defining a predicate for the existence of boundaries between regions, utilizing graph-based representations of images. in this study; however, we focus on cluster-based segmentation methods. in cluster-based methods, individual image pixels are considered as general data samples and assumed correspondence between homogeneous image regions and clusters in the spectral domain. 

dermoscopy involves optical magnification of the region-of-interest, which makes subsurface structures more easily visible when compared to conventional macroscopic images  <cit> . this in turn improves screening characteristics and provides greater differentiation between difficult lesions such as pigmented spitz nevi and small, clinically equivocal lesions  <cit> . however, it has also been demonstrated that dermoscopy may actually lower the diagnostic accuracy in the hands of an inexperienced dermatologists  <cit> . therefore, novel computerized image understanding frameworks are needed to minimize the diagnostic errors that result from the difficulty and subjectivity of visual interpretations  <cit> .

for melanoma investigation, delineation of region-of-interest is the key step in the computerized analysis of skin lesion images for many reasons. first of all, the border structure provides important information for accurate diagnosis. asymmetry, border irregularity, and abrupt border cutoff are a few of many clinical features calculated based on the lesion border. furthermore, the extraction of other important clinical indicators such as atypical pigment networks, globules, and blue-white vein  areas critically depends on the border detection  <cit> .  the blue-white veil is described as an irregular area with blended blue pigment with a ground glass haze , as if the image were out of focus.

at the first stage for analysis of dermoscopy images, automated border detection is usually being applied  <cit> . there are many factors that make automated border detection challenging e.g. low contrast between the surrounding skin and the lesion, fuzzy and irregular lesion border, intrinsic artifacts such as cutaneous features  to name a few  <cit> . according to celebi et al.  <dig>  <cit> , automated border detection can be divided into four sections: pre-processing, segmentation, post-processing, and evaluation. pre-processing step involves color space transformations  <cit> ,  <cit> , contrast enhancement  <cit>  <cit> , and artifacts removal  <cit> ,  <cit> ,  <cit> . segmentation step involves partitioning of an image into disjoint regions  <cit> ,  <cit> , <cit> . post-processing step is used to obtain the lesion border  <cit> ,  <cit> . evaluation step involves dermatologists’ evaluations on the border detection results. 

regarding boundary of clusters, lee and castro  <cit>  introduced a new algorithm of polygonization based on boundary of resulting point clusters. recently nosovskiy et al.  <cit>  used another theoretical approach to find boundary of clusters in order to infer accurate boundary between close neighboring clusters. these two works principally study boundaries of finalized data groups . schmid et al.  <cit>  proposed an algorithm based on color clustering. first, a two-dimensional histogram is calculated from the first two principal components of the cie l*u*v* color space. the histogram is then smoothed and initial cluster centers are obtained from the peaks using a perceptron classifier. at the final step, the lesion image is segmented. 

in this study for computer-aided border detection we use two clustering algorithms density based clustering   <cit>  and multi level fuzzy c means clustering  and compare their performances over dermoscopy images for border detection. in the context of dermoscopic images, clustering corresponds to finding whether each pixel in an image belongs to skin lesion border or not. automatic border detection makes dermatologist’s tedious manual border drawing procedure faster and easier.

dbscan
with the aim of separating background from skin lesion to target possible melanoma, we cluster pixels of thresholded images by using dbscan. it takes a binary  image, and delineates only significantly important regions by clustering. the expected outcome of this framework is desired boundary of the lesion in a dermoscopy image.

technically, it is appropriate to tailor density based algorithm in which cluster definition guarantees that the number of positive pixels is equal to or greater than minimum number of pixels  in certain neighborhood of core points. the core point is that the neighborhood of a given radius  has to contain at least a minimum number of positive pixels , i.e., the density in the neighborhood should exceed pre-defined threshold . the definition of a neighborhood is determined by the choice of a distance function for two pixels p and q, denoted by dist. for instance, when the manhattan distance is used in 2d space, the shape of the neighborhood would be rectangular. note that dbscan works with any distance function so that an appropriate function can be designed for some other specific applications. dbscan is significantly more effective in discovering clusters of arbitrary shapes. it was successfully used for synthetic dataset as well as earth science, and protein dataset. theoretical details of dbscan are given in  <cit> . once the two parameters eps and minpxl are defined, dbscan starts to cluster data points  from an arbitrary point q as illustrated in figure  <dig>  

let i be a subimage that is of dimension n × n. for a pixel p, let px and py denote its position where top-left corner is  of i. let cxy represent the color at .  the eps-neighborhood of a pixel p, denoted by neps, is defined by neps = {q ∈ i | dist ≤ eps} where dist is euclidean distance. there can be found two kinds of pixels in a cluster: 1) pixels inside of the cluster  and 2) pixels on the border of the cluster . as expected, a neighborhood query for a border pixel returns notably less points than a neighborhood query of a core pixel. thus, in order to include all points belonging to the same segment, we should set the minimum number of pixels  to a comparatively low value. this value, however, would not be characteristic for the respective cluster - particularly in the presence of negative pixels . therefore, we require that for every pixel p in a cluster c there is a pixel q in c so that p is inside of the eps-neighborhood of q and neps contains at least minpxl pixels: | neps | ≥ minpxl and dist ≤ eps. a pixel p is called density-reachable from a pixel q when there is a chain of pixels p <dig>  p <dig>  .., pn, where p <dig> = q, pn = p. this is illustrated in figure  <dig>  a cluster c  in image is a non-empty subset of pixels and given as:

c = {p ∩ q | | neps | ≥ minpxl ,

where q is density reachable from p. dbscan centers around the key idea: to form a new cluster or grow an existing cluster the eps-neighborhood of a point should contain at least a minimum number of points . 

algorithm  <dig> dbscan

dbscan 

clusterid:=nextid;

for i from  <dig> to subimage.height do

for i from  <dig> to subimage.width do

point := subimage.get;

if point.cid = unclassified and point.positive() = true

then

if expandcluster

then

clusterid:=nextid

end if;

end if;

end for;

end for;

end dbscan;

algorithm  <dig> summarizes dbscan for image segmentation. once the two parameters eps and minpxl are defined, dbscan starts to cluster data points from an arbitrary point q. it begins by finding the neighborhood of point q, i.e., all points that are directly density reachable from point q. this neighborhood search is called region query. for an image, we start with left-top pixel  as our first point in the dataset . we look for first pixel satisfying the core pixel condition as a starting  point. if the neighborhood is sparsely populated, i.e. it has fewer than minpxl points, then point q is labeled as a noise. otherwise, a cluster is initiated and all points in neighborhood of point q are marked by new cluster's id. next the neighborhoods of all q's neighbors are examined iteratively to check if they can be added into the cluster. if a cluster cannot be expanded any more, dbscan chooses another arbitrary unlabeled point and repeats processes to form another cluster. this procedure is iterated until all data points in the dataset have been labeled as noise or with a cluster id. figure  <dig> illustrates example cluster expansion. 

fuzzy c-means clustering
clustering, a major area of study in the scope of unsupervised learning, deals with recognizing meaningful groups of similar items.  under the influence of fuzzy logic, fuzzy clustering assigns each point with a degree of belonging to clusters, instead of belonging to exactly one cluster. 

in fuzzy event modeling, pixel colors in a dermoscopy image can be viewed as probability space where the pixels with some colors can belong partially to the background class and/or the skin lesion. the main advantage of this method is that, it does not require a priori knowledge about number of objects in the image.

fuzzy c-means  clustering algorithm  <cit>  is one of the most popular fuzzy clustering algorithms. fcm is based on minimization of the objective function fm  <cit> :  

fcm computes the membership uij and the cluster centers cj by:    

where m, the fuzzification factor which is a weighting exponent on each fuzzy membership, is any real number greater than  <dig>  uij is the degree of membership of xi in the cluster j, xi  is the ith  of d-dimensional measured data, cj is the dimension center of the cluster, d <dig> is a distance measure between object xk and cluster center ci, and ||*|| is any norm expressing the similarity between any measured data and the center.  

the fcm algorithm involves the following steps:

 <dig>  set values for c and m

 <dig>  initial membership matrix u= , which is u  

 <dig>  at k-step: calculate the centroids for each cluster through equation  if k ≠  <dig>  

 <dig>  for each member, calculate membership degree by equation  and store the     information in u

 <dig>  if the difference between u and u less than a certain threshold, then stop;     otherwise, return to step  <dig> 

in the fcm, the number of classes  is a user input. we tried to find the number of unclassified data points is greater than some threshold  values  in our experiments. since the number of classes is a user input in fcm, there is a risk of over segmentation. for instance when the number of segments in a skin image is  <dig> and we force the number of clusters to be found by fcm to be  <dig>  the fcm over segments the image. this was one of the principal challenges we encountered with fcm. thus, we ran fcm for different number of clusters and different threshold values and found that for the value of five initial clusters and threshold value of  <dig>  fcm gave good accuracy in segmentation. therefore, we used these values in all of our experiments. moreover, in all of our experiments fuzzification factor m is taken as  <dig>  figure  <dig> shows how fcm detected area  is changed by the change in threshold.

experiments and 
RESULTS
the proposed methods are tested on a set of  <dig> dermoscopy images obtained from the edra interactive atlas of dermoscopy  <cit> . these are 24-bit rgb color images with dimensions ranging from  <dig> ×  <dig> pixels to  <dig> ×  <dig> pixels. the benign lesions include nevocellular nevi and dysplastic nevi. the distance function used is euclidean distance between pixels p and q, and given as  where  p.x and p.y denote position of pixel p at xth column and yth row with respect to top-left corner  of  image. we run dbscan on each image with the eps of  <dig> and minpts of  <dig>  

we evaluated the border detection errors of the dbscan and fcm by comparing our results with physician-drawn boundaries as a ground truth. manual borders were obtained by selecting a number of points on the lesion border, connecting these points by a second-order b-spline and finally filling the resulting closed curve  <cit> . using the dermatologist-determined borders, the automatic borders obtained from the dbscan and fcm are compared using three quantitative error metrics: border error, precision, and recall. border error is developed by hance et al.  <cit>  and currently the most important metric for assessing quality of any automatic border detection algorithm, and given by:  

where automaticborder is the binary image obtained from dbscan or fcm, manualborder is the binary image obtained from a dermatologist . exclusive or operator,⊕, essentially emphasizes disagreement between target  and predicted  regions. referring to information retrieval terminology, numerator of the border error means summation of false positive  and false negative . the denominator is obtained by adding true positive  to false negatives . an illustrative example is given in figure  <dig> 

regarding the image in figure  <dig>  assume that red is drawn by a dermatologist and blue is the automated line, respectively. tp indicates correct lesion region found automatically. similarly, tn shows healthy region  both manual and computer assessment agree on. fn and fp are labels for missed lesion and erroneous positive regions, respectively. addition to border error, we also reported precision  and recall  for each experimental image in table  <dig> and table  <dig> for results generated with dbscan and fcm respectively. precision and recall are defined as  respectively.

note that all definitions runs for the number of pixels in the particular region. analogously, area() function returns the number of active pixels in a binary image.  table  <dig> gives border error, precision and recall rates generated from the dbscan for each image whereas table  <dig> represents border error, precision and recall rates generated from the fcm. it can be seen that the results vary significantly across the images. 

in figure  <dig>  an exemplary dermoscopy image, which is determined as melanoma, and its corresponding dermatologist drawn border are illustrated. figure  <dig> illustrates the dbscan generated result in red color for the same image. the dbscan generated result is overlaid on top of the dermatologist drawn border image in black color. as seen from the figure, hair is detected as false positive. figure  <dig> shows results generated from the fcm with different fuzzification factors.

for example for the melanoma image given in figure  <dig>  fcm’s precision, recall, and border error rates are  <dig> %,  <dig> %, and  <dig> % respectively; however, dbscan’s precision, recall, and border error rates for the same image are 94%, 84%, and  <dig> % respectively. following tables show results generated with the dbscan and the fcm for  <dig> image dataset respectively.

since the most important metric to evaluate performance of a lesion detection algorithm is border error metric, border errors for dbscan and fcm are illustrated in figure  <dig>  in the figure, x-axis show image ids in random order. as seen from figure  <dig>  dbscan outperforms fcm for lesion border detection on dermoscopy images: for dbscan overall average border error ratio is  <dig> % whereas overall average border error ratio for fcm is 100%. as for recall and precision, dbscan and fcm averaged out  <dig> % and  <dig> %; 55% and 100% , respectively. 

automatically drawn boundaries usually found at more intense regions of a lesion  having promising assessment with dbscan. in figure  <dig> , the dbscan marked also outer regions. obviously, the gradient region between blue and red boundaries seems to be a major problem for the dbscan. we believe that even though inter-dermatologist agreement on manual borders is not perfect, most dermatologists will draw borders approximately the red borders as shown in images of figure  <dig>  this is because the reddish area just outside the obvious tumor border is part of the lesion. 

we also made a rough comparison of the dbscan with prior state of the art lesion border detection methods proposed by celebi et. al  <dig>  <cit>  and  <dig>  <cit> . comparisons showed that the mean error of dbscan  is obviously less than their results. however, we cannot make image by image comparison since they used a subset of  <dig> dermoscopy image dataset . their image ids might be different than our image ids even for the same image. therefore, for now the mean error rate is only indication we have as a proof that dbscan is better than studies given in  <cit>  and  <cit> .

CONCLUSIONS
in this study, we introduced two approaches for automatic detection of skin lesions. first, a fast density based algorithm dbscan is introduced for dermoscopy imaging. second, the fcm is used for lesion border detection. the assessments obtained from both methods are quantitatively analyzed over three accuracy measures: border error, precision, and recall. as well as low border error, high precision and recall, visual outcome showed that the dbscan effectively delineated targeted lesion, and has bright future; however, the fcm had poor performance especially in border error metric. the next step, we will focus on at more details on intra-variability and post-assessment during performance analysis of the intelligent systems. additionally, performance of dbscan will be evaluated over different polygon-unioning algorithms. in terms of border errors, we plan to develop model that are more sensitive to melanoma lesion. a thresholding method which is well-integrated with clustering rationale, such as the one described in  <cit> , will be preferred in the future because of unexpected difference between precision and recall rates.

competing interests
the authors declare that they have no competing interests in regards to this study.

authors' contributions
sk and mm have made equal contributions to this study. both of the authors participated in the overall design of the study. mm designed the density-based algorithms. sk developed the general comparison testbed, performed data analysis, algorithm testing, statistical measurements, and benchmarking. bb designed and implemented the fcm. ka integrated it to the general framework. sk and mm contributed to the writing of this manuscript. all of the authors read and approved the final manuscript.

