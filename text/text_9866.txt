BACKGROUND
this paper concerns one aspect of the problem of predicting the interface region of two docking proteins, namely the flexibility of side-chains. we consider sampling the possible side-chain conformations to improve the match of local shape complementarity. the main challenge we face is reducing the exponential complexity of the conformation space to a reasonably sized sample.

proteins are at the heart of all biological processes, and their functions are largely determined by their geometric structures. the number of biomolecular protein complexes is expected to be far more than the number of individual proteins in a given proteome; in addition, their structures are more difficult to obtain through nmr and x-ray crystallographic studies. so the difficult problem of docking, that is, the computational prediction of a protein complex from the structures of its constituent proteins, is an important focus of current research. the constituent structures may be determined experimentally or may be computed by a protein structure prediction algorithm.

docking is a difficult problem and it has received much attention  <cit> . in the docked configuration, two proteins demonstrate excellent shape complementarity, with the molecular surfaces matching each other closely over an interface region which is several square Å in area. this excellent fit is difficult to find, however, since proteins are not rigid. the protein backbone may undergo significant changes when docking. even in the absence of large backbone motions, the conformations of the side-chains in the docked complex may differ greatly from their conformations in the unbound proteins; for instance, a side-chain may need to rotate to allow space for the docking partner. although side-chain conformation changes are typically small compared to the larger backbone motions, they can be crucial in forming the tight fit between docked proteins. in this work, we consider the problem of producing candidate docked side-chain conformations, given the structure of the unbound protein. we focus solely on the flexibility of side-chains and as a first approximation we ignore backbone flexibility.

docking methods currently incorporate conformational changes upon binding in different ways. the most common approach adopts an implicit "soft" surface representation that allows some degree of penetration of rigid proteins  <cit> . the rigid protein is rotated and translated with respect to its partner. each configuration is evaluated by a scoring function which usually measures shape complementarity as well as chemical and physical information. the scoring function is adjusted to accommodate some steric clash at the surface and therefore accounts implicitly for flexibility. these algorithms are usually implemented as low-resolution methods due to the computational complexity of sampling the six-dimensional space of rigid motions. but as computers become more powerful the resolution of these methods cannot be substantially improved, since the "soft" surface representation is required to mask the difference between docked and undocked conformations.

soft rigid-body docking methods are generally followed by a refinement stage in which an atomic-level energy minimization is carried out to allow for explicit flexible protein-protein docking and then by an all-atom rescoring scheme. the haddock  <cit>  algorithm, for example, implements this refinement in a three-stage process: rigid body energy minimization followed by two refinement steps: semirigid simulated annealing in torsion angle space and refinement in cartesian space with explicit solvent. backbone and side-chains flexibility is allowed during refinement. rdock  <cit>  is an energy minimization process on side-chains that refines zdock's  <cit>  initial rigid-body docking candidates. molecular dynamics simulations  have also been used to refine both side-chain and backbone conformations  <cit> .

alternative approaches to the soft rigid body docking procedures described above account for flexibility by considering multiple conformations of the proteins involved in the complex. these conformations correspond to alternative models , models constructed from point mutation studies, or models derived from dynamics simulations. this has been referred to as "cross docking" or "ensemble docking"  <cit>  and has been implemented in protein-ligand docking programs  <cit> .

side-chain flexibility needs to be accounted for in the docking process. cherfils et al.  <cit>  introduced docking methods that represent side-chains with a crude low-resolution model to account for flexibility. jackson et al.  <cit>  include side-chain flexibility in a two-step process for interface refinement that is iterated until convergence. in the first step, the self-consistent mean field  algorithm is used to find the optimal side-chain conformation of the protein from its rotamer states, taking solvation into account. in the second step rigid-body minimization of the intermolecular interaction energy is performed on the interface region only, while the larger molecule is held stationary. in the software attract, zacharias  <cit>  incorporated flexibility by using a rotamer library having up to three pseudo atoms for each amino acid  <cit> . in rosettadock, wang et al.  <cit>  begin with a discrete rotamer library supplemented with side-chain conformations taken from the unbound structure, and then perform continuous optimization of side-chains in the vicinity of the rotamers.

our approach to the docking problem is related to the ensemble docking model. we propose a strategy that includes three steps:  generate ensembles of conformations for multiple patches that span the surfaces of the two proteins considered,  develop a fast method for generating candidate docked conformations of the two proteins based on these ensembles, and , develop an energy function that ranks the candidate conformations such that the actual native docked structures can be identified. in step , we acknowledge the fact that proteins may change shape upon binding; this is implicitly captured by the ensemble of conformations, with the hope that this ensemble includes a conformation that is close to the conformation found in the bound protein. in step , the major difficulty is to overcome the combinatorial explosion that arises from accounting for multiple patches, each represented with an ensemble of conformations. fortunately, solutions are available. firstly, it is possible to test the complementarity of two patches by mapping the two patches onto a feature space and by directly comparing their representations in this space. secondly, the combinatorial explosion of handling multiple patches can be significantly reduced using a geometric hashing technique  <cit> . finally, in step  we anticipate that both geometry and energetics need to be incorporated into the scoring function for this function to be selective.

in this paper we focus on step  of the procedure outlined above. we explore the question of how well we can sample side-chain conformations so as to approximate the bound conformation of the protein. we leave the backbone conformation fixed as observed in the unbound state. even with this fixed backbone, sampling all possible states of the side-chains is of course not computationally feasible. for a medium-sized protein of  <dig> residues, if each residue were allowed an average of  <dig> sampled states, the number of possible side-chain configurations would be on the order of  <dig> raised to the 175th power. in order to reduce this exponential complexity, we decompose the protein surface into a set of overlapping small patches; only the interactions between side-chains within each patch are considered.

our main contribution is a procedure that produces a small sample of the space of side-chain configurations within a patch. we test our procedure using the docking benchmark of hwang et al.  <cit> . this data set includes pairs of proteins for which the geometry of the bound configuration, as well as the unbound, is known for each protein. for each patch, we compute  <dig> sample configurations  and we compare the experimental conformations we produce to the bound conformation. our results are given in the results and discussion section. we find that in most cases our method produces a docking candidate that is within  <dig> Å rmsd of the bound configuration.

an ensemble of  <dig> configurations for each surface patch produces a very large space within which we need to search for shape complementarities. if, however, we can require better shape complementarity, at higher resolution, in the first phase of docking, we may be able to reduce rather than increase the number of false positives which must be considered in later stages.

methods
outline
our overall goal is to represent a protein with an ensemble of conformations, which we refer to as a sample, in which side-chain flexibility is accounted for by sampling their possible conformations so as to include a good approximation to the bound state. the main challenge we face is to reduce the huge number of possible side-chain conformations so that we end up with a sample of reasonable size. to address this challenge, we employ a series of strategies that are schematically described in figure  <dig> 

our first observation is that it is not necessary to represent conformations of the complete molecule, or even the complete molecular surface; the protein-protein interface region is usually a small part of the surface, so it suffices to represent conformations within local surface regions. we define small patches on the surface, consisting of overlapping sets of eight or nine residues. in an actual docking experiment, the set of patches would be chosen to cover the entire molecular surface. in this study, however, we only consider patches that actually intersect the interface region, so that we can compare our synthetically sampled conformations to the side-chain conformations in the docked  complex.

to account for flexibility, we allow for different positions of the side-chains of the residues included in the patch, while leaving the backbone fixed. as in other methods for predicting the conformations of side-chains, we consider a discrete version of their conformational space, with each discrete conformation referred to as a rotamer  <cit> . these rotamers correspond to optimal, i.e. low energy states; they are usually grouped into libraries that have been compiled by performing statistical studies on known protein structures. an exhaustive enumeration of all possible rotamer combinations for the residues contained in a patch still leads to a very large number of conformations: in the example shown in figure  <dig> the patch contains one tryptophan with  <dig> rotamers, two aspartic acids, each with  <dig> rotamers, one glutamine with  <dig> rotamers, two lysines, each with  <dig> rotamers, one arginine with  <dig> rotamers, one serine with  <dig> rotamers, and one alanine, leading to a total of:

 <dig> ×  <dig> ×  <dig> ×  <dig> ×  <dig> ×  <dig> ×  <dig> ×  <dig> =  <dig> , <dig> possible conformations.

taking just the lowest-energy conformations in this set would not provide a good sampling of the conformational space accessible by the patch. indeed, conformations with similar low energies usually represent small variations on essentially the same local minimum. to provide a broader sampling, we subdivide the conformational space of each residue into thirds using its three common χ <dig> torsion angles . our approach is to sample every possible χ <dig> configuration of the patch residues. with  <dig> residues to a patch, each having up to three χ <dig> angle possibilities, the number of χ <dig> configurations is up to  <dig>  ≈  <dig> . instead of taking the lowest energy samples from among all exhaustive conformations, we select the lowest energy conformation of each of the approximately  <dig>  χ <dig> configurations as follows. with the χ <dig> configurations fixed, we select the other torsion angles within the patch  by energy minimization using the self consistent mean field  algorithm, described below. the energy function we use includes both van der waals and coulomb energies. our final step is to use k-means clustering, based upon rmsd, to further reduce the set of about  <dig>  configurations to a set of  <dig> clusters. one representative, that with the lowest energy, is selected from each of the  <dig> clusters, and the unbound configuration is added to form the final sample of docking candidates for the patch.

implementation
data set
we use in our experiments the protein-protein docking benchmark  developed by hwang et al.  <cit> . this benchmark includes  <dig> "cases" in total. in general, a "case" represents a traditional unbound docking problem, including the unbound structures of the receptor and ligand proteins as well as the structure of the complex between these two proteins:  <dig> cases fall in this category. the other  <dig> cases are specialized problems representing antibody-antigen complexes for which only the bound structure of the antibody is known. the difficulty level of any case in the benchmark is measured by the degree of conformational changes that occur in and around the interface region upon binding, as measured by the interface cα-rmsd  and by the fraction of non-native residue contacts . a case is deemed "rigid-body" and therefore "easy" if its i-rmsd is lower than  <dig>  Å and its fnon - nat is lower than  <dig> . at the other end of the spectrum, a case is deemed "difficult" if its i-rmsd is greater than  <dig>  Å. all the other remaining cases are referred to as "medium". among the  <dig> cases, there are  <dig> rigid cases,  <dig> medium cases and  <dig> difficult cases.

selecting patches
we test our conformation sampling method only in the interface regions of the two proteins of every test case, since only in the interface regions is it important to be able to approximate the bound conformation of the side-chains.

the first step is to define the interface regions. we designate a residue on a bound protein an interface residue if at least one of its atoms is within  <dig> Å of any atom of the complementary protein. this gives us a list of interface residues.

our next step is to define a set of surface patches covering the interface regions. patches are defined independently of each other on the two proteins. the objective is for the patches to be distributed evenly and with good overlap. since the average size of an amino acid is about  <dig> atoms  and we want each patch to contain eight or nine residues, we place a patch center at every 64th position in the list of atoms in the interface region of one protein. then we draw a sphere around each patch center. the radius of each sphere is adjusted until the patches contain either eight or nine effective residues of the interface; these residues define a patch. an effective residue is a residue that is neither an ala nor a gly . after this process, if there are any residues in the interface that have not been included in at least one patch, we set additional patch centers at their cα and repeat the sphere adjusting process to create new patches that cover the gaps.

the interface regions are defined according to the bound structures of the proteins. mapping the bound patch residues to the corresponding residues in the unbound structure is not entirely straightforward, as there exist cases with  missing residues in the x-ray structures of the unbound and bound states of the protein. to circumvent this problem, we clean the data set using the following procedure on each case:

• we align the two sequences of the same protein extracted from the atom record of the pdb files for its bound and unbound conformation. if there are any missing or additional residues for the interface region in the unbound structure, the case is rejected.

• we "fix" any residues that are incomplete in the interface region for both the bound and unbound structure. by "fixing", we mean that if a residue is missing a side-chain atom, it is truncated to an ala or a gly . we reject the case if any residue is missing a backbone atom.

• we select patches on the bound interface region using the procedure described above. each patch contains eight or nine effective residues.

• finally, we "fix" the non-interface region:  we remove all residues whose backbone is incomplete, or who are present in one of the two conformations  but not in the other, and  we truncate residues with missing side-chain atoms to ala or gly, consistently in the bound and unbound structure. if more than 5% of the residues are removed or truncated in this process, the case is rejected.

this stringent data cleaning led to many test cases being rejected: only  <dig> cases remained, including  <dig> antigen-bound antibody cases: they are listed in table  <dig>  from these,  <dig> patches were created. the number of patches per protein complex depends on the size of the two constituent proteins and on the shape of the interface region. we found an average of  <dig>  patches per protein complex , with a minimum of  <dig> patches and a maximum of  <dig> patches. the size of these patches varies between  <dig> Å and  <dig> Å , with the smallest patch size at  <dig>  Å and the maximum at  <dig>  Å .

a note that the name 2qfw does not correspond to the actual pdb file with this id. the pdb file 1qfw corresponds to a ternary complex between human chorionic gonadotropin and two fv fragments; it has been artificially separated into two binary complexes in the docking database of hwang et al  <cit> , with one complex stored as 1qfw and the other one stored as 2qfw

rotamer library
as described in the overview, we allow side chain flexibility by having our docking candidates take on a sample of low-energy combinations of different torsion angles for each amino acid type. to reduce the size of the search space, we use only those torsion angles contained in a rotamer library  <cit> . our rotamer library is a modified version of the averaged library compiled by tuffery et al.  <cit> , which has been corrected for duplicate rotamers. the backbone-independent rotamer library of dunbrack and cohen  <cit>  was used for leucine residues. the missing dihedral angles in the tuffery library χ <dig> for arginine and lysine were defined as  <dig> and χ <dig> for arginine as  <dig>  to alleviate the effects of this approximation, we do not include the atoms defined by these dihedral angles in the energy calculations. because there are many docked residues that stay close to their undocked conformations, we supplement our rotamer choices with the unbound conformation if there is no rotamer from the library that is within  <dig>  Å rmsd of it.

the side chains are built upon the native backbone of the unbound protein using the torsion angles from the rotamer library and standard bond lengths and bond angles from the charmm  <dig> force field. figure  <dig> shows three different side-chain configurations for a patch from the 1akj receptor.

energy function
we use a simplified physics-based energy function e that takes into account non-bonded interactions. it includes a coulomb term and a lennard-jones term, which accounts for van der waals attractions and repulsions:

  e=∑min,2)+∑qiqj4πϵ0ϵrrij 

in this equation, rij is the distance between atoms i and j that has been capped below at  <dig> Å, to circumvent problems that may come from using discrete rotamers . for the same reason, we use an upper cutoff value for van der waals energies of  <dig> kcal/mol . both summations run over all atoms i in the patch considered and all atoms j in the protein that contains this patch. the interaction is computed only if the two residues to which i and j belong have their cα atoms less than  <dig> Å apart. in addition, if j belongs to a residue that is accessible , the interaction is scaled by a factor 1/ <dig>  finally, the parameters ai,j, bi,j , ϵi,j and the charges are taken from the charmm <dig> force field  <cit> .

in addition, if the patch includes two cysteines, we add an additional geometric energy term that checks for disulfide bridge formation  <cit> .

scmf filtering
the energy defined above is used in conjunction with mean-field theory to select low-energy conformations from the list of possible rotamer settings. mean-field theory  is a way of addressing the combinatorial issues of a many-bodied system. in mft, interactions with any one body are expressed as an average of interactions over an ensemble of states. when an exhaustive search of a space is intractable, and minimization occurs within the context of many local minima, mft is an approximation that enhances the sampling protocol of the minimization algorithm. in its most general form, the mft approximation can be applied to the average  of any physical quantity x. <x > is expressed as the sum of the values of x for its subsystems weighted by their probabilities.

we employ the self-consistent mean field  algorithm  <cit> , an application of mft to side-chain prediction. consider a protein of n residues, with the ith residue having ri rotamers. assume that we are given a probability distribution on the rotamers. we replace the ith side-chain with an ensemble containing all of the possible rotamer conformations, all attached to the original backbone at the cα atom. each rotamer is weighted by its probability. all residues now interact with the entire rotamer ensemble.

to sum up the details  the effective energy of the multi-copy protein is given as:

   <e>=∑i=1n∑ri=1ripiri <ei>ri 

where < e >, i, n, ri and ri are as described above, piri is the probability that the ith residue is in the rith rotamer conformation, and  <ei>ri is the effective energy felt by the ith residue in its rith rotamer conformation, which is given by:

   <ei>ri=eribb+eri+12∑j=1n∑rj=1rjpjrjerirj 

here eribb is the energy of interaction of the backbone with i's rith rotamer and eri is this rotamer's self energy. erirj is the energy of interaction of residue i's rith rotamer with residue j's rjth rotamer.

we then define the effective free energy of the multi-copy system as:

  ℱ= <e>+∑j=1n∑rj=1rjpjrjlog 

in this formulation, the problem of finding the global minimum of the energy landscape in the original conformational space is replaced by the problem of finding the minimum of the effective free energy given by equation  <dig> in a new conformational space where the degrees of freedom, i.e. the unconstrained values, are the probabilities. the energy function in this space is better behaved, with far fewer local minima  <cit> . the scmf algorithm predicts protein side-chain configuration by choosing the highest probability rotamer for each residue.

scmf optimization typically seeks only a single minimal configuration for the protein. as described in the outline, we instead use scmf as a filter to reduce our ensemble from an exhaustive sampling of all configurations of rotamers to a sampling covering the regions of χ <dig> space. our approach is to sample each residue in turn in all its three χ <dig> angles of 60°, 180° and -60°. for each combination of χ <dig> angles of patch residues we create a multi-copy protein and have scmf select the minimum energy configuration of the χ <dig> and χ <dig> torsion angles.

we do have two exceptions of this χ <dig> space discretization. firstly, we retain exhaustive sampling of histidine as this residue is difficult to model given the ambiguity of its protonation state. we achieve better results by extensively sampling all of the histidine rotamers, each of which being protonated in the delta position. secondly, we do not sample each of the  <dig> χ <dig> angles of serine and cysteine; rather, we allow the scmf algorithm to select one unique conformation from their three rotamers.

clustering
the scmf filtering procedure significantly reduces the size of the sample of conformations for any given patch, to the roughly  <dig>  conformations determined by the choices of χ <dig> angles. to reduce this size to something that would be reasonable to use in docking, we apply a clustering algorithm.

we use k-means clustering, with the distance between two conformations measured as the root mean square distance  computed over all the side-chain atoms . we selected k =  <dig> clusters as a good balance of small ensemble size and quality. we then select one representative for each cluster, chosen to be the conformation with the minimum energy, where the energy is given by equation  <dig> 

running time
computing time is a key parameter for our procedure as it defines what are reasonable values for some of the parameters we use. our procedure includes three steps, namely definition of the patches on the surface of the protein, generation and filtering of the conformations for each patch, and finally clustering of the resulting conformation to generate the ensembles of each patch. while the first step is fast, the second and third steps are controlled by the size of the patches, i.e. by the number of effective residues with flexible side-chains they contain. patches with too many effective residues would lead to a combinatorial explosion in the process of exploring their conformational space. we have found that sizes of up to  <dig> residues are computationally tractable. the slowest step in our procedure is the clustering of the scmf-filtered conformations. with patch size of up to  <dig> effective residues, we find that the average computing time for clustering is approximately  <dig> minutes per patch. this was computed on a desktop computer with an intel core  <dig> quad cpu of  <dig>  ghz, using one core per patch.

RESULTS
we first reiterate our overall goal: to represent a protein patch with an ensemble of conformations that account implicitly for side-chain flexibility. this ensemble, or sample, must satisfy two seemingly contradicting criteria: it must cover as much as possible the conformational space accessible to the patch, so as to optimize the probability that it includes a conformation close to the one present in the bound complex, and it must be as small as possible so as to remain manageable when used in docking experiments. the process of selecting our ensemble consists of a series of filtering steps, each of which produces a smaller sample of conformation space. of course, any reduction in size can only result in a reduction of the quality with which some elements of the set can approximate the bound conformation. to evaluate our selection procedure, we performed a series of experiments to determine the quality of the sample of conformations at the end of each step, as well as to measure how this quality is affected by the reduction in size enforced by these steps.

quality of the rotamer representation of side-chains
our first experiment addresses the following question: does limiting the set of conformations that we consider to those representable using our rotamer library, in and of itself prevent us from closely approximating the bound configuration? that is, given an unbound patch and our rotamer library, can we produce a configuration that is close to the bound conformation of that patch?

the fact that the bound and unbound backbone configurations might differ makes it difficult to answer this question directly. to remove the effect of the backbone difference, we graft side-chains in their bound conformation onto the unbound backbone  of the patch and compare this with the most similar rotamers grafted onto the unbound backbone , where similarity refers to proximity to the bound conformation. we produce the bound_ubb conformation as follows: for each patch residue we superimpose its bound state onto its unbound state using a best fit alignment of backbone atoms. then we translate that residue's side-chain from the bound conformation so as to superimpose its cα atom onto the unbound cα. to produce the rotamer ubb conformation, we select from the rotamer library the closest rotamer to the bound conformation for each patch residue, as observed in bound_ubb . we build these rotamers onto the unbound patch backbone. note that these two constructs are used for analysis only, since they are derived using information from the bound state, which would not be available in a predictive setting.

these results illustrate the adequacy of using a rotamer library to represent side-chain conformations, but they are somewhat misleading since they explicitly remove the effects of backbone flexibility. therefore we also directly compute the all-atom rmsd between both the bound_ubb and the rotamer_ubb conformations and the bound conformation of the patch. we see in figure  <dig> that the bound conformation of the patch is usually close to the rotamer_ubb conformation: for  <dig> of the  <dig> patches this rmsd is within  <dig> a. however, in  <dig> patches this rmsd is greater than  <dig> Å, twelve of these are above  <dig> Å with a high of  <dig>  Å. we expect to to encounter difficulty in prediction when the patch backbone changes significantly. this is not unexpected when considering the results from the capri experiment  <cit> .

quality of the sample after scmf filtering
having established that for 74% of our test cases at least one configuration based on our rotamer library is close to the bound conformation of the patch , we next considered the set of conformations produced by the scmf filtering step described in the section on scmf filtering. to give a qualitative view of the results of this step, we first examine the filtered sample of conformations obtained for the typical patch on the receptor of the protein complex 1akj which appeared in figure  <dig> and  <dig>  this patch contains eight residues with flexible side-chains and one alanine whose side-chain is fixed, as we do not consider the hydrogen. in figure  <dig> we plot the energies of the  <dig> conformations of the patch that were selected by the scmf filtering procedure as a function of their all-atom rmsds to the bound conformation of the patch. interestingly, the conformations in the filtered ensemble are not uniform but appear in distinct clusters in this energy-rmsd space. further analysis shows that these clusters are mostly determined by the χ <dig> angle of one tryptophan, named t, in the patch, which in the bound state has a χ <dig> angle of -59° and a χ <dig> angle of 114°. for all members of the cluster identified as group i in figure  <dig> t has a χ <dig> angle of 180° and a χ <dig> angle of -90°. this is the cluster whose elements have the highest energies ranging from  <dig> to  <dig> kcal/mol. all members of group ii are far from the bound conformation, with rmsds higher than  <dig> Å; in all of these t has a χ <dig> angle of 60° and a χ <dig> angle of 90°. in group iii, t has a χ <dig> of -60°, i.e. close to its value in the bound conformation. this set is the most dispersed with at least three apparent subgroups. interestingly, those members of this group whose rmsd with the bound conformation is below  <dig>  Å have a tryptophan t χ <dig> angle of 90°, while all those with rmsd above  <dig>  Å have a χ <dig> angle of -90°. there are  <dig> patch conformations within  <dig> Å rmsd of the bound conformation. the behavior we describe here is not unique to 1akj: we observed the same clustering determined by the χ <dig> angle of an influential residue  for most of the  <dig> patches we studied.

in addition to the clustering of the different conformations of a patch, figure  <dig> illustrates a good correlation between the energy of a conformation of a patch and its rmsd to the bound state, in the sense that the conformations with the lowest energies correspond to the conformations that most resemble the bound state. while this is a very desirable property , it was found unfortunately to be more qualitative than quantitative. when we checked all seven hundred patches in our test set, we found in fact that picking the conformations with the lowest energies did not guarantee that we would retain a conformation that resembles the bound state, unless we retained a very large number of conformations. this is by no means surprising: the energy function we use here is simplified and only include internal interactions, neglecting solvent and most importantly neglecting the effect of the partner protein in the complex, as the position of this partner is not known.

quantitatively, we can see that the scmf filtering significantly reduces the size of the sample of conformations for any given patch while retaining many good docking candidates, i.e. conformations of the patch that are close  to its bound conformation. this is illustrated in figure  <dig>  among the  <dig> test cases we consider, we found that for  <dig> of them, the filtered sample includes at least one conformation that is within  <dig> Å rmsd from the bound conformation, and for  <dig> of them, there is at least one conformation within  <dig> Å rmsd.  for  <dig> of our test cases, the closest conformation of the patch to the bound conformation in the filtered ensemble is better than the unbound conformation. this by itself validates our approach: it is possible to start with a better conformation than the unbound structure in docking experiments.

there is a limit however to how much we can improve upon the unbound conformation : when the backbone changes significantly between the unbound and bound states , we could not find any good conformation in the patch ensembles.

quality of the sample after clustering
the size of the sample of conformations that passed the scmf filter is still too large for this sample to be used in a docking experiment. this size varies from  <dig> to  <dig>  in our test set of  <dig> patches, depending on the number and nature of the residues they include. we therefore used a final size-reducing step, k-means clustering, with k set to  <dig>  note that the behavior observed in figure  <dig> suggests a clustering approach.

our final sample of conformations includes the representatives of the   <dig> clusters plus the unbound conformation of the patch. in figure  <dig> we plot the all-atom rmsd between the best conformation in this final sample and the bound conformation of the corresponding patch, with the all-atom rmsd between the unbound and bound conformations serving as a reference. this figure presents our main result in this study. when the all-atom rmsd between the unbound and bound states is small , there is very little room for improvement on the unbound conformation. when the same rmsd however is between  <dig>  and  <dig>  Å, our sampling procedure usually finds a better configuration with smaller rmsd to the bound configuration. when the rmsd of unbound to bound is above  <dig>  Å, our best representatives continue to do better than unbound, but this improvement is no longer significant: in these cases, there is a relatively large backbone displacement. overall we see  <dig> cases, from the  <dig>  in which the all-atom rmsd of the best representative in the sample to the bound conformation is less than  <dig> Å and  <dig> additional cases for which this rmsd is between  <dig> Å and  <dig> Å. in  <dig> of the  <dig> test patches we produce a candidate that is either within  <dig> Å rmsd of the bound conformation or is closer to the bound state than the unbound is. on average, we see an improvement of  <dig>  Å for the best picks in our ensembles compared to the corresponding unbound conformations. the improvement increases as the backbone changes increase: we see an average rmsd improvement of  <dig>  Å from unbound state for the cases where the backbone rmsd of unbound to bound is greater than  <dig> Å.

filtering does not damage the quality of our sample
as mentioned earlier, we are well aware that any reduction in the size of the sample of conformations can only reduce the quality of the approximation provided by the best element of the sample. figure  <dig> shows that we lose very little in approximation quality  through both the scmf filtering and the clustering stages. in the scmf filtering, there is only one case in which nothing similar to the best pick in the exhaustive sample was retained; in this case, the best conformation after filtering is . <dig> Å rmsd away from the best possible pick when all degrees of freedom are considered. we noticed that this is due to a a 93° change in the χ <dig> angle of a tryptophan of the patch that was not energetically favorable unless the docking partner was taken into account. the largest loss in rmsd in the clustering step was . <dig> Å rmsd.

the failure to maintain a good conformation for the patch  in the filtered ensemble is therefore not a consequence of the filtering process: we observed that when the backbone of the patch changes less than  <dig> Å rmsd upon docking, we generate a conformation for the patch that is within  <dig> Å of its bound state in 78% of the  <dig> initial exhaustive ensembles, as compared with 75% of the scmf filtered ensembles and 68% of the final ensembles. with backbone change in this range, 82% of the final ensembles are within  <dig>  Å of the bound conformation. when the backbone changes are larger however, sampling side-chain configuration alone does not allow us to generate a conformation for the patch that resembles the bound state.

patch size and quality of the ensemble
as mentioned above, the number of effective residues included in a patch is limited to about  <dig>  as a larger number would lead to combinatorial explosion that would become intractable at the clustering stage of our procedure. it is not clear, however, how this limit affects both our overall strategy for protein docking and the quality of the ensemble of conformations we generate for one patch.

we do not believe that patch size will significantly affect our ability to find good docking conformations, as we will generate patchworks of patches of the surfaces of the unbound proteins to ensure that we cover the interface region. this will be studied in more detail, however, as we develop the next steps of our procedure.

in addition, we do not believe that patch size has an effect on the quality of the ensemble of conformations we generate. we did test this assertion on the interface of the test case with pdb code 1b6c in our data set. we considered patches of varying sizes, from  <dig> to  <dig> effective residues covering the interface on the receptor protein. ensembles were generated for each patch and filtered by scmf. the quality of each ensemble was defined as the best rmsd to the bound state computed over all conformations contained in the ensemble. we found very little difference between the qualities of the patches for patches of different sizes covering the same interface. as for all  <dig> patches in our data set, we found that it is the extent to which the backbone changes between the unbound and bound structures of the patch that mainly defines the quality of the ensemble.

we also eliminated the possibility that edge effects might be important : we varied the weight of the energy contributions of these residues  from  <dig>  to  <dig>   and found no effects on the quality of all patches in the interface of 1b6c, for all sizes considered.

CONCLUSIONS
this paper focuses on how to incorporate flexibility in protein-protein docking studies. we divide the surfaces of each protein into local patches and describe the effect of flexibility on each patch by sampling the space of conformations of its side-chains. likely positions of individual side-chains are given by a rotamer library; this library is used to derive a sample of possible mutual conformations within the patch. we control the size of the sample using the so-called scmf filtering that maintains broad coverage while selecting conformations with low energy, and by clustering similar configurations. we have shown that in most cases this procedure allows us to generate a good sampling of a patch conformation that includes at least one configuration that is close to the bound conformation of the patch. we have also shown that usually this best configuration is a better match to the bound state than the given unbound conformation of the patch.

our procedure however breaks down for cases in which the backbone configuration for the residues in the patch changes significantly between the unbound and bound states. this points to a direction for future work. we expect an improvement in our sampling of the conformation of a patch if we account for backbone flexibility explicitly. recently there has been progress in modeling backbone flexibility in the initial surface matching stage of docking. for example, in flexdock  <cit> , molecules are decomposed into rigid domains, which are docked separately and then the possible dockings are reconnected using a graph-based algorithm. rosettadock  <cit>  creates a "fold tree" representation of the molecular system which explicitly handles backbone flexibility. attract  <cit>  adopts systematic protein-protein docking starting from conformations generated from normal mode analysis using a gaussian network model to represent the protein. in future work we will investigate such methods to incorporate backbone flexibility into our ensembles where needed, again addressing the issue of computational complexity.

authors' contributions
all authors participated in the design of the study. pfl and sg performed the experiments. all authors helped to draft the manuscript. they all read and approved the final manuscript.
