BACKGROUND
at the molecular level, protein dynamics and flexibility are vital elements for understanding protein functions. the structural flexibility of proteins enables their motion, which is associated with numerous biological activities such as molecular recognition , allosteric regulation , catalytic activity  <cit> , and protein stability  <cit> .

conformational changes driven by protein flexibility and dynamics are considered the basis of misfolding, which is responsible for intrinsic disorders. in fact, the recent discovery of the significance of disordered proteins in the last few years has intensely increased the interest in protein flexibility .

consequently, information on protein flexibility is as important as tertiary structure to provide more insights into understanding protein function, and consequently will have significant impact on genomic study, disease research, and drug-design  <cit> .

b-factors  reported in experimentally determined protein structures are commonly used to represent protein flexibility and its local mobility  <cit> . they indicate both the static mobility, related to the molecule orientation, and dynamic mobility, caused by the atoms vibration  <cit> .

the b-factor is given by, bfactori=8π2ui <dig> where ui <dig> is the mean-squares displacement of atom i. the values of the b-factors are usually between  <dig> to 30 Å <dig>  and sometimes higher than  <dig> for more flexible regions.

although each atom in protein atomic resolution structures has its b-factor, the b-factor of the whole residue is generally represented by its cα b-factor. the residues with low b-factor values are usually more stable in structure than the ones with large b-factor values.

a variety of approaches have been proposed by different groups to predict protein flexibility, mainly dealing with the so called “classification problem”. protein residues are classified into two states as rigid or flexible on the basis of a b-value threshold  <cit> . others extended the classification into three states   <cit> . some other approaches also provide real value prediction  <cit> . methods have been developed using different protein datasets and different computational algorithms, including logistic regression  <cit> , support vector regression  <cit> , and neural networks  <cit> . generally, flexibility prediction methods define flexibility through cα b-factor obtained from experimental data, such as profbval  <cit>  and predbf  <cit> . other methods use different descriptors of flexibility, such as camp  <cit>  which uses protection values gained by equilibrium hydrogen exchange experimentations. predyflexy  <cit>  examines flexibility based on two descriptors, the root mean square fluctuations obtained by running molecular dynamics simulations and the b-factor values.

when dealing with the classification problem, features influencing the flexibility of residues such as evolutionary information revealed by multiple sequence alignments are encoded as input in the machine learning methods in order to enhance the prediction performance. hence, extracting then selecting good features is key to the accuracy and overall performance of the machine learning algorithms. most flexibility prediction methods are based on protein sequence and evolutionary information, predicted secondary structures and/or solvent accessibility for their encodings .

the flexibility state of a residue is frequently correlated with the flexibility states of its neighbors. in other words, the flexibility states of the neighbors are very effective features for predicting the flexibility state of a residue. for example, if both neighboring residues are rigid, then the residue in the middle is more likely to be rigid, and vice versa. unfortunately, we can’t use the true flexibility states as features since they are not known in advance. however, the likelihood of a residue adopting a specific flexibility state may also be an important feature.

moreover, previous studies have shown that there is a strong correlation among flexibility, secondary structures, and solvent accessibility  <cit> . hence, encoding information about residues structural features will also enhance the prediction accuracy.

in this work, we examine flexibility according to the experimentally determined b-factors. we then define  <dig> flexibility states and propose a neural network based method for predicting protein flexibility along the amino acid sequence. we describe the approaches of extracting statistical scores to measure the favorability of residues’ flexibility in presence of its surrounding neighbors in sequence from a large training dataset based on the mean-field potentials  <cit> . these approaches were successfully applied in our previous work for predicting protein disulfide bonding  <cit> , secondary structures  <cit> , and solvent accessibility. the basic idea is based on the observation that residues’ flexibility exhibit strong local dependency. we derive statistics for residues as singles, doubles, and triples in a sequence window from protein structures found in pdb  <cit> . then scores measuring the pseudo-energy of a residue adopting specific flexibility state are determined using the potentials of mean force approach. these scores are then integrated with data from multiple sequence alignments, predicted secondary structure and solvent accessibility states, and amino acid properties to train neural networks for flexibility prediction. an analysis of the relationship between flexibility and residues’ structural features  is further discussed.

7-fold cross validations are performed. benchmark datasets are used to further validate and demonstrate the effectiveness of our approach. finally, the benchmarks are also used to compare our method with a set of popularly used methods for flexibility prediction. a web server named “flexc” hosting our method is currently available online at http://hpcr.cs.odu.edu/flexc.

methods
protein data sets
two protein datasets including cull <dig> and cull <dig> generated by the pisces server  <cit>  are used in this work. cull <dig> is used to generate context-based statistics. it contains  <dig> proteins with 50 %  sequence identity and a resolution cutoff of  <dig>  Å. cull <dig> is used for neural network training and testing. it includes  <dig> proteins with 25 %  pair-wise sequence identity and a resolution cutoff of  <dig>  Å.

psi-blast  <cit>  is used to produce position specific scoring matrix  data for all protein chains in our dataset. pssm data is used in producing statistics from cull <dig> and in input encoding of cull <dig> for neural network training. short chains  are removed because psi-blast is usually incapable of generating profiles for very short sequences. we also eliminate residues with undetermined flexibility state from the dataset. the total number of protein chains after filtering is  <dig> 

the absolute b-factor values are determined from the proteins’ pdb files. the secondary structure assignments and solvent accessibility values of the residues in the training dataset are produced by the dssp program  <cit> .

the recent casp <dig> targets as well as the previous casp <dig>  casp <dig>  and casp <dig> targets  <cit>  are used for benchmarking our prediction method. hence, any sequence with more than 25 % similarity in sequence with any other sequence in the benchmarks is removed from the cull <dig> and cull <dig> when context-based scores are generated and when neural networks are trained.

normalized b-values
in a protein pdb format file, every atom has a b-factor value in the atom records. b-factors of cα atoms are used to represent the b-factors of the residues. we extracted cα b-factors of the protein chains from their pdb files. the raw values are then normalized, since b-factors from different protein structures are on different scales  <cit> . the following normalization is applied: bfactornormalized=bfactorraw−μσ where μ is the mean of b-factors of a given structure, and σ is the standard deviation.

the frequency distributions of the residues’ b-factors vary depending on their positions in the protein tertiary structure. the normalized b-factors of the protein residues in our dataset range from - <dig>  to  <dig> . figure  <dig> shows the distribution of the normalized b-factors in the cull <dig> dataset.fig.  <dig> distribution of the normalized b-factors in cull <dig>  large normalized b-values  indicate more flexible residues and small normalized b-values  indicate more rigid residues. most residues fall in the middle 



features’ representation
a combination of sequence and structural information are used to represent protein residues. each residue in our dataset is described by a vector of the following parameters:

sequence and evolutionary information
different amino acid types have different preferences for b-factor values. similar to many studies that try to predict structural features from the protein sequence , we started with the sequence and we incorporate its evolutionary information in our method. the evolutionary information is represented by the pssm data which is revealed by multiple sequence alignment  of a family of homologues proteins. this information forms the main input encodings to our neural network, trained to recognize and discriminate the different flexibility states. we use the psi-blast program  <cit>  with  <dig> iterations of searching against non-redundant sequence database  to generate pssm data for cull <dig> dataset.

context-based scores
apparently, the surrounding residues have strong influence on the chemical property of a residue in its flexibility state. in this work, similar to our previous work employed in dinosolve  <cit> , scorpion  <cit> , and casa, we collect statistics of singlets , doublets , and triplets  residues at different positions in protein chains in a window of size  <dig> residues . these statistics represent approximations of the possibilities of residues adopting certain flexibility states when none, one, or two neighboring residues are considered. based on the potentials of mean force method  <cit> , the statistics are used to generate context-dependent pseudo-potentials that are then integrated as additional features in encoding our input for training the neural networks.

we calculate the mean-force potentials usingletrici, udoubletci,riri+k and utripletci,riri+k1ri+k <dig> for a residue ri adopting flexibility state ci. then, the pseudo-potential for ri under its amino acid environment is uci,…ri−1riri+1…=usingletci,ri+∑kudoubletci,riri+k+∑k <dig> k2utripletci,riri+k1ri+k <dig> 

protein structural features
residues’ flexibility is strongly correlated with secondary structures and solvent accessibility. regular secondary structure elements such as alpha helices and beta strands tend to be more stable than random coils. buried segments tend to be less flexible than exposed ones. consequently, incorporating structural features with sequence information will significantly enhance the performance of the predictor.

predicted structural features are incorporated in our method. we use the methods scorpion  <cit>  and casa for secondary structure and solvent accessibility predictions, respectively.

amino acid properties
we also use five amino-acid properties for encoding  <cit> : a steric parameter , polarizability, volume, hydrophobicity, and isoelectric point.

threshold selection
some prediction methods consider only two flexibility classes and some others consider three classes. defining thresholds to discriminate between classes of flexibility is rather arbitrary and subjective in many studies ; mainly attributed to the differences in the training datasets, computational methods, and flexibility descriptors. studies that use same flexibility descriptor and similar computational methods for predicting flexibility base their threshold selection on the dataset, such that the number of training samples in the different classes defined for flexibility is balanced .

in this work, we define three classes with thresholds ; a normalized b-factor value of less than - <dig>  is considered rigid, a value greater than  <dig>  is considered flexible, otherwise the residue is considered to be in intermediate state. a two state classification is also defined in this work in order to compare our method with previous work. a threshold value of  <dig>  is used in one experiment and a value of - <dig>  is used in another one.

neural network model
our method incorporates one phase of neural network training. the standard feed-forward back-propagation architecture was adopted with  <dig> hidden nodes. we selected a window of  <dig> residues long where the neural network is trained to predict the flexibility state of the residue in the center of that window. different settings for our method were tested and the chosen settings correspond to the optimal obtained results.

twenty values for pssm data,  <dig> values for context-based scores,  <dig> values for predicted secondary structures,  <dig> values for predicted solvent accessibilities,  <dig> values for amino acid properties, and  <dig> value to specify c-terminals or n-terminals overlap are used to represent each residue. a total of  <dig> input values are used to encode a residue in 3-state flexibility prediction. figure  <dig> shows the neural network input encoding and the architecture of our flexibility prediction method.fig.  <dig> encoding and neural network architecture for flexibility prediction. pssm: position specific scoring matrix. scrs: context-based scores of residue ri in rigid, intermediate, and flexible states. ss: predicted secondary structures, represent probabilities of residue ri in helix, sheet, and coil. sa: predicted relative solvent accessibility, represent probabilities of residue ri in extended and buried states. aap: amino acid properties



cross validation
for reliable assessment of our method’s performance, the n-fold cross validation is used on cul <dig> dataset, where n= <dig>  the protein sequences in the training set are divided into  <dig> subsets. at each stage,  <dig> subsets are selected for training whereas the other  <dig> subsets are selected for neural network testing and validation, separately. the process is repeated  <dig> times  and the overall accuracy of the prediction is calculated as the average of the accuracies obtained from the  <dig> folds.

performance evaluation
for the evaluation, we calculate the prediction rate by dividing the number of residues that were predicted correctly  over the total number of residues . i.e. q = tp/n. in order to compare our method with some previous methods, we also compute the f-measure  <cit> , as f = 2*a*c/, such that a stands for accuracy is defined by a=tp/ and c stands for coverage is calculated as c=tp/. tp  represents the residues predicted correctly to be flexible, tn  represents the residues predicted correctly to be not flexible, fn  represents the residues predicted to be rigid but observed to be flexible, and fp  represents the residues predicted to be flexible but observed to be rigid.

RESULTS
the evolutionary information of protein sequences combined with the context-based flexibility scores, predicted structural features that we found to be correlated with flexibility, and amino acid properties enhanced the accuracy of our method by  <dig>  % over the prediction with evolutionary information only. the overall q <dig> accuracy of our method reached 61 %.

table  <dig> compares the 7-fold cross validated qualities of protein flexibility predictions based on different encoding schemes: pssm-only encoding, pssm+context-based statistical scores encoding, and all-features encoding. qr, qi, and qf measure the quality of predicting the rigid state, intermediate state, and flexible state, respectively. q <dig> measures all 3-state prediction accuracy. compared to the prediction method trained with pssm-only encoding, the method incorporating statistical scores as additional features along the pssm data for encoding results in enhancements of  <dig>  % in the q <dig> accuracy. on the other hand, the neural network trained with all features described in section  <dig> results in more significant improvements. table  <dig> also shows the accuracy improvement of incorporating context-based scores with pssm encoding and the improvement of all-features’ encoding over pssm only on the casp8- <dig> targets.table  <dig> prediction performance on cull <dig> dataset

comparison of prediction accuracy using pssm-only encoding, pssm+context-based scores encoding, and all-features encoding on cull <dig> using 7-fold cross validation. all-features including pssm, context-based scores, predicted secondary structures and solvent accessibility, and amino acid physicochemical properties

comparison of q <dig> prediction performance of protein flexibility using pssm-only encoding, pssm+context-based scores encoding, and all-features encoding on casp <dig>  casp <dig>  casp <dig>  and casp <dig> targets



different groups have used different computational methods, datasets, and flexibility descriptors to predict flexibility from protein sequence. moreover, the selection of thresholds to define flexibility classes is neither objective nor optimal. as such, direct comparison between these methods is hard. however, we try to assess our prediction method by comparing the results to those presented by the popularly used methods. public benchmarks including casp <dig>  casp <dig>  casp <dig>  and casp <dig> targets are used to validate our method.

predyflexy  <cit>  is a popular method for predicting flexibility with q <dig> accuracy of  <dig>  %, such that qr, qi, and qf are  <dig>  %,  <dig>  %, and 55 %, respectively. our method exhibits higher performance measures over predyflexy.

table  <dig> shows a comparison between flexc and predyflexy on the benchmark datasets. to ensure fairness in comparison, all homologues  to the sequences presented in those benchmarks are removed from our datasets when generating the statistical scores and when training the neural network. a significant improvement of ~12 %, in average, is achieved over predyflexy prediction method.table  <dig> comparison of prediction performance of flexc with predyflexy on benchmarks of casp targets



the profbval  <cit>  method provides two states prediction. the states are defined according to a strict threshold of  <dig>  and a non-strict threshold of - <dig> . to compare our results with profbval, we modify our method to predict two states based on profbval thresholds. bornot et al.  <cit>  also modify predyflexy to provide 2-state prediction using b-factor as flexibility descriptor, and compare the results with profbval and predbf  <cit> .

table  <dig> shows the comparison of our 2-state prediction results with 2-state predyflexy and profbval using f-measure. the results in table  <dig> regarding the other methods are reported from  <cit> . f-measures of  <dig>  % and  <dig>  % were obtained from our method for strict and non-strict thresholds, respectively, whereas predyflexy obtained  <dig>  % and  <dig>  %, and profbval method obtained  <dig>  % and  <dig>  %.table  <dig> comparison of performance of 2-state flexc prediction with 2-state predyflexy and profbval prediction results using f-measure



furthermore, bornot et al.  <cit>  reported f-measures of  <dig>  % and  <dig>  % using predbf method with strict threshold of  <dig>  and non-strict threshold of - <dig> , respectively. compared to the other methods, our results are very encouraging.

discussion
flexibility of secondary structure segments
we analyze the correlation of secondary structures with residues’ flexibility, and we found that residues in coil regions have higher b-values compared to the residues present in other regular secondary structure types . this observation is similar to previous studies in protein flexibility  <cit> .

figure  <dig> shows the frequency distribution of b-values for cull <dig> residues in coils and other secondary structure types . the figure is plotted from the two ends of the normalized b-values to provide clearer view of the relationship between b-values and secondary structure. figure 3a shows that larger number of residues with low b-factors is found in helixes and strands rather than in coils. on the other hand, fig. 3b shows that residues with high b-values are more frequently found in coils.fig.  <dig> frequency distribution of normalized b-factors associated with secondary structures assignment  in cull <dig> dataset. a distribution of b-factors from - <dig>  to  <dig>  b distribution of b-factors from  <dig> to  <dig> 



the inclusion of the predicted secondary structure in our method improves the performance by ~4 % compared to the basic method of encoding pssm data only.

flexibility of solvent accessible areas
a similar analysis is done to understand the relationship between flexibility and residues’ exposure to solvent. we found that buried residues which are present in the protein core tend to have lower b-values and hence are more rigid than the residues present on the protein surface. figure  <dig> shows the frequency distribution of the normalized b-values in correlation to the accessibility state. the figure is plotted from the two ends of the normalized b-values for clearer discussion. figure 4a shows that residues with low b-values are more frequently found to be buried. whereas, fig. 4b shows that residues with high b-values are more likely to be exposed.fig.  <dig> frequency distribution of normalized b-factors associated with the relative solvent accessibility assignment  in cull <dig> dataset. a distribution of b-factors from - <dig>  to  <dig>  b distribution of b-factors from  <dig> to  <dig> 



the inclusion of the predicted solvent accessibility states in our method improves the prediction performance by ~6 % compared to the basic method of encoding pssm data only. in fact, solvent accessibility correlates rather well with flexibility than the case with secondary structure. however, both pieces of information are important to improve the prediction process.

flexibility and disordered regions
an important application of protein flexibility prediction is the study and prediction of intrinsically disordered proteins. in fact, the discovery of the significance of disordered proteins in the last few years has strongly driven the interest in studying protein flexibility. intrinsically disordered proteins are typically associated with critical biological processes such as signaling and regulation  <cit> . the correlation between protein disorder and flexibility is reported in some studies, and many disorder prediction methods currently incorporate flexibility in their implementations  <cit> . improving the flexibility prediction will greatly benefit the study of disorder protein regions.

CONCLUSIONS
a new method for predicting flexibility in proteins is implemented. the method incorporates sequence and evolutionary information, context-based scores, predicted secondary structures and solvent accessibilities, and amino acid properties to predict protein flexibility. the context-based statistical scores are derived using the mean-field potentials method. an analysis of the correlation between protein flexibility, secondary structures, and solvent accessibility is discussed. the analysis presents the importance of incorporating structural features in the prediction method.

the effectiveness of our method, flexc, has been presented in the computational results of the 7-fold cross validations and the testing on benchmark datasets, where enhancements of prediction accuracies are observed. a comparison with popularly used methods is also provided such that our method shows higher prediction accuracies.

even though the overall improvement of flexc over existing methods for predicting protein flexibility is relatively small, from protein tertiary prediction perspective, reducing even fractions of percent of inaccuracy will be very useful in protein modeling efficiency, mainly because the search space for finding a tertiary structure goes up superlinearly with the fraction of inaccuracy. moreover, since our approach of calculating the sores depends on the number of known structures deposited in the pdb, with more structures being discovered, the pdb size will keep on increasing. this will enable us to obtain more accurate statistics and will provide a potential to achieve improvements in prediction accuracy in the future.

declarations
this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>   <dig>  selected articles from the 11th international symposium on bioinformatics research and applications : bioinformatics. the full contents of the supplement are available online https://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement- <dig> 

funding
this work is partially supported by the department of electrical engineering and computer science and the collage of engineering at tamuk, nsf through grant  <dig>  fisk hbcu-up tip grant, nsf through grant  <dig>  and publication costs for this work were funded by nih through grant 1r25md <dig>  national natural science foundation of china under grant no. <dig>  no. <dig> 

availability of data and materials
data and materials supporting our findings in this manuscript, including protein datasets, context-based scores, links to psi-blast and dssp programs, figures, and results can be found at https://www.dropbox.com/sh/xkz8yzldvxmxhe1/aactxevc6t_i78-svgzogtbna?dl=0

authors’ contributions
the context-based statistical scoring approach was conceived by yl. the method was implemented by ay. the computation was carried out by ay too. ay, yl, mn, ml, jw, and lq performed the result analysis. mn, lq, ml, jw, and bw review the manuscript. all authors read and approved the final manuscript.

ethics approval and consent to participate
not applicable.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.
