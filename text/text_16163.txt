BACKGROUND
in the approximately ten years since the completion of the draft sequence of the human genome, researchers have become increasingly attuned to the many layers of complexity that underlie the mechanisms of life  <cit> . many new genes have been identified for transcription factors whose role is to activate or inhibit the production of other genes. the interplay between mutually interacting transcription factors defines a regulatory network that dictates the levels of rna transcripts, signaling proteins, enzymes and other gene products. such networks have emergent properties that are essential in every living system <cit> .

understanding the organization and evolution of these networks has been a challenge because of their complexity. experimental studies have been able to identify important roles of interacting regulatory networks, such as the ability of yeast to respond to environmental changes <cit> , the specification of the endomesoderm in sea urchin embryos <cit> , and dorsal-ventral patterning in the drosophila embryo <cit> . although early studies of quantitative traits also revealed clues about such networks <cit> , it has not been generally feasible to address the more general questions how they originate and evolve.

a mathematical model of mutually interacting transcription factors was first developed by wagner <cit> . in this model, the level of expression of n transcription factors in an individual at time t is given by the values of the elements in a vector s with n entries. the mutual interactions between transcription factors are represented as an n × n matrix w whose elements wij are real numbers. w defines the gene network, and the distribution of the non-zero entries of w specifies how connected the network is. each row in w corresponds to a single transcription factor, and wij represents the effect of transcription factor j on the production of transcription factor i. the vector st of expression levels in an individual changes in ontology according to a characteristic time constant τ according to st+τ = f, where f is a realvalued function applied element by element to the entries of w × st. in wagner's model <cit> , f  = - <dig>   <dig>  or + <dig> according to whether the i-th element si of w × st is <  <dig>  =  <dig> or >  <dig>  the model therefore allows gene expression to be either completely repressed , expressed at a basal level , or completely derepressed . an individual is characterized by the final contents of its gene expression vector s. an individual is considered viable if, and only if, the final gene expression level vector converges to a stable state, meaning, even if the developmental process were continued  s would remain unchanged. occasionally we use the term viable network, by which we mean a w matrix capable of yielding viable individuals from a subset of initial state vectors.

the gene expression patterns generated by this model were able to mimic certain aspects of drosophila gene expression data  <cit>  however, the wagner model does not allow for differing concentrations of the transcription factors. further studies  <cit> were stimulated by the potential of wagner's original model. siegal and bergman <cit>  adapted the model to simulate the evolution of such transcriptional networks, which revealed that stabilizing selection in a population is sufficient to evolve robustness as predicted by waddington's canalization model of development <cit> . in their model, siegal and bergman included parameters to dictate the shape of a sigmoidal function, which would allow for a continuous model to be explored, however in all their simulations the parameters were chosen such that the output vector would behave exactly like wagner's.

this work was followed by additional studies focusing on such issues as network robustness to mutation <cit> . bergman and siegal  <cit> showed that knockout mutations  would significantly increase the sensitivity to initial conditions, but later studies showed that the relationship between a gene's connectivity and its fitness effect upon knockout depends on its equilibrium expression level <cit> . in all these studies, the model was used with the limitation of wagner's original - <dig> , <dig> output vector. in the model discussed in detail below, we propose an alternate definition of deleterious mutation and analyze its effect on viability in a continuous output scenario.

sexual and asexual reproduction as well as the coevolution of reproductive method and genetic architecture were analyzed by azevedo et al <cit> . they showed that sexual reproduction evolves greater robustness than asexual reproduction, using the same canalization <cit>  framework as siegal and bergman <cit> . but both studies rely on a version of the model in which transcription factors are either on or off and all mating is treated as haploid. in this study we show that, under the continuous model, the effects of mating in haploid and diploid populations are quite different.

the network structure of the wagner model has been studied in many ways <cit> , and the results suggest that large networks evolve to be sparse <cit>  and modular <cit> , the general argument holds that the cost of maintaining unnecessarily complex interactions is too large to be maintained <cit> , and once modules of interactions  are formed, it is easier to combine them together than to evolve the same mechanisms de novo in new networks  <cit> .

other types of network models have also been developed. a system of coupled ordinary differential equations derived from the principle of chemical kinetics was used to describe genes and the concentration of their products <cit> . boolean networks were also used to illustrate how gene interaction networks could be modeled together with their products assuming just two states, on or off <cit> . stochastic models <cit>  based on the gillespie algorithm <cit> were motivated by recent experimental results that have demonstrated that gene expression can have a component affected by stochastic noise <cit> . these models are limited to very small networks due to the inherent complexity of the algorithm <cit> .

a continuous network model  might be capable of describing properties of the regulatory networks not present in the discrete model. one approach to a model of a regulatory network with continuous output was based on using artificial neural networks <cit>  to describe cellular differentiation and morphogenesis <cit> .

the discrete version of the siegal and bergman <cit>  model is limited by the concept of viability. because of the bounding of the gene expression levels to discrete values , the development process st+ <dig> = f will discard every network in which the matrix w does not have an eigenvector pointing towards one of the vertices of the hypercube centered at the origin. in this sense most viable individuals in a population created using the discrete model will be essentially similar. in a continuous model, networks that have eigenvectors of the matrix w pointing to an edge or face of the hypercube can also yield viable networks. this is due to the broader range of acceptable values of the output vector. as a consequence, the continuous model should yield a more diverse population of developmentally stable matrices .

in this work, we describe another approach to a network model with continuous output generalizing that in wagner . the continuous variation in the abundance of the gene products creates additional complexity that allows a more complete description of the evolution of these networks. the model is intuitively appealing because different concentrations of transcription factors should affect gene expression quantitatively, resulting in different levels of activation and repression. the output vector would therefore be expected to be composed of elements that are continuous rather than discrete. we build on wagner's model <cit>  in order to allow detailed comparison between the continuous and discrete versions of the model.

methods
our model is similar to that of siegal and bergman <cit>  in positing a gene regulatory network of n genes represented by the n × n matrix w, where wij measures the extent to which the abundance of the product of gene j affects the production of the product of gene i. given a vector s <dig> of initial expression levels in an individual for each of the n genes, the individual is tested for "viability" in a stepwise process of "development"  that tracks the amounts of the transcription factors in the individual over time. a viable individual is an individual that develops a stable output vector s.

the concept of stability is based on the development of the individual represented at time t by the vector st. each developmental step is modeled as the result of multiplication between the matrix w and the vector st, yielding a new vector st+ <dig>  which is multiplied again by the same matrix w until the variation in st+ <dig> is less than some sensitivity constant σ when compared to previous values.

the multiplication of each row i of the matrix w by the vector s represents the interaction between every gene in the network. each value in the matrix describes the type and strength of the interaction. positive values mean activation or enhancement of production, whereas negative values mean repression or inhibition. because the values in the matrix are continuous in the interval , the absolute value describes the strength of the interaction, be it positive or negative.

by multiplying w with the vector of gene products, we scale the effects of the direct and indirect interactions, adding together the weighted effect of every interaction between each gene and every other gene in the network. the result is an updated vector calculated as:

  st+1=f∑j=1nwijsj 

where the function f is as described below. each new st+ <dig> is evaluated by a measure analogous to the variance  against the mean of the last τ  state vectors obtained in previous iterations. if φ  is less than a sensitivity margin σ, then the vector st is considered stable and its final state designated s,

  φ=1τ∑i=t-τtd 

where dx,y= ∑i=1n2∕lies in the interval  <cit>  and s¯t is the average of the expression levels over all times from τ- t to t. the number of genes in the network is n, and x and y are vectors with n elements each. the number of steps  to reach stability is taken as a measure of path length. lmax =  <dig> is the cutoff value in the number of development steps, after which a matrix is considered unstable. as a stability criterion we chose σ = 10- <dig>  this model yields viable individuals in which the levels of the transcription factors are continuous, and is a straightforward extension of wagner's model of transcription regulatory networks <cit> . both models discard networks with imaginary eigenvalues of the matrix w owing to the cyclic behavior of the output vector and the lack of convergence to stable value of s.

if one were to define st+ <dig> merely as st+ <dig> = w × st, the expression levels in st could grow to positive or negative infinity unless constrained. to constrain these values we follow siegal and bergman <cit>  in applying a scaling function  that bounds the values of the upper and lower limits of gene production to  <dig> and - <dig>  this function plays the role of confining the expression levels to the interval  in a potentially continuous fashion. specifically,

  f=2- <dig> 

which is a sigmoidal function centered at x =  <dig>  its curvature is determined by the constant a. although the bounding effect of this function is obvious, the extent to which it spreads the expression levels is subtler and depends on the curvature.

we analyzed different values of a, and found that values greater than  <dig> result in a very large variance, forcing all values of the final state vector close to either - <dig> or  <dig>  essentially making it a discrete model. between the values of  <dig> and  <dig>  however, we found that the values of the final state vector would be well distributed along the - <dig>   <dig> interval allowing us to use the model in a continuous fashion without affecting the number of viable networks we can yield through our development process. hence for all simulations in this work, we used a =  <dig> . this choice of a is virtually identical to the sigmoidal tanh function used by kaneko  <cit> 

the continuous model gives us a more complete view of the evolution of interacting genes. it allows the addition of more genes to the networks and is more efficient in maintaining stability. the notion of a continuous output vector also creates a closer relationship with the reality of gene networks and gene products, where it is not sufficient to ascertain merely whether a gene is on or off. gene product concentrations play an important role in determining the viability of individuals, and aids in the evolution and maintenance of complexity.

the different mechanisms to generate network complexity tested had a strong impact in the probability of yielding a viable individual, even in networks with many genes and especially for diploid mating. by "diploid mating", we mean that each element of the matrix w of the progeny network equals the arithmetic average of the corresponding elements in the parental matrices. the probability that a random network of  <dig> genes yields a viable individual is far smaller than that obtained by diploid mating between two viable networks suggests that sexual reproduction may be a key component in the evolution of complexity. the phenomena of insertion and deletion probably also play an important role in the evolution of complexity, given the high probability of a viable individual to remain viable after undergoing an insertion or a deletion.

the continuous model also gives insight into the mechanisms that regulate the evolution of complexity in a general setting that represents the concentration of the products of gene networks. the inclusion of gene product concentration brings the model closer to actual transcriptional networks, and perhaps gives us a better idea of the difficulty of obtaining complex networks that yield viable individuals in the real world.

RESULTS
intraclass correlation
the final stable output vector describes the gene expression levels of a viable individual. the distribution of output values on  across individuals was indistinguishable from a uniform distribution, as might be expected. we also tested whether the output vectors were correlated across individuals. to test for correlation, we examined the intra-class correlation coefficient  of the elements of n stable output vectors, each from a distinct viable network with k genes:

  icc=1n-1nks <dig> ∑i=1k2- <dig> 

the icc tests whether the final output vectors of the n viable individuals are clustered together in small regions of the space . in the equation for icc, x¯n is the sample mean of the elements in the n-th individual, x¯ is the mean of all output vectors in the population, k is the number of genes in the network, and s <dig> is the variance of the elements among the n individuals. the value of icc can be positive or negative, but a value close to zero means not correlated, whereas a value close to  <dig> or - <dig> means high intra-class correlation.

from our data for both the discrete and continuous models, for any number of genes, we found the icc value very close to zero. even with a small number of genes where there is little room for variation, the icc was still extremely low, as shown in figure  <dig> for the continuous model.

generating viable individuals
individuals were generated at random by drawing networks and initial vectors of gene expression levels from a uniform distribution on . one possible interpretation of the initial vector is that it is the level of gene products passed by maternal inheritance to the zygote, where development of the embryo would begin.

we generated  <dig> populations of  <dig> viable individuals each . figure  <dig> shows the likelihood of finding a viable network at random. it is clear that viable networks with many genes are unlikely to occur by chance.

the model depends on a set of initial conditions to start the developmental stage of the simulation using a randomly generated initial state vector. it is therefore unclear whether the viability of these individuals is determined by the choice of the initial output vector or by the wiring of the gene network.

to test the impact of the choice of an initial output vector we selected viable individuals and replaced their networks with randomly generated ones, however retaining the original initial state vector. we repeated this process  <dig> times for each individual, generating a different network each time, while tallying the number of random w matrices that supported development into a viable individual. analogously, we performed a similar test by keeping the network while randomly changing the initial state vector instead. these tests enabled an analysis of the relation between stability due to the input vector and stability due to the network.

as shown in figure  <dig>  at most 20% of the vectors tested for any number of genes in the network were responsible for stability, yielding numbers very close to those of viabilities of initial state vectors drawn at random; therefore, the initial state vector has little or no effect on generating viable individuals. the network itself, however, is highly correlated with viability. in the discrete output model, viability was determined by the choice of matrix and averaged about 70% of the  <dig> million tests.

evolution of complexity
given the very low likelihood that a random w matrix with a high number of genes will be viable , we tested how easily complexity might evolve from combining  viable networks and producing a new network that may be interpreted as the "offspring" of two viable networks.

mating was performed by defining a population of  <dig> viable networks and mating two randomly drawn networks at a time. the "offspring" network was then tested for stability by iterating random initial vectors according to equation  <dig>  this process was repeated  <dig> times to generate  <dig> new progeny networks.

haploid mating
in the process of "haploid mating", a given gene is inherited at random from the network of either parent with equal probability. accordingly, in the haploid mating process, we randomly selected individual rows from within the paternal or maternal network and copied them to create an offspring network. this process passes on parental genes without modification from one generation to the next. repeating the selection process for each row yields a new offspring network with a random set of both parents' genes.

the initial state vector of the new offspring is chosen at random to equal a stable state of one of the parents. this procedure reflects the assumption that one of the parents would be passing on the general stable gene-product concentrations to its offspring, analogous to the interaction between an oocyte and its mother during the earliest stages of development.

when applied to a population of  <dig> viable networks , haploid mating maintained a stability rate higher than 40% for progeny networks with up to  <dig> genes. the stability rate drops, however, to 30-40% in networks with  <dig> to  <dig> genes, and drops further to between 20-30% for networks with more than  <dig> genes. this result suggests that it is possible to generate complex networks with haploid mating with a much higher likelihood than generating them at random. haploid mating is especially efficient at maintaining network stability for lower complexity networks.

it is interesting to draw a parallel between haploid mating in the discrete model and the continuous one. haploid mating displays the same behavior in both models, with high efficiency in generating viable networks with a small number of interacting genes, but then efficiency falls off sharply as the number of genes increase. in the case of the discrete model, the efficiency drops to almost zero with  <dig> or more genes. in contrast, the continuous model maintains a more consistently slower drop with increasing number of genes, without ever reaching  <dig> even for networks of size  <dig> 

diploid mating
diploid individuals benefit from heterozygosity to modulate the effects of damage or deleterious mutations as well as from increasing diversity through the recombination events between the parental chromosomes. in the process of "diploid mating," each row in the w matrix of the progeny is calculated as the arithmetic mean of the corresponding rows in the w matrices of the parents. biologically, this means that the effects on gene expression are additive, and effects due to dominance, overdominance, underdominance, epigenetics, parent of origin, and so forth are ignored. taking the impact of each gene as the average of the impacts of this same gene in each parent tends to mitigate large negative or positive effects of the parental genes.

when applied to a set of  <dig> viable networks, the diploid mating model generated viable progeny networks of up to  <dig> interacting genes in 19-32% of the iterations . this percentage is not as high as that in the haploid model, but diploid mating performs better as the number of genes increases. for networks with more than  <dig> genes, the number of viable offspring networks lies between 43-48%. the positive slope of the curve shows that the diploid mechanism with additive gene effects is very efficient in maintaining stability in complex networks.

a randomly generated network with  <dig> interacting genes has an  <dig> % chance of being viable. when two viable individuals mate following the haploid-mating model, the likelihood of generating a viable network jumps to 22%, however diploid mating increases the likelihood to 47%. this increase may be due to the fact that these original two networks were already selected from a small pool of viable networks with  <dig> genes, and diploid mating maintains network stability better than haploid mating. we conclude that, while for any level of complexity  it is difficult to generate viable complex individuals at random, mating is relatively efficient in producing viable networks of the same level of complexity as those in the parents.

random insertion
the difficulty in finding a viable network with more than  <dig> interacting genes prompted the question of whether increasing the number of genes of a viable network is more successful than generating a viable network at random. to answer this question we randomly inserted a gene into a viable network and developed stable state vectors to test whether stability was retained.

a gene insertion represents the phenomenon of a new gene being fully incorporated by the genome and interacting with the other genes in the network. in the inserted gene all interaction values are chosen at random from the uniform distribution , and all pre-existing genes receive new randomly generated values for interaction with the newly inserted gene. the stable vector also receives a new randomly generated value, representing the initial concentration of the product of the new gene. the result is a new individual with an extra transcription factor that may or may not be viable when developed with the augmented network.

from a population of  <dig> viable networks we selected each in turn and tried  <dig> different random insertions and tested for stability. each insertion adds a new gene at a random place in the network. the graph in figure  <dig> shows how many of the  <dig> networks yielded at least one viable individual after insertion. the number of genes shown in figure  <dig> is the original number of genes in the network prior to the insertion. insertions had a  <dig> % success rate generating viable gene networks of  <dig> genes derived from 10-gene networks. the efficiency decreases as the number of genes increases, but still succeeds in  <dig> % of the attempts of generating a viable network with  <dig> interacting genes.

random deletion
similarly to the test with random insertions, the likelihood of obtaining a viable network after removing a gene was tested by deleting one gene at random from a viable network and developing viable individual state vectors to asses if it would remain viable. we performed  <dig> random deletions in each of the  <dig> previously generated viable networks. a gene deletion comprises a row and column deletion in the network, plus an entry deletion for the corresponding gene product in the initial output vector.

for networks with few interacting genes, loss of a gene is critical, with very few networks remaining viable after a deletion. this result is compatible with the difficulty in finding viable networks when there are few interacting genes. with more complex networks the numbers are still high, for example,  <dig> % for networks with originally  <dig> interacting genes, which is significantly greater than the 14% rate for randomly generated networks with  <dig> interacting genes. deletion maintains  <dig> % of the viable networks with  <dig> interacting genes.

CONCLUSIONS
we presented an alternative model to describe the development and evolution of gene transcription factors that allows for a continuous distribution of expression levels. this version of the model allows the study of more complex network  given the additional classes of networks that yield viable individuals. the continuous model, however, makes it more difficult to define the concept of "neighboring networks" but this may be addressed by defining a threshold below which differences between networks define them as neighbors. another limitation to our model is computing time, as the matrix multiplication in development and the tests for viability are more time consuming than in the discrete model.

authors' contributions
mc participated in the conception and design of the study and developed the computer simulations to perform the statistical analyses. cht participated in the design and coordination and helped to draft the manuscript. dlh conceived the study and participated in its design and coordination and helped to draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
mathematical background. formal mathematical background to the computations that are described in the body of this article and to compare the discrete model  to the continuous model .

click here for file

 acknowledgements
we are grateful to trevor bedford and bernardo lemos for their helpful comments on the continuous output model. this work was supported by nih grant gm <dig> to dlh.
