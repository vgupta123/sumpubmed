BACKGROUND
micrornas  are 21- <dig> nucleotide non-coding rnas that provide rapid repression of target gene expression. this repression is initiated through mirna base pairing to complementary target sites usually located within messenger rna  3’ untranslated region   <cit> . computational and experimental evidence suggest that the 5’ end of the mirna, the mirna “seed”, is most important for mediating mirna-target interactions . the mirna seed recognizes a complementary target site in the mrna, which can range from six to eight nucleotides in length  <cit> . mirnas act as sequence-specific guides that recruit protein silencing complexes and destabilize the mrna and/or interfere with translation  <cit> , and thereby provide a mechanism for either silencing or fine-tuning the translation of target mrnas  <cit> .

short rna deep-sequencing data has identified over  <dig> mirna gene loci and over  <dig> mature mirna sequences in  <dig> species. specifically, over  <dig> and  <dig> distinct mature mirna sequences have been identified in human and mouse, respectively  <cit> . computational approaches that take into account evolutionary conservation of predicted target sites suggest that over 60 % of human protein-coding genes are targeted by mirnas  <cit> , while other computational methods using pattern-based approaches for predicting mirna-target heteroduplexes estimate that over 90 % of mammalian gene transcripts are directly regulated by mirnas  <cit> . in addition, a growing body of evidence reveals that mirnas play important roles during animal development  <cit>  and almost every cellular process investigated has been shown to involve participation of mirna regulation  <cit> . due to their ability to impose rapid and tight control of gene expression, mirnas represent an important regulatory mechanism for development and disease.

many computational tools have been developed for studying mirnas. for example, several of programs are available to address challenges associated with mirna discovery  <cit>  and numerous applications enable identification of mirna target sites in mrnas . microrna target site prediction programs make use of a number of different parameters in their predictions, such as extent of complementarity to the mirna 5’ end, hybridization energy of the mrna-mirna heteroduplex, evolutionary conservation of predicted target sites, mrna secondary structure, and local 3’utr context. additionally, other software tools are available for predicting the impact of 3’utr snps on mirna binding  <cit> , for assessing the impact of mutations in mirna genes  <cit> , and for comparing the predicted set of target genes for two different mirnas  <cit> .

currently, no software is available for generating mutations to disrupt predicted mirna target sites in a given mrna sequence. for example, although the program “mrsnp”, was designed to take known snps for a given 3’utr as input and assesses whether these snps could affect mirna binding on the other hand, it is not a mutation generator program and does not have the capacity to generate random mutations. generating such mutations, however, is an important approach for examining mirna-mrna interactions experimentally. mutating a predicted mirna target site is commonly used in reporter-based approach experiments to determine whether a predicted target site can, in fact, be regulated by a candidate mirna. in addition, mutations that disrupt one or more mirna target sites in a given 3’ utr can be used to examine the biological relevance of the target site in question. one problem that can arise when a target site is mutated is that the mutation itself can create a new or “illegitimate” microrna target site . if the mirna that targets the illegitimate site is present in the cell being used in the experiment, it could confound the data. therefore, care must be taken when devising a mutation strategy to check that target site mutations do not inadvertently create new mirna target sites.fig.  <dig> the problem associated with mirna target site mutagenesis. a wild type 3’utr sequence contains a predicted 7mer-m <dig> target site for mir- <dig> . mutation disrupts the interaction between mir- <dig> and its predicted target site, but creates an illegitimate 7mer-m <dig> target site for mir-296-3p in the process 



our goal was to develop a modular, open source application that could be run through a web interface or downloaded and adapted to specialized projects. we have created a java-based system called imirp  to generate mirna target site mutations in any sequence of interest and address the problem of illegitimate mirna target site creation. users input a dna or rna sequence and specify the location of predicted mirna target sites to be mutated. imirp then automates the processes of mutation generation, illegitimate mirna target site identification, and synthesis of a final mutant sequence lacking new predicted mirna target sites. imirp is a particularly useful tool when investigating regulation of a single mrna 3’ utr by multiple mirnas, where situations such as target site overlap makes mutagenesis design more challenging to perform manually.

implementation
input user interface
the imirp user interface showing examples of input and output are shown in figs.  <dig> and  <dig>  a detailed set of instructions, “how to use imirp” is appended in the additional file  <dig> section as well as on the imirp.org website. after creating a new project, the user enters a dna or mrna sequence of interest  and specifies the organism of interest. all animal species with mature mirna sequences available through mirbase version  <dig>  are available for selection  <cit> . users then define the position of predicted mirna target sites to be mutated by selecting the nucleotide position of the input sequence that is complementary to position  <dig> of the targeting mirna . imirp will then highlight in bold lettering, a stretch of  <dig> nucleotides starting from the nucleotide position that was entered, defining the mrna region, complementary to mirna positions 2- <dig>  to be mutated . thus, for 7mer-m <dig> target sites, in which base pair complementarity occurs at mirna positions 2- <dig>  the input nucleotide position that is complementary to mirna position  <dig> is entered in the “mutation site” input window.fig.  <dig> imirp input user interface. a the user is first directed to create a project and specify project parameters. the project can be named, and in this example we have named the project “imirp test”. a dna or rna sequence must be input along with information about the species of interest. the input sequence will be displayed for viewing. finally, at least one “mutation site”, the region into which mutations will be introduced, is specified by typing the sequence position complementary to mirna position  <dig> into the textbox. all selected mutation sites, complementary to mirna positions 2- <dig>  appear bolded in the displayed original input sequence for inspection. in this example, a segment of the mouse pax <dig> 3’utr and three hypothetical predicted target sites have been used as input. b upon creation of a project, the user is asked to specify mutation parameters. in the “mutation strategy” tab, nucleotides to use for mutation and number of nucleotide changes per specified mutation site can be selected. in the “define invalid sites” tab, users can specify the types of newly created mirna target sites they do not want present in their final mutant sequence. in this case, any mutant sequences provided as output will contain two adjacent nucleotide changes per specified target site using all four nucleotides for mutation, and no mutant sequences containing newly created 8mer, 7mer-m <dig>  or 7mer-a <dig> predicted target sites will be provided as output



in designing imirp, we took into consideration the fact that mirna target sites vary in size and type   <cit> . we chose this design strategy for defining mutation sites two reasons: 1) to keep imirp simple to use and to limit computational demands of the software. microrna seed site positions 2- <dig> are used for mrna target recognition in all major target site types  <cit> . 2) disrupting base pairing between mirna positions 2- <dig> and the mrna target site by mutating multiple nucleotides in the target site has been shown to interfere with repression .

upon defining the project parameters, the imirp user interface allows researchers to specify mutation parameters . the user can select the types of illegitimate mirna target sites, termed “invalid sites”, that they wish to exclude from their mutant sequence. imirp can identify five classes of mirna target sites: 6mer, 7mer-m <dig>  7mer-a <dig>  8mer, and offset 6mer   <cit> . 6mer seed sites are complementary to positions 2- <dig> of the mirna, 7mer-a <dig> sites are complementary to positions 2- <dig> and have an a across from mirna position  <dig>  and 8mer sites are 7mer-m <dig> sites with an a across from position  <dig>  <cit> . os-6mer seed sites are complementary to positions 3- <dig> of the mirna  <cit> . imirp also recognizes predicted target sites containing a single g:u base pair. by manually selecting and using arrow buttons in the user interface, invalid site types can be designated . for instance, illegitimate perfect 6-8mer target sites can be specified as invalid by moving them into the select list entitled “invalid site types”. in this case, the result would be a final mutant sequence lacking newly created perfect 6-8mer sites, but permitting newly created 6-8mer sites containing a single g:u wobble base pair. the interface also enables the user to specify a desired mutation strategy to be executed by selecting which nucleotide bases to use for mutagenesis from a checklist. selecting only g will instruct imirp to generate mutant sequences by making nucleotide changes within specified target sites to g only. using a drop down menu, the number of nucleotide changes to introduce per specified mirna target site, from two to six changes, can be designated. for example, selecting “ <dig> changes per site” will ensure that two adjacent nucleotide changes are introduced into each selected mirna target site.

imirp workflow
conceptually, imirp can be subdivided into three modules :fig.  <dig> imirp workflow. imirp can be divided into three major modules. the sequence mutation module a feeds mutated sequences into the target site prediction module b, the results of which are supplied to the master mutant assembly module c to optimize and output a final mutant sequence

i) sequence mutation module

when imirp is run, information about the input sequence, defined regions to mutate, and desired mutation strategy are sent to the sequence mutation module . this module first divides the input sequence into “mutationally independent” regions based on the spacing between mirna target sites to be mutated. since the largest recognized mirna seed site is eight nucleotides  <cit> , two predicted target sites spaced at least seven nucleotides apart can be mutated independent of one another without generating an illegitimate target site that spans both mutations. simultaneously mutating two predicted target sites spaced less than seven nucleotides apart could generate a new target site for a different mirna containing mutated nucleotides from each of the original target sites. consequently, predicted target sites spaced less than seven nucleotides apart are grouped into a single independent region, and each independent region is annotated based on the positions of the first and last nucleotides of sites within the region relative to start of the input sequence . all specified sites within a given independent region are mutated as a unit, while sites within other regions are left unchanged. this process is repeated for each independent region .fig.  <dig> the sequence mutation module. a the input sequence is divided into “mutationally independent” regions. user-specified target sites spaced less than  <dig> nucleotides apart are grouped into a single independent region and are annotated based on the positions of the first and last nucleotides of sites within the given region. b to reduce computational overhead, sites within a given independent region are mutated as a unit, while sites in other regions are unchanged



ii) target site prediction module

mutant 3’utr sequences generated by the sequence mutation module are sent to the target site prediction module . this module is responsible for identifying predicted mirna target sites present in each mutant sequence that are absent from the original input sequence. the custom imirp mirna prediction component uses pattern recognition to identify regions of each mutant 3’utr sequence that are complementary to the 5’ seed regions of known mature mirnas. high confidence fasta-format mirna sequences were obtained from the most recent release of mirbase, version  <dig>  <cit> . mirbase defines a high confidence mirna sequence as having at least ten reads mapping to each arm of the pre-mirna, or having at least five reads mapping to each arm and at least  <dig> reads in total  <cit> .

following mirna target site identification, the prediction module compares the input sequence target site predictions to predictions for each mutant sequence. information about predicted sites present in each mutant sequence that are absent from the input sequence  are stored in a database along with the respective mutant sequences . information in the database is accessed by the master mutant assembly module  for synthesis of a final mutant sequence.fig.  <dig> the target site prediction module. predicted mirna target sites within input and mutant sequences are identified using a custom component that identifies predicted target sites based on complementarity to the mirna 5’ end. fasta-format mirna sequence data was collected from mirbase version  <dig>  <cit> . information about predicted sites present in each mutant sequence that are absent from the input sequence are stored in a database for analysis



iii) master mutant assembly module

the master mutant assembly module first eliminates all mutant sequences containing illegitimate mirna target sites that were specified as invalid through the user interface. this process is repeated for each independent region. as valid mutations for each region are generated, they are displayed in an output user interface . the output interface displays up to five valid mutants for each independent region, indicating the location of specified six nucleotide “mutation sites” and mutated nucleotides. here, the user can select a single desired mutant for each independent region and imirp generates an assembled mutant sequence in which all specified mirna target sites have been mutated without creating any illegitimate predicted target sites of the types specified. a zip folder containing four files is made available for download through the output user interface. a project information text file contains the assembled mutant dna sequence, and three csv files contain information about: i) mirna target site predictions for the input sequence, ii) mirna target site predictions for the assembled mutant sequence, and iii) new predicted mirna target sites present in the mutant sequence. if any regions fail to generate valid results, the user will be alerted to reprocess those regions using a different mutation strategy. accumulated results from multiple mutation runs are displayed in the results tab of the output user interface. in the future, we plan to annotate each valid mutant sequence displayed in the results with a “mutation run identifier” so that it is clear which mutation parameters were used to generate each sequence.fig.  <dig> imirp output user interface. input mutation sites spaced less than seven nucleotides apart are grouped into independent regions and each region is mutated independently of other regions. the output user interface displays up to five mutant sequences for each region that satisfy the specified mutation parameters. for example, the output mutations for imirp test  will not have generated any new 8mer, 7mer-m <dig>  or 7mer-a <dig> predicted mirna target sites. the original input sequence for each region is displayed above the mutants for comparison, and brackets denote the bounds of each specified mutation site. the user must select one desired mutant for each region, and the changes are displayed as an assembled mutant sequence. once the selection process is complete, the user may download a folder containing information about their assembled mutant sequence, and predicted mirna target sites in the input and mutant sequences





project organization
imirp’s code is organized into two separate scala build tool  projects: imirp core and imirp web. imirp core contains the data model and the primary business logic but has no presentation layer. core functionality is exposed through java services and akka actors, and must be programmatically interacted with. imirp web depends on imirp core and exposes the functionality of imirp core to an end user via a web interface. this multi-project organization scheme was chosen to keep the presentation logic separate from the core business logic, thus allowing imirp to support alternative core or presentation implementations in the future. additionally, this organizational approach allows imirp to be run headless  or to be integrated with other projects or systems as a library.

mutant sequence generation algorithm
imirp’s mutation generation algorithm is essentially a random nucleotide sequence permutation generator. as input, it accepts a dna or rna nucleotide sequence, a list of sites, a set of allowable nucleotide types for mutagenesis, number of allowable nucleotide changes per site, a mutation region, and a callback. the algorithm iterates over each site in the given independent mutation region to apply nucleotide changes to each site. to accomplish this, the algorithm selects a random nucleotide from the list of allowable nucleotides and replaces the nucleotide in the input sequence at the start of the site. this process is repeated for subsequent nucleotides contained within the given site. a mutant sequence is produced once all sites have been processed in this way. due to the simplicity of this algorithm, some mutant sequences will not satisfy all specified mutation criteria. as such, all mutant sequences must be passed through a filter that either accepts or rejects the mutant based on whether it satisfies all criteria. finally, if a mutant sequence is accepted by the filter, the callback is activated and the mutant sequence is passed on for further processing .

microrna target site prediction algorithm
the target site predictor uses a pattern matching algorithm to detect mirna seed matches to an input sequence. to detect seed matches, the algorithm iterates over a list of mirna sequences, from the mirbase high confidence database, and compares the first eight nucleotides  of each mirna entry for complementarity to the input sequence. an entry is compared to a sequence by scanning across the sequence using an eight nucleotide sliding window. before each advancement of the window, a hierarchy of conditions are checked to determine whether a seed match is present. if a seed match is found, the result is stored, the window is advanced, and the process repeats until the end of the sequence is reached.

the condition hierarchy begins by comparing the first nucleotide  of the sequence window to the last nucleotide of the mirna 5’ end . if those nucleotides are a match, the next five nucleotides  are checked for matches. if any of these nucleotides are not a match, no seed match is possible and the window will advance. if they do match, then an 8mer, 7mer-m <dig>  or os-6mer seed match is known to be present. the condition hierarchy is then further evaluated to check for a match between sequence position  <dig> and mirna position  <dig>  if this match is not present, then an os-6mer seed match is identified. if this match is present, the seed match is either an 8mer if the last nucleotide of the sequence window  is an adenosine, or it is a 7mer-m <dig> if the last nucleotide is not adenosine. if the first nucleotide of the sequence window did not match mirna position  <dig>  then only a 7mer-a <dig> or a 6mer seed match are possible, given that sequence positions 2- <dig> and mirna positions 7- <dig> have been found to match. the seed match is a 7mer-a <dig> if the last nucleotide of the sequence window is adenosine, or the seed match is a 6mer if the last nucleotide is not adenosine. two nucleotides are considered a match if the following conditions are true: the sequence nucleotide is a and the mirna 5’ end nucleotide is t/u or vice versa, the sequence nucleotide is c and the mirna nucleotide is g or vice versa. if the user allowed g:u pairs and if a g:u pair has not already been found, two nucleotides will be considered a match if the sequence nucleotide is t/u and the mirna nucleotide is g or vice versa .

system architecture
imirp was developed in the java programming language. java was chosen for its extensive catalogue of third party libraries and for its cross-platform support.

imirp’s architecture is based on a model-view-controller  architecture consisting of a view layer for presenting information, a controller layer for applying business logic, and a model layer for storing information. in its current form, the view layer is driven by the play framework  and angularjs. play accepts incoming http requests and maps those requests to view templates. these view templates are partially rendered by play and then returned as html and javascript for final rendering by angularjs in a user’s browser. the controller layer is a shared responsibility between imirp web and imirp core. imirp web’s portion of the controller layer is responsible for mapping http requests to imirp core’s services and returning results from those services as rendered templates. currently, the model layer exists entirely within imirp core, but this may change in the future as imirp web may require some of its own models for features that are specific to presentation.

mirbase data import
currently, known mirna data is imported from the high confidence dataset  that is provided by mirbase version  <dig>  mature.fa is a text file database of fasta-format, mature mirna sequences. imirp parses this database and imports it into its own internal format for use by imirp’s target site predictor. to accomplish this, an import utility that could read the mature.fa dataset and import mirnas was created. the import utility was designed to allow alternative mirna datasets to be imported provided that they follow a similar fasta format. this enables imirp to stay current as new mirna datasets become available. presently, an alternative mirna dataset can only be used by altering imirp’s global configuration file and restarting the application. in future versions of imirp, we may enable use of custom mirna datasets that could be uploaded for specific projects. this way, each individual project could specify a mirna dataset that best meets its requirements.

RESULTS
in order to facilitate the generation of mirna target site mutations in the mrna 3’ utr, we have designed imirp, a program that automates the entire process of generating mutant sequences. a key feature of imirp is its ability to suggest mutations that lack illegitimate mirna target sites as such sites have the potential to complicate experiments aimed at examining mirna-target regulation.

computational time optimization
the number of sequences generated by the sequence mutation module increases rapidly with increasing predicted target sites to mutate. each of these mutant sequences then needs to be processed to identify any illegitimate target sites generated. as a result, one problem that needed to be addressed in the implementation of imirp was the large computational time required to generate a final mutant sequence when mutating many predicted mirna target sites simultaneously. we implemented several strategies below to address this problem:i) limit mirna target site mutations to six nucleotide motifs

nucleotide changes introduced into the region complementary to mirna positions 2- <dig> have been found to create the most significant reduction in regulation by the targeting mirna  <cit> . additionally, by limiting the problem space for target site mutagenesis to six nucleotide regions, we were able to reduce the number of possible mutant sequences and thus the computation time. a limitation to this approach is that some examples of “seedless” mirna target sites have been identified. these rely more heavily on binding the 3’ end of the mirna, or contain mismatches or bulges between the mirna seed and its target  <cit> . however, comparative analysis of orthologous mrnas suggests that target sites complementary to the 5’ end of the mirna are more evolutionarily conserved than expected by chance  <cit> . additionally, mrna and protein expression analysis reveals that messages containing mirna seed matches are preferentially regulated by mirnas  <cit> . as such, we decided to focus on an approach that restricts mutagenesis to the six nucleotide region complementary to mirna position 2- <dig> 

ii) introduce adjacent nucleotide changes per specified seed site

even in the presence of extensive 3’ pairing, single nucleotide mismatches introduced into a mirna target site complementary to mirna positions 2- <dig>  the core target site, have a large impact on target site efficacy  <cit> . based on these results, we reasoned that a minimum of two nucleotide changes in this region would effectively abolish regulation by the targeting mirna  <cit> . additionally, requiring that nucleotide changes be adjacent reduces the number of possible mutants generated, improving processing speed, while also reducing the number of illegitimate target sites created by narrowing the region of sequence that is altered. for an independent region containing three non-overlapping predicted target sites, over  <dig> billion different mutants are possible when any combination of at least two nucleotides within a core target site are mutated to any permutation of the four nucleotide bases . however, when only two adjacent nucleotide changes are permitted per site, the number of possible mutant sequences for an independent region containing three non-overlapping sites is reduced to approximately  <dig>  . it should be noted that through the input user interface, it is possible to select a mutation strategy that will introduce more than two nucleotide changes per specified target site.

iii) divide the input sequence into independent regions based on inter-site spacing

since 8mer target sites are the largest recognized sites  <cit> , predicted mirna target sites spaced seven or more nucleotides apart can be mutated without generating a new predicted mirna target site that spans both mutations. as such, sites spaced less than seven nucleotides apart are grouped into independent regions, and are all mutated as a unit. mutating one region at a time, while keeping the remainder of the sequence unchanged, significantly reduces the number of permutations of redundant mutations that are generated  and dramatically improves processing speed. expanding on the above example, if two independent regions containing three non-overlapping predicted target sites are mutated together, over  <dig> billion mutant sequences are possible. however, if these two regions containing three sites each are mutated separately of one another, approximately  <dig>  mutant sequences are possible .

iv) custom imirp mirna target site prediction component

initially, we used the pita executable in the target site prediction module. pita assigns each predicted mirna target site a score based on the difference between the free energy of mirna-target duplex formation and the cost of unpairing mrna secondary structure in the region of the predicted target site  <cit> . though evidence suggests that mirna target site accessibility  <cit>  and local target site environment  <cit>  can impact target site efficacy, some evidence also suggests that mrna secondary structure is an insufficient predictor of target site functionality  <cit> . since we are primarily concerned with creating illegitimate target sites having the potential to be functional, this feature of the pita target site prediction component was not needed. imirp’s custom target site predictor uses only pattern recognition to identify five types of target seed site   <cit>  and is therefore less computationally demanding, thus improving processing time.

though imirp is capable of identifying mirna target sequences, it is not recommended for use as a target site prediction tool. since it predicts mirna seed matches based only on sequence complementarity to mirna 5’ ends, it is an over-predicting tool and will produce many false-positive predictions. many superior programs are available to address the problem of mirna target identification .

v) stop generating mutant sequence once five valid mutants have been identified

the imirp web application needed to be designed such that many users can run projects simultaneously. consequently, we wanted a avoid situations where a single user could consume a large portion of the web server’s resources. the imirp application stops generating mutant sequences once at least five valid mutants have been identified for each independent region or once the sequence mutation module has effectively exhausted all mutation possibilities. this ensures that a single mutation request will not continue to process unnecessary sequences and continue to consume resources. due to the sequence mutation module generating mutations faster than the target site prediction module can scan them; it is possible that more than five valid mutations may be identified. only five valid mutant sequences are displayed for each independent region in the results tab of the output user interface. if a user is interested in having all valid mutations displayed, they can download the source code and run the application on their own machine.



generation of mutant sequences
we made several attempts to devise an algorithm that would not generate duplicate mutant sequences or mutants that did not satisfy all criteria. in an attempt at preventing duplicate mutations, a sequential permutation generation strategy was used. however, this approach was subject to spending long time periods generating undesirable mutants. for some problems, the sequential approach finds solutions very quickly while with others it does not find any solutions within a feasible time period. the random approach was found to more reliably and consistently produce results across a diverse set of mutation problems.

we also initially attempted to develop a mutation generation algorithm that would only generate mutant sequences that satisfy all specified criteria without wasting computation on generating mutants that do not. this approach was abandoned because it was both difficult to make such algorithms and they would require the development of new mutation generation algorithms for every set of criteria. as such, we decided it was preferable to keep separate the concepts of mutant sequence generation and criteria selection, thus enabling the user to specify diverse mutation criteria. for projects requiring disruption of a large number of target sites and having relatively simple criteria, it may be preferable to devise a mutation generation algorithm that does not require the additional filtering step. an example of simple criteria is: mutations must introduce two nucleotide substitutions per site using any of the four nucleotides. whereas an example of more complex requirements is: mutations must introduce at least two nucleotide substitutions, nucleotide substitutions must be adjacent and must not contain guanosine. however, if disruption of one or a few sites is desired, these inefficiencies do not appreciably impact processing speed.

testing the imirp target site predictor and mutation generator
to determine whether imirp could accurately predict mirna target sites, we input  <dig> nucleotide segments from human, mouse and fly 3’utr sequences and compared output predictions for wild type sequences to predictions generated by targetscan  <cit>  and pita  <cit>  for the same sequences . all 3’utr sequence data was collected using the university of california, santa cruz  genome browser  <cit> . care was taken when making comparisons to pita’s predictions. as of the first release of imirp, pita’s database of mature mirna sequences, obtained from mirbase version  <dig> , is out of date. additionally, pita’s seed site prediction logic is not based on the currently accepted seed site classification  <cit> . consequently, mature mirna sequences available through mirbase were used to verify pita’s seed site type predictions. our results show that imirp is capable of accurately predicting 8mer, 7mer-m <dig>  7mer-a <dig> and 6mer seed sites. one limitation of these tests is that targetscan and pita do not recognize os-6mer seed sites. however, manual comparison between imirp’s os-6mer seed predictions and mature mirna sequences in mirbase reveals that imirp is capable of correctly predicting os-6mer seed sites . target site prediction output for three sample 3’utr sequences is provided in additional file 1: figure s <dig> 

to test the program’s capacity to successfully introduce mutations into many sites simultaneously, while also ensuring that new predicted target sites for other mirnas were not created, we used the aforementioned  <dig> nucleotide 3’utr sequences and target site predictions as input into imirp. we compared the imirp’s target site prediction output between the wild type and mutant sequences to ensure that specified target sites were successfully mutated and that new sites were not created. sample output for a  <dig> nucleotide segment from mouse pax <dig> 3’utr containing six predicted target sites is shown in additional file 1: figure s <dig> 

software limitations
though imirp is capable of identifying predicted illegitimate mirna target sites created following mutation of existing target sites, this software does not identify mrna regulatory elements required for non-mirna processes. for example, the process of introducing mutations into a 3’utr sequence could create an rna-binding protein motif or abolish a pre-existing polyadenylation signal. a freely available web application called transterm could be used to address this shortcoming  <cit> . transterm can identify protein binding sites in mrna 3’utrs, and thus a user could compare transterm results between their original input and mutant 3’utr sequences to ensure that no known motifs had been created or disrupted. in future versions of imirp, we may implement a tool that identifies known polyadenylation signal motifs, and ensures that polyadenylation signals present in the input sequence are not disrupted and new polyadenylation signals are not created following mutation.

one limitation associated with identifying only five classes of target seed site is that other seed site types have been identified that may also be functional. in vivo reporter assays suggest that 4mer and 5mer seed sites also having extensive complementarity to the mirna 3’ end can be functional  <cit> . however other studies investigating mirna-dependent repression in vivo demonstrate that 5mer seed matches, complementary to mirna positions 2- <dig>  could not mediate repression  <cit> . as a consequence, we designed the imirp target site predictor such that it does not identify 4mer or 5mer target site types. genome-wide mirna-mrna interaction maps from mouse brain generated by argonaute high-throughput sequencing of rna isolated by crosslinking immunoprecipitation  also suggest that two additional target site types may exist. a third type of 6mer target site, 6merα , is capable of binding ago-mirna  <cit> . additionally, mirna recognition elements containing g nucleotide bulges at positions 5- <dig> in the mrna  are evolutionarily conserved and functional in vivo  <cit> . imirp is currently incapable of identifying 6merα and g-bulge target sites and, as a consequence, these site types may be created upon mutation of existing sites. based on user demand, we may choose to enable identification of 6merα and g-bulge sites though the imirp target site predictor.

often, experiments designed to disrupt a specific sequence motif remove the sequence by deletion as opposed to mutating several nucleotides. the software could be designed to permit deletion mutations as well, however this would significantly complicate illegitimate target site identification. imirp compares target site predictions between the input and mutant sequences. any predicted target sites that are shared between the input and mutant sequences, i.e. target sites for the same mirna, located at the same position within the sequence, are not considered illegitimate. information about the position of a predicted target site within the sequence is critical for identifying legitimate versus illegitimate target sites. enabling deletion mutations will require a more complicated illegitimate target site identification algorithm. we plan to enable the use of insertion and deletion mutations as part of imirp’s mutagenesis strategies in future versions. for the time being, users can download the imirp source code and modify it to enable insertion/deletion mutations.

unfortunately, it is challenging to predict with certainty whether a mirna target site has successfully been abolished by mutation without experimentation. based on previous experimental evidence  <cit> , introducing at least two nucleotide changes into the mrna region complementary to mirna positions 2- <dig> is likely to abolish regulation by the targeting mirna. similarly, predicting the functionality of a newly created mirna target sites is also challenging without experimental validation. for example, a known lys- <dig> site from the cog- <dig> 3’utr in c. elegans is often nonfunctional when transplanted into different 3’utr contexts  <cit> . imirp provides information about all illegitimate target sites created in the output mutant sequence. available databases documenting validated mirna-target interactions  and known mirna expression profiles  could be used to assist in determining whether illegitimate target site predictions are likely to occur.

CONCLUSIONS
in summary, we have described imirp, software that enables mutation of one or more predicted mirna target sites within a sequence of interest while ensuring that new predicted target sites for other mirnas are not created in the process. the imirp input interface allows the user to input a sequence of interest and specify the location of one or more target sites to mutate, species of interest, invalid target site types, and mutation strategy. the output interface allows the user to select a desired mutant for each independent region, and view a finalized mutant sequence. upon completion, the assembled mutant sequence, and mirna target site predictions for the input and mutant sequences are made available for download. imirp source code is accessible open source through github  under the apache version  <dig> license, and is available as a web application at imirp.org.

ethics approval and consent to participate
not applicable.

consent for publication
not applicable.

availability of data and materials
project name: imirp

project homepage: imirp.org

operating system: windows, osx, linux

programming language: java, javascript

other requirements: mongodb, java <dig>  sbt

license: mit

additional file
additional file 1: supplementary material. 

 abbreviations
3’utr3’ untranslated region

6mermirna target site complementary to mirna positions 2-7

7mer-a1mirna target site complementary to mirna positions 2- <dig> having an a across from mirna position 1

7mer-m8mirna target site complementary to mirna position 2-8

8mermirna target site complementary to mirna positions 2- <dig> and having an a across from mirna position 1

imirpillegitimate mirna predictor

mirnamicrorna

mrnamessenger rna

os-6meroffset-6mer, mirna target site complementary to mirna positions 3-8

pitaprobability of interaction by target site accessibility

competing interests

the authors declare that they have no competing interests.

authors’ contributions

bcr designed the project, tested the software, and prepared the manuscript. tsw designed, developed and tested the software, and edited the manuscript. plh edited the manuscript. rlc edited the manuscript and supervised the entire project. all authors read and approved the entire manuscript.

authors’ information

bcr is a phd candidate in the neuroscience program at the university of victoria . tsv is the cto of the victoria-based software company referral saasquatch . plh is an associate professor in the departments of biochemistry/microbiology and biology at the university of victoria . rlc is an associate professor in the department of biology at the university of victoria .

