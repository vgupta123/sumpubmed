BACKGROUND
biological research is producing vast amounts of data  at a prodigious rate. most of this data is made freely available to the public, and this has created a large and growing number of internet and world wide web-accessible biological data resources which are characterized by being distributed, heterogeneous, and having a large size variance, i.e. huge, mega-databases such as uniprot  <cit>  down to medium, small or "boutique" databases  generated for medium or small scale experiments or particular purposes. most computational analyses of biological data will require using multiple integrated datasets, and integrated data along with rich, flexible and efficient interfaces to it encourages exploratory data analysis which can lead to serendipitous new discoveries: the sum is greater than its parts. currently, integration often must be done manually in a labor and time intensive way by finding relevant datasets, understanding them, writing code to combine them, and finally doing the desired analysis. the basic requirements for better, more seamless integrated analysis are uniformity and accessibility; data are ineffectual if scattered among incompatible resources.

web search engines and hyperlinks are the basic and commonly used ways to find things on the web and navigate web content but they do not enable fine-grained cross-site analysis of data. to improve upon this, one key issue is the need for standardization and its widespread use, and tools supporting and enabling it. biological data is too vast for brute-force centralization to be the complete solution to data interoperability. we must have standards and systems for people and groups to work independently creating and making data available  but still in the end all or most of the pieces of biological knowledge and data are connected together in semantically rich ways. the w3c's  <cit> semantic web  <cit>  is a promising candidate: it allows web information to be expressed in fine-grained structured ways so applications can more readily and precisely extract and cross-reference key facts and information from it without having to worry about disambiguating meaning from natural language texts. standard and machine-readable ontologies such as the gene ontology  <cit>  are also created and their common use encouraged to further reduce semantic ambiguity, although there is a need to make these ontologies more machine-friendly  <cit> .

a key abstraction or "scaffold" for representing biological data is the notion of unique identifiers for biological entities and relationships among them. for example, each protein sequence in the uniprot database is given a unique accession, e.g. q <dig>  which can be used as a key to access its uniprot sequence record. uniprot sequence records also contain cross-references to related information in other databases, e.g. related gene ontology and pfam identifiers . two identifiers such as q <dig> and go: <dig> and the cross-reference between them can be viewed as a single edge between two nodes in a graph, and conceptually then a large, important part of biological knowledge can be viewed as a massive graph whose nodes are biological entities such as proteins, genes, etc. represented by identifiers and the links in the graph are typed and are the specific relationships among the biological entities. figure 1a is a conceptual illustration of the graph of biological identifier relationships; the problem is that this graph only concretely exists piecemeal or not at all.

a basic problem preventing this graph of relationships from being more fully realized is the problem of nomenclature. often, there are many synonyms for the same underlying entity caused by independent naming, e.g. structural genomics centers assigning their own protein identifiers in addition to uniprot's. there can also be lexical variants of the same underlying identifier . synonyms are a small part of the overall problem, however, and more generally there are many kinds of relationships including one-to-one and one-to-many relationships. for example, a single gene ontology or pfam identifier can be related with many uniprot identifiers . pfam represents an important structuring principle for proteins and the genes they come from, the notion of families  based on evolution; proteins sharing common pfam domains are evolutionarily related  and likely have the same or similar functions. gene ontology consists of three widely used structured, controlled vocabularies  that describe gene products such as proteins in terms of their associated biological processes, cellular components and molecular functions in a species-independent manner. the conceptual graph of identifier relationships is richly connected, and a transitive closure even a few levels deep can lead to indirect relationships with a great number of other entities. being able to store, manage, and work with this graph of entities and relationships can lead to many opportunities for interesting exploratory analysis and linkhub is such a system for doing this.

linkhub: a system for loosely coupled, collaborative integration of biological identifier relationships
the semantic web is increasingly gaining traction as the key standards-based platform for biological data integration  <cit> , and since linkhub is a natural fit to semantic web technologies we use them as the basis of linkhub. linkhub is designed based on a semantic graph model, which captures the graph of relationships among biological entities discussed above. to provide a scalable implementation while also exploring semantic web database technologies, we implemented linkhub in both mysql  <cit>  and resource description framework or rdf  <cit>  databases. linkhub provides various interfaces to interact with this graph, such as a web frontend for viewing and traversing the graph as a dynamic expandable/collapsible html list  and a mechanism for viewing particular path types in the graph, as well as with rdf query languages.

centralized data integration to an extent does make sense, e.g. a lab or organization might want to create a local data warehouse of interconnections among its individual data resources; but it does not want to have to explicitly connect its data resources up to everything in existence, which is impossible. the key idea is that if groups independently maintaining data resources each connect their resources up to some other resource x, then any of them can reach any other through these connections to x, and we can collectively achieve incremental global data integration in this way. linkhub is a software architecture and system which aims to help realize this goal by enabling one to create such local minor hubs of data interconnections and connect them to major hubs such as uniprot in a federated "hub of hubs" framework and this is illustrated in figure 1b.

paper organization
in the results section next, we will demonstrate how linkhub enables novel information retrieval to documents attached to linkhub graph nodes based on the relational structure of the linkhub graph; a particular practical use case of this, providing "family views" to data, will be given. we will then give concrete examples of the kinds of integrated, cross-database queries that can be done with linkhub, in combination with a previous system of ours called yeasthub, in support of scientific exploratory analysis; example queries discovering "interologs" of yeast protein interactions in the worm and exploring the relationship between gene essentiality and pseudogene content will be given. we will then discuss related work to linkhub and future directions before concluding. in the methods section we describe implementation details of linkhub, including its data models and how they are populated with data and linkhub's web interactive and query interfaces.

RESULTS
novel information retrieval based on linkhub relational graph structure
the "path type" interface to linkhub allows one to flexibly retrieve useful subsets of the web documents attached to identifier nodes in the graph based on the graph's relational structure. normal search engines relying on keyword searches could not provide such access, and linkhub thus enables novel information retrieval to its known web documents. an important practical use of this "path type" interface is as a secondary, orthogonal interface to other biological databases in order to provide different views of their underlying data. for example, molmovdb  <cit>  provides movie clips of likely 3d motions of proteins, and one can access it by pdb  <cit>  identifiers. however, an alternative useful interface  is a "family view" where one queries with a pdb identifier and can view all available motion pages for proteins in the same family as the query pdb identifier. linkhub also provides a similar "family view" interface to structural genomics data in the spine system  <cit> . the system is flexible and one can easily imagine other similar applications, e.g. a "functional view" where all pages for proteins that have the same gene ontology function as a given protein are shown or a "pseudogene family view" where all pages for pseudogenes of proteins in the same family are shown. while the "path type" interface is a simple way of providing novel, relational access to linkhub identifier node-linked documents, rdf query language access to the linkhub relational graph would allow the most flexible novel information retrieval.

cross-database rdf queries
to demonstrate the data interaction and exploration capabilities engendered by the rdf version of linkhub, the rdf-formatted linkhub dataset is loaded into our yeasthub  <cit>  system which uses sesame  <cit>  as its native rdf repository. two demonstration queries below written in serql   <cit>  demonstrate one can efficiently do the kinds of interesting preliminary scientific investigation and exploratory analysis commonly done at the beginning of research initiatives . these queries make use of information present in both yeasthub and linkhub , and linkhub is used as 'glue' to provide connections  between different identifiers. it is noteworthy that these queries can be formulated and run in relatively little time  and they roughly duplicate some results from published papers. in effect, linkhub does the up-front time-consuming manual work of integrating multiple datasets, and this integrated data is generally useful for efficient formulation and execution of queries, which is in contrast to the papers which likely required extensive "one-off" effort to combine the necessary data to achieve their results.

query 1: finding worm 'interologs' of yeast protein interactions
proteins rarely act in isolation and often interact with one another and other molecules to perform necessary cellular actions. experimental determinations of protein interactions are expensive and computational methods can leverage them for further interaction predictions. with this query we want to consider all the protein interactions in yeast  and see how many and which of them are present as evolutionarily related homologs in worm , also known as interologs  <cit> , i.e. protein pairs in worm corresponding to evolutionarily related known interacting pairs in yeast. we thus start with a dataset containing known and predicted yeast protein interactions which is already loaded into yeasthub; here the interactions are expressed between yeast gene names. part of the serql statement for this query together with a portion of its corresponding output can be seen in figure  <dig>  however, abstractly, the query is doing the following. for each yeast gene name in the interaction set we can use linkhub's data as 'glue' to determine its homologs  in worm by traversing identifier type paths in the linkhub relationship graph like the following:

yeast gene name → uniprot accession → pfam accession → uniprot accession → wormbase id.

then, for each pair in the yeast protein interaction dataset, we determine if both of its yeast gene names lead to wormbase ids  <cit>  in this way and print those wormbase ids as possible protein interactions if so.

query 2: exploring pseudogene content versus gene essentiality in yeast and humans
pseudogenes are genomic dna sequences similar to normal genes  but are not expressed into functional proteins; they are regarded as defunct relatives of functional genes  <cit> . in the queries here we explore the relationship between gene essentiality  and the number of pseudogenes in an organism. we might hypothesize that more essential genes might have larger numbers of pseudogenes, and we explore this idea with queries of the joined yeasthub and linkhub data. first, yeasthub has the mips  <cit>  essential genes dataset, and we use this as our data on gene essentiality; linkhub contains a small dataset of yeast pseudogenes  <cit> .

abstractly, for each yeast gene name in the list of essential genes, we determine its pseudogenes by traversing identifier type paths in the linkhub graph like the following:

yeast gene name → uniprot accession → yeast pseudogene

for each essential yeast gene we then determine how many pseudogenes it has. we can then inspect the list of essential genes to see if there is a relationship between essentiality and number of pseudogenes. humans have a large number of known pseudogenes  <cit>  but gene essentiality is difficult to characterize in humans . since essentiality is well studied in yeast, one thing we can do is determine the human homologs of yeast essential genes, which would perhaps likely be "more important" in a survival sense, and examine them for patterns associated with essentiality. for each yeast gene name in the list of essential genes, we can find the homologous pseudogenes in human by traversing identifier type paths in the linkhub graph like the following:

yeast gene name → uniprot accession → pfam accession → human uniprot id → uniprot accession → pseudogene lsid

part of the serql for the first query  and results from both can be seen in figure  <dig>  and they show that few yeast essential genes are associated with pseudogenes whereas this is not the case with human. this may reflect the difference in processes of creation of the predominate numbers of yeast and human pseudogenes .

discussion
related work
the basic conceptual underpinnings of linkhub, i.e., the importance of biological identifiers and linking them, was given by karp  <cit> . linkhub uses a semantic web approach to build a practical system based on and extending karp's ideas on database links. the semantic web approach can also be used to implement database integration solutions based on the general approaches of data warehousing  <cit>  and federation  <cit> . essentially, data warehousing focuses on data translation, i.e. translating and combining multiple datasets into a single database, whereas federation focuses on query translation, i.e. translating and distributing the parts of a query across multiple distinct databases and collating their results into one. a methodological overview and comparison of these database integration approaches was discussed in the biomedical context  <cit> . linkhub's architecture is a hybrid of these two approaches: individual linkhub instantiations are a kind of mini, local data warehouse of commonly grouped data and these are connected to large major hubs such as uniprot in a federated fashion; efficiency is gained by obviating the need for all source datasets to be individually connected to the major hubs.

linkhub differentiates itself by not integrating all aspects of biological data but rather focusing on an important and more manageable high-level structuring principal, namely biological identifiers and the relationships  among them; hyperlinks to identifier-specific pages present in the "links" section of the linkhub web interface give access to additional attributes and data. in fact, our yeasthub system addressed integration more generally by transforming many datasets to common rdf format and storing and giving rdf query access to them in an rdf database. the problem with yeasthub was that the integration was thin, with rich connections among the integrated datasets being limited. linkhub is thus useful and complementary to yeasthub in this respect as a "connecting glue" among the datasets in that it makes and stores these cross-references and enables better integrated access to the yeasthub data; the example queries above demonstrated this.

linkhub's primary web interface can be viewed as a kind of "semantic web browser". other work has also attempted to build browsers for semantic web data, including haystack  <cit> , sealife  <cit> , and bioguide  <cit> . linkhub is a more lightweight browser than haystack  and differs from sealife by being data-centric  as opposed to document-centric . bioguide uses rdf similar to linkhub, but it is limited in that it focuses on abstract conceptual modelling of resources and their interconnections rather than on instance data as linkhub; also its interface presents the data using graph drawing software with java, whereas linkhub is more lightweight and relies only on the web browser with javascript. finally, there have been a number of graph database systems and query languages developed through the years but they suffer from being proprietary; none have developed into widely used standard systems. however, it should be pointed out that some of these systems support advanced graph data mining and analysis operations not supported by rdf query languages and these features might be necessary for effective analysis of biological data represented in rdf  <cit> .

future directions
currently, linkhub has limited web document hyperlinks attached to its nodes, and if this could be increased the utility of the novel information retrieval based on querying the linkhub relational graph, e.g. "path type" interface, would be enhanced. we are working to leverage the rich information in the linkhub relational graph for enhanced automated information retrieval to web or scientific literature  documents relevant to identifier nodes, e.g. proteomics identifiers, in the graph. a simple search for the identifier itself would likely not give optimal results due to conflated senses of the identifier text and identifier synonyms. in general, we need to consider and query for the key related concepts of an identifier, and these are present in the linkhub subgraph surrounding the identifier. we consider the web pages attached to the identifiers in the subgraph as a "gold standard" for what additional relevant documents should be like, and we plan to use them as training sets to construct classifiers used to score and rank additional documents for relevance. we feel that this idea could be generalized and that the semantic web, which provides detailed information about terms and their relationships, could be leveraged to provide enhanced automated information retrieval or web search for semantic web terms.

we also hope to explore how other relevant semantic web-related technologies could be effectively used in linkhub, in particular named graphs  <cit>  and life science identifiers or lsids  <cit> . named graphs allow rdf graphs to be named by uri, allowing them to be described by rdf statements; named graphs could be used to provide additional information  about identifier mappings, such as source, version, and quality information. lsid is a standard object naming and distributed lookup mechanism being promoted for use on the semantic web, with emphasis on life sciences applications. an lsid names and refers to one unchanging data object, and allows versioning to handle updates. the lsid lookup system is in essence like what domain name service  does for converting named internet locations to ip numbers. we could possibly use lsid for naming objects in linkhub and incorporate lsid lookup functionality. finally, like software such as napster and gnutella did for online file sharing, we plan to explore enhancing linkhub to enable multiple distributed linkhub instantiations to interact in peer-to-peer networks for dynamic biological data sharing, possibly using web services technologies such as web services description language   <cit>  and universal description, discovery and integration   <cit>  for dynamic service discovery, and available peer-to-peer toolkits.

CONCLUSIONS
our paper demonstrates the natural use of semantic web rdf to inter-connect identifiers of data entries residing in separate web-accessible biological databases. based on such a semantic rdf graph of biological identifiers and their relationships, useful, non-trivial cross-database queries, inferences, and semantic data navigation can be performed through web interactive and query access. in addition, these semantic relationships enable flexible and novel information retrieval access based on queries of the linkhub graph's relational structure to web documents attached to identifier nodes. linkhub also can simplify and manage connections to major hubs such as uniprot for a lab or organization. linkhub can be evaluated by considering its current active and practical use in a number of settings. we have already established the "hub of hubs" relationship between uniprot and linkhub . in addition, linkhub cross-references the targets of the structural genomics initiative to uniprot and serves as a "related links" and "family viewer" gateway for the northeast structural genomics consortium with which we are affiliated; linkhub also serves as the "family viewer" for molmovdb. linkhub is a step towards answering the question "a life science semantic web: are we there yet?"  <cit> .

