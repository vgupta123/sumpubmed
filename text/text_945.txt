BACKGROUND
the earliest models of protein secondary structure were proposed by pauling and corey who predicted that the polypeptide backbone contains regular hydrogen bonded geometry, forming α- helices and β-sheets  <cit> . the subsequent deposition of structures into public databases aided growth of methods predicting structures from protein sequences. although the number of structures in the protein data bank  is growing at an exponential rate due to advances in experimental techniques, the number of protein sequences remains far higher. the ncbi refseq database  <cit>  contains  <dig> million protein sequences and the pdb, ∼ <dig>  structures  as of april  <dig>  therefore, the computational prediction of protein structures from sequences still remains a powerful complement to experimental techniques. protein secondary structure prediction , often an intermediate step in the prediction of tertiary structures has been of great interest for several decades. since structures are more conserved than sequences, accurate secondary structure predictions can aid multiple sequence alignments and threading to detect homologous structures, amongst other applications  <cit> . the existing ssp methods are briefly summarized by developments that led to increases in accuracy and grouped by algorithms employed.

the gor technique pioneered the use of an entropy function employing residue frequencies garnered from proteins databases  <cit> . later, the development of a sliding window scheme and the calculation of pair wise propensities  resulted in an accuracy of  <dig>  %  <cit> . subsequent developments include combining the gor technique with evolutionary information  <cit>  and the incorporation of the gor technique with a fragment mining method  <cit> . the phd method employed multiple sequence alignments  as input in combination with a two level neural network predictor  <cit> , increasing the accuracy to  <dig> %. the representation of an input sequence as a profile matrix obtained from psi-blast  <cit>  derived position specific scoring matrices  was pioneered by psipred, improving the accuracy up to  <dig> %  <cit> . most techniques now employ pssm  as input to machine-learning algorithms. the neural network based methods  have performed better than other algorithms in recent large scale reviews that compared performance on up to  <dig> protein chains  <cit> . recently, more neural network based secondary structure predictors have been developed, such as the employment of a general framework for prediction  <cit> , and the incorporation of context-dependent scores that account for residue interactions in addition to the pssm  <cit> . besides the neural networks, other methods use support vector machines   <cit>  or hidden markov models . detailed reviews of ssp methods are available in  <cit> . current accuracies tested on nearly  <dig> chains yield up to  <dig> %  <cit> . in the machine learning literature, neural networks employed in combination with svm obtained an accuracy of  <dig>  % on the cb <dig> dataset  <cit> . apart from the accuracies given in reviews, most of the literature reports accuracy based on machine-learning models employing k-fold cross-validation and does not provide insight to underlying structural reasons for poor performance.

the compact model
the classical view adopted in developing ssp methods is that a large number of training proteins are necessary, because the more proteins the classifier is trained on, the better the chances of predicting an unseen protein sequence e.g.  <cit> . this involved large numbers of training sequences. for example, spine employed 10-fold cross validation on  <dig> protein chains and oss-hmm employed four-fold cross-validation on approximately  <dig> chains  <cit> . cross-validated accuracies prevent overestimation of the prediction ability. in most of the protein ssp methods, a large number of protein chains  have been used to train the methods. smaller numbers by comparison,  have been used to test them. the ratio of train to test chains is 8: <dig>  for yaspin  <cit>  and ∼5: <dig> for spine and sspro  <cit> . however, the exposure to large numbers of similar training proteins or chains may result in over training and thereby influence the generalization ability when tested against new sequences.

a question arises on the possible existence of a smaller number of proteins which are sufficient to build an ssp model that achieves a similar or better performance. despite the high accuracies described, the theoretical upper limit for the ssp problem, estimated at 88– <dig> %, has not been reached  <cit> . moreover, some protein sequences are inherently difficult to predict and the reasons behind, unclear. an advantage of a compact model is that the number of folds used in training is small and often distinct from the testing proteins. subsequently, one could add proteins whose predictions are unsatisfactory, into the compact model. this may identify poorly performing folds, or other structural features which are difficult to predict correctly by existing feature encoding techniques or classifiers. this motivates our search for a new training model for the ssp problem.

the goal of this paper is to locate a small group of proteins from the proposed dataset, such that training the classifier on them maintains similar accuracies to cross-validation, yet retains its ability to generalize to new proteins. such a small group of training proteins is termed as the ‘compact model’, representing a step towards an efficient learning model that prevents over fitting. here, the cb <dig> dataset  <cit>  is used to develop the compact model and a dataset of g switch proteins   <cit>  is used for validation. a feature encoding based on computed energy potentials is used to represent protein residues as features. the energy potential based features are employed with a fully complex-valued relaxation network  classifier to predict secondary structures  <cit> . the compact model employed with the fcrn provides a similar performance compared to cross-validated approaches commonly adopted in the literature, despite using a much smaller number of training chains. the performance is also compared with several existing ssp methods for the gsw <dig> dataset.

using the compact model, the effect of protein structural characteristics on prediction accuracies is further examined. the q  <dig> accuracies across structural classification of proteins  classes  <cit>  are compared, revealing classes with poor q  <dig>  for some chains in these poor performing scop classes, the accuracy remains low  even if they were to be included as training proteins, or even if tested against other techniques in the literature. the possible structural reasons behind the persistent poor performance were investigated, but it was difficult to attribute the source . however, a detailed case study of the porcine trypsin inhibitor  highlights the possible significance of water-mediated vs. peptide-backbone hydrogen bonded contacts towards the accuracy.

the remaining of the paper is organized as follows. the methods section describes the datasets, feature encoding of the residues  and the architecture and learning algorithm of the fcrn classifier. next, the heuristics-based approach is presented to obtain the compact model. section performance of the compact model investigates the performance of the compact model compared with cross-validation in two datasets: the remainder of the cb <dig> dataset and on gsw <dig>  the section case study of two inhibitors presents the case study in which the trypsin inhibitor is compared with the inhibitor of the camp dependent protein kinase. the differences in the structural environments of coil residues in these inhibitors are discussed with respect to the accuracy obtained. the main findings of the work are summarized in conclusions.

methods
datasets
cb <dig> the benchmarked cb <dig> dataset developed by cuff and barton is used  <cit> .  <dig> chains were further removed from this set by saraswathi et al.,  <cit> , to avoid homology with cath structural templates used to generate energy potentials . the resultant set has  <dig> proteins comprising  <dig>  residues. the composition is approximately  <dig> % helices,  <dig> % strands and  <dig> % coils. here, the first and last four residues of each chain are excluded in obtaining the compact model , giving a final set containing  <dig>  residues which comprise  <dig>  % helices,  <dig>  % strands and  <dig>  % coils, respectively.

g switch proteins  this dataset was generated during our previous work on secondary structure prediction  <cit> . it contains  <dig> protein chains derived from the g a and g b domains of the streptococcus g protein  <cit> . the g a and g b domains bind human serum albumin and immunoglobulin g , respectively. there are two folds present: a  <dig> α fold and  <dig> β + α fold corresponding to the g a and g b domains, respectively. a series of mutation experiments investigated the role of residues in specifying one fold over the other, hence the term ‘switch’  <cit> .

the dataset contains similar sequences. however, it is strictly used for blind testing and not used in model development. the sequence identities between cb <dig> and gsw <dig> are less than  <dig> % as checked with the pisces sequence culling server  <cit> . the compact model obtained does not contain either the β-grasp ubiquitin-like or albumin binding domain-like folds, corresponding to g a and g b domains according to scop classification  <cit> . in this set,  <dig> chains belong to g a and  <dig> chains to g b, with each chain being  <dig> residues long. the total number of residues is  <dig> and comprises  <dig> % helix,  <dig> % strand and  <dig> % coil respectively. the sequences are available in additional file 1: table s <dig> 

the secondary structure assignments were done using dssp  <cit> . the eight to three state reduction is performed as in other works  <cit> . states h, g, i  were reduced to helix  and states e, b  to sheet . states t, s and blanks  were reduced to coil .

cabs-algorithm based vector encoding of residues
we used knowledge-based statistical potentials to encode amino acid residues as vectors instead of using pssm. this data was generated during our previous work  <cit>  on secondary structure prediction. originally these potentials were derived for coarse grained models  of protein structure. cabs could be a very efficient tool for modeling of protein structure  <cit> , protein dynamics  <cit>  and protein docking  <cit> . the force-field of cabs model has been derived using careful analysis of structural regularities seen in a representative set of high resolution crystallographic structures  <cit> .

this force-field consist of unique context-dependent potentials, that encode sequence independent protein-like conformational preferences and context-dependent contact potentials for the coarse-grained representation of the side chains. the side chain contact potentials depend on the local geometry of the main chain  and on the mutual orientation of the interacting side chains. a detailed description of the implementation of cabs-based potentials in our threading procedures could be found in  <cit> . it should be pointed out, that use of these cabs-based statistical potentials  opens the possibility for effective use of relatively short windows size for the target-template comparisons. another point to note is the fact that the cabs force-field encodes properly averaged structural regularities seen in the huge collection of known protein structures. since such an encoding incorporates proper averages for large numbers of known protein structures, the use of a small training set does not reduce the predictive strength of the proposed method for rapid secondary structure prediction.

a target residue was encoded as a vector of  <dig> features, with the first  <dig> containing its propensity to form helix , the next  <dig> its propensity to form sheet  and the last  <dig>  its propensity to form coil  structures . the process of encoding was described in  <cit>  and is repeated here.
fig.  <dig> representation of features. a target residue, t in the input sequence is represented as a 27-dimensional feature vector. the input sequence is read in a sliding window  of  <dig> residues . the central residue  and several of its neighbours to the left and right are shown. cath templates were previously assigned ss using dssp. target to template threading was done using w =  <dig> and the reference energy computed with the cabs-algorithm. the ss are read in from best fit template sequences that have the lowest energy for the central  <dig> residues within w. since multiple ss assignments will be available for a residue, t and its neighbours from from templates, the probability of each ss state is computed using a hydrophobic cluster similarity score. p, p and p denote probabilities of t and its four neighbours to the left and right, adopting helix, sheet and coil structures respectively. cath templates are homology removed and independent with respect to the cb <dig> dataset



removal of highly similar targets
in this stage, target sequences that have a high similarity to templates were removed to ensure that the predicted cb <dig> sequences are independent of the templates used. therefore the accuracies reported may be attributed to other factors such as the cabs- algorithm, training or machine-learning techniques used, rather than an existing structural knowledge.

a library of cath  <cit>  structural templates was downloaded and needleman-wunsch  <cit>  global alignment of templates to cb <dig> target sequences was performed. there were  <dig> template sequences and  <dig> target sequences, resulting in  <dig> pairwise alignments. of these alignments,  <dig> % had similarity scores in the range of  <dig> to  <dig> % and the remaining  <dig> % contained up to  <dig> % sequence similarity . however, only  <dig> cath templates could be used due to computational resource concerns and pdb file errors. structural similarities between targets and templates were removed by querying target names against homology-derived secondary structure of proteins   <cit>  data for template structures. after removal of sequence or structural similarities,  <dig> cath structural templates and  <dig> proteins from cb <dig> were obtained. the dssp secondary structure assignments were performed for these templates. contact maps were next computed for the heavy atoms c, o and n with a distance cutoff of  <dig>  Å.

threading and computation of reference energy
each target sequence was then threaded onto each template structure using a sliding window of size  <dig> and the reference energy computed using the cabs-algorithm. the reference energy takes the  short-range contacts,  long-range contacts and  hydrophobic/hydrophilic residue matching into account, weighted  <dig>  : <dig>  : <dig> , respectively  <cit> . for short range residues, reference energies depend on molecular geometry and chemical properties of neighbours up to  <dig> residues apart. for long-range interactions, a contact energy term is added if aligned residues are interacting according the contact maps generated in the previous stage. the best matching template residue is selected using a scoring function . the lowest energy  residues are retained.

the dssp secondary structure assignments from the best fitting template sequences are read in, but this was done only for the  <dig> central residues in the window of  <dig>  the probability of the  <dig> central residues adopting each of the three states helix, sheet or coil is derived using a hydrophobic cluster similarity based method  <cit> . figure  <dig> illustrates the representation of an amino acid residue from an input sequence as a vector of  <dig> features in terms of probabilities of adopting each of the three secondary structures h, e or c.

it is emphasized that the secondary structures of targets are not used in the derivation of features. however, since target-template threading of sequences was performed, the method indirectly incorporates structural information from the best matching templates. a complete description of the generation of the  <dig> features for a given target residue is available in  <cit> . these  <dig> features serve as input to the classifier that is described next.

fully complex valued relaxation network 
the fcrn is a complex-valued neural network classifier that uses a complex plane as its decision boundary. in comparison with real-valued neurons, the orthogonal decision boundaries afforded by the complex plane can result in more computational power  <cit> . recently the fcrn was employed to obtain a five-fold cross-validated predictive accuracy of  <dig> % on the cb <dig> dataset  <cit> . the input and architecture of the classifier are described briefly.

let a residue t be represented by xt where x is the vector containing  <dig> probability values pertaining to the three secondary structure states h, e or c. xt was normalized to lie between - <dig> to + <dig> using the formula 2×. the normalized xt values were mapped to the complex plane using a circular transformation. the complex-valued input representing a residue is denoted by zt and coded class labels yt denote the complex-valued output.

fcrn architecture is similar to three layered real networks as shown in fig.  <dig> 
fig.  <dig> the architecture of fcrn. the fcrn consists of a first layer of m input neurons, a second layer of k hidden neurons and a third layer of n output neurons. for the ss prediction problem presented in this work, m= <dig>  n= <dig> and k is allowed to vary. the hyperbolic secant  activation function computes the hidden response  and the predicted output y^lt is given by the exponential function. w
nk represents the weight connecting the kth hidden neuron to the nth output neuron



however, the neurons employ the complex plane. the first layer contains m input neurons that perform the circular transformation that map real-valued input features onto the complex plane. the second layer employs k hidden neurons employing the hyperbolic secant  activation function. the output layer contains n neurons employing an exponential activation function. the predicted output is given by 
  <dig> y^lt=exp∑k=1kwlkhkt 

here, hkt is the hidden response and wlk the weight connecting the kth hidden unit and lth output unit. the algorithm uses projection based learning where optimal weights are analytically obtained by minimizing an error function that accounts for both magnitude and phase of the error. a different choice of classifier could potentially be used to locate a small training set. however, since it has been shown in the literature that complex-valued neural networks are computationally powerful due to their inherent orthogonal decision boundary, here the fcrn was employed to select proteins of the compact model and to predict secondary structures. complete details of the learning algorithm are available in  <cit> .

accuracy measures
the scores used to evaluate the predicted structures are the q  <dig> which measures single residue accuracy , as well as the segment overlap scores sov h, sov e and sov c, which measure the extent of overlap between native and predicted secondary structure segments for helix , sheet  and coil  states, respectively. the overall segment overlap for the three states is denoted by sov. the partial accuracies of single states, q h, q e and q c, which measure correctly predicted residues of each state over the total number of residues in that state, is also computed.

all segment overlap scores follow the definition in  <cit>  and were calculated with zemla’s program. the per-class matthew’s correlation coefficient  follows the definition in  <cit> . the class-wise mcc j with j∈h,e,c is obtained by 
 mccj=tp×tn−fp×fn××× 

here, tp denotes true positive , i.e. sheets and coils predicted as helices); tn denotes true negative ; fn denotes false negative . similar definitions follow for sheets and coils.

development of compact model
the feature extraction procedure uses a sliding window of size  <dig> , resulting in lack of neighbouring residues for the first and last four residues in a sequence. since they lack adequate information, the first and last four residues were not included in the development of the compact model. besides, the termini of a sequence are subject to high flexibility resulting from physical pressures; for instance the translated protein needs to move through golgi apparatus. regardless of sequence, flexible structures may be highly preferred. this could introduce much variation in the sequence to structure relationship that is being estimated by the classifier, prompting for the decision to model them in a separate work. here, it was of interest to first establish that training with a small group of proteins is viable.

since the number of training proteins required to achieve the maximum q  <dig> on the dataset is unknown, it was first estimated by randomized trials. the  <dig> proteins derived from cb <dig> were numbered from  <dig> to  <dig> and the uniformly distributed rand function from matlab was used to generate unique random numbers within this range. at each trial,  <dig> sequences were added to the training set and the q  <dig> accuracy  was obtained by testing on the remainder. the number of hidden neurons was allowed to vary but capped at a maximum of  <dig>  the q  <dig> scores have been shown as a function of increasing the number of training proteins in fig.  <dig> 
fig.  <dig> q  <dig> vs no. of training sequences . the accuracy achieved by fcrn as a function of increasing n is shown. highest q  <dig> is observed at  <dig> % for  <dig> sequences. maximum allowed hidden neurons = 100



the q  <dig> clearly peaks at  <dig> % for  <dig> proteins, indicating that beyond this number, the addition of new proteins contributes very little to the overall accuracy and even worsens it slightly at  <dig>  %. all trials were conducted using matlab r2012b running on a  <dig>  ghz machine with 8gb ram on a windows  <dig> platform.

heuristics-based selection of best set: using  <dig> as an approximate guideline of the number of proteins needed, various protein sets were selected such that accuracies achieved are similar to cross-validation scores reported in the literature . these training sets are: 
ssp sampled. randomly selected  <dig> proteins , distinct from the training sets shown in fig.  <dig> 

ssp balanced. randomly selected residues  containing equal numbers from each of h, e, c states.

ssp  <dig>   <dig> proteins  selected by visualizing cb <dig> proteins according to h, e, c ratios. proteins with varying ratios of h, e, c structures were chosen such that representatives were picked over the secondary structure space populated by the dataset .
fig.  <dig> plot of cb <dig> proteins by their secondary structure content. one circle represents a single protein sequence. ssp  <dig> proteins are represented as yellow circles while the remainder of the cb <dig> dataset are green circles. the compact model, ssp  <dig> proteins are spread out in a similar fashion to the ssp  <dig> proteins shown here. axes show the proportion of helix, coil and sheet residues divided by the sequence length. for instance, a hypothetical  <dig> residue protein comprised of only helix residues, would be represented at the bottom-right most corner of the plot





tests on the remainder of the cb <dig> dataset indicated only a slight difference in accuracy between the above training sets, with q  <dig> values hovering at ∼ <dig> %. the sets of training sequences from q  <dig> vs. n experiments  as well as the three sets listed above were tested against gsw <dig>  revealing a group of  <dig> proteins that give the best results. the  <dig> proteins have been presented in additional file 1: table s <dig>  these  <dig> proteins are termed the compact model. a similar technique could be applied on other datasets and is described here as follows.

the development of a compact model follows three stages. first, the number of training proteins, p needed to achieve a desired accuracy on a given dataset, is estimated by randomly adding chains to an initial small training set and monitoring the effect on q  <dig>  this first stage also necessarily gives several randomly selected training sets of varying sizes. second, p is used as a guideline for the construction of additional, training sets that are selected according to certain characteristics such as the balance of classes within chains . here, other randomly selected proteins may also form a training set. other training sets of interest may also be constructed here. in the third stage, the resultant training sets from stages one and two are tested against an unknown dataset. the best performing set of these, is termed the compact model. procedure ‘obtain compact model’ given in fig.  <dig> shows the stages described.
fig.  <dig> procedure obtain compact model



RESULTS
performance of the compact model
first, a five-fold cross-validated study, similar to other methods reported in the literature was conducted to serve as a basis for comparison for the compact model. the  <dig> proteins were divided into  <dig> partitions by random selection. each partition contained  <dig> sequences and was used once for test, with the rest for training. any single protein served only once as a test protein, ensuring that final results reflected a full training on the dataset.

the compact model of  <dig> training proteins is denoted ssp  <dig> and the cross-validation model, ssp cv. for ssp  <dig>  the remaining  <dig> proteins containing  <dig>  residues served as the test set. for a fair comparison, ssp cv results for these same  <dig> test proteins were considered. the fcrn was separately trained with parameters from both models and was allowed to have a maximum of  <dig> hidden neurons. train and test times averaged for  <dig> residues were  <dig> min and  <dig>  s, respectively on a  <dig>  ghz processor with 8g ram. results are shown in table  <dig>  the performance of ssp  <dig> was extremely close to that of ssp cv across most predictive scores as well as the matthew’s correlation coefficients . further discussion follows.
ssp cv
ssp 55


the q  <dig> values for ssp  <dig> and ssp cv were  <dig>  % and  <dig>  % respectively. this is a small difference of  <dig>  % which amounts to  <dig> residues in the present study. as reported in earlier studies  <cit>  it was easiest to predict helix residues followed by coil and sheet for both the ssp  <dig> and ssp cv models. the q h, q e and q c values were  <dig>  %,  <dig>  %,  <dig>  % respectively under the ssp cv model and  <dig>  %,  <dig>  % and  <dig>  % under the ssp  <dig> model. ssp cv training predicted helix and coil residues better at about  <dig> %. the ssp  <dig> model predicted sheet residues better by  <dig>  %.

the sov score indicates ssp cv predicted overall segments better by a half percentage point than ssp  <dig>  ssp  <dig> predicted the strand segments better by  <dig>  % with an sov e of  <dig>  % vs.  <dig>  % obtained by ssp cv. similar findings were made when results of all  <dig> proteins  were considered.

since the results between both models were close, statistical tests were conducted to examine if the q  <dig> and sov scores obtained per sequence were significantly different under the two models. for ssp cv, the scores used were averages of  <dig> partitions. first, the shapiro-wilk test  <cit>  was conducted to detect if the scores are normally distributed. p values for both measures  indicated that neither was normal at an α= <dig>  level of significance. the non-parametric wilcoxon signed-rank test  <cit>  was next used to determine if paired values per sequence were significantly different. the p-values obtained for the q  <dig> and sov measures were  <dig>  and  <dig> , indicating that ssp cv is better at a significance level of α= <dig> .

it was expected that a smaller training set of  <dig> training proteins would give lower accuracies. however, the scores achieved were extremely close to those obtained from the larger training model . it is therefore remarkable that the increase in accuracy afforded by  <dig> times the number of proteins is less than half a percentage point for the q  <dig> score. spine reported seemingly different findings to those here  <cit> . a drop in q  <dig> of up to  <dig> percentage points was reported when smaller datasets were used in training. other than the training sets, the accuracy achieved depends on factors like the choice of classifier and the type of feature encoding used. the latter two were different from the work here and could be a reason for the different conclusions.

it is further unknown if the sequence to structure information learnt by the network depends on entire proteins or if residue-based selection could show a comparable performance. in theory, if secondary structure involves mainly local interactions, residue-based training selections should yield comparable predictive accuracies. since each amino acid residue is often encoded as a feature vector representing some properties of its sequential neighbours in a sliding window scheme, one could presume that local interactions are captured and that it is possible to randomly select residues for training rather than entire proteins. in 5-fold cross-validation experiments conducted previously, in which the partitions were created based on randomly selected residues rather than proteins, a q  <dig> score of  <dig>  % was achieved  <cit> . however, training based on residues was found to improve sheet prediction at the expense of the coil class. the ssp balanced model was also created by selection of residues, but despite a high performance for sheet , the model gave a considerably lower accuracy for the coil residues at  <dig>  %.

a separate experiment was also conducted in which the first and last four residues of the  <dig> proteins of the compact model were included . the q  <dig> obtained by the compact model was  <dig>  % on  <dig>  test residues, which indicates that a slight depreciation in performance  had been observed.

results here suggest that most of the information relating to the structural folds present in cb <dig> is captured by the ssp  <dig>  otherwise, the accuracies would have been much lower than expected with merely  <dig> training proteins.

effect of scop classes on accuracy
the composition of the cb <dig> dataset based on the structural classification of proteins   <cit>  classes was analysed to determine what effect structural classes have on the predictive accuracy. effort was made to match cb <dig> sequences to sequences in pdb files derived from atom records. all  <dig> proteins were matched with current pdb structures with corresponding pdb identifiers and chains except for two of them. in some cases, obsolete pdb entries had to be kept to maintain sequence matches, but the ids of superseding structures were also noted . using pdb identifiers, corresponding scop domains were assigned from parseable files of database version scope  <dig> . sequences of the domains were also matched with the  <dig> proteins from cb <dig>  for a majority of proteins, the sequences of the scop domains matched the cb <dig> sequences. the rest had partial or gapped matches, likely due to updated versions of defined domains for older structures. for such cases the corresponding domains were nevertheless assigned as long as the sequences matched partially. structures with missing or multiple scop domain matches  were excluded in the following discussion.

the distribution of scop classes and q  <dig> scores in the compact model  as well as the remainder of the cb <dig> dataset was compared . the results for ssp  <dig> represent tests on the compact model itself. the  <dig> main protein structural classes according to scop are the  all alpha proteins,  all beta proteins,  interspersed alpha and beta proteins and  segregated alpha and beta proteins. additional classes are  multi domain proteins for which homologues are unknown,  membrane and cell surface proteins,  small proteins,  coiled coil structures,  peptides and  designed proteins. class  low resolution proteins, are absent from the dataset.
fig.  <dig> q  <dig> breakdown by scop classes a–k. two types of q  <dig> are presented below the classes.  <dig>  tests on the ssp  <dig> compact model proteins, which had been used in training .  <dig>  tests on the remainder of cb <dig> dataset not used in training . the q  <dig> for ssp  <dig> is not necessarily higher than the remainder. class g  is the worst performing. a q  <dig> of  <dig> indicates no structures were found in that category . the no. of structures present in each class is indicated above columns



all the  <dig> main protein structural classes were found to have high q  <dig> scores ranging from  <dig> % for the alpha proteins  to  <dig> % for the beta proteins . the best performing proteins were those rich in helix residues as expected ). however, the lowest performing class was that of small proteins  with a q  <dig> of  <dig> % , rather than β-strand containing classes such as , , or  as might be inferred from the sheet residues having the worst performance. one explanation is that poor sheet performance arises from mispredicted single residue strands . these may be harder to predict than extended strands  which form more larger and more regular structures that are used in classifying proteins.

additionally the prediction of q  <dig> is always much lower for sheet structures since the hydrogen bonds are formed between residues that have high contact order; they are separated by many residues along a chain so these contacts are outside the sliding window. hence, they are difficult to predict by sliding window-based methods. also, the predictions are usually unreliable at the end of secondary structure elements. thus, if there are many shorter secondary structures to be considered , the accuracy may be lower, which may account for the poor performance of small proteins ).

overall there was hardly any difference in average q  <dig> scores between the compact model  and testing proteins of cb <dig>  training a classifier with a given protein and subsequently testing the classifier on that same protein is expected to have a higher accuracy than if an unseen protein sample were presented to the classifier. however, for scop classes a, g and c the average q  <dig> of ssp  <dig> was only marginally higher than the testing set at  <dig> % and  <dig> % respectively. this is an extremely small difference . unexpectedly, the q  <dig> of the testing proteins was higher in classes  and  instead. it is suggested that some intrinsic structural features of a protein arising from its class, pose a greater limitation on the predictive accuracy than if a given classifier has ‘learnt’ a particular protein  previously. the confusion matrices of ssp  <dig> and the remainder of the cb <dig> proteins broken down by their scop classes are available in additional file 1: tables s <dig> and s <dig>  respectively.

blind tests of the compact model
the ssp  <dig> and ssp cv training models were tested in blind prediction experiments on a dataset of g switch proteins . here the first and last four residues of the g switch proteins were included unlike the previous tests on cb <dig> . although the training models did not include the first and last four residues of proteins, for a fair study, the normalization of the gsw <dig> proteins was done with respect to maxima and minima of the cb <dig> dataset that included the first and last four residues. for ssp cv, parameters from the best performing cross-validation partition were selected. results are in table  <dig> 
ssp cv
ssp 55


ssp  <dig> scored higher  than the conventional cross-validation model, ssp cv . the widest difference was found for the sheet and coil classes, with q e and q c accuracies of ssp  <dig> at  <dig>  % and  <dig>  % respectively, compared to much lower accuracies of  <dig>  % and  <dig>  % obtained by ssp cv training. the sov score was slightly higher for ssp  <dig> at  <dig>  % compared to  <dig>  % of ssp cv.

both training models achieved perfect sov scores for the helix segments , but difficulties arose for the sheet and coil predictions. the ssp cv model was better than ssp  <dig> for sheet segment predictions . however, there was a sharp drop in scores for the coil residues  for the former. the class-wise matthew’s correlation coefficients  supported the results further. for mcc h, ssp  <dig> obtained  <dig> , vs  <dig>  obtained by ssp cv, for mcc e,  <dig>  vs  <dig>  and for mcc c,  <dig>  vs  <dig> , respectively for each model. the ssp  <dig> further had a better ability to distinguish between helix and sheet residues compared to the ssp cv model; the helix to strand and vice versa mispredictions quantified by q heerror are  <dig>  % for ssp  <dig> which were about two times lower as those obtained by ssp cv at  <dig>  %. the pdb structures of g switch proteins  indicated that most of the coil residues in the dataset are present at the ends of helical segments connecting one helix to another, which resulted in extremely low scores for this class. the coil structures located at the end of structure segments are an area of future work. the compact model was further compared with several existing methods.

comparison with other methods
the performance of ssp  <dig> was compared with five well-known secondary structure prediction methods in the literature. these are the homology-based predictors sspro  <cit>  and proteus  <cit>  as well as the top-performing ab-initio predictors, psipred  <cit> , spinex  <cit>  and porter  <cit> . these methods were recently assessed in a comprehensive survey in which they obtained q  <dig> accuracies between  <dig> to  <dig> % on a dataset of nearly  <dig> protein chains  <cit> . recent versions were used for three methods: porter  <dig>   <cit> , proteus  <dig>  and a recently updated server for the spine method named spider <dig>   that utilizes deep learning to predict several structural properties  <cit> . results for flopred, which used an extreme learning machine classifier employed with identical feature encoding data to those used in this work, have also been presented  <cit> . all results are in table  <dig>  ordered according to q  <dig>  for consistency, all method names have been capitalized in the following discussion.
ssp 55


the ssp  <dig> compact model proved better than the  <dig> methods in predicting the secondary structure states of the g switch proteins with a q  <dig> of  <dig>  %. flopred obtained the next best q  <dig> of  <dig>  % followed by proteus  <dig>  psipred, porter  <dig> , spider <dig> and sspro at  <dig>  %,  <dig>  %,  <dig>  %,  <dig>  % and  <dig>  %, respectively. unlike results for the cb <dig> dataset, the worst performing residues were coils rather than strands, with q c approaching  <dig>  % for proteus  <dig>  overall, coil residues had been wrongly classified by most methods as sheets with q ce  that ranged from  <dig> to  <dig> %. for the homology based methods sspro and proteus  <dig> it is possible that wrongly assigned structural states from a high scoring but poor fitting template resulted in the low scores. in general, the remainder of the measures showed a poor performance for the helix and sheet classes, with the former being more successfully predicted for psipred, proteus  <dig> and porter  <dig> . sspro however predicted the sheet residues more successfully than the helix residues.

results from flopred were similar to those of the ssp  <dig> model, but the latter performed slightly better. the largest margin was for coil with q c of ssp  <dig> being  <dig>  % higher than flopred. for sheet and helix, flopred scores were extremely close to those of ssp  <dig> 

the choice of feature encoding likely plays a role in the better results shown by ssp  <dig> and flopred since both have used energy based feature representation in comparison to other methods employing pssm. the better results obtained by ssp  <dig> over ssp cv indicate that the choice of training proteins is highly important to preserve the generalization ability of the classifier and that, it is not necessary that a larger number of training proteins is a guarantee of good performance.

here, energy based feature representation has been employed with a complex-valued neural network classifier. however, the derivation of a compact training model could potentially be used in subsequent works employing different classifiers or feature representation techniques. one important criteria for consideration is the speed of the learning algorithm. this should be sufficiently fast to produce results from large numbers of prediction trials, for selection of various training sets.

while the real-value neural networks may also be used in the derivation of the compact model, the fcrn shows a slightly better performance. table  <dig> indicates that, for the g switch proteins dataset, the fcrn q  <dig> is slightly better than a 2-layered standard feed forward multi layer perceptron  employing a conjugate gradient descent algorithm. both the fcrn and mlp have been allowed  <dig> hidden neurons and are given exactly the same training samples. for the g switch proteins the fcrn q  <dig> is higher by  <dig>  %. this could be attributed to the extra decision boundary of the complex plane employed in the fcrn hidden layer that enhances separability. for the same number of hidden neurons, the fcrn is slightly advantageous over the standard real networks.
both networks were trained with ssp 55




some deficiencies of our technique are noted to be addressed in future works. first, the feature representation process is time consuming since reference energies must be computed across all templates . second, the poor coil residue predictions  for the gsw <dig> dataset leave much room for improvement.

in our earlier paper we had shown that we have removed possible similarities between proteins in the cb <dig> dataset and the cath supplementary template structures, and therefore the performance of our method does not depend on significant homologies between these sets . it is suggested that some theoretical support for the success in predictive accuracy in using a small set of training proteins is provided by work in protein fold space. in  <dig>  skolnick et. al., demonstrated that protein fold space could be visualized as a continuum with each protein structure being related to another by  <dig> transitive structures, applied to single domain proteins at most  <dig> residues long  <cit> . therefore, most structures are related and it is possible to “traverse” from one structure to another in fold space given some constraints such as the limits on domains or residue numbers. an efficient sampling of protein fold space results in some training sets being better than others. however, it is difficult to directly elucidate the structural relationship between train and test proteins that makes such performance possible; the inclusion of a certain protein fold in training does not directly give the classifier an ability to predict new structures similar to that fold.

case study of two inhibitors
most of the errors in ss prediction arise from an inability of classifiers to distinguish between:  sheet and coil and  helix and coil  <cit> . a comparison of two inhibitors in this section gives a possible reason for . coil structures involved in hydrogen bonds with peptide backbone atoms were observed to be predicted as sheet, while those preferring hydrogen bonds with waters were correctly predicted as coil.

the worst performing sequence in the experiments conducted was the trypsin inhibitor molecule  with a q  <dig> of  <dig> % from the cb <dig> dataset. the predicted region of the inhibitor peptide was  <dig> residues . despite the small size, the molecule is of interest because none of the compared methods were able to achieve a q  <dig> greater than  <dig> %. the q  <dig> was poor even if the entire sequence was considered, or included in training. the accuracies of the methods for this sequence, in descending order were porter , psipred , proteus  <dig> , ssp  <dig>  and sspro . seventy percent of predicted residues adopt the coil state and more than half of these were misclassified as sheets by ssp  <dig> . likewise for other methods most of the errors were coils misclassified as sheet, or vice versa.

r
i
w
m
k
c
i
a
c
c
c
c
c
c
c
c
e
e
e
e
e
e
e
e
coil residues mispredicted as sheets are in bold



the methods compared differed in factors such as feature encoding, learning algorithm and underlying training models. most have likely already included the trypsin inhibitor as part of training since it belongs to an older dataset. the persistent poor predictions could therefore arise from structural features that remain difficult to capture by current techniques. to characterize the structural environments that are a source of mistakes between coil and sheet classes, comparisons were made with the peptide inhibitor of the camp dependent protein kinase . the kinase inhibitor was of a comparable length  and comprises  <dig> % coil in the predicted region. unlike in the trypsin inhibitor, all observed coils are predicted correctly by ssp  <dig> . the q c of other methods were porter , psipred , proteus  <dig>  and sspro . the inhibitor sequences and their observed and predicted ss states by ssp  <dig> have been presented in table  <dig>  both inhibitors appear to comprise mostly of long loop regions with the kinase inhibitor possessing a 7-residue long n-terminal helical segment followed by a  <dig> residue coil segment .
fig.  <dig> detailed views of coil prediction in inhibitors. a porcine trypsin inhibitor . b camp dependent protein kinase inhibitor  with partially visible atp in yellow. correct predictions are in light purple and wrong predictions are in magenta. first and last four terminal residues are light brown and are not predicted. n marks the n-terminal. 1atpi has more correct predictions than 1mcti. residues riwm  and kci  of 1mcti are coils wrongly predicted as sheets. residues asgrtgrrn  of 1atpi are correct coil predictions. waters are red and white sticks in a and red spheres in b. putative hydrogen bonds  are indicated with dashed black lines, identified by inhibitor polar atom centres within  <dig> Å of any o, n atoms. italics denote the respective enzyme residues . the trypsin inhibitor residues make several h-bonds with peptide backbone o, n atoms and the kinase inhibitor, none. examples in a arg <dig> co with gly <dig> nh; ile <dig> nh with phe <dig> co. the kinase inhibitor prefers side-chain and water molecule contacts. examples in b ser <dig> n with asp <dig> od1; thr <dig> co with arg <dig> nh1; arg <dig> co with two waters. not all h-bonds are shown; see text for more



in the trypsin inhibitor, the peptide segment ’riwm’  and ’kci’  were coils that had been wrongly predicted as sheets. cys <dig> and ile <dig> in particular, were wrongly predicted as sheets in all methods tested. in the kinase inhibitor, the  <dig> residue coil segment ’asgrtgrrn’  was predicted correctly as coils. coil regions from both molecules are involved in extensive hydrogen bonds with their respective enzymes and water molecules. however, an important difference is that the trypsin inhibitor participates more heavily in hydrogen bonds formed by carbonyl oxygen  or amide nh groups of the peptide backbone . in contrast, the kinase inhibitor relies more on hydrogen bonding with water molecules to maintain the complex .

detailed hydrogen bonded contacts
the putative hydrogen bonds listed in the discussion below are inferred from distance based polar contacts using pymol . capitalised italics indicate residues from the trypsin and protein kinase chains in their respective complexes. numbers following three letter amino acid abbreviations correspond to residue numbers of atom records in their respective pdb files.

trypsin inhibitor:
bonds involving peptide backbone atoms are listed for this inhibitor . the carbonyl oxygen  of arg <dig> in bifurcated hydrogen bonds with the amide  of ser <dig> and gly193; nh of arg <dig>  hydrogen bonded with co of ser195; nh of trp <dig> with co of phe41; co of met <dig> with nh of cys27; nh of lys <dig> with co of ile2; co of ile <dig>  with nh of gly28; nh of cys <dig>  is hydrogen bonded to co of met <dig> and so forth. besides these, several potential contacts with water molecules are seen; co of ile <dig> which participates in bifurcated hydrogen bonds with  <dig> waters, co of trp <dig>  nh of met <dig>  nh of met <dig> and co of cys <dig> all of which participate in hydrogen bonds with one water molecule, each  <cit> .

kinase inhibitor:
for this inhibitor , only one hydrogen bond involving the peptide backbone, nh of ser <dig> with co of phe <dig>  is observed. apart from ser <dig>  no others in residues 8– <dig> are observed to potentially contain hydrogen bonds involving the peptide backbone , although sidechain contacts such as  are possible. instead, water molecules are observed to be in contact, such as: ser <dig> co, gly <dig> co, thr <dig> n, arg <dig> co, arg <dig> co and so forth with nearby waters . not all putative hydrogen bonded contacts are listed.

not all wrongly predicted coils may be attributed to the presence of hydrogen bonding involving the peptide backbone. for instance in 1mcti, co of sheet residue val <dig> is hydrogen bonded to his <dig> n and is wrongly predicted as coil. however it is possible to infer from the structural comparisons that the kinase inhibitor relies more heavily on water mediated hydrogen bonds than does the trypsin inhibitor.

the solvent accessibilities of individual residues in both predicted segments of the inhibitor peptides, as well as the hydrophobicity of residues were considered. however, it was difficult to distinguish the differing q c accuracies based on these characteristics. the crystal structure resolutions are  <dig>  Å and  <dig>  Å for 1mct and 1atp respectively. if low resolution were a factor the prediction for the kinase inhibitor  should be of poorer quality, but the opposite is observed. the effect of hydrogen bonds contacts  on residue misprediction is further investigated by analysing all structures in the cb <dig> dataset.

in the following discussion, hydrogen bond contacts of protein main-chain atoms are investigated. in particular, the proportion of contacts formed between main-chain atoms and water atoms in correct vs. mispredicted residues, is discussed. when the entire dataset is considered, evidence suggests that the presence of water-mediated hydrogen bonding can influence misprediction rates. in particular, the type of hydrogen bond contacts a residue makes- whether only between main chain atoms, or involving water molecule, is a factor.

the hbplus software  <cit>  was used to detect putative hydrogen bonds in the  <dig> chains of the cb <dig> dataset. nine chains had to be discarded from the analysis, since their pdb derived sequences did not match their cb <dig> sequences. the donor-acceptor  distance, specifies the maximum allowed distance between the hydrogen-bond donor and acceptor atoms. the da distance was set to  <dig> Å and other settings were the default values.

the results of the case study indicated that for mispredicted coils, the main chain atoms are more likely to be in contact with other main chain atoms. conversely, the correctly predicted coils were more likely to be in contact with hetero-atom water molecules. the notation of hbplus was followed. here, the donor  or acceptor  role is ignored; as long as a ain chain atom of a residue satisfies hydrogen bonding geometry with any other ain chain atom, the bond is denoted as mm. if the main chain atom forms a potential contact with water etero-atom in the structure, the bond is classified as mh. therefore mm denotes two main chain atoms that act as da, while mh denotes a main chain atom and  hetero-atom that are da. the mm and mh counts are presented in table  <dig> 
r cc
r ce
r ec
r ee
types of hydrogen bond contacts considered are from main-chain to main-chain  atoms and main-chain to hetero-atom water  atoms. mm + mh is their sum. all indicates all hydrogen bonds including those involving side chains. r ij denotes a residue in native state i predicted as j




for coils mispredicted as sheets , the rate of participation in main-chain to main-chain hydrogen bond contacts  is  <dig> % compared to that of correctly predicted coils ,  <dig>  %. correctly predicted coils also have a higher rate of main-chain to water molecule hydrogen bond contacts  compared to those mispredicted as sheets . for sheet residues, the distinction between the proportion of mm and mh contacts, is more apparent. for correctly predicted sheet residues ,  <dig>  % of main chain atom contacts are with other main chain atoms when compared against a total of main-chain to main-chain and main-chain to water contacts . main-chain to water atom contacts  comprise the remaining  <dig>  %. for sheet residues mispredicted as coil , the proportion of main-chain atoms involved hydrogen bonded contacts with water molecules, is higher at  <dig>  %.

the implications of these findings are discussed. since regular, hydrogen bonded geometry of the peptide backbone forms the major definition of the secondary structure states, main-chain atoms that are in potential hydrogen bonds with water atoms could be harder to predict correctly, for the sheet residues. for the coil residues, having more contacts with water atoms  results in them having a higher chance of being predicted correctly rather than being misclassified as sheet. the other types of contacts made, such as towards non-water hetero-atoms and also to side-chain atoms, are not discussed here, but the total number of all hydrogen bonded contacts made, as well as the number of residues for which the hydrogen bond counts were made, is provided in the table  <dig> 

from the structures, it is suggested that residue segments in flexible or coil like states which participate in hydrogen bonding with peptide backbone atoms of spatially close residues may be misclassified as sheets, since such type of bonding is similar to the peptide backbone hydrogen bonding commonly found in sheets. however, residue segments in loop or coil conformation that participate in extensive water coordination could be predicted with greater ease. this is in agreement with previous findings that solvent exposed coils are predicted with greater accuracy than buried coils, since buried coils are more likely to interact with other protein atoms  <cit> .

unlike the energy based cabs encoding, the pssm based feature representation contains no structure comparison steps that could be an indirect source of structure-based information. nevertheless, methods employing both types of feature encoding techniques, failed to capture the trypsin inhibitor adequately. it therefore, is possible that the ambiguity between sheet and coil classes in mispredicted residues arises at the level of secondary structure detection and assignment, due to the environment of main-chain atoms. for instance, a sheet residue’s main-chain co in proximity to a water molecule, has another potential hydrogen bond donor, rather than only the nh group in a typical hydrogen bonded β-sheet geometry. this could in turn be harder to predict, than if the water molecule were absent. the findings of table  <dig> suggest that mispredicted sheet residues have a higher proportion of water molecule contacts than correctly predicted sheets.

previous works sought to investigate the residue contact order and to increase the sliding window sizes to accommodate long-range interactions. another factor that may be responsible for persistently poor prediction  is the role of the structural environment of the protein main-chain atoms in the mis-prediction rates. this could assist the improvement of future secondary structure prediction methods and has not been considered before.

a difficulty of distinguishing between coil residues involved in hydrogen bonds with the peptide backbone and sheet residues was identified in this work. this is reflected in the higher accuracies for the kinase inhibitor as compared to the trypsin inhibitor across all methods compared, despite both peptides comprising largely of coils.

CONCLUSIONS
in conclusion, the choice of training proteins can affect the classifier performance. results from employing the compact model for secondary structure prediction indicate that training classifiers on large numbers of proteins may lead to loss of prediction ability when faced with new sequences. this hints at the presence of structural relationships between train and test proteins that may influence prediction results.

in general, a compact model has two practical advantages which are the small size allowing rapid training and more importantly, a good preservation of the classifier’s generalization ability. at the same time, the secondary structure preferences seen in the large data sets are encoded in the context-dependent statistical potentials of the cabs force-field used in our method, thereby making the secondary structure predictions less dependent on the training set.

the case studies presented highlight the difficulty of current secondary structure prediction techniques in handling some chains, even if they were to be included in the dataset of the training proteins.

specifically, coil residues of the trypsin inhibitor that contained hydrogen bonding involving the peptide backbone atoms were found to have been predicted as sheet. conversely, coil residues of a protein kinase inhibitor  had been correctly predicted, with the structural difference being that these were involved in an extensive water-mediated hydrogen bonding network that maintained the complex. this highlights the possible need for methods that can accurately distinguish between sheet and coil residues involved in different types of hydrogen bonding. other limits of the current approach that need to be addressed in future work are, the reduction of time taken for the cabs-algorithm based feature encoding process as well as an automated procedure that can locate the key proteins to be included in training for any given dataset.

additional file
additional file  <dig> 
table s <dig>  the  <dig> sequences of the g switch proteins dataset . the  <dig> g a sequences and  <dig> g b sequences are given and cited with their original source. table s <dig>  the  <dig> proteins of the compact model . the protein names, scop classes, folds, number of residues, and the q  <dig> achieved per protein are given. table s <dig>  the confusion matrices broken down by scop classes, are given for the ssp  <dig> proteins. table s <dig>  the confusion matrices broken down by scop classes, are given for the remainder of the cb <dig> dataset . 



abbreviations
sssecondary structure

sspsecondary structure prediction

scopstructural classification of proteins

fcrnfully complex-valued relaxation network

cabsc-alpha, c-beta, side-chain

ssp 55secondary structure prediction with  <dig> training proteins 

ssp cvsecondary structure prediction by cross-validation

we thank dr. savitha ramaswamy for helpful discussion in using the complex-valued neural network classifier. we are also grateful to all the authors and contributors who have made their methods and datasets available for comparison.

funding
a. kolinski acknowledges the support of the national science center of poland grant .

availability of data and materials
the cb <dig> and gsw <dig> potentials data as well as the fully complex-valued neural network  classifier are available upon request.

authors’ contributions
sr carried out the development of the compact model, conducted the performance studies, prepared the structure-based analysis and drafted the manuscript. sw provided and guided the use of datasets in the study, aided the description of the residue encoding and helped in drafting the manuscript. acz provided the data and helped with the coordination of the study. ss conceived of the study, and carried out its design and coordination and helped draft the manuscript. ak provided the expert advice for the feature extraction portion of the study and helped in drafting the manuscript. all authors read and approved the final manuscript.

authors’ information
not applicable.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
