BACKGROUND
in recent years, advances in microbial molecular technologies, such as next generation sequencing and molecular profiling, have enabled researchers to spatially and temporally characterize natural microbial communities without laboratory cultivation  <cit> . however, to reveal existing symbiotic relationships and microbe-environment interactions, it is necessary to mine and analyze temporal and spatial co-occurrence association patterns of organisms within these new datasets  <cit> . time series data, in particular, are receiving increased attention, since not only ordinary associations, but also other local and potentially time-delayed associations can be inferred from these datasets. here local association indicates that the association only occurs in a subinterval of the time of interest, and time-delayed association indicates that there is a time lag for the response of one organism to the change in another organism. the rapid accrual of time series data is not limited to the microbial ecology field. progress in high-throughput low-cost experimental technologies has also brought such changes to gene transcription and translation studies. thus, while the subjects may vary, the association network we build from local and potentially time-delayed association patterns will likely pave the way to a better understanding of these systems.

to analyze microbial community and other data under various conditions, researchers typically use techniques such as pearson’s correlation coefficient , principal component analysis , multi-dimensional scaling , discriminant function analysis  and canonical correlation analysis   <cit> . although these analytic methods yield interesting patterns, they generally analyze the data throughout the whole time interval of interest without considering potential local and time-delayed associations. we are specifically interested in discovering local and potentially time-delayed associations. such associations have been shown to play important roles in understanding gene expression dynamics and the association of organisms in microbial communities  <cit> .

to understand local and time-delayed associations, we originally designed a local similarity analysis  for time series data measured typically at successive and equal time intervals without replicates  <cit> . studies adopting the original lsa technique have shown interesting and novel discoveries for microbial community datasets. to name a few, paver et al.  <cit>  successfully applied lsa to study glycolate-utilizing bacterial and phytoplankton associations, while shade et al.  <cit>  used lsa to discover bacterial association dynamics during lake mixing.

since biological experiments are often associated with many potential sources of noise, repeated measurements  are usually carried out in order to better assess inherent uncertainties of the quantities of interest  <cit> . furthermore, data emerging from such experiments are typically analyzed by mean effect or by the development of profiles where variability is not properly accounted for  <cit> . temporal and spatial data with replicates are being generated in dr. cardon’s laboratory and others. the lack of support for replicated data in the original lsa program has prevented its application to these new datasets. with replicates, it is possible to evaluate the variation of and to give a bootstrap confidence interval for the local similarity  score as defined in ruan et al. <cit> . furthermore, the original lsa is restricted by the low computing efficiency of the r language, as well as poor handling of missing values. in order to improve upon these issues and make the technique more accessible to the scientific community, we developed an extended lsa technique, named elsa, and implemented it as a c++ extension to python.

briefly, given time series data of two factors and a user-constrained delay limit, elsa finds the configuration of the data that yields the highest local similarity  score, which is a type of similarity metric. for example, within a delay limit of two units, the first time spot of one series might be aligned to the third time spot of the other series, thus maximizing their ls. for a dataset of many factors, elsa is applied to each pairwise combination of factors in the dataset. candidate associations are then evaluated statistically by a permutation test, which calculates the p-value which is the proportion of scores exceeding the original ls score after shuffling the first series and re-evaluating the ls score many times, and by the false discovery rate , which is used to correct multiple comparisons. researchers can use elsa to detect undirected associations, i.e., association patterns without time delays, and directed associations, where the change of one factor may temporally lead or follow another factor.

the organization of the paper is as follows. in the “methods” section, we describe the lsa algorithm for calculating ls score with replicates, data normalization, estimation of confidence interval for the ls score, and testing the statistical significance of a ls score. in the “results” section, we first show the efficacy of elsa by simulations, then describe briefly the pipeline of elsa, and finally apply the pipeline to analyze a microbiological dataset and a gene expression dataset. the paper concludes with some discussion and conclusions.

methods
pearson’s correlation coefficient-based analysis
suppose that the time series data for factors x and y with replicates are measured simultaneously. we denote them as x = x and y = y, where n is the number of samples  and m is the number of replicates. let xi and yj, or, in more abbreviated form, xi and yj, be the vectors containing the m replicates from the i-th time spot of x and the j-th time spot of y, respectively. the application of pearson’s correlation coefficient  requires taking the profile means, i.e. and . then the pcc between x and y is defined as:   

where , ,  and  are the means of x and y, respectively. the statistical significance of r is tested by the fact that  follows a t-distribution ) when m =  <dig>  for a pair of non-replicated series where m =  <dig>  pcc is a straightforward and powerful method to test and identify linear relationship between two bivariate normally distributed random variables. it is widely adopted in the literature but with limitations. specifically, when the real relationships are more complex, for example, the association between the two factors only occurs in a subinterval of the region of interest or the change of one factor has a time-delay in response to the change of another factor. several methods, including the original lsa method, have been proposed to overcome such difficulties  <cit> .

local similarity analysis with replicates
the original lsa method considers only data without replicates. in this paper, we extend the local similarity analysis  method  <cit>  to samples with replicates. to formulate the algorithm, we suppose each sample have m replicates and let f be some summarizing function for the repeated measurements. thus, we extend the original lsa dynamic programming algorithm to data with replicates as follows:

 for i, j in { <dig> ,…,n}2:

p <dig> j =  <dig>  pi, <dig> =  <dig>  and n <dig> j =  <dig>  ni, <dig> =  <dig> 

 for i, j in { <dig> ,…,n} <dig> with |i – j|≤ d:

pi+ <dig> j+ <dig> = max{ <dig> pi,j + sxy} and

ni+ <dig> j+ <dig> = max{ <dig> ni,j + sxy}.

 pmax = max1≤i,j≤npi,j and

nmax = max1≤i,j≤nni,j.

  and

ssgn = sgn.

the smax obtained is the maximum local similarity score possible for all configurations of m-replicated time series x and y within time-delay d. in this extended algorithm, the scalars xi ’s and yi ’ s from the non-replicated series in ruan et al. <cit>  are replaced by vector functions f’s and f’s to handle data with replicates. alternatively, we can also consider f’s and f’s as the same input data for the original algorithm in ruan et al. <cit> , except that they are f-transformed data. in addition, this extended lsa framework easily accommodates the original version of lsa without replicates using m =  <dig> as a special case.

different ways of summarizing the replicate data
notice that the only additional component we introduced in the elsa algorithm is the function f. many reports have suggested different possible forms for f, and several computational methods have been proposed for summarizing the additional information available from replicates, including the simple average method  and the standard deviation -weighted average method , and the multivariate correlation coefficient method  <cit> . however, the result of the multivariate correlation coefficient method from zhu et al. <cit>  can be shown to be the same as the ‘simple’ method. therefore, in elsa, we used the first two methods. we also propose the use of median in place of average and median absolute deviation  in place of sd when robust statistics are needed to handle outliers  <cit> . the corresponding methods are named simple median method  and mad-weighted median method , respectively.

the ‘simple’ method is, in spirit, to take the mean profiles to represent the replicated series. in practice, we take f to be the simple average of repeated measurements: . the ‘sd’ method, on the other hand, takes the standard deviation of the replicates into account. here we take f to be the replicate average divided by its standard deviation : . importantly, this method utilizes the variability information available, and, as such, it is claimed to be better than the ‘simple’ method in estimating the true correlation  <cit> . however, in order for the ‘sd’ method to be effective, a relatively large number of replicates, m, are needed, e.g.,m ≥  <dig>  for a small number of replicates, the ‘sd’ method may not work well since the standard deviation may not be reliably estimated. further, if we replace average with median and sd with mad, we obtain the ‘med’ method: f = median and the ‘mad’ method: , where mad = median|). the two transformations have similar properties as their corresponding average and sd versions, but they are more robust.

bootstrap confidence interval for the ls score
with replicate data, researchers can study the variation of quantities of interest and to give their confidence intervals. due to the complexity of calculating the ls score, the probability distribution of the ls score is hard to study theoretically. thus, we resort to bootstrap to give a bootstrap confidence interval  for the ls score. bootstrap is a re-sampling method for studying the variation of an estimated quantity based on available sample data  <cit> . in this study, we use bootstrap to estimate a confidence interval for the ls score. for a given type i error α, the  <dig> – α confidence interval is the estimated range that covers the true value with probability  <dig> – α. thus, for a given number, b, of bootstraps, we construct the bootstrap sample set , where each  and  are samples with replacement from xi and yj, respectively. the rest of the calculation is the same as that used for the original data, and we obtain . without the loss of generality, we suppose that these values are sorted in ascending order: . then, a  <dig> – α bootstrap ci of smax can be estimated by , as suggested by efron et al. <cit> .

data normalization
elsa analyses require the series of factors x and y to be normally distributed, but this may not be the case in the real dataset. therefore, through normalization, the normality of the data can be enforced. to accommodate possible nonlinear associations and the variation of scales within the raw data, we apply the following approach  <cit>  to normalize the raw dataset before any ls score calculations. we use f to denote the f-transformed data of the i-th time spot of an variable xi. first, we take    

then, we take    

where Φ is the cumulative distribution function of the standard normal distribution. we will take z = z obtained through the above procedure as the normalization of x. therefore, the normalization steps are taken after the f-transformation.

permutation test to evaluate the statistical significance of lsa association
it is important to evaluate the statistical significance of the ls score measured by the p-value, the probability of observing a ls score no smaller than the observed score when two factors are not associated locally or globally. to achieve this objective, permutation test is used. to perform the test, we fix y and reshuffle all the columns of x for each permutation. for a fixed number of permutations l, suppose {x,x,…,x} is the permuted set of x; then the p-value pl is obtained using   

where i is the indicator function. with large enough number of permutations, we can evaluate the p-value to any desired accuracy.

false discovery rate  estimation
in most biological studies, a large number of factors need to be considered. if there are t factors, there will be  elsa pairwise calculations, representing its quadratic growth in t. in order to avoid many falsely declared associated pairs of factors, we need to correct for multiple testing. many methods have been developed to correct for multiple testing and here we use the method by storey et al. <cit>  to address this issue. in particular, we report the q-value, q, for each pair of factors. the q-value for a pair of factors is the proportion of false positives incurred when that particular pair of factors is declared significant.

computation complexity and implementation
for a single pair of time series, the time complexity for calculating the ls score using the dynamic programming algorithm is o, where n is the number of time points. the estimation of the bootstrap confidence interval for the ls score using b bootstraps will need o calculations. the estimation of statistical significance for each pair of factors using l permutations will need o calculations. thus, the number of calculations for a full analysis of each pair of factors will be o. if there are a total of t factors, there are a total of  pairs of factors that need to be compared. thus, the number of calculations for a full analysis of t factors will be in the order of o, which can be computationally intensive.

in summary, the internal support for replicates and the use of ci estimates are the two major methodological enhancements to lsa. the elsa software, however, also incorporates other new features, such as faster permutation and false discovery rate evaluations and more options to handle missing values. other implementation details are available from the software documentation.

RESULTS
simulations and benchmarks
we generated simulated data to show the efficacy of elsa in capturing time-dependent association patterns, such as time-delayed associations and associations within a subinterval. we also studied the difference between the elsa inference using the simple average  method, the sd-weighted average method , the median  method, and the mad  method.

time-delayed association
in this case, x and y are assumed to be positively correlated with a time delay d. for a particular example with d =  <dig>  we assume that ’s follows a bivariate normal distribution with mean μ =  <dig> and covariance matrix , for j =  <dig> ,…, <dig>  where ρ =  <dig> . xj’s are assumed to be standard normal for j =  <dig> , <dig>  the generated ’s are further perturbed m times by a measurement disturbance εij : n to obtain the m-replicated series. a pair of simulated series is shown in figure 1a for a typical simulation with m =  <dig> 

we see that the two series closely follows each other if we shift the y series three units toward right. in this particular example, the pcc is - <dig>   while the ls score using ‘simple’ averaging method is  <dig>  with a p-value of  <dig> . we did  <dig> bootstraps and the 95% bootstrap confidence interval for this particular example is . therefore, this time-delayed association is only found significant by the elsa analysis.

association within a subinterval
in this case, we assume x and y are positively associated within a subinterval and not associated in other regions. in our simulation, we generate  <dig> time spots of the two series by sampling  from a bivariate-normal distribution with mean μ =  <dig> and covariance matrix  where ρ =  <dig>  for  <dig> ≤ j ≤  <dig>  and ρ =  <dig> for j ≤  <dig> or  <dig> ≤ j ≤  <dig>  the generated ’s are further perturbed m times by a measurement disturbance εij : n to obtain the m-replicated series. one generated series are shown in figure 1b for a typical simulation with m =  <dig> 

we can see the two series mostly closely follow each other within the intended subinterval  <dig> ≤ j ≤  <dig>  in this particular example, the pcc is  <dig>   while the ls score using ‘simple’ averaging method is  <dig>  with a p-value of  <dig> . we did  <dig> bootstraps and the 95% bootstrap confidence interval is . this pattern is again uniquely captured by the elsa analysis. in real applications, there are many other possibilities that two factors are associated without a significant pearson or spearman’s correlation coefficient. the elsa can capture these associations as long as their ls score can be maximized through dynamically enumerating their configurations.

different summarizing function
to see the effect of replicates, we also let m =  <dig>   <dig>   <dig>   <dig> in the time-delayed simulation and did the same analysis as above with  <dig> simulations. the results are summarized in table  <dig>  it can be seen from the table that the results using “simple” and “med” are similar with mean ls scores ranging from  <dig>  to  <dig>  and standard errors ranging from  <dig>  to  <dig> . on the other hand, if the noise in the replicates is not normally distributed, the “med” method should be more robust. on the other hand, the mean ls scores using “sd” and “mad” are generally lower than that using the “simple” and “med” methods. this maybe caused by the extra variation introduced when estimating the standard deviation or maximum absolute deviation from the data.

the values are calculated based on  <dig> simulations. ‘se.’ indicates standard error and ‘na.’ indicates not applicable.

running time comparison
we benchmarked the running time performance of the new elsa implementation and the old r script. for a dataset of  <dig> time series each with  <dig> time points, we tried elsa analysis with  <dig> bootstraps,  <dig> permutations and a delay limit of  <dig>  it took the old script  <dig> seconds to finish the computation while the new c++ program used  <dig> seconds, which is about  <dig> times faster. meanwhile, the new implementation also reduces the memory consumption and increases input/output efficiency. the benchmark is carried out on a “dell, pe <dig>  xeon e <dig>   <dig> ghz, 12010mb ram” computing node.

the elsa analysis pipeline
in this subsection, we briefly describe the elsa analysis pipeline implemented into the elsa software package, as shown in figure  <dig> 

f-transformation and data normalization
the elsa tool accepts a matrix file where each row is a time series for one factor. it fills up missing data by a user-specified method. zero to third order spline-based methods and the nearest neighbour method as implemented in the scipy  interpolation module are available. it then transforms the data by the user-specified f function and normalizes the f-transformed data by the normal score transformation following li et al. <cit>  .

local similarity scoring
local similarity analysis calculates the highest similarity score between any pair of factors. users can specify parameters, including, for example, the maximum shifts allowed. local similarity score is calculated using the elsa dynamic programming algorithm .

permutation test
the statistical significance, the p-value, of ls score is evaluated using a permutation test. briefly, elsa randomly shuffles the components of the original time series and recalculates the ls score for the pairs. the p-value is approximated by the fraction of permutation scores that are larger  than the original score. confidence interval for a given ls score is also found by bootstrapping from the replicated data. finally, users can obtain significant elsa association results by the combined use of p-value and fdr q-value thresholds as their filtering criteria.

association network construction
using only the significant associations, users can construct a partially directed association network. generally, for two factors x and y, if the time interval  in x and  in y have the highest ls and s <dig> <s <dig>  we can infer that x leads y; in other words, x possibly activates y. in network visualization software , one can use arrows to directionally indicate these lead patterns . one can also use lines to indicate association types . following these rules, one can build a partially directed association network based on elsa results.

microbial community data analysis
as an immediate application, we applied the elsa pipeline to a set of real microbial community time series data. this san pedro ocean time series  dataset, originally reported in steele et al. <cit>  and countway et al. <cit> , was collected following a biological feature  off the coast of southern california. the bacterial community was analyzed using the arisa  <cit>  technique and the protistan community was analyzed using the t-rflp  <cit>  technique. the dataset is composed of monthly sampled data from september  <dig> to march  <dig>  including  <dig> time points without replicates. we analyzed the dataset with a delay limit of  <dig> months and  <dig> permutations to evaluate the statistical significance of the lsa score. in this dataset, the factor names, including the operational taxonomic units and environmental factors, are previously defined by steele et al.  <cit> .

first, we compared the performance of pearson’s correlation coefficient  and elsa analysis in identifying potential local and time-delayed associations. restricting the significance threshold for the q-value q ≤  <dig>  and the p-value p ≤  <dig> ,  <dig> pairs of significant associations with elsa were identified, and among them only  <dig>  were discovered by pcc . therefore, most significant associations found by elsa would have been missed by pcc analysis in this case. the results are similar if we use less stringent criteria, i.e., q ≤  <dig>  and p ≤  <dig> , where only  <dig> out of  <dig>  elsa significant associations were also found by pcc. we need to point out that, pcc also found some associations that were missed by elsa. for example, with q-value q ≤  <dig>  and the p-value p ≤  <dig> , pcc found  <dig> significant associations and only  <dig> of them were found to be significant using elsa. therefore, elsa is not a substitute but a complimentary approach to pcc, which specializes in finding local and possibly time-delayed associations. for a thorough analysis of a dataset, one should apply both approaches, which is why we also integrated pcc analysis into our software pipeline.

numbers of significant associations found by the extended local similarity analysis  and pearson’s correlation coefficient  by controlling both the p-value  and the q-value . the p-values for elsa were evaluated by permutations and p-values for pcc was calculated based on the t-distribution.

if we look at the top five positive and negative absolute highest ls scores from the unique associations  found by elsa , we can see most of them are time-dependent associations, either time-shifted or within a subinterval. the majority of these are, in any case, beyond the capacity of pcc. in addition, elsa provides more information about its findings. for example, in the table, bac <dig> and bac <dig> factors are associated with a shift of one and euk <dig> and boxy  factors are best associated within a time interval of length  <dig> starting at time point  <dig> with no delay. this kind of additional information is not easily obtainable from the pcc analysis but very important for further functional analysis. for instance, we construct an association network using all above unique elsa associations, as shown in figure  <dig>  the obtained network obviously reveals some interesting dynamics of the microbial community, such as the domination of positive directed associations, the existence of environmental factors as hubs that are associated with many other factors, , and the existence of some highly connected clusters formed by certain bacteria or eukaryote groups.

the  <dig> positive and  <dig> negative highest absolute ls scores from associations uniquely found by elsa in the microbial community dataset. the columns in succession are x , y , ls , xs , ys , len , d , p , pcc , ppcc , q , qpcc .

taking a closer look at one of the topmost ranked association: bac <dig> and bac <dig> , we found that they are closely following each other with a time shift of one month, where bac <dig> precedes bac <dig>  further inspection suggests a yearly pattern that recurs with near regularity for this association, such that bac <dig> blooms in early springtime each year , and bac <dig> blooms one month later . from the binning definition in steele et al.  <cit> , bac <dig> is a bacteroidetes group bacterium while bac <dig> is an undefined bacterium. since these microbial groups are uncultured, this association as well as many others uniquely identified by elsa provides new insight into their ecological role in the ocean surface waters. notice there is an unexpected abundance jump at time spot  <dig> of the bac <dig> series. the reason for this outlier however is unknown to us. while such prominent time-delayed associations as the bac <dig> and bac <dig> are easily visible, we must caution that time-dependent associations could also be too subtle to be viewed directly. thus, statistical significance can provide a much more reliable guideline.

gene expression data analysis
although lsa had its roots grounded in microbial community analysis, the technique can be readily applied to other biological time series data, such as replicated gene expression time series data from microarray and rna-seq experiments  <cit> . here we show an example of applying elsa to the dauer exit gene expression profile time series data of  <dig> genes from a c elegans study. the result of the original study suggests that the  <dig> genes under investigation have similar kinetics in both the dauer exit and the l <dig> starvation time course  <cit> . here we use the dauer exit time series data consisting of  <dig> hourly time spots, each with four replicates. we analyzed the dataset with a delay limit of  <dig> hours and with  <dig> permutations and  <dig> bootstraps.

the results are summarized in table  <dig>  comparing the c. elegans results to those of the microbial community, we see that gene-gene associations in this network are much denser, since a smaller number of genes end up with a much larger, rather than smaller, number of elsa significant associations . also different is that about 93% of these associations are found by pcc analysis as well. the high congruence between pcc and elsa analysis may be due to the fact that about 90% of the elsa findings are without delays, which thus are also amenable to pcc analysis.

because these genes do not change expression level in both dauer exit and l <dig> starvation conditions, they are considered as common feeding response genes  <cit> . however, it is not clear whether they are correlated with each other in expression profiles under the dauer exit condition. to study this, we combined all elsa and pcc significant associations with q ≤  <dig>  and p ≤  <dig> , and found the average degree of the resulting association network is around  <dig>  while that of previous microbial community data is around  <dig>  such high average degree for c. elegans genes shows the high similarity of their expression profiles, which also reflects their intimate functional coordination along the process. therefore, our result suggests those feeding response genes are likely to be co-expressed under the dauer exit condition.

we next analyzed the unique elsa associations. these associations form a dense association network themselves with a long-tailed degree distribution, as shown in figure  <dig>  while the degree distribution peaks at five, the most highly connected gene  <dig> has a degree of  <dig>  we also looked at the top  <dig> positive and  <dig> negative highest absolute ls scores unique associations by elsa. because replicates are available for this dataset, we are able to obtain the bootstrap confidence intervals for the ls score and they are given in table  <dig>  interestingly, we found most of the top ls associations involve high degree nodes, such as genes  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig> . these high degree nodes could be regulation hubs in the feeding response pathway. here we show an example of time-delayed association of gene  <dig> and gene  <dig> in figure 4b. in the figure, gene  <dig> leads gene  <dig> in expression profile change.

the  <dig> positive and  <dig> negative highest absolute ls scores from the c. elegans gene expression dataset. the notations are the same as in table  <dig> except lowci  and upci  in the 4th and 5th columns.

we also analyzed all the elsa associations together, including both unique and non-unique elsa findings. though most of the genes are still hypothetical protein coding genes, we do find a group of eukaryotic initiation factors:  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> in the  <dig> selected genes. this is as expected because both l <dig> starvation recovery and dauer exit will increase translation activities and result in high expression level of these genes. in addition, in the translation process, these factors work closely together to form different translation related complexes  <cit> , so their expression levels should be highly correlated with each other. actually, if we check the associations found by elsa, we do see these factors form a clique together with all edges being positive associations and statistically significant . the coherence of the elsa finding and our biological knowledge shows that elsa associations do reveal true associations within the biological system. however, as the majority of genes are still hypothetical, a thorough examination for true functional discoveries will require biological experiments.

discussion and 
CONCLUSIONS
the elsa technique extends lsa to time series data with replicates. this will help investigators better utilize the available information from their sample replicates and assist them in more effective and reliable hypothesis generation of time-dependent associations. in addition, a bootstrap framework is developed to estimate the confidence interval for the ls score. we also provided flexible missing value options and integrated efficient multiple testing control methods for the new elsa technique. using the microbial community and gene expression datasets, we demonstrated that elsa uniquely captures additional time-dependent associations, including local and time-delayed association patterns, when compared to ordinary correlation methods, such as pcc. in this paper, we described the applications of our method with the time series data. actually, the elsa can be applied to any type of data with some gradients, including the response to different levels of treatments, temperature, humidity, or spatial distributions.

currently, we use permutation test to assess the statistical significance of ls scores and bootstrap re-sampling to estimate the confidence interval of ls score. both the permutation test and bootstrap methods are time consuming if high precise determination of statistical significance or confidence interval is desired. theoretical developments on the distribution of the ls score are needed to eliminate or mitigate the computational burden required for these processes, and would be interesting topics for future studies. there is also a minimum sample number requirement for elsa analysis. we suggest the sample number to be greater than 5+d, where d is the desired delay limit, since shifting and trimming by elsa will further reduce the effective sample number and result in lower statistical power.

finally, we implemented the elsa technique and analysis pipeline into an open source c++ extension to python with many new features. specifically, the pipeline streamlines data normalization, local similarity scoring, permutation testing and network construction. as shown in figure  <dig>  we also provide a galaxy web framework-based version  <cit>  of the elsa pipeline. this elsa service features customized workflow, history and data sharing. in addition, we integrated cytoscape  <cit>  java web start technology so that the association network generated by elsa can be immediately visualized. based on these efforts, we anticipate that our novel elsa methodology, as implemented by the newly developed pipeline software, will significantly assist researchers requiring systematic discovery of time-dependent associations. more information about the software and web services is available from the elsa homepage at http://meta.usc.edu/softs/lsa.

authors' contributions
lcx, jas, jac, zgc, sls, jjv, jaf, fs designed the study. lcx, zgc, jaf and fs developed the methods. lcx, jas, jac developed and tested the software. lcx, jas and jac collected and analyzed the data. lcx, jas, jac, zgc, jaf and fs wrote the paper.

competing interests
the authors declare that they have no competing interests.

