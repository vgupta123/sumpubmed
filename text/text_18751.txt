BACKGROUND
with the development of high-throughput transcriptome sequencing techniques   <cit> , numerous transcripts have been identified in many species . a new class of transcripts, long non-coding rnas , are of particular interest because they contribute to many important biological processes, such as dosage compensation  <cit> , regulation of gene expression  <cit>  and cell cycle regulation  <cit> . moreover, a number of studies showed that mutations and dysregulations in lncrna genes were associated with human diseases  <cit> , such as cancers . it remains a challenge to distinguish mrnas from lncrnas, especially for de novo sequencing without highly confident reference sequences and comprehensive annotations, because lncrnas show many features similar to mrnas, such as poly tails, splicing and approximate sequence length  <cit> . until now, several tools, such as cpc  <cit>  and phylocsf  <cit> , have been developed based on known protein databases, intrinsic sequence features and sequence conservation properties. these tools show varied efficiencies in distinguishing lncrnas from mrnas for different datasets. most of them rely heavily on sequence alignment, and are therefore time-consuming and restricted by prior annotations. recently, a software tool named coding-non-coding index  was developed  <cit> . it discriminates coding from non-coding transcripts using intrinsic sequence features. cnci performs better than previous tools for poorly annotated species or those without whole-genome sequence information, but it may misclassify transcripts when there are insertion or deletion  sequencing errors among them. such errors are common in the current roche  and pacific biosciences  sequencing platforms .

in this study, we developed a characteristic k-mer based alignment-free tool named plek, to solve the above-mentioned problems. plek takes calibrated k-mer frequencies of a transcript sequence as its computational features. with these features, the support vector machine  algorithm was used to build a binary classification model to separate lncrnas from mrnas. the classification model achieved high accuracy  on training data with 10-fold cross-validation. plek also performed well on data from other vertebrates, using the classification model built from human training data. for transcripts containing indel sequencing errors, plek also attained high accuracy  in simulated and real transcriptome datasets. moreover, plek is  <dig> times faster than cnci and  <dig> times faster than cpc on the same test data. therefore, plek is an accurate, robust and fast tool. it is suitable for vertebrates lacking high-quality genome sequences and annotation information, and is especially effective for the de novo assembled transcriptome data generated by pacbio or  <dig> sequencing platforms.

implementation
careful selection of high-quality training data and their appropriate computational features is crucial to build an accurate, robust and fast binary classifier. in this section, we describe the data used to build the classification model and to test its performance. we then describe the distinct computational pipeline of k-mer usage. this is followed by the construction of a binary classifier using these data, k-mer usage features and svm algorithm. finally, we introduce simulation of indel sequencing errors on human protein-coding transcripts and transcriptome sequencing data from pacbio and  <dig> platforms.

data description
the refseq  <cit>  and gencode  projects provide comprehensive, non-redundant and well-annotated set of sequences, which can be used to build high-quality training and test datasets. human protein-coding transcripts were downloaded from the refseq database  and human long non-coding transcripts were collected from gencode v <dig>  there were  <dig>  protein-coding transcripts with the length of >200 nt in the human refseq dataset, and  <dig>  long  non-coding transcripts in the human gencode dataset. for performance assessment of cross-species prediction, we gathered transcripts from other vertebrates from the ensembl  <cit>  database  . to compare plek against cnci, cpc and phylocsf,  <dig>  mouse lncrnas were gathered from gencode database . mouse mrnas were collected from refseq  and those with ‘putative’, ‘predicted’ or ‘pseudogene’ annotations were excluded. all the sequences used were longer than 200 nt.table  <dig> 
data sources and performance of cross-species prediction



mus musculus
 <dig> %
 <dig> %

danio rerio
 <dig> %
 <dig> %

xenopus tropicalis
 <dig> %
 <dig> %

bos taurus
 <dig> %
 <dig> %

pan troglodytes
 <dig> %
 <dig> %

sus scrofa
 <dig> %
 <dig> %

macaca mulatta
 <dig> %
 <dig> %

gorilla gorilla
 <dig> %
 <dig> %
 <dig> %

pongo abelii
 <dig> %
 <dig> %
plek and cnci were tested on the same data; better accuracies are shown in bold face type. for refseq mrnas, those with ‘putative’, ‘predicted’ or ‘pseudogene’ annotations were excluded .


* <dig> non-coding transcripts with lengths of more than 150 nt.



improved k-mer scheme
to characterize lncrna and mrna transcript sequences, we used k-mer usage and sliding-windows with a one-nucleotide step-length to analyze each transcript. a k-mer pattern is a specific string with k nucleotides, each can be a, c, g or t. for k =  <dig> to  <dig>  we had 4 + 16 + 64 + 256 +  <dig> =  <dig>  patterns:  <dig> one-mer patterns,  <dig> two-mer patterns,  <dig> three-mer patterns,  <dig> four-mer patterns, and  <dig>  five-mer patterns.

in designing a sliding-window of length k, k =  <dig> ,…, <dig>  which slides along the transcript of length l by a step-length of one nucleotide, if the string in the transcript within the window matched with some pattern i, the occurrence number of the pattern in the transcript, denoted by ci, was increased by one. we did not simply use usage frequency ci/sk, i =  <dig> to  <dig> ; however, we calibrated it as fi by a factor relating to the length of the pattern, wk, as the features of the transcript for prediction. the features used for prediction were given in formula .
  <dig>    <dig>    <dig>  

construction of classification model
to produce a balanced training dataset, we collected all the  <dig>  long non-coding transcripts from the gencode v <dig> dataset  and randomly selected  <dig>  protein-coding transcripts from the human refseq dataset . the  <dig>  calibrated k-mer usage frequencies of each transcript were regarded as computation features. first, these calibrated frequencies were normalized to the range from  <dig> to  <dig> using the svm-scale program from the libsvm package   <cit> . second, a support vector machine  with a radial basis functional kernel, whose variance is gamma, was selected as the binary classifier. the optimal c of the svm and gamma of the kernel were obtained using the grid.py script of the libsvm package. during the process of parameter searching, 10-fold cross-validation was carried out to assess the performance of the classification model for each c and gamma parameter. finally, we built an svm binary classifier with the optimal c and gamma.

simulation of indel sequencing errors
assembly of transcripts is made difficult by short read length sequences, which are typically generated by next-generation sequencing technologies  <cit> , especially by illumina sequencing platforms. in contrast, pacbio and  <dig> platforms generate longer reads, which tend to be more easily assembled than short reads  <cit> . a large number of studies have been performed on these two kinds of sequencers . however, the indel sequencing error rates are relatively high in pacbio and  <dig> sequencing data  <cit> . a tool robust to such errors is desirable to distinguish lncrnas and mrnas, and facilitates annotation of lncrnas and mrnas of a species without whole-genome sequences.

we simulated single-base homopolymer-associated indel sequencing errors in protein-coding transcripts to evaluate the robustness of our tool, because they are the most typical indel sequencing errors in pacbio and  <dig> sequencing platforms. without loss of generality, we simulated  <dig> to  <dig> single-base indel sequencing errors per  <dig> bases . for a transcript with a length of l bases, it had n = lp indel errors. we first counted the number of homopolymers of various lengths. suppose the corresponding number of different homopolymers with lengths of l <dig>  l <dig>  …, lt was m <dig>  m <dig>  …, mt, respectively, where l1> l2> … > lt, and t is the number of different lengths of homopolymers. a biological fact is that the likelihood of an indel error increases with the length of a homopolymer  <cit> , even with no possibility that the indel error is in place between homopolymers. thus, the indel errors start with the longest homopolymers with the length of l <dig>  if m1< n, the homopolymers with the length of l <dig> are also inserted or deleted with bases, and so on, until n relatively longer homopolymers are processed. for these n homopolymers, we randomly inserted or deleted an identical base. if there are many homopolymers and few indels, the positions of indels will be evenly distributed in the transcripts .

construction of a real sequencing dataset
we used following two transcriptome datasets, sequenced by pacbio and  <dig> platforms, to test the performance of plek on de novo assembled transcripts without reference genomes. the first dataset was recently released by pacbio . after full-length cdna sequencing of the human mcf- <dig> transcriptome by the pacbio isoform sequencing  technology, pacbio used an iterative clustering algorithm and quiver  <cit>  to assemble de novo  <dig>  polished, full-length and non-redundant transcripts. we aligned these transcripts with human refseq mrnas  and gencode lncrnas  using ncbi blastn with the parameters: -task megablast -evalue 1e- <dig> -perc_identity  <dig> -max_target_seqs  <dig>  then, filtering these transcripts by query coverage >80%, subject coverage >80% and gaps > <dig>  we obtained  <dig>  transcripts  that may have had indel sequencing errors.

the second dataset, a helas <dig> cell line transcriptome, was sequenced by a  <dig> gs flx titanium platform and is available at the sequence read archive  under accession no. sra <dig>  <cit> . lucy   <cit>  and seqclean  were used to discard the adapter sequences, low quality reads and sequences of less than 50 bp, resulting in  <dig> , <dig> high-quality sequences. trinity r <dig>  <cit>  with default parameters was used to assemble these de novo. trinity assembled  <dig>  transcripts, which were subsequently aligned with human refseq mrnas and gencode lncrnas, and were filtered in the same manner as the first dataset. finally,  <dig>  transcripts with possible indel sequencing errors were retained .

running phylocsf on mouse datasets
in order to compare plek against phylocsf  <cit>  on mouse datasets, we set up a local instance of galaxy  <cit> . multiple alignments of  <dig> assemblies to the mouse genome  were downloaded from the ucsc genome browser . bed files describing mouse lncrna and mrna transcripts were loaded onto the local galaxy webserver and the tool ‘stitch gene blocks’ was used to retrieve multiple alignment files with sequence entries for the following genome builds based on the 60-way multiz alignment to mm10: mm <dig>  rn <dig>  dipord <dig>  cavpor <dig>  spetri <dig>  orycun <dig> and ochpri <dig>  genome build names were converted to common names and phylocsf was run using the options: --frames =  <dig>  --orf = stopstop <dig> and --removerefgaps.

RESULTS
different usage frequencies of k-mer strings
to verify the difference between mrna and lncrna in k-mer string usage, we calculated the calibrated usage frequencies of all the  <dig>  k-mer patterns in the positive training dataset  and negative training dataset . we used the wilcox rank-sum test to determine which k-mer pattern usage was significantly different between mrnas and lncrnas. with a significance level of 10- <dig>  we found that  <dig>  patterns were significantly different in their usage . this demonstrated that the differences between the usage frequencies of these k-mers could largely differentiate the two groups. therefore, our improved k-mer scheme is a suitable algorithm to distinguish mrnas and lncrnas. 10-fold cross-validation on the human training datasets was performed. the accuracy was  <dig> %. although plek was not better than the state-of-the-art cnci tool on the dataset , it worked better on transcriptome data from pacbio and  <dig> datasets .

performance in cross-species prediction
at present, genomic sequences and annotations of most organisms are of poor quality or are unavailable. to analyze the transcriptome data of these organisms, we could draw wide support from the well-annotated related organisms in a cross-species manner. for example, we could try using the models built by human training data to analyze data from other vertebrates that have not been deeply explored.

we tested plek on several other vertebrates to assess its performance in cross-species prediction of protein-coding and non-coding transcripts, and found that it worked well . this result demonstrated that plek exhibits good performance in cross-species prediction, as the cnci does, which performed uniformly on all the species of vertebrates  <cit> . we also found that the more similar the genome of a vertebrate was to that of human, the better the performance of the model. therefore, for species without reference genomes or with poor annotation information, one could use transcripts and annotation of closely related organisms to build models to distinguish their protein-coding and non-coding transcripts.

robustness to indel sequencing errors
we applied plek to human protein-coding transcripts with simulated indel sequencing errors to evaluate its robustness and compare its performance with that of cpc and cnci. cpc is widely used to assess the protein-coding potential of a transcript based on alignment with a protein database  <cit> . cnci effectively distinguishes protein-coding and non-coding sequences independent of reference genomes and known annotations by profiling adjoining nucleotide triplets . cnci provides highly accurate prediction of transcripts assembled from rna-seq data in a cross-species manner. in our study, human protein-coding transcripts were extracted from the refseq database and the overlapping transcripts with the training set were removed. using the indel error simulation approach, we examined robustness performance across different indel sequencing error rates from 0% to 3% . the results showed that the accuracies of plek and cpc were not affected by a small amount of indels, whereas the accuracy of cnci decreased significantly with increasing indel error rates, indicating that plek is a robust tool for distinguishing protein-coding and non-coding transcripts with homopolymer-associated indel sequencing errors.figure  <dig> 
comparison of robustness towards indel sequencing errors. the x-axis is the indel numbers per  <dig> bases . performance  of cnci declines significantly as the indel error rate increases.



performance on pacbio and  <dig> datasets
we compared the performance of plek with that of cnci and cpc using de novo assembled transcripts derived from pacbio and  <dig> platforms.  <dig>  transcripts from the mcf- <dig> transcriptome sequenced by a pacbio platform and  <dig>  transcripts from helas <dig> transcriptome generated by a  <dig> platform were fed into these three tools, respectively. plek maintained its high accuracy,  <dig>  on the pacbio dataset and  <dig>  on the  <dig> dataset, which was higher than that of cnci  . cpc achieved the highest accuracy , but the lowest specificity . cpc remained high positive and negative predictive values  . plek and cnci had relatively better ppv  but poor npv . sensitivity, specificity, ppv, npv and accuracy were calculated using the following formulae:
  

fn, false negative; fp, false positive; tn, true negative; tp, true positive.table  <dig> 
performances on transcripts derived from pacbio and 454


 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
bold face type indicates the best performances  among plek, cpc and cnci. italic face type indicates the worst specificity and npv among these tools.



performance comparison on mouse datasets
we compared the performance of plek with that of cnci, cpc and phylocsf on the mouse datasets which were composed of  <dig>  lncrnas and a random sample of  <dig>  mrnas. we evaluated these four tools and measured their accuracy on protein-coding and long non-coding transcripts, respectively. figure  <dig> shows the fraction of transcripts that were classified as coding or non-coding by each tool. on protein-coding transcripts, all these tools performed well. only a small fraction of protein-coding transcripts were misclassified as non-coding . on non-coding transcripts, plek and cnci outperformed phylocsf and cpc. at least 22% non-coding transcripts were misclassified as coding by phylocsf and cpc . these results indicate that plek is a reasonably efficient tool.figure  <dig> 
results of plek, cpc, cnci and phylocsf on mouse datasets.  the fraction of protein-coding transcripts classified as coding or non-coding.  the fraction of non-coding transcripts classified as coding or non-coding. data were collected from refseq mouse protein-coding transcripts  and gencode mouse long non-coding transcripts . shown is the fraction of transcripts classified as coding or non-coding by each tool. all these tools performed well on protein-coding transcripts. plek and cnci outperformed cpc and phylocsf on long non-coding transcripts.



computational performance
advances in sequencing technologies have produced huge amount of transcriptome data. to date , there are approximately  <dig>  studies of transcriptome analysis in the sequence read archive .  <dig>  of these studies generated more than  <dig> gb bases, and  <dig> of them produced more than  <dig> gb bases. the scale of such data will become much larger when we comprehensively analyze the rna-seq data from different studies. thus it is necessary to develop a high-speed tool to separate lncrnas from mrnas in large-scale transcriptome data.

we measured computation time of plek, cnci, cpc and phylocsf on a sample of  <dig>  protein-coding sequences and  <dig>  long non-coding sequences randomly selected from human refseq and gencode v <dig> databases, respectively. all these tools were run in a single-threading manner on an ibm x <dig> m <dig> computer equipped with two e5- <dig> cpus and  <dig> gb of ram. plek took 128 seconds to process the data, which was approximately eightfold faster than cnci ,  <dig> times than cpc  and  <dig>  times than phylocsf  . additionally, plek could be easily configured for multi-threading parallel computing, which will further save computation time. thus, plek is especially suitable for classifying a large number of transcripts conducted by rna-seq technologies.table  <dig> 
comparison of computational performances of plek, cnci, cpc and phylocsf


multi-threadingb
online runningc
computational time was tested on  <dig>  human mrna transcripts and  <dig>  human lncrna transcripts.


acomputation time consumed when run in a single-threading manner.


bcan the software tool run in a multi-threading manner?


cdoes the software tool provide a website for users to run online?


dcpc improves its computational performance using a page-cache method on its website.


ebed files were load onto the galaxy webserver  and the tool ‘stitch gene blocks’ was used to retrieve multiple alignment files with sequence entries for the following genome builds based on the 10-way multiz alignment to hg19: hg <dig>  pantro <dig>  tarsyr <dig>  micmur <dig>  otogar <dig> and rhemac <dig>  phylocsf was run using the options: --removerefgaps.



discussion
several studies have identified numerous lncrnas from rna-seq data . however, the transcriptomes of many species, with partial or missing reference genomes, have been studied using pacbio or  <dig> sequencing techniques . pacbio and  <dig> platforms generate longer read lengths than illumina, which make it easier to assemble de novo transcripts without reference genomes  <cit> ; however, transcripts generated by these platforms have relatively higher indel sequencing error rates  <cit> . furthermore, an increasing number of rna-seq data have been generated and the data scale is expanding rapidly with advances in high-throughput sequencing technologies. therefore, it is necessary to develop a tool independent of known annotations and suitable for cross-species prediction that is robust to indel sequencing errors and fast enough to be affordable for large-scale data.

appropriate computational features are very important for classification. although conventional k-mer feature has been employed in several studies, such as gene identification  <cit> , pirna prediction  <cit> , class-specific motif detection  <cit>  and mirna classification  <cit> , we found that the proposed improved k-mer usage frequencies were good features to identify lncrnas.

more features would be used for prediction with increasing k. for example,  <dig> features are used when k ranges from  <dig> to  <dig>   <dig>  features when k ranges from  <dig> to  <dig>  and so on. prediction accuracy increases with the increasing k; however, this is accompanied by an increasing computation load . as we increased k, and thus added more sequence features, we were able to better discriminate between lncrna and mrna sequences. k-mers with lengths greater than five do not significantly change the discrimination power of the svm. thus, for a trade-off between computational time and accuracy, we determined the range of k as  <dig> to  <dig>  the model, plek, which uses these features, attained high prediction accuracy in 10-fold cross-validation on a human training dataset. plek runs faster than previous tools, cpc and cnci, because cpc is an alignment-based tool and cnci is obliged to calculate hexamer  usage.figure  <dig> 
performance comparison of various ranges of
k. on the x-axis, ‘5’ means that k ranged from  <dig> to  <dig>  training data comprised  <dig>  human refseq mrna transcripts and  <dig>  gencode lncrna transcripts. svm classifiers were trained using 10-fold cross-validation on the training datasets. the figure indicates that the computation load rises and the accuracy increases along as k increases.



we multiplied the k-mer usage frequencies by various calibration factors , which gave more weightage to those k-mer strings that are longer in length. intuitively, k-mer usage frequencies generally decrease with the increase of the size of k-mer strings. for instance, the frequency of nucleotide g is theoretically around  <dig> , while that of ggggg is about  <dig> . however, longer k-mer strings may contain more information than shorter ones: several studies indirectly use hexamer and ant  usage as features to classify coding from non-coding rnas  <cit> . we multiplied usage frequencies of longer k-mer strings by relatively larger factors for calibration, hence outweighing longer k-mer strings, and thereby improving the weights of the corresponding features.

the step-lengths of sliding-windows in a previous tool, cnci, are fixed at three  <cit> . a single-base indel sequencing error in a protein-coding sequence may result in a false shift in reading frame  <cit> , which can dramatically affect the performance of cnci . in contrast, plek uses a sliding-window of size k, where k ranges from  <dig> to  <dig>  to slide along a nucleotide sequence from its 5′ to 3′ end to count the occurrence number of k-mer strings. frameshifts do not exert a strong influence on the calculation of k-mer usage when using a sliding-window of one-nucleotide step-length. this is why the results showed that our approach deals with indel sequencing errors robustly. this feature was also confirmed by the test on the real pacbio and  <dig> datasets . on these datasets, the specificity of plek was the highest among these tools. moreover, plek achieved an optimal balance between high specificity and high sensitivity . plek thoroughly outperformed cnci. although cpc produced the highest sensitivity, it suffered from poor specificity . cpc was more likely to misclassify lncrnas as mrnas, with high false-positive rates. there were large amount of mrnas  and few lncrnas  in these datasets, in conjunction with cpc’s high sensitivity, which led to the high accuracy of cpc on the test data.

compared with cpc, the sensitivity and specificity of plek is well balanced . on the real mouse datasets including the same number of mrna and lncrna transcripts, plek could obtain high ppv and npv . however, npv of plek is probably low on highly imbalanced datasets or organisms with compact genomes. the number of coding rnas is at least two orders of magnitude greater than that of non-coding rnas on the real pacbio and  <dig> datasets we used in this study. in this situation, as most of the transcripts are coding, the prediction value over the transcripts called as non-coding is very low. even quite a small portion, say 1%, of misclassification of mrnas is likely to result in remarkable decrease of npv . plek produces a decision value for each transcript and then labels it according to this criterion: the cut-off of discriminating transcripts is  <dig> by default, those with > <dig> decision values are labelled as mrnas, and < <dig> as lncrnas. generally, greater absolute decision values indicate greater confidence in the prediction. therefore, we can apply various criteria in different conditions to achieve satisfactory performance . similar criteria were also used or established in several researches using cpc and phylocsf  <cit> . another method of transcending this limitation of plek is to perform additional analyses, such as orthology analyses of the orfs contained in transcripts, scanning for known protein domains, etc.  <cit> .

the classifier we currently released on sourceforge was built on human training data. although it obtained well performance on most vertebrates , it might not be directly suitable to other species with very different sequence composition to human, such as drosophila melanogaster, caenorhabditis elegans and arabidopsis thaliana. therefore, we provided a python script, named ‘plekmodelling.py’, to assist users to build new classifiers. for the species that have not been well-explored, no sufficient reliable lncrna transcripts are now available to build classifiers in most cases. we encourage users to use as many reliable transcripts of their relatives as possible to build classifiers. for instance, we trained a classifier using zea mays ensembl mrna transcripts and lncrna transcripts identified by li et al.
 <cit> , and this classification model performed well on arabidopsis thaliana and oryza sativa datasets .

therefore, plek is a valuable alignment-free tool, which is accurate, robust and fast, to identify lncrnas in de novo assembled transcripts without reference genomes.

CONCLUSIONS
long non-coding rnas are receiving increasing attention, and distinguishing lncrnas from mrnas in de novo sequencing data without reference genomes represents a challenge. to solve this problem, we designed an alignment-free tool, plek, which is based on an improved k-mer scheme. the computation of k-mer usage is different from that used in previous studies  <cit> : the step-lengths of the sliding-windows are one nucleotide, and the k-mer usage is calibrated according to the size of k-mer strings. plek worked well on human training data and in a cross-species manner on other vertebrates using the model built from human training data. it also performed well on simulated transcripts and real de novo assembled pacbio and  <dig> transcriptomes, all of which include relatively high levels of indel sequencing errors than data generated by illumina platforms. plek struck a better balance between high specificity and high sensitivity than cpc on pacbio and  <dig> sequencing data. in addition, plek runs at least eightfold faster than previous available tools, cpc and cnci. the results demonstrated that plek is particularly suited to transcriptome data with indel sequencing errors and growing large-scale transcriptome datasets. thus, plek is a useful tool for distinguishing protein-coding and non-coding sequences from high-throughput sequencing data of many species without reference genomes.

availability and requirements
project name: plek.

project home page:https://sourceforge.net/projects/plek/ website.

operating systems: linux.

programming language: c, python.

other requirements: gcc, g++, python.

license: gnu public license version  <dig> .

any restrictions to use by non-academics: none.

electronic supplementary material
additional file 1:
demonstration of indel sequencing error simulation.


 additional file 2:
features and their p-values of rank-sum test.


 additional file 3:
visualization of the
k-
mer usage differences between mrnas and lncrnas.


 additional file 4:
building a new classifier using plekmodelling.py.


 abbreviations
454roche 454

antadjoining nucleotide triplets

aucarea under the curve

bpbase pair

cncicoding-non-coding index

cpccoding potential calculator

lncrnalong non-coding rna

mrnamessenger rna

npvnegative predictive value

ntnucleotide

pacbiopacific biosciences

plekpredictor of long non-coding rnas and messenger rnas based on an improved k-mer scheme

ppvpositive predictive value

svmsupport vector machine.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

jyz and aml participated in the design of the study. aml carried out the experiments and performed the statistical analysis. zyz participated in comparing plek against other exiting tools on mouse datasets. jyz and aml drafted the manuscript. all authors read and approved the final manuscript.

we thank professor junying zhang’s team members for technical discussions and helpful comments. we also thank the anonymous reviewers of the manuscript for their helpful comments and suggestions. this work was supported by the natural science foundation of china under grants  <dig>   <dig>   <dig> and 61303122; and the research fund for the doctoral program of higher education of china . the funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.
