BACKGROUND
during the last several years a substantial amount of information on large-scale structure of intracellular regulatory and signaling networks has been accumulated. however, the growth in our understanding of how these networks function in a robust and specific manner was lagging behind the shear rate of data acquisition.

to be able to understand the biological functioning or even to efficiently visualize a complex regulatory and signaling network it is important to determine the dominant direction of the information flow and to identify the links that go against this flow and thus generate feedback loops. ordering a network in such as way that the information cascades down from higher to lower hierarchical levels can help to detect its previously unknown inputs and outputs, to track sources of perturbations based on their observable downstream effects, etc. a simple-minded hierarchical layout of a densely interconnected network is often impossible due to a ubiquitous presence of feedback loops. indeed, all nodes in a strongly connected component of a network by definition are simultaneously upstream and downstream of each other.

however, if the forward flow of information in the network along multiple channels dominates over the backward flow along relatively few feedback links, the proper hierarchical layout could still be reconstructed based on the network topology alone. the identification and removal of a small number of feedback links would enable one to perform the hierarchical layout of the remaining acyclic network. in the next section we introduce a new probabilistic algorithm to detect an optimal hierarchical layout which minimizes the number of feedback links going from lower to higher levels in the hierarchy. in addition to direct biological applications, this algorithm provides a new computational approach to one of the  <dig> classic karp's np-hard problems: finding the minimum feedback arc set in a directed graph  <cit> . this problem enjoys a seemingly everlasting popularity reflected in a substantial number of approximate solutions . it has also been shown that the minimum feedback arc set problem, apart from being np-complete, is also apx-hard, which means that there exists a constant k >  <dig>  such that there is no polynomial-time approximation algorithm that always finds a link set at most k times bigger than the optimal result. the first polynomial approximation algorithm for the feedback arc set problem was designed by leighton and rao  <cit>  with the approximation factor k ~ o where n is the number of graph vertices. this estimate for the approximation factor was improved by seymour to o for polynomial-time algorithms.

many of the existing approximate algorithms to the minimal arc set problem are deterministic and greedy in nature, which on one hand side allows a fairly precise prediction of their complexity, performance and precision, yet on the other hand side involves consequences such intrinsic "near-sightedness" and frequent inability to find the global optimum among the local ones. a good example of such deterministic greedy algorithm which also relates the minimum feedback arc set search to graph layout is presented in  <cit> . according to this algorithm the hierarchical level of a node is determined by the difference between its out-and in-degrees. this way, the nodes with larger than average out-degrees and/or smaller than average in-degrees are naturally placed among the top hierarchical layers. these nodes directly or indirectly control other nodes with larger than average in-degree and/or smaller than average out-degree. the number of operations in this approximate algorithm scales linearly with the number of graph links.

our proposed algorithm, unlike the existing algorithms described above, is probabilistic in nature. in the limit of sufficiently slow and long annealing it has a good chance to converge to the actual solution of the minimum feedback arc set problem. at the same time it still requires only a polynomial number of operations, which is proportional to the product of the number of links and vertices in the graph. to evaluate the advantages of the proposed annealing algorithm and to reveal its distinction from the deterministic algorithms, we compare it to our own greedy deterministic algorithm. this algorithm sequentially cuts the links that belong to the largest number of cycles in the network. we found that the probabilistic simulated annealing algorithm generally outperforms the deterministic one in both the number of removed feedback links  as well as in the speed and memory requirements. a simple visual example is provided for the situation when the deterministic greedy algorithm is non-optimal.

following that, we discuss biological implications and applications of our findings as well as how additional constraints such as a priori knowledge of the function and, therefore, the hierarchical position of certain nodes affects the resulting layout.

methods
consider a graph consisting of n vertices and l directed links. the goal is to distribute the vertices among m levels in such a way that the number of links going against the hierarchy, or from a lower level to the same or a higher one, is at its minimum. if the number of levels m is sufficient , this problem is equivalent to finding a minimum feedback arc set  <cit> , or removing as few as possible links to make the graph acyclic, or feedback-free.

a naive way to solve this problem exactly is to enumerate all cycles in a graph and then sample all possible combinations of links checking if they belong to all cycles. if one starts with enumerating individual links, then pairs of links, etc, until a removal of l links would yield the first acyclic graph, such sampling would require checking the ∑i=1l combination of links. for biologically relevant values l ~  <dig> -  <dig> and l ~  <dig> -  <dig> the computational costs of such exhaustive enumeration are prohibitive. , it follows that even for fairly modest l = 102and l = l/ <dig> the number of such attempts is ~ <dig> )

simulated annealing algorithm
the task of finding the minimum number of anti-hierarchical or feedback links can be interpreted as an optimization problem and tackled by probabilistic methods such as simulated annealing. evidently, there exist more than one way to define the optimization function, and after exploring several possibilities we converged to the following one:

• for a given network, a set of m levels is introduced . initially, all nodes are distributed on the levels randomly.

• for a particular distribution of nodes on levels, the number of links lopposite that go opposite to the hierarchy, that is, from a lower level to the same or a higher one, is declared to be the energy e = lopposite of the distribution, or the optimization function.

• a node and its new level are selected at random. a difference in energy Δe that would occur if the node were moved to the new level is calculated. the node is moved to this new level with the probability min{ <dig>  exp}, where t is the temperature.

• after the network has been sampled a sufficient number of times  so that each node has an opportunity to be moved to every level, the temperature is reduced by some factor, usually  <dig> . initially, the temperature is set sufficiently high, usually of the order of the average node degree l/n, to allow un-obstructed level changes.

• when the temperature becomes low enough to inhibit any level changes, the remaining ascending and same-level links are declared feedbacks and removed.

• the whole procedure can be repeated several times to check for consistency in the assignment of feedback links and to determine the solution with the lowest number of removed links.

the energy difference associated with changing the level of a single node is illustrated in fig.  <dig> 

RESULTS
comparison with deterministic greedy algorithm
to illustrate the advantages of the proposed simulated annealing method, we compare it to a straightforward "greedy" algorithm which follows the steepest descent in the number of feedback cycles. we implemented it in the following way:

• by enumerating all cycles in a graph, each link is assigned a score equal to the number of feedback cycles it participates in.

• the link with the highest score is removed. when several links have the same highest score, a link to be removed is selected among them by random.

• the score of each remaining link is reduced by the number of cycles which pass through this link and were cut on the previous step.

• the procedure of link removal and score reduction is repeated until no cycles remain .

the cycle enumeration can be implemented by following all paths that originate from a given vertex and recording only the cycles that come back to this vertex. the procedure is repeated for each of the n graph vertices: evidently, each cycle of length c is counted c times and a proper normalization is performed. naturally, the performance of the greedy algorithm is limited in terms of speed and memory requirement of the cycle enumeration step.

an example of network where the greedy algorithm performs flawlessly is shown in figure  <dig> 

here the link  carries the maximum score  <dig>  a removal of this link indeed makes the graph acyclic, while a removal of any other than  link would require a subsequent removal of the second link to achieve the same goal.

the hierarchical level-ordering by stimulated annealing outperforms the deterministic greedy algorithm in all respects. the performance of the stochastic stimulated annealing algorithm scales as n × m; memory-wise, it needs only lookup tables of a node position in the hierarchy and its nearest neighbors. yet the greedy algorithm requires tracking along all paths originating from a given vertex, which uses a lot of memory and slows the performance significantly. despite the fairly large prefactor required for a gradual multi-step annealing, the stochastic algorithm readily performs layouts of protein networks in whole organisms, consisting of around ~ <dig> nodes and ~ <dig> links. on contrary, we found it impractical to apply the greedy algorithm to networks with more than  <dig> –  <dig> vertices, which limits its utility to analyzing isolated systems and pathways. in addition, the greedy algorithm, as any other method based on near-sighted, local, single-step optimization, may miss the globally optimal solution, while the properly executed stimulated annealing always has a high probability of converging to it. this is indeed the case for bigger and more complex networks; yet even in a fairly simple graph, such as shown in fig.  <dig>  the greedy algorithm may perform non-optimally.

improving the layout by shortening the total length of hierarchical links
a good hierarchical layout of a regulatory or signaling pathway clarifies its biological functioning by identifying the cascade of information processing steps. such layout should not only minimize the number of anti-hierarchical  links but also shorten the length of hierarchical  links. without carrying any energetic penalty these latter links can be arbitrarily long, i.e. they could connect proteins separated by many hierarchical levels. this interferes with identifying the hierarchical levels as definite stages  of information processing. introduction of a small energetic penalty for the total length of hierarchical links alleviates this problem. the energy function used in our simulated annealing algorithm then becomes

  e=∑i→j. 

here mi and mj denote the hierarchical levels of nodes i and j connected by a link i → j ) and h is a version of the heaviside step function equal to  <dig> for x ≥  <dig> and to  <dig> otherwise. for moderate-size pathways consisting of ~ <dig> vertices we tried the range of energetic penalty e' =  <dig>  -  <dig>  . the layout results in this range were independent of e'.

selecting the number of hierarchical layers
the number of levels m for the stimulated annealing hierarchical layout could be fixed by external biological requirements such as e.g. a limit on time allowed for a functional response. otherwise, m could be determined self-consistently from our algorithm itself, by observing when the number of anti-hierarchical links stops to significantly decrease upon the increase in the number of levels. this is illustrated in fig.  <dig> where a plot of the number of anti-hierarchical links vs number of levels is presented for the human protein phosphorylation network.

example: the layout of egfr <dig> and b-cell receptor pathways
the biological function of anti-hierarchical links identified by our annealing algorithm often involves sending feedback late in the timecourse of their signaling pathways, or, similarly, resetting the pathway to its original state which it had before the arrival of the signal. to illustrate this on a concrete biological example, we performed the hierarchical layout of two of the largest pathways in the hprd pathway database  <cit> : the egfr1-pathway  and the b-cell receptor pathway . the hierarchical layout is illustrated in fig.  <dig> and  <dig>  the optimal layout was achieved at  <dig> hierarchical layers for the egfr1-pathway and  <dig> hierarchical levels for the b-cell receptor pathway. in most annealing runs we correspondingly identified  <dig> and  <dig> anti-hierarchical links in these two pathways.

it is intriguing that  <dig> out of these  <dig> +  <dig> =  <dig> anti-hierarchical links correspond to dephosphorylation and  <dig> to ubiquitination protein modification processes. while these biomolecular mechanisms alone do not prove that the involvement of these interactions in feedback, they strongly support this notion. indeed, dephosphorylation is commonly used to reset previously phosphorylated proteins to their original state, which they had before the arrival of the signal. similar to this, the ubiquitination of a protein triggers its degradation by the proteasome, which once again resets the state of the pathway to what it was before the arrival of the signal. thus protein modifications due to dephosphorylation and one to ubiquitination tend to happen late in the timecourse of signaling pathways and thus likely to be used for feedback signaling. in addition to these direct applications, our algorithm is useful, for example, for identifying putative sources  of multigene differential expression patterns  <cit> . such procedure is based on tracking upstream the regulatory links from often very numerous differentially expressed genes to the common regulators that could have caused the particular expression pattern. to be able to do this one needs a network of direct or indirect protein regulations from which all feedback links have been previously removed.

example: the layout of the genome-wide network of human post-translational modifications
often there exist some a priori biological knowledge about hierarchical positions of certain protein nodes in a signaling network. for example, the receptor proteins localized in the membrane typically serve as entry point of extracellular signals. upon activation they pass these signals to cascades of proteins localized in the cytoplasm which ultimately reach the transcription factors localized in cell's nucleus. thus receptor proteins might have to be forcefully put on the upper level of the hierarchical layout of a signaling network. we implemented this idea in the optimal layout of the network of post-translational modifications of human proteins shown in fig.  <dig>  this network is based on the resnet  <dig>  database  <cit> , collected by ariadne genomics, inc. from the biomedical literature with the help of natural language processing algorithms. the information about protein-protein interactions was collected from abstracts of the entire pubmed database as well as full-text articles of more than  <dig> journals. it was then manually and automatically curated to include a reliable set of protein-modification interactions  between human proteins. the optimal layout of  <dig> proteins in this network over six hierarchical levels is shown in fig.  <dig>  green arrows represent  <dig> hierarchical links while red arrows –  <dig> anti-hierarchical  links going from lower to higher  levels in the hierarchy. only proteins and links reachable from one of the  <dig> receptor-proteins placed at the top hierarchical level were included.

in contrast to receptors, many transcription factors serve the role of effectors of signaling pathways and thus must occupy the lowest levels of the hierarchy. initial positioning of such nodes at their appropriate hierarchical levels usually speeds up finding the layout with the smallest number of anti-hierarchical links. in addition, fixing these nodes on their appropriate hierarchical levels helps to find a layout which is more plausible from the biological standpoint.

in a similar way, the orientation of certain links  could be fixed "by hand" if they are known to be of the feedforward or feedback nature. this could be implemented, for example, by assigning sufficiently large negative energies to the proper orientation of such links or protein pairs, making their annealing re-orientation highly improbable. even imperfect  initial knowledge of biological functioning of the network could be used to assign weights to individual links, so that the energy e of a particular assignment of nodes to layers is a sum of weights of the anti-hierarchical links. thus the a priori plausibility of a link to be  a feedback can be introduced into the layering algorithm. we leave these questions as well as optimization of the proposed algorithms to various signaling and regulatory intracellular networks for future studies and publications.

CONCLUSIONS
we introduced the simulated annealing algorithm, which is capable of performing near-optimal acyclic layout of large directed networks. it reveals the dominant direction of information flow in and identifies the set of links going against this dominant direction, that is from from lower to higher hierarchical levels. in biological regulatory and signaling networks such anti-hierarchical links often turn out to be involved in sending feedback or resetting signaling pathway to its default state. in addition to elucidating biological functioning of complex biomolecular pathways and networks, the proposed algorithm also offers a new probabilistic approach to one of the  <dig> classical np-hard problem: finding the minimum feedback arc set in a directed graph.

authors' contributions
both authours contributed equally to all parts of this work.

