BACKGROUND
solenoid repeat proteins have recently attracted interest because of their versatility as scaffolds for the engineering of protein-protein interactions  <cit> . this class of proteins is characterized by homologous, repeating structural units, which stack together to form an open-ended superhelical structure. such an arrangement is in contrast to the structure of most proteins, which fold into a compact shape  <cit> . solenoid structures adopt a variety of shapes, depending on the structural features of the repeating structural unit and the arrangement of individual units in the solenoid. the curvature created by the superhelical nature of these proteins predetermines the target proteins that can bind to them  <cit> . the tetratrico peptide repeats  together with their related repeats, the pentatrico peptide repeats  and the sel1-like repeats, form a large family within the solenoid repeat proteins. the repeating unit of tprs, pprs and sel1-like repeats are formed of two or more stacked  <dig>   <dig> and 36-amino acid αα-hairpin repeat units, respectively  <cit> . these solenoid repeat proteins are involved in a diverse spectrum of cellular functions such as cell cycle control, transcription, splicing, protein import, regulatory phosphate turnover and protein folding, by virtue of their tendency to bind target proteins  <cit> .

homologous structural repeat units are often highly divergent at the sequence level, a feature that makes their prediction challenging. currently, several web-based resources are available for the detection of tprs, including pfam  <cit> , smart  <cit> , and rep  <cit> . these resources use hidden markov model  profiles or sequence profiles, which are constructed from the repeats trusted to belong to the family. however, the profiles used are constructed from closely homologous repeats; therefore, divergent repeat units often get a negative score and are not considered in computing the overall statistical significance, even though they are individually significant. for this reason pfam, smart, and rep perform with limited accuracy in detecting remote homologs of known tpr-containing proteins and in delineating the individual repeats within a protein  <cit> . for example, tpr-like repeats from the central domain of malt protein  are not detected by these resources. malt is the transcription regulator of the maltose regulon, which is responsible for the uptake and catabolism of malto-oligosaccharides in e. coli  <cit> . in order to predict such divergent repeats, we have developed a specialized tool , which is able to predict tpr-, ppr- and sel1-like repeats from protein sequences. the advantages of our method are the following:

• we construct optimized profiles through iterative searches by varying the threshold for inclusion of repeats into the profiles.

• we apply a score offset in such a way that repeats with p-value ≤  <dig>  will get a positive score. therefore, even marginally significant repeats will contribute to the whole-protein p-value.

• putative repeat units located near an already identified repeat get a tight-fit reward in order to account for the tendency of repeats to occur in tandem.

• our tool reports not only p-values, based on the score distribution of true negatives derived from the known protein structures, but also computes a probability that a target sequence is a tpr protein.

implementation
given a query sequence of length l and a sequence profile of length w representing a single repeat unit, tprpred finds the best-scoring alignment of the sequence with an integer number of repeats, each of them aligned without internal gaps using standard log-odds scoring. tandem repeats with a gap of ≤ k residues are rewarded with r bits, while gaps of > k residues are penalized with g bits .

since no internal gaps are allowed within repeats, the score distribution of the repeat profile with equal-length windows of unrelated sequences has an almost perfect gaussian distribution.  the σ and μ parameters of this distribution are derived from a calibration search against a database of unrelated protein sequences from the scop database  <cit> . the tails of a gaussian distribution approach zero much faster than the tails of a gumbel distribution . therefore, the same positive score of a true repeat unit will generally have a much higher significance in the case of a gaussian as compared to a gumbel distribution. hence, the restriction of ungapped repeats increases the sensitivity of tprpred for detecting ungapped repeat families such as tpr-, ppr- and, sel1-like repeat proteins and others with duplicated helical hairpins.

if the reward r for closely spaced repeat units is set low  then one will fail to detect many repeats if their score is below zero. this is the case for the hmmer software  <cit> , where often repeat instances have scores below zero even though their p-values are significant . since alignment algorithms find the alignment with maximum score, they will skip repeat instances that are assigned negative scores. on the other hand, if r is set high, many false positive repeat units will be found within k residues of an already ascertained repeat unit. we therefore set the reward r such that the probability of finding a false positive repeat instance within k residues of another repeat is pr =  <dig> . in the appendix, it is shown that this requires to set the tight fit reward r to

r=−2σ×erfc−1−μ.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgybgccqgh9aqpcqghsisldagcaaqaaiabikdayawcbeaaiigakiab=n8azjabgena0kabbwgaljabbkhayjabbagamjabbogajnaacaaaleqabagaeyoei0iaegymaedaaowaamwaaeaacqaiyagmdaqadaqaaiabigdaxiabgkhitiabcicaoiabigdaxiabgkhitiabdchawnaabaaaleaacqwgybgcaeqaaogaeiykakyaawbaasqabeaacqaixaqmcqggvawlcqwglbwsaaaakiaawicacaglpaaaaiaawufacagldbaacqghsislcqwf8oqbcqgguaglcawljagaaczcamaabmaabagaegymaedacagloagaayzkaaaaaa@53c4@

here erfc- <dig> is the inverse of the complementary error function, and σ and μ are derived from the calibration of the profile as explained before.

to further increase sensitivity, we add an offset c to the repeat unit match score in such a way that the probability for the observation of a repeat in an unrelated database protein of length l is equal to pc =  <dig> . in the appendix it is shown that this requires to set the offset c to

c=−2σ×erfc−1−μ.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbwycqgh9aqpcqghsisldagcaaqaaiabikdayawcbeaaiigakiab=n8azjabgena0kabbwgaljabbkhayjabbagamjabbogajnaacaaaleqabagaeyoei0iaegymaedaaowaamwaaeaacqaiyagmdaqadaqaaiabigdaxiabgkhitiabcicaoiabigdaxiabgkhitiabdchawnaabaaaleaacqwgjbwyaeqaaogaeiykakyaawbaasqabeaacqaixaqmcqggvawlcqggoaakcqwgmbatcqghsislcqwgxbwvcqghrawkcqaixaqmcqggpaqkaaaakiaawicacaglpaaaaiaawufacagldbaacqghsislcqwf8oqbcqgguaglcawljagaaczcamaabmaabagaegomaidacagloagaayzkaaaaaa@5934@

this ensures that even repeat units with no neighbours within k residues will get detected, if their p-value is better than  <dig> , independent of the original score baseline . at the same time, this global offset guarantees that only very rarely  tprpred will find more than one false positive repeat unit in an unrelated protein. tprpred not only computes p-values, which are solely based on the true negative score distribution, but is also able to report the probability that a target sequence is a true homolog, by making use of both the true positive and true negative score distributions. in addition, tprpred is able to calculate more realistic  e-values, by calibrating with true negative sequences as opposed to random sequences. the algorithm has been implemented as a computer program "tprpred", written in c++ . the profiles used by tprpred are generated by the program ppmake in the tprpred software package. the henikoff and henikoff sequence weighting and pseudocounts are added in a way completely analogous to the procedure used in psi-blast software package  <cit> , except that the gonnet matrix is used instead of blosum <dig>  the tool has been tested on a gnu/linux platform with a i <dig> processor architecture.

RESULTS
definition of tpr-like and non-tpr-like proteins
we define the positive  and the negative  set of protein sequences by reference to a set of  <dig> bona fide tpr-like domains. these are the domains contained in the "tpr-like" superfamily  of the scop database   <cit> , which consists of the tpr family and the malt protein.  the scop classification of malt as tpr-like is supported both by structural and sequence similarity:  a dali search  <cit>  with the malt structure  for structural neighbors yields ten scop domains above z-score of  <dig>  all of them from the tpr family in scop .  furthermore, a search with the remote homology prediction server hhpred  <cit>  through the scop database readily yields tprs as closest relatives . to take into account more recent tpr structures not yet contained in scop v <dig> , we used dali to search the pdb database  with the  <dig> bona fide tpr-like repeat domains as defined by scop. we included all structures into our true positve set that obtained a z-score of at least  <dig> with one or more of the bona fide tpr-like repeat domains.

the true negative is defined conservatively to include all sequences in scop vl. <dig>  which have no z-score better than  <dig> with any of the  <dig> bona fide tpr-like repeat domains . this ensures that marginal cases of proteins which can be neither classified safely as tpr-like nor as non-tpr-like will be ignored in the benchmark.

profile generation and test set
the performance in the high-selectivity regime of sequence profiles depends on the number of close homologs, whereas the performance in the high-sensitivity regime depends on the number of remote homologs used in constructing the profiles. relaxing the threshold value to include remote homologs often results in false positives. to optimize the trade-off between remote homologs and false positives, we have constructed a series of tpr profiles. these profiles were generated by iterative searches against the non-redundant  database at ncbi, filtered to a maximum pairwise sequence identity of 70%  by cd-hit  <cit> . prior to the searches we broadly removed homologs of malt , which we intended to use as a test set, from the nr- <dig> database using three iterations of psi-blast  <cit>  at an e-value cutoff of  <dig> 

homologs of malt contain divergent tpr units and therefore represent a challenging test set. these proteins belong to the stand family of atpases  <cit> , which themselves are part of the aaa+ superfamily  <cit> . we extracted these sequences conservatively with psi-blast  from nr- <dig>  using the central domain of malt  as a query sequence. using the defining characteristic of stand proteins, namely an n-terminal p-loop ntpase domain, as a criterion we selected  <dig> proteins for the test set. the sequences of these proteins are given in the supplementary material .

we performed iterative searches to convergence on nr- <dig> minus stand proteins with various threshold parameters . the initial searches were seeded with a manually prepared structure-based sequence alignment of known tpr protein structures . we tested the resulting profiles on the stand family, tpr family, and the true negative set. the best profile was selected based on its performance on the stand family, as illustrated in figure  <dig> 

further, we built the ppr and the sel1-like profiles by using the same procedure and cutoff value as for the tpr profile.

benchmarking
we benchmarked our method and the web-server against pfam, smart and rep.

comparison of tprpred and hmmer
to demonstrate the sensitivity/selectivity of tprpred against hmmer , which is the underlying method employed by the pfam and smart web-servers, we benchmarked the performance of both these methods, and the results are shown using the receiver operating characteristic  plot as illustrated in figure  <dig>  we could not benchmark against rep, because the stand-alone version is not available. the data sets for the benchmark were obtained using the same true positive and true negative sets which we defined in the profile generation section, but with a 25% maximum sequence identity. in order to enrich these data sets with reliable homologs, two iterations of psi-blast searches were performed for each domain sequence. the first iteration was performed on the nr- <dig> database. the hits with an e-value ≤ 10- <dig> and ≥ 85% coverage to the query sequence were extracted into a multiple alignment, that was used to jump-start the second iteration against the nr- <dig> database. the same selection criteria as in the first iteration were applied in obtaining the homologs for the query. the resulting enriched data sets were simultaneously filtered to a 50% maximum sequence identity using cd-hit to reduce the redundancy.

both methods were used to perform searches through the true positive and true negative data sets, using their own tpr profiles or hmms. the roc plot shows that tprpred detects more sequences with e-value better than the first false positive compared to hmmer. however, for lower selectivity tprpred performance is comparable to hmmer.

comparison of the web-servers using stand family members
to assess the sensitivity of tprpred in detecting divergent tpr units over pfam , smart , and rep , we evaluated the performance of the web-servers using the stand family test set. additionally, we also used  <dig> true negative sequences by selecting arbitrarily from the all-α class of the scop database. the sequences of these proteins are given in the supplementary material . the hits that were confidently predicted according to the web-servers for the stand proteins are tabulated in table  <dig>  none of the servers detected false positives from the true negative sequences . this shows that all the servers are unbiased to the α-helical proteins which are unrelated.

tprpred performs significantly better in detecting the tpr units from the members of the stand family, although sequences of the stand family members were explicitly excluded from our tpr profile. for instance, the  <dig> tpr units present in malt  <cit>  were detected only by our server. overall, tprpred detected twice as many proteins as tpr-containing proteins and over  <dig> fold more individual repeats as the next best web-server, pfam. this could be due to the more sensitive gaussian scoring as well as the score base-line strategy employed by our tool.

comparison of the web-servers using known protein structures
in order to assess the sensitivity of the web-servers in detecting the individual repeat units, we submitted the sequences of the tpr structure set, along with  <dig> sel1-like repeat proteins classified under the hcp-like family , to tprpred, pfam, smart, and rep web-servers. the number of repeats detected confidently for each sequence are tabulated in table  <dig> and the repeats detected only by tprpred are shown in figure  <dig>  the tpr structure set contains both proteins that were present in the training databases of the individual methods  and proteins whose structure became available subsequently . all servers performed well on the former proteins, although tprpred stood out with 100% detected individual repeats over the other servers, which only detected between 70% and 90%, but the real difference between servers became visible on the latter proteins. here, tprpred recognized all proteins as tpr-containing, whereas the other servers recognized less than half, and tprpred detected 97% of individual repeats, whereas the other servers detected only about 54%.

* structures shown in figure 3

† tpr

‡ sel1-like repeat

see also figure  <dig>  the actual number of repeats for each entry and the number of repeats detected by various web-servers are tabulated.

comparison of tprpred, pfam and smart on the human proteome
to assess the global gain in the protein annotation of tprpred over pfam and smart, we scanned a set of  <dig>  <dig> sequences of the human proteome downloaded from integr <dig>  <cit> . the number of proteins and individual repeats detected confidently by tprpred, pfam and smart are tabulated in table  <dig>  tprpred detected more proteins as tpr-containing proteins and over  <dig> fold more individual repeats than pfam and smart.

CONCLUSIONS
tprpred is a profile-sequence comparison method for predicting solenoid repeat proteins of tprs, pprs and sel1-like repeats. it shows a marked improvement over existing methods, particularly in the detection of non-canonical, divergent repeats. we attribute this to the exploitation of simple traits such as the tendency of repeats to occur in tandem, robust statistical evaluations and the construction of profiles by iterative searches. the algorithmic improvements of the p-value-dependent score offset as well as the tight-fit reward are quite general and easily transferable to other repeat detection approaches.

availability and requirements
• project name: tprpred.

• project home page: 

• sources: the c++ and perl source codes for tprpred along with the profiles are freely available by anonymous ftp to 

• operating systems: linux, unix.

• programming language: c++ and perl.

• other requirements: the perl script requires perl interpreter version  <dig> . <dig> or higher.

• license: gnu general public license 

• any restrictions to use by non-academics: none.

authors' contributions
js developed the algorithm and programmed the perl version. mrk was involved in the analysis and interpretation of the data, wrote the wrapper program for the web-interface and drafted the manuscript. anl supervised the overall work. anl and js critically revised the manuscript. all authors read and approved the final manuscript.

appendix
first we show that, if the tight-fit reward r is calculated according to equation  <dig>  the p-value to observe a second repeat unit within k residues from an existing one will be pr. to start, note that the p-value for observing a score s > s between the profile and an unrelated equal-length sequence window is

prob=∫s∞1/2πσ2exp⁡22σ2)ds=12erfc,
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqgqbaucqqgybgccqqgvbwbcqqgibgycqggoaakcqwgtbwucqgh+agpcqwgzbwccqggpaqkcqgh9aqpdawdxaqaaiabigdaxiabc+cavmaakaaabagaegomaidccigae8hwdanae83wdm3aawbaasqabeaacqaiyagmaaaabeaaaeaacqwgzbwcaeaacqgheispa0gaey4kiipakigbcwgaljabciha4jabcchawnaabmaabawaasaaaeaacqggoaakcqwgtbwucqghsislcqwf8oqbcqggpaqkdaahaawcbeqaaiabikdayaaaaoqaaiabikdayiab=n8aznaacaaaleqabagaegomaidaaaaaaogaayjkaiaawmcaaiabdsgakjabdofatjabg2da9maalaaabagaegymaedabagaegomaidaaiabbwgaljabbkhayjabbagamjabbogajnaabmaabawaasaaaeaacqwgtbwucqghsislcqwf8oqbaeaadagcaaqaaiabikdayawcbeaakiab=n8azbaaaiaawicacaglpaaacqggsaalaaa@690a@

where erfc() is the complementary error function. because the alignment between the profile and equal-length sequence windows is gap-free, the scores of neighbouring sequence windows can be assumed to be independent from each other. hence, by elementary probability theory, the probability to obtain a score si + r larger than zero at any of k start positions  is

prob=1−prob=1−∏i=1k)=1−)k.
mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaewadaaabagaeeiuaalaeeocainaee4ba8maeeoyaimaeiikagiaem4uam1aasbaasqaaiabigdaxaqabagccqghrawkcqwgybgccqgh+agpcqaiwaamcqqggaaicqqgvbwbcqqgybgccqqggaaicqgguaglcqgguaglcqgguaglcqqggaaicqqgvbwbcqqgybgccqqggaaicqwgtbwudawgaawcbagaem4saseabeaakiabgucariabdkhayjabg6da+iabicdawiabcmcapaqaaiabg2da9aqaaiabigdaxiabgkhitiabbcfaqjabbkhayjabb+gavjabbkgaijabcicaoiabdofatnaabaaaleaacqaixaqmaeqaaogaey4kasiaemocainaeyizimqaegimaajaeeiiaaiaeeyyaemaeeoba4maeeizaqmaeeiiaaiaeiola4iaeiola4iaeiola4iaeeiiaaiaeeyyaemaeeoba4maeeizaqmaeeiiaaiaem4uam1aasbaasqaaiabduealbqabagccqghrawkcqwgybgccqghkjyocqaiwaamcqggpaqkaeaaaeaacqgh9aqpaeaacqaixaqmcqghsisldaqewaqaaiabcicaoiabigdaxiabgkhitiabbcfaqjabbkhayjabb+gavjabbkgaijabcicaoiabdofatnaabaaaleaacqwgpbqaaeqaaogaeyopa4jaeyoei0iaemocainaeiykakiaeiykakcaleaacqwgpbqacqgh9aqpcqaixaqmaeaacqwglbwsa0gaey4diunaaoqaaaqaaiabg2da9aqaaiabigdaxiabgkhitmaabmaabagaegymaejaeyoei0yaasaaaeaacqaixaqmaeaacqaiyagmaagaeeyzaumaeeocainaeeozaymaee4yam2aaewaaeaadawcaaqaaiabgkhitiabdkhayjabgkhitggaciab=x7atbqaamaakaaabagaegomaidaleqaaogae83wdmhaaagaayjkaiaawmcaaagaayjkaiaawmcaamaacaaaleqabagaem4saseaaogaeiola4caaaaa@a609@

we now set this expression to pr, the p-value for observing a spurious second repeat within k residues of an already detected one. solving for r yields equation  <dig> 

equation  <dig> can be proved analogously. a database protein of length l contains l - w +  <dig> windows of length w. the score between the profile and the i'th window is written as si + c, which already includes the score offset c that needs to be determined. the probality that at least one of the scores is larger than zero is the same as in the previous equation when r is replaced by c, and k by l - w +  <dig>  setting the right-hand expression equal to pc and solving for c then yields equation  <dig> 

supplementary material
additional file 1
relatives of malt by structure and sequence comparison. dali and hhpred search results for malt 

click here for file

 additional file 2
structural neighbours of tprs. structural neighbours of known tprs according to the dali structure comparison server. the structures with z scores ≥  <dig> are tabulated. the pdb codes were mapped on to the scop domain database.

click here for file

 additional file 3
stand proteins. the set of  <dig> stand family members.

click here for file

 additional file 4
structure-based sequence alignments. structure-based sequence alignments for tpr and sel1-like repeat families.

click here for file

 additional file 5
true negative data set used in servers benchmarking. arbitrarily selected  <dig> true negative sequences from the all-α class of the scop database.

click here for file

 acknowledgements
we thank christian mayer for re-coding the perl script in c++ and andreas biegert for integrating the program into the mpi bioinformatics toolkit. funding by the max planck-society is gratefully acknowledged.
