BACKGROUND
whole genome prediction of complex phenotypic traits using high-density genotyping arrays has attracted a lot of attention, as it is relevant to the fields of plant and animal breeding and genetic epidemiology . given a set of biallelic molecular markers, such as snps, with genotype values typically encoded as { <dig> ,2} on a collection of plant, animal or human samples, the goal is to predict the quantitative trait values by simultaneously modeling all marker effects.

more specifically, the genetic trait prediction problem is defined as follows. given n training samples, each with m≫n genotype values  and a trait value, and a set of n′ test samples each with the same set of genotype values but without trait value, the task is to train a predictive model from the training samples to predict the trait value, or phenotype of each test sample based on their genotype values. let y be the trait value of the training samples. the problem is usually represented as the following linear regression model: 
  <dig> y=β0+∑i=1mβixi+el 

where xi is the i-th genotype value, m is the total number of genotypes and βi is the regression coefficient for the i-th genotype, el is the error term. we call this model single marker model.

the above model assumes that only the single markers, or main effects, play a role for the prediction. however, it is known that the interactions of the markers may also contribute to the genetic traits under certain conditions, which is known as epistasis  <cit> . the pairwise epistasis between two markers i and j is often modeled as the product of the two genotype values. therefore, with the traditional representation, the linear regression model with pairwise epistasis effects is modified as the following: 
  <dig> y=β0+∑i=1mβixi+∑i,jmαi,jxixj+el 

where xixj is the product of the genotype values of the i-th and j-th genotype and it denotes the interaction of the two genotypes, αi,j represents the coefficient for the interaction. thus in this epistasis model, the epistasis effects are considered as augmented genotypes besides the original genotype matrix x. we call this model epistasis model. as multiplication is one of the most popular epistasis models, in this work, we consider only the multiplication model for epistasis.

genotypes for a marker can be either homozygous or heterozygous. for genome wide association study , we only need to identify the association between a marker and the case/control trait. therefore, we care more about whether genotypes are homozygous or heterozygous, the specific alleles and their frequencies. the genotypes don’t necessarily need to be quantitative. they are usually represented as a pair of alleles, for example “aa" and “tt" for homozygous genotypes, “at" for heterozygous genotype.

on the other hand, for genetic trait prediction problem, in eq.  <dig>  the genetic trait values y are quantitative. thus the genotypes xi needs to be quantitative as well. researchers generally assign three distinct encodings to the three possible genotype values. a few common sets of encodings for genotypes are { <dig> ,2}, where  <dig> and  <dig> are for homozygous genotypes and  <dig> is for heterozygous genotype, and {− <dig> ,1}, where - <dig> and  <dig> are for homozygous genotypes and  <dig> is for heterozygous genotype.

there have been lots of work on predicting genetic trait values from genotype data, such as rrblup   <cit> , elastic-net, lasso, ridge regression  <cit> , bayes a, bayes b  <cit> , bayes cπ  <cit> , and bayesian lasso  <cit> , as well as other machine learning methods. however, all previous work consider genetic trait prediction problem as a regression problem on a numerical data set. we, on the contrary, look at the problem from a totally different angle: we consider the problem as a problem of multiple regression on categorical data, namely a regression on multiple categorical features. the genotype of each marker has three possible categories: homozygous with major allele, homozygous with minor allele and heterozygous. in order to conduct regression on categorical data, we need to first encode the categorical data. many encoding methods have been proposed for categorical data, including dummy encoding, ordinal encoding, target-based encoding etc. the traditional coding of { <dig> ,2} is indeed the ordinal coding, which assumes that the categories follow certain order. in this problem setting, the three categories can be considered as following the order of the number of major or minor alleles.

in this work, we first review the existing encoding mechanisms and we show that only ordinal encoding and target-based encoding are appropriate for the genetic trait prediction problem. the ordinal encoding encodes the three categories into three unique numerical values, such as { <dig> ,2} or {- <dig> ,1}. the advantage of the ordinal encoding is that the order of the categories are maintained by the encoding. the target-based encoding encodes the three categories as follows: for each category g of each marker i, we identify the set of trait values for the samples whose category is g at marker i. then we take the average of this set of traits and assign the genotype with this average value. the advantage of the target-based encoding is that each marker, or feature, can be encoded differently according to the data. we also observe that the ordinal encoding method always encodes different markers with the same set of numerical values. on the contrary, the target-based encoding methods can not maintain the order of the categories. to combine the advantages of both mechanisms and to address their drawbacks at the same time, we further developed two hybrid encoding methods. the hybrid methods conduct target-based encoding for the two homozygous categories first, then encode the heterozygous category either as the mean of the trait for all samples, or the mean of the two homozygous categories. thus they allow the flexibility of the encodings, where different markers can be encoded differently. we showed that the encoded value for the heterozygous category is always bounded by the two values of the homozygous categories. therefore the hybrid encoding methods maintain the order of the categories. we also extended these hybrid encoding methods to epistasis model. we showed that our hybrid encoding methods are superior to both ordinal and target-based encodings for both single marker model as well as epistasis model. due to space limit, we did not include the experimental results for the epistasis model, which will be included in the extended version of the work.

preliminaries
given the traditional encoding of genotypes as { <dig> ,2}, lots of techniques have been applied to the genetic trait prediction problem defined in eq.  <dig>  consider the typical situation for linear regression, where we have the training set y∈ℝl, x∈ℝl×n, in a standard linear regression, we wish to find parameters β <dig> β such that the sum of square residuals, ∑i=1l <dig>  is minimized.

many machine learning methods have been applied to the genetic trait prediction problem, such as elastic-net, lasso, ridge regression  <cit> , bayes a, bayes b  <cit> , bayes cπ  <cit> , and bayesian lasso  <cit> . as in this work, we applied rrblup and svr, we mainly focused on reviewing these two techniques. 
  <dig> min∈ℝn+112l∑i=1l2+λpα, 

rrblup   <cit>  is one of the most popular methods for genetic trait prediction. rrblup simply is ridge regression with a specific choice of λ in . specifically, meuwissen et al.  <cit>  assumes that the β coefficients are iid from a normal distribution such that βi∼n. then the choice of λ=σe2/σβ <dig> where σe <dig> is the residual error. in this case, the ridge regression penalized estimator is equivalent to best linear unbiased predictor   <cit> .

support vector machines  are a tool in statistics and machine learning for the task of supervised learning  used for either classification or regression. here we are interested in the latter case. following  <cit> , given a training set , i= <dig> …l, where xi∈ℝn, the goal of ε-sv regression is to find a function f that is at most ε deviation from the training data yi over the training data xi, while remaining as flat as possible in the feature space. training an svm requires solving 
  <dig> minw,b,ξ12w⊤w+c∑i=1lξisubject toyi+b)≥1−ξi−ε,ξi≥ <dig>  

the data vectors xi are mapped to another space via the function ϕ, and svm attempts to fit the data in this higher dimensional space. thus, the choice of ϕ, referred to as the kernel, has a large impact. four kernels are usually used: 
 linear:u⊤v,polynomial:d,γ> <dig> radial:exp,γ> <dig> sigmoid:tanh. 

support vector regression involves solving eq.  <dig> given training data. the vector w, the choice of the kernel, and the choice of kernel parameters, used previously to solve eq.  <dig> gives a model capable of predicting future data.

encoding mechanisms and evaluation
for a linear regression problem shown in eq.  <dig>  different encodings would not change the regression result as the coefficients and error terms would compromise the difference of the encodings. assuming the old encoding and new encoding for the i-the feature are xi and xi′ respectively, we could always have xi′=xi+Δi, where Δi is a vector. for example,  <cit>  =  <cit>  +  <cit> . then we could have: 
  <dig> y=β0+∑βixi′+e=β0+∑βi+e=β0+∑βixi+∑βiΔi+e=β0+∑βixi+e′ 

where e′=∑βiΔi+e. we can see that the regression for the new encoding and old encoding indeed differ only by the error term. as the error term e follows a normal distribution n, for different encodings, the δ could be different, thus lead to different regression performance. therefore encodings does matter to the regression task, as we will show in the next few sections.

different encoding mechanisms
in this work, we view the quantitative genetic trait prediction as a multiple regression on categorical data. multiple regression problem on categorical data requires encoding. various encoding mechanisms have been proposed. the most common one is called dummy encoding. in general, a categorical variable with k levels will be transformed into k− <dig> dichotomous variables each with two levels. for example, for a variable of three possible values, or levels, we could transform it into two dummy dichotomous variables a and b. for value one, we assign a= <dig> b= <dig>  for value two, we assign a= <dig> b= <dig>  for value three, we assign a= <dig> b= <dig>  thus for n markers, we need at least 2n dummy dichotomous variables. as the complexity for rrblup is o, where m is the number of markers, the complexity with dummy encoding becomes o. given in our problem setting n is usually tens of thousands, o in reality is significantly bigger than o. another issue is that using dummy encoding, we are not able to obtain a single coefficient for a marker, which is generally considered as the importance of the markers for plant and animal breeding. a set of similar encoding mechanisms such as forward difference coding, backward difference coding, helmert coding, reverse helmert coding, deviation coding, orthogonal polynomial coding all have the same issues for a combination of categorical variables for similar reasons.

another very popular encoding method that addresses the scalability issue is ordinal encoding. ordinal encoding assumes that the categories follow certain order and then encodes the categories with numerical values such as  <dig>   <dig>   <dig>  this is indeed the case for our problem setting where the three categories can be considered as following the order of the number of major or minor alleles. when a combination of categories are considered, each category is encoded independently. for genotype encoding, a traditional way is to encode the three categories the same way across all markers. a different encoding mechanism, target-based encoding encodes each category as the mean of the target variable for that specific category. this encoding method allows each marker to be encoded differently. however, the order of the categories are not maintained. thus for a combination of categorical variables, the order of the categories of each variable is relatively random.

in this work, in order to address the drawbacks of the ordinal encoding and the target-based encoding while maintaining both of their advantages, we develop two hybrid encoding methods. assuming  <dig> stands for the homozygous genotype with major allele,  <dig> stands for the homozygous genotype with minor allele,  <dig> stands for the heterozygous genotype, the first hybrid method computes new encodings of genotypes at marker i as the follows: 
  <dig> e=ave)e=ave)e=ave) 

where e is the new encoding for genotype of value  <dig> at marker i, trait is the set of traits for the samples whose genotypes are  <dig> at marker i, ave() is the function to compute the average value. we call this method hybrid one.

the second hybrid method computes e and e the same as algorithm hybrid one does. however, instead of the average of the trait, e is computed as the average of e and e. we call this method hybrid two. 
  <dig> e=ave)e=ave)e=e+e <dig> 

we can see that for both hybrid one and hybrid two, e and e are computed the same as those from target-based encoding. however, target-based encoding computes e as ave) which then loses the order of the categories. for both hybrid one and hybrid two, it is guaranteed that e=ave) and e=e+e <dig> are in between of e and e. thus the order of categories is maintained. the difference is that e=ave) is closer to e as  <dig> stands for the heterozygous with major allele, where most of the samples have this genotype, thus the average of the whole trait values is close to e. on the contrary, e=e+e <dig> requires its value as the mean of e and e. from our experiments, the second strategy achieves slightly better performance.

we show an example in fig.  <dig>  the figure on the left shows the multiple regression problem. the figures on the right show the codings of different encoding methods. notice we just simply give some sample regression and the regressions might not be perfect. as we can see, for ordinal encoding, x <dig> is positively correlated to y, x <dig> is negatively correlated to y. for the other encodings, both x <dig> and x <dig> are positively correlated to y.
fig.  <dig> examples of different encodings



notice for the ordinal encoding, we could check if the correlation between a feature and the trait is positive or not. if the correlation is negative, we could flip  <dig> and  <dig> to make the feature positively correlated to the trait. this strategy would work well for single marker model. however, it can not be extended to the epistasis model where we could have  <dig> values for each feature for the pairwise epistasis case and 3k values for the k-way interactions.

performance analysis of different encoding mechanisms
as we will show later in the experiments in section “results”, the hybrid encoding methods are able to improve the performance not only for the epistasis model, but also for the single marker model. next we investigate the reason that the hybrid encodings are in general superior to the other encoding methods.

importance of encoding flexibility
the issue of the traditional encoding, or the ordinal encoding for multiple regression problem is that as all the categories are encoded the same way for different markers. our encoding methods, as well as the target based encoding, encode each marker by assigning values similar to the trait values according to how the genotype categories are distributed for the marker. as we will show later in our experiments, this strategy is able to improve the correlation of the encoded features to the trait value and thus tends to improve the regression performance.

importance of maintaining the order of categories
the issue of target-based encoding is that the encoded values of the categories completely depend on the trait and therefore the order of the categories are not maintained. the encoded value for the heterozygous category for target-based encoding could be smaller or greater than the values for both homozygous categories. on the contrary, for the hybrid encoding, the value for the heterozygous category is always in between of the values of the two homozygous categories and therefore the order of the categories are maintained.

to evaluate the importance of such category order maintenance, we calculate the distance between samples for different encodings, where we consider each sample as a m dimensional vector and m is the number of features. the distance is computed as the follows.

we first compute the z-score of trait value for each sample as x−μδ <dig>  where x is the original trait value, μ is the mean of all the traits, δ is the standard deviation of all the traits. then, we assign discretized values to samples according to their trait z-score using the following formula: 
  <dig> discretizedvalue=−1if z-score<-11if z-score>10otherwise 

then we consider the distance of the samples with identical discretized trait value. the intuition is that when a set of samples have similar trait values and they are close to each other in the feature space, the residual error of the regression tend to be small. an extreme scenario is all the samples have the same trait value and also the same feature values, namely all these samples are identical points in the feature space, the regression will have residual error  <dig>  on the contrary, if the samples are far from each other while they have the same trait value, the residual error tend to be large.

as for different encodings the scales of the encoded values are different, we normalize the encoded values and compute the z-score of the j-th marker for the i-th sample as z=−μ)2var, where z is the z-score for sample i at marker j, x is the encoded value of sample i at marker j, μ is the mean of the encoded values for marker j for all samples, var is the variance of the encoded values for marker j. once we compute the z-score of each marker for each sample under each encoding, we measure the pairwise distance between every pair of samples i,j using euclidean distance as dis=∑−z) <dig>  for 1≤k≤d and d is the total number of markers. then we compute the average distance. the smaller the average distance is, the closer the samples are. as we will show later, the target-based encoding has higher sample-wise distance than the ordinal encoding and hybrid encoding, which explains the observation that the hybrid encoding methods lead to better regression performance.

as we can see, both the encoding flexibility and the order of the categories are important for multiple regression on categorical data. our hybrid encoding methods keep the encoding flexible among markers and in the meanwhile maintain the order of the categories. therefore our methods achieve better performance than both the ordinal encoding and the target-based encoding do.

extension to epistasis model
the hybrid encoding strategies can be naturally extended to pairwise epistasis effects or even higher dimensional epistasis effects. as shown in fig.  <dig>  for pairwise epistasis effects, given the traditional encoding { <dig> ,2}, we have  <dig> possible combinations for markers i and j, organized in the 3× <dig> grid matrix. assuming  <dig> is the traditional encoding for homozygous genotype with major allele,  <dig> is the traditional encoding for homozygous genotype with minor allele,  <dig> is traditional encoding for heterozygous genotype, then the cell   is the traditional encoding for a pair of homozygous genotypes, both with major allele, the cell  is the traditional encoding for a pair of homozygous genotypes, both with minor allele, the cell  is the traditional encoding for a pair of heterozygous genotype and homozygous genotype with minor allele. the meaning of the other cells can be inferred similarly.
fig.  <dig> the nine possible combinations for a pair of markers i,j




our goal is to encode each cell using the hybrid approach. we first compute the hybrid encoding for the four corner cells ,,, as the average of their corresponding trait values, as shown in fig.  <dig>  for example, e=ave), where trait is the set of traits for the samples whose traditional genotypes at marker i,j are  <dig> and  <dig>  respectively. then for the cells ,,,, we compute their hybrid encoding by extending the encoding strategy for single markers. for example, e=ave), where trait is the set of traits for the samples whose traditional genotype at marker i is  <dig> or  <dig> or  <dig>  and at marker j is  <dig>  respectively. the intuition is that we consider the encoding for the three cells ,, for the marker pair i,j as fixing the genotypes for marker j as  <dig>  then the problem is converted to computing the encoding for a single marker i, whose genotype can be either  <dig>  or  <dig>  or  <dig>  similar encoding strategies are also applied on the cells , ,  to compute the encodings for cells ,,, respectively. finally for the cell in the center , we compute its hybrid encoding as the average of all the traits, namely e=ave).

the above is a straight-forward extension of hybrid one for single markers. the extension of hybrid two is a similar procedure with the following differences: e=ave+e <dig> )) and similar encodings for cells ,,, e=ave+e+e+e4)).

the same hybrid encoding algorithm can be further extended to higher dimensional epistasis effects. in this work, we only focused on the application of the hybrid encoding algorithm on single marker and pairwise epistasis effects.

RESULTS
as rrblup is one of the most commonly used methods for genetic trait prediction, in our experiments, we evaluate the prediction accuracy for different encodings mainly using rrblup.

we apply the new encoding strategy to four different data sets, summarized in table  <dig>  we compare the performance of rrblup on both the traditional encoding and the two hybrid encodings and the target-based encoding. as r <dig>  the square of the pearson’s correlation coefficient is the most common evaluation metric for genetic trait prediction problem, we show the average r <dig> of 10-fold cross validation. notice all the encodings are generated only from the training data and then applied to the test data accordingly.


the first data set is the maize data set  <cit>  which consists of two maize diversity panels with  <dig> flint and  <dig> dent lines developed for the european cornfed program. the two panels, flint and dent, were genotyped using a 50k snp array, which after removing snps with high rate of missing markers and high average heterozygosity, yielded  <dig>  and  <dig>  snps respectively. both of them contain  <dig> samples.

the second data set is the asian rice, oryza sativa, data set  <cit> . this data set was based on  <dig>  snp variants from  <dig> accessions of o. sativa, taken from  <dig> countries containing  <dig> phenotypes. we selected two phenotypes, one is polygenic , one is oligogenic . the data sets have  <dig>  markers and  <dig> samples.

the third data set is pig data set, which is a collection data on male and female pigs born since  <dig> and was taken from  <cit>  and consists of  <dig>  animals from a single pic nucleus pig line yielding  <dig>  snps with five measured traits . only traits  <dig> and  <dig> were selected for study here. as described in  <cit> , genotypes were sequenced from the illumina porcinesnp <dig> chip and full pedigree information is available, which we did not use in this study. in the original study, trait  <dig> was rescaled by a weighted mean of corrected progeny phenotypes. whereas trait  <dig> was corrected for environmental factors such as year of birth and location. genotypes were filtered for minor allele frequency less than  <dig>  and with missing genotypes less than  <dig> %. the original study used alphaimpute to impute any missing data  <cit> .

the fourth data set is qtlmas data set, which was taken from the qtl-mas workshop, which was held on may 17– <dig>   <dig> in poznan poland  <cit> . the data set consists of  <dig>  individuals over five generations  with  <dig> founders, five male and  <dig> females. there were two phenotype traits, the first a quantitative trait and the second a binary trait. only the first four generations  have phenotype records. the genome is approximately  <dig> million bp with five chromosomes, each  <dig> million bp. in total, each individual was genotypes for  <dig>  biallelic snps.

for genetic prediction, to our knowledge, there is no method can achieve consistently better performance than rrblup does with similar running time. also compared with rrblup, even for cases where the performance can be improved, most of the other methods can not make an improvement over  <dig> %. thus we consider an improvement of  <dig> % as significant. as shown in table  <dig>  in general the hybrid encodings are able to improve the prediction performance and in many cases the improvement is significant. the target-based encoding is slightly better than the traditional encoding, but worse than both hybrid encodings. thus for single marker model, the hybrid encodings are superior to the traditional encoding and the target-based encoding. the two hybrid encodings have similar performance.
 <dig> 
 <dig> 
the bold numbers are the ones with the best performance



we also conducted svr  with sigmoid kernel on all the data sets with different encodings. we show only the results for the maize data. the results are shown in table  <dig>  we can see that the two hybrid encoding methods achieve almost identical accuracies, both are higher than the accuracy from the target based encoding. the traditional encoding has the worst accuracy.
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
the bold numbers are the ones with the best performance



next we compute the average correlation of the top- <dig> markers with the highest absolute correlation values  to the trait under different encoding methods. the results are shown in table  <dig>  we show only the results for the maize data. we can see that for the ordinal encoding, the average correlations are smaller than those of the other encoding methods, indicating that by allowing encoding flexibility, we could potentially improve the regression performance. the target-based encoding has the highest average correlation. however, due to its lack of category order maintenance, its performance is worse than those from the hybrid methods. the two hybrid methods have identical average correlations which are slightly lower than that of the target-based encoding.


in order to show the importance of category order maintenance, we show in table  <dig> the average pairwise distance of the samples for each encoding method. due to space limit, we show only the results for the maize data. we can see that the target-based encoding has the biggest pairwise distance while the hybrid encoding methods have lower pairwise distance. the traditional encoding has lower pairwise distance, but due to its mixture of both positively-correlated and negatively-correlated features, its performance is worse than those of the hybrid encodings.


we also applied the hybrid encoding strategies on the epistasis model shown in formula  <dig>  due to space limit, we did not include the experimental results for the epistasis model, which will be included in the extended version of the work. however, our experiments indicate that the hybrid encoding strategies improved the prediction performance on the epistasis model as well.

CONCLUSIONS
in this work, we showed that the quantitative genetic trait prediction problem heavily depends on the encoding of genotypes, for both single marker model and epistasis model. we developed two hybrid encoding methods which are simple but effective. our experiments show that the hybrid encodings are able to improve the prediction accuracy for both single marker model and epistasis model. we also conducted a detailed analysis on the performance of the hybrid encodings. to our knowledge, this is the first work that discusses the effects of encodings for genetic trait prediction problem. in our future work, we would like to develop more effective encoding methods for both single marker and epistasis models. we would also like to investigate the effects of variation of allele frequency between train and test data and the effects of correlation of markers .

declarations
this article has been published as part of bmc bioinformatics vol  <dig> suppl 9
2016: selected articles from the ieee international conference on
bioinformatics and biomedicine 2015: genomics. the full contents of the
supplement are available online at http://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement-9


funding for publication
publication of this article was funded by ibm t.j. watson research.

availability of data and material
the datasets are publicly available.

authors’ contributions
lp proposed the study. dh designed and implemented the algorithms, carried out the experiments to demonstrate the effect of encoding,, and carried out the comparison experiments. all the authors read and approved the manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
