BACKGROUND
the purpose of metagenomics is to identify the species present in an environment. different types of studies can be performed based on metagenomics. some examples include the analysis of changes in the presence of species in a given environmental sample and the use of phylogenetic analysis to follow up the spread or determine the origin of a species. a large number of tools are emerging in the form of stand-alone programs , interoperable web services  or tools accessible through the internet .

megan performs taxonomic analyses of a metagenome by mapping reads to different taxa based on blast  <cit>  search results and the ncbi taxonomy. to perform this task, the program runs the lowest common ancestor  algorithm to classify input reads. most metagenomic tools are constructed following a workflow scheme offering distinct stages of data processing. in this line, the open-source ebi metagenomic workflow is split into two branches following the quality control step. the first branch performs taxonomic classification based on 16s rrna, whereas the second branch performs functional analysis based on protein-coding sequences. unannotated reads are kept out of the pipeline. however, these reads should be taken into account for whole metagenomic analysis in order to improve the accuracy of taxonomic classification and better understand the roles of species in environmental samples.

the number of comparative metagenomic tools is the key point of the metagenomic rast  platform. mg-rast builds clusters of proteins at a given percentage of identity level using qiime  <cit> . once built, the longest sequence of each cluster is subject to similarity using sblat, an implementation of the blat  <cit>  algorithm. mg-rast also uses the ncbi taxonomy for taxonomic classification. functional profiles are available through comparison against data sources that provide hierarchical information. abundance profiles are the main output for displaying information on datasets. the mg-rast annotation pipeline does not generally provide a single annotation for each submitted fragment of dna. steps in the pipeline map a read to multiple annotations and vice versa. data privacy is one of the concerns of the scientists using this tool. firstly, they are reluctant to upload their unpublished and/or confidential data to a public website. secondly, the priority of analysis requests to the website is subject to the level of confidentiality of input data .

recently, a new dna sequence analysis workflow called meta-pipe  <cit>  has been developed to find novel commercially exploitable enzymes from marine microbial communities. meta-pipe uses tools such as metageneannotator   <cit>  and protein blast to identify sequences found in the uniprotkb database. mga is a new version of metagene  <cit>  where a prophage gene model is offered in addition to bacterial and archaeal models. mga uses di-codon frequencies estimated by the gc content of an input sequence to map genes using regression models. in addition, mga offers an approach for the analysis of ribosomal binding sites  to detect specific patterns of ribosomal sequences in species. however, due to their tendency to undergo highly degenerative changes, rbss are particularly difficult to identify  <cit> . in the line of pipelines used to facilitate the comparative analysis of high throughput sequencing, mocat  <cit>  is a modular tool for processing raw sequence reads produced by the illumina technology  <cit> . the main steps in mocat are 1) read trimming and filtering 2) read assembly, 3) gene prediction and 4) estimation of taxonomic abundance profiles.

the fine-grained metagenomic analysis workflow developed by our group can operate over a user-defined collection of genomes -thus accelerating the computational process- and with the advantages of being able to map reads over unannotated regions of genomes. our software provides different mapping methods and different mapping alternatives apart from the best read-genome matching. in addition, it provides information about the quality of mapping and about differences between mapping options. unlike the methods currently available, which deduce that a species is not present in a sample when its abundance is low , the proposed method can detect low-abundance species by finding reads mapping to particular specific regions of genomes. in addition, the developed workflow is an open platform composed of an expandable set of separate modules that use well-defined format datafiles. this enables the easy on-demand incorporation of new processing tools. along with low-abundance species support, other tools have been included to verify the correctness of taxonomic assignation and extrapolate dna sequencing data to gene expression levels.

system and methods
system and requirements
the designed workflow  includes all the needed steps for data processing. the quality control step can be performed using seqtrimnext  <cit>  for the case of 454-pyrosequencing  <cit>  reads, whereas trimmomatic  <cit>  can be used for illumina reads. these programs are available in our workflow implementation under our galaxy  <cit>  instance. with regards to the sequence comparison algorithm, we suggest to use the gecko  <cit>  package to accelerate the process. since several metagenomic packages for 454-pyrosequencing reads are based on the matches provided by a blast run, the developed workflow offers a parser to translate blast’s output, and therefore the same strategy  can be used when other sequence comparison software is employed. in addition, the sequence comparison tool shrimp  <cit>  is included along with a parser that is also available and described in the additional file  <dig> 
fig.  <dig> the workflow diagram. top: quality control layer and input files. center: comparison software layer. bottom: mapping kernel , which provides open-source datafile definitions and enables many on-demand post-processing experiments 




in the line to offer a broad scope of the presented software, the proposed workflow can handle sequences of different length obtained with different sequencing technologies . for instance, in the case of colour-space reads these can be compared using shrimp, which natively supports colour-space reads. the proposed method focuses in the comparison and mapping procedures, while the pre-processing steps can be carried out with common publicly available software.

the workflow operates over a user-defined collection of genomes. this database might as well be a custom selection of genomes which hold particular interest, a pre-selection of the most common species for the type of metagenome analysis, or even a complete database such as genbank  <cit> .

the workflow is specialized in matching  and post-processing procedures, which require the following input:  sequence comparison files,  taxonomic description of the reference dataset, and  annotation files for the genomes .

 sequence comparison files: the workflow has been designed so that it is compatible with any sequence comparison software . the default comparison software used in this workflows is gecko, however, the user can employ other packages. to include other comparison software a format conversion program would be needed. a parsing conversion system for blast is already included in the workflow. the parsing module converts sequence comparison files to a format composed of headers  followed by rows, where each row represents a fragment for the tuple. fragments belonging to a read-genome match are defined by a 12-tuple: 
 tn,k12= 


where k is the k−t
h fragment reported by the read n. the fields r
s
t
a
r
t,r
e
n
d,g
s
t
a
r
t,g
e
n
d represent the anchoring positions in the read r and genome g. reversed fragments are found by comparing the read with the reverse complement of genome g. notice that rend and gend are redundant for ungapped fragments, but necessary for gapped fragments.  a taxonomic description file allows the customization of hierarchical relationships between organisms in the reference database as assigning strain relationships between species or separating strains that belong to a common ancestor. such file can be generated automatically using a module of the workflow and/or can be manually built to insert customized relationships between species. the format of the file generated is a text file including a 5-tuple per line, each tuple being a new genome: 
 tn,m5=  where n and m are the specie and subspecie id’s. these can be used to set up custom boundaries. for further details, please see “taxonomy files” in the additional file 1).

 annotation files are used to carry out all coding region-related computations in the post-processing phase. therefore, these files are optional and should be included if annotation post-processing modules are to be used. as in the case of comparison software, a parsing system is implemented; e.g. a parsing system for genbank’s annotation files has been included in our workflow.

extension of ungapped hsps
comparative analysis of metagenomes is an expensive computational process that involves comparing a large set of dna fragments against an enormous database of candidate sequences . it should be noticed that, by definition, bacteria in the metagenome are uncultured species and the sequences in the databases that already exist are not –most likely– the corresponding to the species in the metagenome. even some large mutations  can happen regularly. therefore a more flexible matching is proposed, which differs from an assembly by mapping in which there are quite close representatives of the sequenced bacteria.

thereby we included the option of using a custom glocal  <cit>  alignment, which yields longer fragments and larger evolutionary gaps. this method generally improves mapping results, as global alignment methods are less accurate when identifying species.

once local alignments are calculated , fragments are extended by joining those that are close enough according to a given maximum-gap parameter. this is done by calculating the needleman-wunsch matrix between the start and the end of the matching read within the genome region with a customized implementation.

furthermore, glocal alignment can be performed by combining the local alignments produced by alignment tools such as blast or gecko with the provided custom glocal alignment. all parameters can be user-defined, thus providing data processing flexibility. table  <dig> shows an example of candidate fragments that are extended to conform a glocal alignment.
in the top, the table before extension. fragments  and  are separated by a relatively small gap of  <dig> base pairs  is  <dig> base pairs away from r <dig> in ). these fragments represent an example of candidate fragments. the after subtable  displays the resulting extended fragment and shows a longer alignment with still high similarity and a low number of gaps . the score is calculated afterwards .




new score and expected value calculation
the extension of fragments requires the re-calculation of fragment scores to identify the best match out of a list of candidates during the mapping process. the properties of the extended fragment, namely length –of bases–, number of identities and inserted gaps stand for the raw score. the raw score has to be normalized in order to obtain the expected value of a reported fragment. this is performed using k and lambda parameters using a similar approach to that of the blast family. k and lambda parameter are calculated as described in  <cit> .

to compute the raw score of the extended fragment produced by our custom glocal alignment we apply a traditional affine scoring model , as shown in the following formula: 
  <dig> rs=i∗mr+−i)∗mp+gi∗pi+ge∗pe 


where rs stands for “raw score”, i for the total number of identities in the fragment, m
r for the match score, l for the total length of the fragment in base pairs, g
i for the total number of open gaps in the fragment, g
e for the total number of extension gaps in the fragment, m
p for the mismatch penalty, p
i for the penalty of an open gap and p
e for the penalty of an extension gap.

mapping
the mapping module  process offers a three-level mapping option that not only discovers highly abundant species that hide others in terms of abundance due to high similarity or uncertainty in the alignment, but to also obtain quality distance measurements between the best  <dig> candidates for every match. the top three candidates are selected based on identity and coverage thresholds and expected values. moreover, users can perform different mappings by restraining subsets of reads using different thresholds.

in a scenario with a highly abundant organism, further analysis can be performed by only considering certain genomes using certain options e.g. to observe differences and extract statistical indicators of close candidates.

about the mapping decision
every read yields a list of reported fragments to which the following algorithm is applied. 
filtering step: a filtering step allows the researcher to consider only a subset of reported fragments, enabling a levelling up mapping method. if a fragment does not reach pre-filtering thresholds, it will be discarded. such filtering allows a two phases pre-filtering: 
coverage threshold phase: the length of the match divided by the length of the read.

identity threshold phase: the number of identities in the match divided by the length of the match.




repeat this step for 3-option mapping and, if fragments are still active: select the fragment with the smallest expected value and if it is lower than the maximum allowed expected value. this fragment is included in the mapping file as first, second or third candidate depending on the number of options chosen and the genome is inactivated for the next option iteration.

if no more fragments are still active or none of them exceeds the thresholds, the read is decided with either no mapping option or up to  <dig> mapping options.




see “mapping decision and fragments” in the additional file  <dig> for more information.

RESULTS
rather than developing a monolithic application with graphical interfaces, we opted for a simple pipelining procedure in which new software modules can be used to exploit results. to facilitate user interaction, a complete web-based interface has been developed based on galaxy workflow manager, which enables users to easily run their analyses in both a local instance or in dedicated servers. in addition, a user guide  <cit>  is available. regarding software modules, all specifications about input and result file formats are shown, facilitating the use of third-party software, such as common graphical libraries and spreadsheets.

the results given by our workflow software are illustrated by an experiment where two collections of  <dig> metagenome samples each were extracted from faecal microbial communities of adult female monozygotic and dizygotic twin pairs concordant for leanness or obesity and their mothers  <cit> . raw data  were obtained by 454-pyrosequencing, and inherent artefacts or low-quality sequences were further filtered and removed using replicates  <cit>  software and seqtrimnext . the average size of the read collection ranged from  <dig> bp to  <dig> bp after quality control and sequence trimming. the total number of sequences was  <dig> , <dig> for lean metagenomes and  <dig> , <dig> for obese ones. for testing purposes, in this technically-oriented paper we opted to design a synthetic case-control study of two metagenomes by joining samples from lean and obese individuals.

reads-abundance and taxonomy classification of reads
the analysis of the species present in metagenomic samples enables taxonomic classification based on abundance of mapped reads. information about the species present in metagenomes and variations across a collection of species is yielded by gmap in comma separated value  format files that can be edited using common spreadsheet software .
fig.  <dig> three-options mapping analysis. some data from gmap-based mapping analysis. a abundance plot for the averaged lean  and obese  metagenomes of the most read-abundance genomes. the plot depicts total mapped reads per specie in the two averaged metagenomes. b three-option abundance by organism. in blue, total first option abundance, . in red and green, the number of times an organism was the second and third best candidate for a read. bacteria with red or green peaks reveal that another organism is probably hiding them  and there is not a direct consensus. c total reads assigned in log <dig> scale per species as best candidate  and from that total, the number of reads that had two very similar candidates  from the second best candidate . d an exhaustive-one-vs-all user-defined analysis where a bacterium is compared against all species in the database. the peak in the plot  is the analyzed genome, ruminococcus obeum atcc  <dig> . this particular scenario depicts a comparison of the target genome against all species by length and abundance. in blue, the percentage of reads that were mapped as second candidate when the best candidate was the target genome. in orange, the average length of such mapped reads




abundance data are primarily used to determine the species that are present in a metagenomic sample and can be exploited in comparative studies on the over- or under-abundance of species in different samples. however, abundance data does not provide information on the quality and certainty of mapping. this lack of reliability can be partially compensated by using the n-mapping method.


three-options mapping analysis our software has the ability to perform the mapping of reads through a multiple-level strategy. after the best read-genome mapping value is used, the used fragment is inactivated and the genomes belonging to different strains of the same species are optionally inactivated, and the process is repeated. this way, we get the second, third and subsequent best read-genome mapping values. a long separation between the mapping options provides stronger evidence supporting the validation of the mapping procedure.

when comparing 3-mapping options, the detection of peaks in second or third options means that a particular species is repeatedly the second or third candidate . these peaks suggest that strong similarities exist between a specific pair of species and careful examination is required since the accuracy of mapping is not certain. for instance, it would be interesting to study if the alphabetical order of the blast output for sequences with the same expected value is affecting the mapping. these observations can be supported by the analysis of mapping precision , which considers the closest reads given a distance parameter and shows the separation in mapping length, the number of identities, or any other chosen parameter between the assigned read and its second best candidate. additionally, this separation shows the extent of differences between first and second candidates, and therefore is another indicator of the quality of mapping.

in addition, the 3-mapping approach allows to assess the mapping certainty at both reads and species level; at read level by comparing fragments quality indicators of particular genomes against the rest , and at species level by comparing the abundance levels of the different options for the particular genomes. for example, for all reads mapped over a given genome, information about the identity and coverage level of the second and third mapping option would provide information about the quality or certainty of the first option.

on the other hand, in a joint analysis of the fig. 2
b and c, no peaks in second or third options, along with a larger separation gap on mapping precision analysis suggest that the accuracy of mapping is high, which reduces the random assignment of reads to genomes and, therefore, the results obtained are more reliable.
c displays the number of reads assigned to each species and, in relation to each assignation, the times the second option was almost as good as the first . the fact that the blue and red lines of two species are close to each other suggests that mapping is not accurate and careful examination is required.


fine-grained tuning and closer examination in a scenario where a specific species has been the second option a higher number of times compared to the first option, as discussed in the previous section, the mapping should be exhaustively analyzed and compared with other species. such analysis would provide more certainty of the presence of a low-abundance genome by checking the properties of its matches, and would enable contrasting the variances in the matches between a high-abundance genome and its best second option. moreover, it is possible to perform a one vs. one, one vs. some, or, some vs. some comparative analysis of the target species. this type of analysis can be performed based on any of the properties of the mapped reads, such as length, similarity, coverage, or any user-defined properties. this information is particularly useful when the first and second mapping options identify different species .
d illustrates how a number of reads map to very similar sequence regions shared by different species . for example, the mentioned figure displays the second mapping option of the reads that were mapped as first solution to the ruminococcus obeum atcc  <dig> . the blue peak in the middle of the plot stands for almost  <dig> % of the reads assigned to ruminococcus as first option and to dorea longicatena dsm  <dig>  as second option, which evidences strong similarities in several areas of the two sequences. additionally, the orange peak at the right side suggests a longer alignment in the second option –ruminococcus gnavus agr2154–, thus requiring in-depth analysis of such reads.


statistical significance of variations between samples the presented software can provide statistical data on a number of aspects or characteristics, such as the z-score test to detect significant variations in the abundance of species in different experimental conditions; or to contrast the significance of the variation at a species level between samples calculating the p-values. an interesting example is case-control studies in which differences in reads abundance along genomes can be identified. z-scores provide accurate information on the significance of such differences .

genome-specific experiments and quality assessment

reads mapping to specific regions of genomes besides the proximity measures provided by three-option mapping, there is another important aspect concerning the provision of evidence about the presence of species with low-abundance of reads in the metagenome. the main idea is to find regions in a particular organism that do not exist or do not share similarity at all with other organisms present in the collection of genomes. to accomplish this, n− <dig> comparisons between the reference genome and the n genomes contained in the collection are performed using gecko. this process yields the detected regions and the assigned reads that have been mapped to these regions.

the extracted reads mapped to these regions provide strong evidence on the presence of low-abundance species in the metagenomic sample, since the mapped read does not fit over other genomes .


differential abundance in annotated regions of genomes another useful tool is the comparison plot of abundance of annotated regions . this assay is conducted on a particular genome by only considering the reads mapped to annotated regions of the genome and comparing abundance between different samples in the same way as rna-seq transcriptome expression analysis is performed. differences in the abundance of reads mapped to annotated regions –when sampling genomic dna– might be related to environmental changes. this hypothesis is based on the experimental resemblance of the differential expression plot of annotated regions when two samples whose environmental conditions change are compared. figure 3
a suggests that some annotated regions are being over- or under-represented, thus suggesting that abundance in annotated regions may be related to variations in the samples.
fig.  <dig> genome-specific experiments. some of the results oriented at a genome-specific-level. a dna-seq differential expression plot. each point represents an annotated region for a particular genome. in the x-axis and y-axis, the percentage of reads that are mapped to each annotated region divided by the total mapped reads. b accumulated reads mapped onto each position of the genome smoothed using a window of size  <dig>  in the x-axis, the genome bases from  <dig> to a portion of its length. in the y-axis, absolute accumulated number of reads mapped. c this plot shows how proteins found by searching with annotated  and non annotated  reads accumulate along similarity and length. the annotated search depicts higher length and similarity matches, resembling sanders curve , whereas non-annotated search shows mostly non significant matches. d annotation mapping. this plot shows reads mapped to a particular genome distributed by annotation properties. the three groups are plotted in different colours and shapes, namely a orange crosses for unannotated reads, b yellow crosses for semi-annotated reads and c purple points for fully-annotated reads. the background grey area represents the accumulation of reads for the whole mapped metagenome in logarithmic scale; thus, darker areas represent higher accumulation





genome profiling of mapped reads a genomic profile of mapped reads is the accumulated number of reads mapping to a given position within the genome. accumulated histograms of abundance of reads provide information about the number of reads at region level, and therefore about variations in such accumulation . in principle, when working with genome sequencing, a more or less flat profile would be expected, as opposed to transcriptomics sequence data. the genomic profile helps detect highly active regions or different number of copies in such regions. this visualization tool  shows how reads are distributed in a particular species and whether the assigned reads are present along the whole genome or only in the most active areas. another possibility offered by this tool is that it helps the user decide whether to perform or not a pre-assembly of the reads mapped to a specific genome to support the connections found between reads.


extensive and further verification we propose that the distribution of fragments based on the comparison of reads versus genomes is now divided into two different distributions, as seen in fig. 3
c. additional verification was performed by representing the matching values for reads falling into annotated and unannotated regions. this is obtained by blasting the set of annotated and unannotated reads mapped to a given genome against a database of proteins –such as swissprot  <cit> . as expected, different distributions are obtained, which evidences the suitability of using different thresholds. this affirmation is supported by the different levels of sequence conservation in annotated and unannotated regions.


mapping over annotated regions of genomes annotation mapping is another example of in-depth analysis of a specific genome and, in particular, of low abundance ones. our workflow uses all the reads assigned to a genome and divides them into three groups:  no annotations, in the sense that the annotation files obtained did not contain any annotation at the position where the read was mapped;  semi-annotations, when a part of the mapped read contains annotations, and  full annotations, when the whole read contains an annotation.

these three groups are plotted onto the whole mapped metagenome distribution . the background grey area represents the accumulation of reads for the whole mapped metagenome in logarithmic scale; darker areas represent higher accumulations. the identity-length distribution of reads for all fragments  is provided by gecko and can be partially obtained from data evidencing significant alignments yielded by other programs  . the rationale of this result comes from the experiments of sanders et al.  <cit>  and rost  <cit>  that significance is related to the tail of the distributions. therefore, displaying mapping values on the grey area distribution provides first-glance information about the accuracy of mapping.

comparison with other metagenomic tools
in order to prove that the results of the proposed workflow are consistent with those of other metagenomic analysis software suites , the following test was performed using results from blastn based on metagenomic samples from faecal microbial communities. both, our workflow  and megan were executed using the same input from blastn and ran with default parameters .

on comparison of the lean metagenome based on megan, the abundance plot  shows similar results to ours. standard deviation from ratios  was  <dig> , which is not significant enough to identify relevant variations . however, whereas the analysis of a metagenome using megan can last nearly an hour, our mg workflow took about six minutes to analyze the obese metagenome and five minutes for the lean one when the comparison had been done with blast. with gecko, the duration of the process was further reduced, taking about only one minute for the lean sample and three minutes and a half for the obese metagenome. runtime executions were measured using a regular intel i <dig> machine with  <dig> gb of ram.
fig.  <dig> megan and mg workflow comparison. comparative analysis for the lean metagenome shows similar mapping abundances. a abundance plot by species in percentages. b total reads assigned by each method and total number of reads in the metagenome. c abundance chart by family 




CONCLUSIONS
metagenomics is an effervescent field and there are still a number of questions that need to be addressed before a stable version of data analysis software becomes available. currently, metagenomic analysis tools generally represent a closed environment and offer few configuration options and limited extension possibilities. our aim was to develop a software framework to which other modules could be added. an additional motivation to develop this software was the need for software sensitive enough to detect the presence of low-abundance species. finally, our intent was to provide data in standard and editable formats that facilitate further analysis with external software.

the proposed workflow software offers several notable advantages over the software currently available in the market. firstly, the use of gecko enables this software to compute similarity searches in the samples against a collection of genomes in a reasonable time. we found that better results are obtained if a collection of genomes –rather than genes or proteins– is used. at least this was the case when not all genes/proteins from the genomes were registered in reference databases. moreover, if genomic samples are used , a significant amount of reads would map to unannotated regions, and therefore they would not match to databases composed of genes or proteins.

providing different mapping alternatives helps set up a sort of quality measures of the mapping process based on abundance differences across mapping alternatives. in addition, the study of the different alternatives could reveal hidden interactions or shared similarities between species that cooperate in some aspects.

the proposed software is designed to provide evidence of the presence of low-abundance species by finding particular specific regions of genomes with mapped reads. these mapped reads provide strong evidence of the species present in samples. the methods developed for assessing and evaluating the quality of mapping also improve accuracy and reliability in terms of the identification of the species present in a sample.

from our perspective, the most important contribution of this workflow software is that it offers the possibility of incorporating new software to extend the analysis workflow by showing datafile specifications enabling fine-grained metagenomic data analysis.

additional file

additional file  <dig> supplementary material. 

 


