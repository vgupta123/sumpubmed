BACKGROUND
data visualization is a growing and important area of computational biology that demands high quality images which highlight the critical aspects of data. to elucidate all essential features of the data, one must perform a wide range of adjustments to various aspects of the plot, which can be a time-consuming process. having fine-grained control over the parameters which define colours, fonts, label placements, element sizes, overall resolution, etc. leads to more effective plots which can convey necessary details in a publication-ready manner.

pipelines facilitate automated, robust and reproducible data generation and analysis. plotting is an important tool for both validation and reporting of results. incorporating effective plots into these pipelines requires code that has been written specifically for each plot, as there is no single approach which can be applied to varied datasets. as a result, bioinformaticians often engage in long cycles of sequentially modifying plotting code, executing it, and observing the ultimate figure, until an optimum is reached. this process is inefficient and time-consuming.

venn and euler diagrams are used frequently in computational biology to visualize the interactions between multiple sets of data. in genomics especially, a common assay is to compare gene lists occurring from separate analyses  <cit> , such as contrasting lists of differentially abundant rnas following drug treatments or lists of mutated genes across disease types. venn diagrams are typically depicted as partially intersecting circles or other closed curves such that there are 2n separated regions as depicted by overlapping closed curves  <cit> . while venn diagrams always depict all 2n possible regions, euler diagrams can omit regions under which there are zero values in that region’s subset. this allows euler diagrams to be less visually complex, by depicting only a subset of all possible regions  <cit> . venndiagramweb facilitates the creation of both venn and euler diagrams, using the argument euler.d and scaled . by default, venndiagramweb will create an euler diagram where possible, displaying only regions containing one or more values. users can force venn diagrams only by setting both euler.d = false and scaled = false .fig.  <dig> euler and venn diagrams produced by venndiagramweb each depicting three sets: x1 = { <dig> }, x2 = { <dig> ,7}, x3 = { <dig> , <dig> }. a. an euler diagram, produced with euler.d = true and scaled = true. b. a venn diagram, produced with euler.d = false and scaled = false



the r statistical programming language has widespread use in the bioinformatics field, and so we developed venndiagram to generate plots in this language  <cit> . the initial release has proven to be robust and useful, and has garnered  <dig> citations. as of june  <dig>   <dig> the package has been downloaded from the comprehensive r archive network  over  <dig>  times since its release in march  <dig>  over half of these  occurred in  <dig> alone, highlighting growing popularity  <cit> .

we believe a graphic user interface for venndiagram could bring the package to a wider audience and enhance workflows for pipeline developers by providing a real-time framework for plotting optimization. there are many existing web interfaces for creating venn diagrams, including venny  <cit> , biovenn  <cit> , genevenn  <cit> , and those from the crp-sante microarray centre  <cit>  and the universiteit gent  <cit> . these tools perform the necessities of creating a venn diagram, but are missing many features required to create completely customized publication-quality plots, and have no means of exporting code for integration in large scale analysis pipelines.

implementation
our first step was to improve upon the existing venndiagram r package  <cit> . a series of changes were made to enhance code quality, including significant refactoring and documentation and exposure of several helper functions. major feature additions included the ability to create quintuple venn diagrams. these are highly complex figures, but maintain symmetry and are still easily interpretable . a parameter to allow users to set a scale by which the areas and labels of the categories will be adjusted to was added. the ability to display proportions of the total population contained within the areas as percentages was also introduced. many users requested a feature to display a text table of the partitions of the venn diagram, which is now supported by the package. users can also now specify an argument which will force the venn diagram to only consider unique elements in each category when tabulating the sets. in order to have more comprehensive logging which can be integrated with other pipelines which may wrap the venn diagram code, we now use futile logger to log the parameters and sets of the venn diagrams that are generated at runtime  <cit> . finally, users can now choose file types of tiff, png or svg, and can alternatively choose to not output a file, but instead output a list of r graphical objects which compose the entirety of the plot. the user can then modify and re-render the plot as desired.fig.  <dig> a quintuple set venn diagram



venndiagramweb was written using the r statistical programming language and leverages the venndiagram r package  <cit> . it uses the web application server shiny to create a robust graphical user interface which can execute r code on data and parameters dynamically as they change  <cit> . using the shiny web application server enabled us to create a solution that is composed nearly purely of r from end to end. using a single language allows for very tight integration of security and error handling functionality. we are able to parse any inputs provided by the user and, using functionality built into the language, inspect those inputs to ensure there is no attempt to inject malicious code. the architecture of the web application is based around the code for the user interface and the code for the server. the user interface is defined by a series of widgets which accept the parameters and data files from the user, and display the rendered plot reactively as elements are changed. the server handles all arguments and data, ensures that they are safe and valid, and performs generation of figures.

RESULTS
user interface
venndiagramweb is a graphical user interface for the venn.diagram function  <cit> . the application starts with a simple example loaded . users can also choose to load an example configuration using the drop-down menu in the top right area of the sidebar. users can modify the parameters of the venn.diagram function using the sidebar, and the resultant plot is generated instantly in the center panel . the parameters for venn.diagram are divided into eleven sections, allowing the user to quickly find parameters of interest. if the user is familiar with the r package venndiagram, they can also search for a parameter by name. at the bottom of the sidebar, the user can download the plot displayed as an image. on the bottom bar, the user can choose the datasets plotted, preview the datasets and data partitions, view the r code used to generate the plot, and access proper citation information for venndiagramweb.fig.  <dig> the venndiagramweb user interface

fig.  <dig> a venn diagram generated using venndiagramweb, annotated to indicate the parameters corresponding to features of the plot. the panels in green highlight the parameters of the tool, showing with arrows what elements of the venn diagram are directly affected. all green elements are not generated as part of the venn diagram



features
venndiagramweb is meant to integrate seamlessly into scientific plot generation workflows. to this end we have included several key features: data file uploads, access to underlying r code, image downloads, and multiple workspaces.

data file uploads
users can upload up to five data files, up to  <dig> megabytes each, for use in generating their diagrams, which is quite large for venn diagrams. these datasets are made available to the editor as dataframes titled data <dig>  data <dig>  etc. through to data <dig>  this feature is found in the first tab on the bottom bar. the file uploading system is designed to accept tables output by r using the write.table function, but can accept any simple text table format, such as csv, tsv, and txt. some options are available for file format customization, generally pertaining to the options of write.table. these options allow the user to specify the column separator, the presence of headers and/or row names, and whether or not values are contained in quotes. the user is able to preview the first four lines of the datasets available. as an example, we have provided sample data for the reader to upload  and visualize   <cit> .

r code access
as venndiagramweb is a graphic overlay for the r package venndiagram, the user can access the generated r code to reproduce the plot as it appears on screen. this is useful because it allows the user to rapidly prototype the appearance of their desired venn diagram, and then download the corresponding code for integration into their own pipelines. it is also a necessary feature because though a web application is user-friendly, many users may wish to avoid uploading their data to an external website, or may be restricted from doing so by privacy laws  <cit> . for this reason, users can experiment with venndiagramweb for diagram formatting and customization on toy datasets, and then download the resulting code for use with their real data.

image downloads
venndiagramweb allows users to download publication-quality images of the venn diagram displayed on screen. users can choose the image format as tiff, png or svg, as well as resolution and physical size in inches.

multiple workspaces
the web application has an interface for creating and switching between tabs. this allows users to create several different plots simultaneously. each workspace tab is distinct and does not share data or parameters to avoid unintentional effects on diagrams which are being generated concurrently.

discussion
benefits
the datasets analyzed in biology and particularly in genomics can be enormous in scope and complexity, and we can only expect them to grow  <cit> . the rise of big data has lead to increasing attention to the field of data visualization  <cit> . as our datasets increase in size and our analyses increase in complexity, data visualization becomes crucial in allowing us to gain insight, see patterns and elucidate further areas of study in our experiments . these visualizations have to be meaningful representations of the data  <cit> . unsurprisingly, the figures we use to communicate our insights can become more convoluted with bigger and more complex data and, if poorly designed, risk confusing what they were meant to make clear. indeed, the difficulty of achieving visual clarity in a diagram often increases in tandem with the necessity to do so.

despite the growing importance of data visualization, the scientific community faces technical challenges in creating figures that are meaningful and clear. complex analyses and their visualizations can represent significant time and effort, and require programming skills the scientific community often lacks  <cit> . a paper with poorly designed figures could be significantly hampered: if a reader cannot grasp the key insights a figure is meant to convey, then the significance of the paper might be lost, or it may not be published at all, with obvious detriments to the field. there is a clear incentive to generate useful plots, and there is also a clear need for easier and more time-efficient methods to generate them. to this end, we are creating tools that improve both the quality of plots and the speed at which they can be created.

in genomics, a common analysis performed in experiments is list comparison. the venn diagram is a popular plot type for list comparison, providing a simple visualization of several possibly unrelated lists  <cit> . the manual generation of these plots can be difficult. spatial organization and colour choice of the groups and their overlapping sections such that they are both clear and aesthetically pleasing is important but nontrivial  <cit> . the venndiagram r package addresses this issue. it is commonly in use  <cit> , but we believe a simple graphical user interface for the package will bring it to an even wider audience, particularly to scientists who do not have strong skills in r.

comparison to existing tools
as with venndiagram, venndiagramweb offers many features that existing tools lack . in addition to the advantages venndiagram holds over other methods  <cit> , venndiagramweb is the only web application we found that allows for tiff downloads, r code download, and multiple workspaces.table  <dig> a comparison of features of venndiagramweb to other popular web applications used to generate venn diagrams


auses inaccurate 3-set scaling with circles


beuler diagrams only. 3-set scaling only when mathematically possible  <cit> 



CONCLUSIONS
venndiagramweb provides a unique way to integrate and optimize r code for data-visualization with web-based real-time manual optimization with computational pipelines. it will be a key resource for the field. for application support please contact paul.boutros@oicr.on.ca.

additional files
additional file 1: table s <dig>  sample data for the user to upload. hypergeometric testing was conducted on samples of rat and mouse liver tissue to identify similar transcriptomic profiles  <cit> . 

additional file 2: figure s <dig>  venn diagram created in venndiagramweb using supplemental table  <dig>  <cit>  uploaded as data <dig>  with x1 = data1$homologeneid. x2 = data1$homologeneid. x3 = null. category.names = mouse,rat. cat.pos =  <dig>  cat.dist =  <dig>  and all other arguments default. 



abbreviations
crancomprehensive r archive network

