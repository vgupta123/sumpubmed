BACKGROUND
biological pathways and networks comprise sets of interactions, or functional relationships, occurring at the molecular level in living cells  <cit> . a large body of knowledge on cellular biochemistry is organized in publicly available repositories such as the kegg database  <cit> , reactome  <cit> , mint  <cit> , or the cancer cell map . all these pathway and biological network databases facilitate a large spectrum of analyses, improving our understanding of cellular systems. for example, it is now a very common practice to cross the output of high-throughput experiments, such as mrna or protein expression levels, with curated biological pathways in order to visualize changes, analyze their impact on a network and formulate new hypotheses about biological processes  <cit> . the development of those pathway repositories has also fueled the creation of standard representations and formats, to facilitate the exchange and representation of data, such as the biological pathway exchange standard   <cit> , the systems biology markup language   <cit>  or the systems biology graphical notation   <cit> . the pathguide website counts more than  <dig> web-accessible biological pathway and network databases  <cit> , many of which are using the sbml and biopax standard formats. ultimately, those integrated resources will facilitate computational model building, their exchange, re-usability and their experimental validation, a cycle that is the cornerstone of the systems biology approach  <cit> .

as a consequence, there is a need for the precise and accurate construction of pathways and large-scale molecular maps covering fundamental biological processes. such maps are often constructed by manual curation of the literature or automated curation from pathway databases  <cit> . more and more, they are focused on the regulation of biological processes involved in diseases such as cancer, alzheimer’s disease or crohn’s disease, to name a few  <cit> . however, the scale of such maps, even when they are focusing on a particular process, is quite large, with hundreds of chemical species and interactions. the analysis and interpretation of such maps is therefore not a straightforward task. several computational tools have been developed to facilitate the visualization, curation and analysis of pathways  <cit> . for example, celldesigner is a software package for the graphical editing of biological pathway diagrams  <cit> . celldesigner files are using the sbml format specification, with specific extensions describing biological types of chemical species and the layout of the reaction graph. there is obviously a need for user-friendly software tools that would allow the user to easily import data from various standard format sources, to perform structural analyses on these pathways and to manipulate networks, and to be able to export a network to a suitable format for further analysis. we have created binom  <cit> , a software plugin for the popular cytoscape network vizualization and analysis tool  <cit>  precisely to fulfill this purpose. there are several tools available for the import, visualisation and export of standard systems biology file formats, as well as their their conversion  <cit> . there is also a significant number of tools for network analysis  <cit> . however, we think that the strength of binom is to provide at the same time a strong support for a choice of systems biology file formats, a set of robust and powerful network analysis tools, and also some very speficic functions that are not available in any other tool at the moment . binom is designed to be useful in a finite set of pragmatic, user-oriented and proved to be needed scenarios for biological networks analysis. for instance, a user may want to import a molecular map from a celldesigner file, analyze it using graph-based algorithms, and finally export a subnetwork of interest to the sbml format for mathematical modeling using a dedicated software. obviously, it is rather complicated to provide robust support for all the standard systems biology formats that are now available. we have therefore implemented functions in binom for importing and exporting from and to a selection of file formats . binom uses its own ontology for the graphical representation of the different entities and their relationships. the graphical conventions in binom are inspired by the ones defined for the sbgn standard . binom also implements several functions based on graph operations for the structural analysis of biological networks. those functions can be used to reduce the complexity and extract meaningful subnetworks from large-scale molecular maps. here, we provide a detailed view on the functions implemented in binom that permit specific extraction of information from molecular maps and improve their readability and usability. we also highlight novel functions that were implemented recently, such as the support of the latest biopax specification  and an algorithmic approach for the quantification of pathways on influence networks . we illustrate the use of the principal binom functions with a detailed analysis of a molecular network of the g1/s transition of the cell cycle, a central mechanism for tumor development and progression.

the table is comparing the main functions in binom with other visualization and network analysis tools. the symbol • indicates that the function is available within the tool, while ∘ indicates that the function is not available. the references for the software tools are: celldesigner  <cit> , biopax2sbml  <cit> , sybil  <cit> , sbfc , biographer , cysbml  <cit> , shortestpath , glay  <cit> , mcode  <cit> , moduland  <cit> , clustermaker  <cit> , nemo  <cit> .

the table is indicating the different standard systems biology file formats and versions that can be currently imported/exported in binom, as well as what type of conversions are possible.

implementation
binom is implemented in the javatm programming language, as a plugin for the network visualization and analysis software package cytoscape  <cit> . although the primary use of binom is through the cytoscape software, the underlying logic of most of the binom functions is completely decoupled from the cytoscape objects, allowing developers to also use binom as an independent java library  <cit> . the installation of binom can be done through the cytoscape plugin manager . alternatively, the user can also download the plugin together with a manual and the source code from the binom website .

binom manipulates the information contained in standard systems biology files by mapping it onto a labeled graph, called index. the index does not try to map the totality of all details but rather serves as a connection map for the objects contained in other ontologies. the index contains the minimum information needed to graphically represent objects and connections between them. binom index is a light-weight construction which can be easily regenerated, does not duplicate the information in existing files and serves only to facilitate the visualization and to access existing systems biology files. currently, binom index is mostly developed to map biopax ontology files and celldesigner object schema. more specifically, we use xmlbeans  to create java classes from the xml definition file in order to access all the elements contained in the celldesigner, sbml and csml files. biopax uses the web ontology language specification  to store data in xml-formatted files. in binom, we use the jastor and the jena java libraries ,  to automatically create java classes from the biopax specifications, allowing a convenient access to the different data types encoded in the biopax files. more detailed informations about the index and the mapping are available in the binom manual .

the core functions of binom can be grouped in five different topics: input/output, structural analysis, biopax utils & query, module manager and utilities.

binom input / output
binom functions facilitate the import and export of some of the standard systems biology file formats, but binom plugin is not designed to be a universal converter . for instance, binom will be useful in the examples of conversion and analysis scenarios detailed below : 

• interconversion of celldesigner files to biopax, and from a biopax reaction network to sbml level  <dig> 

• import of a biopax file as a reaction network and/or a pathway structure and/or an interaction map, followed by the creation of a subnetwork saved as a new biopax file.

• import of a biopax file, selection of a subnetwork of interest saved as a sbml file for the creation of a computational model using an appropriate software package, such as celldesigner  <cit>  or ginsim  <cit> .

• import a large celldesigner map and export only a subnetwork as a new celldesigner file.

the biopax community has recently made a major update of the biopax standard, producing a new specification known as biopax level  <dig> . this format supports metabolic pathways, signaling pathways , gene regulatory networks, molecular interactions and genetic interactions. due to major changes in the specification, the biopax level  <dig> is not backward compatible with the level  <dig> file format.

biopax level  <dig> files are imported as three separate graphs, respectively the reaction network , representing the biochemical reaction network, the pathway structure , showing the hierarchical organisation of pathways, and the interaction map graph . at the moment, the miriam annotations are not imported in binom, but we plan to provide access to this type information soon. several examples of simple biopax level  <dig> files imported through binom, representing different types of interactions, are shown on figure  <dig>  figure  <dig> shows the hierarchical structure of the human apoptosis pathway, extracted from reactome database, and constructed by binom.

when importing a file, binom is calling a naming service function in order to create meaningful names for the various entities. more precisely, entity names are combined with other features such as modifications, compartment and complex components. the different features are indicated by special characters, such as “@” for the compartments, “ |” for modifications and “:” to delimitate the different members of a complex. for example, the name cdc <dig> |pho@cytoplasm represents the protein cdc <dig> in a phosphorylated state, located in the cytoplasm, while the name cdc13:cdc <dig> |thr167_pho@cytoplasm indicates a protein complex located in the cytosplasm, composed of the protein cdc <dig> and the protein cdc <dig> phosphorylated at position  <dig> on a threonine residue.

binom structural analysis
the central goal of the binom plugin is to provide efficient methods and algorithms to reduce the inherent complexity of biological networks into manageable and meaningful subnetworks. this goal is achieved by a set of functions included as a built-in structural graph analysis library. some of the functions take into account the semantics contained in the graph element names. the structural analysis functions implemented in binom include the identification of connected and strongly connected components, pruning of the network, decomposition by involvement of a protein  or by cyclic decomposition, path analysis and network clustering. we also introduce in this version of binom a novel function to quantify the influence of a source node on a target node taking into account experimental data, called piquant. in the following paragraphs, we will detail network decomposition and the piquant score.

decomposition by involvement of a protein or by cyclic decomposition
binom proposes three methods to dissect a complex biological network into parts. a trivial approach to separate a network into subparts is to dissociate the unconnected subparts of the network. a more sophisticated one consists in decomposing the network into strongly connected components, using the algorithm of tarjan  <cit> . it is also possible to prune the network into three different parts: the one with all the elements associated with the input part of the network , the second with all the elements associated with the output part  and the last part with all the elements linked to the central core, the cyclic part, composed from strongly connected components, possibly connected together. this type of approach corresponds to finding the bow-tie graph structure  <cit> .

the decomposition in material components is using the node name semantics to isolate subnetworks in which each protein is involved, either as a simple chemical species or as part of a complex. as a result, major overlaps between the different subnetworks are to be expected, as many proteins are expected to be involved in different complexes. figure  <dig> shows two examples of subnetworks obtained by material component decomposition applied to a cell cycle network model of the yeast species s. pombe <cit> . this approach identifies different parts of the life cycle of a given protein.

the cycle decomposition is splitting the network into relevant directed cycles  <cit> , using a modifed version of the algorithm of vismara and colleagues  <cit> . this procedure commonly shows the different mechanisms in which the protein is playing a role. care must be taken when applying this approach, as the number of cycles can be huge for large network structures. for example, it might be preferable to eliminate first the network hubs, which are by definition highly connected, and also group short cycles in larger subnetworks before applying the decomposition function. figure  <dig> shows two cycles involving cdc <dig> after a cycle decomposition.

obviously, the result of some decomposition functions will result in subnetworks that share some components, as it is for example often the case with the decomposition in material components. therefore, binom also includes a function to cluster networks, based on common components such as protein or protein complexes. to determine the size of the clusters, the user can specify a percentage of intersection  that will be used as a threshold to create the clusters.

path analysis algorithms
binom analysis functions also include classical path analysis algorithms, such as finding the shortest paths, the suboptimal shortest paths or all non self-intersecting paths . the shortest path is calculated as the path having the minimal sum of weights of the edges composing the path  while the suboptimal path is constructed by removing all edges of all shortest paths one by one, and finding the new shortest path. all non self-intersecting paths are those paths that do not contain loops . they are found using a variant of breadth-first search algorithm. the user should be careful when using this procedure, as the number of paths between nodes can be very large for big networks. in order to limit the number of paths found, binom allows to specify the maximal length of the path to be found.

listing of the different algorithms implemented in binom for path analysis. the “directed paths search“ toggles the search for directed or undirected paths. the ”finite radius” option lets the user restrict the search to a given path length, in order to limit the size of the results and computation time.

pathway influence quantification algorithm
in this version of binom, we have introduced a novel approach called piquant. it consists of associating a score to a target node of interest for a given network, that will quantify the effect of experimental data. a target node can be a gene, or a phenotype of interest, that represents a more complex biological function, such as cell proliferation or apoptosis. a positive or negative piquant score value is a quantitive theoretical prediction of the over or underexpression of the target node. for instance, let us consider that we have experimental data for a given network corresponding to differential gene expression values . in that case, a positive or a negative piquant score for a given phenotype  predicts quantitatively that the phenotype would be respectively enhanced or inhibited. thus, the piquant score can be used to compare the effects of two different experimental datasets on the same phenotype , or to compare the effects of two different network architectures on the same phenotype for one experimental dataset.

more formally, we define a node as annotated when a signed real number is assigned to the node, representing an experimental data value . a path k ∈ { <dig> …,q} is defined as the sequence of consecutive connected nodes between an annotated node and a target node . we can extract a set of paths from annotated nodes to target nodes , by using various algorithms. in binom, we propose three solutions to search for paths between the annotated and target nodes . the annotation αk of the path k is defined as the annotation of the first node of the path. we define the sign σk of the path k as the product of the signs of every edge of the path and the length λk of the path k as the number of edges in the path. a summary of the input data types is shown in table  <dig>  we hypothesize that the longer the path is, the lesser the global influence will be on the target node. this assumption has the advantage of being simple and does not require the estimation or calculation of extra parameters. considering a set of q paths that have been extracted from the network of interest, between a selection of annotated and target nodes defined by the user, the piquant score is then defined as:

input data types description for the calculation of the piquant score.

 piquantscore=∑k=1qαkσk1λk 

in the case of the network presented in figure 5a, let us consider ac the annotated node and ph the target node and consider only the two paths defined in the figures 5b and 5c. given that the node ac is annotated by the value  <dig> , that the first path has a length equal to  <dig>  and that the second path has a length equal to  <dig>  we can calculate the piquant score of the node ac to the node ph as:

 piquantscore=2·1·13+2··15= <dig>  

in more realistic situations, we would have multiple annotated nodes with different annotations, and also multiple target nodes representing phenotypes of particular nodes of interest. we have implemented in binom a set of functions that allow users to select annotated nodes, select target nodes, and choose among three different options for searching paths . the software is then calculating piquant scores for every target node specified, taking into account every possible path found by the algorithm. an interactive window is detailing the piquant score results, both globally and for every path from the annotated nodes to the target nodes. it is also possible to get a full text report detailing all the calculations and the results. we describe a detailed and concrete application of the piquant algorithm to a real biological network in the results section.

binom biopax utils & query
the biopax format was primarily conceived as a standard facilitating the exchange of data between various database systems  <cit> . as a consequence, this format was designed first to be machine-readable, but was not intended to be edited and modified by biologists. furthermore, due to its adoption by large biological knowledge repositories, some biopax files can be really large, such as the homo sapiens network from the reactome database  <cit>  that has more than  <dig>  reactions involving more than  <dig>  chemical species .

binom implements a set of functions precisely aiming at allowing end users to easily visualize and modify biopax files. the functions are using java class introspection techniques to build a biopax class tree. then, the content of the file can easily be accessed. for example, figure  <dig> shows all the information linked to the trail protein, after a call to the biopax property editor function of the binom menu has been made .

the biopax query functions in binom allow the user to work with huge biopax data files and extract the relevant information, by querying an index and retrieving data from it. the index corresponds to a mapping of the content of the biopax file on a labeled graph . various statistics can be displayed on the content of the index, such as the number of proteins, complexes, reactions, publications, etc. to start extracting relevant information, the user can query the index by gene name  and start building a network centered around this molecule of interest. the extension of the network is done by adding different types of entities: complexes where the molecule of interest is involved, chemical species, reactions  and related publications. figure  <dig> illustrates an example of a small network extracted from the human apoptosis pathway downloaded from the reactome database  <cit> , and centered on the smac protein, with all the protein complexes in which this protein is involved and that were added using the binom biopax query functions.

binom module manager
to facilitate the visualization of large molecular networks, we propose a set of functions that simplify them by creating modules from selected parts of the large network. this task, that we call modularization, is a semi-automatic procedure, where biological expert knowledge is used to insure the coherence of the newly created modules.

most of the modules represent a detailed sequence of events that occur with a particular protein or protein complex, whose name can then be used to represent the whole module . this way, a simplified representation of a complex map can be produced, using the modules and their relationships as an abstracted version of the comprehensive network  <cit> .

to facilitate the creation and management of modules, we have used in this version of binom a new feature introduced in recent versions of cytoscape   <cit> , known as nested networks. this feature allows the user to embed any cytoscape network in a node. it was introduced for the creation of network hierarchies and circular relationships. in binom, we use this feature to facilitate the process of modularization of a large network. the binom module manager integrates functions that allow users to easily create a network from a list of subnetworks, packing individual nodes, merging different subnetworks, displaying information about metanodes and calculating the intersection between subnetworks.

binom utilities
this set of functions corresponds to various small utilities that are not implemented in cytoscape yet, but might be very useful for the analysis and manipulation of networks. for example, it is possible to automatically select all the edges between two nodes in the network in one operation, to generate the network corresponding to the double network differences between two networks a and b , or update all the subnetworks of a session after some changes have been made to the initial one. the binom utilities also implement clipboard functions, giving the possibility to copy, add and paste selected nodes and edges and also to show the clipboard content.

RESULTS
as an example of the use of binom functions, we propose to study a reaction network focusing on the transition from g <dig> phase  to s phase  of the cell cycle  <cit> .

in a previous work, we have published a comprehensive map of the regulation of the well-known and charaterized tumor suppressor gene retinoblastoma   <cit> . the product of this gene operates at the heart of the cell cycle, acting as a signal transducer, connecting the cell cycle with the transcriptional machinery. the pathway in which rb is acting is disrupted in many human tumor types  <cit> . we used the celldesigner software to create the map  <cit> . it lists  <dig> proteins,  <dig> chemical species,  <dig> interactions,  <dig> genes, and recapitulates more than  <dig> publications, including information from different cellular types, thus making the map a generic map of the cell cycle regulation. it is composed of two main compartments: the cell, containing the cytoplasm, the nucleus and the nucleolus, in which the biochemical interactions such as association, dissociation, phosphorylation, acetylation, degradation, etc. take place; and the genes, which lists the target genes of the main transcription factors of the map, the e2f family members. a thorough description of the model, the methods used to build it and create simplified versions of it along with an interactive  map are available on our websites  and http://navicell.curie.fr/navicell/maps/rbe2f/master/).

for the study presented here, we chose to concentrate on the g <dig> to s transition. we used the intersection of the  <dig> chemical species of rb/e2f network and the  <dig> chemical species listed in reactome  <cit>  for the g1-s transition . the resulting subnetwork contains  <dig> proteins,  <dig> chemical species, and  <dig> biochemical reactions .

this map contains a lot of valuable information but it can be rather difficult to extract. we present two ways to get some biological insight from this map, by using binom functions. the first one consists of transforming the reaction network into an influence network in order to analyze experimental data on it. the second one presents a simplification of the comprehensive map by applying a method of reduction of the numerous interactions into modules without losing any content from the original map.

application of piquant on an influence network
piquant algorithm can be used to perform a quantitative analysis on an influence network. in order to translate the g1/s reaction network into an influence network, we used a tool developed by the team of biocham  <cit>  that is available online . to translate a reaction network into an influence network, the former is pre-processed according to simple rules:  biocham deletes all non-regulated degradation and syntheses reactions,  all intermediary chemical species with only one input and one output are suppressed,  if the reactions of synthesis and degradation of the chemical species deleted in  have distinct inputs and outputs, then these reactions can be merged, and  if they have the same chemical species as input/output, then the reaction is a reversible reaction and is replaced by a degradation  <cit> . a thorough description of the procedure together with an example of such a conversion is available in  <cit> .

we applied piquant to the resulting influence network of the g1/s transition of the cell cycle . we selected three target nodes as markers of the g <dig>  s and m phases of the cell cycle. for the experimental data, we used expression data from a study of  <dig> bladder cancer tissue samples compared to  <dig> normal samples  <cit> . for each gene, the differential expression between tumor and normal tissue is assessed by a t-test. the t-test statistic value is used as the annotation for each node. we selected the  <dig> nodes for which we had experimental data values as annotated nodes. then, we constructed a text file listing nodes of the influence network and their annotation and we imported this file using the cytoscape function “import > nodes attributes” in the cytoscape session of the influence network. figure  <dig> represents this influence network after its import.

modularization of the g1/s molecular map
the initial g1/s network is very detailed and may be hard to grasp at a first glance. to facilitate the analysis of the content, we propose to organize the reaction network as a modular network. the chemical species are clustered in groups, referred to as modules, in an semi-automatic manner, using binom functions and biological knowledge. each module represents in fact a sequence of events occuring with a particular protein. the modules are then linked by activating or inhibiting influences according to the information contained in the original diagram or derived from previous biological knowledge. a detailed tutorial on the construction of this modular network using binom is described in the additional file 2: supplementary methods.

briefly, we first decomposed the global network into its different components, by using name semantics, to isolate the subnetworks in which each protein is involved . the  <dig> networks that are created this way may share a lot of common chemical species, so we went further by clustering the subnetworks having at least 25% of common chemical species. we renamed the  <dig> clusters obtained with a name that illustrates the content and the main function of the clusters . then, we checked the content of each module, making modifications if necessary by adding or deleting nodes, according to specific biological knowledge. for example, the module e2f1_rb is further decomposed in three different modules containing the proteins rb, e2f <dig>  and e2f <dig>  finally, we generated a modular view of all the individual modules, using the module manager functions. binom links the modules if they share components or edges. these edges are then interpreted as activation or inhibition by the modeler. our final modular view is composed of  <dig> modules, with  <dig> edges connecting them .

the modular view offers a simplified visualization of the complex network, without losing any information of the global map. the model obtained is more abstract but highlights some aspects that may not be evident from the comprehensive reaction network. for instance, it brings into relief feedbacks  involving the major players of the cell cycle, and prepares the network for mathematical modeling. the translation of this modular network into a boolean model, for instance, is indeed straightforward. another application for the modular model would be to analyze experimental data such as transcriptome or copy number variations . the “activity” of each module is based on the expression levels of the genes within the module, which can be visualized using a color code on the modular map. it’s then fairly easy to analyze the difference between a disease and a normal state, or even to try to discriminate between different disease stages. we have produced such maps for the rb/e2f modular network to analyze bladder tumor samples, and we could observe a striking difference between the non-invasive and invasive states of the disease  <cit>  .

CONCLUSIONS
building a useful model for systems and mathematical biology is a multi-step process, beginning with the collection of biological knowledge and progressing towards the formalization of a network and its translation in mathematical terms. binom is designed to help during the intermediate steps of this process, by providing a convenient access to a selection of standard systems biology formats, by giving the possibility to analyze the network using various graph theory algorithms and map biological data onto it. binom is clearly not a tool for numerical simulations, but it provides functions to export final networks to the sbml and ginsim file formats , facilitating the import into various numerical simulators. together with functions described in this manuscript, binom implements several other methods which are described elsewhere such as finding optimal minimal cut sets , coloring celldesigner maps, creating google maps-based interface for browsing large network maps  and finding enriched subnetworks  <cit> .

availability and requirements
• project name: binom

• project home page: 

• operating system: platform independent

• programming language: java

• other requirements: java  <dig>  or higher, cytoscape  <dig> ,  <dig> 

• license: gnu lgpl

• any restriction to use by non-academics: none

competing interests
the authors declare that they have no conflict of interest.

authors’ contributions
eb, az and lc designed the study. eb, az and dr wrote the code. eb, az, lc, dr and gs generated the data, performed the analyses and interpreted the results. eb, az and lc wrote the manuscript. az and emb supervised the study. all authors edited and approved the final version of the manuscript.

supplementary material
additional file  <dig>  table s1
piquant score values for all the annotated nodes  and all the target nodes  of the g1/s influence network.

click here for file

 additional file 2
supplementary methods. installation procedure for binom, changelog for binom version  <dig>  compared to version  <dig>  and detailed tutorial for the creation of a modular view of the g1/s network using binom functions.

click here for file

 acknowledgements
the research leading to these results has received funding from the european union seventh framework programme  asset project under grant agreement number fp7-health-2010- <dig> and from the grant “projet incitatif et collaboratif computational systems biology approach for cancer” from institut curie. eb, lc, dr, gs, emb and az are members of the team “computational systems biology of cancer”, equipe labellise par la ligue nationale contre le cancer. the authors would like to thank the anonymous reviewers for their valuable comments and suggestions.
