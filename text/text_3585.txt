BACKGROUND
the reconstruction of genetic regulatory networks based on microarray gene expression data is one of the most challenging tasks in bioinformatics. the genetic regulatory relationship considered here will be restricted to what might be observed in a microarray experiment: a change in the expression of a regulator gene modulates the expression of a target gene mainly via protein-dna interactions besides other types of interactions, such as protein-protein interaction. various approaches have been proposed to this problem, such as boolean network and bayesian network approaches  <cit> , differential equations and steady-state models  <cit> , and other statistical and probabilistic methods  <cit> . each method has its own strengths and weakness  <cit> , however, very few has been considered superior to the others mainly because of the intrinsically noisy property of the data, 'the curse of dimensionality', and the unknown 'true' underlying networks. various scoring metrics and searching heuristics were proposed in  <cit>  within the bayesian network  framework. it was shown that a large amount of data is required in order to have a good recovery of the underlying network. this requirement is easily satisfied in a simulated environment; however, it is unlikely to be met for biological applications. efforts such as incorporating heterogeneous biological data in network reconstruction have been witnessed to improve the accuracy of the networks  <cit> .

as pointed out in  <cit> , large scale networks, such as the internet and the scientific collaboration network, show the scale-free property, i.e., the connections or edges in the networks follow the power law distribution. many biological networks, including transcription regulatory networks, fall into this category. so far there is little research that has explicitly explored this important property to facilitate the learning of genetic networks from gene expression data. one recent study imposed the scale-free constraint on structure in network inference based on the s-system model  <cit> . they investigated the performance with a simulated small scale time-course data. on the other hand, different mechanisms have been employed to explain the formation of the scale-free property in large scale networks other than biological networks. most of the suggested models relate to preferential attachment  <cit> . in contrast to modeling network growing, a model with fixed number of nodes and links was proposed recently  <cit> . by applying local rewiring moves, the network can reach equilibrium states which have the power law degree distribution. different mechanisms also were proposed to explain specific properties of different types of networks, such as genetic regulatory networks and the world wide web  <cit> .

in this study, we proposed a network reconstruction algorithm that takes into account the scale-free network topology based on a modification of the symmetric-n algorithm originally developed in  <cit> . the symmetric-n algorithm was used to construct co-expressed gene networks which showed scale-free topology. it was also recently incorporated as a major component in their nearest neighbor network algorithm for clustering expression data for generating functionally coherent clusters  <cit> . both our modified and the original algorithms were evaluated on simulated data sets and a 102-gene set of microarray gene expression data from a study of the saccharomyces cerevisiae yeast cell cycle  <cit> . compared with the original algorithm, the proposed algorithm demonstrated promising capability in recovering the underlying network structure. the results of our algorithm were further compared with a previous study based on the bn approaches  <cit> . our algorithm performed much better on the simulated data when the sample size is small compared with the number of variables, as is most of the currently available microarray expression data.

RESULTS
proposed algorithm
our algorithm is a modification of the algorithm for network construction proposed in  <cit> . the algorithm in  <cit>  is based on the concept of n-nearest-neighbor and consists of two steps. this algorithm  is presented in the 'methods' section. in the first step, for each node in the network, all other nodes are sorted according to the magnitude of correlations of gene expression in descending order. these nodes are considered as potential neighbors. in the second step, each pair of nodes is investigated. if they are both in each other's n nearest neighbors, a connection between them is made. otherwise, they are not connected. here n is a prescribed number for the size of neighbors.

by using the symmetric-n algorithm, agrawal  <cit>  constructed co-expressed gene networks from several published gene expression data sets and found that the gene networks had small-world characteristics and became scale-free when n was above certain threshold. it was shown that this algorithm was able to uncover the scale-free topology, however, no analysis was provided on biological relevance of the co-expressed networks in the study. the major characteristic of a scale-free network is that a few nodes with much higher degrees of connections act as the core of the network and other nodes with much fewer connections act as the periphery of the network. in biological networks such as genetic regulatory networks, the transcription factors  are more likely to regulate multiple target genes and therefore have more connections compared to those non-tfs. on the other hand, the non-tf genes are only regulated by a few tfs. these observations suggest that the sizes of neighbors for the core and periphery nodes should generally not be equal. this phenomenon motivated a modification of the algorithm symmetric-n so that the unequal neighbor sizes of the core and periphery nodes can benefit the network construction. in step  <dig> of the symmetric-n algorithm, instead of using the same n neighbors for all the nodes, a larger number nc is assigned to a core node and a smaller number np is assigned to a periphery node. if a periphery node is within the nc nearest neighbors of a core node and the core node is within the np nearest neighbors of the periphery node, then a connection is made between them. since the ranges of potential neighbors are different for these two types of nodes, the proposed algorithm is named asymmetric-n. details of the algorithm are presented in the 'methods' section.

computation study
the original algorithm symmetric-n and our modified algorithm asymmetric-n were evaluated with both simulated gene expression data and microarray gene expression data related to yeast cell cycle. details on the microarray data, the construction of the simulated networks, and their node degree distributions are presented in the 'methods' section. two simulated datasets were derived from a 100-node network and a 20-node network, respectively. the underlying scale-free network for the 100-node network has  <dig> core nodes and  <dig> periphery nodes. the directions of edges are more likely to be from core nodes to periphery nodes. the 20-node network was constructed in a similar way. the criteria used to evaluate the performance of the algorithms on the simulated data include recall, precision and f-score. recall is defined as the ratio of the number of true edges found in the reconstructed network to the number of total edges in the underlying network. precision is defined as the ratio of the number of true edges found in the reconstructed network to the number of total edges found in the reconstructed network. f-score is defined as 2*recall*precision/.

the microarray data include  <dig> gene expression temporal profiles observed over  <dig> time points derived from the yeast cell cycle gene expression data  <cit> . for this study, the 'true' interactions were derived from the database of pathway studio  <cit>  by submitting the list of genes and querying for instances of published interactions between these genes limited to interaction types 'expression' and 'regulation'. one hundred seventy one published interactions were found for this 102-gene set. it should be noted that this is not a so-called 'golden standard' set for a true evaluation of the learning outcome. we report the percentage of the published edges out of the total edges in the reconstructed network, as the criteria used for the simulated datasets would be inappropriate for this microarray dataset because of the unknown or incomplete 'true' network. for the examination of biological relevance of the predicted edges, we report the percentage of edges whose nodes  share a common gene ontology  biological process  annotation from the saccharomyces genome database  go slim mapper  <cit> . generally, two genes or gene products with a common go bp annotation are considered likely to interact with each other.

in addition, γ in p ~ kγ of the node degree distribution in the constructed network and the fitness of the distribution, measured by the coefficient of determination , were used for the evaluation of the network structure. the parameters γ and r <dig> were computed with the fit() function in matlab  function). both f-score and r <dig> range between  <dig> and  <dig>  for a good recovery of the network, f-score is expected to be high; γ is expected to be close to the γ of the underlying network; and r <dig> is expected to be high. for the 100-node network, γ = - <dig>  and r <dig> =  <dig>  for mixed-degree distribution; for the 102-gene network formed with the published interactions from the pathway studio, γ = - <dig>  and r <dig> =  <dig>  for mixed-degree distribution.

experiment with simulated data
for each underlying network,  <dig> different sets of gene expression profiles were generated for a fixed number of samples  and results obtained from the algorithms were averaged.

the 100-node network
in panel , while the number of neighbors is fixed , increasing the number of samples will generally improve both recall and precision, therefore also f-score. this result is expected since more observations usually lessen the 'curse of dimensionality', and agrees with the previously published results  <cit> . the parameter γ in panel  is still far from the true value  as the number of samples increases.

in panel , we see the trends of recall, precision and f-score when fixing the number of samples  and the number of neighbors for the periphery nodes  while varying the number of neighbors for the core nodes . all the three measurements increase as nc increases, which implies that the inclusion of more neighbors for the core nodes generally improves the performance of the algorithm. similarly, increasing the number of neighbors for the core nodes makes γ move toward - <dig>  as observed in panel . better results with larger nc for core nodes are consistent with the fact that tfs usually regulate a large number of genes.

in panel , s and nc are fixed at  <dig> and  <dig> respectively, and np varies. the trends of the three curves show some different patterns compared with those in panel : recall increases while precision decreases and f-score decreases very gently, which means that more false edges are included than true edges when increasing the number of neighbors np. similarly, the structure of the network becomes drastically different from the underlying structure as the number of neighbors for the periphery nodes increases ). therefore, this implies periphery nodes should have very few neighbors. this phenomenon is consistent with the fact that non-tf nodes are usually regulated by a few tfs. similarly, as observed for the symmetric-n algorithm, when fixing nc and np, the increase of s improves the performance of the algorithm for all the three criteria ) and the structure of the reconstructed network becomes closer to that of the underlying network ).

the performance of symmetric-n and asymmetric-n can be compared by examining figures  <dig> and  <dig>  when the number of samples is fixed  while numbers of neighbors vary, comparing results in panel  of figure  <dig> with those in panels  and  of figure  <dig>  the asymmetric-n algorithm performs much better than the symmetric-n algorithm in terms of f-score, when the number of neighbors for the core nodes is large and the number of neighbors for periphery nodes is small. it is also true for γ by comparing panel  of figure  <dig> with panels  and  of figure  <dig>  the same phenomenon is observed when numbers of neighbors are fixed while number of samples changes  in figure  <dig> with panel  in figure  <dig>  panel  in figure  <dig> with panel  in figure  <dig>  respectively). the reason is that in the symmetric-n algorithm all the nodes are treated equally while in asymmetric-n algorithm different types of nodes  are distinguished, which reflects biological expectations more closely. thus the improved performance is expected. in summary, asymmetric-n algorithm outperforms significantly the symmetric-n algorithm proposed in  <cit> .

the 20-node network
we compared the proposed algorithm with some other methods currently used for the reconstruction of transcription regulatory networks. the experiments of yu et al.  <cit>  was selected because our simulated profiles were generated following their procedure, though our networks possess the scale-free property while no structure was assumed in theirs. they applied the bn method to  <dig> simulated small networks each with  <dig> nodes, with the number of samples ranging from  <dig> to  <dig> . a recall-imprecision curve was used to show the performance when the number of samples increases . here, a recall-imprecision curve for the asymmetric-n algorithm is drawn for a 20-node network . the largest number of samples is  <dig>  in our study. to better appreciate the performance, the precision curve  is shown as well.

it is not surprising that recall increases with the number of samples. imprecision, however, increases first and then decreases. it is not clear why this happens and needs further investigation. fixing at the sample size of s =  <dig>  f-score is  <dig> , which is better than  <dig>   obtained from the bn method  <cit> . at larger sample sizes such as  <dig> and  <dig> , the bn approach performs much better. this is reasonable because that the bn method is statistically rigorous and it benefits when more samples are available. however, when only limited samples are available, as is the case in most of the currently available microarray data, our approach may perform better.

experiment with the yeast cell cycle microarray data
the results obtained from our asymmetric-n algorithm with different choices of correlation matrices are summarized in table  <dig>  results of several combinations of nc and np are illustrated. the γ and r <dig> values, e.g., γ = - <dig>  and r <dig> =  <dig> , deviate far from their counterparts for the underlying network with γ = - <dig>  and r <dig> =  <dig> . this is in contrast to the results that the structural parameters of the reconstructed network are close to their counterparts of the underlying network with the simulation data. the main reason for the inconsistency is that the underlying network in this real dataset is incomplete. the γ and r <dig> values for these two networks, namely, the network formed with published interactions and the reconstructed network, might both deviate from those of the real gene interaction network at work in the yeast cell cycle, for which our understanding is still incomplete.

p-p pcc means point to point  pearson correlation coefficient between two time series profiles.

s-s pcc means segment to segment  pearson correlation coefficient and the segment  value is + <dig>  if the value at point i is less  than that at point i +  <dig>  <cit> .

time lag means when aligning the two gene profiles, one of them needs to be shifted relative to the other.

#edges means the total interactions reconstructed;

#published means the reconstructed interactions that were previously published;

%published is the percentage of the published interactions among all the reconstructed interactions;

%go bp means the percentage of the reconstructed interactions whose genes or gene products pair share a common gene ontology  biological process  annotation from the sgd go slim mapper  <cit> ;

γ and r <dig> are the power in p ~ kγ and coefficient of determination returned by the fit() function, respectively .

as the gold standard or 'true' network is unknown or largely incomplete for this real microarray expression dataset, using criteria such as recall and precision to evaluate the performance of the reconstruction algorithms is inappropriate and likely to be misleading. there is an emerging tendency recently to take biological context into consideration when dealing with functional genomic data  <cit> . by incorporating biological context information into the data integration process and the network recovery procedure, myers et al.  <cit>  demonstrated that the utilization of such an important source yielded dramatic benefit comparing with their earlier work which only used prior knowledge of gene function but did not particularly exploit biological context. in general, most experiments are designed with the goal of investigating a particular biological process in mind  <cit> . consequently, it is both necessary and important to inspect the related biological process information when checking the validity of the predicted interactions in a network, especially for situations where gold standard is not available or incomplete. in this study, for the biological relevance of the predicted edges, we report the percentage of edges whose nodes or genes share a common go bp annotation from the sgd go slim mapper  <cit> . in general, the probability for two genes or gene products to interact with each other is high if they belong to the same biological process.

for the interactions found by our algorithm, when using the point-to-point pearson correlation coefficient  between two time series of gene profiles of  <dig> time points as the value in the correlation matrix with nc =  <dig> and np =  <dig>  38% of which are found to share the same go bp annotation when no time lag is used; while 31% are found to share the same go bp annotation when one time lag is used with nc =  <dig> and np =  <dig>  when using the segment-to-segment pearson correlation coefficient  over  <dig> segments, the results are 28% with nc =  <dig> and np =  <dig> and 46% with nc =  <dig> and np =  <dig> for with and without time lag, respectively . this percentage  is comparable to the result  on the same dataset in  <cit>  by using the pcc. of all the interactions in the network constructed in  <cit> ,  <dig> % are published interactions in comparison with those  in the current study.

discussion
in our proposed algorithm, it is required to specify whether a node is a core node or a periphery node. in case of reconstruction of genetic regulatory network, it is not hard to identify transcription regulators from biological knowledge, therefore the core nodes. consequently, the core and the periphery nodes can be always specified for a set of genes whose networks are to be reconstructed by the proposed algorithm.

we have also mentioned that in our current study the edges in the recovered networks are directionless, i.e., interaction between a pair of nodes is indicated without specifying which node is the source of influence. when more accurate information is needed, the directions of the edges have to be considered. the direction between core and periphery nodes can be always assigned as from the core node to the periphery node since transcription factors always regulate target genes. several other possible ways to assign the directions for the connections between core and core nodes or periphery and periphery nodes can be considered:

a) compare the rank of node i with respect to node j and the rank of node j with respect to node i. assign the direction of the connection as from the higher ranked node to the lower ranked node. generally, regulators tend to have more connections and targets tend to have fewer connections. thus the rank of a regulator with respect to a target tends to be high while the rank of a target with respect to a regulator tends to be low. when there is a tie, a random direction is assigned.

b) for the time-lagged computation, always assign the direction of the connection as from the node without time lag to the node with time lag. this is in accordance with the fact that the expression level of a regulator changes before it can influence its target.

at the same time, we are seeking even better and more efficient ways to improve this method such as specifying neighbor size for each node according to biological knowledge. it is also noted that although the proposed algorithm demonstrated improved performance over the previous one for simulated networks with underlying scale-free property, our algorithm does not directly use any information on the node degree distribution. therefore, we expect that this algorithm can be applied to the construction of biological networks that are not random.

CONCLUSIONS
a modification of the current algorithm for the scale-free network construction has been proposed and evaluated with two different simulated gene expression datasets and one microarray gene expression dataset. the proposed algorithm performs much better than the original one in recovering the underlying true networks. compared with previously published experiments using bayesian network approaches, our algorithm shows its advantages when the number of samples is small relative to the number of genes, as is the case for most actual biological microarray experiments. the proposed algorithm is expected to be used in reconstruction of biological networks that have underlying scale-free topologies. besides, as the original algorithm was recently successfully used in gene expression data clustering analysis  <cit> , our improved algorithm hopefully can be incorporated into such clustering algorithm frameworks to derive better clustering results.

