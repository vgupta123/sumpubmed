BACKGROUND
most of the information pertinent to the structure and function of a protein is embedded in its primary structure, which is the long chain of amino acids. while the biological characteristics of a protein are a function of the sequence of amino acids it contains, various segments or the key peptides of proteins have specific roles in the overall protein’s function, and not all segments are equally important. these key peptides can differentiate a protein class from another in terms of their structure, function, subcellular location, phylogenetic class, etc. hence, studying a protein sequence at the segment level  has the advantage of understanding the functional components of a protein. in addition, n-gram-based approaches offer the computational advantage of expanding the search space for exhaustive comparison against other sequences. popular bioinformatic algorithms such as blast have exploited this very concept to design algorithms for finding global and local similarities. these key peptides, referred henceforth as n-grams, have been widely used to identify homologous sequences, aligning sequences  <cit> , clustering sequences  <cit> , predicting subcellular localization  <cit> , etc.

in protein sequence classification, it will be interesting to identify the sequence elements that can precisely discriminate between classes. in this study, we propose a new method to identify the discriminative n-grams, which are short peptide sequences that are highly frequent in one class but are either minimally present or absent in other classes. our method implements amino acid substitution scores to detect not only the identical but also the similar n-grams, and a dampening factor to normalize n-gram scores across different classes with unbalanced datasets, resulting in the efficient detection of class-specific motifs.

since the best equivalent of a word is not known in biological sequences, a short sequence of amino-acids i.e. an n-gram can be treated as a word, and statistical techniques can be applied on it to infer many interesting properties of the sequences. using n-grams, statistical analyses such as determining zipf-like distributions and information theoretic measures such as perplexity can be performed to understand the frequency distribution of n-grams in the protein sequences  <cit> . n-gram models can also help in identifying sequence similarity, n-gram profiling  <cit> , and in determining the conservation profile to identify protein homologs  <cit> .

using n-grams as features is a well-known technique in language processing and has recently been successfully applied in biological modeling. a comparative n-gram analysis on the entire genomes of  <dig> organisms has revealed that the frequent n-grams in one organism are also frequent in many organisms, and for each organism there is a small set of different n-grams that is specific to them  <cit> . using these selective n-grams, obtained by chi-square feature selection method, they trained bayesian classifiers and neural networks, which resulted in better protein family classification  <cit> . in other studies, the distribution of n-grams serves as a proteome-signature for organisms, which in turn can be used to determine evolutionary divergence at the genus level  <cit> . in this study, a 4-gram analysis across different organisms revealed that different organisms yielded different perplexity values. on considering only the top twenty 4-grams from neisseria, most of the selective motifs in its protein sequences were successfully identified. it was also proposed that the relative abundance of specific n-gram types could be employed to study the species-specific properties of dna modification, replication and repair mechanisms  <cit> .

selective n-grams have also been used for training svm based classifiers  <cit> . it is hypothesized that the top-n-grams are the grams in which their constituent amino acids at any given position have a higher probability of occurrence at that position. since these grams have a higher discriminative power to reveal most of the information about protein sequences, they are effective for remote homology detection and fold recognition  <cit> . maetschke et al.  have proposed an n-gram based conservation profile method that can be used for performing better sequence alignment by matching n-grams in linear time, compared to other well-known smith-waterman or needleman-wunsch methods, which have quadratic time complexity  <cit> . to exploit sequence homology, leslie et al.  have proposed the use of svm’s to classify protein sequences in scop database based on functional and structural families. this method takes a discriminative approach by training svms with a special type of string kernels called mismatch kernels. for efficiently generating the matrix kernels i.e., representative of the k-spectrum kernel denoted using positive weights for the k-mers with m mismatch instances, a  mismatch tree has been proposed. this tree is rooted up to the depth of k, where the leaf nodes are all possible k-mers in the dataset and each internal node with  <dig> branches represent the prefix of the leaf node k-mer. at each depth d, a depth-first search in this tree results in identifying valid instances of the d-length prefix of k-mers that are within m mismatches. on reaching a leaf node corresponding to a particular k-mer α, this method obtains pointers to all the instances of k-mers that are up to m mismatches from α. svm’s trained with these mismatch kernels resulted in fast prediction of protein sequences i.e. in linear time and maintains good performance when training datasets are limited. in a subcellular localization study, a 7-gram model in conjunction with bayesian classifier resulted in higher accuracy of prediction on the proteome sequences obtained from eight eukaryotic organisms  <cit> . similar accuracy values are also observed on datasets from bacterial species using 6- and 8-grams  <cit> .

previously, we have developed a bayesian supervised model for classifying protein sequence data using an n-gram approach  <cit> , which can classify a set of sequences but cannot determine class-specific n-grams. in this study, we develop a novel scoring function that can effectively identify the discriminative class-specific n-grams from a given set of protein sequence classes, and validate our results using several datasets representing distinct biological functions. this method is compared against an existing method wordspy <cit> , mismatch string kernel method presented in  <cit>  and also applied against a new dataset to retrieve known prosite patterns. given the generic nature of this method, we believe that it can be used on a variety of protein sequence datasets to retrieve class-specific motifs.

RESULTS
scoring function
the scoring function proposed in this study for determining class-specific or discriminatory n-grams is based on an n-gram model. the scoring function is described at length in the methods section. in summary, it includes the following steps. first, n-grams of varying size are extracted from each class of protein sequences. second, similar n-grams are identified using an amino acid substitution matrix  and their frequency counts are summed to obtain enriched counts. third, a dampening factor is used to normalize the weights of n-grams from different unbalanced classes. finally, a discriminative ratio  is calculated for each n-gram to identify the class that contains this n-gram at least t times higher than the average of the second and third highest classes. here, t represents a selection threshold at which dr is considered significant to be class-specific.

we applied our scoring function against the subcellular localization  dataset, which contains full-length protein sequences from  <dig> distinct subcellular locations. these data are experimentally-determined to exist in those locations  and hence are used for training and testing our method. for validation, we report standard performance measures over each class, including sensitivity, specificity and auc  using the roc curves. . in addition to the standard validation tests, we also tested our results against experimentally known scl signals to determine the effectiveness of the scoring function in terms of identifying class-specific motifs. this method is also applied against a completely different dataset to confirm if the method is able to recover class-specific patterns or not. for this purpose we used  <dig> different enzyme sequence families that have known prosite patterns.

sl- subcellular localization; pfam- protein family database.

effect of amino acid substitutions on discriminatory n-grams
we used the scoring function on the scl dataset to identify the entire set of discriminatory 4- to 8-grams. any two n-grams of the same size that differ by a single amino acid at a single position are combined to form a new n-gram. this is done in accordance with the functionally equivalent amino acid substitutions based on the blosum  <dig> amino acid substitution matrix . this technique yielded a significant increase in the number of n-grams available for analysis compared to the no substitution control. figure  <dig> shows that at a selection threshold of  <dig> , the scoring function is able to harvest 5- to 8- grams at a rate of about  <dig>  to  <dig>  times  more than without substitution. the increase in the number of n-grams harvested due to substitution can be attributed to the summation effect of the frequencies of similar n-grams. in contrast to the individual n-gram frequencies, the sum of the similar n-gram frequencies is sufficient to surpass the selection threshold, which makes the entire group of similar n-grams discriminant for a class.

evaluation of the performance of the method
we demonstrate the performance of the scoring function using specificity and sensitivity by mapping the discriminative n-grams back on to a derived dataset containing only the domain regions of the scl dataset . a steady increase both in the sensitivity and specificity was observed with the increase in the selection threshold from  <dig> to  <dig> . even at a lower selection threshold of  <dig>  the specificity values across all the classes were found to be above  <dig> % and at the selection threshold of  <dig>  the specificity attained a steady state i.e., there was no significant change in the specificity values up to three decimal places. in contrast to specificity; at the selection threshold of  <dig> the sensitivity varied across classes from 73% to  <dig> %. we observed a small drop in the sensitivity across eight of the ten classes at the selection threshold of  <dig> due to drastic reduction in the number of n-grams harvested at this selection threshold. similar to specificity, the sensitivity also increased with increasing selection threshold. we notice that this behavior is interesting given the fact that sensitivity and specificity enhancements often have an inverse relationship. we reason that in this case, the size of n-gram space at each threshold is dynamic as against the conventional fixed size data space used for determining specificity and sensitivity. at higher score thresholds, we have less false negatives leading to higher sensitivity.

cyt – cytoplasm; csk – cytoskeleton; end – endoplasmic reticulum; exc – extracellular/secreted; gol – golgi; lys – lysosome; mit – mitochondria; nuc – nuclear; pla – plasma membrane; pox – perixosome.

we computed the false positive and true positive rates to plot the roc curves . the roc curves for our data points are all concentrated on the top left diagonal of the plot where the most number of true positives with the least number of false positives can be observed. we also determined the area under the curve  using the area under the trapezoidal method to get a quantitative measure of the roc curve for each location. locations with the highest auc have the best performance. the smaller classes including pox, gol and lys have the best aucs  indicating that the scoring function is efficient in identifying discriminatory n-grams pertaining to even smaller classes. for big to medium sized classes the auc were found to be well above  <dig>  and ranged from  <dig>   to  <dig>   indicating superior performance of the scoring function in identifying the discriminatory n-grams than any random guessing function.

comparison against wordspy method
we compared the performance of our method with and without amino acid substitutions against a well-known discriminatory motif finder, wordspy <cit> . wordspy was recommended as one of the best methods for discriminatory motif finding  <cit> . in this experiment, our goal is two-fold; first to evaluate the effect of amino acid substitutions over no substitution, and second to evaluate the performance of our method relative to wordspy. in this section, we will denote our main scoring function that implemented the amino acid substitutions as sf <dig>  and the scoring function without substitutions as sf <dig> for comparison.

the outputs of current method and the wordspy are not directly comparable because wordspy's output is z-score based while our method outputs based on the dr ratio. hence we used two data series for each method at higher stringency levels. in addition, we were able to conduct this experiment only for the classes with smaller datasets due to a limitation with the wordspy in handling larger datasets . we tested four smaller classes that include csk, gol, lys and pox from the scl dataset. using sf <dig> and sf <dig> independently, we obtained 4- to 8-grams at selection thresholds of  <dig> and  <dig>  and compared those with 4- to 6-grams  obtained from the wordspy at the z-score thresholds of  <dig> and  <dig>  a z-score threshold of  <dig> was suggested as the minimum default for a word in wordspy  <cit> . we have tested z-score thresholds between 3– <dig> and found that the wordspy’s performance stayed constant beyond the threshold of  <dig>  hence, we plotted the roc curves only for thresholds  <dig> and  <dig>  outputs of the above three methods were independently mapped to the domain regions of corresponding class protein sequences to calculate true and false positive rates. using these data, roc curves were plotted and the auc’s were determined to get a quantitative measure of the differences . we observed a superior performance of sf <dig> over wordspy and sf <dig> across all the four classes as shown by the auc metric. sf <dig> attained an auc from  <dig>  to  <dig> , while auc’s for wordspy range from  <dig>  to  <dig> . on the other hand, auc’s for sf <dig> ranged widely from  <dig>  to  <dig> . for csk and gol, all the three methods yielded a good auc but for lys and pox, sf <dig> and wordspy’s performance was superior to sf <dig>  overall, our substitution-based method, sf <dig>  performed better than the wordspy and sf <dig>  we want to emphasize that the difference in the performance between the scoring functions with  and without  amino acid substitutions is stark. this result also supports the need for using amino acid substitutions in this scoring function to efficiently recover discriminant n-grams.

comparison against mismatch string kernel method
the string kernels or mismatch kernels used by leslie et al. <cit>  for training the svm’s are very much similar to the n-grams harvested by our sf <dig>  termed as k-mer or more precisely  i.e., k-mer with m  mismatches. these mismatch kernels help in capturing biological information about sequence similarity. the mismatch kernels work on the basis that any two protein sequences are similar if they share a large number of similar, and high positive weight mismatch kernels between them, under the assumption that mismatch kernels with high positive weights correspond to the conserved region in the protein families. compared to the aforementioned mismatch kernels, the n-grams obtained from sf <dig> can be visualized as signals that can precisely discriminate protein sequences between classes.

though n-grams and mismatch kernels are obtained by employing different methods, both of them essentially captures biological information from the protein sequences. leslie et al. <cit>  have observed that their top  <dig> high-scoring k-mers obtained from  mismatch kernel were within the nine-letter region of the alignment of five multiple alignment sequences in the scop dataset. for family-level homology detection, superfamily homology and for fold recognition in the scop dataset, they have showed that their discriminative svm trained with  mismatch kernel performed better than the blast and smith-waterman  <cit> . on the other hand, our n-grams were promising to be class-specific signals as will be discussed more in the validation section below. leslie et al. have indicated that their method suffers exponential time complexity for higher value of m <cit> . therefore they have considered m= <dig> for generating mismatch kernels which is similar to our substitution method i.e., combining n-grams that are different from each other at any single position. again both these discriminant methods have a low false positive rate.

computational complexity of the method
our scoring function performs two major steps. it initially generates all the n-grams from protein sequences across different classes and creates a frequency profile for each n-gram. secondly, it combines similar n-grams using the blosum <dig> substitution matrix. for generating the n-grams and for creating the frequency profile from m number of sequences with l as the length of the longest sequence, across each class ct the running time complexity can be gives as o where n is the length of the n-grams and c is the total number of classes in the dataset. for implementing substitution using the blosum <dig> matrix our method breaks any given n-gram in to its constituent amino-acids and looks for each amino-acid substitution in a way that it is a valid substitution i.e. the entry in the blosum <dig> matrix for that pair of amino-acid is greater than or equal to the blosum <dig> threshold, and the new n-gram formed due to substitution of any single position change of amino-acid is present in the protein sequences of the dataset. finally a new n-gram is created from the combination of all n-grams that differ from the original n-gram at any single position. in the worst case i.e. none of the n-grams are eligible for substitution, for n number of n-grams our method will have to consider all n n-grams and all n position. thus the run time complexity for implementing substitution can be given as o) or o where o is the time required for searching the combining n-grams stored in a hash map. therefore, the effective run time complexity of the method is o. for searching a substring or gram of length n in a protein sequence of length l our perl-based scripts are implemented with run time complexity of o.

validation of the discriminatory n-grams
since discriminative n-grams are class-specific and striking features of a class, the scoring function should be able to identify these n-grams. we have validated the discriminative n-grams identified by our method against known scl signals. this is accomplished by first generating the entire set of discriminant 4- to 8-grams from the protein sequences in the datasets, removing the n-grams that are sub-strings of other higher order n-grams, merging contiguous n-grams to obtain higher order n-grams that correspond to sequence motifs, and then looking for the known patterns in these motifs.

first, we tested our class-specific discriminatory n-grams against the nuclear localization signal database . the nlsdb is a comprehensive database containing information on nuclear localization signals , which are short stretches of residues that mediate transport of nuclear proteins into the nucleus  <cit> . we obtained discriminant 4- to 8-grams from each of the ten classes at a selection threshold of  <dig>  and performed two pruning steps namely removing the substrings and merging contiguous n-grams. when a pattern search was performed, our nuclear discriminant patterns matched with  <dig> out of  <dig> motifs from the nlsdb , which is  <dig> %. when the same search was performed using non-nuclear discriminant motifs, we could find only  <dig> nls pattern matches  in plasma membrane , and less than  <dig> % of those in the other eight classes. this observation supports the fact that the scoring function is able to identify a rich set of class-specific functionally important motifs. the list of all the  <dig> nlsdb patterns is provided in the additional data file . the nlsdb patterns are represented using the ‘regex’ language in perl.

since most of the extracellular  protein sequences are known to have signal peptides at the n-terminal region, we wanted to see if the scoring function is able to identify discriminatory n-grams from the n-terminal region of exc protein sequences. we excised the first  <dig> amino-acid sequences of  <dig> exc proteins that were known to contain signal peptides at the n-terminal region  <cit> . by mapping the discriminative 4- to 8-grams of exc,  we found that  <dig> % of the  <dig> exc sequences had at least one discriminative 4- to 8-gram mapping to the n-terminal region. a similar experiment using discriminatory n-grams of other locations against their matched locations showed  <dig> % and  <dig> % for pla and mit locations, respectively, and very insignificant mapping for other locations. it is known that a large number of the plasma membrane  and mitochondrial  proteins harbor their targeting signals at their n-terminus  <cit> . the above results corroborate that those locations harboring targeting signals at the n-terminus are aptly identified by our method.

in addition to the subcellular targeting signals, we were also curious to check if the scoring function is able to identify other known functional motifs present on the protein sequences. since our scl dataset is classified based on the spatial distribution of proteins in the cell , we expect to see a wide distribution of functionally important sequence motifs across many locations. using the elm  database containing a rich set of non-globular functional linear motifs, we were able to validate a variety of patterns including nuclear localization signals , nuclear export signals , post-translational modification signals , cleavage patterns  and ligand binding sites  at a selection threshold of  <dig>  all the six nuclear  signaling patterns listed in additional file 1: table s <dig>  were recovered in the motifs obtained from nuclear location. across the motifs  of all the classes, we searched for the presence of  <dig> mod patterns  and identified 73% to 100% of them in different locations . similarly, we observed 86% to 100% of the clv patterns  in all but the lys location, which showed only  <dig> % of the clv patterns. we also found the lig patterns ranging from 55% to 97% in all but lys location that has only 49% . on an average, exc and pla motifs had all the three types  of elm patterns ranging from 97% to  <dig> % . it is possible that some of the smaller locations owing to their proteome size may not contain the entire cadre of proteins containing the above signals, which explains why the larger locations like exc and pla have most of the signals while the smaller locations like lys have only a limited number of them. these observations strongly support our claim that the scoring function is able to identify both class-specific as well as functionally-significant motifs.

application of the method to recover prosite patterns of enzyme families
in this experiment our goal is to apply the scoring function against a different dataset and recover known patterns from the discriminatory n-grams. we have selected a dataset containing the prosite domain regions of  <dig> enzyme families, where each family has a defined consensus prosite pattern . using the scoring function, we generated discriminative 4- to 8-grams from the protein sequences in the prosite dataset at varying selection thresholds from  <dig> to  <dig>  the n-grams that were substrings of longer n-grams are removed and the resulting set of discriminant n-grams were mapped to the original prosite domain sequences. after mapping the discriminant n-grams, the amino acid characters in the unmapped sequence regions are flipped to ‘x’ as shown in figure 4; thus allowing only the discriminatory regions to exist in the sequences. such masked sequences from each family are used to search against the prosite pattern of corresponding family. we found that the average number of masked sequences containing the matched prosite patterns ranged from 90% to  <dig> % at selection thresholds of  <dig> and  <dig>  respectively . at lower thresholds of 5– <dig>  about 94% of the matches were found followed by a drop in the percentage of matches. note that the average percentage of matches did not fall below 90% even at higher thresholds of  <dig> and  <dig> indicating that these highly conserved class-specific patterns are efficiently recovered by the scoring function even at higher thresholds. these results also demonstrate that this is a generic scoring function and hence can be used for classification and functional annotation of a variety of protein sequence classes.

discussion
we refer to the terms class and family in an interchangeable fashion because in the context of this paper, all families are classes but all classes are not families. for classification purpose, a class includes a set of identically labeled instances while a family includes a set of sequences with similar function. the datasets used in this study represent both classes and families. the scl data, which represents classes, is based on the physical location of sorted proteins in the cell. hence, these classes represent a heterogeneous mixture of proteins with different functions. in contrast, the prosite datasets are made of families, where each family represents a specific function. hence n-grams from the scl dataset are expected to be very diverse while those from the prosite are more homogeneous. our results show that irrespective of these differences, the scoring function is able to discriminate between classes/families, which is anticipated to be more difficult with the scl dataset.

the idea behind amino acid substitutions is to accommodate for changes in the amino acids by point mutations  <cit> . we considered only one amino acid change between a pair of n-grams when combining similar n-grams because in the length range of 4- to 8-grams, the chances of having more than one positively selected point mutation are very low. we used the amino acid substitution scores from the widely used substitution matrix, blosum <dig>  <cit> , which is adopted by the popular blast program as its default matrix  <cit> . implementation of the amino acid substitution matrices to identify similar n-grams has considerably expanded the search space for exhaustive comparison of protein sequences thus enhancing the capability of the scoring function in detecting discriminant motifs .

the scoring function can generate n-grams of different sizes, but in this study we are focusing only on 4- to 8-grams. the reasons being; the search space of the distinct unitary, di- and tri-peptides is too small to explore the sequence landscape, while on the other end, the higher-order n-grams become less frequent, hence are too long to adequately explore the search space. a previous study showed that even with 4-grams most of the selective motifs in protein sequences are identifiable  <cit> . in our previous studies, we have optimized the n-gram length for similar datasets between 5– <dig> and we extended one order on either side in this study  <cit> . on the higher order, we were limited to generating only up to 8-grams because the scoring function suffered an exponential time complexity for generating n-grams and determining discriminatory n-grams beyond n= <dig>  despite this, we generated higher order discriminatory n-grams  by combining different lower-order n-grams  if they overlap or are contiguous in the protein sequences of corresponding class.

the scoring function reports an n-gram as discriminatory if that n-gram is highly frequent in protein sequences of one class and is less frequent or absent in other classes. therefore, it is ideal to have a balanced distribution of n-grams in the protein sequences of different classes. however, such distributions are difficult to achieve in biological datasets that are typically unbalanced and incomplete. both the scl and pfam datasets used in this study are unbalanced in size across classes. to reduce the noise arising from this unbalanced distribution, we introduced a dampening factor into the scoring function. multiplying the frequency count of each n-gram with this dampening factor results in giving a higher weightage to an n-gram that is observed in a single or fewer classes and a lower weightage to a n-gram that is distributed over many classes. we did not prefer to take into account the sequence count in each class  for normalizing the frequency count of an n-gram because, even in the balanced datasets, the natural frequency distribution of n-grams is not the same.

based on the performance results , multipronged evaluation against known motifs and prosite patterns  and comparison against another popular method, wordspy , we conclude that our scoring function is more robust and can precisely discriminate between classes. it does not put any constraints on number of classes it can handle at a time for harvesting n-grams. in this work, we have considered the scl dataset with ten classes and the prosite dataset with fifty families. secondly, the scoring function performs simple computation i.e. finding the frequency of each n-gram across all the classes, using a dampening factor to normalize its frequency across all classes. finally, the scoring function has demonstrated better utilization of memory and reasonable execution time that increases exponentially with the increase of the n-gram size. in contrast, wordspy performs sophisticated statistical calculations and engages in dictionary creation to discriminate motifs against background words. our experience suggests that wordspy has limitations with the size of datasets as well as with the size of the n-grams. hence, to make a head-to-head comparison of the performance of our scoring function against wordspy, we had to limit to using only four small classes  from the scl dataset, which in-turn suggests that wordspy cannot be effectively exploited on larger datasets. in terms of the motif size, with wordspy we could only work with 4- to 6-gram sizes and the program crashed on our  <dig> gb  machine due to memory explosion issues.

the method proposed here describes an alignment-free approach to identify class-specific regions in protein sequences. these class-specific regions are generally referred to as motifs, only if they are found in all the sequences of a particular family. we would like to point out that discovering the motifs is not the sole purpose but a byproduct of this work. nevertheless, for validation purpose we used the known targeting signals from the subcellular locations or the patterns from the prosite database. the class-specific regions identified in this study include known motifs/signals as well as other contiguous regions of protein sequences that are highly enriched in a particular class or family of proteins. we hypothesize that the latter may represent potential unknown signals or otherwise functionally important class-specific regions of proteins. the functional importance of these highly enriched class-specific regions is worth investigating by experimental methods.

CONCLUSIONS
here, we have developed a scoring function to identify class-specific or discriminative n-grams for functional annotation of protein sequences. the scoring function implements blosum <dig> based amino-acid substitutions and also normalizes the frequencies of the n-grams using a dampening factor to avoid noise due to their non-uniform distribution across different classes. at a selection threshold of  <dig>  the scoring function identified a rich set of n-grams resulting in high specificity and sensitivity values across all the  <dig> subcellular locations. the scoring function also demonstrated a superior performance when compared against its variant  and against a well known discriminative motif-finder, wordspy. validation against known subcellular localization signals and functionally-important motifs from the elm database showed that the scoring function is able to identify most of those signals/motifs accurately. application of the scoring function against a different dataset containing  <dig> enzyme families with known prosite patterns resulted in the recovery of 90% of the sequences with correct patterns. these results clearly demonstrate that the scoring function is capable of discriminating the class-specific regions of protein sequence classes and is generic enough to be applied against a variety of sequence classes.

