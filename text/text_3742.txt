BACKGROUND
the number of protein sequences collected in public databases such as uniprot  <cit>  has been growing exponentially over the last decade, and will continue to grow even faster with the advance of sequencing technologies. currently, uniprot listed more than forty million protein sequence entries. in fact, the total number of known protein sequences is substantially larger, since individual uniprot entries typically document multiple sequence variants deriving either from single-nucleotide polymorphisms  or from splicing.

proteins are involved in nearly every biological process and can be viewed as the molecular machinery of life. to fully understand the biological functions of a protein, however, life scientists need to know much more than just its amino acid sequence -- one very rich source of additional knowledge are the three-dimensional  structures  adopted by a protein across a range of physiologically relevant conditions. where available, such structures can give detailed insight into the molecular mechanisms underlying a protein's function. unfortunately, the experimental determination of protein structures lags significantly behind sequencing; currently, the protein data bank   <cit>  holds slightly more than  <dig>   <dig> structures, thus comprising less than 1% of the available sequences in uniprot. due to this paucity of structural information, many of the widely-used genome analysis pipelines overlook protein structures.

however, for many of the > 99% of proteins that lack any experimentally determined structures, some structure information can usually be inferred via homology modelling or comparative modelling methods  <cit> . these methods take advantage of the well-established observation that proteins with similar sequences tend to have similar structure  <cit> . for the remaining proteins with no detectable sequence similarity to proteins of known structure, methods have been developed that attempt to predict structure ab initio from amino acid sequence -- sometimes considered as the "holy grail" in bioinformatics  <cit> . when using structural models derived from these methods, scientists need to be very aware that the models contain regions with variable levels of uncertainty, and will often contain considerable inaccuracies, especially ab initio models. the quality of a model depends on details of the often very complex method used to derive it -- it can be difficult to communicate this information clearly to end-users unfamiliar with modelling methodologies, with the very real danger that incorrect conclusions may be drawn by inexpert users.

avoiding such misinterpretations was a key motivation behind the development of a related approach taken by the srs 3d system  <cit> , which was recently superseded by the aquaria resource  <cit>  developed in our laboratory. instead of calculating model structures, the aquaria approach calculates sequence alignments between all known protein sequences and all known protein structures  <cit>  , and displays experimentally-determined structures overlaid with abstract data to indicate the quality of the sequence match  <cit> . this approach also makes it possible to visualise any sequence-based feature or annotation such as snps or post-translational modifications  in their spatial context, which often helps in understanding of the effects of such features on a protein's function.

there are many approaches to query for and visualise protein molecular structures, many accessible from the pdb  <cit> ; only some methods provide access to the amino acid sequence related to each protein structure, however most provide either no interactive connection between sequences and structures or require multiple steps to switch between both representations, impeding the process required for the user to construct mental models of the problem at hand. only a few tools provide linked 3d structure and sequence visualisations , however they do not scale well for the visualisation of large numbers of sequences, as amino acid sequences are rendered using one-letter codes exclusively and thus provide only little or no aggregation with respect to sequence length and alignment size. aquaria is unique in the degree to which its user interface is organised primarily based on sequence, not structure; it is also unique in providing a degree of accessibility and scalability that makes it feasible for users to visually analyse a large number of protein sequences and structures.

the protein model portal  <cit>  systematically computes structural models from protein sequences using various comparative modelling algorithms. in contrast to aquaria, each model structure presented in pmp can be derived from multiple experimental structures, is not verified experimentally, and contains uncertainties and sometimes inaccuracies that may not be easily understood by the end user. the result of a query is presented as a list of matching models and a corresponding sequence alignment, but in order to see a structure, multiple links have to be clicked by the user. the pdb provides experimentally determined structures and offers a rich set of information for each query, including an interactive structure viewer, but without interaction to the query sequence and associated features. finally, there is a wealth of websites and applications both open-source and commercial that provide visualisation for sequence alignment and analysis, but without linking to structures  <cit> .

although the models presented in aquaria are not as refined as those derived from modelling  <cit> , the uncertainties and inaccuracies can be much more easily understood by molecular biologists and biochemists who are not expert in structures or homology modelling -- this is aligned with our goal in creating aquaria, which was to make structural informational more accessible to a much broader community. aquaria has been quite successful already: in the first three months after it was launched , the resource has attracted more than  <dig>  users, who spent an average of  <dig>  minutes each on the site.

while the aquaria resource and the details of the underlying database are described in detail elsewhere  <cit> , this paper focuses on the design decisions that were made for its visual interface. in particular, we present  a problem domain characterisation and overview of tasks biologists frequently need to conduct in order gain insight into protein structures, a set of  design decisions made for a visual query interface to support these tasks, and  two case studies demonstrating the use of the system.

methods
the development of the aquaria user interface was an iterative, user-centred design process, based upon understanding of users, tasks, and context. visual mock-ups were created in adobe illustrator and adobe photoshop for each design phase and for each state of interactive user interfaces. colours were soft-proofed in photoshop for the two most common types of colour blindness, protanopia  and deuteranopia . users of different levels of expertise, skills, and experience were involved throughout design and development, and the design was driven and defined by user-centred evaluation. here, we describe the requirements and design decisions as a result of this process.

requirements analysis
in this section, we provide a requirements analysis for designing a visual interface to the database underlying aquaria. this includes a characterisation of the problem domain and a list of common questions biologists seek to answer in order to gain insight from protein structures.

structural biologists can spend months and years working on a single structure, and hence are often very knowledgable about structures for a relatively small set of proteins; in contrast, most other biologists and molecular biologists require much less frequent access to structural data, and, when they do view structures, will usually ask less specialised questions. hence, aquaria is targeted mainly at life scientists who do not have expert knowledge about the structural biology of a particular protein. these target users are typically interested in first gaining an initial overview of which related structures are available for a given protein, then selecting which structures are most relevant to the biological phenomena they are most interested in understanding.

to understand more precisely which key questions biologists in this situation will need to address, we conducted detailed discussions with two structural biologists, a cell biologist, a chemist, and two bioinformaticians - they showed us how they currently answer these with existing systems, and provided us with questions they are frequently facing . this list of questions was further validated and refined based on informal discussions with a large number of biologists, following numerous seminars and presentations over a four-year period in which the questions were presented.

while we found that most of these questions can be addressed using a combination of the existing systems and public databases described in the previous section, doing so can be difficult or even impossible due to a lack of integration of the required resources. one important issue we found in using the existing tools to address the questions listed in table  <dig> is that a user is forced into many context switches, as information about structures, sequences, and features needs to be gathered from different sources throughout the web. this often includes the translation and verification of identifiers from one database to another, e.g. to retrieve an interactive view of a structure given a list of entries in the protein model portal. switching to a spatial representation of a sequence feature now typically requires the user to mentally project these features onto the currently active 3d representation.

design decisions
in this section, we describe the design decisions made for the aquaria user interface to help biologists answer the questions listed in table  <dig> 

since the primary design goal was to create an accessible and easy-to-use interface to protein structures for a wide range of users, the first design decision we made was to build our tool as a web-based resource, for two reasons: first, to facilitate easy access to the databases which contain related information about protein structure and features , and second, to make the tool broadly and easily accessible via a web-browser.

our overall approach was to adhere to the visual information seeking mantra  <cit>  by providing overviews that scale with the number of results produced by the system as well as details on demand. this is achieved by applying hierarchical aggregation techniques for sequence information and focus+context techniques for 3d structural views.

the user interface of aquaria is divided into multiple panels, each of which is conveying different information about the user query . first, we briefly describe the overall layout and purpose of the panels, followed by a brief section detailing the contents and purpose of each panel with regards to the questions in table  <dig>  finally, we describe some of the design decisions that affect multiple panels.

panel layout
the search panel  comprises of two fields: one for the protein of interest, the other for organism name. to distinguish the protein of interest from other protein sequences and structures, we will refer to the protein that was queried for as the specified protein for the remainder of this article. the search panel is located in the top left because searching for the specified protein is the first operation required by the user.

as protein structures play a key role in answering the questions listed in table  <dig>  we decided to put the 3d structure panel at the centre of the user interface . at this position, the attention of a user is guided to the most similar of all available matching structures, which is selected by default after entering a query and enables a very quick initial assessment of how the specified protein's structure might look like.

below the 3d structure panel in the centre is a panel with two tabs: matching structures and features . this panel is located at the bottom of the page to allow for vertical scrolling through results, as for some proteins, there may be thousands of matching structures, and hundreds of annotated features.

below the search panel resides the information panel about the query protein , taken from information in uniprot. since text for certain details is often very long, it is abbreviated to three lines by default, but easy to expand on demand.

the information panel on the right shows facts about the structure , which are derived from the pdb.

search panel
both the protein and organism search fields support autocomplete to give users instant feedback about the contents of aquaria's database. as protein sequences  can be referred to via the sequence itself, the corresponding gene, various identifiers from different databases, or the actual pdb id, the query may contain any of these terms. this frees our users from the time-consuming and error-prone task of translating identifiers between these databases. the query results are grouped by source title within the autocomplete dropdown to avoid confusion between similar looking identifiers from different sources.

3d structure panel
the structure panel used in aquaria evolved from the one that was developed for srs3d and includes an interactive 3d viewer for molecules with support for the most common rendering modes as well as a sequence view showing the sequence of the current structure. here we describe some of the improvements we made to adapt this panel to aquaria.

most noticeable is the choice of grey as background colour: grey reduces contrast to avoid eye strain, and provides best visibility for all residues, since it allows for highlights and alignment gaps, rendered in white, and non-conserved residues, rendered in black, to stand out. for printing and export of images, we added optional white or black backgrounds.

the relationship between the sequence view and the structure view has potential for confusion, since the sequence view only shows a single protein chain, while a single pdb structure may be comprised of multiple similar or different protein sequence chains. to alleviate this discrepancy, we implemented 'autofocus': the aquaria 3d viewer makes the other non-related chains in the pdb structure semi-transparent, while the selected chain is completely opaque. this supports the user in answering question  <dig>  as for large assemblies , fully opaque structures would hinder the view on the chain associated with the specified protein. 'autofocus' can be disabled via the menu bar at the top of the 3d view.

if the user selects one of the semi-transparent residues in the other chains, then the chain of the selected residue will become opaque and the centre of rotation, as it is now the selected chain, and the pre-existing selected chain is made transparent. in order to allow the user to explore the binding partners of a molecule , the specified protein will be replaced by the sequence of the newly selected chain and all other panels will be updated accordingly.

the srs3d viewer supported a number of feature annotations that would be displayed below the 3d model as selectable rows, and the features would be mapped to the 3d object when selected by the user. however, nowadays annotations for a protein may number in the thousands, which would not scale well when displayed within the view frame. aquaria limits the number of features that can be loaded into the view to one and provides a separate interface for navigating and selecting features from a list to be sent to the view.

matching structures panel
questions  <dig> to  <dig> in table  <dig> seek answers to the relation of structures that are available for the specified protein. to accomodate for the associated tasks of visually assessing the range  and quality  of structural matches onto the specified sequence, we decided to use a design that resembles an alignment view of structures on the sequence of interest .

however, structural matches as reported by the aquaria database range from several dozen to thousands of results for a specified protein. while the position of the matching structures panel at the bottom of the layout provides the option to expand the panel to fit any amount of content, having to scroll too much would be an obvious impairment of the workflow. hence, we used aggregation on two levels to get a good trade-off between the overview required for questions  <dig> to  <dig> and the details required to answer questions  <dig> and 8:

at the sequence level, functional elements occupy one or more positions, defined by start- and endpoints. search results are aggregated at the first level by position in the alignment. within each group, sequences are ordered by identity relative to the query sequence, whereas the visual representative is the top-ranked structure within each group. next to the sequence image, which shows the secondary structure and indicates the degree of similarity with the query sequence, we placed a numeric label stating the size of the group. to the right side of the panel, a thumbnail of the structure image from pdb provides useful information for those familiar with proteins. this allows one to visually assess the quantity, quality, and position of the best structural matches for the specified protein.

at the next level of aggregation, sequences are grouped by molecular configuration : conformation , symmetry , and binding partners the structure includes. within this grouping, structures are ordered by identity and crystallographic resolution, with nmr structures last.

to navigate inside the group, a click on the numeric label opens a collapsible tree structure, showing the next level of grouping. for large groups, this poses the problem how to manage the display of potentially thousands of nodes. we employed a paging-based strategy:

the tree is drawn, centred vertically on the first-level group, limiting the number of nodes to what can comfortably fit in the available space. we use pagination to accomodate for larger sets of nodes.

to avoid spacing problems arising from the position of nodes expanded inside the tree, all nodes in the level undergoing selection are collapsed and the chosen node moves to the centre, while the next level of the tree is expanded. this results in a straight line of parent nodes, which can also be navigated in reverse: when clicked, the child nodes collapse and the nodes on the parent level are made accessible again.

on the second level of aggregation, again, each node has a numeric label indicating how many structures it contains, which acts as the trigger to show the next level of the tree. this third level is where the user can select a structure to load into the 3d view by clicking on the thumbnail image.

features panel
sequence-based features or annotations are a rich source of information available on the web. these features, however, can not be easily mapped onto a spatial context, as they naturally occur in proteins. questions  <dig> to  <dig> are about visualising features on one of the matching structures.

the features panel  shows annotated features collated from a variety of resources, thus making it easy for the user to access most publicly available information without leaving the aquaria user interface. we group features of the same kind from each resource into one 'track', which results in a compact display of features for most proteins.

one phenomenon of protein features is that there can be multiple annotations for the same region of a protein sequence. for single-residue features, such as mutations, one option is to display feature density, which uses less space by displaying all features of one category in one track. for multi-residue features, overlaps could be made visible by employing transparency. both approaches, however, create ambiguity when trying to use them in an interactive context: when hovering over an area with overlapping features, meta-information for many instances would need to be displayed at the same time. this kind of information includes additional information about a single feature occurring at a particular position of the specified sequence.

instead, we chose to draw overlapping features in separate lanes, which give users access to metadata for each feature. for feature types with a large number of annotations, as highly-studied proteins often have, this method produces a histogram-like display with the most frequently varied residues shown in the lower lanes .

initially, all annotations are displayed in uniform colour to give the user a clear overview of the distribution of features. when hovering over a feature lane, colours that set apart different features become visible; when hovering over any individual feature, metadata about its nature, position, and a link to the resource of origin are displayed.

when clicked, features from the chosen lane are loaded into the 3d view, colouring the currently displayed structure according to their position. in addition, a feature track is created below the sequence view in the 3d structures panel. in the features panel, the active feature lane is marked with a lighter background and remains coloured until it is clicked again, which unloads the feature from the 3d view and removes the feature track from the sequence view.

sequence and structure representation
sequences are displayed using the same visual encoding in several locations in the user interface, but at different scales: at the bottom of the 3d view, a sequence track at the single-residue scale is shown, with the view centred on the residues that are currently selected in the structure. each residue contains a one-letter code to indicate amino acid types, rendered using a fixed-width typeface. below this detail view we provide an overview track with a sliding window that indicates the overall position of the highlighted sequence. in this display, residue width is scaled down to show the alignment position of the displayed structure against the specified protein sequence, which is drawn as a thin, dark line spanning the entire width of the panel. the same sequence is also displayed in the matching structures panel, along with that of other matching structures. again, residue width is scaled to show the alignment position of each structure against the full length of the query protein sequence, represented by the ruler at the top of the panel. to visually connect these sequence representations at different scales, we usa a white background rendering for the selected parts of a sequence in the 3d view and the matching structures panel .

proteins can be organised into secondary structure elements: strand, helix, coil, and turn. the 'cartoon' rendering style is based on these elements and thus provides visual cues or 'landmarks' which supports orientation. we reinforce this by employing a consistent colouring scheme for secondary structure throughout the aquaria user interface: strands are yellow, helices blue, and coils green. to represent these landmarks in a sequence context we decided to use both colour and shape, a strategy which provides safety through redundancy: solely employing height variation and shape to represent secondary structure elements may be ineffective when these shapes are compressed to fit the screen width, which often happens for large proteins. even in situations where single residues are scaled down to one pixel or less, regions with differences are recognisable due to changes in colour.

for the shapes to represent secondary structure in a sequence context, the goal was to reduce cognitive load by finding a visual vocabulary that was closely related to the default ribbon-style rendering used in the 3d view. here, helix elements are rendered as corkscrew-like ribbons, strands are flat ribbons with arrowheads, and coils are thin, spaghetti-like shapes following an irregular path.

other requirements were dictated by the fact that we wanted to display sequences aligned to each other: residues all needed to be rendered at the same width. this required a modular system, where edges of the various elements had to be parallel in order to construct consecutive regions of secondary structure elements. lastly, the elements needed to be of sufficient height to accommodate uppercase letters, as is the case for the sequence detail view.

unlike genomic sequence, the basic unit for protein sequence is an amino acid, referred to as "residue". with twenty possible residue types, substitution matrices become very complex; for the purpose of displaying differences resulting from the alignment of two protein sequences, we decided to assign residues to one of four categories with the following attributes:

• identical, displayed in the original colour of the secondary structure for that residue

• conserved , shown diminished in saturation and brightness

• not conserved , shown in dark grey

• insertion, shown in light grey

the resulting display of structures allows users to judge the quality of a structure model intuitively by its chromatic quality: the less saturated and bright the colours in a structure appear, the less similar its sequence is to that of the query protein. this effect is particularly noticeable in the matching structures panel, where structures are ordered by percent identity, with the highest-ranked structures displayed at the top.

however, in order not to rely on colour coding alone, we also display a precise percentage of identity for each structure .

RESULTS
in this section, we present two case studies that demonstrate the effectiveness of aquaria for using structures to learn about protein function.

b-lymphocyte tyrosine kinase 
for this case study, we focused on blk, a tyrosine kinase involved in b-lymphocyte development, differentiation and signaling . to gain information about a protein in aquaria, the first step is typically to query using the protein name, synonym, or primary accession. in this example, the user first needs to confirm that the organism is set to "human", then enters "blk" into the query field. a list of  <dig>   <dig> matching structures is displayed -- a wealth of structural data that can provide insight into the molecular mechanisms occurring in related structures. these structures are clustered by homology into  <dig> groups through finding all sequences of structures that match a particular range of the given protein . this simplified view provides the user with an initial visual assessment of the diversity of experimentally determined structures that are available for the query. for blk, it shows multiple overlapping clusters  that give rise to the assumption that this structure is composed of multiple domains, each matching with a variety of structures in the pdb.

the structure that is displayed initially in the 3d viewer is from the third cluster; while this structure has has a lower sequence identity to blk that structures in the top two clusters , it has a large total number of identical residues, when aligned onto the full-length blk sequence. the width of each cluster shows the length of the alignment, while the color is used to communicate the quality of the top ranked structure in each cluster. clicking on a cluster group loads the best matched protein structure of that cluster into the 3d viewer. when a new structure is loaded, the text on the right -- containing bibliographic information about the structure -- is updated accordingly. the default selected cluster contains  <dig> similar pdb structures based on homology matching for that group. by clicking on any of the clusters, a tree appears showing the respective pdb structures grouped by macromolecular assembly and binding partners into sub-clusters . drilling down to a dimer and selecting one of the entries displays the respective pdb structure in the 3d viewer. as this is a dimer, one of the chains is fully opaque, centred and is the centre of rotation while the other chain is semi-transparent.

the features tab shows  <dig> features for blk protein, including uniprot and interpro domains, binding motifs, post translational modifications, amino acid modifications, single nucleotide polymorphisms , and other experimental information. clicking on the top feature loads the feature track into the 3d viewer highlighting the different domains in the 3d structure .

in summary, the wealth of structural information in the matching structures panel show the power of aquaria in delivering structural insight for blk, even though there are no exact matches in the pdb. the views of the blk structure enhanced by mapping domains and other features proved very insightful, as they allow users to understand which parts of the protein perform the functional roles associated with each domain.

amyloid precursor protein 
for this study, we examined the process used in creating a 3d model representation of the overall structure of amyloid precursor protein , a molecule which is considered important in the development of alzheimer's disease. this model was designed to be used in an animated visualisation which explores the process of alzheimer's disease associated neural plaque formation, and therefore was intended for a general audience. the work was conducted by one of the authors , a biomedical animator trained in medical science.

the elements which were to be visualised included the overall structure of the app protein, its localisation within the cell membrane and the enzymatic degradation of the protein.

an investigation into the structure of app was conducted in order to build a model which was consistent with the up-to-date understanding of the known structure of the protein. aquaria shows that no single structure spanning the entire app protein has yet been resolved , however a range of structures have been determined covering different domains along the protein, thus it is a suitable use case for aquaria.

the modelling process involved using aquaria to assemble the relevant data from the protein data bank , reading a series of reviews into the overall structure and cellular distribution of the app protein and piecing together pdb structures using blender and the embedded python molecular viewer  to create the model and animate it for a final video.

we searched aquaria for related structures by using the keyword "app" and selecting "human" as the organism. aquaria's top match result is uniprot entry p <dig> which was the appropriate result in this case .

in aquaria this identifier currently yields  <dig> structures which span most of the full sequence . most of the regions which have sequences for app have a structure with 100% identity to the search query . the largest structure is present in the e <dig> domain, a coiled coil structure which spans  <dig> residues . this structure contains a dimeric assembly; aquaria helps in interpreting the structure by initially highlighting just one chain , thus simplifying the view. one of the domains  has over  <dig> matching structures in aquaria .

using the features tab for aquaria reveals several features of the protein:

• it is a transmembrane protein as seen in the features view for region "transmembrane", with residues 700- <dig> occupying the membrane .

• the majority of the protein is in the extracellular region  on the n-terminal end .

• mapping the region "polypeptide region" onto structure 2lmp gave insight into the precise location of enzyme activity on app via alpha and gamma secretase, which are known to cleave app . alpha secretase cuts the protein at positions 687- <dig>  there are  <dig> sites for gamma secretase activity, all within a small region of the intermembrane region. beta secretase activity occurs at residues 671- <dig> .

• examining the molecule processing feature lane titled "mature protein region" gave insight into the precise location of enzymatic cleavages that occur within and flanking the intermembrane domain .

from the aquaria interface, by tracking the literature for each structure observed, we found a recent literature review that discussed the current state of knowledge regarding the overall structure and subcellular location of app  <cit> . this gave additional insights into the structure that were not determined from aquaria itself; isoform app <dig> is most prevalent in the nucleus . sequence alignments in the paper demonstrate that evolutionarily conserved regions exist in the protein. the insights gained from aquaria and subsequent literature analyses were then used to construct an integrated 3d model of app in blender ; the model was then used to create an educational animation  <cit> .

the key benefits we found using aquaria for this case study were:

• clarity as to which regions of the protein did and did not have resolved structures

• access to an organised and coherent assembly of all pdb entries relevant to the protein of interest

• clear insight into the subcellular location of app, and into which residues contact interaction partners

• an indication of the integrity and match identity of the available structures

discussion
having evolved over years with a continuous feedback loop between developers and users of both srs3d and the aquaria pre-release, the system gradually improved in many ways. in this paper, we describe the major design decisions that have been made with respect to the visualisations and the user interface to the aquaria database. some of our visual mappings - such as the colour scheme and the representation of secondary structures - have been prototyped and discussed with users prior to being implemented in the system. for the interaction with the 3d view, a user study has been conducted  <cit>  that produced valuable results for the further development of aquaria as well as other systems implementing gesture and voice control for molecular visualisation.

many of the design decisions implemented in aquaria could also be helpful for the visualisation of molecular dynamics. for example, the ability to focus on residues of a particular functional annotation and then inspect their range of motion within the structure could help illuminate their mechanism of action. conversely, it would be useful to observe a particular mode of dynamics and then find the associated residues in the amino acid sequence. the tight integration of sequence and structure in the aquaria user interface makes the required selection processes very easy.

CONCLUSIONS
by employing a consistent visual vocabulary for data integrated from disparate sources, aquaria provides a comprehensive experience for the user that invites exploration with a minimum of cognitive load.

as demonstrated in both case studies, the visual design of the user interface enables users to address the key questions identified in the requirements analysis ; these studies further show how addressing these questions leads to insight into the molecular mechanisms underlying protein function.

for future work, we would like to adapt aquaria for mobile devices by implementing the entire user-interface in javascript. we are exploring the potential of newly available input devices -- such as depth- sensing cameras -- to simplify 3d control of molecular graphics  <cit> . we also aim at developing similar aggregation techniques for features as those suggested for sequences, render multiple protein structures in the 3d viewer and add further information visualisation techniques to aid in the analysis, such as parallel coordinates  <cit>  to enable the analysis of spatially distributed attributes  <cit>  or graphs to explore protein-protein interactions and pathways.

list of abbreviations used
pdb: protein data bank, ngs: next generation sequencing, snp: single-nucleotide polymorphism, ptm: post-translational modification, pmp: protein model portal, app: amyloid precursor protein, 3d: three-dimensional, epmv: embedded python molecular viewer

competing interests
the authors declare that they have no competing interests.

authors' contributions
cs led the interface design with contributions from siod. siod, as, kss and jh conducted the requirements analysis. the manuscript was written by cs, jh, siod, kss and cjh. all figures were prepared by cs with contributions from siod and cjh, who also prepared the case studies. siod and as conceived of the project, and participated in its design and coordination. all authors read and approved the final manuscript.

