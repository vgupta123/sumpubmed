BACKGROUND
pathway data collection for biology
the complete sequencing of the genomes of numerous organisms provides a genetic "parts list" for human and many model organisms  <cit> . however, a blueprint for how these parts are assembled is required to explain how the system works  <cit> . this wiring diagram for a cell consists of multiple biological data types, including metabolic pathways, signal transduction pathways, protein-protein interaction networks, gene regulatory networks and genetic interactions. for example, the galactose utilization pathway which allows yeast to harvest energy from galactose sugar consists of a well-studied series of biochemical reactions responsible for converting galactose into glucose-6-phosphate, and a gene regulatory mechanism for switching the pathway on or off  <cit> . aberrations within specific pathways have been implicated in many human diseases  <cit> . for example, the p <dig> tumor-suppressor pathway has important functions in regulating cell proliferation, and is disrupted in many human cancers  <cit> .

having interaction and pathway data available in computable form enables the construction of in silico models of complex biological processes according to specific hypotheses about how the process works. such hypotheses can then be verified or falsified by experiment and the models further refined  <cit> . in the longer term, it may be possible to study the complete "integrated circuit" of a cell, and create mathematical models for understanding which perturbations within the circuit give rise to cancer  <cit> . computational modeling of pathways may enable the identification and classification of common logic modules within the cell  <cit> , better enable mechanistic based drug development  <cit> , facilitate the rational design of combination therapies  <cit> , and accelerate the speed of clinical trials  <cit> .

central to any of these endeavors is the creation and maintenance of interaction and pathway databases. because of the need to store and organize growing amounts of pathway information and the lack of a common point of organization, the number of interaction databases is growing rapidly, and over  <dig> exist in the year  <dig>  <cit> . unfortunately, as is the case with many biological data resources  <cit> , interaction and pathway databases have unique data models, distinct access methods, different file formats, and subtle semantic differences  <cit> . this diversity of implementation makes it extremely difficult to collect data from multiple sources, and therefore slows down scientific research involving pathways  <cit> .

to make heterogeneous data sources easier to use, several standard xml exchange formats for sharing interaction and pathway data have been developed. the systems biology markup language   <cit>  and cellml  <cit>  represent mathematical models of pathways designed for quantitative simulation of concentration profiles of components over time. the proteomics standards initiative's molecular interaction  format enables exchange of molecular interaction data sets  <cit> . finally, the biological pathway exchange  format enables exchange of biological pathways in general  <cit> .

as more pathway databases make their data available in standard formats, it is easier to aggregate pathway information from multiple sources. a convenient single point of access for pathway information would provide researchers with a more complete and powerful view of biological networks and cellular machinery. database and software systems that work towards this goal include pathway databases with original content, such as those listed in table  <dig> and in pathguide  <cit> ; network analysis software applications that support multiple import formats and local interaction data stores, like piana  <cit> , ondex  <cit>  and cytoscape  <cit>  and biological network data integration systems, similar in scope to sequence integration systems like srs  <cit> , like biozon  <cit> , sigpath  <cit> , biomodels  <cit> , atlas  <cit>  and pkb  <cit> . cpath is part of the latter class, but is the only system that is jointly open source, easy to locally install, contains identifier resolution services, provides web based front end and web service api and includes support for pathway and molecular interaction information available in both the psi-mi and biopax standard database file formats.

interactions:  <dig> 
interactions:  <dig> 
interactions:  <dig> 
interactions:  <dig> 
implementation
technical architecture
cpath is built using a traditional three-tier web architecture. the first tier consists of the open source mysql database  <cit> , and full-text index files generated by the open source lucene index engine, which also handles most query tasks for the web service  <cit> . the second tier consists of a java servlet application, which uses the jakarta struts library  <cit>  for cleanly separating application logic from html/xml presentation. the second tier also uses the xerces java xml parser  <cit> , the open source jdom library  <cit> , and arp: another rdf parser  <cit> . in-memory caching is provided via the open source ehcache tool kit  <cit> , and database pooling is provided by the apache database connection pool   <cit> . real-time logging is provided by apache log4j  <cit> , unit tests are written in junit  <cit> , functional tests are written in anteater  <cit> , and the entire build process is fully automated via ant  <cit>  and cruise control  <cit> . detailed information about the cpath architecture, including graphical diagrams and definitions of the table structure, can be found in the architecture guide pdf on the cpath developer web site  <cit> .

data model
the core cpath data model consists of just three elements: biological entities, links between biological entities, and links to external databases. for example, when storing a psi-mi interaction, such as "p <dig> binds to tp73", cpath splits the psi-mi record into three biological entity records: one for the interaction, one for p <dig> and one for tp <dig>  for each record, cpath stores the complete psi-mi xml content associated with that entity. cpath then stores two internal links, one from the interaction record to p <dig>  and a second from the interaction record to tp <dig>  finally, cpath stores external link records defined in the psi-mi record for each of the biological entities; for example, cpath will store a link from p <dig> to its uniprot identifier, as well as links from p <dig> to any matching gene ontology  terms if those references are present in the psi-mi file. external links are supplemented by any unification links available in the identifier mapping system.

by maintaining a simple data model, and storing xml within a relational database structure, cpath is able to store data in multiple xml formats, including psi-mi and biopax and the cpath table structure need not be updated when these formats change. cpath does not define any new xml formats, but rather adopts the data models of psi-mi and biopax. thus cpath can store any biological information represented by these standard exchange formats, from protein sequence, to experimental description, to thermodynamics information for biochemical reactions. not all information will be displayed via the web interface, but all will be available in the xml returned by the web service api. additional tables within cpath are used to support the three core entity tables. for example, cpath maintains an identity and reference table for mapping between identifiers, an external database table for creating hyperlinks to other biological databases, an organism table for storing basic organism data, an xml cache table for storing pre-computed xml assembly documents to speed loading of commonly accessed pages, and a log table for storing fatal errors in production mode.

RESULTS
overview
using cpath, researchers can import interaction and pathway data from multiple sources, access such data via a standard web interface, and export data to third-party applications via a standards-based web service . biologists, computational biologists, and software developers can utilize cpath for content aggregation, query and analysis . cpath can serve as a modular, core software layer in larger pathway information systems that are capable of visualizing, analyzing, and modeling biological pathways. all cpath software is freely available under an open source license for local installation and modification. the key features provided by cpath are detailed below.

key feature: identifier mapping system
a recurring problem in bioinformatics is linking related or identical data described by different databases when multiple database identifiers  are used to refer to the same biological entity  <cit> . interaction databases may use different identifiers for their proteins, rna, dna or small molecules . this use of multiple identifiers can significantly hinder the ability to seamlessly use data from diverse sources, such as to retrieve all interactions involving a protein from numerous data sources. recognizing when protein records that use different database identifiers actually represent the same protein allows a query for the protein to correctly retrieve both original records  <cit> . to address this specific issue, cpath provides an identifier mapping system capable of storing equivalence between two or more identifiers. the system is pre-populated with identifier mappings loaded from external files. for example, a single protein unification mapping may map uniprot accession numbers to equivalent refseq accession numbers. identifier mapping files are simple tab-delimited text files that must be loaded into cpath prior to import of any interaction or pathway data sets. with some scripting ability, cpath identifier mapping files can be created from external database resources, such as alias server  <cit> , the ebi international protein index   <cit> , or ensembl biomart  <cit> . sample protein unification files, derived from the ipi protein cross-references dataset, are available for download from the cpath web site. cpath also uses identifier equivalences available in imported pathway datasets that contain multiple database references for the same interactors.

importantly, cpath also provides a similar service for storing relationships between non-equivalent, but related biological entities. for example, a researcher can import a uniprot to affymetrix mapping file, then when a new protein with a matching uniprot identifier is subsequently imported into cpath, it is annotated with all known affymetrix probe set identifiers. this is useful for tools that link gene expression data to pathways.

key feature: scalable pathway data aggregation
to support data aggregation from multiple databases, such as to create custom integrated sets of pathways for local use, cpath supports the psi-mi  <cit>  and biopax  <cit>  exchange formats. as more databases make their data available in either of these two standard formats, cpath becomes increasingly useful. as some popular pathway databases do not permit public redistribution of their data, it is difficult for central websites to collect a complete set of pathways for research use. a local installation of cpath is one way to effectively collect and access all of this data. for example, we have successfully aggregated data from mint  <cit>  and intact  <cit> , resulting in a final data set of over  <dig>  proteins, and more than  <dig>  interactions. cpath has also been successfully used to store all human pathways from reactome  <cit> , and one of our active users has used cpath to successfully store over  <dig> million interaction records. a complete list of external databases, which have been successfully imported and stored using cpath is provided in table  <dig> 

cpath supports psi-mi format level  <dig> and biopax format levels  <dig> and  <dig>  level  <dig> of psi-mi represents protein-protein interactions. level  <dig> of biopax represents metabolic pathways, level  <dig> adds support for molecular interactions and post-translational protein modifications, such as those supported by psi-mi, and future levels will add support for signaling pathways, gene regulatory networks and genetic interactions by the end of  <dig> 

key feature: standardized web interface for browsing and querying pathways
once pathway data is stored in cpath, it is available for browsing via a standard web browser. for example, the cancer cell map  <cit>  currently uses cpath software as the underlying database, and makes available a set of cancer-specific pathways curated by the institute of bioinformatics in collaboration with memorial sloan-kettering cancer center. users of cancer.cellmap.org or any other cpath-powered site, have multiple options for querying. a user can begin with a list of pathways, or search for a specific pathway of interest, and drill down to view embedded components, such as biochemical reactions, complexes and proteins . alternatively, a user can enter a search string, such as a protein name or identifier, in the query box, and link from the resulting query results page to interactors, interactions or pathways. cpath includes a full-text search engine that automatically ranks records based on relevance of search results and supports a simple language to define more complex queries, such as boolean combinations of words.

key feature: standardized web service interface for application communication
data stored in cpath can be made available for query and export via a standards-based web service interface. for example, a third-party application can retrieve a list of all pathways stored in cpath, and then retrieve the full details of each pathway in subsequent calls back to cpath. the result of each query is a biopax or psi-mi formatted xml data file that can be parsed and used by the application. by exposing all data via a standards-based web service interface, cpath enables interoperable communication with other software modules, and enables third-party applications to more easily build and expand tools for visualization, analysis and model simulation. for example, the cpath plugin for cytoscape  <cit>  enables researchers to download and visualize protein-protein interaction networks. a second cytoscape plugin enables researchers to view gene expression data along a color gradient and in the context of known biological pathways retrieved from cpath . the cpath web service is not tied to a specific operating system or programming language, and uses a rest-based  architecture  <cit> , which has only two requirements: queries must be specified as internet urls, and response documents must be specified as xml documents. this rest-based approach is considerably simpler than other web service options, such as soap  <cit> , and enables developers to interactively experiment with the cpath web service with just a standard web browser. this helps lower the development effort required to interface with cpath, while simultaneously maintaining platform and language independence.

key feature: cabig™ interoperability
in addition to our own software engineering requirements, cpath meets specific interoperability and testing requirements of the national cancer institute  cancer biomedical informatics grid, or cabig™. the goal of cabig™ is to create a common infrastructure of interoperable tools and data specifically focused on cancer research  <cit> , and software funded via cabig is required to meet specific interoperability requirements. for example, silver-level compliance requires that the software use standard exchange formats, make all data available via well described apis, and use standard messaging systems where appropriate  <cit> . through cabig™, cpath has been formally tested by a third-party partner institution, oregon health & science university . cpath was tested on multiple operating systems, and with multiple versions of the required software providing quality assurance  of the entire software system. since early  <dig>  the cpath web service has handled more than  <dig>  queries from over  <dig>  distinct hosts , mostly from cytoscape users using the cpath query plugin.

key feature: open source license, local installation and customization
cpath is freely available under the gnu lesser general public license  for academic and commercial use. cpath can be used to distribute pathway data on the internet, or can be used to share private data locally within an individual lab, department or company. stable releases of the cpath software are available for download, as are nightly snapshots of the latest code, which is not guaranteed to be stable, but may have new features compared to the last stable release. a complete administrator guide  describes the step-by-step process for installing a new instance of cpath. installation requires some computer system administration skill and ability to work with the command line, thus is geared towards computational biologists and software developers. once installed, cpath can be administered via the command line using a perl script wrapper around a java administration program or via a web-based administration interface. after installation, typical set-up includes loading selecting identifier mapping and psi-mi or biopax files and running the text indexer via the command line administration script or the web-based interface. once these are done, cpath is fully functional and is ready for use. any problems with import, such as errors in the input files, are detected by a validator and reported. the web-based administration provides several options for customizing the look and feel of cpath, including the ability to set global headers, footers, and home page content. additionally, we maintain a public mailing list where new users can post questions related to the administration and use of cpath .

CONCLUSIONS
cpath is a robust, scalable, modular, professional-grade software platform for collecting, storing, and querying biological pathways. it can serve as the core data handling component in information systems for pathway visualization, analysis and modeling. as cpath evolves, we hope to attract new collaborators and developers to contribute to its open source development. we also envision that cpath will provide the software infrastructure for a large-scale, international effort to pool pathways from multiple sources into common repositories that provide convenient integrated points of access for the scientific community.

future cpath software development will focus on increasing levels of data aggregation and linking. currently, cpath is capable of integrating data at the interactor  level by simply recognizing identifiers referencing the same protein, but it is incapable of detecting duplicate interaction or pathway records, resolving conflicting information and detecting semantic inconsistencies between different sources, all of which are required for true integration. furthermore, while cpath is capable of importing both psi-mi and biopax data, the web interface and web service must be set to support one of these exchange formats at a time. to support both exchange formats simultaneously, we will focus on creating translators between psi-mi and biopax, and expand the roster of available web services queries to support both formats. cpath will also support psi-mi level  <dig> , which expands the format scope to include other interactors, such as small molecules, dna, and rna and will support biopax level  <dig>  and future levels as they become available. we also plan to integrate biopax and psi-mi validators, currently under development by others, into the cpath import pipeline to verify that all incoming biopax and psi-mi records conform to their respective format definitions and to community best practices.

with the availability of tools for converting sbml and cellml to biopax developed by biomodels.net  <cit> , we will be able to import sbml and cellml data sets present in biomodels.net directly into cpath. we will also support pathway export in sbml and cellml. furthermore, in order to expand the number of other resources cpath is capable of linking to, we plan to integrate the miriam  uri set. this community-derived data set provides a list of stable uris and url patterns for cross-linking bioinformatics resources and is currently used in sbml and biomodels.net  <cit> .

availability and requirements
• project name: cpath

• project home page: 

• operating system: platform independent; tested on windows, linux and mac os x

• programming languages: java

• other requirements: mysql  <dig>  or higher; apache tomcat server  <dig>  or higher; apache ant  <dig>  or higher, perl  <dig>  or higher. all required software is open source and freely available.

• license: free for academic and commercial users under the gnu lesser general public license .

• example site running cpath software: memorial sloan-kettering cancer cell map, .

authors' contributions
ec managed the overall software development process for cpath, wrote most of the code for cpath, and wrote the first draft of this manuscript. gb conceived of the cpath project, managed the scientific and technical goals, and helped draft the manuscript. bg contributed to the web interface for displaying biopax records, built the administrative interface for customizing cpath web pages, and built the cpath plugin for overlaying expression data onto biological pathways. cs conceived of the cpath project, and provided overall scientific and technical guidance. all authors read and approved the final manuscript.

