BACKGROUND
protein evolution has been largely modelled by considering the amino acid substitution process. there have been few statistical studies of the processes of insertion and deletion. thorne et al.   <cit>  described a theoretical parametric model that has been used to model the processes of insertion and deletion of single amino acids. the model has been extended, and others developed, to include the consideration of longer indels , however a model based on actual sequences may be more realistic and therefore preferable.

the study benner, cohen and gonnet   <cit>  is therefore a landmark one. the distribution of indels length was empirically determined from the alignment of conserved proteins with less than  <dig> pam units of sequence divergence. this limit on the range of divergence was established in order to reduce both the redundancy of indel events counted, and the numbers of indels that resulted from independent overlapping events. in that study and in a more recent update  <cit> , the estimate for the indel length distribution fit to a zipfian distribution.

the study of qian and goldstein   <cit>  on the other hand, derived an empirical distribution for the length of indels from a database of protein alignments sharing no more than 25% sequence identity. the distribution in that case fit a linear combination of  <dig> exponential functions. we call this function the qian-goldstein distribution and the zipfian distributions found by  <cit>  and  <cit> , the benner distributions. the qian-goldstein distribution is more applicable to protein sequence comparisons with long sequence divergence whereas the benner distributions are more applicable to sequences of lower divergence. the qian-goldstein distribution was derived for the determination of realistic gap insertion and deletion penalties that are generally used in alignment algorithms. these affine gap penalties are used to mimic the fact that although insertions and deletions are rare events, they often involve more than one amino acid. that observation reflects the fact that some regions of protein sequence and structure are able to tolerate sections of insertion or deletion.

the evolutionary processes of mutation and subsequent natural selection determine the occurrence of substitutions, insertions and deletion. the specifics of the processes are difficult to model accurately since they are determined by many factors at all context levels . however general protein evolution models are useful as they can help determine the baseline expectations for the evolution of sequences, and they have been extensively used for the computer simulation of artificial sequence data sets.

two freely available programs that generate sets of sequences by monte carlo simulation of evolution are seq-gen  <cit> , and rose  <cit> . seq-gen generates sequences using a given evolutionary tree, making substitutions according to a specified model. several models of amino acid substitution are available, including the popular pam  <cit>  and jtt models  <cit> . additionally, seq-gen allows rates of evolution to vary between sites according to the gamma model developed by yang  <cit> . seq-gen only considers substitutions and does not simulate the processes of insertion and deletion. on the other hand, the rose program does simulate insertions and deletions, along with substitutions, but has the disadvantage of not allowing for different rates of evolution at different sites. the user determines the distribution of indel length used by rose software. that distribution is then fixed and does not depend on evolutionary time ; only the frequency of indels is determined by the branch length separating the ancestral and daughter sequences.

the empirically derived distribution of qian-goldstein  <cit>  was obtained using a subset of structural sequence alignments corresponding to highly diverged sequences in the database. the distribution as such is limited to models of proteins corresponding to this set of circumstances. although the qian-goldstein distribution is fixed with respect to evolutionary time, it has the property of being easily parameterized. we generalized the model so that it applies to proteins with variable sequence divergence and show that this generalized distribution may be comparable to the benner distribution  <cit>  at shorter evolutionary distances. we implemented our generalized qian-goldstein distribution in a new program for the simulation of protein sequences . like earlier programs, simprot allows for several models of amino acid substitution, and permits gamma distributed sites rates according to the yang  <cit>  model. by incorporating our parameterized qian-goldstein model for indels, the user has flexibility to modify the distribution and obtain longer/shorter or more/less frequent insertions and deletions. simprot is the first program to simulate protein sequence evolution with the additional capability of being able to simulate indels with a variable length distribution. additionally, simprot allows the protein sequence to be segmented such that the different segments can evolve with distinct sets of parameters and tree.

RESULTS
parametrization of the qian-goldstein indel length distribution
the empirically derived qian-goldstein distribution  <cit>   is given by

qg= <dig> ×10−2e−n/ <dig>            +   <dig> ×10−3e−n/ <dig>            +   <dig> ×10−4e−n/ <dig>                 +   <dig> ×10−5e−n/ <dig> .
 mathtype@mtef@5@5@+=feaafeart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqacigacagaaeqabaqabegadaaakqaabeqaauaabeqabmaaaeaacqwgrbqucqwghbwrcqggoaakcqwgubgbcqggpaqkaeaacqgh9aqpaeaacqaixaqmcqgguaglcqaiwaamcqaiyagmcqai3awncqghxdatcqaixaqmcqaiwaamdaahaawcbeqaaiabgkhitiabikdayaaakiabdwgalnaacaaaleqabagaeyoei0iaemoba4maei4la8iaegimaajaeiola4iaegyoakjaegonaydaaaaaaoqaaiaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8ebaeaabewaaaqaaaqaaaqaaiabgucariaaykw7caamc8uaeg4mamjaeiola4iaegimaajaeg4mamjaegymaejaey41aqraegymaejaegimaazaawbaasqabeaacqghsislcqaizawmaagccqwglbqzdaahaawcbeqaaiabgkhitiabd6gaujabc+caviabiodaziabc6cauiabigdaxiabiodazaaaaaaakeaacaamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavxaabeqabmaaaeaaaeaaaeaacqghrawkcaamc8uaagpavlabiada2iabc6cauiabigdaxiabisda0iabigdaxiabgena0kabigdaxiabicdawmaacaaaleqabagaeyoei0iaeginaqdaaogaemyzau2aawbaasqabeaacqghsislcqwgubgbcqggvawlcqaixaqmcqai0aancqgguaglcqaizawmaagccawljagaaczcamaabmaabagaegymaedacagloagaayzkaaaaaaqaaiaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8ebaeqabewaaaqaaaqaaaqaaiabgucariaaykw7caamc8uaegomaijaeiola4iaegimaajaegyoakjaegimaajaey41aqraegymaejaegimaazaawbaasqabeaacqghsislcqai1aqnaagccqwglbqzdaahaawcbeqaaiabgkhitiabd6gaujabc+caviabiida4iabigdaxiabc6cauiabieda3aaakiabc6cauaaaaaaa@c3d8@

this function describes the frequency of an indel, of any length n >  <dig>  as a fraction of the average length of the protein sequence. the model accurately describes a data set of aligned sequences with less than 25% sequence identity. the total frequency of indels is estimated by ∑n > 0qg, which converges rapidly to  <dig> . this value is close to the observed frequency of indels  that was found by qian and goldstein in database they analyzed  <cit> .

as mentioned above, the dataset used to infer equation  <dig> was highly diverged, so we may assume it accurately applies to sequences of large divergence. we will therefore assume that the qian-goldstein applies at an evolutionary distance c, a parameter to which evolutionary time t will be scaled. this allows us to define qg' = qg for n >  <dig> and t = c.

however this only defines the qg' function at one evolutionary time point, t = c. it is necessary to define the expected distribution of observed indel lengths for all evolutionary times. the qian-goldstein distribution describes the observed length frequency after a large amount of divergence, but it does not describe the actual distribution of the expected rate of fixation in the population of insertion and deletion mutations . this is because a single observed indel may have been the result of several actual events. even if the length distribution for indel occurrences were known, a markov model for the process of insertion and deletion would need to be established and used to derive the expected distribution of observed indels for any given degree of divergence. additional empirical data is needed to derive the expected distribution of observed indel lengths scaled to other divergence times.

in the absence of additional empirical data, we must make some assumptions about the insertion and deletion processes to derive the indel length distribution for all evolutionary time.

 <dig>  we assume that the length of indels will increase with evolutionary time as larger indels are more easily tolerated and smaller ones overlap. we therefore expect that shorter indels arise over smaller divergence times and that larger indels are the result of independent but contiguous events. we design the distribution such that it is has the property that the limit as time goes to  <dig> for the expected frequency of all indels , is also  <dig>  this assumes that the instantaneous rate of an indel involves only a single amino acid, which is unlikely . the assumption is only approximatively true even if the mutation process created only single amino acid indels because multiple mutations may be fixed by natural selection and genetic drift. the effect on the indel model will be that the lengths of indels may be underestimated for very low sequence divergence.

 <dig>  we design the distribution such that it is time-reversible. this makes the assumptions that the probability of insertions is equal to the frequency of deletions and that these have equal length distributions. data from dna genome level comparisons  <cit>  indicate these assumption are not necessarily true, but the effects of this on the long range evolution in proteins is not clear. the qian-goldstein and benner distributions assume time reversibility since the direction of events was not known for the protein sequences they analyzed. time-reversibility is a desirable mathematical property that is often used in sequence analysis programs for alignment and phylogeny.

 <dig>  we assume that the observed indel length distribution keeps its original form as a sum of four exponential terms at any fixed time point, and not just for time t = c. this is consistent with the assumption in the original qian-goldstein distribution, which fits four exponential terms. using a function of this form allows us to scale the exponential in each term separately.

 <dig>  there are still many ways to introduce the time parameter t into the function. our third assumption was then to chose a simple linear scaling of the exponents of the function with time. we found this scaling to give reasonable results when we compare the benner distributions which were obtained at shorter time scales .

with these assumptions, we then define the scaled qg' function for n >  <dig> as

qg'= <dig> ×10−2e−nc/ <dig> t                            +   <dig> ×10−3e−nc/ <dig> t                            +   <dig> ×10−4e−nc/ <dig> t                                 +   <dig> ×10−5e−nc/ <dig> t.
 mathtype@mtef@5@5@+=feaafeart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqacigacagaaeqabaqabegadaaakqaabeqaaiabdgfarjabdeeahjabcecaniabcicaoiabd6gaujabcycasiabdsha0jabcycasiabdogajjabcmcapiabg2da9iabigdaxiabc6cauiabicdawiabikdayiabieda3iabgena0kabigdaxiabicdawmaacaaaleqabagaeyoei0iaegomaidaaogaemyzau2aawbaasqabeaacqghsislcqwgubgbcqwgjbwycqggvawlcqaiwaamcqgguaglcqai5aqocqai2agncqwg0badaaaakeaacaamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaey4kasiaagpavlaaykw7cqaizawmcqgguaglcqaiwaamcqaizawmcqaixaqmcqghxdatcqaixaqmcqaiwaamdaahaawcbeqaaiabgkhitiabiodazaaakiabdwgalnaacaaaleqabagaeyoei0iaemoba4maem4yammaei4la8iaeg4mamjaeiola4iaegymaejaeg4mamjaemidaqhaaagcbagaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlabgucariaaykw7caamc8uaegonayjaeiola4iaegymaejaeginaqjaegymaejaey41aqraegymaejaegimaazaawbaasqabeaacqghsislcqai0aanaagccqwglbqzdaahaawcbeqaaiabgkhitiabd6gaujabdogajjabc+caviabigdaxiabisda0iabc6cauiabiodaziabdsha0jaaxmaacawljawaaewaaeaacqaiyagmaiaawicacaglpaaaaaaakeaacaamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaagpavlaaykw7caamc8uaey4kasiaagpavlaaykw7cqaiyagmcqgguaglcqaiwaamcqai5aqocqaiwaamcqghxdatcqaixaqmcqaiwaamdaahaawcbeqaaiabgkhitiabiwda1aaakiabdwgalnaacaaaleqabagaeyoei0iaemoba4maem4yammaei4la8iaegioagjaegymaejaeiola4iaeg4nacjaemidaqhaaogaeiola4caaaa@22a6@

to turn equation  <dig> into a probability distribution , we must divide the function by the sum of all values for n >  <dig> such that that

gqgc=qg'∑n=1∞qg'.     
 mathtype@mtef@5@5@+=feaafeart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqacigacagaaeqabaqabegadaaakeaacqwghbwrcqwgrbqucqwghbwrdawgaawcbagaem4yamgabeaakiabcicaoiabd6gaujabcycasiabdsha0jabcmcapiabg2da9maalaaabagaemyuaelaem4rackaei4jaciaeiikagiaemoba4maeiilawiaemidaqnaeiilawiaem4yammaeiykakcabawaaabmaeaacqwgrbqucqwghbwrcqggnawjcqggoaakcqwgubgbcqggsaalcqwg0badcqggsaalcqwgjbwycqggpaqkasqaaiabd6gaujabg2da9iabigdaxaqaaiabg6hilcqdcqghris5aaaakiabc6cauiaaxmaacawljawaaewaaeaacqaizawmaiaawicacaglpaaaaaa@58e4@

we call gqg the generalized qian-goldstein distribution. gqg is a scaled version of the qg function that describes the probability distribution of indels of length n  at any evolutionary time t and assuming an evolutionary scale factor c.

in figure  <dig> the distribution of indel lengths is shown plotted for varying values of c and t. in figure  <dig>  we compare the gqg distribution  with the data from  <cit>  which was obtained from sequence comparisons of pam <  <dig>  the striking fit of the gqg distribution to data of much lower sequence divergence indicates that our scaling of the original qg distribution is appropriate.

once defined in this way, the gqg does not give the frequency of indels . the rates for the assumed four independent poisson processes for the appearance of indels can be combined into a single instantaneous rate z. the frequency of indels defines p such that

p =  <dig> - e-zt/c.     

we define the indel frequency rate p as a parameter from which z can be calculated. figure  <dig> shows the frequency of indels as z is increased for different values of the parameter c such that p =  <dig>  .

by introducing parameters in the distribution, we allow a large amount of flexibility in the generation of indels and on their lengths. the indel frequency parameter p can modify the indel frequency and the evolutionary scale factor c parameter can be used to independently modify the distribution of indel lengths. larger values of p will yield more indels and smaller values of will yield fewer indels. larger values of c will yield shorter indels and smaller values of c will yield larger indels.

the original impetus for the estimation of the indel distribution was to derive gap insertion  and gap extension  penalties for use in alignment programs  <cit> . we used the formulas from  <cit>  to derive an approximation for the natural log odds penalties for gaps

γe≈gqgc−gqgc2gqgc     
 mathtype@mtef@5@5@+=feaafeart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqacigacagaaeqabaqabegadaaakeaacqahzowzdawgaawcbagaemyraueabeaakiabgiki7oaalaaabagaem4rackaemyuaelaem4rac0aasbaasqaaiabdogajbqabagccqggoaakcqaizawmcqggsaalcqwg0badcqggpaqkcqghsislcqwghbwrcqwgrbqucqwghbwrdawgaawcbagaem4yamgabeaakiabcicaoiabigdaxiabcycasiabdsha0jabcmcapaqaaiabikdayiabdeeahjabdgfarjabdeeahnaabaaaleaacqwgjbwyaeqaaogaeiikagiaegomaijaeiilawiaemidaqnaeiykakcaaiaaxmaacawljawaaewaaeaacqai1aqnaiaawicacaglpaaaaaa@547b@

γi≈log⁡+2γe.     
 mathtype@mtef@5@5@+=feaafeart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqacigacagaaeqabaqabegadaaakeaacqahzowzdawgaawcbagaemysakeabeaakiabgiki7kgbcygasjabc+gavjabcegannaabmaabawaasaaaeaacqwgwbacaeaacqaixaqmcqghsislcqwglbqzdaahaawcbeqaaiabeo7annaabaaameaacqwgfbqraeqaaaaaaaaakiaawicacaglpaaacqghrawkcqaiyagmdawgaawcbagaeq4sdc2aasbaawqaaiabdweafbqabaaaleqaaogaeiola4iaaczcaiaaxmaadaqadaqaaiabiada2agaayjkaiaawmcaaaaa@486b@

implementation
we have implemented the generalized qian-goldstein distribution in a program called simprot to simulate protein sequence evolution. given a bifurcating phylogenetic tree, children sequences inherit the sequence of their parent with modification due to mutation events. the number of mutations expected depends on the length of evolutionary time that separates the child from the parent and their type is determined by the chosen models. substitutions are made according to the user-chosen substitution model. insertions and deletions are made according to the gqg model described above. the user determines the values of the evolutionary scale factor c which controls the indel length distribution, and the indel frequency rate p which determines their frequencies. the shape parameter for the gamma model of  <cit>  distribution of evolutionary rates is also determined by the user.

the parameters for the models are input via an interface screen . the locally installed versions allow several input screens such that the resulting simulated protein sequences will consist of segments each evolving according to its own set of parameters and tree.

the program generates sequences according to the chosen indel and substitution models and outputs the alignments of sequences from the terminal branches. when several protein segments have been selected, the sequences are appropriately fused into single sequences by matching the names of the terminal taxons in the input tree files. the gap opening and gap extension penalties corresponding to the input parameters and time t = c for each protein segment is an additional output provided by the program for user reference.

evolution
each protein segment is simulated independently. simprot parses the given tree file into a tree structure to use as a guide in simulating evolution. it then generates a random amino acid sequence of given length r at the root of the tree according to the equilibrium frequency of amino acids in the substitution model. each amino acid site is assigned a rate of evolution based on the gamma distribution. the program then recursively generates mutations on the protein sequence at each of the tree nodes. there are two types of mutations: insertion/deletion and substitution. indels are performed before substitutions at each tree node.

number of indels
simprot assumes a poisson process for insertion and deletions and thus the expected frequency of indels  in a sequence is

p =  <dig> - e-zt/c,     

where z is the indel probability and t is the branch length to the daughter sequence which is scaled by the evolutionary scale factor. for each amino acid site, a uniformly distributed random number is picked to check whether it is lower than the expected frequency. the number of times this happens over the entire sequence becomes the number of indels that will be performed.

indel positions
indel sites are chosen according to their rate of evolution as given by the gamma distribution. this means that sites more likely to substitute will also be more likely to have an insertion or deletion.

indel length
to determine the length of an indel after choosing to create one, the cumulative distribution function  of the indel-length probabilities for n >  <dig> as determined by the gqg model is evaluated using eq.  <dig>  a cap on the indel length is also applied. indels must be shorter than the maximum indel length or 5% of the sequence length .

indel type
simprot chooses between insertion and deletion with equal probability. if insertion is chosen, an amino acid sequence of the indel length is generated  and inserted before the indel position. if deletion is chosen, the indel length of amino acids are deleted beginning with the current position. if the length of the indel is greater than the number of amino acids in the sequence following the current position, additional amino acids are deleted towards the start of the sequence.

the probability of amino acids being inserted and deleted is the same so that the length of the sequences should remain approximately the same. the sequence is updated after each indel event and all indels are performed before substitutions.

substitutions
once all indels have been performed at a given node, simprot performs substitutions of the individual amino acid according to the evolutionary substitution model. currently the models implemented are pam, jtt and pmb. the substitution probabilities are calculated from the previously calculated eigenvalue decomposition of the probability matrix. this strategy, first used by felsenstein in the phylip package  <cit>  facilitates computation of the substitution probabilities for any branch length. the model considers the probability of all amino acid substitutions for a given branch length times the evolutionary rate at the site . as the program traverses the tree, the descendant nodes inherit the mutations generated.

alignment
a copy of the "true" sequence alignment is also produced for the generated sequence family. at each node, the locations of insertions and deletions are maintained relative to the sequence at the parent node. this correspondence is called the "gapped sequence" because gap characters  are inserted in copies of both the current sequence and the parent sequence to represent the correspondence. after the sequence family has been generated, a recursive traversal rebuilds the true alignment using the gapped sequences. the procedure makes use of the fact that, for any node in the tree, the true alignments are known for the sequences in the left and right subtrees from this node, and the gapped sequences can be used to align these two true alignments, producing the true alignment for all sequences below the root. this procedure requires only a linear traversal of the tree, and therefore imposes no significant additional cost of computation. simprot outputs the aligned sequences from the leaves of the tree in fasta and phylip format. it also creates a file of the set of unaligned protein sequences. if the protein is segmented, the files for the segments are merged into the final alignment.

CONCLUSIONS
while the process of amino acid substitution has been extensively studied and modelled, there has been relatively little study of the insertion-deletion process in protein coding sequences  <cit> . the model we propose may not fit all proteins but it has the properties of being based on an empirically derived distribution, and being flexible so as to allow a user to test many conditions. we plan to use additional empirical data of the frequency and distribution of indels in proteins to refine our model in subsequent releases of simprot. the alignments generated by simprot will be useful for testing methods of analysis of protein sequence families. it will be particularly useful for the development of new alignment methods, phylogenetic tree building, detection of recombination and horizontal gene transfer, and homology detection, where knowing the true course of sequence evolution is essential.

availability and requirements
project name: simprot

project home page: 

operating systems: linux, windows  <dig> or later 

programming language: c++

license: university of illinois/ncsa open source license

any restrictions to use by non-academics: no

list of abbreviations
pmb probability matrix from blocks, jtt jones taylor thorton, pam percent accepted mutation, gqg generalized qian-goldstein distribution, cdf cumulative distribution function.

authors' contributions
ap implemented the gqg distribution in simprot and helped draft the manuscript. ads implemented the indel and substitution processes in simprot and helped draft the manuscript. pasn implemented the gap penalties, created the gui interfaces and provided comments on the manuscript. ermt derived the gqg distribution, supervised the project and approved the final manuscript.

