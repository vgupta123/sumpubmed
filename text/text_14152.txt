BACKGROUND
on average, it takes over a dozen years and around  <dig>  billion dollars to develop a drug  <cit> . moreover, most of the drugs being developed fail to reach the market due to reasons pertaining to toxicity or low efficacy  <cit> . to mitigate the risks and costs inherent in traditional drug discovery, many pharmaceutical companies resort to drug repurposing or repositioning where drugs already on the market may be reused for novel disease treatments that differ from their original objective and purpose  <cit> .

intuitively, repurposing a known drug to treat new diseases is convenient and cost-effective for the following two reasons. firstly, since the drug being repurposed is one that is already on the market , this implicitly means that it already passed clinical trials that ensure the drug is safe to use. secondly, the drug being repurposed has already been studied extensively, so many of the drug’s properties  are known before initiating the drug repurposing effort. as such, drug repurposing helps facilitate and accelerate the research and development process in the drug discovery pipeline  <cit> .

many data sources are publicly available online that support efforts in computational drug repositioning  <cit> . based on the types of data being used, different methods and procedures have been proposed to achieve drug repositioning  <cit> . in this paper, we particularly focus on global-scale drug-target interaction prediction; that is, leveraging information on known drug-target interactions, we aim to predict or prioritize new previously unknown drug-target interactions to be further investigated and confirmed via experimental wet-lab methods later on.

the main benefit of this technique for drug repositioning efforts is that, given a protein of interest , many fda-approved drugs may simultaneously be computationally screened to determine good candidates for binding  <cit> . as previously mentioned, using an approved drug as a starting point in drug development has desirable benefits regarding cost, time and effort spent in developing the drug. in addition, other benefits of this technique include the screening of potential off-targets that may cause undesired side effects, thus facilitating the detection of potential problems early in the drug development process. finally, new predicted targets for a drug could improve our understanding of its actions and properties  <cit> .

efforts involving global-scale prediction of drug-target interactions have been fueled by the availability of publicly available online databases that store information on drugs and their interacting targets, such as kegg  <cit> , drugbank  <cit> , chembl  <cit>  and stitch  <cit> .

these efforts can be divided into three categories. the first category is that of ligand-based methods where the drug-target interactions are predicted based on the similarity between the target proteins’ ligands. a problem with this category of methods is that many target proteins have little or no ligand information available, which limits the applicability of these methods  <cit> .


docking simulation methods represent the second category of approaches for predicting drug-target interactions. although they have been successfully used to predict drug-target interactions  <cit> , a limitation with these methods is that they require the 3d structures of the proteins, which is a problem because not all proteins have their 3d structures available. in fact, most membrane proteins  do not have resolved 3d structures, as determining their structures is a challenging task  <cit> .

the third category is the chemogenomic approaches which simultaneously utilize both the drug and target information to perform predictions. chemogenomic methods come in a variety of forms. some are kernel-based methods that make use of information encoded in both drug and target similarity matrices to perform predictions , while other chemogenomic methods use graph-based techniques, such as random walk  <cit>  and network diffusion  <cit> .

in this paper, we focus on a particular type of chemogenomic methods, namely feature-based methods, where drugs and targets are represented with sets of descriptors . for example, he et al. represented drugs and targets using common chemical functional groups and pseudo amino acid composition, respectively  <cit> , while yu et al. used molecular descriptors that were calculated using the dragon package  <cit>  and the profeat web server  <cit>  for drugs and targets, respectively  <cit> . other descriptors have also been used such as position-specific scoring matrices  <cit> , 2d molecular fingerprints  <cit> , maccs fingerprints  <cit> , and domain and pubchem fingerprints  <cit> .

in general, many of the existing methods treat drug-target interaction prediction as a binary classification problem where the positive class consists of interacting drug-target pairs and the negative class consists of non-interacting drug-target pairs. clearly, there exists a between-class  imbalance as the number of the non-interacting drug-target pairs  far exceeds that of the interacting drug-target pairs . this results in biasing the existing prediction methods towards classifying instances into the majority class to minimize the classification errors  <cit> . unfortunately, minority class instances are the ones of interest to us. a common solution that was used in previous studies  is to perform random sampling from the majority class until the number of sampled majority class instances matches that of the minority class instances. while this considerably mitigates the bias problem, it inevitably leads to the discarding of useful information  whose inclusion may lead to better predictions.

the other kind of class imbalance that also degrades prediction performance, but has not been previously addressed, is the within-class  imbalance which takes place when rare cases are present in the data  <cit> . in our case, there are multiple different types of drug-target interactions in the positive class, but some of them are represented by relatively fewer members than others and can be considered as less well-represented interaction groups . if not processed well, they are a source of errors because predictions would be biased towards the well-represented interaction types in the data and ignore these specific small concepts.

in this paper, we propose a simple method that addresses the two imbalance problems stated above. firstly, we provide a solution for the high imbalance ratio between the minority and majority classes while greatly decreasing the amount of information discarded from the majority class. secondly, our method also deals with the within-class imbalance prevalent in the data by balancing the ratios between the different concepts inside the minority class. particularly, we first perform clustering to detect homogenous groups where each group corresponds to one specific concept and the interactions within smaller groups are relatively easier to be incorrectly classified. as such, we artificially enhance small groups via oversampling, which essentially helps our classification model focus on these small concepts to minimize classification errors.

data
this section provides our dataset information including raw drug-target interaction data and the data representation that turns each drug-target pair into its feature vector representation.

drug-target interaction data
the interaction data used in this study was collected recently from the drugbank database  <cit>  . some statistics regarding the collected interaction data are given in table  <dig>  in total, there are  <dig> drug-target interactions between  <dig> drugs and their  <dig> protein interaction partners. the full lists of drugs and targets used in this study as well as the interaction data  have been included as supplementary material .



data representation
after having obtained the interaction data, we generated features for the drugs and targets respectively. particularly, descriptors for drugs were calculated using the rcpi  <cit>  package. examples of drug features include constitutional, topological and geometrical descriptors among other molecular properties. note that biotech drugs have been excluded from this study as rcpi could only generate such features for small-molecule drugs. the statistics given in table  <dig> reflect our final dataset after the removal of these biotech drugs.

now, we describe how target features were obtained. since it is generally assumed that the complete information of a target protein is encoded in its sequence  <cit> , it may be intuitive to represent targets by their sequences. however, representing the targets this way is not suitable for machine learning algorithms because the length of the sequence varies from one protein to another. to deal with this issue, an alternative to using the raw protein sequences is to compute  a number of different descriptors corresponding to various protein properties. the list of computed features is intended to be as comprehensive as possible so that it may, as much as possible, convey all the information available in the genomic sequences that they were computed from. computing this list of features for each of the targets lets them be represented using fixed-length feature vectors that can be used as input to machine learning methods. in our work, the target features were computed from their genomic sequences with the help of the profeat  <cit>  web server.

the features that have been used to represent targets in this work are descriptors related to amino acid composition; dipeptide composition; autocorrelation; composition, transition and distribution; quasi-sequence-order; amphiphilic pseudo-amino acid composition and total amino acid properties. note that a similar list of features was used previously in  <cit> . subsets of these features have also been used in other previous studies concerning drug-target interaction prediction  <cit> . more information regarding the computed features can be accessed at the online documentation webpage of the profeat web server where all the features are described in detail.

after generating features for drugs and targets, there were features that had constant values among all drugs . such features were removed as they would not contribute to the prediction of drug-target interactions. furthermore, there were other features that had missing values for some of the drugs . for each of these features, the missing values were replaced by the mean of the feature over all drugs . in the end,  <dig> and  <dig> features remained for drugs and targets, respectively. the full lists of drug features and target features used in this study have been included as supplementary material .

next, every drug-target pair is represented by feature vectors that are formed by concatenating the feature vectors of the corresponding drug and target involved. for example, a drug-target pair  is represented by the feature vector, 
 ,  where [d
 <dig> d
 <dig> …,d
193] is the feature vector corresponding to drug d, and [t
 <dig> t
 <dig> …,t
1290] is the feature vector corresponding to target t. hereafter, we also refer to these drug-target pairs as instances. finally, to avoid potential feature bias in its original feature values, all features were normalized to the range  <cit>  using min-max normalization before performing drug-target interaction prediction as follows 
 ∀i= <dig> …, <dig> di=di−minmax−min∀j= <dig> …, <dig> tj=tj−minmax−min. 


the feature vectors that were computed for the drugs and targets have been included as supplementary material .

methods
the proposed method was developed with an intention to deal with two key imbalance issues, namely the between-class imbalance and the within-class imbalance. here, we describe in detail how each of these imbalance issues was handled. for notation, we use p to refer to the set of positive instances  and use n to refer to the remaining negative instances .

technically speaking, these remaining instances should be called unlabeled instances as they have not been experimentally verified to be true non-interactions. in fact, we believe that some of the instances in n are actually true drug-target interactions that have not been discovered yet. nevertheless, to simplify our discussion, we refer to them as negative instances since we assume the proportion of non-interactions in n to be quite high.

our proposed algorithm
we propose a simple ensemble learning method where the prediction results of the different base learners are aggregated to produce the final prediction scores. for base learners, our ensemble method uses decision trees which are popularly used in ensemble methods . decision trees are known to be unstable learners, meaning that their prediction results are easily perturbed by modifying the training set, making them a good fit with ensemble methods which make use of the diversity in their base learners to improve prediction performance  <cit> .

it is generally known that an ensemble learning method improves prediction performance over any of its constituent base learners only if they are uncorrelated. intuitively, if the base learners of an ensemble method were identical, then there would no gain in prediction performance at all. as such, adding diversity to the base learners is important.

one way of introducing diversity to the base learners that is used in our method is supplying each base learner with a different training set. another way of adding diversity that we also employ here is feature subspacing; that is, for each of the base learners, we represent the instances using a different subset of the features. more precisely, for each base learner, we randomly select two thirds of the features to represent the instances.

algorithm  <dig> shows our pseudocode for the overall architecture of our proposed method where the specific steps for handling the two imbalance issues are discussed in the following subsections. following is a summary of the method: 

t decision trees are trained ,

prediction results of the t trees are aggregated by simple averaging to give the final prediction scores.

for each decision tree, tree
i:





randomly select a subset of the features, f
i.

obtain p
i by performing feature subspacing on p using f
i.

oversample p
i.

randomly sample n
i from n such that |n
i|=|p
i|.

remove instances of n
i from n.

modify n
i by performing feature subspacing on it using f
i.

train tree
i using the positive set p
i and the negative set n
i as the training set.








within-class imbalance
we are now ready to explain the oversample in algorithm  <dig>  as mentioned in the introduction section, within-class imbalance refers to the presence of specific types of interactions in the positive set p that are under-represented in the data as compared to other interaction types. such cases are referred to as small concepts, and they are a source of errors because prediction algorithms are typically biased in that they favor the better represented interaction types in the data so as to achieve better generalization performance on unseen data  <cit> .

to deal with this issue, we use the k-means++ clustering method  <cit>  to cluster the data into k homogenous clusters  where each cluster corresponds to one specific concept. this results in interaction groups/clusters of different sizes. the assumption here is that the small clusters  correspond to the rare concepts  that we are concerned about. supposing that the size of the biggest cluster is maxclustersize, all clusters are re-sampled until their sizes are equal to maxclustersize. this way, all concepts become represented by the same number of members and are consequently treated equally in training our classifier. essentially, this is similar in spirit to the idea of boosting  <cit>  where examples that are incorrectly classified have their weights increased so that classification methods will focus on the hard-to-classify examples to minimize the classification errors.

algorithm  <dig> shows the pseudocode for the oversampling procedure. p
i is first clustered into k clusters of different sizes. after determining the size of the biggest of these clusters, maxclustersize, all clusters are re-sampled until their sizes are equal to maxclustersize. the re-sampled clusters are then assigned to p
i before returning it to the main algorithm in the “our proposed algorithm” subsection.





an issue that we considered while implementing the oversampling procedure was that of data noise. indeed, emphasizing small concept data can become a counter-productive strategy if there is much noise in the data. however, the data used in this study was obtained from drugbank  <cit> , and since the data stored there is regularly curated by experts, we have high confidence in the interactions observed in our dataset. in other words, the interactions  are quite reliable and are expected to contain little to no noise. on the other hand, the negative instances are expected to contain noise since, as mentioned earlier, these negative instances are actually unlabeled instances that likely contain interactions that have not been discovered yet. here, we only amplify the importance of small-concept data from the positive set . since the positive instances being emphasized are highly reliable, the potential impact of noise on the prediction performance is minimal.

between-class imbalance
between-class imbalance refers to the bias in the prediction results towards the majority class, leading to errors where minority examples are classified into the majority class. we wanted to ensure that predictions are not biased towards the majority class while, at the same time, decrease the amount of useful majority class information being discarded. to that end, a different set of negative instances n
i is randomly sampled from n for each base learner i such that |n
i|=|p
i|. the 1: <dig> ratio of the sizes of p
i and n
i eliminates the bias of the prediction results towards the majority class. moreover, whenever a set of negative instances n
i is formed for a base learner, its instances are excluded from consideration when we perform random sampling from n for future base learners. the different non-overlapping negative sets that are formed for the base learners lead to better coverage of the majority class in training the ensemble classifier.

note that, to improve coverage of the majority class in training, the value of the parameter t needs to be increased where t is the number of base learners in the ensemble method, which also determines the number of the times that we want to draw instances from the negative set n. in general, with the increase of the value of t, more useful information from the majority class will be incorporated to build our final classification model.

RESULTS
in this section, we have performed comprehensive experiments in which we compare our proposed technique with  <dig> existing methods. below, we first elaborate on our experimental settings. next, we provide details of our cross-validation experiments and comparison results. finally, we focus on predicting interactions for new drugs and new targets, which is crucial for both novel drug design and drug repositioning tasks.

experimental settings
to evaluate our proposed method, we conducted an empirical comparison with  <dig> state-of-the-art methods and  <dig> baseline methods. particularly, random forest and svm are existing state-of-the-art methods that were both used in a recent work for predicting drug-target interactions  <cit> . note that the parameters for these  <dig> methods were set to the default optimal values supplied in  <cit> . we also included two baseline methods, namely decision tree and nearest neighbor. for decision tree, we employed the fitctree built-in package in matlab and used the default parameter values as they were found to produce reasonable good results. as for nearest neighbor, it produces a prediction score for every test instance a by computing its similarity to the nearest neighbor b from the minority class p  based on the following equations, 
 scorea=maxb),b∈p 
 sim=exp−||a−b||2|f|,  where |f| is the number of features.

for the above  <dig> competing methods, they all used p as the positive set, while the negative set was sampled randomly from n until its size reached |p|. in contrast, our method oversampled p for each base learner i, giving p
i, and a negative set n
i was sampled from n for each base learner i such that |n
i|=|p
i|. note that different base learners have used different negative sets in our proposed method. in addition, the parameters k and t for our method were set to  <dig> and  <dig>  respectively, to generate sufficient homogenous clusters and leverage more negative data.

cross validation experiments
to study the prediction performance of our proposed method, we performed a standard 5-fold cross validation and computed the auc for each method . more precisely, for each of the methods being compared,  <dig> auc scores were computed  and then averaged to give the final overall auc score. note that auc is known to be insensitive to skewed class distributions  <cit> . considering that the drug target interaction dataset used in this study is highly imbalanced , auc score is thus a suitable metric for evaluation of the different computational methods.
fig.  <dig> plot of roc curves of the different methods. roc curves for the different methods are plotted together, providing a visual comparison between their prediction performances



proposed method
 <dig>  
standard deviations are included between parentheses. best auc is indicated in bold




as shown in table  <dig>  the second best method is random forest. moreover, our method is similar to random forest in that they are both ensembles of decision trees with feature subspacing. both our proposed method and random forest perform very well in drug-target interaction prediction, showing that ensemble methods are indeed superior to achieve good prediction performance. however, our method differs from random forest in two perspectives. firstly, random forest performs bagging on a single sampled negative set for each base learner, while our method leverages multiple non-overlapping negative sets for different base learners. secondly, our method also oversamples the positive set in a way that is intended to deal with the within-class imbalance, while random forest does not. due to these  <dig> differences, our method achieved an auc of  <dig> , which is  <dig> % higher than random forest with an auc of  <dig> . this supports our claim that dealing with class imbalance in the data is important for improving the prediction performance.

predicting interactions for new drugs and targets
a scenario that may occur in drug discovery is that we may have a target protein of interest for which no information on interacting drugs is available. this is typically a more challenging case than if we had information on drugs that the target protein is already known to interact with. a similar scenario that occurs frequently in practice is that we have new compounds  for which no interactions are known yet, and we want to determine candidate target proteins that they may interact with. when there is no interaction information on a drug or target, they are referred to as a new drug or a new target.

to test the ability of our method to correctly predict interactions in these challenging cases, we simulated the cases of new drugs and targets by leaving them out of our dataset, training with the rest of the data and then obtaining predictions for these new drugs and new targets. in our case studies, we ranked the predicted interactions and investigated the top  <dig> interactions. in particular, we investigated two drugs, aripiprazole and theophylline, and two targets, glutamate receptor ionotropic, kainate  <dig> and xylose isomerase, respectively. tables  <dig> and  <dig> show the top  <dig> predictions for these drugs and targets.


1
5-hydroxytryptamine receptor 2a
1
camp-specific 3’,5’-cyclic phosphodiesterase 4a

2
alpha-1b adrenergic receptor
2
histone deacetylase 2

3
muscarinic acetylcholine receptor m2
3
adenosine receptor a2a

4
5-hydroxytryptamine receptor 2c
4
adenosine receptor a1

5
d dopamine receptor
5
cgmp-inhibited 3’,5’-cyclic phosphodiesterase a

6
alpha-2c adrenergic receptor
6
camp-specific 3’,5’-cyclic phosphodiesterase 4b

7
histamine h <dig> receptor
7
adenosine receptor a2b

8
muscarinic acetylcholine receptor m3
8
cgmp-specific 3’,5’-cyclic phosphodiesterase

9
d dopamine receptor

10
muscarinic acetylcholine receptor m1

11
5-hydroxytryptamine receptor 1b

13
d dopamine receptor

14
d dopamine receptor

15
5-hydroxytryptamine receptor 1d

16
alpha- <dig> adrenergic receptor

17
muscarinic acetylcholine receptor m5

18
muscarinic acetylcholine receptor m4

19
alpha-2b adrenergic receptor

20
5-hydroxytryptamine receptor 1a
targets in bold are the true known targets of the drugs




1
metharbital
1
d-xylitol

2
butabarbital

3
pentobarbital
3
l-xylopyranose

4
thiopental

5
butethal
5
d-sorbitol

6
secobarbital
6
d-xylulose

7
talbutal
7
vitamin c

8
hexobarbital
8
2-methylpentane- <dig> ,4-triol

9
barbital

10
amobarbital
10
-2-methylpentane- <dig> -diol

11
phenobarbital

12
butalbital

13
aprobarbital

14
methylphenobarbital

15
primidone

17
domoic acid

18
heptabarbital
drugs in bold are true known drugs of the targets




in our dataset, aripiprazole and theophylline are known to interact with  <dig> and  <dig> targets, respectively. out of the top  <dig> predicted targets for aripiprazole,  <dig> were correctly predicted as shown in table  <dig>  for theophylline, all of its  <dig> interactions were highly ranked in its top  <dig> list.

moreover, glutamate receptor ionotropic, kainate  <dig> and xylose isomerase have  <dig> and  <dig> interacting drugs in our dataset. out of the top  <dig> predicted drugs for glutamate receptor ionotropic, kainate  <dig>   <dig> were successfully predicted as shown in table  <dig>  for xylose isomerase, all its  <dig> drugs were predicted in the top  <dig>  these promising results show that our method is indeed reliable for predicting interactions in the cases of new drugs or targets.

finally, we investigated the possibility that some of the unconfirmed interactions in tables  <dig> and  <dig> might be true. for example, we observed that delta-type opioid receptor is indeed a target for aripiprazole, which was confirmed from the t3db online database  <cit> . we have also confirmed, using the stitch online database  <cit> , that adenosine receptor a <dig> and histone deacetylase  <dig> are true targets of theophylline as well. these findings suggest that the unconfirmed interactions in tables  <dig> and  <dig> may be true interactions that have not been discovered yet.

CONCLUSIONS
we proposed a simple yet effective ensemble method for predicting drug-target interactions. this method includes techniques for dealing with two types of class imbalance in the data, namely between-class imbalance and within-class imbalance. in our experiments, our method has demonstrated significantly better prediction performance than that of the state-of-the-art methods via cross-validation. in addition, we simulated new drug and new target prediction cases to evaluate our method’s performance under such challenging scenarios. our experimental results show that our proposed method was able to highly rank true known interactions, indicating that it is reliable in predicting interactions for new compounds or previously untargeted proteins. this is particularly important in practice for both identifying new drugs and detecting new targets for drug repositioning.

additional files

additional file  <dig> drug ids. this file contains the drugbank ids of the drugs used in this study. 





additional file  <dig> target ids. this file contains the uniprot ids of the targets used in this study. 





additional file  <dig> drug-target interaction matrix. this file contains the known drug-target interactions in the form of a matrix, where rows represent the drugs, and the columns represent the targets. drug-target pairs that interact have a  <dig> in their corresponding cell and  <dig> otherwise. 





additional file  <dig> list of drug features. this file contains the names of the drug features used in this study. more details on the features can be found at: http://bioconductor.org/packages/release/bioc/html/rcpi.html 





additional file  <dig> list of target features. this file contains the names of the target features used in this study. more details on the features can be found at: http://bidd <dig> nus.edu.sg/prof/manual/prof.htm 





additional file  <dig> drug feature vectors. this file contains the feature vectors for the drugs. 





additional file  <dig> target feature vectors. this file contains the feature vectors for the targets. 




