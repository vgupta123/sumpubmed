BACKGROUND
rna secondary structure analysis is a common task in research on rna and its manyfold functions. the first algorithm capable of computing the structure with minimum free energy  based on the nearest neighbour energy model was introduced in  <cit> . it was capable of calculating the mfe-structure only, and gave valuable results for short sequences. nevertheless, it was recognised that although predicted rna secondary structures contain, on average, 73% of known base pairs for rna sequences divided into domains of less than  <dig> nucleotides  <cit> , the predicted structures are sometimes quite different from the secondary structures obtained by comparative sequence analysis. after two decades of refined measurements of thermodynamic parameters, the problem persists  <cit> , and the limited credibility of the mfe-structure is attributed to intrinsic properties of the folding space, such as its partioning into families of similar structures and the kinetics of folding  <cit> .

the state of an rna molecule must be seen as a boltzmann ensemble of structures, some very similar, some quite distinct. the challenge of folding space analysis is to determine whether there is some family of structures in this ensemble that is internally similar, distinct from the rest, and collectively dominates the probabilities of all other families. the dominating family, if any, should be the biologically relevant one. for this reason, it is of interest to include suboptimal solutions in the process of structure elucidation. in  <cit>  zuker introduced an extended version of his algorithm, which was also capable of predicting certain suboptimal structures. this allows a researcher to check different predictions for correspondence to experimental results. the most recent version of the algorithm  <cit>  is implemented in the mfold package  <cit> .

a drawback of the zuker algorithm is the use of heuristic filters to circumvent the repeated output of the same structure. these filters remove not only redundant structures but also similar structures. this is desirable from a human observer's point of view, but precludes a probabilistic analysis. in  <cit> , an algorithm was introduced allowing for non-redundant and complete suboptimal folding, which is implemented in the tool rnasubopt from the vienna rna package  <cit> . it is designed to compute rigorously all structures within a given energy range and is guaranteed not to miss any structure that is feasible with respect to the nearest neighbour energy model. the major advantage of this approach is that it gives access to all suboptimal structures, i.e. the complete folding space of an rna sequence. however, as the number of structures is exponentially related to sequence length  <cit> , this method produces a large number of structures, which are laborious to analyse.

the free energies of rna structures can be imagined as a rough landscape over the folding space. the folding space is described by the notion of neighbourhood, which in the case of rna secondary structure is the difference in exactly one base pair. a structure having only neighbours with higher free energy is a local minimum and forms the bottom of a valley. all structures that can be reached by neighbour moves  while increasing the energy form a valley in the landscape and can be seen as a family of structures. a structure having neighbours in more than one valley is referred to as a saddle point in the landscape. rephrasing our challenge in this alpine terminology, the task is not only to find the lowest point overall, but to relate the depths of valleys to their population sizes, and to determine the family of which members are most likely to be encountered when this landscape is explored. the first method  for analysing the complete folding space in order to assess the relevance of a secondary structure was introduced by mccaskill in  <cit> . the author makes use of the partition function to address this property. in general, the partition function provides a measure of the total number of states  weighted by their individual energies at a particular temperature. for an rna sequence and the set s of all possible structures for this sequence, it is defined as follows:

q=∑j∈se−ejrt     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqucqgh9aqpdaaeqbqaaiabdwgalnaacaaaleqabawaasaaaeaacqghsislcqwgfbqrdawgaaadbagaemoaaogabeaaasqaaiabdkfasjabdsfaubaaaaaabagaemoaaomaeyici4saem4uamfabeqdcqghris5aogaaczcaiaaxmaadaqadaqaaiabigdaxagaayjkaiaawmcaaaaa@404f@

where ej is the energy of structure j, r the universal gas constant  and t the temperature in kelvin. in words, this is the sum of the boltzmann weighted energies of all structures. the probability p of a particular secondary structure x ∈ s is defined as:

p=e−exrt/q     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqggoaakcqwg4baecqggpaqkcqgh9aqpcqwglbqzdaahaawcbeqaamaalaaabagaeyoei0iaemyrau0aasbaawqaaiabdiha4bqabaaaleaacqwgsbgucqwgubavaaaaaogaei4la8iaemyuaelaaczcaiaaxmaadaqadaqaaiabikdayagaayjkaiaawmcaaaaa@3f7f@

where ex is the energy of structure x in kcal/mol. intrinsic to this approach is that the probability is proportional to the  energy of a structure. hence, this approach provides no further information on structural relevance. no individual structure can have a higher probability than a structure with lower free energy, and the mfe-structure is always the most probable one; albeit with an individual probability that is often very close to zero. this problem has already been stated in  <cit> , and the author also provides a means to alleviate it. instead of computing the probability of a complete structure, the probabilities of atomic structural elements, i.e. base pairs, are computed. displaying these in a matrix, as squares with area proportional to the probability, results in the so called "dot plot" for base pairing probabilities. this visualisation shows all possible base pairs and allows for the detection of alternative structures with high probability.

the partition function cannot only be used to calculate the probabilities of individual structures or base pairs. in  <cit> , ding and lawrence introduced a statistical sampling algorithm that is implemented in the tool sfold. in each step of the recursive backtracing procedure, base pairs and the structural elements they belong to are sampled according to their probabilities, obtained from the partition function. features of the sampling procedure are that each run is likely to produce a different sample and that the same structure can be sampled multiple times, where the mfe-structure is the most frequent structure, as it has the highest probability. nevertheless, the mfe-structure is not guaranteed to be present in the sample, especially for long sequences. the authors showed that sampling the folding space of the spliced leader of leptomonas collosoma could give structures from two families. these two families, which were defined by manual alignment of the sampled structures, correspond to the alternating structures of this conformational switch. this improves over a non-probabilistic sampling procedure yielding simlar results  <cit> .

another tool analysing the complete folding space of an rna, or part thereof, is barriers  <cit>  by flamm et al. it is designed to find local minima and saddle points connecting these, and in addition it generates the so-called "barrier tree" as a visualisation of the landscape. in the barrier tree, the local minima are leaves and saddle points are nodes connecting either two local minima, a local minimum and a saddle point, or two saddle points. the length of an edge corresponds to the energy difference between the connected elements.

common to all approaches is the attempt to partition the folding space into structural families and to derive features of each such family. for the partitioning, zuker uses structural similarity based on a distance measure, mccaskill base pairs, ding and lawrence similarity of sampled structures and flamm et al. the affiliation to the same valley. one problem persists: exhaustive enumeration is slow, while sampling cannot clearly designate a dominating family.

in principle, the local minima in the folding space neighbourhoods can be taken as representatives of all the families. unfortunately, no algorithm has been found that computes these representatives directly, i.e. without explicit enumeration of all individual structures. from a more macroscopic point of view, the notion of neighbourhood based on base pair opening and closing seems too low-level anyway: two alternative structures may both have  a cloverleaf shape, but not share a single base pair, and hence belong to different families. having the same shape is therefore a stronger abstraction. it retains adjacency and nesting of stacks and hairpins. it gives us the option of regarding or disregarding the presence of bulges. and it completely abstracts from individual base pairs and their location in the sequence. this idea has been formalized in the approach of abstract shape analysis of rna  <cit> . each shape is a distinct class of structures, which has a representative structure, shrep for short, of minimal free energy within the shape. these shreps can be computed directly – avoiding the burden of exhaustive enumeration of individual structures. it has been shown that computing the k lowest-energy shreps provides useful information. abstract shape analysis, as described in  <cit> , can also provide precise accounts of the number of structures within each shape – but perhaps surprisingly, it does not provide the overall probability of a shape. this is the classical challenge formulated above, and a solution based on the concept of shapes will be described in this contribution.

outline of probabilistic shape analysis
complete probabilistic shape analysis computes, for each shape, the probability sum of the structures within that shape. while this goal is simply stated, it is more difficult and computationally more costly to achieve than simple shape analysis. our presentation is organised as follows:

we first show how to compute the shapes and boltzmann-weighted energies of individual structures, and, by analogous means, the partition function. we then combine these calculations by a programming technique called classified dynamic programming. it allows to accumulate the boltzmann-weighted energies of all structures by shape. we then study the algorithmic efficiency of this calculation, where we find that it avoids exponential relationship to the number of structures, but is exponentially related to the number of shapes. in sharp contrast to the number of structures, the number of shapes is typically small enough to make the approach practical. finally, we report on applications of complete probabilistic shape analysis to several types of rna, and discuss the results.

RESULTS
in the first three subsections, we explain the mathematical model underlying our new type of analysis.  subsequently, we report on the findings of various applications of the method.

modelling the folding space
rna secondary structures can be represented as strings, base pair lists, graphics, and in many other forms. when they are to be analysed under different objective functions, and when pseudoknots are not involved, rna secondary structures are most conveniently represented as trees. trees allow the pattern of helix adjacency and nesting that characterises a secondary structure to be represented naturally. the tree-like representations presented here will not subsequently be computed. instead, various secondary structure features will be computed , and the tree-like structure representations will serve as a common model for the precise and uniform definition of these derived features.

our structure representations are rooted, ordered, labelled trees. on their leaf nodes, in left to right order, the labels spell out the primary sequence, built from nucleotides a, c, g and u. the inner nodes of the tree are labelled by operators related to the structural features of rna: single stranded regions , hairpin loops , stacked base pairs that form stacking regions , 5' and 3' bulges , internal loops  and multiloops . multiloops comprise a closing base pair and a list of adjacent  structure elements inside. for mathematical completeness, we also need operator e denoting an empty list of adjacent structures.

it is important to note that not all such trees or formulas represent legal structures. for example, ml, 'g') is valid as a formula – every operator has the right number and type of arguments – but not valid as a structure, since the notion of a multiloop implies that there are at least two closed substructures inside. rules for building trees that are valid structures can be given in the form of a tree grammar. the mathematical appeal of a tree grammar is that, besides providing a precise definition of the folding space associated with a given rna molecule, it can automatically be converted into a parsing algorithm, based on dynamic programming, that evaluates this folding space. for example, it can find the minimal free energy structure, or derive any other type of information that can be described in the systematic fashion introduced below.

a tree grammar for rna secondary structures is shown in table  <dig>  we use an ascii representation of grammar rules, which is both easy to read and suitable for algorithm generation. a clause such as

u = f <<< x ~~~ y | | |

g <<< z

says that a tree of type u can be built either with operator f being applied to subtrees of type x and y, or with operator g being applied to a subtree of type z.

our grammar has been written to exclude structures with isolated base pairs, as such "lonely pairs" can be considered not to occur in native structures. where such lonely pairs are energetically favourable, this is probably an artefact of the energy model used . optionally, however, our program rnashapes offers calculations that include such pairs. the grammar also imposes a minimal length of  <dig> on the turns inside hairpin loops. readers are invited to derive some trees with this grammar, to assure themselves that invalid structures cannot be derived.

the folding space f of a sequence s is now formally defined as the set of all trees of type struct that exhibit s as their sequence of leaves. care has been taken to ensure that the grammar is non-ambiguous: each structure can be represented uniquely by a tree, derived by the rules of the grammar in exactly one way. such non-ambiguity is essential for a mathematically correct probabilistic analysis, as has recently been analysed in  <cit> . showing the non-ambiguity of a grammar is often difficult. for our grammar, we succeeded with the automatic proof technique presented in  <cit> .

the grammar presented here is actually a simplified version of the full grammar used in our implementation. more details of the full grammar are given in the sections on algorithmics and efficiency analysis.

deriving features from structures
as our structures are formulas, we can derive various kinds of information in a most uniform way: we simply interpret the operators as functions operating on a particular domain of interest, such as shapes, energies or strings. such interpretations consist of one function per operator, and will be called evaluation algebras. the value resulting from the interpretation of a structure x in algebra α will be denoted xα. the convenience of this formalization is that whatever feature of interest we cast in terms of an evaluation algebra, we can be sure that the parsing algorithm that evaluates the folding space can compute this feature  <cit> . we will specify evaluation algebras that compute free energies, boltzmann-weighted energies, shapes and string representations of structures. when an interpretation is given, by convention, operator names are converted to lower case and superscripted. this means, for example, that operator sr will be given many different interpretations – as function sren, which adds the free energy increment of stack extension to the enclosed structure's energy, as srbw, which computes the boltzmann-weighted energy of the extended substructure in the same situation, as srπ, which computes the stack extension's effect on the shape xπ. of structure x, and as sr, which adds another pair of brackets around the string representation of the enclosed substructure.

string representation of structures
as a simple first example, we define the interpretation x that derives the dot-bracket representation of structure x. "" is meant as an abbreviation for "dot-bracket representation".

ss = ...|l|     

hl =      

sr, b) =  ╫)     

bl, b) =  ╫)     

br , l, b) =  ╫ ...|l|)     

il, l', b) =  ╫ ...|l'|)     

ml, b) =  ╫)     

ad, c = x ╫ c     

e = ε     

where ...k means k dots, |l| is the length of string l, ε denotes the empty string and ╫ is string concatenation. the added characters  or . are given in boldface.

free energy
in the energy algebra, each operator, representing a structural feature, is interpreted as a function adding a certain free energy increment to the energy of its embedded substructure. evaluating structure x under this interpretation yields energy value xen. base pairs and stack extensions add stabilising  energies, while most kinds of bulges and loops add destabilising  energies. the concrete energy parameters have been determined experimentally  <cit> . we abbreviate them by δsr, δbl etc. using these parameters, we can interpret sr by function sren in the following way:

sren  = δ sr  + xen     

energy functions for the other operators can be given in a similar way. comparing sr to its free energy interpretation sren, we see that the tree representing a structure has simply been replaced by an isomorphic formula that computes its free energy.  under this interpretation, our example structure from figure  <dig> becomes

aden,aden, g, u), a), c), g),aden, e)))=− <dig> kcal/mol     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaewacaaabagaemyyaemaemizaq2aawbaasqabeaacqwglbqzcqwgubgbaagccqggoaakcqwgzbwccqwgzbwcdaahaawcbeqaaiabdwgaljabd6gaubaakiabcicaoiabdoeadjabdoeadjabcmcapiabcycasaqaaiabdggahjabdsgaknaacaaaleqabagaemyzaumaemoba4gaaogaeiikagiaem4camnaemocai3aawbaasqabeaacqwglbqzcqwgubgbaagccqggoaakcqwgdbwqcqggsaalcqqggaaicqwgzbwccqwgybgcdaahaawcbeqaaiabdwgaljabd6gaubaakiabcicaoiabdeeahjabcycasiabbccagiabdohazjabdkhaynaacaaaleqabagaemyzaumaemoba4gaaogaeiikagiaemyvaulaeiilawiaeeiiaaiaemyaakmaemibaw2aawbaasqabeaacqwglbqzcqwgubgbaagccqggoaakcqwgbbqqcqggsaalcqqggaaicqwghbwrcqggsaalaeaaaeaacqwgobaacqwgsbabdaahaawcbeqaaiabdwgaljabd6gaubaakiabcicaoiabdoeadjabcycasiabbccagiabdwfavjabdgeabjabdeeahjabdoeadjabcycasiabbccagiabdeeahjabcmcapiabcycasiabbccagiabdeeahjabcycasiabbccagiabdwfavjabcmcapiabcycasiabbccagiabdgeabjabcmcapiabcycasiabbccagiabdoeadjabcmcapiabcycasiabbccagiabdeeahjabcmcapiabcycasaqaaaqaaiabdggahjabdsgaknaacaaaleqabagaemyzaumaemoba4gaaogaeiikagiaem4camnaem4cam3aawbaasqabeaacqwglbqzcqwgubgbaagccqggoaakcqwgbbqqcqggpaqkcqggsaalcqqggaaicqwgfbqrcqggpaqkcqggpaqkcqggpaqkcqgh9aqpcqghsislcqai0aancqgguaglcqaixaqmcqaiwaamcqwgrbwacqwgjbwycqwghbqycqwgsbabcqggvawlcqwgtbqbcqwgvbwbcqwgsbabaagaaczcaiaaxmaadaqadaqaaiabigdaxiabiodazagaayjkaiaawmcaaaaa@b799@

boltzmann-weighted energies
when computing probabilities of structures according to eq.  <dig>  it is convenient to defer division by q until the very end, and compute boltzmann-weighted energies instead, according to the equation xbw = e−xen/rt
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwglbqzdaahaawcbeqaaiabgkhitiabdiha4naacaaameqabagaemyzaumaemoba4gaasgaei4la8iaemouailaemivaqfaaaaa@36c7@

hence, the boltzmann-weighted energy algebra can be derived from the free energy algebra:

srbw=e−sren/rt     =e−+xen)/rt     =e−δsr/rt⋅e−xen/rt     =e−δsr/rt⋅xbw     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakegabma5buaabmqaemaaaaqaaiabdohazjabdkhaynaacaaaleqabagaemoyaimaem4dachaaogaeiikagiaemyyaemaeiilawiaemieag3aawbaasqabeaacqwgibgycqwg3bwdaagccqggsaalcqwgibgycqggpaqkaeaacqgh9aqpaeaacqwglbqzdaahaawcbeqaaiabgkhitiabdohazjabdkhaynaacaaameqabagaemyzaumaemoba4gaasgaeiikagiaemyyaemaeiilawiaemieag3aawbaawqabeaacqwglbqzcqwgubgbaawccqggsaalcqwgibgycqggpaqkcqggvawlcqwgsbgucqwgubavaagccawljagaaczcamaabmaabagaegymaejaeginaqdacagloagaayzkaaaabaaabagaeyypa0dabagaemyzau2aawbaasqabeaacqghsislcqggoaakcqah0oazdawgaaadbagaem4uamlaemouaifabeaaliabcicaoiabdggahjabcycasiabdkgaijabcmcapiabgucariabdiha4naacaaameqabagaemyzaumaemoba4gaasgaeiykakiaei4la8iaemouailaemivaqfaaogaaczcaiaaxmaadaqadaqaaiabigdaxiabiwda1agaayjkaiaawmcaaaqaaaqaaiabg2da9aqaaiabdwgalnaacaaaleqabagaeyoei0iaeqitdq2aasbaawqaaiabdofatjabdkfasbqabawccqggoaakcqwghbqycqggsaalcqwgibgycqggpaqkcqggvawlcqwgsbgucqwgubavaagccqghfly1cqwglbqzdaahaawcbeqaaiabgkhitiabdiha4naacaaameqabagaemyzaumaemoba4gaasgaei4la8iaemouailaemivaqfaaogaaczcaiaaxmaadaqadaqaaiabigdaxiabiada2agaayjkaiaawmcaaaqaaaqaaiabg2da9aqaaiabdwgalnaacaaaleqabagaeyoei0iaeqitdq2aasbaawqaaiabdofatjabdkfasbqabawccqggoaakcqwghbqycqggsaalcqwgibgycqggpaqkcqggvawlcqwgsbgucqwgubavaagccqghfly1cqwg4baedaahaawcbeqaaiabdkgaijabdeha3baakiaaxmaacawljawaaewaaeaacqaixaqmcqai3awnaiaawicacaglpaaaaaaaaa@b294@

again, the other functions can be derived in a similar way. like energies summate over substructures; boltzmann-weighted energies multiply.

for our example structure, the boltzmann-weighted energy is  <dig>  and q =  <dig> , resulting in a probability p =  <dig> .

shapes
rna abstract shapes are a generic concept. they are defined by means of abstraction functions preserving varying amounts of detail. these functions are homomorphisms from structures to another tree-like domain, preserving adjacency and nesting of substructures. for the trees representing shapes, we use  <dig> operators: op  represents the shape of all structures without base pairs, cl  represents a helical region, ad and e are re-used here to represent lists of adjacent shapes. we present two shape abstraction functions π <dig> and π <dig>  known as level- <dig> and level- <dig> abstraction  <cit> .

ssπ5=opssπ3=ophlπ5=clhlπ3=clsrπ5=xπ5srπ3=xπ3blπ5=xπ5blπ3=clbrπ5=xπ5brπ3=clilπ5=xπ5ilπ3=clmlπ5=clmlπ3=cladπ5=if xπ5=opadπ3=if xπ3=opthen yπ5then yπ3else adelse adeπ5=eeπ3=e
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaewcgaaaaaaabagaem4camnaem4cam3aawbaasqabeaaiigacqwfapaciiaacqgf1aqnaagccqggoaakcqwgsbabcqggpaqkaeaacqgh9aqpaeaacqwgpbwtcqwgqbauaeaacqwgzbwccqwgzbwcdaahaawcbeqaaiab=b8awjab+ndazaaakiabcicaoiabdygasjabcmcapaqaaiabg2da9aqaaiabd+eapjabdcfaqbqaaiabdigaojabdygasnaacaaaleqabagae8hwdanae4xnaudaaogaeiikagiaemyyaemaeiilawiaemibawmaeiilawiaemoyaimaeiykakcabagaeyypa0dabagaem4qamkaemitawkaeiikagiaemyraukaeiykakcabagaemiaagmaemibaw2aawbaasqabeaacqwfapaccqgfzawmaagccqggoaakcqwghbqycqggsaalcqwgsbabcqggsaalcqwgibgycqggpaqkaeaacqgh9aqpaeaacqwgdbwqcqwgmbatcqggoaakcqwgfbqrcqggpaqkaeaacqwgzbwccqwgybgcdaahaawcbeqaaiab=b8awjab+vda1aaakiabcicaoiabdggahjabcycasiabdiha4naacaaaleqabagae8hwdanae4xnaudaaogaeiilawiaemoyaimaeiykakcabagaeyypa0dabagaemieag3aawbaasqabeaacqwfapaccqgf1aqnaaaakeaacqwgzbwccqwgybgcdaahaawcbeqaaiab=b8awjab+ndazaaakiabcicaoiabdggahjabcycasiabdiha4naacaaaleqabagae8hwdanae43mamdaaogaeiilawiaemoyaimaeiykakcabagaeyypa0dabaacbigae0heag3aawbaasqabeaacqwfapaccqgfzawmaaaakeaacqwgibgycqwgsbabdaahaawcbeqaaiab=b8awjab+vda1aaakiabcicaoiabdggahjabcycasiabdygasjabcycasiabdiha4naacaaaleqabagae8hwdanae4xnaudaaogaeiilawiaemoyaimaeiykakcabagaeyypa0dabagaemieag3aawbaasqabeaacqwfapaccqgf1aqnaaaakeaacqwgibgycqwgsbabdaahaawcbeqaaiab=b8awjab+ndazaaakiabcicaoiabdggahjabcycasiabdygasjabcycasiabdiha4naacaaaleqabagae8hwdanae43mamdaaogaeiilawiaemoyaimaeiykakcabagaeyypa0dabagaem4qamkaemitawkaeiikagiaemieag3aawbaasqabeaacqwfapaccqgfzawmaagccqggpaqkaeaacqwgibgycqwgybgcdaahaawcbeqaaiab=b8awjab+vda1aaakiabcicaoiabdggahjabcycasiabdiha4naacaaaleqabagae8hwdanae4xnaudaaogaeiilawiaemibawmaeiilawiaemoyaimaeiykakcabagaeyypa0dabagaemieag3aawbaasqabeaacqwfapaccqgf1aqnaaaakeaacqwgibgycqwgybgcdaahaawcbeqaaiab=b8awjab+ndazaaakiabcicaoiabdggahjabcycasiabdiha4naacaaaleqabagae8hwdanae43mamdaaogaeiilawiaemibawmaeiilawiaemoyaimaeiykakcabagaeyypa0dabagaem4qamkaemitawkaeiikagiaemieag3aawbaasqabeaacqwfapaccqgfzawmaagccqggpaqkaeaacqwgpbqacqwgsbabdaahaawcbeqaaiab=b8awjab+vda1aaakiabcicaoiabdggahjabcycasiabdygasjabcycasiabdiha4naacaaaleqabagae8hwdanae4xnaudaaogaeiilawiafmibawmbauaacqggsaalcqwgibgycqggpaqkaeaacqgh9aqpaeaacqwg4baedaahaawcbeqaaiab=b8awjab+vda1aaaaoqaaiabdmgapjabdygasnaacaaaleqabagae8hwdanae43mamdaaogaeiikagiaemyyaemaeiilawiaemibawmaeiilawiaemieag3aawbaasqabeaacqwfapaccqgfzawmaagccqggsaalcuwgsbabgaqbaiabcycasiabdkgaijabcmcapaqaaiabg2da9aqaaiabdoeadjabdyeamjabcicaoiabdiha4naacaaaleqabagae8hwdanae43mamdaaogaeiykakcabagaemyba0maemibaw2aawbaasqabeaacqwfapaccqgf1aqnaagccqggoaakcqwghbqycqggsaalcqwg4baedaahaawcbeqaaiab=b8awjab+vda1aaakiabcycasiabdkgaijabcmcapaqaaiabg2da9aqaaiabdoeadjabdyeamjabcicaoiabdiha4naacaaaleqabagae8hwdanae4xnaudaaogaeiykakcabagaemyba0maemibaw2aawbaasqabeaacqwfapaccqgfzawmaagccqggoaakcqwghbqycqggsaalcqwg4baedaahaawcbeqaaiab=b8awjab+ndazaaakiabcycasiabdkgaijabcmcapaqaaiabg2da9aqaaiabdoeadjabdyeamjabcicaoiabdiha4naacaaaleqabagae8hwdanae43mamdaaogaeiykakcabagaemyyaemaemizaq2aawbaasqabeaacqwfapaccqgf1aqnaagccqggoaakcqwg4baedaahaawcbeqaaiab=b8awjab+vda1aaakiabcycasiabdmha5naacaaaleqabagae8hwdanae4xnaudaaogaeiykakcabagaeyypa0dabagaeeyaakmaeeozaymaeeiiaaiaemieag3aawbaasqabeaacqwfapaccqgf1aqnaagccqgh9aqpcqwgpbwtcqwgqbauaeaacqwghbqycqwgkbazdaahaawcbeqaaiab=b8awjab+ndazaaakiabcicaoiabdiha4naacaaaleqabagae8hwdanae4xnaudaaogaeiilawiaemyeak3aawbaasqabeaacqwfapaccqgfzawmaagccqggpaqkaeaacqgh9aqpaeaacqqgpbqacqqgmbgzcqqggaaicqwg4baedaahaawcbeqaaiab=b8awjab+ndazaaakiabg2da9iabd+eapjabdcfaqbqaaaqaaaqaaiabbsha0jabbigaojabbwgaljabb6gaujabbccagiabdmha5naacaaaleqabagae8hwdanae4xnaudaaagcbaaabaaabagaeeidaqnaeeiaagmaeeyzaumaeeoba4maeeiiaaiaemyeak3aawbaasqabeaacqwfapaccqgfzawmaaaakeaaaeaaaeaacqqglbqzcqqgsbabcqqgzbwccqqglbqzcqqggaaicqwgbbqqcqwgebarcqggoaakcqwg4baedaahaawcbeqaaiab=b8awjab+vda1aaakiabcycasiabdmha5naacaaaleqabagae8hwdanae4xnaudaaogaeiykakcabaaabaaabagaeeyzaumaeeibawmaee4camnaeeyzaumaeeiiaaiaemyqaekaemiraqkaeiikagiaemieag3aawbaasqabeaacqwfapaccqgfzawmaagccqggsaalcqwg5bqedaahaawcbeqaaiab=b8awjab+ndazaaakiabcmcapaqaaiabdwgalnaacaaaleqabagae8hwdanae4xnaudaaagcbagaeyypa0dabagaemyraueabagaemyzau2aawbaasqabeaacqwfapaccqgfzawmaaaakeaacqgh9aqpaeaacqwgfbqraaaaaa@e8b1@

π <dig> maps all helices to the cl operator, abstracting from helix length and interruptions by bulges or internal loops. except for the completely unpaired structure, no single-stranded regions at all are retained. in contrast to this, π <dig> introduces a new cl operator in the shape tree, whenever a helix is interrupted by a bulge or internal loop. however, the type of interruption is not recorded. figure  <dig> shows a structure and the two shape trees according to π <dig> and π <dig> 

complete probabilistic shape analysis
given the tree grammar defining valid structures, and a particular rna sequence s, a parsing algorithm can construct the complete folding space f. for all x ∈ f, it can compute values xen, xbw,  xπ and x, where π is one of our shape abstraction functions. we shall make use of the notion of an exploded folding space, which is a list of derived values, one for each member of f. exploded folding spaces are convenient for formal definitions, but they must be avoided in actual computations, as their size increases exponentially with the length of s. this is possible with dynamic programming.

to explain the model underlying complete probabilistic shape analysis, we proceed in three steps. we first review simple shape analysis . then we describe the computation of the partition function as well as the structure of maximal boltzmann weight. finally, we combine the objectives of both types of analysis to define shape probabilities.

simple shape analysis
consider the list lshreps of all shape-representative structures  for s, together with their energies and shapes, and sorted on the energy component. here, π ) is short for {xπx ∈ f}; it is called the shape space of s.

lshreps =      

for given k, simple shape analysis computes the first k elements of this list, in o time and o space.

computing boltzmann-weighted energies
our new goal is to compute boltzmann-weighted energies of shapes, defined as the accumulated boltzman-weighted energies of all structures within a shape. we want to compute the value triple

b=)     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgcbgqcqgh9aqpcqggoaakcqwgrbqucqggsaalcqwg4baedaqhaawcbagaem4ba8maemicaanaemidaqhabagaemoyaimaem4dachaaogaeiilawiaemieag3aa0baasqaaiabd+gavjabdchawjabdsha0bqaaiabcicaoiabgwsixlabcmcapaaakiabcmcapiaaxmaacawljawaaewaaeaacqaixaqmcqai5aqoaiaawicacaglpaaaaaa@4abb@

where q=∑{xbw|x∈f}
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgrbqucqgh9aqpdaaeabqaaiabcuha7jabdiha4naacaaaleqabagaemoyaimaem4dachaaogaeiifawnaemieagnaeyici4saemoraykaeiikagiaem4camnaeiykakiaeiyfa0haleqabeqdcqghris5aaaa@4118@, the sum of all boltzmann-weighted energies, and xopt ∈ f is the structure of maximal boltzmann-weighted energy.

we define a function hb, which computes b from the exploded folding space

lbw = .     

by accumulation of boltzmann-weighted energies in the first component and maximization of boltzmann-weighted energies in the second, while recording the structure of highest boltzmann weight in its string representation in the third component. for a single structure, both energy sum and individual energy coincide, which explains why xbw occurs twice in equation  <dig>  details are given in the methods section.

computing shape probabilities
our ultimate goal is to compute the probabilities of all shapes in π). to this end, we need to accumulate boltzmann-weighted energies per shape. the accumulated weight of shape p is

x∑pbw=∑{xbw|x∈f,xπ=p}     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg4baedaqhaawcbawaaabqaeaacqwgwbacawqabeqaoiabgghildaaleaacqwgibgycqwg3bwdaagccqgh9aqpdaaeabqaaiabcuha7jabdiha4naacaaaleqabagaemoyaimaem4dachaaogaeiifawnaemieagnaeyici4saemoraykaeiikagiaem4camnaeiykakiaeiilawiaemieag3aawbaasqabeaaiigacqwfapacaagccqgh9aqpcqwgwbaccqgg9bqfasqabeqaniabgghildgccawljagaaczcamaabmaabagaegomaijaegymaedacagloagaayzkaaaaaa@5367@

and the shape's probability is x∑pbw/q
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg4baedaqhaawcbawaaabqaeaacqwgwbacawqabeqaoiabgghildaaleaacqwgibgycqwg3bwdaagccqggvawlcqwgrbquaaa@36bb@.

along with the accumulated weights, we also want to compute the shapes themselves, together with their shreps xopt,p
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg4baedaqhaawcbagaem4ba8maemicaanaemidaqnaeiilawiaemicaahabagaeiikagiaeyyxictaeiykakcaaaaa@38d8@ and their boltzmann-weighted energies xopt,pbw
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwg4baedaqhaawcbagaem4ba8maemicaanaemidaqnaeiilawiaemicaahabagaemoyaimaem4dachaaaaa@37a0@.  our desired result is therefore a complete list of all these values, in the form

p=     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqgh9aqpcqggbbwwcqggoaakcqwgwbaccqggsaalcqggoaakcqwg4baedaqhaawcbawaaabqaeaacqwgwbacawqabeqaoiabgghildaaleaacqwgibgycqwg3bwdaagccqggsaalcqwg4baedaqhaawcbagaem4ba8maemicaanaemidaqnaeiilawiaemicaahabagaemoyaimaem4dachaaogaeiilawiaemieag3aa0baasqaaiabd+gavjabdchawjabdsha0jabcycasiabdchawbqaaiabcicaoiabgwsixlabcmcapaaakiabcmcapiabcmcapiabcyha8jabdchawjabgigiojgaciab=b8awjabcicaoiabdaeagjabcicaoiabdohazjabcmcapiabcmcapiabc2fadjaaxmaacawljawaaewaaeaacqaiyagmcqaiyagmaiaawicacaglpaaaaaa@68c4@

we define a function hp that computes p from the exploded folding space

lsh  =      

by computing shape abstractions in the first component, and applying hb on the other components in a shape-wise fashion. details are given in the methods section.

we now report our findings from applications of complete probabilistic shape analysis to various types of rna.

transfer rna
applying the shape probability algorithm to the alanine trna of natronobacterium pharaonis  gives the results shown in figure  <dig> 

the shape holding the mfe-structure  shows a high probability, whereas the other shapes have probabilities below 1%. this means that this unmodified rna is very unlikely to occur in the cloverleaf shape. this is consistent with biological knowledge and clearly expresses the need for other mechanisms, such as base modifications, to ensure that the cloverleaf structure is actually achieved.

attenuator
the phes-phet-attenuator of e. coli  is known to switch from a translationally inactive to a translationally active conformation under specific conditions. these two conformations correspond to two valleys in the structure landscape that are separated by a saddle point . in terms of shape analysis, this means that two shapes should be present with reasonable probability. the corresponding experiment yields the results summarised in figure  <dig>  the analysis shows that shapes  <dig> and  <dig> are rather similar with respect to their shreps, so their probabilities can be added. this means that the shape with two hairpins, which may be embedded in a multiloop, has a probability of  <dig>  and the shape with one hairpin has a probability of  <dig> . shape 1+ <dig> corresponds to the "off" position of the switch and the higher probability inidcates that this is its native position. the "on" position  is less probable, indicating the need for some external effector to trigger the switch.

leader of ptsghi
the ptsghi operon in b. subtilis  includes the genes involved in glucose transport by the phosphotransferase system. in  <cit> , it was shown that expression of this operon is controlled at the level of transcript elongation by a protein-dependent riboswitch. in the absence of glucose, a transcriptional terminator prevents elongation into the structural genes. in the presence of glucose, the glct protein is activated and binds and stabilises an alternative structure that overlaps the terminator and prevents termination. applying rnashapes to calculate probabilities of shapes gave the results shown in figure  <dig>  the first striking result of this analysis is that a shape holding an energetically less favourable shrep  is the most probable one. again, we can further merge shapes by looking at their shreps. only shreps  <dig> and  <dig> carry the antiterminator hairpin , whereas shreps  <dig> and  <dig> carry the terminator hairpin. summation of the probabilities gives  <dig>  for the terminating conformations and  <dig>  for the read-through conformations. this corresponds to experimental results showing that the switch is natively in the "off" position and is triggered by the glct protein to enable transcript elongation.

precursor of microrna lin-4
micrornas  are small  regulatory rnas that are processed from larger precursors, for which the secondary structure is assumed to play an important role. a common feature of all known precursors is that they form a hairpin with significantly lower energy than for random sequences of the same dinucleotide distribution  <cit> . this suggests a well-defined secondary structure, which implies that the corresponding shape should have a very high probability. an analysis of the precursor of c. elegans lin- <dig>   <cit>  reveals the shape  with probability  <dig> , which means that only  <dig> in  <dig>  molecules has a different shape, or that each molecule spends  <dig> % of its lifetime in the single hairpin shape. a probability cut-off of 10- <dig> was used for the output, which might be the reason that no further shapes appear.

another fact that has to be considered is that the shape abstraction might have been too strong. for this reason, we performed an analysis with abstraction level  <dig>  retaining more structural detail, and giving the results shown in figure  <dig> 

all shreps are very similar, so it is reasonable to combine them in the single hairpin shape. their probability sum is  <dig> , which except for rounding inaccuracies is the same as the probability of the single hairpin shape.

mrna
the previous sections show how the probabilities of shapes can be used to analyse functional rnas and their specific structural properties. but what about messenger rna ? as the structure of an mrna is generally assumed to be less important, and because evolution has to ensure the correct coding of amino acids, we would expect the results to be inclonclusive. interestingly, analyses of numerous mrna coding sequences revealed a wide variety of results. in figure  <dig> we give two examples that can be seen as extremal observations. the "expected" case is observed for enst <dig>  , where we find nine shapes with remarkably high probabilities, and four cases of "overtaking", where the shape probability ranking contradicts the ranking of shreps by energy. the other extreme is observed for enst <dig>  , where we find a hairpin shape with probability  <dig>  inside the coding sequence. reasons for this diversity of results may be that at least some coding sequences carry structural features necessary for correct function, or that structure, no matter whether well-defined or ill-defined, was never selected for or against.

approximating shape probabilities via sampling
in the methods section, we show that complete probabilistic shape analysis has a "slow" exponential term in its runtime requirements. this makes probabilistic shape analysis unfeasible for long sequences. hence, to allow the analysis of such sequences, we combine the stochastic sampling introduced in  <cit>  with a-posteriori shape abstraction. a sample from the structure space holds m structures together with their shapes, on which classification is performed. the probability of shape p can then be approximated by its frequency fp in the sample. the accuracy of this approach depends on the sample size m, which must be large enough to achieve statistical confidence. assuming the counts to have a poisson distribution with parameter mp, we can approximate them with a normal distribution with mean mp and variance mp for large sample sizes. to allow 10% deviation of the estimated frequency fp within a 95% confidence interval, we require that 2var⁡
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqaiyagmdagcaaqaaigbcaha2jabcggahjabckhaybwcbeaaaaa@31e5@ ≤  <dig>  mean or mp ≥  <dig>  or, with lspoi being the lowest shape probability of interest, m ≥ 400/lspoi. thus, m =  <dig> is sufficient to achieve reasonable results for the shapes with high probability, and this number is independent of the sequence length. this result was confirmed by empirical analyses .

the remaining question is, when to use the exact algorithm and when the sampling? the running times for the two methods are summarised in table  <dig> and show that for sequences up to  <dig> nt the exact algorithm should be used, whereas for longer sequences the sampling algorithm is favourable.

more recently, the approach of  <cit>  was extended by a clustering step and computation of centroids for each cluster  <cit> . the clusters can be seen as analogous to our shapes, though without an explicit notion of abstraction.

discussion
mathematical and algorithmic aspects
abstract shapes are a mathematically precise, intuitively simple and non-heuristic means for partitioning the folding space into classes of structures. they enable us to derive synoptic properties of these classes such as the shreps of each class  <cit>  or the accumulated class probabilities, as introduced here. the granularity of the partitioning can be adapted to the length of the sequence by choosing different abstraction levels. simple shape analysis is possible with the same algorithmic complexity as standard mfe folding ), while probabilistic shape analysis requires o, where p depends on the abstraction level chosen . when the exponential term becomes problematic, one can switch to probabilistic sampling with subsequent shape classification. however, there remains the challenge of finding an algorithm for probabilistic analysis for the k best shapes that avoids the o factor.

given such satisfactory mathematical and algorithmic properties, the question of whether shapes constitute an abstraction that is also biologically meaningful must not be overlooked.

biological adequacy of shapes
our idea is that a shape class comprises similar structures that can potentially perform the same function – with the consequence that looking at the shreps and their shape probabilities gives us a precise and complete account of a molecule's functional potential. this incurs the risk of overlooking an important feature when shapes exhibit substantial internal variation, while only their shrep is submitted for further scrutiny.

we address this concern about variation within shape by two examples. in figure  <dig>  we show three extremal members of shape  for the c. elegans lin- <dig> mirna precursor.

this example shows that a shape can  hold structures with little similarity to that of the shrep. but note that these structures are taken from energy ranges high above the mfe, and therefore should not play a functional role. our second example shows  <dig> members of the cloverleaf shape of myc. capricolum trna-leu  . this is a complete snapshot of the low-energy membership of shape   ] in the range of  <dig>  kcal/mol above the mfe. all the members in this energy range resemble the shrep.

from our observations so far, it appears that the low-energy segment shows low variation within shape. nevertheless, a deeper mathematical analysis or empirical study of variation within shape is desirable.

significance of predicted structures
there has been an ongoing debate about the significance of low free energies achieved by a structure  <cit> . it is significant because of the need to assign some significance measure to a structure prediction. in various ways, these approaches compare the mfe of the native sequence to that of random sequences of the same mono- or dinucleotide distribution. according to the most recent study  <cit> , several classes of structural rna, such as type iii hammerhead ribozymes and u <dig> small nucleolar rnas, have lower folding energy than random rna of the same dinucleotide frequency.

CONCLUSIONS
probabilistic shape analysis allows us to approach the question of the significance of predicted structures from a new angle. we take the view that in the evolution of structure, competition comes not so much from sequence variation  as from alternative structures within the folding space. a different structure can come to dominate the native one because of very few mutational events, with the effect that a functional rna becomes nonfunctional. hence, evolution should strive to make the shape of a functional structure clearly dominate over other shapes. this not only stabilizes this structure in the overall boltzmann ensemble of the native sequence, but also protects against immediate loss of function because of a small number of mutations, so that there is time  to restabilize the structure by compensatory mutations, which we often observe.

this line of thought is consistent with our observations reported here, but it is by no means proven. an observation like that for enst <dig>  calls for further statistical or experimental work, to disprove or prove the biological relevance of a structural motif with shape probability  <dig>  inside this coding sequence. we propose that dominance of shape should be further investigated as a measure of structural significance.

