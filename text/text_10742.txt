BACKGROUND
functions of proteins are closely correlated with their subcellular locations. for example, assfalg et al.  <cit>  showed that there exists strong correlation between localization and proteins fold and localization can be utilized to predict structure class of proteins. it is thus desirable to accurately annotate subcellular location of proteins to elucidate their functions. in the past ten years, dozens of protein localization algorithms have been proposed based on different information sources such as amino acid composition, sorting signals, functional motifs, conserved domains, homology search, and protein-protein interaction  <cit> . a variety of machine learning techniques, such as svm and k-nearest neighbour classifiers, have been used in these prediction algorithms. although existent methods have achieved success at different degrees, a comprehensive evaluation study has shown that many of the reported prediction accuracies are far from being sufficient for genome wide protein localization prediction  <cit> .

recently, several research groups proposed to apply ensemble or integration of algorithms to protein localization prediction  <cit> . liu et al.  <cit>  proposed weighted and adaptive weighted voting algorithms in which the overall accuracy of a standalone algorithm is used as the weight. laurila and vihinen  <cit>  proposed an integrated method  which combines the predictions of multiple specialized binary localization prediction algorithms such as tmhmm and phobius. park et al.  <cit>  developed a linear discriminant analysis  method  to assign lda optimal weights for weighted voting. assfalg et al.  <cit>  proposed two ensemble localization algorithms; one is a scored voting scheme based on the ranks of the prediction accuracy of the predictors; the other chose j <dig> decision tree  classifier as the integration scheme. shen and burger  <cit>  proposed a two-layer decision tree method to improve the prediction accuracy of a single subcellular location. most of these ensemble algorithms integrated  <dig> or more standalone prediction methods for localization prediction without considering their relationships such as redundancy and complementarity. this makes these ensemble algorithms computationally intensive. furthermore, incorporation of unnecessary predictors into an ensemble algorithm may overfit the training data and result in degradation of its prediction performance, which has been reported recently for ensemble mitochondrion predictors  <cit> .

in this paper, we evaluated  <dig> standalone localization prediction algorithms and analyzed their bias and relationships in the prediction space of the resulting ensemble algorithms. we found that ensemble algorithms based on the combination of several specific predictors achieved comparable prediction performance as using all  <dig> predictors, suggesting that a high degree of redundancy exists among all individual predictors. we thus proposed a minimalist ensemble prediction algorithm for subcellular localization prediction and evaluated its performance on two data sets, which showed high performance and significant reduction of computational complexity and running time.

methods
standalone protein localization predictors
to implement our ensemble localization predictor, we selected  <dig> published localization prediction algorithms provided that the software or web server is publicly available, and batch submission is supported. these algorithms include yloc  <cit> , multiloc <dig>  <cit> , knowpred  <cit> , subcell  <cit> , wolfpsort  <cit> , bacello  <cit> , cello  <cit> , subloc  <cit> . we also included netloc  <cit> , a protein-protein interaction  based prediction method. these prediction methods differ in the features that characterize proteins targeting different subcellular locations  and the prediction algorithms. these diverse features include sorting signals, amino acid composition, known motifs or domains, homology search against a known dataset or database such as swissprot, evolutionary information such as phylogenetic profiles or sequence profiles, and protein-protein interaction. the overlap of the used features among localization predictors suggests that redundant predictions could be made when these prediction methods are combined to build an ensemble algorithm, which could mislead the prediction behaviour of the resulting ensemble algorithm.

in addition to amino acid sequence information, protein-protein interaction has been known as external information correlated to protein subcellular localization. a number of algorithms have been developed to utilize ppi features to predict protein localization . recently, our group developed netloc  <cit> , a kernel-based logistic regression  method, which can effectively extract ppi features to predict protein localization. considering that netloc simply used ppi as its features, we integrated netloc into our ensemble algorithms to compare the ensemble performances with and without a ppi-based predictor. in our experiments, ppi data of netloc is based on the whole saccharomyces cerevisiae physical ppi dataset obtained from biogrid database  <cit> . we exclude proteins overlapped with our yeast datasets from the ppi dataset to ensure independency between the training and testing datasets.

mapping of subcellular locations
different localization predictors may have different subcell resolutions. in order to compare their performances on genome wide datasets, we applied a location mapping scheme to map the subcellular locations of standalone predictors to unified  <dig> locations in the ensemble algorithms, including cytosol, mitochondrion, nucleus, secretory , and others. six classes of subcellular locations are mapped to secretory according to  <cit> : extracellular, plasma membrane, endoplasmic reticulum, golgi apparatus, lysosomal, and vacuolar. except for cytosol, mitochondrion, nucleus, and secretory, the remaining subcellular locations are categorized as others. for example, for cello, the following subcellular locations are mapped to secretory: extra, plas, er, vacu, golgi, and lyso; chlo, pero, and cytos are mapped to others. for wolfpsort, e.r., extr, plas, golg, lyso, and vacu are mapped to secretory; chlo, cysk, and pero are mapped to others.

contribution score
to explore the complementary relationship among the individual predictors used in an ensemble algorithm, we calculated contribution scores  <cit>  of component standalone prediction methods. this measure is used to evaluate the contribution of each individual classifier to the ensemble algorithm, and has been used for pruning large ensemble set. the main idea of the contribution score is that predictors that tend to make correct and minority predictions among other predictors will be scored higher since they make unique contribution and thus are essential for the ensemble algorithm. on the other hand, predictors with low contribution scores tend to make incorrect and majority predictions. the contribution score of a predictor in an ensemble algorithm is calculated as follows:

  contribution score of predictor i=∑j=1nαij2υmaxj−υpiproteinjj+βijυsecj+θij αij={1ifpiproteinj=realjandpiproteinjis inthe minoritygroup;0otherwise.          βij={1ifpiproteinj=realjandpiproteinjis inthe majoritygroup;               0                                                                otherwise.          θij={1ifpiproteinj≠realj;               0        otherwise.           

symbols in the formula are explained as follows: for a protein j, the prediction results of nine predictors in the order of predictor  <dig> to predictor  <dig> are cytosol, nucleus, nucleus, mitochondrion, nucleus, cytosol, nucleus, nucleus, and nucleus, while the real localization of protein j is cytosol. in this case, the majority votes  are for nucleus, the number of the majority votes is denoted as υmaxj, which is 6; the number of the second majority votes is denoted as υsecj, which is 2; the number of the correct votes is denoted as υcorrectj, which is 2; the prediction result of predictor i is denoted as piproteinj; the number of predictors having the same prediction result with predictor i is denoted as υpiproteinjj. from the formula, we can see that predictor  <dig> and predictor  <dig> have the same positive contribution, which is 2*6-2 = 10; predictor  <dig> has minor negative contribution, which is −5; predictors  <dig> , <dig> , <dig>  have the most negative contribution, which is − <dig>  if the dataset used to learn contribution scores has n proteins, then the final contribution score of a predictor is summation of its n contributions. we normalized the final contribution scores  with the formula: /σ, where μ and σ are mean and standard deviation of contribution scores among predictors.

minimalist ensemble prediction algorithm
existing ensemble algorithms tend to include as many as possible component classifiers for better prediction performance. however, including redundant predictors not only increases computational complexity and collecting effort, but also may lead to over-fitting  <cit> . moreover, predictors with poor performance could mislead the ensemble algorithms especially those using majority voting schemes. it is thus desirable to find the minimal subset of predictors for achieving equally good or better prediction performance.

several strategies can be used to find the minimal set of predictors: exhaustive search of all possible combinations of component predictors, feature selection, and selecting top k most accurate predictors. we did an exhaustive search for all combinations of k individual predictors to build different ensemble algorithms. it shows that combining  <dig> out of  <dig> predictors can achieve the best performance when the logistic regression classifier was used to integrate the predictions. however, exhaustive search is a time consuming process especially when the set of available predictors is large. top-k accuracy selection method is straightforward and fast, but has the limitation of neglecting the redundancy among individual predictors.

here we proposed a minimalist ensemble design method to approximate the smallest set of predictors with the best possible prediction accuracy. the rationale is to find the smallest subset of predictors whose predictions are highly correlated to the real locations. the minimalist ensemble design problem is similar to feature selection when the prediction labels of individual predictors are considered as features. here, we chose the correlation based feature subset evaluator   <cit>  as the attribute evaluator to evaluate correlation between a feature subset and the class. greedy-stepwise method is used to search optimal feature subsets in different size of k through the space: the starting point of search is set as the set with all available predictors . each time greedy-stepwise algorithm will remove one feature or predictor from the set which would produce a reduced set with the highest possible cfssubseteval score. we continue the process until set size is  <dig>  while along the way the predictors in the set with size k are recorded as the output of our minimalist ensemble algorithm. after the k individual predictors are selected based on the training dataset, their predicted localizations for all proteins in the training dataset will be used as features, and a machine learning based classifier, such as naive bayes, logistic regression, or decision trees is used to train a classifier to predict the final subcellular localization. this method used to select minimalist set of individual predictors can also be used for building ensemble algorithms based on weighted voting or lda.

datasets preparation
two genome-wide protein localization databases are used to build three datasets in our experiments. the yeast dataset is obtained from huh et al.  <cit> . we excluded proteins localized to others  and multi-location proteins from the yeast dataset. two versions of the yeast dataset with different resolutions are prepared; for the low-resolution yeast dataset , we extracted proteins in cytosol, nucleus, mitochondrion, secretory after location mapping. for the high-resolution yeast dataset , we extracted proteins in cytosol, nucleus, mitochondrion, er, vacuole, golgi, and cell periphery . the human dataset is obtained from the locate database  <cit>  by extracting proteins in  <dig> locations . then we removed all multi-location proteins. for both yeast and human datasets, blastclust with 30% sequence identity was used to remove redundant sequences. in addition, proteins overlapped with the training datasets of component predictors in the corresponding ensemble experiment are removed. it should be noted that the yeast high-res dataset is highly overlapped with the yeast low-res datasets. the final distribution of proteins in different locations for the three datasets is shown in table  <dig> 

1overlap of yeast lowres and yeast highrres.

evaluation of individual predictors and ensemble algorithms
to evaluate the performance of predictors, accuracy and mcc were calculated using the equations below:

  accuracy:tp+tntp+tn+fp+fn 

  mcc:tp×tn−fp×fntp+fntp+fptn+fptn+fn 

where tp, tn, fp, fn means true positive, true negative, false positive and false negative predictions. it should be noted that since localization prediction is a multi-class classification problem, mcc can only be calculated for each location while an overall accuracy can be calculated for each prediction method for a given dataset. in our experiments, 10-fold cross-validation was used to evaluate all the ensemble algorithms.

RESULTS
evaluation of individual predictors
we obtained the prediction results on three test datasets  from the selected individual predictors using the web servers or standalone programs and then evaluated their accuracy and mcc scores. the results of  <dig> predictors for the yeast low-res dataset are shown in table  <dig>  the results of  <dig> predictors for the yeast high-res dataset are shown in table  <dig>  and the results of  <dig> predictors for the human dataset are shown in table  <dig> 

for the yeast dataset , most algorithms have better performance on predicting mitochondrion proteins. for the yeast high-res dataset , we can see that all predictors except netloc showed poor performance on predicting proteins localized to secretory pathway compartments especially golgi, and cell periphery. this suggests that ppi can be an effective feature for predicting low-resolution compartments. predictors with relatively high accuracy on the yeast low-res secretory proteins, such as cello and wolfpsort, don’t have corresponding performance on predicting proteins localized to er, golgi, vacuole in the yeast high-res dataset which are highly overlapped with the yeast low-res secretory proteins . this means those predictors have difficulties in distinguishing smaller compartments of secretory pathway. yloc and multiloc <dig> have very different performances between the yeast low-res and high-res datasets, which could be due to the use of different training datasets. for the human dataset , the secretory proteins  are the easiest for yloc, multiloc <dig>  and wolfpsort, which may suggest that these proteins have more distinct features such as secretory pathway signals than the yeast secretory proteins. as shown in table  <dig>  yloc, multiloc <dig>  and wolfpsort all use sorting signals as one of their features. the variation of prediction performance of the individual predictors implies that an ensemble algorithm may be able to integrate their strengths and achieve better overall performance.

ensemble performance
from tables  <dig>   <dig>   <dig> we can compare the performances between logistic regression  ensemble algorithms and their element predictors on the three test datasets. we can see that lr ensemble has better overall accuracy than the best element predictor over the three datasets; for the yeast low-res dataset and yeast high-res dataset, lr ensemble have more than 10% improvement over the best element predictors when integrating all available element predictors. however, lr ensemble does not always have the best performance on each compartment. this is because the ensemble training process is to optimize the overall accuracy while performance of certain compartment could be compromised. we can also see that when all of the element predictors failed on certain compartments, such as golgi and cell periphery in the yeast high-res dataset, lr ensemble doesn’t have any improvement on predicting those compartments.

prediction performance of the optimal ensemble algorithms using exhaustive search
here we evaluated the prediction accuracy of the logistic regression ensemble algorithm with all combinations of k  predictors using 10-fold cross-validation. figure  <dig>  shows the result tested on the yeast low-res dataset. first, we found that by using just three predictors, the ensemble algorithm can achieve comparable performance as using nine predictors. the  <dig> predictors are netloc , wolfpsort and yloc which cover most of the available features among the predictors. on the other hand, the ensemble algorithm composed of predictors with low coverage of features has poor prediction efficiency. it is also observed that when more predictors were used, the performance discrepancy between the ensemble algorithms based on different predictors became smaller. this indicates that the prediction performance is more reliable as the number of predictors increases.

we also evaluated the ensemble performance on the human dataset with all combinations of predictors including yloc, multiloc <dig>  wolfpsort, cello, subloc, subcell, bacello and knowpred. however, relatively limited accuracy improvement over the best individual predictor has been achieved by the lr ensemble compared to the yeast dataset. one reason is that the ensemble algorithm for the yeast dataset includes netloc which uses protein-protein correlation network information for localization prediction. this distinctive feature makes it complementary to the other algorithms, which leads to significant performance boosting. another reason may be that the strengths and bias of different predictors are enlarged or reduced to different degrees on different datasets, which may result in the change of complementary relationship among predictors. the varying complementary relationship thus leads to different prediction accuracy of the ensemble composed of the same set of predictors on different datasets.

contributions of individual predictors to the ensemble algorithm
to explore the contributions of individual predictors to the ensemble algorithm and their redundant or complementary relationships, we calculated their contribution scores in the ensemble algorithm for the yeast low-res and human datasets. nine predictors are available for the yeast low-res dataset and  <dig> predictors for the human dataset. figure  <dig> and  show the normalized contribution scores and prediction accuracies of the  <dig>  predictors on the yeast low-res dataset and human dataset respectively. for the yeast low-res dataset, yloc, subcell, wolfpsort, bacello, cello, and subloc all have relatively low contribution scores, which suggests that their predictions are highly redundant with the other predictors’ predictions. we also found that the predictors simply using the most common features such as cello, subloc, subcell, all have relatively low contribution scores, which suggests that the proteins whose localizations can be correctly predicted by these predictors can also be predicted correctly by other predictors. on the other hand, it can be observed that predictors using distinct features such as netloc and knownp have relatively high contribution scores. netloc  has the highest contribution score because it used very different ppi information compared to other predictors, which allows it to correctly predict proteins that other individual predictors cannot. knowpred applies a sophisticated local similarity method to detect remote sequence homology and therefore might correctly predict some proteins that most of others cannot. another reason why netloc and knowpred have relatively high contribution scores is that they don’t use other common features so they are less likely to make the same wrong predictions like other predictors. for the human dataset, yloc, multiloc <dig> and knowpred have the highest contribution scores while cello, subloc, and subcell still have the lowest contribution scores, which suggests that the latter three predictors’ correct predictions can be covered by the other component predictors or that they tend to mislead the ensemble algorithm by making majority incorrect predictions. this contribution score analysis can thus be applied to evalute future new protein localization predictors in terms of their unique prediction capability.

prediction performance of the minimalist ensemble algorithm
to test the performance of our minimalist lr ensemble algorithm with k component predictors, we run the minimalist algorithm to generate the combination of predictors for each k to build the minimalist ensemble algorithms and then tested them on the yeast low-res and human datasets. the results in figure  <dig> show that for the lr ensemble method, our minimalist ensemble algorithm can achieve near-optimal performance for any given k value. we also found that using 3– <dig> individual predictors can obtain near-best performance for all possible k values on the yeast low-res dataset. this means that our minimalist ensemble algorithm can use 1/ <dig> to 1/ <dig> of individual predictors used by existing ensemble algorithms to achieve similar performance while remarkably reducing the computational effort.

to examine the complementary relationships of the selected algorithms in the ensemble algorithms, table  <dig> shows the most frequent predictors selected by the minimalist ensemble algorithms during the 10-fold cross-validation and the best combination for each k according to the exhaustive search of the lr ensemble on the yeast low-res dataset. it is interesting to find that netloc and wolfpsort are the key component algorithms that are selected by the best combination and the minimalist ensemble with different k components. yloc is the second tier of algorithms selected by the best combination, while multiloc <dig> is the second tier of algorithm selected by the minimalist algorithm. the consistent difference of the selected component predictors between the best combination and the minimalist after the key component algorithms is due to that our minimalist algorithm used greedy and stepwise method to search the optimal k component predictors.

comparison of computational complexity
the computational complexity of the ensemble involves the effort to collect prediction results from individual predictors either from local software running or from web servers and the total running time. since most of the predictors are available only via web servers which are sometimes offline, it is desirable to have fewer component predictors. as demonstrated in figure  <dig>  the minimalist algorithm can efficiently find the key component predictors. since only  <dig> predictors are needed for the ensemble algorithm to achieve comparable performance of using  <dig> predictors, about 1/ <dig> to 2/ <dig> amount of computation time to collect prediction results can be saved.

comparison of different ensemble schemes
several ensemble schemes have been proposed for building ensemble localization prediction algorithms, including weighted voting  <cit>  , lda  <cit> , and classifiers-based ensemble algorithms such as decision tree   <cit> . it is interesting to compare their performance on the genome-wide yeast and human datasets. here we compared their best performance given k individual predictors selected by exhaustive search. as shown in figure  <dig>  weighted voting has the worst performance and its performance degrades dramatically when more individual predictors are included. this is because its prediction can be easily biased by redundant low-performance predictors. lda ensemble is better than weighted voting because it can assign lda optimal weights to predictors and avoid the prediction results being biased by low-performance predictors. however, it is still a voting based algorithm which might not be able to capture the rules relating the predictions of predictors to the real locations. for other classifiers-based  ensemble methods, they yield better prediction accuracy because these machine learning algorithms can better find and learn the rules between the features  using supervised learning. for these machine learning ensemble methods, the capability to handle redundancy is essentially the capability to handle over-fitting. as figure  <dig> shows, if too many predictors are included, voting based ensemble algorithms such as weighted voting and lda show the trend of downgrading the performance.

figure  <dig> and  showed the performance of the ensemble algorithms with or without including the ppi based predictor netloc. it is observed that ensemble algorithms without netloc have much less improvement over the best individual predictors, which means that these ensemble algorithms except weighted voting can automatically take advantage of the unique/beneficial component predictors  to improve the performance. from figure  <dig> we also noticed that lda ensemble’s performance could degrade dramatically when too many redundant predictors are included without including predictor with distinct property such as netloc.

we also compared the performances of the minimalist ensemble algorithms on the yeast low-res dataset. the result is shown in figure  <dig>  which demonstrates similar relationship of the performance for the evaluated ensemble algorithms in figure  <dig>  figure  <dig> shows the performance of the ensemble methods by selecting the top k accurate predictors. we can see that the main peformance difference between the minimalist ensemble and top-k ensemble is when k is less than  <dig>  which means the top  <dig> accurate predictors can form a very complimentary group. however, top k method is not reliable especially when the predictor with distinct features has relatively low accuracy, or when many included predictors are highly redundant.

comparison with other ensemble algorithms
there are several published and publicly available ensemble algorithms such as conloc  <cit>  and prolocalizer  <cit> . conloc intergrated  <dig> different predictors and used lda as the ensemble scheme. prolocalizer intergrated  <dig> different programs to predict localization of animal proteins. we tested conloc on our yeast low-res and human datasets. the results are shown in tables  <dig> and  <dig>  it should be noted that although our datasets are not overlapped with conloc ensemble training dataset, the performance result of conloc can still be overestimated since we didn’t exclude proteins of our datasets that are overlapped with the training datasets of conloc’s  <dig> element predictors. to test our minimalist ensemble algorithm, we first collected predictions of conloc’s  <dig> element predictors on the yeast low-res and human datasets and then tested lr ensemble with 10-fold cross-validation. the results  showed that lr ensemble achieved higher accuracy than lda based conloc on both datasets, which is consistent with our previous experiment results  and 3) alghough conloc lda used a different ensemble training dataset.

to investigate the redundancy among conloc’s  <dig> predictors, we applied our minimalist algorithm to select k out of the  <dig> predictors and tested them on the yeast low-res dataset and the human dataset. the results  showed that for the yeast low-res dataset, using only  <dig> predictors can achieve equally good performance as using all the  <dig> predictors. the most frequent  <dig> predictors selected by our minimalist algorithm during the 10-fold cross-validation are cello, proteome analyst, pts1prowler, and sherloc. for the human dataset, using only  <dig> predictors can achieve better performance than using all the  <dig> predictors. the most frequent  <dig> predictors selected by our minimalist algorithm during the 10-fold cross-validation are proteome analyst, pts1prowler, and sherloc.

we also tested prolocalizer which is an integration algorithm based mainly on binary classifiers. however, the server was able to generate prediction results for only  <dig> out of  <dig> proteins in our human dataset. the overall prediction accuracy of prolocalizer on those  <dig> proteins is  <dig>  while the standalone predictor yloc alone has an overall accuracy  <dig>  on the same dataset. we argue that it is difficult to construct a reliable protocol-based ensemble algorithm such as prolocalizer when the predictions of individual predictors are still not reliable leading to accumulation of errors along its sequential inference steps. instead, the machine learning based ensemble methods can learn complementary rules among the predictors to function as a “protocol” to determine protein localization.

CONCLUSIONS
although many protein localization prediction algorithms have been developed, the prediction performance remains low and the features used to predict localizations are still limited. ensemble algorithms have shown some promise to take advantage of a variety of features by combining individual predictors. however, combining as many as possible individual predictors, which is the most common strategy, has the drawback of high running complexity and low availability as well as risk of performance degradation. the result of our minimalist ensemble algorithm showed that it is possible to significantly reduce the number of individual predictors in a given ensemble algorithm while maintaining comparable performance. it is also observed that the best component algorithm set tends to keep predictors with unique features, which indicates that new features are the key to further improve the prediction accuracy for localization prediction. the success of our minimalist ensemble algorithm based on feature selection and logistic regression showed that supervised ensemble algorithms based on machine learning can effectively capture the complex relationships among individual predictors and achieve better performance than the voting methods.

we found that our ensemble algorithm works best when predictors with unique features are combined. for example, the ppi based netloc algorithm can significantly improve the ensemble performance, which is however limited by the fact that many proteins do not have ppi information. it should be also noted that the ppi information and ensemble predictor itself are species specific. so our ensemble predictor trained on human/yeast dataset may not work well for proteins of other species. however, the design methodology of minimalist ensemble predictors can be used to develop predictors tailored to specific organisms or available training datasets.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
conceived and designed the experiments: jh;jl. performed the experiments: jl;am. analyzed the data: jl; jh. contributed reagents/materials/analysis tools: jl;am. wrote the paper: jl;jh;rl. all authors read and approved the final manuscript.

