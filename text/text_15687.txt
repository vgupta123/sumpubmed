BACKGROUND
microarray experiments produce vast amounts of data. the resulting datasets are highly complex and contain large matrices of expression measurements as well as sequence and experiment annotations that provide biological context to the data. to organize these different types of data in a way that allows intuitive exploration of the data, and provides the ability to gain important insights into relationships within a given dataset requires sophisticated visualization tools. such visualization tools are of benefit not only to researchers analyzing and presenting or publishing their own data, but also to model organism databases  for compiling and displaying microarray data for a given model organism.

there are several excellent free tools available that allow an individual user to analyze their own data. these tools are either accessible on the web, or can be downloaded and used on a desktop machine. examples include the epclust  <cit> , gepas  <cit>  and fgdp  <cit>  web-based tools and the tmev  <cit>  desktop tool from tigr. however, once these tools have been used, and a cluster or other group of genes has been selected, this resulting dataset needs to be made available to other people for browsing and exploration. there are a few visualization tools that allow display of such a static dataset that are available as free software tools, e.g. michael eisen's treeview  <cit> , javatreeview  <cit> , or the more recent mapletree  <cit> . all of these tools are, however, desktop tools that themselves have to be downloaded and work on locally stored datasets. the impetus for the development of genexplorer was the desire to provide access to datasets via the internet, without the requirement to download and install additional software. we developed genexplorer for use in web supplements of microarray publications whose raw data are housed within the stanford microarray database   <cit>  and for use as a tool to allow smd users to browse their own data within smd before publication. using genexplorer, hierarchically clustered gene expression data can be interactively viewed using a web browser on any computer platform. genexplorer uses the widely accepted cdt file format  <cit>  produced by several freely available clustering programs , which between them have been downloaded several thousand times. thus genexplorer should be widely usable my smd and non-smd users alike.

implementation
the application was written using object oriented perl following the model-view-controller  design paradigm  <cit> . genexplorer consists of two classes, the data model class microarray::cdtdataset , and the presentation logic class microarray::explorer . the controller, named gx, is a perl cgi script that dispatches cgi requests to the viewer. the mvc paradigm was used because it dissociates how data are represented internally  from how they are displayed , from how they are interacted with  . the goal of such a separation is that by keeping consistent apis for the components to interact with each other, each component may be modified extensively internally, with little or no effect on the other parts of the application, thus making code maintenance easier. the microarray::cdtdataset class provides an application programming interface  that allows details of a particular expression cluster to be queried. in turn, instances of the microarray::explorer class use this api to retrieve and then display information about the dataset. the controller is a relatively simple cgi perl script that is responsible for capturing cgi parameters and using them to first create a dataset microarray::cdtdataset object, which is subsequently used in the instantiation of a microarray::explorer object. the controller then invokes the appropriate microarray::explorer methods, depending on where, and in which frame the user clicked.

the microarray::cdtdataset has two essential functions: during dataset creation  it decomposes the data file into its constituent data parts and creates the files needed during data viewing . during data viewing it provides the api for the viewer, and allows searching and retrieval of the data. under the current model the dataset object itself is immutable. microarray::cdtdataset was implemented as a client of the microarray::datamatrix module, which provides an api for accessing matrices of expression data. in the design of the classes certain compromises had to be made to accommodate the stateless client server environment in which the program operates. specifically, to allow rapid responses, pre-generated images and correlation data are cached in a compact format on the web-server.

there are two stages required to publish a microarray dataset on the web using genexplorer. the first stage  involves creation of all the necessary files for genexplorer to use. the second stage uses these files to produce the display using the genexplorer web front-end.

dataset creation
dataset creation requires a file in the clustered data table  format: a simple tab delimited text file format . this format was introduced with the 'cluster' and 'treeview' applications  <cit>  and is widely used for microarray data. a perl script  uses microarray::cdtdataset to create the various required data files. correlations between expression-vectors within the dataset are calculated for each pair-wise combination of vectors using the c program 'correlations'. correlations for each vector above the default cutoff value of  <dig>   are saved in a binary format that facilitates rapid searching. depending on the version of the perl gd module  <cit>  installed on the system, either png or gif formatted images representing the cluster will be created. these images include both a 2-color image representation of the data matrix and an image representation of the experiment names. the program that creates these files is configurable, such that these images can be created using either a red/green or a yellow/blue color scheme, and in addition, the contrast of the images can be customized and set in steps of log scale. the name and path of a dataset can be defined hierarchically within the file system  allowing the creation of many datasets within the same project.

dataset viewing
genexplorer is a perl application that produces a set of html frames that can be used for viewing the expression data . the three frames that it produces are: 1) a radar frame. this frame displays an image map of the data matrix and gives an overall view of the clustered data. the rows correspond to the features or genes , and the columns correspond to the experiments within the dataset. when the image is clicked the next  <dig> expression patterns starting at the position of the click are displayed in the zoom frame. the position of a bracket on the right side of the radar window indicates the section of the whole radar image that is displayed in the zoom frame. 2) a toolbar frame. actions in the toolbar may affect either the radar or the zoom frame. there is a tool to set the scaling of the radar image, while the search box allows searching of gene annotations and the expression patterns of the resulting hits are displayed in the zoom frame. in addition the toolbar frame also contains a javascript enabled text box that gives feedback depending on the user's mouse position, to provide additional information about the genes and experiments within the cluster. 3) a zoom frame. this frame displays a zoomed view of selected expression patterns, such that the user can see both the individual patterns and the associated annotations. the source of the selected patterns can be either a section of the radar image, the result of a search the user performed in the toolbar, or the result of a nearest neighbor search initiated in the zoom frame itself. the expression profiles themselves in the zoom frame are clickable and the resulting search will display the expression pattern for the most similarly expressed genes to the gene that was clicked on, and provide visual feedback as to the level of similarity in their expression profiles. in addition, when the user moves the mouse over parts of the zoom window, additional information is directed back to the textbox in the toolbar. the experiment name, correlation value  and gene annotation is displayed when the mouse is over the experiment image map, the correlation bar, and the expression pattern, respectively.

full text searching
the search box in the toolbar enables a string search of either all, or specific gene annotation fields. the string may contain more than one term, where each term in the search string should be at least  <dig> characters long. spaces between the terms are interpreted as term separators and the terms are combined using the logical 'and' operator. wildcard searches are allowed using the '*' character, such that at least one character should precede the wildcard character. the hits resulting from the search are displayed in the zoom frame, as expression patterns. the number of hits displayed in the zoom window is limited to  <dig> hits.

display configuration
genexplorer allows configurable linking out of the gene annotations to external databases. the number of these links per a gene is not limited, making it easy to be able to look at the information for a gene in several different databases. a configuration file in the dataset directory is used to control where the various gene identifiers are linked. templates are available for various organisms, and the existing files can be edited manually if a link to a new database is desired. because of the current limitations of the input cdt file format, setting up the external database links might require manual editing at the time of dataset creation. this is fully described in the readme document that is part of the distribution. the external database annotations are not currently updatable in any automated fashion; this will be addressed as part of our plans to make genexplorer able to read mage-ml  that would allow us to do the updates via web services.

installation and use
the genexplorer package is provided as a typical perl distribution on the comprehensive perl archive network , and adheres to the usual installation mantra of perl modules. after unpacking the software, a user with administrative privileges merely needs to type:

perl makefile.pl

make

make test

make install

this will install the libraries and the executable files that are needed for dataset creation by genexplorer into the regular system locations, unless otherwise specified during the first step above. the example in figure  <dig> shows the file structure if the library and bin directories under the web server's root had been specified for installation of the libraries and executables respectively. to actually use the gx script, it must be copied into a cgi-bin directory, and the various html files must be copied to the appropriate location under the web server's root .

RESULTS
in addition to its use within smd, genexplorer has been used by many publications to provide access to microarray datasets through their web supplements, that can be accessed through smd's publication page  <cit> , and was used as the basis for visualization of fuzzy k-means cluster data  <cit> . we demonstrate on an example dataset how genexplorer works  <cit> . figure 3a shows a display of this dataset in the browser window. the whole dataset is displayed in the radar frame, and the zoom window shows the section of this image that was selected, with the gene annotations at a readable size. clicking on any of the hyperlinks in the zoom frame brings up a new window displaying the biological information for the selected gene that is found in source   <cit> . searching the dataset for all the genes whose name field contains the keyword 'kinase' results in the zoom window shown in figure 3c. this type of search allows comparison of the expression patterns of a subset of the genes based on some functional category – e.g. go process-terms, if the annotation fields contain these terms. clicking on one of the expression profiles  leads to the display in figure 3d. in the zoom frame it shows the expression profile of the selected gene as the top row, and all the other expression profiles below with pearson correlation above  <dig> . the length of the small orange bar on the right side of the expression profiles gives a graphical representation of these correlation values, while the actual value is displayed in the info box in the toolbar when the mouse is over the orange bar.

future developments
we are planning to further develop genexplorer to enable it to handle other data formats. specifically, we would like it to be able to accept data files in mage-ml format  <cit> , which is becoming a standard file format for communicating gene expression data. in addition, we would like it to be able to display tree views of the clustered data and allow zooming on specific nodes of the cluster.

CONCLUSIONS
we have developed a web-application, genexplorer, which allows the visualization of microarray datasets over the internet using only a web browser. this application has been extremely useful in our experience, where it serves both smd users during analysis of their data and the public while browsing published datasets.

availability and requirements
genexplorer is available at  <cit>  under the mit open source license. it should work on any unix-type system capable of running perl and a web server, though we ourselves have deployed it on sun solaris. additional information on installation and usage is provided in the installation instructions and documentation that is part of the distribution.

list of abbreviations used
smd: stanford microarray database.

authors' contributions
car designed and wrote the initial version of the genexplorer. this was extensively re-factored and modularized by jcm  and jd . db was involved in the guidance of the early stages of this project. gs wrote the correlations software and the datamatrix classes, and guided the development of this project. all authors read and approved the final version of the manuscript.

acknowledgments
the authors would like to thank members of the brown and botstein laboratories, for their feedback on genexplorer, and for providing datasets for testing. thanks also go to all the members of the stanford microarray database group for stimulating discussions. this work was funded by a grant from the nhgri, r01hg <dig>  to gs.

figures and tables
