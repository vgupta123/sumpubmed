BACKGROUND
cancer, one of the most widespread and heterogeneous diseases, is at its most fundamental level a disease brought on by the accumulation of somatic mutations
 <cit> . these mutations typically occur in either tumor suppressors or oncogenes. while oncogenic mutations either tend to deregulate or up-regulate the resulting protein behavior, mutations within tumor suppressors typically lower the activity of genes that prevent cancer. pharmacological intervention has shown to be more effective with inhibiting activating oncogenes than with restoring functionality of tumor suppressing genes. combined with the theory of "oncogene addiction", that many cancers are dependent upon a small set of key genes to drive their rapid cellular multiplication with the rest of the mutations simply being passenger mutations
 <cit> , the identification of driver oncogenic mutations has become of critical importance in cancer research.

due to the importance of this problem, several approaches have been proposed to detect naturally selected regions in which activating mutations occur. one general approach postulates that driver mutations will have a higher non-synonymous mutation rate as compared to the background level after normalizing for the length of the gene
 <cit> . similarly, assuming that the neutral rate of nucleotide substitution is surpassed when positive selection is acting on a specific region, one can check if the ratio of nonsynonymous  to synonymous  mutations per site is greater than 1
 <cit> . relatedly, ye et al. <cit>  and ryslik et al. <cit>  showed that mutational clusters can be indicative of activating mutations and that finding such clusters is a way to reduce the driver mutation search space needing to be analyzed. an alternative approach relies on creating classifiers to categorize mutations. machine learning algorithms such as polyphen- <dig> <cit> , which predicts whether a missense mutation is damaging, and chasm <cit> , which discriminates between known driver mutations and a set of passenger mutations, rely upon a set of rules developed using a variety of machine learning techniques such as random forests
 <cit>  and support vector machines
 <cit> . these rules can be used to calculate a score for each mutation based upon both sequence and non-sequence-based features such as evolutionary conservation, size and polarity of the substituted residue as well as accessible surface area
 <cit> . other classifiers, such as sift <cit> , use only a subset of these features, e.g. evolutionary conservation, for prediction.

while the methods based upon background mutational rates have had some success in identifying regions of positive selections or driver mutations, they nonetheless suffer from several shortcomings. first, many of these methods rely upon calculating the difference between synonymous and non-synonymous mutations but do not take into account that selection can act upon minute regions of the gene. thus, when the mutations rates are averaged over the entire gene, the signal may be lost. second, the methods proposed by kreitman
 <cit>  and wang
 <cit>  do not differentiate between activating gain-of-function mutations and inactivating loss-of-function non-synonymous mutations. third, many of the machine learning methods require an extensive rule set that must first be trained using a well annotated database that is still limited. until the requisite literature and information is developed, the machine learning algorithm is unable to create a well-performing classifier. furthermore, the rules must be updated periodically to reflect updated knowledge and information. for a recent review of several popular methods that attempt to discern missense substitution effect on protein function see gnad et al. <cit>  and gonzalez-perez et al. <cit> .

building on the work of bardelli et al. <cit>  and torkamani and schork
 <cit> , which stipulated that only a small number of specific mutations can activate a protein, ye et al. <cit>  developed non-random mutational clustering  to identify potential activating mutations. nmc works on the hypothesis that absent any previously known mutational hotspot, a mutational cluster is indicative of a possible activating mutation. this is based on the observation that most amino acid substitutions are either neutral or incompatible with protein function, resulting in a concentration of activating mutations within a small subset of protein residues and domains
 <cit> . for the null hypothesis that mutation locations are random in the candidate protein when represented in linear form, nmc identifies clustering by evaluating whether there is statistical evidence of mutations occurring closer together on the line than expected by chance. while nmc is able to implicate some cancer related genes, it is limited by the fact that it considers the protein as a linear sequence and does not take into account the tertiary protein structure. to account for protein structure information, ryslik et al. <cit>  developed ipac , which reorganizes the protein into a one dimensional space that preserves, as best as possible, the three dimensional amino acid pairwise distances using multidimensional scaling 
 <cit> . as described by ryslik et al. <cit> , utilizing the tertiary information is critical when identifying clustering as mutations that occur far apart when the protein is considered linearly can be very close together once the protein is folded in 3d space. the 3d proximity of such mutations might thus yield novel clusters. while it was shown that ipac provides an improvement over nmc, the reliance upon a global method like mds can potentially result in a distorted rearrangement of the protein, since distant residues will nevertheless have an impact on each other’s final position in one dimensional space.

in this manuscript, we provide an alternative method to ipac by remapping the protein into one dimensional space via a graph theoretic approach. this approach allows for a more natural consideration of the protein, one that is sensitive to protein domains and linkers. we show that our methodology is effective in identifying proteins with mutational clustering that are missed by both ipac and nmc such as nrp <dig> and mapk <dig>  we also show that for some proteins, graphpac identifies fewer clusters than inferred by both ipac and nmc while for other proteins graphpac identifies more clusters than the other two methods. while both graphpac and ipac are an improvement over nmc since they account for tertiary structure, the differences between graphpac and ipac point to the fact that different rearrangements of the protein must be considered in order to better understand the mutational clustering landscape. we show that many of the clusters identified by graphpac are also classified as damaging by polyphen- <dig> and as an activating mutation by chasm. by providing a more complete picture of mutational clustering than ipac or nmc individually, graphpac allows us to obtain a more accurate landscape of where potential activating mutations may occur on the protein.

methods
graphpac uses a four step approach to identifying mutational clusters. the first step, as described in sections ‘obtaining mutational data’ and ‘obtaining the 3d structural data’, retrieves mutational and positional data from cosmic
 <cit>  and the pdb
 <cit> , respectively. after reconciling the mutational and positional databases , the residues are realized as a connected graph where each residue is a vertex whereupon the traveling salesman problem is heuristically solved in order to find the shortest path through the protein . once the shortest path has been identified, the protein residues are reordered along this path providing a one dimensional ordering of the protein. the linear nmc algorithm is then used to calculate which mutations are closer together than expected by chance. lastly, the clusters are unmapped back into the original space and the results reported back to the user. we detail each of the steps in the sections below.

obtaining mutational data
the mutational positions were obtained from the 58th version of the cosmic database that was downloaded via the following ftp site:
http://ftp.sanger.ac.uk/pub/cgp/cosmic. the database was implemented locally using oracle 11g. only missense mutations that were classified as "confirmed somatic variant" or "reported in another cancer sample as somatic" were selected, with nonsense and synonymous mutations excluded. moreover, we only considered mutations originating from studies that were classified as whole gene screens. next, since multiple studies can report mutational data from the same cell line, mutational redundancies were removed to avoid double counting the mutations. lastly, only the proteins with a uniprot accession number
 <cit>  were kept in order to correctly match the mutational and positional data, resulting in  <dig> proteins. see "cosmic query" in additional file <dig> for the sql code required to generate the mutational data.

obtaining the 3d structural data
the pdb web interface was used to obtain the protein tertiary information for each of the  <dig> proteins described in section ‘obtaining mutational data’. since multiple structures are often available for the same protein, all structures with a matching uniprot accession number were used and an appropriate multiple comparisons adjustment  was performed afterwards. for proteins where the resolution provided alternative conformations, the first conformation listed in the file was used. similarly, for structures where more than one polypeptide chain with a matching uniprot accession number was available, the first matching chain listed in the file was used . finally, after the chain and conformation were selected, the cartesian coordinates of all the α-carbon atoms were used to represent the tertiary backbone structure of the protein. while we only used the α-carbon location to represent the residue location in this paper, our methods are robust if any of the other backbone atoms are used including the amide nitrogen, main chain carbonyl carbon or the main chain carbonyl oxygen.

also, while x-ray crystallography was used to determine many of the tertiary structures in the pdb, we note that molecular dynamics  could in principle be used to model the protein structure in solution. however, taking into account the time complexity of such an approach for larger proteins as well as the number of structures that we consider, such a task is beyond the scope of this paper
 <cit> . further, as crystal structures are almost always representative of the correctly folded protein, using the current structural information is more than sufficient until md simulations can be applied on much faster time scales. see "structure files" in additional file <dig> for a full listing of all the  <dig>  structure/chain combinations used.

reconciling the structural and mutational data
in order to reference the same residue in the cosmic and pdb databases, an alignment was performed to accommodate their different numbering systems. like ipac, graphpac allows two such reconciliations. the first is based upon a pairwise alignment as described in pages et al. <cit>  while the second is based upon a numerical reconstruction from the structural information available in the pdb file. due to the fact that the pdb file structure potentially changes depending upon the structure release date along with other technical complications, pairwise alignment was used for all the analysis described in this paper unless specifically noted. for further information on the alignment please see the documentation in the graphpac package available on bioconductor. protein/structure/chain combinations that resulted in only one mutation or no mutations on the residues for which tertiary information was available were dropped. similar to ipac, a successful alignment of the tertiary and mutational data was obtained for  <dig> proteins corresponding to  <dig> unique structure/chain combinations. see "structure files" in additional file <dig> for a full listing and description.

traveling salesman approach
since the nmc algorithm requires order statistics to identify clustering , we need to map the protein from a three dimensional to a one dimensional space so that order statistics may be constructed. contrary to ipac, which employed mds, a graph theoretic approach is used by graphpac. as discussed above, one major limitation of mds is that the minimization of the stress function:

  σ1=∑i,j2∑i,jdi,j <dig> 

results in every residue having an effect on the final position of every other residue. in equation  <dig>  δ
ij
 represents the euclidean distance between residues i and j in the original higher-dimensional space while d
i,j
 represents the distance between them in the lower dimensional space x. lastly, f, is used to account for situations where the proximity measures δ
i,j
 do not come from a true metric space. since in our case,
δi,j∈r, f is the identity function. minimization of σ <dig> may not capture that a protein is typically comprised of several domains and that only residues within a specific domain should influence each other’s final position in linear space . under the graphpac algorithm, we first construct a complete graph with each residue represented by a vertexa. we then create a linear ordering of the protein by finding a hamiltonianb path through the graph. as the number of distinct hamiltonian paths on a complete graph with n vertices is equal to
! <dig>  a direct consideration of all possible paths is computationally unfeasible. further, selective pruning of the edges based upon edge distance is also often impractical due to the domain structure where many residues are close to each other. because of these factors, we use a heuristic algorithm that solves the traveling salesman problem 
 <cit>  to find a linear path that is approximate of the shortest path through the protein. we then use this path as a representative reordering of the protein into one dimensional space. unlike ipac, which is based on a global remapping, this methodology takes into account only locally neighboring residues to remap the protein to one dimensional space.

while there are many heuristic solutions for the tsp , we consider three of the most common insertion methods
 <cit> : cheapest insertion, farthest insertion and nearest insertion as described below. specifically, the objective of the tsp is to find a cyclic permutation π of { <dig> , <dig> …,n} that minimizes the total tour distance, namely:

 minπ∑i=1nd) 

here, d represents the distance between residues i and j  = 0) and π represents the residue that follows residue i on the tour. the difference between the three insertion methods rests on how the next residue k is selected for insertion. under cheapest insertion, the next k to be inserted into the tour is chosen such that the increase in tour length is minimal. under nearest insertion, at each iteration, the k that is closest to a residue already on the tour is selected. finally, under farthest insertion, the k that is farthest away from any residue already on the tour is selected.

these algorithms have different upper bounds on their tour lengths. for example, the farthest insertion algorithm creates tours that approach
 <dig> of the shortest length while the nearest and cheapest insertion algorithms can be linked to the minimal spanning tree algorithm and thus have an upper bound of twice the shortest tour length when distances satisfy the triangular inequality
 <cit> . due to the varied nature of these methods and that there is no biological justification to favor one over the other, we consider all three methods when identifying clusters and then perform an appropriate multiple comparison adjustment to infer the statistical evidence of mutation clusters .

as can be seen from figure
 <dig>  all the rearrangement options present a positive skew and are mostly consistent with each other. for the majority of the proteins, all three insertion approaches as well as the mds approach result in little rearrangement. however, if one method results in radical rearrangement when the protein is mapped to 1d space, the other methods do so as well. this makes selection of a specific insertion method less critical and for the rest of this manuscript, unless otherwise specified, we use the insertion method with the most significant cluster for analysis. please see "distribution summary" in additional file <dig> for a full listing of each structure’s kendall tau distance, protein index and a high resolution plot.

path lengths between nearby and distant residues are statistically different
we employed a statistical test to verify that the tsp algorithm yields a shorter path between residues that are close together in 3d space versus residues that are far apart. first, we selected  <dig> random protein structures from our data set. for each structure we then selected  <dig> random amino acids and categorized them as "close" versus "far" in 3d space . for structure i, we then calculated the average path distance between all pairwise close residues, denoted
c¯i, and the average path distance between all pairwise far residues, denoted
f¯i. next, we calculated the average close and far path distance over all structures:
c¯=/ <dig> and
f¯=/ <dig>  finally, as
c¯ and
f¯ are averages, we applied the central limit theorem and performed a t-test with
h0:c¯=f¯ vs
ha:f¯>c¯. this test was performed for each of the insertion methods described in section ‘traveling salesman approach’ and at various classifications of close and far. as shown in table
 <dig>  the p-value is ≈ <dig> for each combination of distance and insertion method, allowing us to conclude that the average path distance between residues that are far apart in 3d space is larger than the average path distance between residues that are close together in 3d space.

the left column shows the requirement to label two residues as close or far apart. for instance, " <5Å versus >25Å" signifies that residues that are less than <5Å apart are labeled as close while residues that are >25Å apart are considered far apart. the p-values for each method are shown in columns 2– <dig> 

nmc
the nmc algorithm as described by ye et al. <cit> , and briefly reviewed here, was used to find the mutational clusters once the protein was remapped to 1d space. to begin, suppose we had m samples of a protein that was n residues long and that there were a total of n mutations over all m proteins. as shown in figure
 <dig>  by collapsing over the m samples, we can construct order statistics for every mutation. then, given order statistics x and x where i < k, we define a cluster to exist if pr-x) ≤ α, for some predetermined significance level α. as shown in ye et al. <cit> , while a closed form calculation of the above probability is possible, it often becomes computationally costly. to overcome this, we calculate
ckin and assume that the statistic is uniform on . then in the limit, it can be shown that:

  prckin=x-xn≤c=∫0cn!!!yk-i-1i+n-kdy=pr≤c) 

the above calculation is then performed on all pairwise mutations and an appropriate multiple comparison adjustment is then applied. for the remainder of this study, we use the more conservative bonferroni correction
 <cit>  to adjust for the intra-protein cluster p-values. see section ‘multiple comparison adjustment for structures’ for a description of how we account for the inter-protein multiple comparisons. lastly, it is important to mention that the structural information obtained for each protein does not always contain the  coordinates for every residue in the protein. in such cases, in order to compare graphpac, ipac and nmc on an equal basis, these missing residues are removed from the protein.

we also note that since we obtained our mutational data from cosmic, some tissue types are more represented than others in the database. however, this scenario results in our analysis being more conservative and our findings even more significant. assuming that mutations occur in different parts of the protein for different tissue types, when collapsing over all tissues a larger value of n is obtained while the values of i and k  for two specific mutations are not changed. this results in a larger p-value signifying that clusters found when collapsing over tissue types would be even more significant if only a unique tissue type was analyzed.

multiple comparison adjustment for structures
in addition to the bonferroni adjustment performed to account for multiple testing within a specific structure, we perform a second multiple comparison adjustment to account for testing all  <dig>  structures. since a single protein can have many structures that are similar to each other, a second bonferroni adjustment is too conservative and an integrated bonferroni-fdr approach was performed. specifically, for a given protein, the bonferrroni adjusted p-value of each cluster was multiplied by
n <dig> to calculate p∗. thus, p∗ could be compared directly to an α-level of  <dig>  in order to determine the cluster’s significance. next, a rfdr
 <cit>  approach, which is a good approximation for the standard fdr method when there are a large number of independent or positively correlated tests, was used. under this method, the expected value of α is estimated over all k tests and then used as the significance threshold. setting k as the total number of structures under all three insertion methods, the mean alpha can be approximated by:

 rfdr=αk+12k 

where k = 3 × 1100 =  <dig>  using α =  <dig> , rfdr is calculated to be ≈ <dig> . rounding down, all the clusters for which p∗ ≤  <dig>  were deemed to be significant. to avoid confusion in the rest of the paper, we only report the p-value . however, each cluster discussed in section ‘results’ is significant after the bonferroni-fdr multiple comparison adjustment described here.
graphpac 
, 
ipac 
 or
nmc


graphpac
ipac
nmc
if a specific method did not find a particular protein to contain significant clustering, a "-" is shown. the p* calculation is described in section ‘multiple comparison adjustment for structures’. the smallest p-value from all of the insertion methods was selected.

RESULTS
in this section we compare the results between graphpac, ipac and nmc in terms of the number of structures found  and describe the new proteins identified by graphpac . we also show the results of our method in comparison to two machine learning methods along with a descriptions of whether our results overlap biologically relevant structures .

method comparison
using the graphpac algorithm, out of the  <dig> proteins analyzed,  <dig>   <dig> and  <dig> proteins with statistically significant clusters were found under the cheapest, nearest and farthest insertion methods, respectively. this corresponded to  <dig>   <dig> and  <dig> significant structures  under the three methods. it is important to note that failure to utilize the tertiary information results in either an over or an underestimation of the number of clusters in approximately 70% of the structures analyzed . hence, failure to account for the protein structure provides either an overly complicated or overly simplified view of the mutational orientation. on the protein level, as shown in table
 <dig>  eight proteins were identified as having significant clusters by graphpac, nmc and ipac while  <dig> proteins were identified as having significant clusters by only a subset of these methods. we note that of these seven proteins, four of them were only identified via the graphpac methodology while two of them were identified only via the ipac methodology. we further note that graphpac identifies the largest number of proteins with significant clustering at the same false discovery rate, thereby showing an increased power to detect mutational clustering. we also observe that there were no proteins found to have significant clustering under the linear nmc algorithm that were subsequently missed by the graphpac algorithm. see section ‘cluster localization in relevant sites and performance evaluation’ for a summary of cluster overlap with active biological sites along with a performance evaluation via machine learning methods.

graphpac identifies novel proteins with significant clustering
graphpac identified four proteins with clustering that are missed by the ipac algorithm: dpp <dig>  map2k <dig>  nrp <dig>  and psck <dig>  dpp <dig> is a serine protease that can modify tumor cell behavior and is a potential cancer therapeutic target
 <cit> . both map2k <dig> and nrp <dig> are well known to be associated with lung cancer
 <cit> . finally, while pcsk <dig> mutations are well known in causing hypercholesterolemia
 <cit> , recent research shows that absence of pcsk <dig> can provide a protective benefit against melanoma due to lower circulating ldlc. this allows for a potential additional cancer therapy via pcsk <dig> inhibitors  <cit> .
 <cit> . for a full listing of which structure-protein combinations were found significant, see "results summary" in additional file <dig>  please see sections ‘graphpac finds novel proteins compared to ipac and nmc’, ‘graphpac identifies additional clusters compared to ipac and nmc’ and ‘graphpac finds fewer clusters compared to nmc’ for an in-depth review of selected protein-structure combinations.

cluster localization in relevant sites and performance evaluation
we note that  <dig> of the  <dig> proteins that graphpac identified as having significant clustering have their most significant cluster overlap a binding site, catalytic domain or kinase domain. out of the remaining four proteins, three proteins have their most significant cluster fall within a previously identified biologically relevant region. for instance, ide’s most significant cluster is located on residues 684– <dig>  a denaturation-resistant epitope region
 <cit> . for nrp <dig>  which plays roles in angiogenesis
 <cit>  and axon guidance
 <cit> , the most significant cluster directly overlaps the f5/ <dig> type c  <dig> domain - a domain in many blood coagulation factors. finally, for pik3c- α, the most significant cluster overlaps residue  <dig> which has been shown to potentially increase the substrate turnover rate, a common oncogenic behavior
 <cit> . for further detail on relevant biological site information, please see "relevant sites" in additional file <dig> 

further, we evaluated the performance of graphpac via two well-known machine learning algorithms: chasm and polyphen- <dig>  it is critical to first note however, that the machine learning algorithms utilize a much more detailed set of features when evaluating the mutation. thus these algorithms may identify mutations as significant while graphpac would not. nevertheless, of all the mutations that fall within significant clusters identified by graphpac, 93% and 91% of them were also identified as significant  by chasm and polyphen- <dig> . we note that graphpac is only able to determine statistically significant clustering and not whether a mutation is truly damaging and/or activating. however, given the high percentages described above, the evidence supports the hypothesis that clustering is in fact indicative of potential driver mutations. thus, via graphpac, the researcher has a fast and easily available tool to identify potential driver mutations for further study. the benefit of graphpac is that it is able to be executed with far less prior information as compared to the machine learning approaches. for further details, see "performance evaluation" in additional file <dig> 

finally, we note that while graphpac provides an improvement in cluster identification compared to prior work, the algorithm is unable to distinguish between mutations that increase or decrease kinase activity nor between gain-of-function  or loss-of-function  mutations. as described by lapenna and giordano
 <cit> , brognard et al. <cit> , geiger et al. <cit> , ahn et al. <cit> , lisabeth et al. <cit>  and linka et al. <cit> , a large body of literature suggests that inactivating loss-of-function mutations are more common than previously thought and often occur in regions that regulate kinase activation. nevertheless, as described above, many of the clusters identified by graphpac contain mutations that are classified as driver and/or damaging by common machine learning algorithms. as such, graphpac provides a fast and easy method to identify such potential mutations, which can then be verified and analyzed via additional approaches. these approaches can range from the aforementioned machine learning algorithms to experimental approaches that test for gof mutations as described by fawdar et al. <cit> .

discussion
in this section we discuss in depth some of the clustering results presented in section ‘results’. specifically, we review in detail three situations: 1) graphpac identifies novel proteins , 2) graphpac finds additional clusters in proteins identified to contain clustering by other methods  and 3) graphpac finds fewer clusters compared to other methods . in each of these sections, we discuss the biological relevance of our findings.

graphpac finds novel proteins compared to ipac and nmc
as shown in table
 <dig>  graphpac identified five additional proteins as compared to the linear nmc algorithm. in this section we will consider two of these proteins, both of which are directly related to cancer: egfr, which is also identified by ipac, and nrp <dig>  which is not identified by ipac.

egfr is a cell-surface receptor for ligands in the epidermal growth factor family
 <cit>  and is present in a wide range of diseases such as glioblastoma multiforme
 <cit> , lung adenocarcinoma
 <cit>  and colorectal cancer
 <cit> . the most significant cluster found was in the 2itx structure
 <cit>  between residues 719– <dig>  with a corresponding p-value of  <dig> . this cluster contains mutations g719s, t751i and s768i which are all found in non-small cell lung carcinomas 
 <cit>  with mutation g719s well known for increased kinase activity
 <cit> . it is also interesting to note that all three mutations within this cluster, which was identified purely through statistical clustering analysis, show a beneficial clinical response to either erlotinib or getfinib
 <cit> . exclusion of the tertiary information would have resulted in this cluster being missed. finally, it is worth noting that recent research has shown that signaling by egfr is dependent upon an allosteric interaction between two kinase domains in an asymmetric dimer as opposed to phosphorylation. as the formation of this asymmetric dimer is believed to activate all egfr family members, it is likely that oncogenic activation of egfr may differ from other protein kinases
 <cit> .

we now consider the nrp- <dig> protein, a coreceptor for the vascular endothelial growth factor  which is upregulated in a large variety of cancers including lung tumors
 <cit> , gastrointestinal metasteses
 <cit>  and pancreatic carcinomas
 <cit> . in nsclc patients, it has been shown to be an independent predictor of cancer relapse and reduced survival as well as a cancer invasion enhancer
 <cit> . moreover, research has shown that nrp- <dig> inhibitors provide an additive effect to anti-vegf therapy in reducing tumor progression. monoclonal antibodies that attach to the b1-b <dig> domains, the domains responsible for vegf binding, have already been created
 <cit> . the b <dig> domain, which spans residues 275– <dig> almost exactly overlaps the most significant cluster found by graphpac, which consists of residues 277– <dig>  in the 2qqi
 <cit>  structure . finally, it is worth noting that mutations on residues  <dig> and  <dig> were recently found that completely disrupt vegf binding, both of which also fall within the graphpac identified cluster of 277- <dig> in the 2qqi structure.

graphpac identifies additional clusters compared to ipac and nmc
a representative example where graphpac identifies additional clusters as compared to nmc and ipac is in the kras protein for the 3gft structurec <cit>  . kras, a gtpase, is one of the most pervasively activated oncogenes, with some estimates stating that between 17–25% of all human tumors contain an activating mutation of the gene
 <cit> . due to the large number of samples with mutations in this gene and the resulting strong statistical signal, graphpac, ipac and nmc all identify that kras contains highly statistically significant mutational clusters. nevertheless, graphpac identifies several novel clusters that are missed by ipac and nmc. while all three methods identify clustering at residues 12– <dig>  12– <dig> and 12– <dig>  only ipac and graphpac identify two additional clusters at 1) 61– <dig> and 2) 117– <dig> 

moreover, only graphpac  identifies a statistically significant cluster for residues 12– <dig> and 23– <dig> as shown in table
 <dig>  considering the 12– <dig> cluster, we see that a sub-cluster of 12– <dig> is identified as well. this follows biological function as mutations on residues  <dig> and  <dig> appear in a large variety of cancers, such as breast, lung, bladder, pancreas and colon
 <cit>  while mutations on residues  <dig> and  <dig> appeared in colorectal/large intestine tissue samples in our data. it is interesting to note that germline mutations on residue  <dig> often result in developmental disorders such as noonan syndrome type  <dig>  as well as cardiofaciocutaneous syndrome 
 <cit> .

nmc
ipac
graphpac
a "-" signifies that the method did not find that cluster to be significant. for graphpac, the cheapest insertion results are reported here.

finally, the majority of mutations in cluster 61– <dig> also segregate along pathological lines with all the mutations in our data either occurring in lung or gastrointestinal tract/large intestine carcinomas. specifically, residue  <dig> mutations are typically found in colorectal and lung cancer
 <cit>  while mutations k117n and a146t are found in colorectal cancer
 <cit> .

graphpac finds fewer clusters compared to nmc
as seen from figure
 <dig>  between 25%–40% of the structures identified with significant clustering had fewer clusters under the graphpac methodology as compared to the linear nmc algorithm with the vast majority of these structures corresponding to braf, hras and tp <dig>  here we consider a representative example, the 4e <dig> structure
 <cit>  for braf when analyzed using the farthest insertion method . as ipac identified even more clusters than nmc, we compare graphpac to nmc in this section when showing that fewer mutational clusters is of benefit. further, as v <dig> is well known to be the most likely mutated position in braf, the most significant cluster identified by graphpac, ipac and nmc is located only on that residue with a p-value of  <dig> ×10- <dig> under all three methods. in all, graphpac identifies  <dig> clusters while nmc identifies  <dig>  with the differences shown in table
 <dig> 

 clusters found by 
graphpac
graphpac
nmc
 clusters found by 
nmc 
 and dropped by
graphpac
nmc
a "-" for the nmc value signifies that cluster was not identified under the linear algorithm.

although it is outside the scope of this manuscript to consider every difference between tables
4a and
4b, we observe that three of the longest clusters 464– <dig>  466– <dig> and 469– <dig> are dropped by graphpac. since after alignment of the protein structural data to the mutational data , tertiary information was available on residues 448– <dig> and 610– <dig>  these clusters cover  <dig> %,  <dig> % and  <dig> % of all the available residues, respectively. by considering the 3d structure via graphpac, the longest clusters are dropped and the remaining overlapping clusters focus almost exclusively on residues 464– <dig> 

after structure and mutation alignment, the residue substitutions in significant clusters include: g464v, g466v, g469v, g469a, n581s, g596r, l597v, lv597r, v600e, v600k, k601n and r671q. since mutation r671q does not have extensive literature and comes from a non-specified tissue sample in the cosmic database, it will no longer be considered here. thus, by considering the tertiary structure, we significantly narrow the window of which residues to consider for potential driver mutations and can partition the protein into three segments: i) 464– <dig> and ii)  <dig> and iii)  <dig>  segment i is primarily associated with lung and colorectal cancer as shown in
 <cit> . segment ii represents the two most common mutations in braf, v600e and v600k. overall, 95% of braf mutations occur on v <dig>  with some studies showing that v600e occurs within 73% to 79% of patients while v600k occurs within 12% to 19% of patients
 <cit> . mutations at this position result in the oncogene being constitutively activated with increased kinase activity and have been found in a wide range of cancers such as metastatic melanoma
 <cit> , ovarian serous carcinoma
 <cit>  and hairy cell leukemia
 <cit> . furthermore, recent inhibitors, such as vemurafenib and gsk <dig> specifically target the v600e and v600e/k mutations , supporting the hypothesis that somatic clusters can provide pharmacological targets
 <cit> . lastly, segment iii is comprised of the much less common k601n mutation which has been observed in myeloma cases along with v600e. since these patients share the more common braf mutations as well, they may also potentially benefit from braf inhibitors
 <cit> .

further, as shown in section ‘results’ and described above, graphpac finds fewer clusters for a significant percentage of the structures analyzed. overall, the reduction in total clusters identified can result from two sources: the removal of some residues because no tertiary data was available or the cluster is no longer significant when using the traveling salesman algorithm to account for 3d structure. the first case, which is already rare, will become increasingly more so as additional studies result in more complete and detailed structural information. for the second case, if a cluster is not found to be significant under graphpac when compared to nmc, a near or overlapping cluster is usually found . for braf specifically, under every type of graph insertion method , every "probably damaging" or "possibly damaging" mutation  was still identified in at least one significant cluster for the structure. for a complete analysis, see "potential driver loss" in additional file <dig> 

CONCLUSIONS
in this manuscript we provide an alternative method to utilize protein tertiary structure when identifying somatic mutation clusters. by employing a graph theoretic approach to restructuring the protein order, we identify both new clusters in proteins previously shown to have clustering as well as proteins that were not previously shown to have clustering. we have also provided several examples where we are able to identify clusters of mutations that may benefit from pharmacological treatment. moreover, as graphpac uses the nmc algorithm to identify clusters rather than a fixed window size, we are able to detect clusters of varying lengths. finally, the methodology is fast and robust with the overwhelming majority of structure/protein combinations taking under  <dig> minutes each to analyze on a consumer desktop.

the graphpac algorithm, while presenting a viable alternative to the mds restriction of ipac and an improvement over nmc, nevertheless contains several limitations. first, while no longer bound to the mds requirement of ipac, there is no closed form solution to the shortest path problem and our algorithm must appeal to heuristic approximations. second, to satisfy the uniformity assumption, the mutation status of all residues must be known ahead of time. with the growth of high-throughput sequencing however, this issue is temporary. next, unequal rates of mutagenesis along with hypermutability of specific genomic regions may violate the assumption that every residue has a uniform probability of mutation. to help ensure that this assumption holds, we only consider single residue missense substitutions and have removed insertions and deletions from the analysis since they tend to be sequence dependent. further, research has shown that cpg dinucleotides may have a mutational frequency ten times or higher compared to other dinucleotides
 <cit> . however, in the analyses presented in sections ‘graphpac finds novel proteins compared to ipac and nmc’, ‘graphpac identifies additional clusters compared to ipac and nmc’, ‘graphpac finds fewer clusters compared to nmc’, only approximately 13% of the mutations used to identify clustering occurred in cpg sites. relatedly, colorectal carcinomas
 <cit>  contain more transition mutations while cigarette use results in more transversion mutations in lung carcinomas
 <cit> . still, when considering kras, the overwhelming majority of substitutions occur on residues  <dig>   <dig>  and  <dig> for both colorectal and lung cancer, implying that while the mutational landscape may vary, it does not have a significant effect on mutation location and thus would not violate the uniformity assumption. hence, while this analysis is influenced by a variety of factors, as are previous studies, it nevertheless appears that the primary cause of clustering is selection for a cancer phenotype.

several areas for future research are also directly evident. first, an approach that considers the protein directly in 3d space via simulation may be employed. however, such an approach would not be able to use the order statistic methodology to identify clustering and thus might not be as sensitive for small mutation counts. moreover, while we only consider distance when finding the shortest path through the graph, future research can incorporate the physico-chemical properties of the specific residues or domains by appropriately increasing or decreasing edge length. the potential additive effect of multiple cancer mutations in the same protein, as discussed in the case of egfr by hashimoto et al. <cit> , can also be incorporated via additional refinement of the edge weights. additional research is required in this area in order to incorporate these improvements.

overall however, graphpac utilizes protein tertiary structure via a graph theoretic approach in identifying mutational clustering. we show that this method identifies new clusters that are otherwise missed and that in some cases, pharmaceutical targets for mutations in these clusters have already been found and therapies created. specifically, erlotinib and getfinib are used to target mutations in egfr significant clusters  while vemurafenib is used to target mutations that occur within braf significant clusters . this helps confirm the hypothesis that mutational clustering may be indicative of driver mutations and as new protein structures become available, graphpac can provide a rapid methodology to identify such potential mutations.

availability and requirements
project name:graphpac: identification of mutational clusters in proteins via a graph theoretical approach.

project home page:http://www.bioconductor.org/packages/release/bioc/html/graphpac.html

operating system: platform independent

programming language: r

other requirements: r ≥ <dig>  .

license: gpl-2

endnotes
a under a complete graph, every vertex is connected to every other vertex. the length of the edge between vertices i and j is set to be equal to the length between amino acids i and j in
r <dig> 

b a hamiltonian path is a walk through the graph that visits every vertex once and only once.

c for this analysis, a manual reconstruction was performed in order to include residue  <dig> which is listed as a histidine under isoform 2b in the uniprot database and a glutamine in the cosmic database. as the substitution of one amino acid in the structure would not have a significant impact on the spatial structure of the protein, and residue  <dig> is a highly mutated position, the residue was kept in the analysis. as a result, amino acids 1– <dig> are used.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
gr and hz developed the graphpac methology. kc was responsible for obtaining the mutation data from the cosmic database. gr and yc executed the methodology on the protein structures. gr drafted the original manuscript while kc, yc, ym and hz were responsible for revisions. hz finalized the manuscript. all authors have read and approved the final text. this work was supported in part by nsf grant dms  <dig> , nih grants gm <dig> and ca <dig>  as well as a fellowship from the yale world scholars program of the china scholarship council .

supplementary material
additional file 1
cosmic query. the sql query used to extract the mutations from cosmic.

click here for file

 additional file 2
structure files. a detailed list of which protein-structure combinations were used and what chains were selected.

click here for file

 additional file 3
distribution summary. a detailed list of kendall’s distance for each structure under each of the methods.

click here for file

 additional file 4
results summary. a summary of each structure’s most significant p-value for both ipac and nmc.

click here for file

 additional file 5
relevant sites. a review showing which of the ipac clusters fall within structurally relevant sites.

click here for file

 additional file 6
performance evaluation. in-depth results validating the ipac results using polyphen- <dig> and chasm.

click here for file

 additional file 7
potential driver loss. an analysis of whether any potential driver mutations are lost when ipac finds fewer clusters than nmc.

click here for file

 acknowledgements
we thank drs. robert bjornson and nicholas carriero for their time and help in discussing this methodology.
