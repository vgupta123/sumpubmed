BACKGROUND
the majority of dna microarrays in use today are created from single genomes that do not reflect the genetic diversity of a group of heterogeneous entities. mixed-dna microarrays offer an alternative for "capturing" genetic diversity and can be used for classification purposes such as identifying pathogens or determining genetic relationships for epidemiology studies  <cit> . dna from one or more reference strains or plasmids is shotgun-cloned, and a mixed-genome or mixed-plasmid microarray is generated from randomly selected, pcr-amplified clone inserts  <cit> . unlike most fingerprinting tools, the mixed-array format permits identification of informative probes that can be retrieved from the clone library for sequencing  <cit> . however, redundant sequences and limited representation of diversity can limit the application of these tools  <cit> . fortunately, a growing public database of genomes offers a new opportunity to incorporate non-redundant and diverse sequences into a mixed-microarray format. these arrays can be used to quickly assess the distribution of genetic diversity across multiple species and niches.

this work focuses on the optimal design of classification arrays. by optimal we mean minimizing the complexity and cost of an array by using as few probes as possible while still rendering sufficient information to discriminate between strains or groups of organisms and to avoid bias; the goal is to remove irrelevant probes  and reduce the number of redundant probes  in such a way that the chosen probes will allow us to perform the desired classification task accurately. selection of an optimal set of probes is a key factor in designing a successful mixed microarray to suit a particular need. the effects of probe length and the number of probes per gene have been discussed in  <cit> . a method for finding unique and valid oligonucleotides or probes was proposed in  <cit> , which tries to identify probes for a gene such that there is no similar occurrence in other locations of a genome. a tool for choosing optimal dna oligos is reported in  <cit> , which identifies oligo sequences that occur in members of the target group but not in the non-target group. however, these methods are used for genome-wide probe selection and are not intended to identify minimum probe sets for classification problems.

a number of methods have been introduced for designing optimal probe sets. pre-filtering methods  <cit>  use clustering of all probes to find similar probe groups. similar probes are discarded; the remaining probes are ranked, and top-ranked probes are kept for further analysis. a similar method  <cit>  uses k-means to cluster all genes, and the means of different gene clusters are used as prototype genes. the limitation of these methods is that the number of clusters must be specified. a hybrid approach  <cit>  ranks the probes first and selects a set of top-ranked probes. hierarchical clustering is then used on these probes to generate a dendrogram. the optimal probes are selected by collapsing dense clusters. in this manner a small set of probes is identified that has a similar prediction accuracy to one that uses more probes.

the methods described above identify optimal probes using training data when the structure of the data is given. such information, however, is usually unavailable for microarray data sets. a tool is still needed to help design mixed microarrays when prior knowledge of a microarray data set is unavailable. the focus of this paper is a software program, plasmid, used for selecting an optimal set of probe sequences without a priori knowledge that will enable correct classification of groups of plasmids or bacteria. data used to identify probe candidates can be either existing microarray data  or sequence data from a public database such as genbank. the latter are converted to "probe" sequences, and virtual hybridization is used to generate data for probe selection  <cit> . to demonstrate the generality of plasmid, we include an example whereby the program can also be applied to develop a minimum probe set to distinguish between two classes of leukemia using data from an expression array.

methods
finding meaningful clusters in hybridization data
finding meaningful clusters of samples  from a given set of hybridization or sequence data is the starting point for the design of an optimal microarray; our tool provides several clustering options. clustering methods can be divided into two general groups: distance-based methods and model-based methods. distance-based methods are either non-hierarchical or hierarchical, and each method has its particular strengths and weaknesses. currently our tool includes the k-means non-hierarchical clustering algorithm and hierarchical clustering by means of unweighted pair group method with arithmetic mean , neighbor joining, or ward's minimum variance method, all of which are widely used in microarray data analysis  <cit> . two distance metrics have been implemented, euclidean distance and pearson's correlation coefficient, from which users can choose. the distance-based methods listed above are standard clustering techniques. in addition to these, we have also implemented the model-based clustering method described below.

model-based genetic clustering
distance-based methods are simple to use, and the clustering results are easy to explain. however, it is hard to obtain information about the number of clusters, the confidence level of the clustering results, and so on, from these methods. to avoid some of these issues, model-based clustering methods can be used as an alternative. model-based clustering methods assume that the data can be clustered according to a set of underlying distributions. these underlying distributions can be modeled, and finding a suitable model can be construed as an optimization problem. we assume that m is the underlying model for a data set represented by a matrix x where each row of the matrix represents the data for a given sample . the best clustering result is represented by partition p of x. a measure is used to determine which p is most likely for x. in our tool the measure is the likelihood of all possible partitions p. a number of different optimization methods can be used to find the solution for p. in our tool, we have chosen to use a genetic algorithm because of its simplicity and efficiency in addition to its ability to find the optimal solution. usually model-based clustering methods are based on the expectation-maximization  method. however, em algorithms tend to break down for microarray data because an inversion of the covariance matrix must be performed. in genetic algorithms, a search method is used to circumvent the need for this computation, thereby making genetic model-based methods more stable.

to find the best partition p we want to maximize the posterior probability f. according to bayes' theorem, f=fff where f is the prior probability. recasting bayes' theorem in terms of the likelihood ℒ gives f ∝ ℒ f –that is, the posterior probability is proportional to the product of the likelihood and prior probability. now if we assume a uniform distribution for p, then f is constant and maximizing the posterior probability f is equivalent to maximizing the likelihood ℒ.

if we assume the rows of the matrix x in each cluster of the partition are independent and identically distributed, we can compute the likelihood of a partition. for this work, we assume the rows in each cluster are normally distributed with mean μi and variance σi <dig>  and we assume a normal distribution for all μi and an inverse-Γ distribution for all σi <dig>  this leads to:

  ℒ=∏k∏j2σ02Γ−nk+1Γ2nk+1)) 

where k is the index of clusters, j is the index of probes, nk is the number of samples in the kth cluster, ki is the index of samples in the kth cluster, and μ <dig> and σ <dig> are the overall mean and variance of all the data  <cit> .

using this as a measure, the genetic algorithm is used to find the partition that maximizes the likelihood. the steps of the genetic algorithm are summarized as follows:

 <dig>  generate n random partitions. each partition is represented by a vector  where each term is the index of a cluster.

 <dig>  prior knowledge of pairs of samples highly unlikely to be in the same cluster can be incorporated into the partition likelihood by creating a text file with each pair of samples, together with a small weighting factor, on one line. the weighting factor must be smaller than  <dig>  but how much smaller has to be determined empirically based on the end result. a weighting factor of zero indicates that the pair cannot be in the same cluster.

 <dig>  compute the likelihood ℒ for all partitions.

 <dig>  repeat the following steps until the the maximum iterations  has been reached or the difference between the likelihood of two successive iterations is less than ε, where max and ε are given.

 select the two partitions with the highest scores.

 do crossover and mutation on these two partitions to generate new partitions. crossover is accomplished by randomly selecting sections of equal length from each partition and exchanging them. mutation is performed following crossover and is accomplished by randomly selecting one term in each of the partitions and changing it to a different value.

 compute the likelihood ℒ for these two new partitions .

 replace the two lowest-ranked partitions with the offspring.

other measures can be used including bayesian information criteria and minimum description length. these measures will be included in future versions of plasmid.

probe ranking for classification
in a dna microarray data set there are usually many more probes than the number of samples  to be classified, and often some probes either convey no useful information or convey the same information. thus, in the design of an optimal probe set for sample classification, one objective is to identify and remove irrelevant and redundant probes. in this section, we describe our method for removing irrelevant probes; in the next section redundancy reduction is described.

irrelevant probes are removed using probe ranking on the clusters of samples obtained in the previous step. there are two basic approaches to probe ranking: filter techniques and wrapper techniques. because of their simplicity, filter procedures are used most commonly for dna microarrays. the filter procedure ranks each probe using a metric based on its classification relevance. top-ranked probes are then selected to perform classification. numerous filter metrics are described in the literature  <cit> : probabilistic and distance metrics, dependence measures, scores based on information theory, etc. in our tool, filter metrics are determined using two different statistical tests, the anova-f and brown-forsythe tests. other tests considered were the welch, adjusted welch, cochran, and kruskal-wallis test statistics  <cit> .

the test statistic is used as a metric to evaluate the discriminating power of a probe. higher values represent more discriminating probes. for some applications, clusters may include an insufficient number of samples for meaningful statistical analysis. such cases can be handled by generating random samples that differ only slightly from the original samples. these samples can be included in the statistical analysis and then discarded without compromising the probe ranking procedure. the purpose of adding these samples is for computational convenience only; they do not add more information.

the end result of the probe ranking function is a list of all probes ranked by their classification relevance. at this point, the user can either stop and use some chosen number of the top-ranked probes for the array probe set or continue with probe reduction and stepwise discriminant analysis to remove redundant probes and assign weights to the probes.

stepwise discriminant analysis
probe ranking is used to remove irrelevant probes that convey little or no information. nevertheless, while the top-ranked probes are informative, at least some of them are likely to convey redundant information. the next task is to remove this unnecessary redundancy. k-means clustering is usually used to cluster samples  as described in an earlier section, but here we use it in a novel way to cluster probes. a set of top-ranked probes is clustered into κ groups where the value of κ is evaluated empirically to maximize classification accuracy; probes in the same group are highly correlated with each other but uncorrelated or loosely correlated with probes in other groups. the probe closest to the center of a group is chosen to be representative of that group, and the κ representative probes are used with stepwise discriminant analysis   <cit>  which identifies the optimal probe set g from the κ probes. at each step of the sda, an f statistic is computed for each probe; this value is used to determine whether including the probe or excluding the probe from g will significantly improve sample differentiation. the sda process starts with an empty probe set g, and an iterative process of adding a probe to g or removing a probe from g continues until no probes can be added or removed. fremove is used for the probes in g, and fenter is used for the probes not in g. the probe in g with the smallest value of fremove less than a chosen threshold value, usually  <dig> , is removed; the probe not in g with the largest value of fenter greater than the threshold value is added to g. the formulas used to compute f are:

f values:

  fremove=n−r−q+1q−1Λ−ΛΛ 

  fenter=n−r−qq−1Λ−ΛΛ 

wilks' Λ:

  Λ=det⁡det⁡ 

within-group covariance matrix:

  w=∑m=1q∑m=1nm 

among-group covariance matrix:

  t=∑m=1q∑m=1nm 

where q is the number of clusters, nm is the number of samples in the cluster m, xmki is the value of the ith probe for the kth sample in the mth cluster, n is the total number of samples, r is the number of probes currently included in g, g|p denotes a new group of probes which is obtained by adding the probe p to g, and g\p denotes a new group of probes which is obtained by removing the probe p from g.

at the conclusion of sda, the optimal probe set is determined based on the prediction accuracy of the selected probes. because there are typically a small number of samples associated with microarray data, prediction accuracy is computed using the leave-one-out  cross validation method  <cit> . the set of probes associated with the highest loo predication accuracy is written to a file together with its associated weights. it is important to note that when sda is used to obtain the final probe set, the weights associated with the probes must be used for classification of new empirical data obtained using the probes. the probes should not be treated with equal weight.

probe selection for a classification microarray
in summary, the steps in our design of an optimal probe set are:

 <dig>  cluster the samples  using microarray or sequence data and select clusters of interest using a hierarchical, non-hierarchical, and/or model-based method. a priori clustering is also permitted.

 <dig>  use the probe ranking procedure with the sample clusters to rank the probes for relevance.

 <dig>  repeat k-means clustering of probes for probe reduction until satisfied:

 select j top-ranked probes.

 repeat for κ in a chosen range:

i. cluster the j top-ranked probes into κ clusters.

ii. choose κ representative probes, one from each cluster.

iii. use sda to find a set of probes from the κ representative probes and compute the loo prediction accuracy.

 <dig>  save the set of probes associated with the highest loo prediction accuracy together with its weights. after constructing the optimized microarray, a set of independent control samples should be hybridized to empirically assess the accuracy of the microarray results.

a flowchart of the process is shown in fig.  <dig>  it should be pointed out that the optimal number of probes computed by this process does not take into account the effects of noise and other random experimental effects. the sample-to-feature  ratio gives the minimum number of probes that should be used to create a microarray. the rule of thumb is given by  <cit> :

 sfr=number of samplesnumber of features≤ <dig>  

in this paper we refer to features as probes. the sfr should be used in conjunction with the results to choose the optimal probe set.

system overview and implementation
our software tool plasmid is implemented as a java application. the netbeans platform was chosen for development because addition of new functions is easily implemented. also, many of the tasks common to desktop applications are provided by netbeans. these include user interface management , user settings management, storage management , window management, and wizard framework . each function is implemented as a netbeans module and can be installed or removed easily without affecting existing functions. java is a platform-independent programming language, so although plasmid has been developed using the windows operating system, it will be relatively easy to adapt it to other operating systems. we intend to extend plasmid to both the linux and mac os x operating systems. in addition to java, plasmid uses code written using the c++ programming language. c++ is needed for computationally intensive tasks that require greater speed and efficiency. the use of two different programming languages is transparent to the user.

plasmid provides an integrated environment for designing an optimal classification microarray. as such, plasmid v <dig>  includes the following services:

 <dig>  loading and management of different kinds of input data, including plasmid sequence data, hybridization data, virtual hybridization data, and probe sequences. data may be in tab-delimited or comma-delimited text format or in microsoft excel spreadsheet format.

 <dig>  different methods for processing hybridization data. the tool provides several data preprocessing methods, including normalization and noise filtering. it also provides hierarchical, non-hierarchical, and model-based methods for clustering samples; two different statistical tests for ranking probes; use of k-means clustering for reduction of probe redundancy; and stepwise discriminant analysis with assignment of weights to probes.

 <dig>  design of mixed arrays using existing hybridization data or virtual hybridization data. an optimal set of probes is identified, and weights associated with each probe are stored for analysis of experimental results.

 <dig>  construction of virtual microarrays to obtain virtual hybridization data using genomes from the national center for biotechnology information  database. genomes for probes can be chosen by accession number or by gene sequence.

 <dig>  visualization of microarray data and data processing results, including dendrograms, heat maps, and scatter plots. plots can be saved in different image formats.

 <dig>  automatic probe design after the user has specified the parameters. a step-by-step wizard guides the user through the various steps.

experimental data obtained from microarrays designed using plasmid can be used as input data and analyzed using the weighted classification function obtained in  <dig> 

RESULTS
in this section we present results obtained using plasmid to analyze a mixed-plasmid microarray data set  <cit>  and a simulated mixed-genome microarray data set  <cit> . we also present results for publically-available leukemia expression array data  <cit> . for this latter data set, clusters  are pre-assigned so only probe ranking, reduction of probe redundancy, and stepwise discriminant analysis  are used to determine the optimal probe set. plasmid's performance in probe selection is evaluated using the leave-one-out  approach for which one sample is excluded and the remaining samples are used to obtain the discriminant functions. each sample is, in turn, excluded and a corresponding set of discriminant functions is used to classify it. the prediction accuracy, the percentage of times the withheld samples are correctly classified, is used as the performance metric.

mixed-plasmid microarray data
a mixed-plasmid microarray has been used to compare the genetic composition of plasmids  <cit> . the microarray consists of  <dig> probes composed of randomly selected fragments of plasmid dna, and the data were obtained from hybridization experiments with  <dig> plasmids. the data are composed of hybridization signal intensities for each microarray probe .

first we used the ward's minimim variance hierarchical clustering algorithm to create a dendrogram. to test the two-class problem, we divided the dendrogram into two clusters. one cluster consisted of  <dig> plasmids which, with one exception , have the blacmy- <dig> antibiotic resistance gene; the other cluster consisted of  <dig> plasmids. we then used the probe ranking function, choosing the anova-f test statistic, and generated a scatter plot . the scatter plot shows that the majority of the probes have statistical values close to zero and, thus, that anova-f test statistics can be used to distinguish between informative  and uninformative  probes. this result also serves to highlight the need for optimization algorithms, as the majority of probes provide limited discrimination.

for the two-cluster case, we chose  <dig>   <dig>  and  <dig> top-ranked probes for comparison. using reduction of probe redundancy and sda, we found that a single probe  correctly classified all but two of the plasmids  <cit> . interestingly, in the original study one of these two plasmids  was classified with plasmids that harbor the blacmy- <dig> gene even though it does not carry this gene. analysis with plasmid separated pe1171st from the blacmy - <dig> plasmids. in addition, a different plasmid  that harbors the blacmy- <dig> gene was classified with other blacmy- <dig> positive plasmids. thus, analysis using plasmid more accurately reflects the phenotypic properties of the plasmids included in the study. the one exception was the pessut plasmid that was consistently classified with blacmy- <dig> plasmids while not harboring this gene  <cit> .

next we divided the original dendrogram into five plasmid clusters and ranked probes as before. as expected, the number of probe clusters κ specified for the reduction of probe redundancy affects the prediction accuracy . small values of κ certainly reduce redundancy, but they also reduce specificity. the optimal set of probes is identified using sda with the loo method to determine the highest prediction accuracy. in this case, the smallest number of probes from the top-most ranked probes with the highest prediction accuracy is  <dig>  thus, plasmid analysis reduced the original data set of  <dig> probes to  <dig> probes that are needed to accurately classify plasmids into one of five groups. non-hierarchical clustering followed by probe ranking, probe reduction, and sda gave similar results .

in addition to hierarchical and non-hiearchical clustering methods, we can obtain classification results using our model-based method, which is based on a genetic algorithm. the genetic algorithm predicted that the most likely number of plasmid clusters is five . comparison of tables  <dig> and  <dig> shows that prediction accuracies depend on the initial clustering method used. for this case, the prediction accuracies for the model-based clustering method are larger for a given number of probe clusters than those obtained via the hierarchical method. furthermore, the variance in prediction accuracies is lower as a function of the number of top-ranked probes when clusters are initially assigned using the model-based method. for other data sets, however, another clustering model might give the best results.

based on the sample-to-feature ratio , at least  <dig> probes  are required for classifying  <dig> plasmids . tables  <dig> and  <dig> show several choices for  <dig> probes with equivalent performance. when additional information is available, it should be used to assist with the choice of a final set.

virtual streptococcus mixed-genome microarray data
a virtual streptococcus mixed-genome microarray was constructed by wan et al.  <cit> . to create the equally-represented, 4000-probe virtual array,  <dig> gene segments each 600-bp long were randomly selected from genomes of fifteen strains of five bacterial species–that is, each species was represented by  <dig> different probes. virtual hybridization was accomplished using blast scores as proxies for array probe intensities , and plasmid was used to analyze the data. in the initial analysis one bacterial species was excluded from the study because it was represented by only a single strain . because we knew a priori that the samples belonged to four different species, the goal was to find an optimal set of probes to classify these four. anova-f tests were used to rank the  <dig> probes, and loo analysis was performed on different numbers of the highest ranked probes. in fact, we found the loo prediction accuracy to be 100% for differentiating the four different species using only the single top-ranked probe. on examination we found that the hybridization values  for this probe for strains from different groups were well separated , while the hybridization values for strains from the same group were very similar. while it appears that successful classification can be achieved with a single probe when classification relies on differences in hybridization signal, given inherent sources of variation in microarray hybridization, it would be prudent to include additional probes to increase classification confidence for empirical data. for example, the minimum recommended probe set in this case would be  <dig> according to the sfr.

in the second analysis, our model-based clustering method identified two clusters, one with the two s. pneumoniae strains and the other with the remaining  <dig> strains. after probe ranking, reduction of probe redundancy, and sda, a single probe could be used to differentiate these two groups. we also used non-hierarchical clustering of the samples followed by probe ranking, probe reduction, and sda. when the number of clusters was chosen to be k =  <dig>  the result was identical to the result obtained using our model-based cluster method. when the number of clusters was chosen to be k =  <dig> or k =  <dig>  the two s. pneumoniae genomes were placed into different groups. a dendrogram constructed using the neighbor joining method shows a clear distinction between the two s. pneumoniae samples and the remaining bacteria . when these two samples are excluded, plasmid groups the remaining thirteen samples correctly into four species clusters. the results shown in table  <dig> are obtained using non-hierarchical clustering, probe ranking, probe reduction, and sda. as this table illustrates, only  <dig> probes are needed to obtain 100% prediction accuracy by species. these  <dig> probes are from the genomes of s. pneumoniae tigr <dig> and either s. pyogenes m <dig> gas or s. pyogenes mgas <dig>  based on the sfr rule of thumb, at least  <dig> probes are needed. several choices exist that suffice for this condition.

for virtual microarrays, blast scores are used to obtain hybridization intensities, and the accuracy of the scores will affect the choice of an optimal probe set. while error could be modeled from real data, the best measure of reliability will be obtained using actual hybridization experiments.

public all/aml leukemia data
the all/aml leukemia data set, obtained from expression arrays, has been widely used in the literature. it consists of two classes of leukemia, acute lymphoblastic leukemia  and acute myeloblastic leukemia , and there are  <dig> samples  and  <dig> probes. table  <dig> shows prediction accuracy results after probe ranking, probe redundancy reduction, and sda have been performed. when the top  <dig> probes were selected, the highest accuracy was achieved when probes were clustered into  <dig> groups. a set of  <dig> probes was identifed with a prediction accuracy of  <dig> %. using additional probes does not lead to improvement. according to the sfr rule of thumb, at least  <dig> probes should be used in the actual microarray design; several choices of  <dig> probes exist and all produce robust prediction results .

CONCLUSIONS
in this paper we describe a new software tool, plasmid, for selecting an optimal set of probes for the design of a classification microarray. the tool provides the user with several clustering methods, a probe ranking method, probe redundancy reduction, and probe selection using stepwise discriminant analysis. images can be saved in several different formats, and weights generated using sda can be stored for use in analysis of experimental data. in addition, plasmid can be used to construct virtual microarrays with genomes from public databases; these can then be used to determine an optimal probe set for use in actual microarray experiments. the software package has been applied to data from a mixed-plasmid microarray, a virtual mixed-genome microarray, and an expression microarray. robust results have been obtained for all three sets of data.

although many methods are available for determining a set of probes for a given microarray data set, these methods require the classification information to be known in advance. plasmid was designed to be used prior to implementation of a microarray when no such information is available, although the program can also be used when clusters are known a priori.

plasmid can be obtained by following the link from .

availability and requirements
• project name: plasmid

• project home page: 

• operating system: windows but to be ported to linux and mac os x

• programming languages: java and c++ 

• other requirements: java runtime environment

• license: free to academic and nonprofit organizations

authors' contributions
dm and slb developed plasmid, dm was responsible for programming plasmid, and drc provided the necessary microbiology expertise. all authors have read and approved the final manuscript.

supplementary material
additional file 1
mpm. this file contains the information for the mixed-plasmid microarray in the form of a 44-row × 577-column matrix. the first row gives the  <dig> probe names, and the first column gives the  <dig> plasmid names. the remaining rows and columns contain the hybridization intensity data.

click here for file

 additional file 2
mgm. this file contains the information for the mixed-genome virtual microarray in the form of a 15-row × 4001-column matrix where the first column gives the  <dig> names of the streptococcus strains. the probes were not given specific names. all remaining columns contain the virtual hybridization intensity data.

click here for file

 acknowledgements
this project has been funded by the national institute of allergy and infectious diseases, national institutes of health, department of health and human services, under contract no. no-1-ai-30055; by the agricultural animal health program, college of veterinary medicine, washington state university, pullman, wa; and by the carl m. hansen foundation.
