BACKGROUND
comprehensive representation of the roles of gene products, individually and in combination, is essential to the understanding and modeling of biological systems. in addition to a gene product’s intrinsic activity, aspects of the context in which it acts, such as the gene products it acts upon, subcellular location of the activity, distribution in cell or tissue types, or temporal restrictions to a cell cycle phase or developmental stage, must be described in order to obtain a full description of its biological role.

the gene ontology  is a bioinformatics resource that uses structured controlled vocabularies  to describe the molecular functions or activities of a gene product, the biological processes in which a gene product is involved and the cellular components in which a gene product is located. associations or ‘annotations’ can be made between ontology terms and specific genes or gene products using a variety of manual or algorithmic methods that rely upon experimental evidence or sequence similarity, for example, to support the assertion
 <cit> .

while the ontological rigor of the go vocabularies has been enriched over the years through the use of expressive formalisms that permit logical reasoning and interaction with external ontologies
 <cit> , the annotations themselves have, until now, remained simple declarative statements. each go annotation is essentially a pair, combining a single gene product with a single go term, plus supporting metadata such as the evidence for the association
 <cit> . furthermore, any gene product can be associated with many go terms, and likewise any go term could be used to annotate any number of gene products, the annotations thus coded remain independent. the simplicity of this core go annotation model has facilitated the population of large annotation datasets, but this simplicity has, as well, been unable to capture the interconnections between multiple annotations to multiple genes, resulting in limitations on the granularity and connectivity of information that could be captured. figure 
 <dig> illustrates this by showing a subset of molecular function and cellular component annotations to several gene products, including microsomal glutathione transferase 1
 <cit> . while the annotations can describe which activities the gene products can perform, and in which components they are located, there is no way of combining this information to convey which activities are performed in which locations.
 <cit>  cannot be found. for clarity not all annotations of each gene product are shown nor all terms between the specified terms and the root node.

guidelines for pre-composing ontology terms
in the core go annotation model, adding new terms to the ontology, or "pre-composing" terms, has traditionally captured additional biological detail. however, we have set limits on how specific terms may be differentiated from one another. for example, generally we do not add new terms for activities or processes that are identical apart from which specific genes or gene products they affect.

to illustrate this, consider the two terms ‘regulation of transcription from rna polymerase ii promoter’  and ‘regulation of sonic hedgehog transcription from rna polymerase ii promoter’. the second term would not be added to the biological process ontology because the only difference between it and its parent is the target of the regulation; the core process represented by the term is mechanistically no different from analogous processes governing transcription of other genes. although for the purpose of understanding the biology it is important to capture information about gene products that specifically regulate the transcription of sonic hedgehog, it would not be practical to create a specific transcription regulation term in the biological process ontology for every regulation target in a genome.

we also want to avoid pre-composing go terms that combine many concepts, or whose term label is very long, making it difficult for humans to easily interpret their meaning.

to enable curators to create flexible, meaningful go annotations at the time of annotation that represent a more complete picture of gene product roles in their biological context, we have introduced annotation extensions to the go annotation model. curators can add detail to go annotations using controlled vocabularies 
 <cit> ; uber anatomy ontology 
 <cit>  or plant ontology 
 <cit> ) and biological entities such as genes or their products. go annotations with extensions thus incorporate an increased level of detail and biological integration, supporting more sophisticated querying and analysis. we have applied this model to the curation of gene products from species such as mouse, human and fission yeast and are proceeding to implement it throughout the go consortium.

here we describe how annotation extensions have been incorporated into the go annotation system, summarize the relationship types we use for extensions, and provide examples of how extensions can be displayed and applied, using a corpus of annotations we have developed.

RESULTS
extending basic annotations with relationships
we extended the core go annotation model to accommodate annotation extensions. the annotation extension model is described formally in terms of the web ontology language  in the ‘methods’ section. conceptually, we take existing go terms such as ‘protein kinase activity’  or ‘nucleus’  and describe a more specific subtype through the use of one or more formal relationships to other entities . this is logically equivalent to creating a new term for the subtype in the ontology.

an extended annotation is an annotation to a go term followed by one or more relational expressions . each relational expression is written as relation, where relation is a label denoting a relationship type, and entity is an identifier for a database object or ontology term. each such expression can be thought of as refining the core go term used. for example, the entity identifier for ‘keratinocyte’  from the cell type ontology  can be combined with the relation ‘part_of’ to create the expression "part_of", and when combined with the go term ‘nucleus’  now describes a gene product that localizes to the nucleus of a keratinocyte.

relations
we created an application ontology that extends the obo  relations ontology 
 <cit>  with a set of relations created explicitly for use in go annotation extensions. these were selected and defined for practical use by iterative discussion among curators, and are collected in a file maintained in obo format
 <cit> , and also available in owl format
 <cit> . to enable curators to select the appropriate relation we have created a graphical web view , and organized relations into subsets by entity type .
 <cit> ;  a user can zoom into a particular area of the graph;  relations can be clicked to view information, such as which go terms the relation can be used with and which identifiers may be used with the relation.

the set of relations used fall into two broad categories – molecular relations, which take an entity such as a gene, gene product, complex or chemical as an argument; and contextual relations, which take an entity such as a cell type, anatomy term, developmental stage or a go term as an argument. table 
 <dig> lists the most frequently used annotation extension relations with examples of their usage.

molecular relations take an entity such as a gene, gene product, complex or chemical as an argument; contextual relations take an entity such as a cell type, anatomy term, developmental stage or a go term as an argument. entity names in italics are shown for clarity and are not part of the annotation extension format.

entities
identifiers used for the entities in annotation extensions can reference go or another ontology or database. each identifier must have a prefix found in the go database abbreviations file
 <cit> , for example "uniprotkb" 
 <cit> , "chebi" 
 <cit> , "cl" 
 <cit> , "uberon" 
 <cit> , or "po" 
 <cit> . a gene product identifier used in an annotation extension, should be interpreted in the context of the primary go term used. for example, the inclusion of the gene identifier sgd:s <dig> in the annotation extension field associated with the go term ‘protein phosphorylation’ should be interpreted as "the protein product of sgd:s <dig> is phosphorylated".

combining multiple extensions
in this new system, a single go annotation can have multiple relational expressions associated with it, where each expression uses a single relation and a single entity. multiple expressions using the same relation are permitted. for example, if a gene product can carry out its activity in multiple locations or during various processes, multiple relation pairs may be added as separate annotation extensions.

to illustrate, consider a gene product that has its activity in a neuron of the hippocampus. here it would be appropriate to make an extension combining two expressions for both the cell type  and the gross anatomical structure . if this gene product also had the same activity in an epithelial cell, this expression could be combined in the same annotation extension.

a description of the semantics of multiple extensions used in the annotation extension model can be found in the ‘methods’ section.

annotation extensions in curation to specify molecular targets
schizosaccharomyces pombe protein nep <dig> illustrates how annotation extensions can be used to represent the multiple targets of a gene product’s enzymatic activity. nep <dig> is a protease that can deneddylate proteins modified by nedd8
 <cit> . it has been shown to deneddylate three cullin proteins, cul <dig>  cul <dig> and pcu <dig> . using the core go annotation model described above, it was not possible to record the cullins as the targets of the deneddylation activity of nep <dig>  the annotation would be:

‘nedd8-specific protease activity’  with the evidence code ‘inferred from mutant phenotype’  .
 <cit>  is interpreted as: nep <dig> is capable of deneddylating the cullins cul <dig>  cul <dig> and pcu <dig>   and  graphical representation of nep <dig> annotations using  the core go annotation model and  the extended go annotation model.

using annotation extensions the annotation can be enriched as follows: nep <dig> is annotated to the term ‘nedd8-specific protease activity’  with the evidence code imp, and with several relation pairs specifying the gene product targets of the activity:  

.

this annotation means that a nep <dig> mutant phenotype  indicates that nep <dig> executes nedd8-specific protease activity and can deneddylate cul <dig> , cul <dig>  and pcu <dig>  . we use the relation has_direct_input here with a molecular function term to indicate the effector–substrate relationship between the gene product and its target protein. the pombase display of the nep <dig> annotation is shown in figure 
 <dig>  note the annotation extension relation names have been translated to more human-readable text
 <cit> .
 <cit>  requires one annotation with three separate expressions in the annotation extension. note that more human-readable text has been substituted for the annotation extension relation names for display purposes in pombase. the underlying data retain the relation names, and the mapping between relation names and display text is available on the pombase website
 <cit> .

annotation extensions in curation to specify locational context
to illustrate how annotation extensions may be used to specify locational context, we use the example of the rat signaling complex subunit, makap. makap has been shown by immunocytochemical assay to be located on the nuclear envelope of cardiomyocytes
 <cit> .

with the core annotation model, we are only able to capture the cellular compartment that makap is located in ‘nuclear envelope’  with the evidence code ‘inferred from direct assay’ .

using the annotation extension model as follows, we can capture the cellular and anatomical context of the location of makap such that makap is annotated to the term ‘nuclear envelope’  with the evidence code ida and with two relation pairs specifying the cell and tissue locations of the nuclear envelope:

part_of, part_of

this annotation means that a direct assay  has shown that rat makap is located at the nuclear envelope of ‘fetal cardiomyocytes’  of the ‘cardiac ventricle’ .

interconversion of core go annotations and annotation extensions
as annotation extensions are a relatively new feature of go curation, we have described and implemented methods that allow legacy tools  to use extended annotations without loss of specificity
 <cit> . we have also implemented reverse methods that allow the conversion of basic go annotations to extended annotations. we informally call these methods ‘folding’ and ‘unfolding’ respectively, and these make use of the owl formalization of the go . the folding operation creates a new application ontology on the fly, with each extended annotation materializing a new go term. an owl reasoner is used to automatically construct the graph in this new ontology. application of this method can be seen as a stopgap to allow continued use of existing tools – the resulting application ontology, whilst logically complete, may be unwieldy for querying and browsing. the unfolding method takes annotations to existing highly specific go terms, and replaces them with an annotation to a more basic go term, with the equivalent additional information now expressed as extensions. unfolding annotations is useful for reducing the complexity of go terms when querying or browsing.

discussion
practical application of annotation extensions
several member groups of the go consortium are now producing extended annotations to enrich their dataset. a summary of the numbers of extended annotations categorized by species is shown in table 
 <dig> 

the number of extended annotations is shown compared to the total number of manual annotations for each species. calculated with the statistics from the uniprot-goa database
 <cit>  on  <dig> november  <dig> 

currently there are few applications, databases or browsers that make use of, or display, extended annotations. in addition to their inclusion in the annotation files, extended annotations are currently displayed in the go consortium browser, amigo 2
 <cit>  and on the pombase gene information pages
 <cit>  and there are plans to display them in uniprot-goa’s go browser, quickgo
 <cit> , and on wormbase gene pages
 <cit> . outside of the go consortium, ensembl genomes
 <cit>  now display annotation extensions for s. pombe genes and these can be used for querying annotation sets in the ensembl fungi biomart
 <cit> .

as extension data becomes more widely available, querying for functional information can become more sophisticated. users of the go will be able to query the annotations for a wealth of specific information, including connections between a gene product and other entities and processes, or the locations — at the subcellular level as well as cell and tissue types — where a gene product performs specific roles. for example, a user could query for all targets of a particular protein kinase, or compose a more specific query to find all the proteins that are involved in blood vessel remodeling during retina vasculature development in the camera-type eye. annotation extensions capturing effector-target relationships at the cellular level will provide a rich source of directional information for regulatory network reconstruction. for instance, the has_input and has_direct_input relations can be used to connect signal transducing components of signaling pathways or to link dna binding regulatory transcription factors with their specific target genes. the inherent directionality encoded in the extension can also be used to increase the information content of existing interaction-based networks. annotation extensions can also assist with improving the interpretations of pathway analysis. currently pathway analysis, which uses methods such as term enrichment and pathway topology, is hampered by the lack of functional annotation with associated contextual aspects such as cell or tissue type or dependencies on other gene products or substances
 <cit> . go has the potential to enable great advances in pathway analysis by providing this contextual information in annotation extensions.

pre- vs. post-composition of go terms
as described above, increased specificity of go annotations has historically been achieved by adding new, more specific ontology terms. however, new term addition cannot accommodate every detail that would be desirable to capture in go annotations.

using annotation extensions to increase annotation specificity is logically equivalent to creating new terms in the ontology , but allows a more streamlined approach for information capture at the time of annotation. extended annotations can be ‘folded’ to create a logical equivalent of a go term, regardless of whether the term is included in the ontology. go terms that are included in the ontology are said to be ‘pre-composed’, whereas the combination of terms and annotation extensions effectively ‘post-compose’ a term. it is also possible to perform the inverse and ‘unfold’ pre-composed go terms into the equivalent extended annotation expression . whether terms are pre- or post-composed during the annotation process is thus not critical because it is possible to interconvert seamlessly between the two. identical information can thus be captured by either of two routes, creation of a new pre-composed term or during the recording of an annotation.

although many details captured in annotation extensions will remain outside the scope of go terms indefinitely, go developers will investigate systems by which annotation extensions can be automatically converted to pre-composed terms when certain criteria are met, for example where a certain number of annotations have identical extensions and the pre-composed term is in scope. the new terms will be added to the ontology using logical definitions that make them equivalent to the post-compositional annotation. annotations made previously using post-composition can be processed to the new pre-composed terms.

in the future, maintaining a good balance between pre- and post-composition will be assisted by automated methods to reason over annotations enhanced with annotation extensions to ensure the annotations are consistently grouped by an appropriate common ancestor go term.

impact on users of gene ontology annotation
the go consortium will provide annotation extension data as unfolded annotations, i.e. in the annotation files, the annotation extension will be kept in a separate field to the primary annotation. consumers of annotation data can therefore choose to be unaffected by annotation extensions by simply ignoring the additional field. however, we do hope that users and tool developers will incorporate the extensions into their tools and workflows to provide additional specificity to their queries and tools. for example, a term enrichment tool provider might provide an option to fold the annotation extensions into pre-composed terms before a user performs term enrichment. a go browser could be extended to include an option to search folded annotation extensions as well as regular go terms, e.g. it would be possible to search for all gene products that are involved in epithelial cell differentiation, whether or not the cell type was curated using the specific go term or in the annotation extension with the more general go term ‘cell differentiation’. a basic query for a go term will necessarily find the annotations to that term  with and without extensions, the user may choose whether or not to use the extension data.

we encourage users and tool developers to contact us with specific questions so we can assist them with using this data.

future developments
a longer-term goal of the go consortium is to link annotations together to fully describe the directionality and dependencies in a whole pathway or process. although annotation extensions are not sufficient to represent complete biological pathways, they provide a valuable set of data that future work can build upon. a more expressive annotation system is now under development within the go consortium, which will allow curators to join annotations sourced from different publications and with different supporting evidence to describe entire pathways or sub-processes. the annotation extensions currently being captured will feed directly into the new modular annotation system
 <cit> .

CONCLUSIONS
go annotation extensions have been introduced to enhance the depth and utility of annotation data by capturing specific contextual information regarding a gene product’s function or location. curators can now create, on-the-fly, complex go annotations that describe dependencies and consequences of a gene product’s function or location more completely than was previously possible. data curated using annotation extensions provides a repository for experimentally verified regulation targets for a wide range of gene products, including transcription factors and micrornas, information that is currently not captured by other standardized annotation approaches. a large corpus of annotations now make use of annotation extensions, and this number is growing rapidly as groups make use of powerful curation tools such as uniprot-goa’s protein2go
 <cit> . extensive annotation enhancement makes go data more informative for a biologist’s understanding of a gene or process of interest, and provides additional value to the data which can be used by go analysis tool providers to enhance the interpretation of high-throughput datasets, such as those created by next generation sequencing, transcriptomic and proteomic studies.

