BACKGROUND
during the last decades, considerable efforts have been made to elucidate the genetic basis of rare and common human diseases. the discovery of so-called disease genes, whose disruption causes congenital or acquired disease, is indeed important both towards diagnosis and towards new therapies, through the elucidation of the biological bases of diseases. traditional approaches to discover disease genes first identify chromosomal regions likely to contain the gene of interest, e.g., by linkage analysis or study of chromosomal aberrations in dna samples from large case-control populations. the regions identified, however, often contain tens to hundreds of candidate genes. finding the causal gene among these candidates is then an expensive and time-consuming process, which requires extensive laboratory experiments. progresses in sequencing, microarray or proteomics technologies have also facilitated the discovery of genes whose structure or activity are modified in disease samples, on a full genome scale. however, again, these approaches routinely identify long lists of candidate disease genes among which only one or a few are truly the causative agents of the disease process, and further biological investigations are required to identify them. in both cases, it is therefore important to select the most promising genes to be further studied among the candidates, i.e., to prioritize them from the most likely to be a disease gene to the less likely.

gene prioritization is typically based on prior information we have about the genes, e.g., their biological functions, patterns of expression in different conditions, or interactions with other genes, and follows a "guilt-by-association" strategy: the most promising candidates genes are those which share similarity with the disease of interest, or with other genes known to be associated to the disease. the availability of complete genome sequences and the wealth of large-scale biological data sets now provide an unprecedented opportunity to speed up the gene hunting process  <cit> . integrating a variety of heterogeneous information stored in various databases and in the literature to obtain a good final ranking of hundreds of candidate genes is, however, a difficult task for human experts. unsurprisingly many computational approaches have been proposed to perform this task automatically via statistical and data mining approaches. while some previous works attempt to identify promising candidate genes without prior knowledge of any other disease gene, e.g., by matching the functional annotations of candidate genes to the disease or phenotype under investigation  <cit> , many successful approaches assume that some disease genes are already known and try to detect candidate genes which share similarities with known disease genes for the phenotype under investigation  <cit>  or for related phenotypes  <cit> . these methods vary in the algorithm they implement and in the data they use to perform gene prioritization. for example, endeavour and related work  <cit>  use state-of-the-art machine learning techniques to integrate heterogeneous information and rank the candidate genes by decreasing similarity to known disease genes, while prince  <cit>  uses label propagation over a protein-protein interaction  network and is able to borrow information from known disease genes of related diseases to find new disease genes. we refer the reader to  <cit>  for a recent review of gene prioritization tools available on the web.

here we propose prodige, a new method for prioritization of disease genes based on the guilt-by-association concept. prodige assumes that a set of gene-disease associations is already known to infer new ones, and brings three main novelties compared to existing methods. first, prodige implements a novel machine learning paradigm to score candidate genes. while existing methods like those of  <cit>  score independently the different candidate genes in terms of similarity to known disease genes, prodige exploits the relative similarity of both known and candidate disease genes to jointly score and rank all candidates. this is done by formulating the disease gene prioritization problem as an instance of the problem known as learning from positive and unlabeled examples  in the machine learning community, which is known to be a powerful paradigm when a set of candidates has to be ranked in terms of similarity to a set of positive data  <cit> . second, in order to rank candidate genes for a disease of interest, prodige borrows information not only from genes known to be associated to the disease, but also from genes known to play a role in diseases or phenotypes related to the disease of interest. this again differs from  <cit>  which treat diseases independently from each other. it allows us, in particular, to rank genes even for orphan diseases, with no known gene, by relying only on known disease genes of related diseases. in the machine learning jargon, we implement a multi-task strategy to share information between different diseases  <cit> , and weight the sharing of information by the phenotypic similarity of diseases. third, prodige performs heterogeneous data integration to combine a variety of information about the genes in the scoring function, including sequence features, expression levels in different conditions, ppi interactions or presence in the scientific literature. we use the powerful framework of kernel methods for data integration  <cit> , akin to the work of  <cit> . this differs from approaches like that of  <cit> , which are limited to scoring over a gene or protein network.

we test prodige on real data extracted from the omim database  <cit> . it is able to rank the correct disease gene in the top 5% of the candidate genes for 69% of the diseases with at least one other known causal gene, and for 67% of the diseases when no other disease genes is known, outperforming state-of-the-art methods like endeavour and prince.

RESULTS
gene prioritization without sharing of information across diseases
we first assess the ability of prodige to retrieve new disease genes for diseases with already a few known disease genes, without sharing information across different diseases. as a gold standard we extracted all known disease-gene associations from the omim database  <cit> , and we borrowed from  <cit>  nine sources of information about the genes, including expression profiles in various experiments, functional annotations, known protein-protein interactions , transcriptional motifs, protein domain activity and literature data. each source of information was encoded in a kernel functions, which assesses pairwise similarities between each pair of genes according to each source of information. we compare two ways to perform data integration: first by simply averaging the nine kernel functions, and second by letting prodige optimize itself the relative contribution of each source of information when the model is estimated, through a multiple kernel learning  approach. we compare both variants with the best model of  <cit> , namely, the mkl1class model which differs from prodige in this case only in the machine learning paradigm implemented: while prodige learns a model from positive and unlabeled examples, mkl1class learns it only from positive examples. since  <cit>  showed that mkl1class outperforms the original endeavour algorithm based on fusion of rankings  <cit>  and may replace it in the future, we take the performance of mkl1class as an optimistic surrogate of endeavour's performance. we tested these three algorithm in a leave-one-out cross-validation  setting. in short, for each disease, each known disease gene was removed in turn, a model was trained on using the remaining disease genes as positive examples, and all  <dig> genes in our database were ranked; we then recorded the rank of the positive gene that was removed in this list. we focused on the  <dig> diseases in our dataset having at least  <dig> known disease genes, because all three methods require at least one known disease gene for training, and for the purpose of loocv we need in addition one known disease gene removed from the training set.

both prodige <dig> variants recover roughly one third of correct gene-disease associations in the top  <dig> genes among almost  <dig>  i.e., in the top  <dig> %. however, we found no significant difference between the mean and mkl variants of prodige in this setting . this means that in this case, assigning equal weights to all data sources works as well as trying to optimize these weights by mkl. supported by this result and by the fact that mkl is much more time-consuming than a svm with the mean kernel, we decided to restrict our experiments to the mean kernel in the following experiments.

gene prioritization with information sharing across diseases
in a second run of experiments, we assess the performance of prodige when it is allowed to share informations across diseases. we tested three variants of prodige, as explained in material and methods: prodige <dig>  which uniformly shares information across all diseases without using particular informations about the diseases, prodige <dig>  which weights the sharing of informations across diseases by a phenotypic similarity between the diseases, and prodige <dig>  a variant of prodige <dig> which additionally controls the sharing of information between diseases that would have very similar phenotypic description but which remain different diseases. all variants are based on the same methodological backbone, namely, the use of a multitask learning strategy, and only differ in a function used to control the sharing of information. we limit ourselves to the  <dig> diseases in the disease-gene association dataset which were also in the phenotypic similarity matrix that we used. this corresponds to a total of  <dig> associations between these diseases and  <dig> genes. we compare these variants to prince  <cit> , a method recently proposed to rank genes by sharing information across diseases through label propagation on a ppi network.

the fact that prodige <dig> and prodige <dig> outperform prince for all rank values confirm the competitiveness of our approach. on the other hand, the comparison with prince is not completely fair since prodige exploits a variety of data sources about the genes, while prince only uses a ppi network. in order to clarify whether the improvement of prodige over prince is due to a larger amount of data used, to the learning algorithm, or to both, we ran prodige <dig> with only the kernel derived from the ppi network which we call prodige-ppi in figure  <dig>  in that case, both prodige and prince use exactly the same information to rank genes. we see on the left picture that this variant is overall comparable to prince , confirming that the main benefit of prodige over prince comes from data integration. interestingly though, at the beginning of the curve , prodige-ppi is far above prince, and even behaves comparably to the best method prodige <dig>  since prodige-ppi and prince use exactly the same input data, this means that the better performance of prodige-ppi for low ranks comes from the learning method based on pu learning with svm, as opposed to label propagation over the ppi network.

to better visualize the differences between the different variants of prodige, the scatter plots in figure  <dig> compare directly the ranks obtained by the different variants for each of the  <dig> left-out associations. note that smaller ranks are better than large ones, since the goal is to be ranked as close as possible to the top of the list. on the left panel, we compare prodige <dig> to prodige <dig>  we see that many points are below the diagonal, meaning that adding a dirac kernel to the phenotype kernel  generally improves the performance as compared to using a phenotype kernel  alone. on the right panel, the prodige <dig> is compared to the prodige <dig>  we see that the points are more concentrated above the diagonal, but with large variability on both sides of the diagonal. this indicates a clear advantage in favor of the phenotype kernel compared to the generic multitask kernel, although the differences are quite fluctuant.

is sharing information across diseases beneficial?
in order to check whether sharing information across diseases is beneficial, we restrict ourselves to diseases with phenotypic informations and with at least two known associated genes in the omim database. this way, we are able to share information across diseases and, at the same time, to run methods that do not share information because we ensure that there is at least one training gene in the loocv procedure. this leaves us with  <dig> diseases, corresponding to  <dig> associations.

on the other hand, in the context of gene prioritization, it is useful to focus on the beginning of the curve and not on the full cdf curves. indeed, only the top of the list is likely to deserve any serious biological investigation. therefore we present a zoom of the cdf curve in panel  of figure  <dig>  we see there that the local methods prodige <dig> and mkl1class present a sharper increase at the beginning of the curve than the global methods, meaning that they yield more often truly disease genes near the very top of the list than other methods. additionally, we observe that prodige <dig> is in fact the best method when we focus on the proportion of disease genes correctly identified in up to the top  <dig> among  <dig>  i.e., in up to the top  <dig> % of the list. these results are further confirmed by the quantitative values in table  <dig>  which show the recall  as a function of the rank. prodige  <dig>  which does not share information across diseases, is the best when we only focus at the very top of the list , while prodige  <dig>  which shares information, is then the best method when we go deeper in the list.

the recall at rank level k is the percentage of disease genes that were correctly ranked in the top k candidate genes in the loocv procedure, where the number of candidate genes is near  <dig>  top  <dig> and top  <dig>  correspond respectively to the recall at the first and first ten genes among  <dig>  while top x%  refer to the recall at the first x% genes among  <dig> 

at this point it is interesting to question what position in the list we are interested in. in classical applications where we start from a short list of, say,  <dig> candidates, then being in the top 5% of the list means that the correct gene is ranked in the top  <dig> among the  <dig> candidates, while the top 1% corresponds to the first of the list . if we only focus on the first gene of a short list of  <dig> candidates, then prodige <dig> is the best method, with almost half of the genes  found in the first position, followed by prodige <dig>  and mkl1class . as soon as we accept to look further than the first place only, prodige  <dig> is the best method, with  <dig> % of disease genes in the top  <dig> of a list of  <dig> candidates, for example. on the other hand, if we consider a scenario where we start from no short list of candidates, and directly wish to predict disease genes among the  <dig> human genes, then only the few top genes in the list are interesting . in that case, the methods that do not share information are clearly preferable, with  <dig> %  of genes correctly found in the top  <dig> among  <dig> for prodige  <dig> .

in summary, sharing information is not beneficial if we are interested only in the very top of the list, typically the top  <dig> among  <dig> candidates. this setting is however very challenging, where even the best method prodige <dig> only finds  <dig> % of all disease genes. as soon as we are interested in more than the top 2% of the list, which is a reasonable level when we start from a short list of a few tens or hundreds of candidate genes, sharing information across diseases becomes interesting. in all cases, some variant of prodige outperforms existing methods. in particular prodige <dig>  which shares information using phenotypic information across diseases while keeping different diseases distinct, is the best way to share information.

predicting causal genes for orphan diseases
finally, we investigate the capacity of the different gene prioritization methods to identify disease genes for orphan diseases, i.e., diseases with no known causative gene yet. prodige <dig> and mkl1class, which treat diseases independently from each other and require known disease genes to find new ones, can not be used in this setting. methods that share information across diseases, i.e., prodige <dig>   <dig>   <dig> and prince, can be tested in this context, since they may be able to discover causative genes for a given orphan diseases by learning from causative genes of other diseases. in fact, prodige <dig> and prodige <dig> boil down to the same method in this context, because the contribution of the dirac kernel in  vanishes when no known disease gene for a disease of interest is available during training. we summarize them by the acronym prodige3- <dig> below.

to simulate this setting, we start from the  <dig> diseases with only one known disease gene in omim and phenotypic information, resulting in  <dig> disease-gene associations involving  <dig> genes. for each disease in turn, the associated gene is removed from the training set, a scoring function is learned from the associations involving other diseases, and the removed causal gene is ranked for the disease of interest. we compute the rank of the true disease gene, and repeat this operation for each disease in turn. figure  <dig> and table  <dig> show the performance of the different global methods in this setting. interestingly, they are very similar to the results obtained in the multitask setting , both in relative order of the methods and in their absolute performance. overall, prodige3- <dig> performs best, retrieving the true causal gene in the top  <dig> genes of the list  <dig> % of times, and in the top 5% of candidate genes  <dig> % of times. this is only slightly worse than the performance reached for diseases with known disease genes , highlighting the promising ability of global approaches to deorphanize diseases.

in this case, since the disease has no known causal genes, only the causal genes of other diseases intervene in the learning, meaning that prodige <dig> and  <dig> are equivalent approaches.

validation on selected diseases
to further validate prodige, we used the whole training set to prioritize the unlabeled genes for a few particular diseases with prodige <dig>  we completed the training set with a list of genes collected through the use of ingenuity pathways analysis . in table  <dig>  we report the results of this validation for a first set of diseases having a training set of positive genes of reasonable size . these diseases are in the same order: prostate cancer , colorectal cancer , diabetes mellitus , alzheimer , gastric cancer , leukemia acute myeloid , breast cancer , schizophrenia . the columns report successively the disease name, the mim id of the disease, the size of the training set, the size of the intersection between the training set and the ingenuity list, the estimated precision and recall of the top  <dig> genes in the prioritized list and the p-value of a hypergeometric test. the precision is estimated as the fraction of the top  <dig> genes that are also in the ipa list while recall is the fraction of the ipa list that intersects the top  <dig> genes of the prioritized list. of course, the true precision value is unknown and the value we report underestimates the true value. the hypergeometric test allows to test for the enrichment of the top  <dig> genes of our prioritized list in genes known to be associated to the disease, which were not in the training set . we can see that precision is good, except for schizophrenia, gastric cancer and leukemia. recall on the other hand is not very high but the values are limited by the large size of ipa lists. all tests are significant at 5% level.

the results were validated by comparing our top  <dig> genes with a list of genes related to the disease, extracted from ingenuity database.

we then did the same for  <dig> diseases with only  <dig> known genes in our training set: glaucoma , creutzfeld-jacob , hyperparathyroidism , psoriasis , glioblastoma , cystic fibrosis , pancreatic carcinoma , thalassemia . results are given in table  <dig>  as expected, precision is much smaller for these diseases. however, we see that sharing information across diseases still allows to retrieve new disease genes for diseases where the training set is very small.

the results were validated by comparing our top  <dig> genes with a list of genes related to the disease, extracted from ingenuity database.

further validation include table  <dig> which reports the top ten genes of the prioritized list for prostate cancer, colorectal cancer, diabetes mellitus, alzheimer, gastric cancer, leukemia acute myeloid, breast cancer, schizophrenia. these lists were analyzed with genevalorization  <cit> , a text-mining tool for automatic bibliography search.

these diseases are in order: prostate cancer , colorectal cancer , diabetes mellitus , alzheimer , gastric cancer , leukemia acute myeloid , breast cancer , schizophrenia . using genevalorization, we counted the number of publication hits in ncbi which are found to be relevant to a query disease and a query gene. at last, the third column indicates whether the gene belongs to the list extracted from the ingenuity pathways analysis tool.

discussion
a particularity of prodige is the possibility to encode prior knowledge on disease relatedness through the disease kernel. while a dirac kernel prevents sharing of information across diseases, we tested different variants to share information including a generic multitask kernel and kernels taking into account the phenotypic similarity between diseases. we demonstrated the relevance of using the phenotypic similarity, compared to the generic multitask kernel, and have enhanced it by the addition of a dirac kernel. given the influence of the disease kernel on the final performance of the method, we believe that there is still much room for improvement in the design of the prior, using the general prodige framework. we note in particular that if other descriptors were available for phenotypes, one could also integrate these data and the prior they induce on task relatedness in the disease kernel.

a important question in practice is to choose between the two variants. we have seen that prodige <dig> has higher recall in the top  <dig> or 2% of the list, while prodige <dig> is better after. hence a first criterion to chose among them is the rank level that we are ready to investigate. in addition, one could think that prodige <dig>  which can not be used for orphan disease, is more generally handicapped compared to prodige <dig> when the number of known disease genes is small, while it is in a better situation when many genes are already known. indeed, if enough causal genes are known for a given disease, there is intuitively no need to borrow information from other diseases, which may mislead the prediction. this dependency of the relative performance of a local and a global approach on the number of training samples has previously been observed in other contexts  <cit>  where a global approach was shown to bring tangible improvements over a local one when the number of positive examples was low. we have however checked for the presence of such an effect, and found that it could not be brought to light, as illustrated in figure  <dig> which plots the mean and standard deviation of the rank of the left-out gene in loocv as a function of the number of known genes of the disease during training. we observe no trend indicating that the performance increases with the number of training genes, and no different behaviour between the local and multitask approaches, as long as at least one disease gene is known. this surprising finding, which is coherent with the observation that there is no big difference in performance for orphan and non-orphan diseases, suggests that the number of known disease genes in not a relevant criterion to choose between the local and multitask version of prodige. instead, we suggest in practice to use the local version prodige  <dig> if we are interested only in genes ranked in the very top of the candidate gene lists , and prodige  <dig> as soon as we can afford going deeper in the list.

CONCLUSIONS
we have introduced prodige, a new set of methods for disease gene prioritization. prodige integrates heterogeneous information about the genes in a unified pu learning strategy, and is able to share information across different diseases if wanted. we have proposed in particular two flavours for disease gene ranking: prodige <dig>  which learns new causal genes for each disease separately, based on already known causal genes for each disease, and prodige <dig>  which additionally transfers information about known disease genes across different diseases, weighting information sharing by disease phenotypic similarity. we have demonstrated the efficiency of both variants on real data from the omim database where they outperform endeavour and prince, two state-of-the-art gene prioritization methods.

except for the work of  <cit> , the pu learning point of view on this long-studied gene prioritization problem is novel. classical one-class approaches which learn a scoring function to rank candidate genes using known disease genes only are prone to over-fitting in large dimensions when the training set if small, which results in poor performance. we observed that our pu learning strategy, augmented by a multitask point of view to share information across diseases, was useful to obtain better results in the disease gene identification task. in fact, learning from positive and unlabeled examples is a common situation in bioinformatics, and pu learning methods combined or not with multitask kernels have a good potential for solving many problems such as pathway completion, prioritization of cancer patients with a higher risk of relapse, or prediction of protein-protein or protein-ligand interactions.

