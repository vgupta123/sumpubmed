BACKGROUND
problem
in eukaryotes, mapping of eukaryotic ests  to dna has to deal with splicing, widely distributed parts of genome sequence have to be aligned and the genome sequence is generally known. in contrast, jane deals with the opposite problem: prokaryotic ests or variable sequence reads are mapped, assigned and analyzed in a sequencing project well before the prokaryotic genome sequence is completely known. in particular rapid est sequencing , ecological community sequencing  <cit>  and single cell sequencing  <cit>  provide large data sets in prokaryotes though the genome sequence is not or only very partially known. for these use cases jane  allows  to rapidly identify the function of ests as well as short sequence reads,  to map ests and variable reads  to an already known related prokaryotic genome and  to reconstruct a "virtual genome" of the unknown or incomplete prokaryotic genome already before assembly of a new prokaryotic genome including prediction of badly sampled regions.  as prokaryotic cdnas reflect multigene transcription units, jane's rapid est mapping can be used for operon mapping.  ests from clinical isolates  can be rapidly mapped to related known genomes.  mapped reads are statistically analyzed, e.g. to show highly transcribed regions in the genome or undersampling as well as repeat regions.  any other type of short sequences can be mapped to the chosen template genome. in particular, this speeds up genome predictions in single cell sequencing efforts and from ultrafast transcriptome sequencing efforts, e.g. pyrosequencing reads from sequencing of cdna libraries.

data sets and use cases for jane are: use-case  transcriptome data  to map to a genome template not identical to the transcriptome that is investigated as the genome template is not known. use-case  single cell sequencing data and the use case is here to predict or establish a more complete genome sequence. in contrast, for ultrafast sequencing recent developments include ultrafast dna sequencing assembly programs such as maq  <cit> , soap  <cit> , seqmap  <cit>  and bowtie  <cit>  and rmap  <cit>  which are optimal to map short and very short reads to their cognate genome. this is the ultrafast sequencing use-case  with read lengths from 36- <dig> bp which are then assembled or mapped to their cognate dna template. jane is compared also to this software.

applications
we show jane's good performance in jane's standard use cases , that is in particular for assembling variable sequence reads  in mapping to a related, non-identical template genome in the tasks mentioned above as described in detail in  <cit> . here mapping should be efficiently done without knowing the exact dna sequence. however, then it is difficult to accurately map the variable  sequence reads as there are no perfect matches and if standard sequence comparison algorithms are used, the search may not find any matches or mapping location and range of est is frequently ambiguous. this problem is solved in jane by a specific assembly algorithm for hsps and start alignments. moreover, the function of the est or mapped region should be predicted. furthermore, the template genome used for the mapping should be stepwise replaced by the contigs achieved after mapping a sufficient number of ests or short sequence reads and an overview on the not assigned sequences obtained. we developed for these problems jane as a user-friendly application. it includes a new implemented harvesting program for extension and assembly of hsps. hsps are high scoring pairs of two sequence fragments of arbitrary but equal length whose alignment is locally maximal and for which the alignment score meets or exceeds a threshold or cutoff score. the hsps were collected before by a parameter adapted blast. our focus is in the following on application aspects of the jane software in its standard use cases, we do not give an in depth treatment of sequence alignment methods, for this the reader is instead referred to recent reviews on the topic such as  <cit> .

besides mapping prokaryotic ests, jane is useful for instance in the following scenarios: mapping in an ongoing genome sequencing effort where no genome sequence is available yet a number of ests is already there , analysis and mapping of ests from clinical isolates where no genome sequence is available  as well as rapid mapping in transcriptomics studies without a matching genome sequencing effort . furthermore, in single cell sequencing efforts  the situation occurs quite often that incomplete reads are only available, the genome sequence is not known and mapping to a template genome is useful or required  <cit> .

implementation
the program has been written in perl using bioperl and gd graphics libraries, the visualization interface was implemented with javascripts. jane is currently running on an apache server, with a postgresql http://www.postgresql.org/ database support.

algorithm
in jane, a specific algorithm assembles hsps  such that est mapping to a template genome is optimized. the jane algorithm does this task differently and better than blast  <cit>  . for the step before, the hsp generation, the blast program package was applied and the hsp generation parameters optimized. the combination allows mapping of ests and variable sequence reads even to distant template genomes.

initial hsp extraction
here the blast package  was applied and parameters for lower-restriction searches applied . parameters included a lower penalty  for a nucleotide mismatch compared to the default value , an e-value of  <dig>  for harvested ests by blast and the low-complexity filter is disabled. this reduces the accuracy but significantly enhances the harvest sensitivity. moreover, this allows longer extension both in 3' and 5' direction of the est paired region. it is critical for aligning est to a relatively distant genome template, e.g., blattabacteria to candidatus sulcia muelleri gwss . in this example, a search applying blast and its standard parameters can only locate about a seventh of the hits, not sufficient for an efficient mapping. furthermore, we found that for best results in est mapping  the low-complexity filter  should be disabled, since filtering for low-complexity regions strongly reduces the available hsps that are subsequently evaluated. this disadvantage far outweighs the advantageous reduction in compositional biased sequences by the filter.

pairwise alignment and assembly algorithm
here blast was no longer used, instead a new program was written for a maximum use of revealed sequence co-linearity. the top hsps of each read according to their scores are sorted and used as start alignments in the following step. only the top scoring hsp in a database entry provides a start alignment for anchoring the alignment. nearby each start alignment, the remaining unmatched regions are in general located either in the utrs or in less well conserved regions. the start alignment provides a strong signal. its position and in the considered read or est suggests a potential coverage region in the corresponding genome. based on this, further hsps of lower score are considered if they are still in the remaining est or sequence read region . these secondary hsps still carry useful information for the direction of further alignments and improve the coverage in the final mapping. moreover, the utilization of these secondary hsps contributes to overcome the obstacles derived from length variation of non-translated regions and their less well conservation and it improves mapping of distantly related sequence reads to a template. for optimal results, the alignment penalty in these secondary alignment regions is set to zero both for gap creation and extension.

the assembly of anchoring and secondary hsps results in a series of local co-linear islands. next the program assembles the islands if any two in the template are overlapping and such steps are repeated in both directions, forming a contig region. if jane is used in a large-scale sequencing project allowing high coverage of different genome regions, the regions of the template genome which are never hit by sequence reads are with high probability insertions in the template genome respective to the new sequenced genome . however, this shows also that the requirements for the template genome are easy to fulfill: a moderate overall sequence similarity  to the organism the ests are derived from and a triple coverage of the template genome with typical sanger or  <dig> sequencing reads  are sufficient.

filter for higher alignment accuracy
jane considers next many secondary hsps after a major hsp for anchoring the alignment has been identified. for higher specificity, a filter in jane's algorithm discards all hsps of extremely-low identity . from the hsps harvested, only the hsp with the top score for each read is considered and used as anchor for the first alignment iteration. further hsps are subsequently considered. only the closest one is connected with the anchor region when the distance from the anchor is not too far . the assembly is iterated and always carried out from the anchor region to the closest hsp candidate from the complete harvested hsps. not joined hsps are filtered out during the procedure.

change of parameters and program modules
jane's web-interface allows users to specify the following parameters: e-value, minimum hsp length  for hsp harvests as well as a zoom factor for optimal visualization. within the program, a standaloneblast routine is used exclusively to generate hsps. in this task it enables many parameters  to be modified by an interested programmer. next, jane's hsp harvesting program is implemented. it is integrated with and assembles the bioperl standaloneblast generated hsps. all specific parameters of jane including top hsps considered, filtering criteria, alignment parameters can be freely varied in its code. for instance, one can use different filter criteria or modify the distance cutoff for hsps to be considered in an est mapping task. this can be interesting for further applications or modified sequence similarity searches or comparisons. note however, that all parameters have been optimized in their default setting by us for the intended prokaryotic sequence read mapping task to a not perfect template genome.

strategy
jane's strategy is an elective hsp assembly strategy . as a comparison example, dialign and its successor dialgn-tx  <cit>  enable improved multiple sequence alignments with a remarkable higher speed in comparison to the popular global alignment application clustalx. dialign uses a greedy strategy for multiple alignment, all possible pairs of input sequences are taken. dialign-tx uses instead a guide tree based on pairwise similarity scores, and considers as dialign-t not only the weight scores of individual fragments  but also the overall degree of similarity between the two sequences involved in the fragment. a fragment is here a pair of two equal lengths segments from two different input sequences, a local pairwise gap-free alignment of these two sequences. the strategy of jane is different: instead of multiple-alignments, jane implements an algorithm to have multiple fragments assembled and mapped to one reference template. furthermore, jane considers for each sequence read to be mapped only the top hsp as anchor and then the closest neighbour hsp if it is still within est/sequence read length. iteratively further hsps are anchored in this way. by this strategy the program can cope with high sequence diversity and diverse read lengths  and can deal with not close related template genomes in mapping. in comparison to blast  <cit>  the hsp assembly strategy is also improved regarding the specific task of mapping to a non-identical template. in particular, jane starts only with the top scoring hsp in any alignment for anchoring and secondary hsps are only assembled if they are the closest neighbour and within the length of the individual sequence read to be mapped. in summary, jane accepts large sequence diversity and read length  and thus can efficiently map variable reads from different sequencing approaches to similar and dissimilar genome templates. its mapping strategy is particularly advantageous in transcriptome sequencing and single cell sequencing efforts when the complete genome sequence is not available.

mapping visualization and virtual genome
a user-friendly interface facilitates to retrieve mapping information and alignment figures. moreover, a tab-delimited alignment profile can be downloaded from the results page for further analysis using third-party software, e.g., gnu r. in growing contig-regions the template genome is step by step replaced by mapped ests or short sequence reads and the new genome thus takes over. capital letters record assembled reads whereas lowercase letters denote the used template genome. the resulting file can be downloaded for further analysis.

function analysis
jane provides a toolkit for rapid function assignment . novel sequences can be searched against a database derived from the cog/kog collection  <cit> , the program "cogmaster" will generate a table listing the putative cog classification and description. in contrast to cognitor  <cit> , our module enables batch-searches both for long nucleotide and protein sequences. this helps to rapidly obtain a raw annotation, e.g., for a genomic fragment.

further applications contained in the jane package
a "format converter" assists in fast sequence format conversion  in particular when readseq  <cit>  lacks the corresponding conversion capability for rich-sequence features such as complex location features. specific programs allow to rapidly extract all reading frames from a given neighbouring genome  or to translate a given est or sequence read in all six reading frames . the "proteome extractor" extracts and assembles protein reading frames from genbank and other primary databank records of a complete genome sequence. the routine uses the tag of "translation" and extracts directly all the protein sequences tagged like this from the genome data file . moreover, we provide a solution to extract the coding proteins from unpublished sequence files; " <dig> frame translator" enables to select the sequence regions and translates these in all six reading frames.

to check in sequences with a function still unclear for encoded proteins the user can directly search with the nucleotide sequence in the cog database  as well as for different motifs . "pattern searcher" is complementary for sequence alignment and specialized for rapid pattern matching on protein and nucleotide sequences, in order to reveal functions by protein motifs and nucleotide elements. prosite  <cit>  motif-syntax and general regular-expressions are both supported. bioperl modules  <cit>  and translation by the "virtual ribosome" program  <cit>  are used in parallel to predict and obtain proteins from est cdna data or variable sequence reads.

RESULTS
for rapid est or variable sequence read mapping, users upload a related genome template and the sequence reads/ests to be mapped. the rapid heuristic alignment algorithm in jane compares sequences including interactive visualization in a genome browser. with the incorporated toolkit annotation information is readily obtained and the sequence can be eventually exported as part of the predicted new genome for further analysis .

use case , mapping of ests
the template genome is step by step replaced by aligned short reads. genome structure and genome features can be assessed already long before the sequencing effort of the genome is completed . in this est mapping task using an only moderate  related genome template , the algorithm nevertheless allows to assign about 50% of all ests when thresholds of 10- <dig>  and  <dig> bp  are applied. thus in the example given, an assignment applying blast with optimal settings  for this task detects only  <dig> significant hits. instead, applying jane's heuristic algorithm,  <dig> ests from a total of  <dig> ests are successfully located.

we examined the mapping accuracy using a "fingerprint" test of cog hits. for each est, a cog number match between the est and the correct cog using the correct genome region is counted  <dig> point, each mismatch  gets zero points. in the example, this returns for the blattabacterium est mapping using candidatus sulcia muelleri gwss as template  <dig> % accuracy of the mapped hits. additional file  <dig> with its fig. s <dig> illustrates est mapping of genes for purine metabolism, applying a more distant genome template . the annotation was verified as correct by subsequent sequencing.

we furthermore tested mapping of ests from different sources on various template genomes such as candidatus sulcia muelleri , gramella forsetii , staphylococcus aureus n <dig>  col  and staphylococcus epidermidis atcc  <dig> . for best results, the closest related genome available should in general be used as template. for detailed comparisons of potential template genomes we established a dedicated tool . however, a distance as far as gramella forsetii or candidatus sulcia to blattabacteria is sufficient as a solid basis for genome reconstruction with jane. this corresponds to just more than 80% identity in the 16srna or more than 60% sequence identity in household enzyme protein sequences. certainly this does not remove reconstruction problems which may arise from complex genome rearrangements or extended and short repetitive sequences in the new genome. however, fast mapping of a high fraction of the variable reads outside of such regions is nevertheless easily possible with jane.

similar use case : rapid mapping of multiple sequencing reads
moreover, numerous sequence reads from pyrosequencing or other methods are rapidly mapped by jane. an illustration example concerns staphylococcus aureus jkd <dig>  . this is a low-level vancomycin-resistant and persistent methicilin-resistent s. aureus isolate  <cit> .  <dig> jkd <dig> contigs from genbank were acquired and mapped on the nucleotide sequence of staphylococcus aureus n <dig> genome . mapping quality according to cog fingerprinting  is  <dig> % and  <dig> contigs from the total of  <dig> can be mapped. we illustrate  that using s. aureus n <dig> strain as template works equally well . jane is able to deal with and assemble fairly short sequencing reads  but shows for longer sequences  best performance also compared to alternatives .

comparison to blast
results for comparison of our est mapping with a golden standard heuristic for sequence alignment, blast  <cit> , are good. in particular, sensitivity of est matches is improved significantly, allowing mapping even to distant template genomes. nevertheless, specificity remains high in jane, i.e. correct matching of ests to the template genome as examined for different template genomes. these results rely on the specific algorithm incorporated in jane to optimally select and harvest hsps, and are independent from an optimal parameter choice of the blast algorithm .

comparison to est alignment programs
we can furthermore compare the alignment results achieved to popular est alignment programs. the software est2genome applies a smith-waterman algorithm in the first local-alignment pass to improve the sensitivity  <cit> . the quality of its alignment is similar to jane's prediction if the template genome is the same genome from which the ests were derived. for more distant genome templates, ests are lost from mapping est2genome in the same way as in the above comparison to blast. moreover, our program has considerable higher speed . exonerate  <cit> , a successor to genewise  <cit>  has a similar speed as the jane software when performing an ungapped alignment. its est2genome alignment-model which considers gaps is relatively time-consuming and has advantages of accuracy for eukaryotic est alignment. however, in mapping of distantly-related prokaryotic sequences, jane prevails on both the number of located ests  and the computation speed. est2genome and exonerate are outstanding programs optimized for eukaryotic est mapping, whereas jane plays a critical role for rapid obtaining a mapping in particular for moderate-related prokaryotic sequences.

comparison to short sequence read assembly programs for ultrafast dna sequencing
a recent focus of interest is ultrafast sequencing. algorithms developed for this have the typical use case to align short reads. in the following we compare jane to these as well as ultrafast sequencing algorithms for long reads as here much development is going on. detailed results show reasonable performance for jane but stress that this is not the optimal use case for jane as it excels if reads have to be mapped to a non cognate genome. thus two new developments, soap  <cit>  and rmap  <cit>  appeared in  <dig> as command-line tools just after the algorithm for jane was finished. both of them are designed to efficiently handle genome mapping of high-throughput short reads. the seqmap tool arose recently, the command-line driven program offers various command-line options to give the highest number of mapped reads when dealing with short reads  <cit> . however, none of this alternative software has an interactive graphical interface allowing close up and distant views or separate views on start alignments and full alignments as jane does. table  <dig> compares the performance on contig mapping of staphylococci , est mapping of blattabacteria  as well as mapping very short reads to the cognate template genome . the short reads  are chopped ests, as these are not so often used, table  <dig> and table  <dig> deal with more typical data  to test the ultrafast-sequencing software. the experiments were conducted in a computer with  <dig> gb ram and an intel e <dig> cpu running an ubuntu  <dig>  linux system. local sequence files previously located in the jane server were applied to avoid biased comparison by the effect of file-uploading time. rmap is fastest among these programs, whereas seqmap appears comparatively slow. the running time of jane is relatively longer in comparison with other applications, however, this includes additional time for jane's figure rendering procedure. regarding longer sequences , jane is able to locate the highest number of reads . soap is specialized for short sequence reads  and has large memory requirements but is very efficient  and fast for short sequence mapping . another ultra-fast sequencing software is maq  <cit> , developed in  <dig>  which is particularly designed for the illumina-solexa genetic analyzer to efficiently align and assembly of high-throughput short reads  using a reference sequence . it actually is the fastest program in the mapping task for short sequences to their cognate template . however, its short read requirements make it not suitable to map longer reads or reads with variable lengths. for comparison, jane prevails in dealing with complex situations or longer reads  as it has a specific hsp harvesting and assembly algorithm. it is able to tolerate more substitutions, inversions, limited insertions and deletions in comparison to the compared programs. this grants jane the capability to generate a virtual genome also from large-scale est analyses and study these with the included function-prediction toolkit. we carried out a benchmark test on variable ests as well,  <dig> blattabacteria ests were aligned to the candidatus sulcia muelleri gwss genome . the results are summarized in table  <dig>  for a fair comparison, we tuned the parameter of maximum allowed mismatches for rmap to  <dig> to increase its sensitivity. as a result it correctly maps  <dig> % of the  <dig> ests. we enabled the maximum allowed mismatch parameter  of seqmap, however, in spite of this and its strong performance in the direct mapping task  it still can not locate any ests in this more complex situation. in the complex examples given, jane is advantageously used to obtain best mapping results.

we indicate the challenge in mapping and the distance of the template genome used for mapping. bold: moderate similar template genome, italics: closely-related genome template. normal: cognate genome template.

1long reads:  <dig> from a library of staphylococcus aureus contigues . times are given in seconds. accuracy of mapping was determined as given in materials and methods.

2variable ests:  <dig> from a library of blattabacteria reads with a minimum length of  <dig> bp.

3est fragments trimmed to a fixed length of  <dig> bp.

4short reads:  <dig> artificial fragments of  <dig> nucleotide length generated from the blattabacteria genome sequence.

5maq is not suitable for long reads , e.g., ests of variable lengths, it is customized for the illumina-solexa genome analyzer with a sequence limit of  <dig> bp.

 <dig> n.a. not applicable for mapping long reads due to a length limit of soap .

7the alignment procedure of bowtie is remarkable faster than other software, however for a fair comparison, the time for index building has still to be included.

8seqmap did not find one entry when aligning short reads, but this is an untypical case with long repeats, we repeated the test replacing this read, the number of mapped reads is then 100%.

* the total number of reads is  <dig>  we eliminated the incomplete or ambiguous reads in order to ensure all the programs run smoothly across the benchmark test. both templates are homo sapiens chromosome fragments within an acceptable length range for all the above applications .

1example: pori bacteria sequence reads are mapped to the template genome rhodopirellula baltica sh <dig>  these are typical long reads . 2accuracy of mapping  was determined as given in materials and methods. 3exonerate assumes a eukaryotic genome with splicing. splicing events are introduced by exonerate if the sequence stretch is short and then an intron  is assumed until the next local match. thus, in the tough case above, all ests mapped  were sliced by exonerate in several pieces and only short regions were aligned. if there were longer stretches they were mapped to the same region as jane, but did have shorter length in the alignment.

further detailed comparisons
in modern ultrafast sequencing use cases, the generated and often short  or longer fragments  are mapped to the cognate template. a typical use case of mapping 36- <dig> bp long sequence reads to the correct dna template  is of course well handled by solexa-specific software for ultrafast sequencing . jane's alignment is not originally designed for this purpose. it is relatively greedy and consumes longer time when aligning high-throughput reads. we applied sample files mapping solexa reads on human genome contigs as given in additional files  <dig>  including the sample files used for rmap testing, which is to map solexa reads to a contig of homo sapien chromosome  <dig>  the first  <dig> solexa reads were uploaded to the server to align them to the genome template. interestingly, jane is able to locate more reads than rmap or seqmap does, however, rmap runs much faster than jane for mapping these solexa reads. both bowtie and soap revealed  <dig> solexa reads which were the same as found by jane. in addition, we aligned these reads to another contig of chromosome  <dig>  jane was able to locate more reads in comparison to all the other software in table  <dig>  all mapped reads were re-examined to be highly significant matches .

a key advantage of jane compared to ultrafast sequencing mapping algorithms is its capability to deal with complex use cases where fragments of variable length are mapped to a non-identical reference either in est mapping or in single cell sequencing as the genome sequence is either not yet or never fully known. in order to acquire a comprehensive benchmark, we used for one set of comparisons a set of  <dig> short sequences, all of them generated from the blattabacteria genome with a fixed length . these are clearly short sequence reads and all the software returns an outcome of almost 100% hits during the alignment. the sequences are first mapped to their own genome template . in this task, rmap  <cit>  is the fastest, maq  <cit> , soap  <cit>  and bowtie  <cit>  are second, however, all the programs are able to complete the jobs within an acceptable time. in addition, focusing only on the alignment procedure, bowtie runs most rapid among all applications we compared. however it requires a particular index-building procedure, this additional time requirement has to be considered in addition .

next we did a similar but slightly more complex mapping test using now short est sequences . we mapped these now onto a related genome, candidatus sulcia muelleri gwss . here rmap is the champion only regarding execution time but seqmap, maq and soap mapped more ests in comparison to rmap. jane performed best on locating them during the test. finally, mapping typical ests of variable lengths to a related genome is not suitable for all algorithms. in this more challenging test , only rmap and jane are able to locate them and return the mapping results. similar to this we give data on an experiment of mapping long contigs . here jane successfully locates the highest number of reads, followed by rmap.

use case , single cell sequencing tasks
jane is particularly advantageous if variable sequence reads between few base pairs  up to thousand base pairs have to be mapped to a non-identical genome template. this occurs typically in single cell sequencing  <cit> , an upcoming method to obtain genome sequences from individual, non cultivable bacteria  <cit> . an example from our own work  involves mapping of pori-bacteria sequence reads, a new bacterial phylum resident in porifera. the closest available relative with a complete genome sequence is rhodopirellula baltica sh <dig>  already a phylum away . table  <dig> summarizes mapping results of  <dig> pori-bacterium reads from a single cell sequencing experiment mapped onto this template. the sequences are typical long reads . we apply  <dig> bp as the minimum alignment width during the benchmark test to minimize false hits and allow comparison across different programs. rmap and maq execute relatively faster with fewer hits located, however jane reveals more successfully mapped regions beyond the cutoff minimal alignment length. this is understandable, since rmap, maq, seqmap and soap are designed for rapid alignment of short reads such as solexa reads, whereas the algorithm of jane allows to map a wide range of sequence read lengths . here exonerate is not really comparable as it is trained and used for eukaryotic genomes. thus it takes  <dig> minutes to exhaustively search the genome and mapped regions are always disturbed by spurious predicted intron regions. for this prokaryotic single cell sequencing use case, jane performs best in the task and maps  <dig> . this  <dig> % apply for the first mapping iteration. if the next single cell of a pori bacterium is sequenced, the jane-optimized template genome  may be used and thus more and more sequence reads are successfully mapped in later iterations, provided the poribacteria are picked from the same strain.

further comparisons
high throughput pyrosequencing is now able to provide sequence reads of over  <dig> bp, further tests on jane were carried out on these long de novo sequences . for this case, roche's newbler assembly software is in principle able to tackle the aligning and assembly problem since it is particularly designed for the  <dig> system, however, it requires a commercial license so it could not be used for our benchmark test. another popular application is the phred and phrap package  <cit> , which performs efficiently when assembling shotgun reads and incorporates quality data. however it lacks the feature to map the reads from  <dig> or solexa techniques to a reference template such as rmap, maq and seqmap do. of course, if quite compact , you could treat the genome as another very long read but this requires excessive memory studying bacterial genomes and is not practical .

phrap is designed as a de novo assembler which is not suitable for the orthology mapping or assembly with a backbone genome, thus we did not include this software in our comparisons. however, there is a consecutive application "consed", which allows aligning reads to a reference sequence, but here again only the identical template is used. the comparisons show short sequence alignment software prevails in efficiency in particular when aligning high throughput reads, e.g., more than  <dig>  entries which online software can not afford. ultrafast sequencing and mapping to the cognate template is thus not the optimal use case for jane, however jane's algorithm provides relatively higher sensitivity and locates the same number of or more reads with an acceptable speed. in particular, jane offers here a very simple standalone approach for single cell sequencing including mapping to more or less related genomes. results can then later be complemented by more sophisticated and demanding approaches.

comparison to related programs offering genome viewers and function assignment
concerning function assignments, camera  <cit>  offers a comprehensive platform for ecology research and analysis, its fragment recruitment viewer illustrates the spread of metagenomic sequence reads across species as an encyclopedia. it provides interesting views for comparative metagenomic studies and related-functions are revealed. similarly, the mg-rast server  <cit>  offers a pipeline to assist researchers to acquire a rapid functional assignment for sequences of the metagenome by comparing both translated protein and nucleotide databases. similar and related programs are the rast server  <cit>  and img/m server  <cit> . however, in addition to this software, jane is able to deal with fragment assembly, both for short oligonucleotide sequences and longer reads and rapidly predicts the putative genome regions which guide the next iteration of sequencing.

jane provides a platform for achieving a rapid impression of genome structure and gene functions. cap <dig> provides an extensive precise sequence assembly and correction procedure  <cit> , but has no mapping option for ests. combining jane and cap <dig> is possible and should boost sequencing progress. finally, there is the recent development "circos", a powerful graphical figure generator for genome comparisons and to render results as various types of circles using different perl scripts  <cit> . there is no graphical user interface and the output is specifically intended to be non-linear. also this tool can be well combined with jane in prokaryotic transcriptome projects.

CONCLUSIONS
jane allows rapid mapping and assembly of ests and variable length sequence reads also on non-identical, closer or more distantly related genome templates. it outperforms in this task alternative algorithms. mapping is thus independent from whether the genome sequence of the prokaryote in question becomes available. this is important in single cell/de novo sequencing  and rna-based transcriptome studies . in addition, jane includes function prediction and quality control of mapped ests/reads, is standalone, easy to setup and open source including the source code .

availability and requirements
• project name: jane

• project homepage: http://jane.bioapps.biozentrum.uni-wuerzburg.de



• programming language: perl

• operating systems: web-application available platforms, windows, linux, general unix, macintosh.

• license: free for non-commercial use; use for non-academics: contact corresponding author.

authors' contributions
cl: programming and testing of jane, writing of the ms; as: testing of jane, mapping of sequence reads, est function analysis; mls: genome sequencing, est sequencing, analysis of ests and genome; am: expert advice on genome projects, supervision of mls; rg: expert advice on microbiological est mapping in blattabacteria and single cell sequencing; jb: expert advice on software development; td: advice, organisation and guidance of the study, testing of jane, writing of the ms; all authors read and approved the final manuscript.

supplementary material
additional file 1
three figures, their legends and a text. further results, supporting material

click here for file

 additional file 2
solexa reads of human genome, homo sapien chromosome  <dig> contig, chromosome  <dig> contig. sample files for testing the mapping of solexa reads tests; mismatches allowed are  <dig> for all software and the e-value threshold is  <dig> .

click here for file

 acknowledgements
we would like to thank all the developers involved in the bioperl project  <cit> . the biological researchers who prepared the est sequences and tested our software are generously acknowledged. this work was funded by dfg  and land bavaria.
