BACKGROUND
transcriptomic studies using high-throughput sequencing data have enabled researchers to study the global and specific gene expression of many different organisms without the need for a fully sequenced and annotated genome 
 <cit> . recently, de bruijn graph-based 
 <cit>  software packages such as oases 
 <cit> , trans-abyss 
 <cit> , soapdenovo 
 <cit> , and trinity 
 <cit>  have been developed to facilitate the transcriptome assembly of massive amounts of short read sequences produced using next generation dna sequencing technologies. the power and robustness of these packages for forming contiguous sequences  has been tested, and comparative evaluations on computational resources such as execution time and parallelization, storage, and memory usage have been documented 
 <cit> . the choice of k-mer length  significantly affects the final assembly product 
 <cit> . shorter k-mer values might be a better choice in low-coverage studies to prevent the formation of complex overlapping nodes; whereas a larger k-mer choice would be more practical for high-coverage sequencing projects 
 <cit>  to improve assembly accuracy. as an alternative to a single best k-mer value selection, multi-k value based methods have been adopted to compile different k-mer assemblies in order to improve performance, sensitivity, and specificity of the overall de novo transcriptome assemblies 
 <cit> . multi-k value based transcriptome assemblies come along with additional complexities, requiring algorithms to efficiently cluster homologous sequences from each single-k assembly and to remove redundant contigs to generate the final non-redundant clustered assembly . several algorithms such as cd-hit-est 
 <cit> , vmatch 
 <cit> , and tgi clustering tools 
 <cit>  have been developed to obtain an optimal assembly clustering.

to date, the optimization studies for both single k-mer and clustered multi k-mer assemblies have largely focused on the length and number of contigs produced as a metric to evaluate the quality of the assembly output. there is, however, a limited understanding of how functional annotation—a primary goal of de novo transcriptome analysis—is affected by k-mer selection and clustering of multi-k assemblies. in this study, we report the significance of k-mer selection in the de novo assembly and annotation of a non-model eukaryotic organism’s transcriptome with no reference genome information available. we document the variations in uniqueness and the degree of functional annotations obtained under single k-mer and multi-k clustering methods, and present an assembly strategy to optimize the functional annotation to generate the gene catalogue of a non-model eukaryotic organism. analysis is performed on illumina short read sequencing of mrna transcripts from the microalgae neochloris oleoabundans, a candidate species for the production of microalgae-based biofuels 
 <cit> .

herein, we also demonstrate that the combination of individual k-mer assemblies improves, but does not complete the annotation of all available unique contigs produced in an assembly. a workflow and useful scripts are provided to allow retrieval of additional biological information from contigs that are present in individual k-mer assemblies, but not in the clustered k-mer assembly.

RESULTS
sequencing and de novo transcriptome assembly
following the removal of short and low-quality reads, the remaining read set was assembled using the combined velvet and oases packages 
 <cit>  with single-k value selection of odd numbers ranging from  <dig> to  <dig>  the assembly metrics are provided in table
 <dig> for the representative k-mers:  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig>  the number of reads assembled increased gradually from ~ <dig>  m  to ~ <dig>  m , whilst the number of reads mapped was within the range of ~ <dig>  to  <dig>  m for all assemblies. contig numbers, length distributions, and length-weighted medians  were comparable among all assemblies, except the k- <dig> assembly . the highest number of contigs produced per assembly was  <dig>  for the k- <dig> assembly. the contig number steadily decreased to  <dig>  as the k-mer value increased to  <dig>  individual contig length and count frequencies are also depicted in figure
 <dig> for the same representative set of k-mers from  <dig> through  <dig>  these length data  and the contig length distribution histograms  demonstrate that a greater contiguity was achieved in mid-range assemblies with k-mer selection of  <dig> to  <dig> as compared to k- <dig>  k- <dig>  and k- <dig> assemblies. the average contig length for k- <dig> to k- <dig> assemblies was approximately  <dig>  times longer than that of k- <dig>  k- <dig>  and k- <dig> assemblies. additionally, the longest average contig length assembled was  <dig>  bp in the k- <dig> assembly. 

effects of k-mer selection on mapping, functional annotation, and coverage
to compare the differences in attainable functional annotation between each assembly, the contigs originated from single-k value assemblies were separately mapped to the kegg gene and protein families, and the number of unique kegg ortholog identifiers  was determined. the number of kois identified for a single k-mer value reflected the trend previously observed with the contig number . the highest number of kois was generated from the k- <dig> assembly, and the number of identified kois decreased as the k-mer value increased to  <dig> 

to investigate if each assembly contained a distinct collection of identified genes, the kois unique to each k-mer assembly were identified and their quantities are presented in figure
 <dig>  this matrix table displays the number of unique kois  not found in the set of column k-mer assemblies in a pair-wise comparison. moving down the k-mer column on figure
 <dig>  the k- <dig> assembly resulted in the highest number of unique kois that were missing in the other assemblies, followed by k- <dig>  k- <dig>  k- <dig>  and k- <dig>  the number of missing kois decreased as k-mer value increased from  <dig> to  <dig> and then increased afterwards.

this analysis has clearly shown that the number of missing kois was minimal for mid-range k-mers, i.e. from  <dig> to  <dig>  but it was more prominent for short and long k-mer sizes, i.e.  <dig>   <dig>  and above. the fact that the highest quantities of missing kois corresponded to the highest and lowest number of generated contigs, in k- <dig> and k- <dig> assemblies respectively, was not surprising as these two extreme assemblies likely contained more unannotated contigs compared to other single k-mer assemblies, where higher accuracy in biological annotation is achieved with optimal mid-range k-mer length and ultimately contig length.

to further characterize the relationship between the single k-mer assemblies and the quantities of generated contigs, trimmed reads were mapped to individual k- <dig> to k- <dig> transcriptome assemblies and the fold coverage for each assembly was determined . the results plotted in figure
 <dig> for the representative k-mer set demonstrate that under all mismatch parameters tested  the coverage was above 1600× for all k-mer values except k- <dig>  when one or two mismatches were allowed, more than 2300× coverage was obtained for k-mers  <dig> to  <dig> except  <dig>  although lower, the contig coverage for the k- <dig> assembly was still greater than 1000× .

despite the fact that k-mer  <dig> has resulted in a lower quality assembly in terms of coverage and missing annotations as discussed above, utilization of the k- <dig> assembly might still have value in annotating the transcriptome. overall, lower k-mer assemblies are more successful in capturing transcripts with lower abundances, but as k-mer length increases, transcripts with higher abundances are more likely to be detected. therefore, all individual assemblies of k- <dig> to k- <dig> were utilized to generate a multi-k based ca 
 <cit> .

assembly clustering and optimization
the generation of ca was performed using three different sequence clustering programs: oases , cd-hit-est, and vmatch. the cas obtained with varying clustering scenarios allowed by these packages were annotated and the number of kois present in individual k-mer assemblies but not in the ca were determined . the best performing package in this regard was the cd-hit-est program with  <dig> missing kois in total when a sequence identity threshold parameter of  <dig>  was chosen. the oases package also produced similar results with  <dig> missing kois in total when its multi-k option was enabled . furthermore, a reversed comparative analysis was conducted based on the oases multi-k and cd-hit-est  results to determine the number of kois annotated in the ca, but not present in individual k-mer assemblies . this analysis demonstrated that the cas resulted in considerably less missing kois than did the individual assemblies. in addition the number of missing unique kois was ~ <dig> - <dig> times less for the ca generated by cd-hit-est and ~5- <dig> times less for ca generated by the oases multi-k compared to the single assemblies of k-mers  <dig> to  <dig> 

1represents sequence identity.

nevertheless, table
 <dig> and figure
 <dig> collectively indicated that there were still missing kois in both cas and single k-mer assemblies. although the number of missing kois in the ca was low compared to the total number of kois identified, there was still some relevant biological information lost during this clustering step. this was attributed to the heuristic-based search used in both cd-hit-est and oases to reduce computation time and memory usage, resulting in minor inconsistencies during the removal of redundant sequences.

to further characterize the degree of lost biological information, the missing kois identified during the pair-wise comparisons in figure
 <dig> were subjected to full biological annotation using kegg brite gene and protein families. the missing koi lists and their full biological annotations are presented as additional file 
 <dig> and additional file 
 <dig> , and additional file 
 <dig> and additional file 
 <dig> . the detailed discussion of lost biological information would be out of the scope of this paper, as its nature and value would differ for each researcher and assembly goal. nevertheless, a general important interpretation is that there were relevant genes encoding enzymes and proteins  identified as missing in single k-mer assemblies but present in cas  and vice-versa . this suggests that comprehensive annotation should include, in addition to the ca, an interrogation of unique genes in the assemblies of individual k-mers from  <dig> and  <dig> 

suggested workflow for optimizing de novo transcriptome annotation
although the generated ca provided the best annotation results, comparison with single k-mer assemblies suggested that this approach still results in the loss of some biological information as discussed above. a workflow is presented in additional file 
 <dig>  along with several useful scripts, as a guide to improve the annotation of de novo assembled transcriptome. the workflow first includes quantifying the number of annotations that could possibly be generated in single k-mer assemblies via quick annotation services  to determine the optimal k-mer value range targeted to capture the most comprehensive functional annotation. next, a clustered assembly should be generated using these k-mer values to produce the full set of non-redundant contigs. finally, pairwise comparisons are performed to identify the unique contigs that are not present in the multi-k clustered assembly . these missing contigs should be incorporated into the final assembly product prior to annotation.

CONCLUSIONS
for the de novo transcriptome assembly of non-model organisms from short read sequencing data, de bruijn graph based algorithms use k-mer hash lengths to accommodate transcripts with different sizes. here, we provide an in-depth analysis of the effects of individual k-mer length and multiple k-mer assembly methods on transcriptome annotation. results demonstrate that different k-mer choices result in different quantities of unique contigs per single k-mer assembly, which in turn impact the amount of biological information that is retrievable from the transcriptome. although this undesirable effect could be minimized with clustering of multi-k assemblies, it is not completely eliminated due to limitations in the heuristic algorithms used in redundancy removal when clustered k-mer assemblies are used. we present useful scripts and a workflow to retrieve some of the missing biological information. with high-throughput dna sequencing methods removing limitations in transcriptome coverage, assembly-based optimization is important for continually improving the completeness of transcriptomes, particularly in non-model organisms for which the reference genome is not available. taken together, our results provide important guidance on selecting and combining k-mer lengths to improve the extraction of biological information from de novo transcriptome assemblies.

