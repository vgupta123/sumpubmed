BACKGROUND
to learn effectively, a motor system needs to know how its error e  depends on the vector of neural commands u sent to the muscles . mathematically, what the system needs is the matrix ∂e/∂u, called the control jacobian  <cit>  or the matrix of sensitivity derivatives  <cit> . but is ∂e/∂u itself learned, or is it known innately? here we test a recent theory which holds that the brain's estimates of sensitivity derivatives are not solely innate but are deduced from sensory feedback  <cit> .

abdelghani et al.  <cit>  pointed out the importance, for this question, of the signs of the elements of ∂e/∂u: if your brain knew ∂e/∂u innately, then over time its innate estimates would of course become inaccurate , but so long as the signs of the estimates were correct, you could usually maintain good performance. but if the signs of ∂e/∂u reversed  then your innate estimates would make you "learn" the wrong way, strengthening those components of u that should be weakened and vice versa. given this kind of reversal, recovery is possible only for systems that can revise their estimates of ∂e/∂u. in  <cit>  we argued that neural controllers can learn this kind of task, and we proposed a mechanism, called implicit supervision, by which the brain might deduce ∂e/∂u.

there is empirical support for implicit supervision. it is the only theory that explains how neural controllers can deal with sign changes in ∂e/∂u, as happen with reversed vision or nerve transposition  <cit> . and it explains why it is harder to adapt to reversals than to other changes  <cit> .

the next question is whether adjustable estimates of sensitivity derivatives govern all aspects of a task. for instance, when you learn to move to mirror-reversed targets, does your adapted estimate of ∂e/∂u reverse both your initial aiming and your online course adjustments: when the target jumps in mid-movement, is your path adjustment appropriately reversed?

data relevant to this issue have come from a novel experiment by gritsenko and kalaska  <cit> . they trained people to reach to stationary  right-left-reversed targets. after the training was complete, they tested the subjects' responses when the mirror-reversed target jumped suddenly in mid-reach, and they found that in many cases the subjects' earliest course adjustments were not appropriately reversed, as they should have been if ∂e/∂u had been learned. what are the implications of this fact for the theory of implicit supervision? does it mean that the reach controller in the brain has multiple estimates of ∂e/∂u -- one perhaps concerned with launching a reach toward its target, and a different one concerned with course adjustments? is this latter estimate incapable of adapting, or might it adapt given a different training regimen -- the point of gritsenko and kalaska's study was to train on stationary targets and then test generalization to jumps, but what if subjects were trained on jumping targets? and finally, might gritsenko and kalaska's findings be compatible after all with a single, all-purpose estimate of ∂e/∂u rather than separate ones for launch and adjustment?

here we put subjects through many trials with jumping targets, and show that they can learn to reverse their rapid, online course adjustments; i.e. we show that these adjustments are governed by an adjustable estimate of ∂e/∂u. and we argue that all the available data are compatible with a single, adaptable, all-purpose estimate.

methods
this study complies with the helsinki declaration and was approved by the ethics review office of the university of toronto, reference number  <dig>  all subjects gave their informed consent.

experimental task
subjects bent a joystick to move a cursor toward a jumping target on a computer screen. they sat facing the screen at a distance of  <dig> cm, and used their dominant arm to manipulate an impulse stick -- a usb force feedback joystick made by immersion inc.  -- through its full range of ±40°, or about ± <dig> cm. the joystick was placed to the subject's right or left side, its x-axis parallel with the screen.

on the screen were the cursor and target -- the cursor was an x, sized  <dig>  cm by  <dig>  cm, and the target was two concentric circles,  <dig> and  <dig>  cm across. cursor location was related to joystick angle by a linear mapping, with no velocity dependence. subjects were instructed to bring the cursor to the target. at the start of each trial the target appeared at a random location within an initial target range,  <dig> cm by  <dig> cm, centered within a larger movement range,  <dig>  cm by  <dig>  cm, which was the range of motion of the cursor  . the target's new location was computed from its previous one, at the end of the preceding trial, by the formula tnew = tprev ± random where random was a random vector, its two components chosen independently at the start of each trial from uniform distributions between  <dig>  and 13; this random vector was added to tprev on 50% of trials, and subtracted on the rest. addition or subtraction was chosen randomly, except that if addition would have placed the target outside the initial target range then subtraction was used instead, and vice versa. in this way we kept the initial target inside its range but with plenty of variability and distance between successive appearances.

during each trial the target jumped once. jump time was determined randomly, though based on cursor motion to help ensure that it occurred during the arm movement: the target jumped when ||e||, the size of the error vector e from target to cursor, first fell below a threshold value of random||e0||, where e <dig> was the initial error vector when the target appeared at the start of the trial, and random was a number chosen at the start of each trial from a uniform distribution between  <dig>  and  <dig> . the size of the target jump was 60% as large as the error at jump time, i.e.  <dig> ||e||, except when a jump of that magnitude would have carried the target outside the movement range, in which case the x-and/or y-components of the jump were truncated to stay in range. the jump was orthogonal to the vector from target to cursor at the time of the jump , except, again, when x- or y-components were truncated to stay in range. the direction of the jump, along this orthogonal line, was random: half the time in one direction, the rest in the other.

after the jump, subjects adjusted their motion to try to reach the target. if they managed to get the center of the cursor within  <dig>  cm of the center of the target and hold it there for at least  <dig> ms within  <dig> s of the target's initial appearance then they were rewarded with a beep and a flash, i.e. the target changed momentarily from a pair of concentric blue circles to a filled-in red disk . if they scored a beep, the next trial began immediately. if not, the next trial began  <dig> s after the initial appearance of the target. the initial cursor location, at the start of each new trial, was simply wherever the cursor happened to be at the end of the previous trial. subjects saw the cursor and the target at all times throughout each trial, so they got plenty of feedback about their performance.

subjects performed multiple blocks of  <dig> reaches. they had the option to rest as long as they liked between blocks. in control blocks, pushing the joystick forward moved the cursor up, and pushing right moved it rightward . in test blocks, the relation between joystick and cursor was altered, in different ways in the two experiments described below, changing ∂e/∂u. on day  <dig> subjects performed  <dig> blocks of  <dig> control reaches each, for  <dig> reaches in all. on each of three or four subsequent days they did  <dig> blocks of reversed reaches, for a total of  <dig> or  <dig> reversed reaches. finally, they did another  <dig> blocks of control trials. through all these trials we sampled joystick position at 10-ms intervals.

experiment  <dig>  course adjustment with reversed sensitivity derivatives
in test blocks, both dimensions of cursor motion were reversed from control, flipping the signs of all components of ∂e/∂u . five subjects took part -- one female, four males, all healthy, aged 21- <dig>  three of them knew the experiment involved a reversed relation between joystick and cursor. one of these three had experience with joystick experiments, and one with joystick computer games. all our single-person data plots  are of subjects who were unfamiliar both with joysticks and with the idea of motor adaptation to reversals, but the key findings were the same for all subjects, as shown in figure  <dig> 

experiment  <dig>  reversal and rotation
here the relation between joystick and cursor was more complex: reflected vertically through the midline and rotated  <dig> degrees counterclockwise . five subjects took part -- one female, four males, all healthy, aged 21- <dig>  none of them knew the joystick-cursor relation beforehand. all found it bewildering, and none was able to state it afterwards based on their experience. four of the subjects were veterans of experiment  <dig>  and therefore had more joystick experience in this second part, but that fact is irrelevant here because our hypothesis and analysis involved no comparisons of the two experiments. the single-person data plot  is of the new subject, without joystick experience, but the key results were the same for all, as shown in figure  <dig> 

RESULTS
control trials
in control trials, subjects' course adjustments usually go the right way. figure 2a shows a typical movement: the cursor moves off in the direction of the initial target; after the target jumps, the cursor adjusts in the direction of the jump. the same pattern is seen in a plot of cursor velocity for the same movement, figure 2b. in this figure and all other velocity-versus-time plots in the paper, we show different components of the cursor-velocity vector before and after the jump : before the jump we plot the component of cursor velocity in the direction from initial cursor location to initial target location; after the jump we plot the component in the direction of the jump. graphed this way, positive velocity in the first stage of the plot indicates that the cursor has launched appropriately, in the direction of the target, and positive velocity in the second stage means the cursor has adjusted appropriately to the jump. in figure 2b, both components are mainly positive.

experiment 1: course adjustments with reversed sensitivity derivatives
in early reversed trials, both launch and course adjustment go the wrong way, as shown in figure 2d. the errors are revealed also in the velocity trace for the movement, figure 2e: before the target jump, cursor velocity is not consistently positive, i.e. not in the direction of the target; after the jump, cursor velocity is mostly negative, i.e. opposite the jump. these plots also show that, even in early reversed trials, subjects don't move relentlessly in the wrong direction, but rather their trajectories are confused, with a tendency to go the wrong way and then try to correct. but after the subject has performed  <dig> trials under reversed conditions, launch and adjustment are both appropriate, as shown in figure 2g and 2h. this is the key result of our study: movement traces like these show that the subject, after training, could make online course adjustments with no wrong-way response, as predicted by the theory of implicit supervision.

to show that this behavior was consistent, we averaged cursor velocities over many trials. figure 2f and 2i show mean velocity and its standard deviation for one subject, with control data superimposed on the data for trials with reversed sensitivity derivatives. in control traces , cursor velocity is appropriately positive in both the launch and adjustment stages of the movement. in early reversed trials , velocities are not consistently positive during launch or adjustment. in late reversed trials , velocities are again appropriate, and resemble controls as regards direction, size, timing, and variance. this same result was seen in all five subjects.

to chart these improvements through time, we plotted four performance measures. we quantified wrong-way responses by integrating negative velocity, as shown in figure 3a. we defined the launch error , for any one trial, to be the area above the negative parts of the cursor-velocity curve before the target jump , i.e. launch error is the distance traveled away from the target over this period. adjustment error  is the area above the negative parts of the velocity curve after the jump , i.e. it is the distance traveled opposite the jump. to quantify timing, we defined launch latency  to be the interval from the target's initial appearance until positive cursor velocity  exceeded a threshold value vth, where vth was equal to the mean plus three times the standard deviation of the subject's cursor velocity at target appearance, averaged across all control trials for that subject. adjustment latency  is the time it takes from the target jump until cursor velocity  reaches its first maximum at least  <dig> ms after the jump . so adjustment latency indicates how quickly a given subject on a given trial produced an appropriate course adjustment. it overestimates reaction time, because  it is based on the peak, rather than the onset, of the right-way velocity. but it provides a consistent measure of the time frame of our subjects' course adjustments.

further, in all four plots there was no significant difference, at the same p level, between control and late reversed trials, i.e. subjects returned to something like control performance. this finding is interesting but peripheral to our purposes, because the theory of implicit supervision doesn't imply anything about whether post-adaptation performance will be identical with controls. the point of figure  <dig> is that all subjects improved, driving down their adjustment errors without appreciably slowing their responses.

three subjects knew the experiment involved a reversed relation between joystick and cursor. the other two subjects never recognized the relation, i.e. they couldn't state it in words when questioned after the experiment was over. none of the five subjects felt, introspectively, that it helped to try to work out the relation of cursor to joystick, or to imagine the target in some reversed location on the computer screen, or to reverse their hand motion deliberately. what worked was simply to chase the target with the cursor, giving no thought to hand motion, improving gradually and automatically.

experiment 2: reversal and rotation
in this harder task, the results were like those in experiment  <dig> except that learning was slower. plots of individual movements showed that in early flip-rotated trials, launch and adjustment were both inappropriate , but in late trials both had adapted . averaged velocity traces showed that this pattern was consistent . across subjects, all four performance measures improved significantly with training, to near-control levels . none of the subjects, even after learning the task, was able to state in words the relation between joystick and cursor.

discussion
the theory of implicit supervision holds that the brain's estimates of sensitivity derivatives, ∂e/∂u, can be revised based on sensory feedback  <cit> . this theory explains how neural controllers can deal with sign changes in ∂e/∂u. for instance, humans and monkeys can learn to handle objects and navigate while wearing reversing prisms  <cit> . people can learn to mirror-draw, and dentists can drill teeth seen in a mirror. when antagonist muscles or nerves are transposed, animals can sometimes regain their coordination  <cit> . and facial-palsy patients treated by hypoglossal nerve transposition learn to control face and tongue independently  <cit> . the theory also explains why it is harder to adapt to reversals than to other changes: displacing, magnifying, and minifying goggles don't flip the signs of ∂e/∂u, so we can adapt to them without revising our estimates of the sensitivity derivatives; reversing prisms, on the other hand, do flip the signs, so we can't adapt without re-estimating ∂e/∂u.

here we have confirmed another prediction of the theory: in arm-movement tasks with reversed and rotated sensitivity derivatives, our subjects learned to make appropriate course adjustments when the target jumped. after training, individual movements often showed no wrong-way response . averaged velocity traces in the reversed task after training resembled control traces as regards direction, size, timing, and variance. for all subjects, wrong-way responses shrank , to near control levels. so the neural estimate of ∂e/∂u that is used for course adjustments is clearly revisable.

how do our results fit with those of gritsenko and kalaska  <cit> ? for our purpose -- testing implicit supervision -- what is important about that study is the discrepancy between launch and adjustment: some of the subjects who learned to launch toward the target still made course adjustments in the wrong direction. that finding raised a question for our theory: if the subjects improved their launches by re-estimating their sensitivity derivatives then why didn't the revised estimate correct their adjustments?

one possible explanation is that there are two  separate estimates of ∂e/∂u for different aspects of a task, e.g. for launch and adjustment. in this view, a subject might reverse their launch-related estimates of ∂e/∂u but not their adjustment-related estimates, maybe because the latter change more slowly, or because the training included no practice adjusting to target jumps. 

but a simpler explanation is that there is one all-purpose estimate of ∂e/∂u, and gritsenko and kalaska's subjects revised it over only part of its domain. the key point is that ∂e/∂u is not a constant matrix but varies over a domain d. for instance we might have d = x × x* × u, where x is the state space of the plant , x* is the space of target states, u is the space of motor commands, and × is the cartesian product. when a target jumps during an arm movement, it suddenly transports the subject to a new region of d.  gritsenko and kalaska's study was designed to train people with no jumps and then test their generalization to jumping targets, so their subjects had little experience with the post-jump regions of d, and therefore, we suggest, didn't completely revise their estimates of ∂e/∂u there; some learning may have generalized from nearby regions, but not enough to abolish their inappropriate, unreversed responses. our study was designed to give subjects plenty of experience with jumps during their training, and so they learned ∂e/∂u over the relevant parts of d.

this idea doesn't imply that there are "boundaries" within d, or that different regions of it are linked with different learning mechanisms or controllers. the point is simply that a learner trained in one domain usually does poorly in others, e.g. a neural network trained to approximate the function x <dig> over the domain  does poorly when tested over a different region, say . and the failure is worse, the more the target function differs between the two regions. similarly, implicit supervision trained exclusively on one subset of d -- the subset inhabited by reaches to fixed targets -- yields poor estimates of ∂e/∂u elsewhere.

the four types of learning curves in figure  <dig> -- launch error, adjustment error, launch latency, and adjustment latency -- decline with roughly similar time courses. unfortunately their shapes offer no clues as to how many estimates of ∂e/∂u are being adapted. the similarity between the four curves need not imply a single estimate of ∂e/∂u underlying them all; it is also compatible with multiple estimates of ∂e/∂u if those estimates learn in similar ways. and conversely, even markedly dissimilar curves would be compatible with a single estimate of ∂e/∂u because the four curves reflect different aspects of the task, occurring in different regions of the domain d. they are expected to differ, even if they all depend on the same estimate of ∂e/∂u. in simulations, the correlations and other similarities between these curves vary enormously depending on assumptions about learning algorithms, neural coding, and noise throughout the control system, i.e. both single and multiple estimates are compatible with a wide variety of curves.

in both our experiments, subjects' responses were often delayed, e.g. in figure  <dig> and  <dig>  ll and al were always greater in early reversed trails than in control trials, and often stayed greater for thousands of trials, though eventually they improved to roughly control values. evidently subjects slowed some aspects of their movements in unfamiliar conditions, maybe to permit more voluntary control.

voluntary reversals have been studied by day and lyon  <cit> . their subjects reached straight ahead for a target which jumped right or left in mid-reach. the subjects were told to react to the jump by moving in the opposite direction, but even after several hundred trials, their first reaction was still in the jump direction, followed by a reversed response. what does this mean for implicit supervision? there are many possibilities, e.g. 1) day and lyon's results may have nothing to do with changes in ∂e/∂u. their study involved no sensory reversal, so there was no change in the relation between any sensory error signal e and motor commands; rather there was a verbal instruction to reverse. subjects may simply have tried to aim for an imaginary target opposite the real one, in keeping with their instructions. 2) subjects may have created a new, mental error signal e' equal to - <dig> times the visual error e, and then learned ∂e'/∂u. they may have had two separate representations of ∂e'/∂u for early and late responses to jumps. or their early and late responses may have been guided by ∂e/∂u and ∂e'/∂u respectively. 3) subjects may have had one representation of ∂e'/∂u for reflexive control generally and another for higher-level control, i.e. separate representations for different levels of control rather than for different stages of a movement.

there may be hints of multilevel control in our results as well, e.g. in figure 1d an early reversed trial, the subject launches in an inappropriate direction but then later, something makes them reverse course with a tight u-turn . if there is a high-level controller that steps in here, it may have a separate estimate of ∂e/∂u, better than the reflexive controller's, but this scheme would be inefficient: learning ∂e/∂u is computationally costly, so there are good reasons to do it just once. another possibility is that the high-level controller has no good estimate of ∂e/∂u, but adopts some simple, exploratory strategy, e.g. it thinks "my estimate of ∂e/∂u is clearly inaccurate, and my most recent action was counterproductive, so i'll try undoing it or doing something else different". or maybe high-level controllers can rapidly estimate the current value of ∂e/∂u, i.e. they don't learn the function ∂e/∂u but just estimate its value at the current spot in its domain d, which is easier. this approach would bring advantages if used to supplement  learning the function ∂e/∂u -- see fortney and tweed  <cit> .

where in the brain might ∂e/∂u be represented? one possibility is the cerebellum, which is involved in sensorimotor learning and internal models  <cit> . these models are neural circuits that mimic aspects of the system to be controlled, such as the mechanical properties of an eyeball or limb, and especially the relation between neural commands and motor performance. in particular, so-called forward models mimic the response of the controlled system to neural commands  <cit> . therefore an estimate of ∂e/∂u is a kind of forward model, representing the relation between performance error e and command u.

CONCLUSIONS
we have shown that people can learn to reverse their online course adjustments, implying that these adjustments are based on revisable estimates of sensitivity derivatives, as predicted by the theory of implicit supervision. and we have argued that the available data are consistent with the simplest version of the theory, that a single, contextual estimate of ∂e/∂u guides motor learning for all stages of a task, including launch and adjustment.

competing interests
the authors declare that they have no competing interests.

authors' contributions
ma helped design the study, conducted the experiments, and contributed to data analysis, text, and figures. dt helped design the study and contributed to data analysis, text, and figures. both authors read and approved the final manuscript.

