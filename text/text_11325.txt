BACKGROUND
recent advances in cell imaging technologies include accurate stage controllers, improved optics, increased camera resolution, and, perhaps most importantly, fluorescent staining of specific cellular components. together these advances enable automated image acquisition of small subcellular objects with the goal of providing insight into phenotypes and cellular functions  <cit> . with increased imaging throughput and large-scale data acquisition, the challenge of image interpretation and information extraction has also shifted from visual inspection or interactive analysis to more automated methods  <cit> .

accurate and automated subcellular object segmentation is essential for a variety of applications. for example, interpreting complex cellular phenotypes is typically dependent on identifying and quantifying various parameters associated with small organelles, setting high requirements for the accuracy of the image analysis  <cit> . also the analysis of cellular structures based on 3d images obtained with fluorescence and confocal microscopes requires accurate detection. advances in such methods will improve our ability to model small organelles in 3d  <cit> . further, live-cell imaging with specific molecular probes has brought image tracking to subcellular level, and thus reliable object detection over the course of the imaging period adds a temporal dimension to image analysis  <cit> .

a variety of subcellular object detection methods have been described in the literature . due to the specific applications they have been designed for, the algorithms are usually very problem-specific. however, it is rare to see choice of a detection method based on experimental thorough testing under a variety of conditions or comparisons against other previously proposed spot detection methods. rather, it is still common to use na√Øve comparisons of particle detection algorithms against histogram thresholding methods applied on intensity information. for example, otsu's thresholding  <cit> , which seeks to maximize between-class variance, is widely applied as a reference method. however, for the segmentation of small spots in the presence of relatively high background fluorescence global thresholding approaches usually fail. thus, comparative studies of the performance of subcellular object detection methods under a variety of different conditions are needed.

summary of methods, with method abbreviation used in this study and short description of main principle. the number of free parameters refers to the parameters that were tuned when optimizing the methods for the image sets.

evaluating the performance of image segmentation algorithms has been a long-standing challenge. validating segmentation results usually requires a ground-truth reference, and in biomedical applications the task of generating such reference falls to an expert biologist. this burdensome and error-prone strategy becomes even more challenging when evaluating small, but numerous subcellular organelles, particularly in the context of high-throughput experiments. in these cases, common limitations in the focus, contrast and resolution of the images render reliable pixel-level outlining of objects nearly impossible. alternative evaluation methods include the use of computer-generated images for direct comparisons to ground truth results, experimentally derived control vs. test samples, and evaluations that measure performance as a function of an input stimulus that enable indirect comparisons between different conditions. recently, benchmark image collections of cells and other types of biological samples have been developed to facilitate comparison and validation of image analysis methods  <cit> .

in this study, we compare the performance of several algorithms for finding subcellular objects  in fluorescence microscopy images. the algorithms employ various approaches for segmenting small structures, all aimed at detecting spot-like local intensity peaks, as opposed to the general separation of signal from background that is common in cell segmentation. we also propose an objective and comprehensive approach for evaluating algorithms for small particle detection. we use indirect comparisons with high-throughput well plate data, comparisons against manually scored objects in frames of 3d image stacks, and pixel-level comparisons against ground truth results in simulated images.

importantly, our comparison study takes into account various situations, such as cases where a part of spots are severely blurred, emulating the typical situations of out-of-focus and diffraction limited appearance. our comparison also considered cell heterogeneity , a factor commonly encountered in high throughput screening assays. in such case, the detection algorithms must be able to cope both with a range of conditions, such as cells ranging from low to high spot concentration in cells. especially in high-throughput settings, tuning of parameters needs to be done for the whole screen, not for individual images.

recently, a comparative study of nine commonly used spot detection methods has been published  <cit> . here, we expand the set of methods evaluated while also taking into account the results in  <cit>  by including the top-performing unsupervised method in our study. further, our study covers a wide set of usage scenarios by applying three different image sets, providing a set of methods tested in various conditions, including methods that have not been used in the context of subcellular object detection before. the set of methods serves also as a resource for developers of novel particle detection algorithms, enabling more reasonable and informative comparison than histogram thresholding of intensity values.

methods
methods for detecting subcellular objects
a set of eleven algorithms covering a wide range of techniques for spot detection was selected for this study. our selection includes eight previously published methods that were initially developed for applications other than subcellular spot detection. in addition, we formulate three filtering-based methods that, to the best of our knowledge, have not been previously applied to subcellular object detection. the detection of small subcellular particles from images can be divided into three phases  <cit> : first, an optional preprocessing phase can be used to reduce noise and to attenuate objects of a desired shape or size. due to limitations in imaging technology, an accurate representation of the biological sample can be degraded by several error sources, resulting in a noisy observation of the underlying object. to decrease the effect of these errors, an optional low-pass filtering phase for noise suppression can be applied, and here the linear low pass filtering has been applied depending on whether the method has been observed to suffer from false detections due to background noise and the choice has been made through testing separately for each image set and method. we leave, however, experimenting with various preprocessing methods out of the scope of this article. next, signal enhancement may be used to make the desired objects more easily detectable than they were in the original image. many of the methods studied here involve user-definable parameters for controlling this phase. we use grid-search for tuning such parameters . finally, the actual detection is obtained by thresholding the enhanced signal. because we do not consider segmentation threshold as a parameter for the detection methods unless it has been defined as such in method description, the presented methods derive the detection result automatically based on heuristics rather than stepping through multiple threshold levels. as a result, our comparison shows the results as given by the methods after tuning their parameters in a grid-search manner, not after fixing the operation point by tuning the segmentation threshold. in this way, the methods can be compared based on their performance when operating in a fully automated manner.

the large number and wide variety of methods designed for intensity detection in different image analysis applications preclude an analysis of all possible methods described in the literature. we chose to exclude methods relying on statistical learning, such as in  <cit> , to avoid the problem of selecting training data. we also left of methods relying on pure intensity thresholding, since they are are likely to perform poorly due to non-uniform background and staining in the cell bodies. however, our selection does cover a variety of different approaches, which are relatively comparable in terms of accuracy and processing time. the selected algorithms are listed in table  <dig> with a brief note on their operation principle and the abbreviations of their names used throughout the manuscript. below is a more detailed description of each algorithm.

band-pass filtering
in this method we formalize a detection method based on band-pass filtering . here the image is band-pass filtered using a filter with transfer function h in a frequency domain that produces an image in which the objects of interest are emphasized. in addition to emphasizing the objects, the band-pass filter can be used to suppress the presence of noise, e.g. shot noise can be taken out by filtering the high-frequency components.

the filter h is designed such that the normalized cut-off frequencies are . because the choice of cut-off frequencies is not a straightforward task from the spatial domain, it is advisable to consider the spectrum while choosing the desired band-passes. after filtering, otsu's method  <cit>  is used to automatically obtain a threshold value th for binarizing the band-pass filtered image. thus, the four cut-off frequencies are the only user-defined variables.

feature point detection
the feature point detection  algorithm proposed as a part of a tracking framework in  <cit>  was originally designed for colloidal studies in  <cit> . the algorithm first reduces background effects in an image restoration step by box-car average estimation, and simultaneously enhances spot-like structures by convolving with a gaussian kernel  <cit> . more formally, the convolution kernel is given as   

where  and b are normalization constants, Œªn defines the gaussian kernel width, and w is a user-tunable kernel window size  <cit> . thus, the filtered image after the convolution with kw  is given as   

where f is the original image,  and  are pixel coordinates in the image and kernel, respectively.

the initial point locations are then estimated by finding local intensity maxima. a point is considered to be a local maximum if it has the highest intensity within a local window, and the intensity value falls within the r highest percentile. the algorithm then proceeds by refining the point locations. finally, all detected points are subjected to non-particle discrimination in the zeroth and second order intensity moment space, where a user-defined threshold ts controls the discrimination. a detailed description of the discrimination step can be found in  <cit> . thus, the percentile threshold, the discrimination threshold, and the window size parameter  are the three free parameters for fpd in this study. we note that one feature of the applied fpd implementation is that it was used for giving the object locations as an output instead of a segmentation result. as a result, detection of an object can be evaluated but direct comparison of the segmentation result is not done here.

h-dome transform
the morphological h-dome transform   <cit>  has been applied to subcellular object detection in a tracking context  <cit> . smal et al.  <cit>  reported the best results among unsupervised object detectors were achieved with the h-dome transform based detector. the h-dome detector, according to  <cit> , assumes that the image is formed by no objects of interest, heterogeneous background structures and intensity distribution b, and a noise term Œ∑. the aim of the method is to estimate the number of objects no and the object locations in image.

briefly, the h-dome detection method as presented in  <cit>  proceeds as follows. first, the input image f is log filtered to obtain a background subtracted image , where spots are enhanced. filtering is controlled by a parameter œÉl which defines the scale. next, a grayscale reconstruction of the filtered image is created using a mask  - h, where h >  <dig>  thus, the image decomposition is given as   

where hœÉ contains the small objects, the grayscale reconstruction bœÉ represents larger background structures, and intensities of height h are cut-off from the top. the h-dome transformed image hœÉ, where the bright objects should all have an intensity value of h, is used as a probability map for sampling and where pixel values of hœÉ are raised to the power of s. the map  reveals areas that are likely to contain spots. after sampling, the samples are divided into clusters using the mean-shift algorithm. using the mean value and variance of each cluster, the samples are divided into real objects and other structures, while the parameter œÉm controls the maximum allowed size for an object of interest. details about sampling and object discrimination can be found in  <cit> . overall the h-dome transformation based method has several parameters that need to be tuned based on the data in order to obtain useful results. as reported in  <cit> , the method is a very powerful detector when the parameters are tuned reasonably and when the data supports the assumptions made by the model.

kernel density estimation
a segmentation algorithm based on the use of kernel density estimation  is presented in detail in  <cit> , this method is also known as the parzen window method. briefly, the method estimates the probability density function over the image by combining local information. the estimation step results in a smoothed version of the original image where the effect of noise is suppressed.

the method processes the image f by filtering it with a desired kernel in a circular window placed in coordinate  as follows:   

where h is the smoothing parameter,  denotes pixel coordinate inside kernel, card is the cardinality of the set, and the kernel k could be, e.g., uniform k = . other implemented kernels are gaussian, epanechnikov, triangle, quartic, triweight and cosine  <cit> . finally, otsu's method  <cit>  is used to obtain a binarized version of the original image. in this method there are three parameters that can be set by the user: the radius r, the smoothing parameter h and the kernel. however, the choice of the kernel used is not crucial  <cit>  to the result.

local comparison and selection
the local comparison and selection  algorithm is a novel method for subcellular object detection. lc uses multiple spatial filters and performs comparison between their outputs. first, we start with a circular filter h of the radius r, which is then separated into four quarters: hne, hse, hsw, hnw. for example, with filter hne coefficients, the other three quarters are set to zero, as is shown for the example filters in figure  <dig>  due to this choice of separation of the sub-filters, the method might have difficulties detecting objects with complex shapes, e.g. cones or curly objects.

the original image f is filtered with the four filters in order to obtain spatial information from four directions around each pixel, giving insight into whether a specific pixel is part of an object or not. the binary output image is obtained by comparing the maximum pixel value from the filtered images to the original pixel value scaled by the factor Œ± at each image coordinate . formally, the binary image bw is defined at pixel location  as   

where  is the image filtered with the kernel at direction ne . the filtering directions are illustrated in figure  <dig>  hence, the user-definable parameters are the radius r which relates to the object size, and the scaling factor Œ± which can be used for tuning the segmentation threshold. by using the aforementioned binarization method one can take into account the possibility of non-uniform background, i.e., object presence is decided based on the local features.

local spot enhancement filtering
local enhancement filtering  is another novel method for subcellular object detection. lef is based on a matched filter that enhances spot-like structures and suppresses background intensity. the method starts by scaling the average intensity of the image into a predefined mean, thereby reducing the effect of global intensity differences between images. the square filtering kernel h that is used for matched filtering is defined in two parts. first, the inner part is a circular support area  that enhances local intensity peaks. second, the area in square kernel that is left outside the circular area  is used for suppressing the background by division. thus, the filtering operation for pixel coordinate  can be expressed as follows   

where the filtering provides a so-called spot likelihood image  that needs to be thresholded. the thresholding, performed by the product of the sensitivity threshold and the standard deviation of the spot likelihood image  provides the final detection result. the division of the kernel area into inner and outer areas is not limited and it could be done based on assumed objects shape, enabling adjustments based on prior knowledge about the objects of interest. in this study, we keep the kernel fixed in order to avoid additional parameter tuning. in this case, the weighting parameter ths for thresholding is the only free parameter.

morphometry based on granulometric analysis
the morphometry method for spot detection, abbreviated here as mgi, is adapted from  <cit>  where automated morphometry was proposed for the quantification of synaptic boutons in neurons. the automated morphometry is based on granulometric analysis. the method first calculates granulometry by using morphology with varying disc sizes d, yielding a so-called granulometric index, or size density, g  <cit> . the granulometric index is then used to select the scale of interest, which in our case involved automatically choosing the two highest peaks in g, denoted as dlow and dhigh. choosing the scale of interest is critical for the outcome, but for compatibility with high-throughput analysis, we chose to automate the scale selection. the scale of interest is used for constructing the corresponding opening images ilow = i ‚ó¶e and ihigh = i ‚ó¶e, where ‚ó¶ means grayscale opening and e is the disk-shape structuring element. subtracting ihigh and ilowgives the image where the structures of the desired scale should be present. further, the structures of interest are extracted by masking with binary image obtained with k-means clustering. finally, integral thresholding  <cit>  gives the particle detection result within the area that was masked with k-means clustering. notably, we used our version of the automated morphometry algorithm with default parameters, requiring no parameter tuning.

multiscale product of wavelet coefficients
detection based on the multiscale product of wavelet coefficients  was presented in  <cit> . this method extracts bright spots by calculating the products between different support scales of the √† trous wavelet transform. briefly, the algorithm is based on the assumption that, unlike noise or large objects, spots will be present at each scale of the wavelet decomposition, and thus will appear in the multiscale product. the mw method is adapted from  <cit> , where the wavelet representation is obtained as a separable b3-spline wavelet transform by convolving the image a <dig> column by column and row by row with a  <cit>  kernel, resulting in a smoothed image a <dig>  the corresponding wavelet layer is given as w <dig> = a <dig> - a <dig>  the convolution is then repeated recursively j times, augmenting the kernel at each step i by padding 2i- <dig> -  <dig> zeros between the kernel coefficients. by reaching level j in recursion a total of j +  <dig> images are obtained and are used to construct the wavelet representation w = w <dig> ..., wj, aj of the original image, where wi = ai-1-ai, and  <dig> <i <j. spot detection is based on the pixelwise multiscale product of the reconstruction layers wi, defined for pixel position  as follows:   

where j denotes the scales. to repress noise, the wavelet coefficients are thresholded prior to multiplication. here, we use the hard thresholding scheme proposed in  <cit> , where the threshold is given as  <dig> √ó œÉi, and œÉi is estimated to be mad/ <dig> . the heuristics for choosing the actual objects from the multiscale product include thresholding according to a user-specified detection level. in this study, we use the number of scales j and the detection level ld as free parameters.

source extractor
unlike most filtering methods examined in this study, sourceextractor   <cit>  estimates the background in blocks and removes it before filtering with a gaussian kernel. background removal is also performed in blocks, the size of which is controlled here by a user-definable parameter. the background estimate is achieved by clipping the intensity histogram at both ends until the histogram converges at three standard deviations around the median. when the standard deviation is changed by less than 20% during the clipping process, the mean is taken to be the background intensity. otherwise, the background is estimated to be bg =  <dig>  √ó median -  <dig>  √ó mean. pixelwise, the background estimate is then obtained by interpolating the blockwise background estimates.

after filtering, the result is thresholded to provide an initial estimate of the objects. in our implementation, we use two scaling parameters to control the thresholding: thdetect for scaling the standard deviation of background subtracted intensities and thbg for scaling the background removal. thus, the thresholding is defined as:   

where bg is the estimate for the background, œÉ is standard deviation of the intensity, f is the input image, and bw gives the binary detection result, each defined here in pixel location . by setting thbg =  <dig>  the version given in  <cit>  is obtained. the detected objects, i.e. the areas in the intensity image under the connected components in the binary image bw, are then processed further in the deblending phase, where possible overlapping sources are separated. briefly, the deblending proceeds by splitting the detected object into  <dig> slices inside the intensity range  of the object. starting with the highest intensity peaks, the algorithm takes each slice and determines whether two branches originating from different intensity peaks within the same object should be separated as different objects. the deblending algorithm considers the integrated pixel intensity of the branch relative to the total integrated intensity of the detected object as a basis for determining the separation, as explained in  <cit> .

the original application area of source extractor is as far from subcellular object detection as possible; it was designed for analysis of galaxy-survey data  <cit> . though the method has been widely applied across many disciplines, to the best of our knowledge, its use in subcellular spot detection has not been reported. the applicability of source extractor in the analysis of subcellular structures underscores the generality of the problem of finding bright spots within images.

sub-pixel location detection
the detection method in  <cit>  was used for defining sub-pixel locations  of single molecules in low snr  images. the detection, though originally intended to be used in tracking, can be used as an independent module for identifying spots. the algorithm detects local intensity maxima by comparing to neighboring pixel intensities and the standard deviation of the local background. in  <cit> , temporal averaging is used to reduce intensity variation prior to detection. however, we omitted the time averaging step since it is only applicable in the context of time-lapse imaging.

the method proceeds as follows. within a window, the central pixel is chosen to be a potential spot if it is brighter than its surrounding pixels. the initial detection is further controlled by testing against the standard deviation of the local background. a user-defined parameter Œ±, the only free parameter for spl used in this study, controls the local maxima detection. this parameter defines the limit for type i errors in the initial local maxima detection. sub-pixel locations are estimated for the local maxima that pass the criteria by fitting a 2d gaussian kernel iteratively as described in  <cit> . like the feature point detection method, we use spl only for estimating the locations of detected spots, therefore it can be used to count the number of spots and for object-level comparisons, but not for pixel-level evaluation.

top-hat filtering by grayscale morphological opening
the grayscale morphological top-hat filtering  <cit>  acts as a local background removal function, simultaneously enhancing round, spot-like structures. here we combine top-hat filtering and automated thresholding to form a spot detection method, abbreviated as the. essentially, the filtering phase performs grayscale opening with a flat disk-shaped structuring element e of radius r and subtracts it from the original image f. more formally, the top-hat filtering result is given as fdiff = f - f ‚ó¶ e, where ‚ó¶ denotes grayscale opening. in the filtering result, the objects roughly of size determined by r should be enhanced, and background removed.

the resulting image fdiff needs to be thresholded in order to obtain a binary mask for spots. we tested several histogram-based segmentation methods  <cit> , and applied an entropy-based thresholding  <cit>  which produced slightly more conservative values for images with spots than many other thresholding methods. thus, instead of parameterizing the detection threshold or applying any post-segmentation constraints, we use top-hat filtering in a more automated manner, which requires considerably less parameter tuning.

data
simulated experiments
the most natural way of comparing segmentation algorithms is by a pixelwise comparison. however, constructing a reference segmentation in which all of the pixels belong to biologically meaningful small spots would be difficult. creating a reliable and representative reference result is difficult because, on the one hand, it is extremely tedious to manually analyze a large number of spots in a reliable manner, and on the other hand, analyzing a relatively small number of spots is statistically inadequate. thus, to enable pixelwise comparisons against a reference result, we used simulated experiments published previously as a benchmark set in  <cit> .

the simulated image set, generated by using the simcep cell image simulation framework  <cit> , consists of  <dig> images with nuclei, cytoplasmic areas, and subcellular objects each having their own channel in the rgb image. noise, i.e. intensity variations in cell texture, and blurring for out-of-focus objects are also introduced in the simulation process  <cit>  in order to give the simulated images some level of error akin to that encountered in experimentally derived images. prior to the analysis, the images are converted to grayscale using the standard conversion of  <dig>  √ó r +  <dig>  √ó g +  <dig>  √ó b. after this conversion, subcellular objects in the grayscale images have slightly higher intensities than their surroundings.

frames from image stacks of yeast cells
the second data set contains frames from image stacks obtained with wide-field imaging. the objects are p-bodies, visualized by edc <dig> protein fused to green fluorescent protein . stacks of  <dig> frames along the z-axis  were acquired using a leica dmgi 6000b microscope equipped with motorized x-y stage, a high quantum efficiency cooled back-illuminated qimaging rolera-mgi ccd camera, and integrated software control . the images were acquired under oil using a 63√ó objective/ <dig>  na plan apo oil lens.

stacks usually consist of a set of frames starting with images in which the objects of interest are not yet in focus. as the microscope scans through the sample in the z plane, objects come in focus, appear in a set of frames, and then vanish as the scanning proceeds past the object's focus area. the implication for the analysis task is that the spot detection methods must be able to detect objects only in the in-focus frames. we selected seven stacks of images and from each stack chose four frames such that one frame is empty  and three frames with varying number of p-bodies that are present and in focus. in total,  <dig> frames are used in this study.

for the selected frames a reference result was manually determined by two observers. in order to limit the number of comparisons we chose to combine the results from two observers such that we included all spots in our reference. due to the small spot size and the noisy appearance of the wide-field microscope image, the objects are marked with a fixed-size spot but the area is not outlined in detail. as a consequence, the manual reference result can be used for object level comparison, i.e. to assess whether an object is found or not, but not as a pixel-level ground truth result.

well plate experiments of a human osteosarcoma cell line
a major application of bright spot detection of subcellular organelles is in high-throughput screening, where for example the effects of gene knock-outs or differences in responses to varying dose levels of a particular stimulus are of interest. to test the ability of the various methods to detect differences in populations of cells stimulated with different doses of a drug, we used the sbs compucyte transfluor image set provided by dr. ilya ravkin and available from the broad bioimage benchmark collection  <cit> . the images are of a human osteosarcoma cell line. the image set consists of a portion of a 96-well plate containing  <dig> replica rows and  <dig> different concentrations of isoproterenol. importantly, stimulation with different doses of isoproterenol affects the appearance of small vesicle-like spots. there are four acquired fields per well, resulting in  <dig> total images. the image set also contains specific staining for nuclei, which we used to determine the number of cells per image. thus, the outcome of the analysis is an assessment of the average number of vesicles per cell in each image, with the images grouped by dose level. these results can be used for indirectly comparing different methods, since no ground truth information for the vesicles is available.

performance evaluation metrics
several metrics for performance evaluation exist when reference result, for example object number and locations are known  <cit> . for measuring the accuracy of detection algorithms, we chose the following commonly applied metrics.

first, a true positive  is defined as a correctly found object, and a false positive  is a detected object for which there is no match in the reference image. a false negative  corresponds to a missing object in the detection result. the same definitions may also be applied for pixel-level analysis. in accordance with  <cit> , we define precision p  as   

and recall r  as   

by intuition, detecting objects where no true objects exist is penalized in p, whereas failure to detect true objects is penalized in r.

furthermore, the f-score can be obtained as a harmonic mean of precision and recall  <cit> ,   

the f-score combines precision and recall as a single measure of segmentation accuracy, making it a useful parameter for evaluation purposes.

RESULTS
parameter optimization
many of the detection methods proposed in the literature incorporate one or more parameters which can be tuned to enable detection in different situations. the methods proposed in this study also require user-defined values for input parameters. in spot detection, parameters typically provide information about object size  and probability , permit tuning of the detection threshold , or specify the applied option within a family of methods . because the parameter values have a significant effect on the detection accuracy and need to be tuned specifically for the applied data, we performed parameter optimization for the two datasets with ground truth references and recall r  as by sampling the parameter space in a grid search manner. by using the f-score described in equation  <dig> as a measure of detecting performance, the grid-search can be used to tune the parameters optimally within the search space for the applied data. the results of parameter tuning for the simulated data and for yeast image stack data are shown in figure  <dig> and figure  <dig>  respectively. we note that for methods with more that two free parameters, we have chosen two for visualization purposes, and a grid search was carried out to identify the optimal combination of the remaining parameters to construct the images shown. the detection accuracies as a function of all free parameters can be found in the supplementary materials. to facilitate an objective comparison of these methods, we used of a common measure , which is optimized within the parameter ranges. the results obtained represent the best possible result within the input parameter space. the parameter tuning results in figure  <dig> and  <dig> also provide information about the sensitivity to changes in parameter values, which may be useful when tuning methods to new data. the grid search approach also solves the difficult problem of parameter tuning, with the cost of exhaustive computations requiring large amounts of processor time. although parameter tuning can be accomplished by performing the calculations in parallel on a grid-computer network , the problem of setting the value range and sampling the parameters remains. for some parameters, such as those related to object size, reasonable value ranges may be set intuitively. the fact that many parameters are natural numbers makes the process easier. however, real-valued parameters, such as probabilities and tuning factors need to be sampled more densely and their dynamics is less predictable. for example, the size of the structuring element can be defined by testing with a few values , whereas the significance value Œ± needs to be sampled more densely . furthermore, parameter sampling when parameters depend on each other becomes even more challenging. as an example, the parameters of bpf defining the pass band need to be in increasing order, leading to sparse point-cloud type sampling  instead of a smooth curve or surface.

allowing the user to tune many parameters leads to a highly adaptable method, but also requires considerable effort to ensure reasonable  performance. thus, the calculation times for the optimization procedures vary greatly between methods. while a detailed discussion of the effect of each parameter for the  <dig> methods is beyond the scope of this article, we offer a list of parameters for each method along with the applied ranges in the supplementary materials. lastly, we note that by tuning different parameters than the ones in this study, and by adding more parameters to the methods, the methods may be further customized for analysis tasks.

results for simulated images with pixel-level reference
first, we consider the validation of algorithm performance with simulated images in which the noise-level and other image characteristics are known. in this case, we calculated the number of objects detected in the  <dig> images by each method and determined whether the differences between object counts were significant, using the non-parametric kruskal-wallis test of whether the medians of multiple groups are equal. our results suggest that detection results do infact differ significantly . wilcoxon rank sum tests between result pairs further support this claim by showing that most of the results do not have the same median.

for synthetic images the comparison can be made at both the pixel-level, which is perhaps the most natural way of defining segmentation accuracy, and at the object level, as was done for the wide-field microscope images. the object level comparison for the set of  <dig> simulated images is presented in figure 4a-c, and the corresponding pixelwise comparison is presented in figure 4d-f. we note that two of the methods, namely fpd and spl, cannot be included in pixel-level comparison because they were used for estimating spot locations instead of segmenting objects. the results in this article are calculated for the low quality simulated image set .

in the pixel-level comparison none of the methods stand out with superior accuracy, although mw received a slightly better f-score value than the other algorithms. for object-level comparison, hd had the most accurate f-score, followed by mgi and mw. in considering the relationship between method performance at the pixel and object levels, clearly there is some level of correlation between the two sets of results. intuition would suggest that it is easier to merely detect an object than it is to define its area accurately. consistent with this view, the pixelwise results are generally lower than the object level results. the relatively subtle differences in the pixel-level results figure 4d-f do not allow identification of a single algorithm that would be superior in both categories. for example, hd seems to find the objects well, but its performance in pixelwise comparison does not stand out from others. conversely, the accuracy of lc is lower than average for object detection, but its performance in pixel level is close to the average accuracy. examples of segmentation results are shown in figure  <dig> 

results for yeast images with object level reference
after the analysis of the simulated images, we considered subcellular detection in wide-field images. wide-field microscope images of yeast p-bodies give insight into algorithm performance in the context of actual experimentally derived data. in these images noise and contrast limit the detection accuracy, but objects are well scattered, and the object count per image is relatively low. we used the manually constructed reference images and the performance measures given in eqs. 9- <dig> to numerically compare the algorithms. the performance metrics were calculated for a set of  <dig> images containing a total of  <dig> objects, and the results are listed in table  <dig> 

summary of numerical results for the frames from image stacks of yeast cells. the reported results are the precision, recall, and f-score values calculated for  <dig> frames, seven out of which had no objects according to manual analysis. the results are the maximum f-scores obtained in parameter tuning by grid search, i.e., the f-score shown with red dots in fig.  <dig> 

we compared the precision value, which penalizes extra detections and the recall value, which penalizes missed objects. with the exception of the, most methods produced sufficiently accurate results, as evaluated by f-score . within that set of accurate methods, bpf, lc, and se provided the best results, and kde, lef, and spl  were the next most satisfactory. in contrast, the precision results reveal clear differences that require further attention. the precision of the the, mgi and fpd methods stand out as having significantly high variance. inspection of the segmentation results reveals that the poor performance of all three is due to their performance in the empty images, i.e. images with no objects located in manual analysis. in these cases, false positive detections in empty images lead to low precision. the majority of the images have in-focus p-bodies, and for those images the, fpd and mgi gave reasonable results. with respect to the recall values, the is the highest while both fpd and mgi also score well. examples of detection results are shown in figure  <dig>  where a zoomed area in a single frame and the corresponding reference result are shown together with the detection results produced by all eleven algorithms.

results for osteosarcoma well plate images
next, we considered the analysis of well plate experiments as an example of image-based high-throughput measurements. high-throughput experiments typically challenge image analysis with high object density, high levels of background staining, and high variation of image characteristics across the experiment. the images used for our analysis contain cell populations that are expected respond to a given dose of a drug with varying levels of vesicle-like structures. we obtained an estimate of the average number of vesicles per cell in each image by calculating the number of vesicles in all  <dig> images and dividing the number of vesicles by the number of cells in each image. we then grouped the results by the reported dose level. the result is a measure of the dose responses for the cell populations determined by each of the eleven algorithms. we then used these dose responses as an indirect comparison between the detection algorithms. the results are shown in figure  <dig>  and a sample image with corresponding detection results is shown in figure  <dig> 

the dose responses in figure  <dig> form a step-like pattern, with very few vesicles per cell in low-dose populations , increasing vesicle numbers beginning with dose level vii and peak vesicle numbers at dose level xi. increasing the dosage beyond that of level xi  does not appear to increase the average number of vesicle structures per cell. this behavior is consistent with saturation as the dose concentration increases.

although there are differences in the absolute number of vesicles per cell in low dose images and the magnitude of the difference between the low and high dose images, all methods  produce this step-like dose response curve. for example, the step given by fpd, lc, and kde is substantially lower than those by bpf, se, and spl. the result given by mgi and the resemble the others for the high dose values where the images contain a large number of vesicles. when vesicles are few in number or not present at all, the methods give false detections. the clear differences in the dose responses obtained with different algorithms suggests that any downstream analysis, such as clustering or classification of populations based on the vesicle counts could produce significantly different results.

comparison of relative similarities
to further explore the results  obtained for all three image sets, we preformed hierarchical clustering and visualized the results as a dendrogram . figure  <dig> illustrates the extent of the similarity between some of the algorithms across the set of close to  <dig> images, with fpd and hd being the closest matches and se, mw, and spl also forming a tight cluster. some of the closest matches include algorithms that have similar detection principles. for example, both se and spl use matching of a gaussian kernel into local maxima as their backbone, se by filtering into a background subtracted image and spl by repeated fitting into a local maximum point. however, similar results were also obtained by algorithms with different approaches, e.g. hd and fpd. the dendrogram also identifies methods whose results are significantly different from those obtained by the other methods. for example, both mgi and the use a morphology-driven detection strategy with automated thresholding. this detection approach is different from that of the filtering-based methods, and as the results in figure  <dig> and table  <dig> show, these methods perform poorly on empty images when used with a completely automated thresholding as has been done here. in contrast, mgi and the did perform fairly accurately on the simulated images. thus, the use of these two methods may be warranted under conditions other than those in which the majority of the other methods perform well.

finally, we calculated the pairwise correlation coefficients between the object counts obtained for all images. the pairwise correlation values between methods are shown in figure  <dig>  these correlation results further support the clustering results, namely that results given by mgi and the differ significantly from the others  whereas se, spl and mw performed similarly . the object counts for all image sets that were used for constructing the dendrogram and calculating the correlations are available at the supplementary site.

CONCLUSIONS
we have studied the performance of eleven subcellular object detection algorithms under different analysis scenarios. our study included real images of high-throughput well plate experiments for indirect comparison of the algorithms, as well as frames from image stacks of yeast p-bodies for which the object-level reference information was available. in addition, we used simulated images with small subcellular objects, thereby enabling a pixel-level comparison of algorithms against a computer-generated ground truth.

results for the simulated images gave detailed insight into the performance of the methods. in the simulated image set all the images had the same number of subcellular objects. the object counts obtained for the image set revealed that statistically significant differences exist between the algorithms. the small spots proved to be rather difficult to detect, highest object level accuracy  being  <dig>  given by hd. worth noting is that also mgi , the , and fpd  all perform well for the set where all images had spots, all of which had problems with the empty images. simulation allowed also pixel-level comparison, where mw gave the most accurate segmentation by a slight difference when measured by f-score, but none of the methods provided outstanding accuracy. the pixel-level results confirm how challenging it is to accurately segment small particles in noisy and partially blurred images with heavy background fluorescence. moreover, the limitations in segmentation performance on pixel-level raise a question about the reliability of shape, size or morphology features extracted from subcellular objects in standard fluorescence microscopy measurements.

second, the high level of f-score values for the detection of gfp labeled p-bodies in wide-field microscope images proved that all methods can be used for accurate detection of bright spots when background intensity is on a moderate level. the highest f-scores between manually located reference result and automated analysis result were given by bpf , lc , and se . furthermore, fpd, mgi, and the had difficulties in the handling of empty frames of wide-field microscope images, which shows as a high number of false positives leading to low precision values. excluding the empty frames, all these three algorithms were accurate for the frames with in-focus p-bodies, which is confirmed by the high recall values.

third, results for the human osteosarcoma well plate measurement data further confirmed how some of the algorithms failed to cope with a large data set where images contain varying amount of small spots. examples of poor handling of varying conditions were the and mgi algorithms. our implementation of mgi detects automatically the scale of interest, and in case of no or very few vesicles it fits to the scale of cells. the implementation of the included automated thresholding, which in this case assumed the data to include two groups: objects and background. thus, neither of these two algorithms was able to handle all images with same parameter settings when used in the way described here. however, including free parameters for tuning the segmentation or preprocessing steps could lead to better results. also fpd and hd produced less obvious ramp as a dose response. fpd assumes certain level of spots to be present in all images , which explains why varying probability for spots within experiment may cause problems in detection. hd method, despite its heavy parametrization, seems to make a compromise where very few false objects are detected, but also part of true objects are missed. apart from mgi and the, all of the compared algorithms produced a step-like dose response, suggesting that the methods can be used for detecting differences between populations exposed under varying levels of stimulus. the results given by the  <dig> algorithms confirm that they all are very useful in spot detection tasks, but the results also show clear differences in terms of their ability to detect small, vesicle-like objects and to adjust to varying conditions. the handling of images containing very few, if any, small spots, in particular, brought out significant differences between the algorithms. since handling such images can be fundamental for some applications, the algorithms should be chosen with care.

finally, some remarks on the performance of the three detection algorithms originally developed for tracking purposes, i.e. fpd, hd, and spl. though developed for similar purposes, the methods have different approaches for detection. by definition, fpd tends to detect roughly the same number of objects for a set of images when used with fixed parameter settings. from a tracking point of view, this is a reasonable assumption if the number of particles is expected to be rather constant throughout the imaging sequence. the results for simulated image set support this conclusion, since the the number of particles stays constant in this set. on the other hand, when the number of particles present in the images changes dramatically over the course of the imaging period, the hd and spl approaches are likely to give more accurate performance. this assertion is supported by our results. spl adjusts well to varying conditions in well plate and wide-field images, and hd performs reasonably well in varying conditions, avoiding excessive false positive detections for empty yeast images , though doing so at the cost of missing some spots . we note that for the yeast stack images, even tuning the five free parameters of hd did not provide results as accurate as those with the single open parameter of spl. for the simulated images, on the other hand, hd gave the most accurate results among all  <dig> algorithms, outperforming both fpd and spl. although detection accuracy does not directly predict subsequent tracking performance, choosing a method based on careful testing may be beneficial.

thus, although detection algorithms are problem-specific, the systematic comparison of methods with a large set of test images can help choose the best method for the particular imaging challenge. using a systematic approach, algorithms can be compared under varying conditions, providing useful information for various use cases. our study also makes use of recently published benchmark datasets in order to evaluate algorithms. importantly, evaluation based on a wide range of images tests the algorithms with an objective framework in which performance has not been tuned for a small set of images with specific characteristics. for example, subcellular object detection in modern high-throughput imaging experiments provides a challenge for image analysis because contrast, intensity, and number of spots may vary significantly within the same experiment. systematic testing of algorithm performance with large image sets, as was done in this study, allows one to predict algorithm performance in such tasks. supplementary material, including additional result figures and an algorithm toolbox as a cellprofiler  <cit>  compatible module written in matlab  are available for download at http://www.cs.tut.fi/sgn/csb/subcell.

authors' contributions
pr planned the study, and wrote the manuscript. pr and t√Ñ carried out experimental calculations. t√Ñ, sc, pr, and js were responsible of algorithm implementations. cg-t carried out experimental work related to yeast imaging, and cg-t & js performed manual analysis for the yeast image set. t√Ñ, sc, cg-t, js, mb and amd helped in manuscript editing. mb and lp participated in design of the study. amd supervised the experimental work with yeast. lp and oy-h conceived of the study. all authors read and approved the final manuscript.

