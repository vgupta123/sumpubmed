BACKGROUND
discovering linear sequence motifs common to a set of protein sequences has long been an important problem in biology. it is possible to check if a set of proteins contain a known sequence motif by searching protein motif or domain databases. databases including pfam  <cit> , eukaryotic linear motif database   <cit> , prosite  <cit>  and scansite  <cit>  contain sequence motifs and domains in the form of regular expressions or profile hmms. obviously, one cannot use these resources to discover a novel or unannotated sequence motif that is suspected to be a common feature in a given protein set. while new protein domains such as those contained in pfam can be defined from alignments of evolutionarily related sequences, the identification of short sequence motifs, potentially shared between proteins that appear evolutionarily unrelated, is much harder.

to tackle this problem, several multiple alignment approaches  <cit>  have been proposed. one such tool, dilimot  <cit> , is a recent protein motif search tool aiming at finding relatively short overrepresented motifs by aligning only sequence regions that are likely to contain a linear motif. it filters out regions including globular domains and coiled-coil regions which are reported or predicted by some other algorithm, before searching for known motifs in several protein databases such as pfam, and finally uses a pattern search program, teiresias  <cit>  to find overrepresented matches. teiresias, software that is not based on database look-up, can list frequently repeating character-based patterns that include gaps, from a given sequence set. patterns can include one or two "events" separated by wild-card characters, as in "at..g"  <cit> . both dilimot and teiresias report results as regular expressions. there are also other algorithms in the non ab initio motif finding category, using evolutionary or structural information, which are specifically designed to predict dna-binding regions in protein sequences  <cit> . however since the meme tool was developed  <cit>  and provided a way to carry out ab initio protein motif finding, returning a set of position weight matrices  rather than regular expressions, not many multi-purpose sequence-based probabilistic motif finders have been developed, despite there being numerous tools for finding motifs in dna.

nestedmica  <cit>  is a probabilistic motif discovery algorithm which uses a new monte carlo inference strategy called nested sampling  <cit> . written in the java programming language as an open source application, nestedmica uses biojava libraries  <cit> . it has been successfully used for transcription binding site and large-scale promoter motif discovery  <cit> . in this manuscript, we extend the application of nestedmica to finding motifs in protein sequences and compared it with the popular program meme using both biologically-authentic and synthetic test data sets. we chose to compare nestedmica with meme, because the output of meme is motifs in the form of pwms, making comparison possible. meme is also an ab initio method and uses probabilistic models like nestedmica.

to evaluate the performance of the two methods we have performed various spiking tests in which some test motifs generated from protein domain alignments were spiked into a set of protein sequences, as described in the methods. nestedmica has also been assessed by testing its ability to find a subcellular localisation motif in datasets known to contain a specific localisation signal.

RESULTS
background model
the first step in using nestedmica is the generation of a background model to represent the "uninteresting" parts of sequences that do not contain motifs of interest . from a series of tests we concluded that different sets of protein sequences vary in complexity and composition too much to develop a generic background model. most of the time, training a dedicated background model for each protein dataset is the best way to maximise performance and sensitivity. prior to motif finding, sequence likelihood analysis must be performed to test a variety of background models and select the optimal one. figure  <dig> shows one such likelihood curve performed on a set of cytoplasmic proteins. generally, if there is sufficient data to perform a proper training, using order- <dig> background models proved to be better than order- <dig> models for proteins. as far as the number of mosaic classes is concerned, a class number should be picked that falls on the corresponding likelihood curve before it starts to saturate or drop, regardless of whether it increases at a later stage.

performance vs. motif abundance
we used  <dig> different motif sets each containing  <dig> motifs of lengths ranging from  <dig> to  <dig> amino acids. instances of each of the motifs  were separately spiked into the cytoplasmic dataset . the  <dig> motifs were inserted into the sequences at different frequencies , allowing us to test motif discovery software under different conditions of motif abundance. generally, performance for both nestedmica and meme increased with increasing abundance rate of the inserted motif.

each of these three figures shows a set of tests performed at different motif abundance rates with the original test motifs, along with the corresponding motifs found by both nestedmica and meme. for each motif reported by nestedmica and meme, its cartesian distance from the corresponding original motif is given. as table  <dig> summarises, low abundance motifs and short motifs were more difficult to recover for meme, even if they had a high information content. for example, out of the maximum  <dig>  bits per position, the average information content per position was  <dig>  bits  for motif of length  <dig> in set  <dig>  while it was  <dig>  bits  for motif of length  <dig> in the same motif set . both could not be recovered by meme at the tested  <dig>   <dig> and 30% abundance rates. the motif of length  <dig>  for example, could only be recovered correctly by meme when it was present in at least 80% of the sequences . in contrast, the same motif was recovered by nestedmica when present in only 10% of the sequences. nestedmica did not miss any of the  <dig> motifs when they were present at 30% abundance. it also correctly recovered  <dig> % and  <dig> % of them when the motif abundance rate was 20%, and 10%, respectively .

in addition to cartesian motif distances, measuring the similarity between the recovered motif and the original, the performance of the motifs in finding motif instances when scanning test sequences is indicated by matthew's correlation coefficient   <cit>  values . mcc is a single measure that captures performance over a range of sensitivity and specificity values . raw sensitivity and specificity values are given in additional file  <dig> for the three motif sets. these measures have been used to evaluate the scanning performances of the original and reported motifs, by testing spiked datasets  where each sequence contains an instance of a particular motif. we provide the mcc values for the original test motifs, too, for better interpretation of the mcc values given with the motifs reported by both programs. having relatively lower sensitivity/specificity values, and hence a lower mcc, does not necessarily mean that a program is not doing well in finding a certain motif, but in certain cases it can indicate that the target motif is a weak one and therefore more difficult to recover. mcc values for the original motifs were calculated in a similar way to the others, i.e., by spiking every sequence in the background test dataset with the generated instances of a particular motif, and then scanning the spiked dataset with the original motif to see how many motif hits would be found using a range of score thresholds .

performance with multiple motifs
individual protein sequences may contain multiple different motif of interest. for example, proteins targeted into the endoplasmic reticulum  by an n-terminal signal peptide  sequence are maintained in the er if they have also a " del" retention signal on their c-terminus. after determining the ability of both nestedmica and meme to find single motifs, we assessed the two programs' ability to recover multiple motifs from a single dataset.

we used  <dig> test motifs of length  <dig>   <dig> and  <dig> aa, in the multiple motif spiking tests . multiple motifs were spiked in such a way as to ensure an unbiased distribution. for example, in the first multiple motif spiking test, corresponding to a 40% abundance rate for each motif, it was ensured that 24% of the sequences were spiked with only motif of length  <dig>  24% only with motif of length  <dig> and 16% with both motifs. this corresponds to the distribution of motifs that would be expected by chance. the test was repeated by halving the total abundance rate for each motif.

in a similar way, two other pair combinations of the motifs were tested, and finally, three motifs were spiked at the same time. when the abundance rate for each spiked motif in the triple motif test was 40%, it was ensured that three different groups of sequences, each corresponding to  <dig> % of the total, contained either motif of length  <dig>  or  <dig> or 10; three different groups, each corresponding to  <dig> % of the total contained two motif instances simultaneously  and one group corresponding  <dig> % contained all three motifs.

performance vs. protein length
having performed the motif spiking tests, in order to evaluate the two programs in a more natural situation, we observed the effects of varying sequence length on motif finding in multiple protein sets expected to contain c-terminal motifs. to this end, we used  <dig> non-redundant er proteins , a high proportion of which would be expected to contain the c-terminal er retention signal mentioned above. we created three datasets containing sequence chunks of  <dig>   <dig> and  <dig> amino acid letters, respectively, taken from the c-terminal regions of these er proteins.

to investigate whether nestedmica would still find the motif when there are more than  <dig> residues per sequence, we tested it using  <dig> residue long c-terminal regions. the er retention motif was found only when nestedmica was asked to find two motifs. investigating the other reported motif, we found that it was a thioredoxin family active site motif  that is usually found in er proteins. meme was also tested when forced to find two motifs from the dataset containing the  <dig> amino acid long sequences. however, in addition to the motifs shown in figure  <dig>  it reported a  <dig> residue long motif which we could not locate in domain databases. scanning this motif against the sequences, we noticed that it exists in  <dig> of the  <dig> proteins in the dataset.

"null test" and significance of motifs
for motif discovery assessment purposes, performing spiking motifs into a dataset of sequences that already contained strong motifs would be undesirable, as the method in question might report some of these intrinsic motifs instead of the artificially implanted ones. on the other hand, evaluating a motif discovery tool using a dataset of randomly generated sequences would be unfair, too, as this would be relatively easy for the program to recover a test motif.

given that even sequences having a low sequence identity can in theory share some common sequential features, it is important to ensure that an unbiased set of sequences is used in the tests. for this reason we used non-homologous cytoplasmic sequences from the targetp subcellular localisation dataset for these tests. this dataset had been already filtered by the targetp developers using a homology reduction algorithm that ensures no homologous sequences exist in the set  <cit> , before we filtered it again to further reduce the maximum sequence identity between any of the sequences.

we ran both nestedmica and meme on this dataset, before it was spiked by any test motifs, using different minimum target motif lengths for each program tested. this "null test" was performed, to confirm that the dataset we used in performing motif spiking tests is a reasonably suitable one. this "negative control" test also gives an idea about how well the trained background model represented the sequences.

for this purpose, nestedmica was run with the default parameters optimised for protein sequences . in this test, the minimum target length was initially set to  <dig>  then  <dig>  and finally  <dig>  while the maximum length was always kept as  <dig>  as in the motif spiking tests. motifs generated by nestedmica from these runs were weak and short ones, having average information bit scores per position not exceeding  <dig>  out of the possible  <dig>  bits per position, which corresponds roughly to less than one third of the maximum height in a sequence logo . this indicates that nestedmica does not generally report false positive motifs, and that the chosen background model parameters are good enough to represent the test set. as we have seen above, nestedmica is sensitive enough to report even scarce motifs of length  <dig> when present in only 10% of the sequences, as the examples in figure  <dig> and additional files  <dig>   <dig> indicate. therefore, the fact that nestedmica only reports weak "null test" motifs increases our confidence that the cytoplasmic sequence set that we use to assess motif discovery performance is not likely to contain significant motifs that a motif finder would prefer to report over any of our spiked motifs.

meme, on the other hand, generally tended to report high-information containing motifs of the maximum allowed length, corresponding to about  <dig> bits in total, and above  <dig> bits per residue position. to minimise any remaining common patterns in the sequence set, we further reduced the maximum sequence identity within the set to 30%. furthermore, all sequence regions matching a prosite pattern were removed, based on hits reported by an annotated motif search tool ppsearch  <cit> . however, even with this extra filtered dataset, meme still reported strong and long motifs similar to the  <dig> amino acid long ones in figure  <dig> 

when the user-specified number of target motifs exceeds the number of actual motifs, nestedmica has been observed to generate motifs that look like the "null motif" of that particular dataset . similarly, meme produced the same type of long motifs it found in the null tests when it failed to find an inserted motif in the spiking tests.

CONCLUSIONS
we have added support for protein motif discovery in nestedmica. it reports protein motifs in the form of pwms. it has been optimised for better protein motif discovery under stringent conditions, and automatic motif length adjustment. in summary, our performance assessment tests show that nestedmica performs very well when finding single and multiple motifs even at low motif abundance rates and different motif lengths, thus proving itself to be a robust and sensitive protein motif finder. judging from the calculated sensitivity, specificity and mcc values, there was no clear difference regarding the quality of motifs correctly recovered by nestedmica or meme. however, when it comes to the number of correctly recovered motifs, nestedmica significantly outperformed meme in our protein motif finding tasks including finding low abundant motifs, finding short motifs, and finally discovering motifs from amino acid sequences of different lengths.

in addition to assessing its ability in finding true positive motifs, as shown in the results section, by running it on a non-redundant dataset where no test motif was inserted, we have shown that nestedmica does not tend to report high-information content motifs when there is no meaningful motif contained in the dataset, i.e. that it tends not to report strong false negatives.

considering that some protein signals such as subcellular localisation motifs could be as short as  <dig> amino acids, this new protein motif finder is a promising tool in functional sequence annotation.

