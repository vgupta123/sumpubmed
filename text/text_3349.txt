BACKGROUND
high-throughput experimental technologies have allowed biology to generate huge amounts of data. the enormity of these data sets permits a systemic view of the cell  <cit> . in this new framework mathematical models are immensely useful as compact representations of data  <cit> , and as highly structured hypotheses that include underlying mechanisms of the processes under study. these models often consist of large systems of ordinary differential equations that govern the kinetics of proteins, mrnas, and small molecules. 

mathematical modeling in biology faces several challenges that arise from uncertainty about relevant parameters. for example, the chemical reactions and the corresponding kinetic equations governing any one biological system are only partially known  <cit> . also, finding accurate numerical values for model parameters is virtually impossible, because many biochemical parameters cannot be measured directly. in addition, evolutionary processes can cause parameters to vary on evolutionary time scales, yet preserve system function. thus, even a perfect mathematical model of an individual system might have limitations in describing other individuals of the same population that are sufficiently diverse genetically or epigenetically. in sum, it is often of limited use to identify a single best set of parameters for any one biochemical system. however, one can focus on a viable parameter space instead. this viable space is a subset of a space of biochemical parameters, where a model maintains a desirable behavior. values of these parameters must lie inside the boundaries of this viable space for every organism in a population.

the investigation of viable spaces is closely linked to the analysis of robustness in biology. we here define robustness as the persistence, under perturbations, of a behavior that is characteristic for a system  <cit> . when focusing on robustness to changes in biochemical parameters that define system behavior, a biological system's robustness is a reflection of the topology and size of its viable space  <cit> . the volume of the viable space indicates the "amount" of parameter combinations that allow a system's desired behaviour. a small viable volume forces a precise tuning of biochemical parameters. in contrast, a large viable volume allows a system to successfully face changes in environmental conditions, because its parameters can change, sometimes by orders of magnitude, without impairing its function. hence, robustness is associated with larger viable volumes.

the geometry of viable spaces also plays an important role in a system's robustness. geometries that permit moderate parameter fluctuations without leaving the viable volume enhance robustness. in evolutionary terms, different ways of performing the same function - for instance, by conserved pathways with homologous yet different proteins  <cit>  - can be traced back to a common ancestor and are thus "reachable" from each other  <cit> . a connected viable volume improves a system's evolvability and allows neutral evolutionary trajectories that may drive the system towards viable parameter points with high local robustness. therefore, the robustness of a biological system can be a reflection of the geometry and size of its viable space.

a final motivation to characterize viable spaces comes from model building itself. as we pointed out above, some relevant components and interactions in cellular networks are typically unknown. it follows that the structure of mathematical models describing these networks contains uncertainties. these uncertainties may lead to qualitatively different models that match experimental observations equally well. in this case, robustness can be used as a tool to discriminate between more and less plausible models. everything else being equal, a model can be considered superior if it is more robust than other plausible models  <cit> . 

the use of robustness for model discrimination raises the problem of how to measure robustness. most robustness analyses in the literature are local . they use a specific set of parameters, and their results do not reflect model behavior under all possible viable parameter sets. some nonlocal approaches alter one or two parameters, and use bifurcation analysis to characterize the regions of a parameter space with similar qualitative model behavior  <cit> . these methods have serious limitations whenever multiple parameters have unknown values, which is usually the case. to address these limitations, a third group of techniques  <cit>  use "glocal" approaches  <cit> . in a first "global" step of their analysis, these techniques obtain a sample of parameters from the viable space, and then, in a "local" analysis, they study the local robustness around every element of this set. in this way, they compute nonlocal measures of robustness, but they also face the problem of acquiring a large and statistically representative sample of viable parameter points. therefore, they need efficient global methods to sample the viable space.

the main challenges for global methods typically result from the fact that parameter spaces can have many dimensions and a complex geometry, about which one has little prior knowledge. to characterize a viable space, some authors perform uniform sampling of the whole parameter space to identify regions where a model displays the desired behavior  <cit> . determining this behavior typically involves integration of the model equations, which can become computationally very expensive when done for large samples. even more fundamentally, the "curse of dimensionality"  <cit>  makes the fraction of the whole parameter space occupied by viable parameters decrease exponentially with increasing dimension, i.e., increasing number of parameters. therefore, "brute force" uniform sampling becomes quickly infeasible as model complexity increases. to avoid this problem, hafner et al.  <cit>  developed an algorithm that explores a parameter space by iterative gaussian sampling. briefly, in every iteration, this method determines the mean value and the covariance matrix of the identified viable points in parameter space to guide further sampling. however, the algorithm is only efficient when the viable region is convex and when enough viable points are found in each iteration.

here, we propose an algorithm that overcomes these limitations. specifically, it can efficiently characterize nonconvex and poorly connected viable spaces. the algorithm consists of two steps, namely a coarse-grained sampling of the viable space, which in turn delivers starting points for a finer-grained exploration. the sampled points also define a domain for subsequent volume computations by monte carlo integration, and for acquisition of a large set of uniformly distributed viable points. after describing the algorithm, we analyse a synthetic test problem involving a nonconvex and poorly connected viable space. this analysis will show that in high dimensional spaces our algorithm converges faster and identifies a larger proportion of the viable space than uniform sampling and hafner's method. moreover, in contrast to uniform sampling and hafner's algorithm, whose performances scale exponentially with the number of dimensions, our algorithm's performance scales linearly with the number of dimensions. subsequently, we illustrate an application of our method to a biochemical circuit. to this end, we focus on a simplified model of biochemical oscillators with positive and negative feedback loops  <cit> , in order to investigate the contributions of individual control loops to the robustness of oscillations in a narrow range of frequencies. our algorithm allows us to characterize the nonconvex viable space of this model. in spite of the model's simplicity, the geometry of this space shows well known properties of circadian oscillators. specifically, it indicates that model topologies with an essential negative feedback loop and a nonessential positive feedback loop provide the most robust fixed period oscillations, as has been observed in different models of circadian oscillators  <cit> . in addition, the connectedness of the model's viable space suggests that biochemical oscillators with varying topologies can evolve from one another.

methods
viable regions
given a model that involves d parameters, we define a parameter space as

  Θd=Θ1×Θ2×⋅⋅⋅×Θd, 

where Θi is the interval of the real numbers ℝ for which the parameter θi is defined. we call the d-tuple θ =  ∈ Θd a parameter point. it represents a configuration of the biochemical parameters involved in the model . in addition, each parameter point has an associated value of a cost function

  e:Θd→ℝ+, 

that reflects how well a model produces a behavior under consideration. for a given θ, the lower the value of e the better the model behaves.

a parameter point θ is viable if it fulfills the condition

  e<e <dig> e0> <dig>  

that is, if the cost function does not exceed some positive threshold e <dig>  for example, θ may imply a system behavior that allows an organism to survive or reproduce. the subset of parameter points θ ∈ Θd for which  holds comprises the viable space  <cit> .

out-of-equilibrium adaptive monte carlo sampling
we next describe our coarse-grained, global exploration of the viable space via an out-of-equilibrium adaptive metropolis monte carlo sampling  .

the metropolis algorithm was initially introduced to analyse thermodynamic systems  <cit> . however, it can also be applied to systems like those we study here. to do so, one must identify the parameter space Θd and the cost function e with a state space and with the energy of a thermodynamic system, respectively  <cit> . moreover a parameter β has to be introduced in order to mimic the inverse of the temperature. this parallelism has been widely used in simulated annealing  <cit>  and metropolis monte carlo sampling  <cit> .

this analogy allows us to use an adaptive selection probability with covariance matrix ∑

  g=1dΣexp-12θ-θiΣ-1θ-θi′, 

in order to propose the transitions between parameter points, and metropolis adaptive acceptance ratios

  a=exp-βe-e,ife-e> <dig> ,otherwise, 

to accept or not those transitions.

given β and ∑, the exploration starts from a known viable parameter point θ <dig>  then, from the current θ <dig> a new θ is constructed by sampling the distribution  centred on θ <dig>  if e < e, the new θ is automatically accepted and becomes θ <dig>  in contrast, if e > e, θ is accepted with a probability exp , in which case it becomes θ <dig>  if θ is rejected, then θ <dig> = θ <dig>  this scheme is repeated for a predefined number of iterations n.

after n iterations the algorithm determines whether oeamc sampling must stop. to do so, the viable parameter points found so far are divided into a predefined number of clusters. then, oeamc calculates the ellipsoids with minimum volume that enclose the points in each cluster and computes the sum of all ellipsoids volumes. the algorithm stops when the volume of all ellipsoids converges or when a maximum number of iterations is reached. if either of these criteria are met, oeamc sampling terminates. otherwise, n more iterations are carried out after updating β and ∑ according to

  β=bβ,iffv= <dig> β,if0<fv≤f <dig> β∕b,iffv>f <dig> Σ=sΣ,iffa>fuΣ,iffl<fa≤fu,Σ∕s,iffa<fl, 

where fv and fa are the proportions of sampled viable parameter points and accepted transitions calculated over the last n iterations, respectively. the parameters b, s are larger than one and must be specified by the user. equation  implies the following procedure. when monte carlo sampling is mainly confined to a viable region , β decreases and the frequency of accepted transitions increases. if this makes the frequency of accepted transitions larger than an upper limit , the covariance matrix ∑ will become larger and the method will sample broader regions. in contrast, when the method has not found any viable parameter point , β increases and the frequency of accepted transitions decreases in order to force the algorithm to sample regions with lower cost function. if this frequency falls below a lower limit , ∑ decreases to maintain the desired frequency of accepted transitions. the end product of oeamc is the set vmc of all the viable parameter points that it found.

several differences of oeamc to existing approaches are worth noting. first, oeamc does not increase β continuously from values near zero to values much larger than the maximum of the cost function, as in simulated annealing . furthermore, oeamc does not utilize β as an "extra" stochastic parameter, an idea used in tempering approaches . in addition, it does not diminish the adaptation of ∑ over time, as equilibrium adaptive monte carlo sampling does . in contrast, oeamc automatically adapts both β and ∑ during the whole sampling in order to obtain high and low frequencies of accepted transitions and viable parameter points, respectively. the objective of oeamc is not to find a point close to the global optimum of the cost function, as in the case of simulated annealing, or to obtain a markov chain with a specified equilibrium distribution, as in the case of equilibrium adaptive monte carlo sampling or simulated tempering. instead, it aims to acquire a  sample of parameter points distributed all over the viable space.

multiple ellipsoid-based sampling
the oeamc samples the viable space at low resolution. thus, it is necessary to introduce a method that uses the viable points already found by oeamc to explore the viable space in detail. a novel method we call multiple ellipsoid based sampling   carries out this fine-grained exploration of the viable space.

the use of an ellipsoid to bound viable regions in search spaces has been known for decades . however, nonconvex viable regions are not accurately bounded by a single ellipsoid  <cit> . the problem is specially difficult in high dimensional spaces, where the "curse of dimensionality" forces the volume of the bounding ellipsoid to be much larger than the volume of the nonconvex bounded object of interest. the probability of "hitting" this object by sampling uniformly inside a bounding ellipsoid becomes negligible as the number of dimensions increases. to overcome this problem, mebs iteratively constructs ellipsoids that start firstly from viable points already found by oeamc, and then also by points found by mebs. these ellipsoids change their centres and orientations in order to enclose multiple nearly convex viable regions and to cover the whole viable space as tightly as possible.

the j-th ellipsoid expansion starts by selecting a viable parameter point θv,j in an adaptive way . in the first ellipsoid expansions the starting point will typically be a viable point obtained from oeamc. this point defines 2d  viable parameter points that are placed near the intersection between the boundary of the viable region and the straight lines parallel to the axes of the cartesian coordinate system that pass through θv,j . then mebs constructs an ellipsoid lji. if i =  <dig>  lj <dig> is the minimum volume ellipsoid that encloses the 2d viable points near the boundary of the viable space. if i ≠  <dig>  lji is the minimum volume ellipsoid that encloses the set of viable points vji which comprises the viable points found after the iteration i of the j-th ellipsoid expansion. from this ellipsoid lji, the mebs creates a new ellipsoid sji that has the same orientation as lji, but the lengths of its axes are multiplied by a scaling parameter gi. then the algorithm uniformly samples a predefined number of parameter points n from this ellipsoid sji. the union of the set of viable points in sji with vji then gives vji+ <dig> 

the selection of the scaling parameter gi is critical for the performance of the algorithm. we define it as:

  gi=g0< <dig> ifi=0g1> <dig> ifi= <dig> gi-1+gi-1-1p,ifvji-vji-1>nbu,i> <dig> gi-1-gi-1-1p,ifvji-vji-1<nbl,i> <dig> gi- <dig> otherwise. 

where vji indicates the number of elements in the set and bl, bu, and p < <dig> are parameters for lower and upper bounds, and for axis scaling, respectively.

the rationale behind equation  is as follows: points in lj <dig> lie near the boundary of the viable space. in high dimensional spaces the "curse of dimensionality" may cause a large proportion of this ellipsoid volume to be filled by nonviable points. setting g <dig> < <dig> forces sj <dig> to be smaller than lj <dig>  this makes it more likely that sj <dig> contains a larger proportion of viable parameter points, which will lead to a larger set vj <dig>  to explore a larger elliptic region around θv,j, the method then performs a second iteration with g <dig> > <dig>  all subsequent iterations depend on the number of viable points found in the last iteration vji-vji- <dig>  
specifically, when this number is larger than some upper limit nbu, the scaling parameter grows by a factor 1/p > <dig> to explore larger domains of parameter space. when the difference vji-vji- <dig> is below some lower limit nbl - only few additional viable points have been found in the last iteration - shrinking the axes allows an efficient exploration of smaller regions. thus, viable parameter points found in previous iterations guide and define the ellipsoid where the next sampling is carried out.

the j-th ellipsoid expansion started from θv,j finishes when gi converges to one or after a fixed number of iterations is reached. the output is ve,j, a set of sampled viable points that contains the 2d viable parameter points found near the boundary of the viable space, and the set of viable parameter vectors vji updated in the last iteration.

then, the mebs initiates a j+1-th ellipsoid expansion. the new initial point θv,j+ <dig>  is chosen from the set composed by vmc and the union of ve,k, k =  <dig> ... j, that is, the set of viable points obtained after oeamc exploration and previous ellipsoid expansions, respectively. to explore regions that have not yet been sampled, we preferentially select a θv,j+ <dig> that is far away from the average of all previous starting points θv,k, k =  <dig> ... j .

at the end of each ellipsoid expansion, the algorithm determines if mebs should stop. to do so, the viable parameter points found so far {vmc, ve, <dig>  ve, <dig> ..., ve,j, ve,j+1} are divided into a predefined number of clusters. then, mebs calculates the ellipsoids with minimum volume that enclose the points grouped in each cluster and computes the sum of all ellipsoids volumes. the algorithm stops when the sum of the volume of all ellipsoids converges, or when a maximum number of ellipsoid expansions is reached. the final result of mebs is the set of viable parameter points {vmc, ve, <dig>  ve, <dig>  ..., ve,j, ve,j+1}.

volume computation and acquisition of a large set of uniformly distributed viable parameter points
the end result of oeamc and mebs is a set of viable parameter points that can be used for a variety of purposes. specifically, this set allows us to obtain simultaneously a large set of uniformly distributed viable points and an estimate of the viable volume volv. .

to calculate volv we must evaluate the integral

  volv= ∫ Θdfdθ,f= <dig> ife<e <dig> ,ife≥e <dig>  

given n parameter points uniformly sampled in Θd, the monte carlo integration theorem  <cit>  implies that the volume  can be estimated by

  volv= ∫ Θdfdθ≃volΘd⟨f⟩,⟨f⟩=1n∑i=1nf, 

where volΘd is the volume of the entire parameter space. if the error is gaussian distributed, the standard deviation of the volume estimator is given by

  Δvolv=volΘd⟨f2⟩-⟨f⟩2n,⟨f2⟩=1n∑i=1nf <dig>  

thus, if a high proportion of the n sampled parameter points is viable, the monte carlo integration in Θd will estimate the viable volume accurately.

this approach is usually sufficient to carry out viable volume estimations in low-dimensional spaces  <cit> . however, the "curse of dimensionality" poses a specific problem when this technique is applied to high-dimensional parameter spaces. to calculate the viable volume  and to obtain a large set of uniformly distributed viable parameters efficiently, one cannot simply sample over the entire parameter space, because doing so would be too inefficient. it would be much better to perform a uniform sampling over a subspace w ∈ Θd that encloses the viable space as "tightly" as possible. this subspace will typically be much smaller than the entire space .

to construct such a subspace , we build on the ideas already present in the algorithm developed by hafner et al.  <cit> . the first step consists of using the set of viable parameter points vt that comprises the viable points already found by oeamv and mebs . to make volv and volw as similar as possible, hafner's method encloses the set of viable parameter points vt into a single box with a smaller volume than the entire space. however, in many dimensions the volume of a nonconvex viable space may be much smaller than the volume of its enclosing box. to overcome this limitation we define the subspace w via a family of ellipsoids that cover the viable space locally . to determine these ellipsoids we group the set of viable parameter points vt into k clusters, and compute the ellipsoid with minimum volume that encloses the viable points grouped in every cluster .

in this procedure, the subspace w is composed of the points of the parameter space enclosed by the k ellipsoids

  w=θ∈Θdθ∈⋃wii= <dig> ,…,k, 

where wi is the region of the parameter space enclosed by the i-th ellipsoid. in general, the k ellipsoids may intersect, so the viable volume in w may be smaller than the sum of the viable volumes in wi. to avoid the resulting inaccuracy in volume estimation, we introduce a new integrand

  fi= <dig> ifθ∈⋃wj,j= <dig> ,…,i- <dig> ,ifθ∉Θd,f,otherwise. 

this integrand evaluates the parameter points in the ellipsoid intersections only once. therefore, by sampling n parameter points points uniformly from w  and by using , we can estimate the viable volume  as

  volv≃∫ wfdθ= ∑i=1k∫ wifidθ≃∑i=1kvolwi⟨fi⟩,∑i=1kmi=n, 

where mi is the number of parameter vectors sampled inside wi.

this approach of covering the viable region with ellipsoids can reduce the sampling volume dramatically, and thus increase the proportion of viable parameter points sampled in w far beyond that in the entire space Θd. this means that the viable volume can be calculated more accurately, and larger sets of viable parameter points can be sampled uniformly.

we caution that in practice, one can never be certain that the whole viable space is contained in the integration domain w that our approach  determines. the agreement between the actual viable volume from expression  and the estimated viable volume  depends on the proportion of the viable volume that is enclosed in w. the subspace w is defined by the set of viable parameter points vt found by oeamc and mebs; therefore, the success of the volume estimation hinges on whether the previous exploration of parameter space found many viable points throughout the viable space. an implementation of our algorithm in matlab is available as the package hyperspace from http://www.ieu.uzh.ch/wagner/software and http://www.csb.ethz.ch/tools/index.

RESULTS
a two-step algorithm for sampling of parameter spaces
the algorithm we propose starts from the definition of a viability condition and of a cost function . depending on the biological model considered, the viability condition may include stability of a specific steady state, bistability  <cit> , oscillations whose period lies in a given interval  <cit> , the production of specific gene expression patterns  <cit> , and many others. the cost function measures how closely the model's behavior matches the viability condition.

the first step of the algorithm consists of a global coarse-grained exploration of the viable space by an out-of-equilibrium adaptive monte carlo  sampling of the entire parameter space . following a thermodynamic analogy used by simulated annealing  <cit>  and metropolis monte carlo sampling  <cit> , we identify the parameter space and the cost function with the state space and the energy, respectively, of a thermodynamic system that is in contact with a thermal bath with variable temperature. the objective of oeamc is to identify viable regions in the parameter space by adjusting the "temperature" and the length of the jumps through the parameter space. briefly, oeamc adapts the "temperature" and jump lengths to force a finite but small frequency of sampled viable parameter points, and a high proportion of accepted transitions to new parameter points. this helps oeamc not to "get lost" in the parameter space, but at the same time lets it "travel" through nonviable regions where the cost function may have moderately high values. thus, this procedure allows oeamc to visit and sample from regions of the viable space that may be poorly connected to each other.

the low frequency of sampled viable parameter points forces oeamc to explore the viable space at low resolution. to characterize the viable space in greater detail, it is necessary to define its borders more precisely, and to gain insight into its local geometry. in a second step, we therefore carry out a fine-grained exploration of the viable regions already identified through oeamc, using a technique we call multiple ellipsoid-based sampling  . this technique performs a local exploration of the parameter space by sampling from ellipsoids  that change their centres and expand or shrink their axes to enclose different regions of the viable space in which viable points are found. to cover locally nonconvex and/or poorly connected viable spaces, different ellipsoid expansions start from parameter points far away from each other .

the end result of oeamc and mebs is a set of viable parameter points that can be used for a variety of purposes. one of them is to define the integration domain in which a monte carlo integration estimates the volume of the viable space. . we define this domain as the union of multiple ellipsoids - different from those used in mebs sampling - that are constructed by grouping the viable parameter points into clusters, and by determining the ellipsoid with minimum volume that encloses the viable points in each of the clusters . this integration domain thus designed can cover nonconvex and high dimensional viable spaces "tightly". that is, the proportion of viable parameter points in this new integration domain is much higher than in the whole parameter space. by sampling viable points uniformly within this domain, we can compute the volume of a viable space. we reasoned that our procedure would allow us to reduce the computational effort in estimating a viable volume substantially. we will show in the next section that this is indeed the case. more generally, the large set of uniformly distributed viable parameter points that our method can generate permits us to characterize not only the size, but also the topology of a viable space. it also allows us to connect the robustness of a biological system to the geometrical properties of its viable space. furthermore, this large set of viable parameters opens the possibility for a "glocal" analysis  <cit> , in which the global characterization is supplemented by a local analysis around every viable parameter point. thus, our algorithm can be used together with a local robustness measurement  to get insight into the distribution of a model's robustness in a viable space.

efficient sampling of high-dimensional spaces
in a first test problem, we estimated the volume of a nonconvex region defined by either one single or two tangent multidimensional spherical shells . we chose this study system to analyze the efficiency of our method as a function of the geometry and dimension of a viable space, because here the viable volume can be calculated analytically.

we define the parameter space as Θd = Θ <dig> × Θ <dig> × ⋯ × Θd, where Θi = , i =  <dig>   <dig>  ..., d. the cost function and the viability condition are given by

  en=minj||θ-cj||-re+ri <dig> en≤re-ri <dig> j= <dig> ,…,n,||cj-cj-1||=2re, 

where cj is a point in Θd and re and ri are two scalars that fulfill re > ri .

when n =  <dig> , the lines of constant cost are multidimensional spheres centred on c <dig> . the  global minimum of the cost function occurs in the multidimensional sphere centred on c, and with radius re+ri <dig> . the viability condition is fulfilled by the parameter points that lie in the region enclosed by two multidimensional spheres with centre c and radii ri and re, respectively.

for n =  <dig> , the cost function has its degenerate global minimum in two multidimensional spheres centered on c <dig> and c <dig>  respectively, with radius re+ri <dig> ; the viable parameter points lie in the inner region of two tangent multidimensional spherical shells with internal radii ri, external radii re and centers c <dig> and c <dig>  respectively.

the volume filled by the viable region can be computed analytically as:

  volv,t=ncdred-rid,cd= <dig> ifd= <dig> ,ifd= <dig> πdcd- <dig> otherwise, 

where cd is the volume of a d - dimensional hypersphere with radius  <dig> 

we now compare the performance of  mebs and oeamc alone,  both of them together,  uniform sampling, and  the method proposed by hafner et al.  <cit>  based on gaussian sampling . for the single spherical shell test case, mebs and oeamc alone, and the combination of both methods can identify the viable regions and obtain a good estimate of the viable volumes for dimensions up to d =  <dig> . specifically, for all dimensions we studied they sample more than  <dig> per cent of the whole viable volume before converging. in addition, for this test case mebs alone is much more efficient than oeamc or a combination of both . specifically, mebs converges after sampling substantially fewer parameter points, because the frequency of viable points sampled by oeamc is comparatively small, and oeamc thus needs more sampling to estimate the viable volume to a given accuracy. for example, to achieve the same accuracy of volume estimation in d =  <dig> dimensions, mebs uses 3-fold less samples than the oeamc, and 2-fold less samples than the combination of both methods. in this first test case, the viable space, albeit nonconvex, is well-connected. this permits a ready exploration of the space by ellipsoid expansions - efficient "travel" of ellipsoids inside the viable volume is possible.

mebs, oeamc, and their combination are much more efficient than uniform sampling of the parameter space. for instance, at d =  <dig> dimensions, "brute force" sampling uses  <dig> orders of magnitude more sampling points to estimate the viable volume .

the gaussian sampling carried out by hafner's method et al. does not permit to identify in detail the borders of the viable volume for high dimensional spaces. therefore, this technique can not estimate viable volumes in high dimensional spaces with precision . moreover, in high dimensional spaces the tiny proportion of the whole parameter space filled by the viable volume forces this technique to sample a large number of viable points before converging . for example in d =  <dig> dimensions, hafner's method uses 4-fold more samples than mebs and underestimates the viable volume by  <dig> percent. 

for the test case of two tangent spherical shells, mebs and hafner's method often fail to "find" half of the viable volume in high dimensions . for example, in  <dig> dimensions, only  <dig> percent of the explorations carried out by mebs and hafner's method find both shells. the two methods share the same limitation: the inability of sampling a point from the second shell, when starting from a random parameter point in the first shell. to find the second shell starting from the first shell, mebs and hafner's method must sample from an ellipsoid or from a gaussian distribution, respectively, both of which must cover viable regions from both shells. however, both also include nonviable parameter points. in high dimensions the fraction of viable points becomes very small, and the probability of finding a viable point from the second shell is very low.

in contrast, oeamc alone, and the combination of both oeamc and mebs sample the viable regions well . specifically, for up to d =  <dig> dimensions, they estimate the viable volume with an error smaller than a  <dig> percent. importantly, the combination of both oeamc and mebs is more efficient than oeamc alone . for instance, to achieve the same accuracy of volume estimation in d =  <dig> dimensions, the combination of mebs and oeamc used approximately 2-fold smaller samples than the oeamc alone .

the key for the success of the combination of oeamc and mebs is the complementary nature of their individual strengths. oeamc does not need many sampled points to find two poorly connected regions. for example, in our two shell test case, it always hit both shells before sampling  <dig> parameter in d =  <dig> dimensions. however, its low frequency of sampled viable points forces it to sample excessively many parameter points in order to explore a viable region in detail. in contrast, the bottleneck for the mebs procedure is the discovery of a viable region - the second spherical shell in our example - that is poorly connected to a region that it already explored. once such a region has been discovered by oeamc, mebs is able to sample from it efficiently, even if the region is nonconvex.

in sum, the combination of oeamc and mebs explores nonconvex and poorly connected viable regions in high dimensional parameter spaces more efficiently and accurately than either method alone and than other methods we evaluated. in addition, for both test cases the number of parameter points sampled by the combination of oeamc and mebs scales linearly with the number of dimensions . this suggests that for a given fixed complexity of the viable space, the computational effort needed by our method scales linearly with the dimensionality of the parameter space. this property makes our method suitable to explore high dimensional viable spaces.

model of a biochemical oscillator with two feedback loops
the viable space of a realistic model of a biological system is in general unknown. therefore, it is necessary to get an estimate of the viable volume through uniform sampling in order to check the performance of our method. however, complex models may have tiny and complex viable spaces that make it infeasible to get such an estimate. this hampers the use of biological models with realistic complexity to characterize our algorithm. to illustrate the application of our method and to check its performance with a biological model, we therefore used a very simplified biological model containing only  <dig> parameters that permits us to compare the results of our method with the uniform sampling of the parameter space.

this model describes a biochemical oscillator introduced by hafner et al.  <cit> . it mimics the basic architecture of biological oscillators, such as cardiac pacemaker cells  <cit> , intracellular calcium oscillations  <cit> , cell cycle  <cit> , and circadian clocks  <cit> . the model comprises two feedback loops  and it contains  <dig> individual parameters and  <dig> state variables which correspond to the concentrations of different proteins. briefly, in this model a protein r is expressed, phosphorylated and degraded. protein r can also auto-phosphorylate. in the positive feedback loop, the phosphorylated form rp acts as a kinase for protein z whose active state zp increases the auto-phosphorylation rate of r. this kind of positive loop is a basic mechanism behind substrate-depletion oscillators. an example is the maturation promoting factor  oscillator involved in the cell division cycle of frog eggs  <cit> . the negative feedback loop is composed of three steps: rp acts as kinase for an intermediate protein x. its phosphorylated form xp phosphorylates a second protein y, whose phosphorylated state yp increases the degradation rate of r. such negative feedback has been proposed as a basis for oscillations in many biological systems .

the dynamics of the concentrations of the proteins r and rp follow mass action kinetics  <cit> 

  =k˜1−p,=p−n, 

where p  and n  respectively, reflect the effects of a positive and a negative feedbacks loops

  pzp=k˜2+k˜11zp,nyp=k˜3+k˜12yp. 

in contrast, the concentrations of xp, yp, and zp are governed by michaelis-menten kinetics  <cit> 

  Ẋp=k˜4rp-k˜10+--k˜5k˜10+,=k˜6xp-k˜10+--k˜7k˜10+,=k˜8rp-k˜10+--k˜9k˜10+, 

where , , and  denote the total concentration of x, y, and z, respectively. for the sake of simplicity, we normalize all concentrations to one, i.e.,  =  =  =  <dig> 

the combination of active positive and negative feedback loops creates oscillators with a tunable frequency, and a robust amplitude  <cit> . these features make the negative plus positive loop oscillator suitable for systems like beating hearts and cell cycles. here, we focused on oscillations in a narrow range of frequencies such as those produced by circadian clocks, and used the model to study the robustness of the oscillation period to parameter variations.

to explore broad ranges of parameters values we work in a logarithmic domain in which the logarithm of individual parameters are constrained as follows

  ki= log,ki∈,i= <dig> ,…, <dig> ki∈,i= <dig> . 

together, these ranges define the 12-dimensional parameter space Θ <dig> = k <dig> × k <dig> × ⋯ × k <dig>  we use the cost function

  em= <dig> ifrposcillates,∞,otherwise, 

where trp is the period of the oscillations of rp for a parameter point θ = . the minimum of this cost function is attained by parameter vectors for which trp= <dig> 

finally, we introduced the viability condition

  em≤ <dig>  

meaning that a parameter point θ is viable if it causes rp to oscillate with a period in the narrow interval .

to explore the viable space we carried out an oeamc sampling followed by a mebs. the viable parameter points obtained during this exploration are shown in figure  <dig>  which displays the 12-dimensional parameter space through six two-dimensional projections. the blue and red points, acquired by mebs and oeamc, respectively, occur in similar regions of the parameter space. this shows that the mebs explored in detail the viable regions previously visited by oeamc, just as for our spherical shells test case. the combination of oeamc and mebs revealed the nonconvexity of the viable space and its implications for the model function. specifically, we note the viable region in figure 8-f, which is composed of two approximately rectangular or bar-like regions that, together, form a nonconvex shape resembling an inverted l. parts of these regions define topologies in which a single feedback loop produces the oscillations. more precisely, the left part of the horizontal bar corresponds to viable parameter points for which k <dig> is large and k <dig> small. in this region, only the negative feedback loop is active. conversely, the bottom part of the vertical bar consists of viable parameter points for which k <dig> is small and k <dig> high. it corresponds to architectures where only the positive feedback loop is active .

in a next step, we performed a monte carlo integration  to estimate the viable volume. the integration domain is defined by using the viable points obtained by the oeamc and mebs explorations. this domain is approximately 630-times smaller than the whole parameter space. after uniformly sampling over the integration domain we obtained  <dig> viable points, and estimated a viable volume of volv =  <dig>  ·  <dig> ±  <dig> ·  <dig>  to validate this estimate, we uniformly sampled over the whole parameter space with the same number of points we used in the oeamc, mebs, and integration parts of our algorithm. only  <dig> of these points were viable, leading to a viable volume estimate of volv =  <dig>  ·  <dig> ±  <dig>  ·  <dig>  the two estimates are very similar, but the estimation obtained through uniform sampling has an uncertainty one order of magnitude larger than the one calculated through our method. in addition, we uniformly sampled  <dig> ·  <dig> points from the whole parameter space to compare the distributions of every single viable parameter. the results showed that the distributions of each of the  <dig> parameters obtained through our method and the extensive brute force sampling are very similar .

in sum, our method yields an accurate characterization of the viable space for this complex twelve-dimensional system at much higher efficiency than brute-force approaches. specifically, by using the same number of sampling points it carries out a  <dig> times more accurate estimation of the viable volume, and obtains  <dig> times more uniformly distributed viable points.

robustness of positive and negative feedback loops
the sample of the viable space we obtained suggests a clear distinction between two oscillatory regimes, one driven by a positive and the other driven by a negative feedback loops. we next discuss these regimes, as an illustration of the type of analyses that our method enables.

the many viable parameter points we found allowed us to characterize key properties of model architectures with individual or combined feedback loops via the geometry of the viable space. for this purpose, we classified each of the viable points into one of the following categories:

• essential negative feedback loop: the model keeps fulfiling the viability condition  after removing the positive loop, or after substituting this loop with a higher activation rate of rp .

• essential positive feedback loop: the model keeps fulfiling the viability condition  after removing the negative loop or substituting this loop with a higher degradation rate of rp .

• essential positive and negative feedback loops: no loop can be removed or substituted by a higher activation or degradation rate without violating the viability condition .

we found that model architectures for which the negative feedback loop is essential occupy the vast majority  of the viable space we sampled. in contrast, significantly fewer parameter combinations lead to viable oscillations based on an essential positive loop , or on a combination of essential positive and negative feedback loops .

if a single loop is essential, the parameters mainly responsible for this loop will be constrained. these are parameters k <dig>  k <dig>  k <dig> for the positive loop, and parameters k <dig>  k <dig>  k <dig>  k <dig>  k <dig> for the negative loop . figures 9-a and 9b illustrate these constraints. for example, in figure 9-a, black coloring indicates to what extent parameters involved in the negative loop are constrained if this loop is essential, blue coloring indicates these constraints if only the positive loop is essential, and green coloring indicates these constraints if both loops are essential. clearly, parameters involved in the negative loop can vary to a lesser extent if this loop is essential than when it is not essential. analogous observations can be made for parameters involved in the positive loop .

a comparison of figures 9-a and 9b also shows that parameters involved in the negative and positive feedback loops are constrained to different extents. specifically, negative loop parameters can vary over broader intervals when the negative loop is essential than positive loop parameters can when this loop is essential. in addition, the parameters that do not form part of any loop  are more constrained in architectures with essential positive feedback loop than in topologies with an essential negative feedback loop .

taken together, these observations imply that model architectures based on a negative loop fill more of the viable space, and allow individual parameters to vary more broadly than architectures based on positive feedback loops. in other words, model topologies based on an essential negative feedback loop are more robust than topologies with essential positive loops, or topologies with both essential positive and negative loops.

to further explore this aspect of robustness, we used the method proposed by dayarian et al.  <cit>  which estimates the number of steps that a random walk needs to escape from the viable space. briefly, we started ten random walks from every viable parameter point. each new point in a random walk was selected from an independent gaussian distribution centred on the previous parameter point and with a diagonal covariance matrix with standard deviations σ =  <dig> . we followed every random walk until it arrived at a nonviable parameter point, and recorded the number of steps it had taken to reach this nonviable point. we used this number of steps as an indicator of local robustness around such parameter point. the mean number of steps before exiting the viable region was higher if the starting point corresponded to an architecture with a negative loop than to an architecture with an essential positive loop, or to a combination of essential positive and negative loops . moreover, the distribution of the number of steps for the negative feedback architectures has a long tail . specifically, two times more steps may be needed to leave the viable space than for the other two architectures . hence, also in terms of local properties revealed by this approach, architectures with an essential negative feedback loop are significantly more robust than other topologies.

in addition, we found that adding a positive  loop to a model architecture based on a negative feedback loop further increases robustness and the allowable range of parameter variation. figure 11-a already hints at this observation, because it shows that the largest density of viable parameter points occurs in regions of parameter space where both k <dig> and k <dig> are high. these parameters are important for the positive and negative feedback loops, respectively. in regions with the most viable parameter points both feedback loops are active and at least one of these loops is essential.

further analysis corroborates this observation. in architectures with an essential negative feedback loop, the mean value of the parameter k <dig>  which controls the strength of the positive feedback loop, is significantly higher  than the centre of the interval in which k <dig> is defined. in other words, the randomly sampled architectures with an essential negative feedback loop preferentially occur in regions of parameter space where a positive loop is also active. moreover, the density of viable parameter points increases with the value of the parameter k <dig> . thus, a higher strength of the positive feedback loop increases the number of parameter combinations that gives rise to viable oscillations.

taken together, these observations suggest that an added nonessential positive feedback loop gives a negative-loop-based model oscillator access to more viable parameter points. in the additional file  <dig> we perform a similar analysis with a more complex model of a mammalian circadian oscillator. for this more realistic model we also observe that the circadian oscillations can be generated by a single negative feedback loop, whereas an additional positive feedback loop increases the robustness of the oscillations.

connectivity of the viable space
the connectivity of the viable space indicates to what extent different model architectures with the same behavior can change into one another through small changes in individual parameters, as might occur on evolutionary time scales.

to study this connectivity, we chose a set of viable points in which each of the three basic model architectures we consider are represented. for every pair of parameter points, we defined a straight line connecting them, and identified a set of three points that subdivide the line into four equally long segments . we then asked whether each of these points was located in the viable space. if so, it may be possible to connect the two parameter points by a straight line that lies entirely in the viable space. based on this information, we defined a graph whose nodes are the set viable parameter points. two nodes are connected by an edge if the entire straight line between the nodes does not leave the viable space. such an edge reflects the existence of potential evolutionary paths from one to the other node  that does not leave the viable space. we find that this graph has one large connected component that comprises  <dig> percent of all nodes. this observation, together with our earlier analysis  shows that most of the viable space forms a nonconvex connected body with possible evolutionary trajectories that maintain the same behaviour and that connect qualitatively different system topologies through small changes in individual parameters.

the connected component contains nodes associated with all three basic architectures, but these three kinds of nodes are not equally likely to be connected to each other. specifically, nodes  corresponding to model topologies with essential negative feedback loops are only connected to themselves, and to nodes with essential positive and negative feedback loops. similarly, nodes that define topologies with essential positive feedback loops are only connected to themselves and to nodes with essential positive and negative feedback loops. potential evolutionary trajectories that connect model architectures based on essential positive feedback loop and essential negative feedback loop, need to pass through configurations for which both loops are essential.

overall, the global geometry of the viable space shows that model topologies based on an essential negative feedback loop are more robust than other architectures. essential negative feedback allows the individual parameters to span larger intervals than essential positive feedback. moreover, our local analysis reveals that topologies based on an essential negative feedback loop sustain the most change before losing viability. successive small parameter changes can transform oscillators with an essential positive feedback loop into oscillators with an essential negative feedback loop, or vice versa. to do so, requires an intermediary stage in which both loops are essential.

CONCLUSIONS
in biological systems, the diversity of biochemical parameter values that can lead to similar behavior makes it useful to introduce the concept of a viable space in which a biological system maintains a given function. the algorithm we present here allows an efficient exploration and characterization of such a viable space in systems with many parameters. it involves a global coarse grained identification of viable regions, followed by detailed local explorations of these regions. the global part of our algorithm can find viable regions that may be poorly connected. in the local part, the viable regions discovered in the global part are explored in detail. the exploration of the viable space allows us to identify a  subspace of the whole parameter space in which the proportion of viable parameter points is much higher than in the whole space. knowledge of this subspace can dramatically reduce the number of samples needed to characterize the viable space. it also permits us to acquire a large number of uniformly distributed viable parameter points. the advantages of our method are especially dramatic in high-dimensional parameter spaces. it allows us to explore high dimensional nonconvex and poorly connected viable regions more efficiently and accurately than iterative gaussian sampling  <cit>  or uniform sampling of the entire parameter space  <cit> . moreover, in the test problems we studied, the number of sampled parameters necessary to estimate the volume of the viable space to a given accuracy scales exponentially with the number of dimensions for gaussian and uniform sampling, whereas it scales linearly for our algorithm. this suggests that for a given fixed complexity of the viable space, the computational effort of our method scales linearly with the dimensionality of the parameter space. this allows our method to explore high dimensional viable spaces efficiently.

an intrinsic limitation of our approach is imposed by the potential increase of the viable space's geometric complexity, when the dimension of the parameter space also increases. that is, increasing the dimensionality may cause the emergence of more poorly connected viable regions, which can exponentially increase the minimum number of iterations needed to identify all poorly connected viable regions and to sample them thoroughly. a second potential limitation concerns the identification of unconnected viable regions that are far from each other. the finite sampling frequency of viable parameter points required in the global exploration prevents one from "getting lost" in high dimensional spaces, but it may not allow the algorithm to travel across the wide nonviable region that may separates two viable regions far from each other. a third limitation includes that values for the parameters involved in the global and local explorations steps need to be chosen judiciously. these parameters include the maximum frequency of sampled viable points, bounds for the frequency of accepted iterations, and scaling factors for ellipsoid expansions.

efficient sampling of the viable space allows one to accurately estimate the viable volume to assess model robustness, to study the topology of the viable space, and to carry out a "glocal" analysis  <cit> , in which the global characterization of the viable space is supplemented by a local analysis. to illustrate how our method enables insights into the working of a biological system, we studied simple model of a biochemical oscillator with positive and negative feedback loops that involves  <dig> parameters  <cit> . we focused our attention on oscillations in a narrow range of frequencies such as those produced by circadian clocks, and used the model to study the robustness of the oscillation period to parameter variations. when characterizing the viable space composed by parameters for which the model oscillates in a narrow period interval, our method was  <dig> times more accurate in estimating the viable volume than uniform brute-force sampling. in addition, it obtained  <dig> times more uniformly distributed viable points.

we showed that the viable space of this oscillator forms a nonconvex connected body in which three classes of parameter points exist. they correspond to model architectures where the negative feedback loop, the positive feedback loop, or both loops are essential for fixed period oscillations. we also found that topologies with an essential negative feedback loop provide more robust fixed period oscillations than those based on an essential positive loop. moreover, the addition of a nonessential positive feedback loop to a model with an essential negative feedback loop increases the number of parameter combinations that give rise to viable oscillations, and it therefore increases the robustness of fixed period oscillations. in spite of the model's simplicity, these results are consistent with well known structural properties of circadian oscillators: they typically rely on positive and negative feedback loops  <cit> , the negative feedback alone is sufficient for fixed period oscillations  <cit> , and the positive feedback loop increases the robustness of the oscillations to parameter changes  <cit> . these results reinforce the use of robustness as a tool for model discrimination  <cit> . specifically, we observed that among the three model architectures that permit viable oscillations, the basic topology of circadian oscillators in nature coincides with the most robust one formed by an essential negative feedback loop and a non essential positive feedback loop. 

in summary, we have introduced an efficient algorithm that explores and characterizes the often tiny regions of a parameter space in which a model displays a desired behavior. we have applied our method to a biological model, but it is not restricted to such systems. it is suitable for all models with many parameters whose values are not well constrained by experimental data. its spectrum of applications ranges from systems biology  <cit>  all the way down to atomic physics  <cit> .

an implementation of our algorithm in matlab is available as the package hyperspace from http://www.ieu.uzh.ch/wagner/software and http://www.csb.ethz.ch/tools/index.

authors' contributions
project planing: ezs, js, aw. development of the theory: ezs. conceived and designed the experiments: ezs, mh, js, aw. performed the experiments: ezs. analyzed the data: ezs, mh, js, aw. contributed reagents/materials/analysis tools: ezs, mh, ai. creation of the figures: ezs, mh. wrote the paper: ezs, js, aw. all authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary information for "efficient characterization of high-dimensional parameter spaces for systems biology". this document shows additional technical information about: • the calculation of minimum volume enclosing ellipsoids involved in oeamc, mebs, and the construction of the integration domain. • the determination of the number of clusters involved in the construction of the integration domain. • the acquisition of viable parameter points near the boundary of the viable space involved in the mebs. • the choice of starting points for new ellipsoid expansions involved in mebs. • the exploration and volume calculation of spherical shells. • the exploration exploration and volume calculation the viable space associated to biochemical oscillator model. • characterization of the viable space of a model of the mammalian circadian oscillator with two feedback loops.

click here for file

 acknowledgements
we would like to acknowledge support through snf grants 315200- <dig>  315200- <dig>  and 315230- <dig>  as well as through the yeastx project of systemsx.ch. ezs wants to thank eric hayden, karthik raman, and adrian lopez garcia de lomana for a careful reading of the manuscript and revealing discussions.
