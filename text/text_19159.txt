BACKGROUND
with the availability of the so-called next generation sequencing , relatively cheap high-throughput short molecule sequencing technologies such as illumina ga and abi solid, and medium length sequencing technologies such as roche  <dig> is giving non-specialist laboratories the ability to sequence large genomes. however, the large number of reads produced by these ngs technologies creates problems for the utilisation of the sequence data. in the last few years a number of new programs for the alignment of short reads, for example in the range 30- <dig> bases, have been described, these include maq  <cit> , soap  <cit>  and bowtie  <cit> . in general, these programs are designed for resequencing projects, where few nucleotide sequence differences are expected between the sequence reads and the reference genome.

however, many projects are likely to be low coverage skims of previously unsequenced genomes  <cit>  possibly combining identification of snps with a survey of the genome sequence. the optimal design of snp chips and effective utilisation of the chips in whole genome association analyses requires the relative order of and the distance between the snps and their association with genes to be known. obtaining this information is likely to rely on comparative genomics by utilising the assemblies of related genomes to order and orientate sequence reads and contigs. the assembly of the cat genome based on sanger sequencing used such a process to build an assembly from a  <dig>  fold coverage of the genome  <cit> . for the cat, a combination of megablast and blastz was used to generate the genome assembly, which utilised alignments to a number of other genomes such as human, chimpanzee, mouse, rat, dog, and bovine  <cit> .

in recent years a wide range of different programs have emerged to complement blast, itself a compromise between specificity and sensitivity relative to the smith-waterman algorithm. true smith-waterman is too slow for large scale projects, but in an effort to approach its speed, sensitivity and specificity, megablast  <cit>  and patternhunter  <cit> , amongst others, have been developed. a key to increasing the speed of the sequence alignment programs has been the utilisation of discontiguous seeds  <cit> , allowing the matches to be spread over longer sequences with internal mismatches and therefore the utilisation of longer seeds for the same sensitivity. this approach has been implemented in megablast, blastz  <cit>  and patternhunter amongst other programs. using discontiguous seeds improves the specificity and sensitivity of the programs. further innovations have included using multiple discontiguous seeds and refining the patterns of the seeds  <cit> . however, much of the analysis and comparisons of approaches have been carried out on mrna/est sequence sets  <cit>  and not on genomic dna which, in the eukaryotes, has quite different distributions of repeats. the new sequence alignment programs that have been developed for the alignment of sequence reads against reference genome sequences for resequencing projects  do not appear to be suitable for comparative genomics approaches. for aligning medium length genomic sequence reads  against related genomes, it is not immediately clear which program and which parameters would yield the best compromise between sensitivity and specificity.

here we use the example of the analysis of the effectiveness of three widely used dna sequence alignment programs to position ovine bes reads against the equine and bovine genome assemblies to demonstrate the utility of the approach. we use the information about the positional relationship of the end sequences of each bac in the ovine genome to estimate the sensitivity and specificity of the methods of determining the positions in the related, but not identical genomes.

RESULTS
alignment of ovine bac-end sequences  to the equine genome assembly
the full-length bess from the ovine chori- <dig> bac library, constructed from a single individual animal  <cit> , were mapped to the draft equine genome assembly equcab <dig> using megablast, blastz and patternhunter with a range of different parameters . these three representative dna sequence alignment programs were chosen to illustrate the approach for the following reasons; the blast suite of programs is very widely used and readily accessible to all users via the internet, blastz underpins the multiple genome alignments calculated and displayed on the ucsc genome browser website  <cit> , patternhunter has been described in the published literature as approaching true smith-waterman performance  <cit> . the number of ovine bacs with both bess mapped to the equine genome, in the tail-to-tail organisation and within  <dig> kb of each other, was calculated  <cit> . the bacs with their two end sequences mapped on the framework genome  in the tail-to-tail organisation are the only ones with an organisation that is the same as the bac in the original genome . the percentage of the total number of bess positioned on the equine genome with each program and each set of parameters, and the percentage of the total number of bacs in the full dataset with bess positioned in a tail-to-tail pair were then plotted . the closer to the right of the graph the more bess for which a position was reported , the closer to the top of the graph the greater the percentage of the total bess in tail-to-tail pairs. the closer a point is to the theoretical curve the larger the percentage of positioned bess in tail-to-tail pairs .

1for discontiguous searches the number of matches is listed first followed by the length of the match seed.

2all megablast searches were run with -d  <dig> -u t -f 'm d'. no score filter was set to allow for subsequent filtering of matches based on scores.

patternhunter  <cit>   performed poorly, with high sensitivity, but very low specificity. this is probably due to the inability of patternhunter to utilise "soft masking" of the repeats. that is, patternhunter does not have the ability to initiate matches in unmasked  sequence and then extend the matches into repetitive  sequence. no further testing of patternhunter was undertaken. as expected running megablast without soft masking also leads to significantly reduced specificity . thus for positioning sequences from genomes with multicopy repeats  "soft masking" and associated extension options are essential for maximum specificity.

blastz  <cit>  has been widely used for aligning genome sequences including whole genome alignments and allows "soft masking" of the sequences. running blastz with a contiguous seed of length  <dig> bases, see bzc <dig> , had a lower sensitivity than patternhunter, with a very similar percentage of the bacs in the total dataset positioned in the tail-to-tail configuration and therefore an increased specificity, i.e. fewer bacs with positions and a higher probability that the bess position using blastz are correctly positioned . using blastz with a discontiguous seed of  <dig> matches/ <dig> bases, whilst keeping the remaining parameters from the previous case unchanged, returned a very similar sensitivity and specificity to search bzc <dig> . relaxing the parameters, see bzd <dig> , increased the sensitivity, but with a loss of specificity . increasing the stringency of the parameters with the discontiguous seed, see bzd <dig> , improved specificity to the theoretical maximum, but with a substantial penalty to the sensitivity . for a detailed description of the use of seeds in sequence alignment programs see brown  <dig>  <cit> .

megablast has been designed for very quickly searching large databases and also permits the use of contiguous and discontiguous seeds to initiate matches. the performance of discontiguous megablast at all word sizes is clearly more specific than contiguous megablast when the latter is run with no score filtering at all. with long word sizes, such as  <dig>  discontiguous megablast is also more sensitive than contiguous megablast, but less sensitive than contiguous megablast with a word size of  <dig> or less. as expected, using both a seed designed for protein coding dna and a seed designed for non-coding dna  <cit>  together was significantly more sensitive and slightly more specific than using a non-coding seed alone with both seeds, using  <dig> matches/ <dig> base seeds and other parameters as in table  <dig>   <dig> % of the bess were positioned v.  <dig> % positioned with just the non-coding seed. with both the protein coding dna and non-coding dna seeds  <dig> % of the bess were in tail-to-tail bacs v.  <dig> % positioned with just the non-coding seed. in all subsequent discontiguous megablast searches both the coding and non-coding seed were used. a comparison of alternate scoring schemes for rewards for matches and penalties for mismatches  showed that -r,  <dig>  -q, - <dig> respectively performed slightly better than -r,  <dig>  -q, - <dig> for contiguous megablast, but vice versa for discontiguous megablast. all searches were run at the preferred values for the particular seed type. for discontiguous megablast a seed of  <dig> matches/ <dig> bases appeared to be the best compromise between specificity and sensitivity when used with a score cut off.

1word size  <dig>  with no score filtering

2word size of  <dig> with a match length of  <dig> using a discontiguous seed, with no score filtering

overall, for this particular comparison, the best parameters were short contiguous word size settings for megablast. a small improvement in sensitivity over searches was observed when using a word size of  <dig> instead of  <dig> . although the increase in sensitivity versus a word size of  <dig> was small  the increase in specificity was large .

in comparison, the virtual ovine genome approach  <cit> , which aimed to maximise matches and by applying a filter of tail-to-tail bacs, to minimize incorrectly positioned bacs, positioned  <dig> % of ovine bacs  in tail-to-tail organisation on the human genome assembly. this result considerably exceeds the performance of the approaches described here, although its aim is position as many bacs as possible, not position unpaired reads, for which it is not suitable. however, this approach relied on the availability of tools for the conversion of coordinates between genome builds that may not be available for emerging genome sequences and therefore it may not be generally applicable.

determining the optimal score cut off
megablast search results can be filtered post completion of the searches using the alignment scores. increasing the alignment score cut-off, substantially reduced the false positive rate with limited impact on the total number of bes for which correct positions were obtained . individual users will need to make the final determination of the appropriate balance between yield and specificity. this will depend on the subsequent use of the results, especially whether additional filtering steps will be used.

1results from the megablast search on full length bess using a contiguous word size of  <dig> the default score cut-off is  <dig>  the results in this row correspond to the case where no score cut-off is specified.

2for each score cut-off the number of bess predicted to be in tail-to-tail bacs assuming all bess were correctly positioned.

3false positive rate

4false negative rate

using medium length sequence reads
to test the applicability of the approach described here with sequences of shorter length the ovine bess were trimmed to the first  <dig> bases, whilst retaining the pairing information. a smaller number of searches of program and parameter values were undertaken for the alignment of trimmed ovine bess against the equine genome assembly . as with the full length sequences, contiguous megablast performed substantially better than discontiguous megablast. in contrast to the full length bess, where a word size of  <dig> was slightly better than  <dig>  the improvement in using a word size of  <dig> over a word size of  <dig> was far greater for medium length sequences, especially once the score cut off was applied.

mapping medium length sequence reads to bovine genome assemblies
the ovine and bovine genome sequences are more closely related to each other than either is to the equine genome. we explored the choice of parameters for aligning the trimmed ovine bess sequence reads to the bovine genome assembly. although contiguous megablast was also better than discontiguous megablast, the difference was not as large as that observed for the searches against the equine genome . thus the relative performance of the different sets of parameters is also dependent on the characteristics of the sequence datasets being used for a particular comparison. this reinforces the need for the empirical comparison of programs and parameters with the datasets to which they will be applied. the frequency distribution of the alignment scores for the  <dig> base trimmed bess against the equine and bovine genomes show marked differences . there were large numbers of high scoring matches against the bovine genome. but as expected, the number of matches against the equine genome decreased as the score increased. however, for both comparisons a clear inflexion in the curve around a score of  <dig> is observed due to an increase in sequences with positions. as a result, the parameters that are optimal for the alignment of the ovine reads against the equine genome assembly appear to be similar to, if not the same as, the optimal parameters for the alignment of the ovine sequences against the bovine genome assembly. however, the additional sensitivity benefits of the short contiguous seed probably do not outweigh the increased speed of the longer discontiguous seed for alignment against the bovine genome sequence. especially since the similarities in the repeat sequences between bovine and ovine generates extremely large numbers of hits at short word lengths  even with sequences masked at the most sensitive settings of repeat masker  rendering the use of w =  <dig> impractical.

using an earlier version of the bovine genome assembly  reduced the sensitivity and specificity scores for all search programs and parameter sets tested relative to btau <dig> , but did not alter the relative ranking of the programs and parameters . thus where the objective is to optimise search parameters, as long as the order of contigs and scaffolds in the comparison genome is approximately correct, this approach will be effective.

CONCLUSIONS
paired-end sequences provide a very useful dataset for optimising program and parameters for positioning sequence reads  with a range of different lengths from one genome against another genome. parameter estimation can be undertaken with genomes in various stages of assembly, although a substantial number of scaffolds much longer than the average length of the inserts in the paired-end reads are required. surprisingly, megablast with contiguous seeds performs better than discontiguous seed megablast and blastz for alignment of ovine reads to the equine and bovine genomes. patternhunter would perform much better if it were able to effectively utilise soft masking. a range of programs and parameter settings can be quickly surveyed with datasets appropriate to the particular objective. the optimal balance between yield and specificity of positioning chosen will depend on the subsequent use of the results.

