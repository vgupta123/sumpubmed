BACKGROUND
the detection of homologous protein sequences and the construction of protein multiple sequence alignments  are two of the most fundamental tasks in modern bioinformatics to analyze evolutionary relationships or to infer functional information. search tools  or msa algorithms  require a scoring model to represent evolutionary insertion, deletion and substitution events. while the former two are usually modeled by a specific gap penalty model  <cit> , amino acid substitution events are represented by substitution matrices.

for each two different types of amino acids a and b, these matrices provide a score which represents the likelihood of amino acid a mutating to amino acid b in relation to independent evolution. the likelihood of preserving an amino acid type is represented on the diagonal of a substitution matrix. these odds-ratios are normally derived by counting amino acid substitution frequencies in  aligned sets of sequences. notably, these sets are usually filtered to remove all parts containing gaps and only focus on highly conserved regions which potentially discards valuable information.

over the last years, several types of substitution matrices have been developed which differ in construction methodology, underlying data base and field of application. the point accepted mutation matrices   <cit>  represent amino acid mutation probabilities for specific evolutionary distances generated through markov chain models. starting from an initial distance of 1% amino acid changes on average for the construction of the transition matrix, evolutionary distance is captured in point accepted mutations, ranging from  <dig>  to n . hereby, the transition matrix is multiplied n-times with itself to obtain the n-step markov chain necessary for pamn. the pam <dig> probabilities are derived from  <dig> amino acid changes between very closely related sequences. even though this dataset is very small and quite old, pam matrices are still commonly used for the detection and alignment of closely related sequences. they cannot, however, reliably detect remote homologs  <cit>  or align sequences with low similarity.

based on the pam series, further matrices have been developed covering a larger and/or more diverse sequence space  <cit> . one of the most recent pam siblings is the vtml matrix series  <cit>  which was originally developed for a better detection of remote homologs but is also used to construct high quality msas  <cit> . vtml matrices are constructed by iteratively estimating evolutionary distances and substitution rates from a set of pairwise sequence alignments using a maximum likelihood estimator. dayhoff’s model is used as the initial rate matrix. the pairwise alignments are obtained by randomly sampling two pre-aligned sequences from each protein family in the systers database  <cit> . this dataset is much larger and more diverse compared to pam which allows vtml matrices to provide a more reliable detection of remote homologs. however, only pairwise alignments are considered to prevent bias from oversampling and the covered sequence space is still rather small compared to the sequence space available today with only  <dig>  million amino acid pairs considered in the vtml generation.

one of the most commonly used matrix series are the blosum matrices  <cit>  which are derived from highly conserved but also distantly related amino acid blocks  <cit> . to prevent bias from redundant information, similar sequences are clustered. instead of counting all substitution frequencies fully, they are weighted by the cluster sizes of their corresponding sequences. the matrix numbers, e.g. blosum <dig>  indicate the chosen similarity threshold for the sequence clustering step. the blosum <dig> and blosum <dig> matrices are the de facto standard for homology search tasks, e.g. in blast, psi-blast and fasta. they are also commonly used for msa construction and are available as standard parameter in most alignment programs. however, the originating database is quite small with  <dig>  million amino acid pairings in its  <dig> release and the matrices are known to be substantially biased due to implementation problems  <cit> . similar to the pam series, blosum matrices have also been used as basis for other matrices. examples are the optima <dig>  <cit>  and pblosum  <cit>  matrices which are reported to show improved substitution matrix performance. however, these still rely on the same outdated and small sequence data as blosum.

the selection of the right substitution matrix and corresponding gap parameters is an intricate task essential in homology search, construction of msas and phylogeny  <cit> . while most of the commonly used matrices deliver reasonable results, there are still situations where the sensitivity of these matrices is not sufficient. a possible explanation for this issue is that these matrices are derived from too small and similar datasets that do not contain enough variety. this is in concordance with common knowledge that matrices derived from a larger and more diverse sequence space can lead to significantly better homology search performance  <cit> .

in this paper, we address this sensitivity issue by presenting a novel type of substitution matrix based on structural alignments. our pfam substitution matrix  series is derived from the manually curated pfam seed alignments   <cit>  using a novel algorithm. thus, our pfasum matrices rely on state-of-the-art expert ground truth data which covers a much larger and diverse sequence space than conventional substitution matrices with  <dig>  billion amino acid pairings in  <dig>  msa . additionally, most existing substitution matrices are derived only from highly conserved or filtered sequence data by omitting parts containing gaps or ambiguous amino acids. in contrast, the pfasum construction takes all information into account. a thorough evaluation of pfasum’s homology search performance and its capability to produce msas shows that this enables pfasum matrices to significantly outperform commonly used substitution matrices, especially when dealing with sequences of low similarity.

in the following, we will describe the methods for constructing the pfasum matrices in detail as well as thoroughly discuss their capabilities in comparison to frequently used matrices for two common use cases: homologous sequence search and msa construction.

method
pfasum construction
database selection
as discussed in the introduction, commonly used substitution matrices are derived from quite old and incomplete  datasets. it is also known that larger and more diverse sequence datasets can produce significantly better performing substitution matrices  <cit> . hence, we chose the pfam seed alignment dataset  <cit>  as basis for our pfasum substitution matrices. this dataset consists of numerous msas  covering the currently known sequence space. each msa contains a set of representative sequences for a specific group of proteins such as a protein family or domain. this allows our algorithm to capture substitution events between closely related sequences. combining all msas, and thus different groups of sequences, into a single matrix enables us to apply derived substitution events on protein sequences with distant relationships. furthermore, all pfam msas are manually curated by experts and thus represent ground truth structural alignments.

pfasum algorithm
substitution matrices usually represent substitution rates in form of rounded log-odds scores derived from aligned and filtered sequence data. for two different amino acids α
i and α
j the unrounded score sαi,αj corresponds to sαi,αj=log2p−log2pp. the term p denotes the substitution frequencies for α
i and α
j which are derived by counting all α
i
α
j pairings n and relating these to all counted pairs, i.e. n=∑αi,αjn. the terms p and p represent the marginals for observing amino acid α
i and α
j respectively. these can be directly derived by summing over the probability of conservation p and all substitution events ). the resulting real-numbered log-odds score sαi,αj is then rounded to the next integer value.

our pfasum algorithm and the corresponding matrices also follow this basic principle. we process each msa in the pfam seed dataset separately, accumulate the counted substitution frequencies in a single matrix and subsequently transform these to the final rounded log-odds scores. in order to process unfiltered pfam seed alignments and to handle special cases such as oversampling issues and ambiguous amino acid symbols, it is, however, necessary to introduce additional steps in the matrix generation.

sequence clustering
counting amino acid substitutions in a set of highly redundant sequences may result in potential bias from oversampling. to mitigate this problem, henikoff and henikoff  <cit>  uses a clustering algorithm for the blosum-t matrix calculation to group sequences of equal length λ depending on their relative similarity Φ and a preset clustering threshold t.

instead of counting the observed amino acid substitutions n for each sequence pair a and b fully, each substitution is counted as n/|c
x|∗|c
y|. thereby, c
x corresponds to the cluster that contains sequence a and c
y to the cluster containing sequence b. the cardinalities |c
x| and |c
y| represent the corresponding cluster sizes, i.e. the number of sequences within the clusters. if both sequences a and b belong to the same cluster, i.e. c
x=c
y, all substitutions between a and b are ignored in counting pairs. in other words, a single cluster is considered as a single sequence in counting pairs.

first, the clustering algorithm calculates the similarity Φ between two sequences a and b. the similarity Φ between two sequences a and b is measured by counting the number of aligned positions that share the same amino acid type, normalized by the length λ of both sequences. the similarity value is then compared against the preset clustering threshold t to decide whether the sequences should be grouped or not. for example, if sequences a and b are Φ= <dig> % identical and the clustering threshold is set to t= <dig>  the sequences are grouped within a cluster. additional sequences c are assigned to this cluster if there exists at least one sequence x inside the cluster that is at least t % similar to c, i.e. Φ≥t.

the pfasum algorithm incorporates this method to mitigate oversampling problems. analogous to the blosum matrices, the number suffix in a matrix’ name, e.g. pfasum <dig>  indicates the chosen clustering threshold used for the construction of the matrix. however, we had to adapt the similarity measure to cope with the aligned sequences found in the pfam seed dataset as explained in the following section.

sequence similarity
two aligned sequences a and b from a pfam seed alignment can be directly compared as both can be considered as correctly aligned. a gap symbol found in these alignments is denoted as γ. we define a as a vector of amino acid and gap symbols with the length l, i.e. a=. the number of amino acid symbols in a, i.e without the gap symbol γ, is denoted as λ
a. similarly, b is defined as  and λ
b represents the number of amino acids in b. the unnormalized similarity ϕ between a and b is defined as: 
  <dig> ϕ=∑l=1lδ1−δ1−δ 


hereby, δ is the kronecker delta which equals one if x=y, and zero otherwise. in other words, we omit all pairings that contain at least one gap symbol and count only pairs with identical one letter codes. the fractional similarity value Φ is computed by normalizing ϕ with the length of the shorter sequence, i.e. min.

group size normalization
generally, pfam alignments represent groups of related protein regions. for our purpose, these groups of sequences are collections of related proteins. within the broad term “group” we encapsulate protein families, domains, and similar organizational structures. substitution matrices derived from pfam seed alignments aim at capturing the average evolutionary behavior, while the number of sequences within each group can vary widely. to avoid over-representing groups with high sequence counts, the pfasum algorithm derives group-specific pair frequency counts p
k for each sequence group k. these p
k are obtained by normalizing the pair counts n
k found in group k with the number of sequences s
k in this group. pair frequencies p for the entire database are then obtained by summing over all normalized p
k.

gaps
the pfam seed dataset contains complete msas and thus gaps occur frequently to compensate for different sequence lengths induced by deletions and insertions of amino acids. this is contrary to the data basis of most conventional substitution matrices, e.g. the blocks database used for the blosum construction  <cit> . these datasets are usually filtered by omitting alignment parts containing gaps. rather than neglecting msa columns with at least one gap, the pfasum algorithm simply neglects gap/amino acid  pairings in counting substitution frequencies. hence, the pfasum algorithm considers all found amino acid pairings even in gap-rich columns with few amino acids. this allows us to extract unique information about substitution events even within insertion/deletion regions  since these regions are also manually curated and thus can be considered as reliably aligned.

ambiguous amino acids
ambiguous amino acid characters – such as b, j, z and x – occur rarely in most sequence databases, especially in older databases. this consequently results in very low frequencies for pairs that involve ambiguous amino acids so that the computed relative pair frequencies often vanish. hence, most substitution matrix algorithms fully ignore observed ambiguous amino acids when counting pair frequencies. instead, matrix entries for these characters are subsequently generated from averaging the pair frequencies of the canonic amino acids, following the translation scheme shown in table  <dig>  the number of ambiguous amino acids can be, however, larger in modern sequence databases such as pfam and thus can have a greater influence on the observed substitution frequencies.



to correctly account for this, pfasum fully processes ambiguous amino acids in counting substitution frequencies. as ambiguous amino acids encode at least two canonic amino acids, it is necessary to redefine amino acids as a set Θ
x of symbols with x representing the one letter code of the amino acid. canonic amino acids are thus represented as sets with a cardinality of one, e.g. Θ
a={a}. ambiguous amino acids are defined as sets containing their encoded canonic acids, e.g. Θ
b={n,d}.

the pfasum algorithm distributes pair counts Θ
x
Θ
y of any found ambiguous amino acid equally among their canonic amino acids, again following table  <dig>  also, we count the observed Θ
x
Θ
y directly. for example, each found amino acid substitution Θ
a
Θ
b in group k is counted as  <dig>  Θ
a
Θ
n,  <dig>  Θ
a
Θ
d, and  <dig>  Θ
a
Θ
b.

afterwards, the final pair frequency counts for all acid-to-acid combinations x,y are obtained using the following formula which accounts for counting Θ
x
Θ
y more than once if an ambiguous amino acid is involved: 
  <dig> μkΘx,Θy=∑αi∈Θx∑αj∈Θynkαi,αj−nkΘx,Θy|Θx||Θy|pkΘx,Θy=μkΘx,Θy+nkΘx,Θynk 


in p
k, we add a correction term μ
k to the number of observed amino acid pairings n
k. this term equates to zero for pairings of canonic amino acids. for pairings involving ambiguous amino acids, μ copes with adding these pairings to both canonic amino acids pair counts as well as ambiguous acid pair counts. this ensures that each observed amino acid pairing is only counted once. the normalization factor n
k corresponds to the total number of observed amino acid pairings in group k.

using the example from above, a single observed ab substitution would result in frequency counts n
k=n
k= <dig>  and n
k= <dig>  the resulting relative frequencies using the formula above yield then p
k=p
k= <dig>  and p
k= <dig> 

evaluation of homology search performance
one of the most common tasks employing substitution matrices is the identification of homologous sequences. we thus evaluated the capabilities of pfasum matrices for this particular task in two different scenarios. first, we compare the performance of commonly used substitution matrices such as blosum <dig> with pfasum matrices of similar relative entropy. this scenario represents the state-of-the-art approach for comparing substitution matrices as per altschul  <cit>  on basis of their general compositional properties. secondly, we investigate homology search performance in a more user centered way by analyzing which of the tested matrices performed best on different databases, while ignoring their relative entropies. the following sections describe the different matrix test sets and databases used for this evaluation as well as the underlying methodology in detail.

tested substitution matrices
we calculated pfasum matrices using integer clustering thresholds ranging from  <dig> to  <dig>  depending on the input data, too small clustering thresholds can lead to clustering results only containing a single large “super-cluster”. since amino acid substitutions are only counted between different clusters and not within the clusters, this can result in matrices that do not report substitution rates for all possible amino acid substitutions. hence, we omitted all pfasum matrices with clustering thresholds < <dig>  we denote the finally obtained matrix set in the following as pfasum search matrices .

pfasum search matrices

standard search matrices



in order to evaluate the homology search performance of pfasum search matrices against state-of-the-art substitution matrices, we focus on a set of commonly used substitution matrices denoted as standard search matrices . this set contains various blosum, md, optima, pam, and vtml matrices which are used, e.g., as default parameter in popular homology search tools such as ssearch/fasta  <cit>  and blast  <cit> .

databases
to investigate the performance differences between pfasum search matrices and standard search matrices we conducted homology search experiments on basis of the most recent astral  <dig>   <cit>  datasets, a subset of sequences of the scop/scope database  <cit> . the astral database, and especially its astral <dig> subset containing sequences with a maximum similarity of 40%, has been commonly suggested as the gold standard for homology search performance evaluation  <cit> . in order to evaluate substitution matrix performance for different application purposes, we differentiated between three distinct test scenarios and thus astral database subsets.

while the astral <dig> subset represents the state-of-the-art homology search benchmark, the astral <dig> dataset emulates database searches against very similar and closely related sequences. we also conducted performance evaluation on basis of the astral <dig> dataset, which simulates homology searches of novel proteins with unknown structural features and few known homologs. effectively, these three datasets allow us to evaluate the performance of substitution matrices for different evolutionary distances.

search methods
in order to obtain the most accurate results for the evaluation of homology search performance we employed the ssearch  <cit>  algorithm of fasta . ssearch was reported previously to possess higher accuracy than blast  <cit> . in order to avoid potential bias introduced through inaccurate gap parameter settings, we varied gap opening and gap extension penalties from − <dig> to − <dig> and − <dig> to − <dig>  respectively. for each gap parameter and substitution matrix combination, we generated a list of found potential homologous relations when searching all sequences of an astral dataset to the entire database. these relations were ordered based on their e-values, i.e. the probability of obtaining a hit for an unrelated sequence with equal length by pure chance.

performance evaluation
we evaluated the homology search performance of the tested substitution matrices using the coverage measure q  <cit> . for a list of homologous search results ordered by their e-values, this measure represents the fraction of the correctly found, true positive superfamily relations which remain after cutting the list in order to restrict the number of false positives to a certain amount. we set this threshold to  <dig>  errors per query  in concordance to other studies  <cit> . this effectively restricts the number of false positives found within  <dig> queries to a single false positive. to reduce the bias introduced by different superfamily sizes, we used the quadratically normalized version of the coverage as suggested by price et al.  <cit> : 
  <dig> q=1s∑i=1stisi2−si 



s represents the number of superfamilies and t
i the number of true positive relations in superfamily i which contains s
i sequences.

in order to estimate the significance of the calculated coverages q and the differences between them, we used a concerted bayesian bootstrapping approach to estimate variance and mean of the underlying coverage distribution  <cit> . through variation of the prior distribution, this allows us to evaluate changes in the database composition and accompanying variation in coverage. we obtained sequence weights of the prior from the dirichlet distribution and conducted the quadratic normalization of the resulting bootstraps as described in hess et al.  <cit> . prior distributions were generated  <dig> times.

the significance of the coverage differences were measured through z-score statistics which express the significance of the difference between distribution m and p as: 
  <dig> zm,p=q¯m−q¯pσm2+σp2n 


here, q¯m represents the mean coverage for distribution m with its corresponding variance σm <dig> and n the number of bootstrap steps, i.e.  <dig> in our case.

evaluation of msa construction
another popular task for employing substitution matrices is the construction of multiple sequence alignments . hence, we also evaluated the impact of pfasum matrices on the quality of msas using state-of-the-art msa benchmarks. the following sections describe this evaluation in detail.

tested substitution matrices
the calculation of pairwise sequence alignments forms the basis of many homology search tools and msa programs. for example, the search tools ssearch  <cit>  and blast  <cit>  employ pairwise alignments for calculating the similarity between sequences. msa programs such as muscle  <cit>  and mafft  <cit>  use pairwise alignments, e.g., during guide tree construction or when generating profile-profile alignments. this suggests that matrices which are suitable for either task may also be useful for the other task. hence, we assess pfasum’s msa construction capabilities by focusing on the three best performing pfasum search matrices in our homology search performance evaluation, namely pfasum <dig>  pfasum <dig> and pfasum <dig> . we refer to this matrix subset in the following as pfasum msa matrices .

pfasum msa matrices

standard msa matrices



out of the set of standard search matrices, we chose the pam <dig>  blosum <dig>  blosum <dig>  vmtl <dig>  and vtml <dig> matrices for this evaluation. these matrices are used as default matrix by several msa algorithm such as muscle and mafft. we refer to this matrix subset in the following as standard msa matrices .

benchmark datasets
to compare the quality of msas generated using our novel pfasum matrices with those created with conventional matrices, we used the msa benchmark collection bench provided by r.c. edgar  <cit> . this collection of benchmark datasets consists of commonly used msa benchmarks stored in fasta  <cit>  format. from these, we selected the unmodified balibase  <dig>   <cit> , sabmark  <dig>   <cit>  and oxbench  <cit>  benchmarks for our evaluation. each benchmark consists of reference msas and corresponding unaligned sequence sets.

balibase  <dig>  is one of the most widely used msa benchmarks and provides  <dig> msas categorized in five different sets. each set represents a specific msa use case, e.g. a set of very divergent sequences  or sequence families that are aligned to a distantly related sequence . the msas in each set were generated using a combination of sequence- and structure-based methods with manual refinement  <cit> . sabmark  <dig>  provides two sets of msas, a “twighlight zone” set  and a “superfamilies” set  which are derived from a consensus of sofi and ce  <cit> . while the sequences in the first set share a maximum similarity of 25%, the second set contains sequences with a maximum similarity of 50%. the underlying sequences were selected using fold information from the scop database and thus possess known structure. the last benchmark used in our evaluation is oxbench. it provides a set of  <dig> structural msas constructed using stamp  <cit>  and 3d structural information from the 3dee database  <cit> .

msa methods
for our evaluation, we constructed  <dig>  msas in total using the popular muscle algorithm   <cit>  in combination with the aforementioned substitution matrices and different gap penalties. similar to our homology search performance evaluation, we varied the gap opening and gap extension penalties between − <dig> and − <dig> and − <dig> and − <dig>  respectively, to prevent the bias from potentially inaccurate gap penalty settings.


muscle constructs msas in three steps, i.e. a draft progressive, an improved progressive and an iterative refinement step. in order to mitigate msa quality differences solely induced by refinement steps, we set the maximum number of iterations to one. the msas are thus computed using a matrix independent guide tree and a single progressive alignment step only based on our chosen parameters. hence, the quality of the generated msas only depends on the evaluated substitution matrix and gap penalties.

msa quality evaluation
we measured the quality differences between our generated msas and the reference msas using the q-score measure  <cit>  implemented in the identically named tool qscore by r.c. edgar  <cit> . this measure describes the fraction of identically and thus correctly aligned amino acid pairs between a test and a reference msa. in other words, the quality of a test msa can be expressed as a number between  <dig> and  <dig> 

we use the q-score in two different evaluation scenarios. first, we calculate the average q-score q¯ over all msas in a benchmark dataset for each substitution matrix separately. this allows a general comparison but is obviously sensitive to strong outliers. to compensate this issue, we provide a second evaluation scenario. here, we count the number of times that a specific pfasum matrix in the pfasum msa matrices set produced an msa of at least as good quality as a specific matrix out of the standard msa matrices set.

RESULTS
in the following we will first show the results for the performance of matrices in the pfasum search matrices and standard search matrices sets for homologous sequence search . the performance of these will be evaluated on the de facto gold standard for homologous sequence search, the astral database. in the second part of this section, we will examine the msa generation capabilities of pfasum matrices compared to conventional matrices using the pfasum msa matrices and standard msa matrices sets. here, we investigate three distinct scenarios for computing msas from different sequence compositions using the benchmark datasets balibase  <dig> , oxbench and sabmark  <dig> .

homologous sequence search
in order to gauge the performance of pfasum substitution matrices in the context of homologous sequence search, we first present results for matrices with comparable relative entropies. as the relative entropy describes the divergence of observed substitution events and independent evolution captured within a substitution matrix, a fair performance comparison between matrices can only be achieved if they possess similar relative entropies  <cit> . in the second part, we present the results of our general and entropy-independent performance evaluation. while the former part evaluates general compositional properties of substitution matrices , the latter part highlights which substitution matrices performed best in our test settings.

comparison based on relative entropy
in order to properly assess the performance of substitution matrices, altschul  <cit>  suggested comparing matrices with similar relative entropy. the entropy represents the information divergence between independent and observed evolutionary relations. the relative entropy for pfasum search matrices ranges between  <dig>  bits  and  <dig>  bits . standard search matrices such as vtml <dig>  vtml <dig>  vtml <dig>  vtml <dig>  pam <dig> and blosum <dig> thus cannot be directly compared to pfasum search matrices, since their entropies differ drastically from the pfasum search matrices entropy range .

for all other matrices, we compared their performance on the three astral datasets for varying gap penalty settings. figure  <dig> shows the highest achieved coverages at  <dig>  errors per query  for standard search matrices and their comparable pfasum counterparts each using individual best performing gap penalties . the significance of the results was estimated with z-score statistics using concerted bayesian bootstrap .
fig.  <dig> performance comparison of standard search matrices with pfasum search matrices of similar entropies on all three astral datasets. the highest achieved coverage at an  <dig>  errors per query for any gap opening and extension penalty combination is shown. best performing gap parameter for each matrix and database combination can be found in additional file 6: table s <dig>  please note, we reduced the shown range of the coverage to emphasize the differences between the matrices




the obtained coverage results and z-scores show that pfasum search matrices always perform at least as good or significantly better than their comparable standard search matrices with one single exception: the vtml <dig> matrix performs slightly better on the astral <dig> dataset. this performance difference can be related to the different matrix compositions. while the diagonal entries of vtml <dig> and its counterpart pfasum <dig> are very similar, there are numerous differences of up to four log-odds scores in pfasum <dig> when comparing the off-diagonal entries. pfasum <dig> thus favors more substitution events than vtml <dig> which may be useful when searching for remote homologs. for datasets containing similar sequences such as astral <dig>  however, this can result in more false positive relationships identified.

on a global level, the performance advantage of pfasum search matrices over the tested standard search matrices grows with decreasing sequence similarity in the test databases. while the performance differences on astral <dig> and astral <dig> are only marginal but still significant, the coverage differences for astral <dig> are much greater. this indicates that pfasum search matrices are especially useful for detecting remote homologs.

entropy-independent search performance comparison
henikoff and henikoff  <cit>  showed that substitution matrices of a given matrix family perform best around a relative entropy h of ∼  <dig>  bit. we chose to re-evaluate this hypothesis on basis of the pfam seed database. similar to hess et al.  <cit> , our results show that the best performing substitution matrices – including pfasum search matrices – possess relative entropies well below the suggested  <dig>  bit.
fig.  <dig> comparison of the performance of all standard search matrices with the novel pfasum search matrices on three different astral datasets. the highest achieved coverage at  <dig>  errors per query for any gap opening and extension penalty combination is shown . with the exception of two performance differences, all shown coverage values are significantly different according to our z-score analysis shown in additional file 9: table s5




we also find that pfasum matrices with higher matrix number perform better on sequence data with lower sequence similarity than matrices with lower matrix number . whereas pfasum <dig> shows the best performance on the astral <dig> dataset, the best performing pfasum matrices for sequences with relatively high sequence similarity can be found at low clustering thresholds with pfasum <dig> outperforming all others on the astral <dig> dataset.

when comparing the three top performing pfasum search matrices to all standard search matrices, we find that pfasum search matrices deliver superior homology search performance with significantly greater coverage values  as indicated by the corresponding z-scores . the highest improvements in coverage over standard msa matrices were achieved on the astral <dig> dataset. similar to our findings in the evaluation based on similar entropy, this indicates that pfasum search matrices are especially useful when searching for remote homologs. surprisingly, the often used blosum matrices are outperformed by vtml <dig> and the optima <dig> matrix. additionally, blosum <dig> – often suggested as matrix of choice for sequence data sets with high similarity – is outperformed by blosum <dig> and blosum <dig> on all three test datasets. both pam matrices exhibit relative good performance on the high similarity dataset , but either is under-performing for sequences with more remote evolutionary relation . the md  <cit>  matrices deliver similar results to the lower numbered vtml matrices.

while vtml <dig> tends to be an universally good choice for homology search as the best performing matrix out of the standard search matrices set on all three datasets, pfasum search matrices can still achieve higher coverage values . in general, the best performing pfasum search matrices for the astral <dig>  astral <dig> and astral <dig> datasets outperform all standard search matrices on a statistical significant level .



multiple sequence alignments
whereas homologous sequence search assessment aims at evaluating the performance of substitution matrices for pairwise sequence alignments, the alignment of multiple sequences in msas is another field of application for substitution matrices. we will first compare the average performance of matrices in the pfasum msa matrices set to conventional substitution matrices grouped in the standard msa matrices set  on three popular msa benchmark datasets. in the second part, we will dissect these results and investigate how pfasum msa matrices fare on single msas in comparison to standard msa matrices.

average matrix performance
to properly evaluate the capabilities of pfasum msa matrices in comparison to standard msa matrices for msa construction, we computed msas based on three different msa benchmark datasets using the msa program muscle in combination with the aforementioned matrices and varying gap penalties. the quality differences between these msas and their benchmark reference msas were measured afterwards using the q-score measure. figure  <dig> shows the results for the average q-score  for all tested matrices on the balibase, oxbench and sabmark datasets.
fig.  <dig> general comparison of msa matrix performance based on the average q-score q¯ per benchmark database. pfasum msa matrices outperform the tested standard msa matrices on all three benchmarks. pfasum <dig> achieved the highest q¯ for balibase  <dig>  and sabmark  <dig> , while vtml <dig> leads all matrices on the oxbench dataset. the red dotted line indicates the maximum q¯ separately for each benchmark




as expected, we observed a significantly higher q¯ for all matrices on the oxbench dataset than on balibase  <dig>  and sabmark since ≥73% of the msas in this dataset consist of sequences with at least 40% sequence identity. contrarily, the sabmark dataset presents a decisively more difficult challenge for all matrices with ≥93% of all alignments possessing less than 40% sequence similarity. the balibase  <dig>  dataset can be placed in between sabmark and oxbench in terms of sequence identity with ≥63% at less then 40% similarity.

even though we analyze the alignment quality of substantially different test datasets, we find our pfasum msa matrices in the top three performing matrices on all datasets. on balibase  <dig> , pfasum <dig> achieved the highest q¯ of all matrices with q¯pfasum31= <dig> , closely followed by pfasum <dig> with q¯pfasum60= <dig>  and vtml <dig> with q¯vtml160= <dig> . the highest alignment quality on oxbench is reported for vtml <dig>  only marginally besting pfasum <dig> with q¯pfasum60= <dig> . for the sabmark dataset we find the highest two performances for pfasum <dig>  and pfasum <dig> . in this case, the next highest average alignment quality by a matrix out of the standard msa matrices set was achieved by vtml <dig> .

the sabmark dataset allows us to delve deeper in the performance of substitution matrices on alignments with very low sequence identity  and moderately difficult alignments . on both datasets, we observe that pfasum msa matrices outperform the standard msa matrices with pfasum <dig> achieving the highest q¯ for the ’twilight zone’ dataset, while pfasum <dig> performed the best for the superfamily alignments .

in summary, pfasum msa matrices outperform all analyzed standard msa matrices on average on benchmark datasets with low sequence identity with pfasum <dig> being the matrix of choice for very difficult alignments of sequences with low sequence identity. for alignments with moderate complexity and medium sequence similarity, pfasum <dig> proofs to generate better alignments than any of the standard msa matrices.

quality improvements over standard msa matrices
while the average q-score is an overall assessment of the alignment quality, directly comparing the performance between two matrices on alignments can yield insights on whether the average is dominated by strong outliers. hence, we chose to compare pfasum msa matrices with standard msa matrices on a per alignment level based on their reported q-score values. for this, we count the number of times that a specific tested pfasum matrix produced an msa of at least as good or higher quality as a specific matrix out of the standard msa matrices set. the results for this comparison on basis of balibase  <dig> , oxbench and sabmark are shown in percent in table  <dig> 
the comparison for better-than-relations  are shown in brackets. values are shown for all pfasum msa matrices vs. standard msa matrices comparisons on all three different benchmark datasets





pfasum msa matrices achieved a q-score at least as good as the standard msa matrices in over 60% of all balibase  <dig>  alignments, outperforming them in at least 50% of the test cases.

in comparison to pam <dig>  the usage of pfasum msa matrices even resulted in higher quality in over 63% of the test cases. similar to balibase  <dig> , over 60% of all sabmark alignments reconstructed using pfasum msa matrices show a comparable quality than those generated with standard msa matrices and at least 42% are of higher quality.

in contrast to the other two benchmarks, the performance gain of pfasum msa matrices over standard msa matrices on oxbench msas is rather small. only  <dig> to 33% of the msas generated with pfasum msa matrices show larger q-scores than those constructed with standard msa matrices. however, between 76% and 84% of the pfasum generated msas are at least as good as their counterparts. interestingly, while vtml <dig> achieves a higher average q-score q¯ than any of the pfasum msa matrices on oxbench alignments, pfasum msa matrices still produced higher or equal quality msas than vtml <dig> in over 76% of these alignments.

discussion

pfasum search matrices perform significantly better than standard search matrices in homologous sequence search, especially on datasets with small or limited sequence similarity such as astral <dig>  the best performing matrix on this dataset is the pfasum <dig> matrix with a relative entropy of h=  <dig>  bit. interestingly, this matrix performs slightly worse on more similar datasets such as astral <dig> and astral <dig> compared to pfasum <dig> and pfasum <dig> which have much lower relative entropies of only h=  <dig>  bit and h=  <dig>  bit. for ungapped alignments matrices with higher relative entropy are usually more suitable for detecting homologs within similar sequences than matrices with lower relative entropies  <cit> . this is apparently not the case when using pfasum matrices on the tested astral datasets.

a possible explanation for these findings can be drawn from the composition of the pfam seed alignments, the basis for pfasum search matrices. pfam seed alignments consist of representative sequences for each family that are aligned based on their structural properties. the sequences within a family are thus structurally similar but do not necessarily possess a similar amino acid composition. when clustering these potentially dissimilar sequences using low clustering thresholds, substitution events between them are thus attenuated. pfasum search matrices with lower matrix number, i.e. lower clustering thresholds, thus apparently favor pairs of identical amino acids over substitution events and are more suited for similar sequence datasets despite their relative entropy being small. a full assessment of this effect requires a deep and thorough analysis of the amino acid compositions in the astral dataset and pfam seed sequences. this is, however, beyond the scope of this article and recommended for future research.

our performance evaluation shows that ssearch using pfasum search matrices provides significantly better search results and as such also higher quality pairwise sequence alignments. since these form the basis for many state-of-the-art msa algorithms such as muscle and mafft, we also consequently tested the capabilities of a selection of the aforementioned matrices for msa construction. our results indicate that the tested pfasum msa matrices perform exceptionally well when aligning sequences with medium to low sequence similarity such as in the balibase  <dig>  and sabmark  <dig>  benchmarks. however, the performance differences between pfasum msa matrices and the best performing standard msa matrices on datasets containing similar sequences such as oxbench is rather small.

this effect can be related to compositional similarities between the matrices which in particular affects the alignment of similar sequences. all tested matrices in our msa evaluation, with the exception of pam <dig>  share comparable scoring ratios between diagonal and off-diagonal entries per amino acid, favoring amino acid conservation over substitutions. since similar sequences are usually more conserved and the majority of the matrix differences can be on the off-diagonal, the alignments generated with pfasum msa matrices or standard msa matrices only show minor differences.

CONCLUSIONS
we presented the novel pfasum substitution matrices for the accurate detection of homologous protein sequences and for scoring and constructing high quality protein msas. our pfasum matrices are based on the pfam seed dataset  <cit>   which represents the currently known sequence space covering a large variety of related and divergent sequences. the msas in this dataset are also manually curated by experts. hence, the data basis for pfasum substitution matrices is not only much larger and diverse than those of conventional substitution matrices, but also represents ground truth data instead of automatically generated and thus potentially biased data. in contrast to conventional construction methods, our algorithm can also effectively handle unfiltered msas and ambiguous amino acid symbols and thus prevents the loss of potentially important information. an in-depth evaluation showed, that these features enable pfasum substitution matrices to deliver significantly better homology search results and produce more accurate msas than conventional matrices. one of the best performing pfasum matrix for homologous sequence search is pfasum <dig>  especially when searching for distantly related homologs. pfasum <dig> also showed reasonable quality improvements for msa construction. we thus recommend pfasum <dig> as a general choice for these particular tasks.

additional files

additional file  <dig> 
figure s <dig>  progress of coverage for different pfasum matrix numbers. shown are the highest coverage values obtained for the different astral subsets for a given clustering threshold, regardless of the gap parameter settings. 

 



additional file  <dig> 
figure s <dig>  pfasum <dig> matrix  constructed from all pfam seed alignments  with a 31% sequence similarity threshold. 

 



additional file  <dig> 
figure s <dig>  pfasum <dig> matrix  constructed from all pfam seed alignments  with a 43% sequence similarity threshold. 

 



additional file  <dig> 
figure s <dig>  pfasum <dig> matrix  constructed from all pfam seed alignments  with a 60% sequence similarity threshold. 

 



additional file  <dig> 
table s <dig>  table of standard search matrices with their relative entropy as listed in fasta . comparable pfasum substitution matrices are listed with their respective entropy. note, we list entries with n/a where no comparable pfasum matrix can be found due to the distribution of entropies of possible pfasum matrices. no matrix entropy is listed for optima <dig> and md matrices. 

 



additional file  <dig> 
table s <dig>  table of gap parameters used for matrices at similar entropy levels that resulted in the highest coverage. 

 



additional file  <dig> 
table s <dig>  table of z-score values for the performance comparison of standard search matrices with their pfasum counterparts based on relative entropy. non-significant z-scores based on the 95% percentile are highlighted as bold. 

 



additional file  <dig> 
table s <dig>  table of all substitution matrices in the homology search evaluation showing their highest coverage and their corresponding gap parameters for all three databases. 

 



additional file  <dig> 
table s <dig>  table of z-score values for the comparison between pfasum search matrices and standard search matrices on the three different astral datasets. z-scores with |z|≥ <dig>  represent statistically significant underlying distributions at the 95% confidence interval. non-significant z-scores are highlight in red. 

 



additional file  <dig> 
table s <dig>  average q-score q¯ for the sabmark alignments, split between superfamily alignments and so-called “twilight zone” alignments. matrices with the highest performances are highlighted in bold. 

 


electronic supplementary material

the online version of this article  contains supplementary material, which is available to authorized users.

