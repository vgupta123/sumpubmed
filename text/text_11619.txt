BACKGROUND
protein structure is highly related to protein function. a single mutation on the amino acid residue may cause a severe change in the whole protein structure and thus, lead to disruption of function. a well-known instance is the sickle cell anemia, which is caused by a single mutation from glutamate to valine at the sixth position of the hemoglobin sequence, leading to abnormal polymerization of hemoglobin and distorting the shape of red blood cells  <cit> ; single amino acid mutation could also change the structural stability of a protein by making a smaller free energy change  after folding, while the difference in folding free energy change between wild type and mutant protein  is often considered as an impact factor of protein stability changes  <cit> . from the viewpoint of protein design, it will be very helpful if researchers could accurately predict changes in protein stability resulting from amino acid mutations without actually doing experiments  <cit> . if the mechanism by which a single site mutation influences protein stability could be revealed, protein designers might be able to design novel proteins or modify existing enzymes into more efficient, thermal-stable forms, which are ideal for biochemical research and industrial applications in two ways: first, a thermal-stable enzyme could function well in high temperature environment and therefore, reveal higher efficiency due to the relatively higher temperature; second, a structurally stable protein could have longer a half life than relatively unstable ones, meaning a longer usage time, which could economize the use of enzymes.

as the data regarding protein stability changes based on residue mutations is collected, a comprehensive and integrated database for protein thermodynamic parameters is built and published. protherm is constructed and can be queried by using a web-based interface http://gibk <dig> bio.kyutech.ac.jp/jouhou/protherm/protherm.html. all the data collected in protherm is all validated through actual experiment and collect from published original articles. in this database, researchers access information on the mutant protein, experimental methods and conditions, thermodynamic parameters, and literature information. due to the richness of data, protherm has been a valuable resource for researchers trying to know more about the protein folding mechanism and protein stability changes  <cit> . in the past decades, many of the available prediction methods designed for predicting protein stability changes. some of these researched the physical potential  <cit> , some were based on statistical potentials  <cit>  and some on empirical approaches that combined physical and statistical potentials to confer how the protein stability would change upon mutations  <cit> ; still others were based on machine learning theories, by converting the energy and environment parameters into digital inputs for different methods such as support vector machine, neural network, decision tree and random forest  <cit> . nowadays, there are many web-based prediction tools available, and each of them has its own capabilities and advantages, although none of them is perfect. as different predictors give conflicting results, it may be difficult for the user to decide which result is correct. an integrated predictor could relieve the user from such dilemma  <cit> .

in this study, we construct an integrated predictor, istable, which uses a support vector machine  to predict protein stability changes upon single amino acid residue mutations. integration of predictors helps to combine results from different predictors and use the power of meta predictions to perform better than any single method alone. considering the effects of nonlocal interactions, most prediction methods need three-dimensional information on the protein in order to predict stability changes; however, recent research has proven that sequence information can also be used to effectively predict a mutation's effects  <cit> . we collected the prediction results from different types of predictors used for constructing istable by submitting a compiled dataset to them, and applied the sequence information together as inputs for svm training. when the user submits a new prediction task, istable will determine whether the mutation is a stabilizing or destabilizing mutant. as previous works have mentioned, correctly predicting the direction of the stability change is more relevant than knowing its magnitude  <cit> .

in the construction of istable, five web-based prediction tools were chosen as element predictors: i-mutant <dig>   <cit> , mupro  <cit> , auto-mute  <cit> , popmusic <dig>   <cit> , and cupsat  <cit> . from these predictors, seven models were chosen for in-model training, as described later. during istable training, we found that the element predictors usually performed well when handling destabilizing mutations, but when it came to stabilizing mutations, the element predictors did not show very satisfying performance, leading to a high specificity combined with a relatively low sensitivity. after training, we designed two different prediction strategies for users that provided two formats of input data. both showed better prediction performance than all of the other element predictors, which was especially apparent when predicting the effects of stabilizing mutations. moreover, we undertook various analyses to evaluate istable in order to make it more precise for user applications. the constructed istable web-based tool, which provides two strategies for prediction, is available at http://predictor.nchu.edu.tw/istable/.

methods
compilation of training datasets
the compilation of our training dataset can be divided into six steps, which are summarized in figure  <dig> 

step  <dig> collection of training data

two datasets, collected from protherm, were used for our model training: the first is capriotti's training set used for the construction of i-mutant <dig>  , which includes data from  <dig> mutation sites of  <dig> proteins; this dataset is named s <dig> for convenience.

five types of information can be obtained from these two datasets:

1) the id of the protein corresponds to its protein data bank  id, which allows element predictors to obtain 3d information for proteins by getting the structure data .

2) the site of mutation and the residue site of the native and mutant proteins.

3) the temperature used in the experiment.

4) the ph used in the experiment.

5) the relative stability change of mutant proteins , an index of stability change that has been used in previous studies.

step  <dig> deletion of redundant data

in dataset s <dig>  many of the mutations share the same pdb ids and have the same mutation site and ddg value, resulting in redundant data that may lead to biases in training. in addition to these redundant sites, some data still has the same pdb id and mutation site, with only the ph and temperature differing slightly. we removed the redundant data and named the resulting dataset m <dig>  as there remained data from  <dig>  mutations of  <dig> proteins.

the s <dig> dataset shares the same pdb id and mutation site information as m <dig> for  <dig> mutations; we had to remove this data because we needed an unbiased training dataset. after having removed the redundant data, the remaining dataset was named m <dig> and contained data from  <dig>  mutations in  <dig> proteins.

step  <dig> definitions of positive and negative data

we defined the stabilizing data as positive  with a ddg value >  <dig>  and the destabilizing data as negative  with a ddg value < 0; this convention for ddg is consistent with i-mutant <dig>  and auto-mute. popmusic <dig>  uses a different convention for ddg, so we inverted the sign of ddg in m <dig> 

step  <dig> correction of sequence information

to make our predictor more adaptable so that it can handle novel protein mutations, we also included sequence data into training datasets m <dig> and m <dig>  the sequence information is presented as a segment of protein sequence centered on the mutated site, with window sizes ranging from  <dig> to  <dig> tested separately.

since the position of residues can be expressed as either absolute or relative, directly applying fasta text will lead to inconsistencies with the training data, which could cause problems when using i-mutant <dig>  and mupro. by checking the consistency of the sequence at the mutation site and the latest sequence text manually, we found several differences between relative and absolute positions of sequence first residue in proteins and corrected them to make the attached sequence information consistent with the training dataset; the final integrated dataset was called m <dig>  the datasets comprise m <dig>  m <dig>  and m <dig> can be fetched in additional file  <dig> 

step  <dig> classification of secondary structure and relative solvent accessibility

previous studies have mentioned the secondary structure and relative solvent accessibility  of the mutation site as effective predictors of the accuracy of protein stability-change prediction  <cit> . we analyzed the distribution of data based on the secondary structure and rsa of the mutation site. secondary structures were classified as helix , sheet , or other . its range determined the rsa: values between 0% and 20% were classified as "b" , between 20%~50% as "p"  and between 50% and 100% as "e" . this rsa classification is based upon those used in previous studies  <cit> .

step  <dig> categorization of proteins

the motivation for predicting protein stability changes is to find a mechanism to modify existing enzymes into more stable forms. we accessed the pdb to determine which superfamilies the proteins in the training dataset belonged to and found three major categories: enzymes, nucleic acid binding proteins, and protein-protein interaction related . the dataset can be fetched in additional file  <dig> 

element predictors
five element predictors were chosen:

 <dig>  i-mutant <dig>  adopts an svm model to approximate the ddg value of the protein and predicts the direction of stability change. both sequence  and structure  information is used in istable construction.

 <dig>  auto-mute computes the environmental disturbance caused by a single amino acid replacement. from the four models of prediction available in auto-mute, we chose the random forest   and support vector machine  strategies for our model construction.

 <dig>  mupro adopts an svm model to predict stability changes due to single-site mutations, primarily from sequential information, along with the use of optionally provided structural information. the result predicts only whether the change will lead to destabilization or not, without providing an actual ddg value. during the construction of istable, we found that the regression task and the neural network approaches were broken. we used the svm model  as an element predictor.

 <dig>  popmusic <dig>  applies an energy-based function and uses the volume change of a protein upon single amino acid mutation to predict the stability change.

 <dig>  cupsat predicts protein stability changes using structural environment-specific atom potentials and torsion angle potentials. the user can submit predictions by typing in the pdb id or uploading a custom pdb file.

summaries of the element predictors are given in table  <dig> 

list of chosen predictors used in the construction of istable with the corresponding references and urls.

obtaining prediction results from element predictors

when using i-mutant <dig> , in addition to the pdb id, the sequential strategy  was also applied, by choosing the direction-deciding prediction strategy; in the output form, we extracted the stability-change direction. when submitting to auto-mute, we entered the pdb id, mutation, temperature, ph value, and chain code . the prediction results using rf and svm were collected separately; we extracted the direction of stability change  in the output form. since mupro uses protein sequence as its input information, we obtained the sequence from a fasta file downloaded beforehand and then pasted the sequence into the input form and designated the site of mutation and the mutated amino acid code. the output form gives the user three types of prediction results, and we took all of them into consideration. for some reason, the regression and neural network models in the website did not work when constructing istable; the regression model always gave a result of "increase", and the neural network predictor always gave "decrease" as a result. presently, only the svm strategy is applied in the construction of istable. popmusic <dig>  accepts pdb id, chain code , and site information as input data; the predicted ddg is then extracted. cupsat accepts either the pdb id or the pdb file format in order to predict changes in stability, and we chose to use the uploaded pdb file. we obtained the secondary structure, the relative solvent accessibility of the mutated site, and the predicted ddg value. all the work described was completed with java program.

encoding schemes of support vector machine
after compared witch various algorithms, svm was selected as the learning model for istable, protein stability changes upon mutation can be predicted by using structural and sequential information, as in previous studies. in our research, we used the prediction results from the element predictors as input data with local sequence information included. the svm converted the data into a multi-dimension vector. after distributing the data into multi-dimension space, the svm determined a hyperplane used to split the data into different groups. the trained integrated predictor istable uses svm to predict the direction of stability change of the protein input data, that is, to determine whether the target is a stabilizing or a destabilizing mutant. in this work, we used libsvm   <dig>   <cit>  to achieve the svms implemented in this study, and the kernel adopted the radial basis function . while training, two crucial parameters were tuned to optimize the performance of prediction, the kernel parameter γ and the penalty parameter c. the value of γ and c were tuned to  <dig>  and  <dig>  separately.

when encoding our training data into the form used by the svm, the input data was constructed using two schemes: sequence scheme and website results scheme. in the sequence scheme, we converted sequences into several sets of 21-symbol coded input, namely, the  <dig> amino acid codes and an extra input representing the end-flanking fragment ; one set of the  <dig> inputs was used to represent the mutant residue after the mutation; the sequence scheme had ) inputs altogether. the website result scheme had seven sets of input  representing the prediction results of element predictors, each shown as a set of three inputs, with destabilizing results represented as "1-0-0" and stabilizing results represented as "0-0-1". as some prediction queries were not accessible to a specific site, we recorded this type of result as a null prediction, represented as "0-1-0". the trained predictor was evaluated with 5-fold cross-validation as the training dataset was split into five groups, with four groups used as training sets and one as the testing set by turns.

after istable was constructed using all of the schemes, we designed another model of predictor integration, named istable_seq, primarily for users handling protein sequences where no pdb id is available. the istable_seq model was constructed using a sequence scheme and using only the results of i-mutant_seq and mupro_svm of the website scheme, both of which use protein sequences as their inputs for prediction queries. the istable_seq was also trained and validated with 5-fold cross-validation.

framework of integrated predictor construction
predictor layer
it is the source of data needed for data integration, which, in this article, refers to the element predictors used: i-mutant_pdb, i-mutant_seq, auto-mute_rf, auto-mute_svm, mupro_svm, popmusic <dig>  and cupsat.

a. adapter: the interface uses the java httpunit suite to convert information between the in-put data and the predictors' input formats.

b. website: i-mutant_pdb, i-mutant_seq, auto-mute_rf, auto-mute_svm, mu-pro_svm, popmusic <dig>  and cupsat.

data visualization layer
it is the layer to present a graphical user interface  and output the prediction result, which can be divided into two modules:

a. gui: through the use of a jsp website and javascript, it provides users with an interface for inputs and results in webpage form.

b. result visualization: a java program, responsible for integrating the prediction result and adding webpage tags for result output.

coordinator layer
it is the coordinator between the predictor and data visualization layers. as users input parameters through the visualization layer gui, the coordinator layer can receive the parameters and send them to the predictor layer at the same time. it can then receive results from the predictor layer to complete the prediction of stability change. the coordinator layer can be divided into three modules:

a. prediction: executes prediction mechanism using the svm method described before.

b. repository: deposits the prediction results from the element predictors.

c. i/o dispatcher: responsible for sequential actions after receiving parameters from users; collects results from element predictors, deposits data, and coordinates the prediction work.

prediction progress of istable
performance assessment
correct predictions of positive and negative data have different meanings because the effects of mutation are not always detrimental to protein function. one of the purposes of predicting protein stability change is to identify mechanisms of structural stability change upon single amino acid mutation; another goal is to apply this knowledge to protein design in order to modify protein into more stable and thermal-tolerant forms. since it is equally important to understand the mechanisms underlying stabilizing and destabilizing mutations, we expect an integrated predictor to make correct predictions in both cases. since the minority result could be the right answer, we want to prove that istable, with svm training, would know right from wrong and not just pick the majority answer. in addition, accuracy , sensitivity , specificity , and the matthews correlation coefficient  were used to evaluate the predictive ability of each system. four measures were defined:

 acc=tp+tntp+fp+tn+fn,sn=tptp+fn,sp=tntn+fp 

and

 mcc=-tp+fntn+fptp+fptn+fn 

where tp, fp, fn and tn are true positives, false positives, false negatives, and true negatives, respectively. sn and sp represent the rate of true positives and true negatives respectively. acc is the overall accuracy of prediction. additionally, mcc is a measure of the quality of the classifications, and the value may range between - <dig>  and + <dig> , with  <dig> denoting a random prediction.

RESULTS
performance on the m <dig>  m <dig> and m <dig> datasets
after construction of the integrated predictor istable, we first compared the performances of istable and the element predictors using two different datasets. the results are presented separately in tables  <dig> and  <dig>  in both datasets, istable showed obvious improvement in sensitivity, accuracy and mcc. the performance using dataset m <dig> is worth mentioning. while other predictors have shown sensitivity values that average lower than  <dig>  and mcc values lower than  <dig> , istable reached a sensitivity score of  <dig>  and a mcc score of  <dig> . during our observations, we found that the element predictors made many more "negative" predictions than "positive" ones, leading to high specificity, but universally low sensitivity for the element predictors.

i-mutant_pdb: i-mutant <dig>  prediction strategy using pdb id.

i-mutant_seq: i-mutant <dig>  prediction strategy using protein sequence.

auto-mute_rf: auto-mute random forest prediction model.

auto-mute_svm: auto-mute svm prediction model.

mupro_ svm: mupro svm prediction model.

based on the objective, we wanted to construct a predictor that could perform well using both positive and negative data. the mcc values show that istable has the best overall performance on m1311; the results obtained from m <dig> show that the performances of the element predictors are lower than those in m <dig>  especially in the case of i-mutant <dig> , auto-mute and mupro. this may be related to the training datasets used in their construction; the training data for mupro was extracted from capriotti's training set s <dig> for neural networks, and auto-mute's training data was extracted and edited from s <dig>  originally the same as that of i-mutant <dig> . as the m <dig> dataset is similar to their training dataset, the three element predictors showed performances consistent with those from their training. the performances using the dataset m <dig> indicate that these three element predictors might have relatively lower performances when using new data not employed during previous training. consistent with the fact that the m <dig> dataset was extracted from popmusic <dig> 's training data m <dig>  we observed the performance of popmusic <dig> , when using m <dig>  to be much better than with m <dig>  we tried different dataset sources, and istable showed better prediction performance than every other element predictor. when using the same training data, istable still showed obvious improvements in performance, especially with stabilizing mutants.

after comparing the performances of istable and the element predictors on two datasets, we wanted to prove that training istable with large amounts of data would give the integrated predictor a stronger capacity to deal with new data. we checked the performances of all the predictors with the mixed dataset m <dig>  which is shown in table  <dig>  we see that the specificity of istable is sometimes lower than several of the element predictors; however, the overall performance is still better than the element predictors. through table  <dig>  we can see that the integrated predictor istable showed obviously improved performance with positive data, with the highest sensitivity among all of the predictors.

to validate istable and compare it with other combination methods, i.e., radial basis function network , random forest , neural networks , bayesian network , and majority voting  <cit>  with respect to predicting protein stability changes in dataset m <dig> . the mcc of istable, rf, and nn are all over  <dig> ; the mcc of bn and mv are both between  <dig>  and  <dig> ; however, the mcc of rbfn is below  <dig> . sn and sp in our study are both not the highest score to other combination methods; even so, istable showed the best performance of overall evaluation to integrate off-the-shelf predictors for protein stability changes.

seq: sequence scheme; ws: website result scheme

istable was also trained and validated, using support vector regression, to predict the value of free energy stability change by integrating the ddg value fetched from i-mutant_pdb, auto-mute, popmusic, and cupsat. the correlation between the predicted and the observed ddg is  <dig> , with a standard error of  <dig>  kcal/mol, when the method is structure based . on the other hand, only i-mutant_seq provides the predicted ddg value in sequence based; therefore, istable_seq just shows the ddg value generated by i-mutant_seq.

evaluation of sequence scheme
after comparing the performances of istable and the element predictors with the integrated data-set m <dig> in order to validate the actual effects of using the sequence scheme, we assessed the performance of the integrated predictor using different combinations: 1) sequence and website results ; 2) svm using only the results from element predictors; 3) svm using sequence and website results, without using auto-mute_rf, the predictor with the best performance among element predictors, but also the slowest to finish the prediction task; and 4) svm using website results only, without auto-mute_rf. the purpose of checking the third and fourth strategies was to determine the power of the sequence scheme. since auto-mute_rf is the only element predictor with an mcc value over 50%, we wanted to see if the integrated predictor would continue having an mcc value over 60% or would it drop significantly without the use of sequential information by dropping auto-mute_rf. the result is shown in table  <dig>  combination  <dig>  the same as shown before, performed better than combination  <dig>  which uses only website results as svm inputs, indicating that the addition of sequential information could provide increased power when the element predictors are not accurate enough to produce accurate results. on the other hand, combination  <dig> performed much better than combination  <dig> without using auto-mute_rf; this reveals the power of the sequence scheme: while the six element predictors could only achieve an mcc value of less than  <dig> , with the use of the sequence scheme, the integrated predictor could achieve an mcc value of  <dig> , an obvious improvement.

seq: sequence scheme; ws: website result scheme

performance of the istable_seq strategy with m3131
for users with novel proteins that lack available structural information, istable provides a prediction strategy that takes amino acid sequences as inputs. the prediction result is presented in table  <dig>  by integrating the results of the sequential prediction models of i-mutant <dig>  and mupro with an extra sequential scheme, the istable_seq model showed a performance noticeably higher than the two models we used.

structural analysis of predictors' performances
as mentioned, the secondary structure and rsa of the mutated site could influence the predictor's performance. therefore, we analyzed the performance of istable with mutations within different secondary structures and rsa ranges, and compared the results with the element predictors used. the results obtained from different kinds of mutants are presented in tables  <dig> and  <dig>  with respect to secondary structure, istable showed the best prediction performance among all the predictors; for some reason, the performance of istable in the case of mutants with secondary structures "other" than helixes and sheets was relatively lower than in the presence of these two structures; this may be due to the irregular structures of loops and turns. performance with β sheets showed a higher mcc than with helix and coil/turn structures, which is consistent with previous research  <cit> . this may be caused by the presence of residues in β-strand segments that are close in space, but far away in sequence  <cit> . when analyzing the performance of istable for different rsa ranges, we found that istable performs best in buried , partially buried  and exposed  regions. among the three ranges of rsa, istable showed the high performance in partially buried region , which is consistent with dr. gromiha's previous research  <cit> ; the sequence and structure information of partially buried mutations were very important for predicting stability changes, but did not very high correlation for buried mutations. on the other hand, dr. gromiha indicated buried mutation within β-strand segments correlated better than did those in α-helical segments; istable, therefore, brought higher sensitivity than other element predictors at buried mutations.

helix: α helix; sheet: β sheet; other: turns and coil.

the influence of window size on predictor performance
in previous research on constructing novel predictors, investigators have tried different lengths of protein sequence centered on the mutated site. mupro chose  <dig> as the best window size, while i-mutant <dig>  chose  <dig>  we compared the performances of istable with different window sizes using the sequence scheme. the result of the comparison is shown in figure  <dig>  as shown, a window size of  <dig> amino acids centered on the mutated site performed best in terms of both accuracy  and mcc . based on this comparison, a window size  <dig> was selected for use in the sequence scheme of istable.

performance with different protein superfamilies and experimental conditions
protein structure is closely related to function, and alteration of protein structure as the result of mutation may lead to disruption of biological function. we classified the proteins in our training dataset into their corresponding superfamilies, as previously mentioned. we chose three major categories  of protein superfamilies to determine how istable would perform in terms of prediction ability when the training dataset is limited. we used the three categories as independent training sets for istable training. each set was split into five subsets and used in 5-fold cross-validation for istable. the performance results with the three categories of proteins are shown in table  <dig>  as shown, istable performs better than any of the element predictors for the three different categories of proteins. in the enzyme and protein-protein interaction categories, with limited data availability, istable did not perform as well as with the m3131-trained model, but in the nucleic acid binding protein category, istable showed an obvious performance improvement that was clearly superior to the element predictors. in this case, although the performance of istable is limited by the prediction power of the element predictors, we still demonstrated that the combination of sequence and website result schemes could provide noticeable improvements in prediction performance.

we observed the performance of each predictor under a variety of ph and temperature ranges. table  <dig> was shown that istable and auto-mute_rf have better performance than other element predictors when ph < =  <dig> or ph >  <dig>  these two predictors have similar performance, however, istable have more excellent accuracy than auto-mute_rf in the condition of temperature < =  <dig>  finally, it is worth mentioning that istable is the best choice predictor for predicting protein stability changes when ph between  <dig> and  <dig> 

CONCLUSIONS
the power of the integrated predictor
compared with various machine learning methods and element predictors, istable successfully integrated sequence and website result scheme to promote the predictive performance of protein stability changes. when synergistic method was taken, we should consider some issues; 1) the input and output format are not all the same from different element predictors; 2) the evaluation of the prediction results of each element predictor; and 3) the improvement of the overall performance of synergistic systems. majority voting model is one kind of popular synergistic method, which is the frequently strategy adopted by biologists when they must to obtain the answer from a lot of prediction tools. however, the prediction performance of the element predictor of auto-mute_rf and istable are much better than majority voting with the above 50% mcc in our study, which because majority voting does not take into account confidence measure in the prediction results from different element predictor. besides, istable is a prediction system based on the synergistic method and constructed according to the grid computing architecture; therefore, istable has the properties of software reusability and computing resources reduction.

on the other hand, the sequence scheme provides the information of local interaction; however, website result scheme also includes the non-local interaction information by the element predictors of popmusic <dig>  with the folding free energy changes and cupsat with atom potentials. only considered sequence as input that caused istable_seq does not include non-local information; furthermore, just two element predictors can be adopted, therefore, the prediction performance of istable_seq is less than the that of istable at least 10% of mcc.

prediction tool available on website
the trained predictor istable is available at http://predictor.nchu.edu.tw/istable/. users can access two models of prediction: istable and istable_seq. for predicting mutations in proteins with available 3-d structure information in the pdb, users can input the pdb id to apply the istable model. if the user has proteins they interested in that have an available sequence, but are not available in pdb for their structure information, the istable_seq model would be the ideal choice for them.

availability and requirements
• project name: istable

• project home page: http://predictor.nchu.edu.tw/istable

• operating system: platform independent 

• programming language: java , php 

• other requirements: libsvm

• license: none

• any restrictions to use by non-academics: none

competing interests
the authors declare that they have no competing interests.

authors' contributions
cwc wrote the experimental programs, participated in the experimental design, and constructed the istable website. jl compiled the data set, participated in the experimental design, and wrote the manuscript. ywc conceived of the study, participated in its design and coordination, and drafted the manuscript. all authors read and approved the manuscript.

declarations
the publication costs for this article were funded by the corresponding author's institution and the national science council, taiwan, republic of china.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2013: selected articles from the eleventh asia pacific bioinformatics conference : bioinformatics. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/14/s <dig> 

supplementary material
additional file 1
m3131_decreased and m3131_increased show the integrated training data m <dig> separated into positive  dataset and negative  dataset. istable_comparison_results presents the different results of training conditions and comparisons of different predictors.

click here for file

 additional file 2
superfamily_m <dig> and superfamily_m <dig> record the superfamilies refer to the pdb ids in m1311and m1820datasets. sf_dna binding, sf_enzyme, and sf_protein-protein-interaction list the pdb ids belong to three major categories.

click here for file

 acknowledgements
this work was supported in part by the national science council, taiwan, republic of china, under grants nsc 100-2221-e-005- <dig> and nsc 101-2221-e-005- <dig> 
