BACKGROUND
the invariant lineage of the nematode c. elegans  <cit>  can potentially be exploited to capture detailed information on the location and timing of expression for the genes expressed in the early embryo. in addition, changes in the lineage resulting from mutations or rnai knockdowns of gene function can provide functional information about genes. to use the lineage with high throughput, one must capture images in sufficient detail and subject those images to automated lineaging.

bao et al <cit>  described a procedure for generating lineages automatically. a ubiquitously expressed histone-gfp fusion protein is used to label nuclei in the developing embryo. images sets are captured once a minute by a confocal microscope, with each set containing up to  <dig> focal planes through the full depth of the embryo. the program starrynite analyzes the images to locate all the nuclei at each time point and to establish the linkage of nuclei from time point to time point. the resulting annotation, which implicitly establishes the lineage of the embryo, is written to a series of files, called the nuclei files, one for each time point.

a separate program, acetree, was written to facilitate viewing, editing and interpretation of the starrynite output and is described here. this program is separate from starrynite, with distinct requirements. starrynite was written in c with a minimal user interface because of the computationally intensive character of automated lineage extraction. the editing and interpretation tools required for acetree require robust and portable user interfaces and the ability to develop and test new tools rapidly, making java a logical choice. in addition, acetree can be used without starrynite output as an image viewer and manual lineaging tool, although it is not currently optimized for the latter task.

three other software packages exist that link image series and lineage trees. the most complete of these is simi biocell, which is optimized for manually lineaging of 4d differential-interference-contrast  image series and has been used effectively to demonstrate the striking insights that can be obtained by lineage analysis <cit> . angler was developed by the developers of acedb and is directed mainly at viewing and interpreting lineaged series with more reference to information stored in wormbase <cit> . virtual wormbase has both an educational goal and a research goal and embeds the idea of simulating the development process <cit> . these were all designed to deal with 4d dic image series and thus are not optimized for the specifics of gfp-histone image series.

we chose to develop a new program, acetree, rather than attempt to adapt an existing program for several reasons. the new program could be optimized for viewing fluorescence images, including "second color" images used to track gene expression throughout embryogenesis. the key data structure of acetree is identical with the nuclei files produced by starrynite, which facilitates the expected co-evolution of the programs as the project matures. in addition, acetree is being made available as an open source package supporting all major pc operating systems.

implementation
since computation speed is unlikely to be an issue in the user interface oriented acetree, a high-level language solution was sought. many biological analysis programs with user interface aspects are written in java and that language received the top consideration. two components were needed: a package for handling tiff images and a way to produce interactive trees. imagej <cit>  met the first requirement and provided extra features some of which have since been used to assist in handling the image series as they come from the microscope and to produce and view movies developed from images arising in acetree. the java class known as defaultmutabletreenode contains all the normal features of a tree data structure and the jtree class provides a convenient graphical user interface for it.

acetree is written in java version  <dig> . <dig>  for 3d representations the java3d module is required. image operations of acetree are derived from imagej and the ij.jar file is required. development is carried out in the open source eclipse platform  <cit> . for source distribution an ant  <cit>  build.xml file is provided. the program is packaged as a jar file and has been tested on conventional workstations using three different operating systems: linux; mac os x; windows.

RESULTS
program components
the normal operating mode of acetree is shown in figure  <dig> where the process of opening a set of data is complete and the user is viewing annotated images in the imagewindow and navigating among them using the main control. the title bar of the imagewindow contains a coded part, "t001-p17" which tells the user that this image is from time point  <dig> plane  <dig> of the image series under study, "081505". the underlying tiff image contains only a single gray scale "haze", with strong  clusters corresponding to the green fluorescent protein histone fusions. acetree shows this in the green plane of an rgb image and has added annotations.

the imaging protocol has in this case captured the four-cell stage of the embryo in the first time point. the basic image annotation consists of blue circles around the nuclei, which have been modelled as spheres. at any time, one of the cells will have the special designation of "current cell" and will have a white circle, in this case the aba cell. cell names are a basic element of the annotation scheme and acetree offers the user several ways to control which cells carry their names on the displayed images.

the main control, shown on the right in figure  <dig>  contains the following seven parts:

 <dig>  a menu bar some of whose application specific functions will be addressed herein.

 <dig>  a "jtree" representation of the lineage where aba is highlighted.

 <dig>  a text display window with information about the current cell being displayed.

 <dig>  a control that enables the user to bring up a particular cell at a particular time point.

 <dig>  a "movie" control that can be used to automatically sequence through the images tracking the current cell and its descendents.

 <dig>  a pad with  <dig> buttons. these buttons provide considerable control over navigation and the kinds of information shown with the image. the main navigation keys – next, prev, up, down – are mapped to the arrow keys on the keyboard.

 <dig>  a text window displaying the position of the mouse when it is within the image.

although it is not routinely needed during the study of an image series, acetree via its analyze..nucleiview menu presents the automated lineaging data structure on which all of the interaction and annotation is based. a sample of this display is shown in figure  <dig> 

the figure shows the annotations from times  <dig> and  <dig> corresponding to the division of aba and abp, the results of which are shown in figure  <dig>  the identity, x, y, z, and size columns are readily understood as the name, position, and diameter in pixels of the identified nucleus. the pred, succ <dig>  and succ <dig> columns describe how nuclei at one time point relate to those at adjacent time points. in the absence of a division, succ <dig> is negative and succ <dig> contains the index of the continuing nucleus in the next time point. where a division was detected, succ <dig> and succ <dig> point to the two daughter cells in the next time point. in this case, the division of aba can thus be followed: the two daughters are located at indices  <dig> and  <dig> in the nuclei structure at time  <dig>  the propagation of names to daughters follows from the linkage using rules based on the relative locations of the daughters. this is the basis on which acetree has built its tree representation. the weight and rweight columns contain the summed intensity within the spherical representation of the nucleus for the green and red channel images, respectively.

cell tracking
tracking cells from image to image is a common need in analyzing lineaged image data. the "next" key on the keypad moves to the next image in time while tracking the "current cell". if the nucleus is moving in the z plane , then acetree adjusts, choosing the z plane image which is closest to the center of the nucleus. figure  <dig> shows the image window when tracking has reached time  <dig>  tracking can be dismissed permitting the user to follow a sequence of images where the plane of the image remains fixed.

in the first time point following a division, the current cell designation will move to one of the daughters of the divided cell. here, the new "current cell" is abal: acetree has tracked the left daughter of the division of the aba cell. however, it also shows in cyan the sister cell, abar. the annotation in cyan advises that the nucleus of abar is centered in plane  <dig>  since we are looking at the plane  <dig> image, the cyan annotation is a "ghost nucleus" and in this case reassures us that the embryo has followed the left/right division pattern suggested by its canonical name. notice also that in the position previously occupied by abp we have abpl: both daughters of ab have divided at the same time,

there are multiple ways to select the current cell while studying an image series. the tree representation is "live". one can expand the tree to a cell of interest and left click on it in the tree to bring up the image at its "birth". alternatively, one can right click on it to bring it up just before its division or death. the cell selection panel can be used to bring up a given time point. any circle displayed in the image can be right clicked to make that cell the current cell and the tree display is updated correspondingly.

curating the automated lineage
acetree can be used to curate and edit lineaged data series such as those arising from starrynite. acetree accepts as its inputs the image series and the annotation files whose content was shown in figure  <dig>  if the series is edited, acetree creates a revised set of annotation files which would be used in subsequent studies of the data. the tools of the edit menu are provided for these purposes.

the specific situation shown in figure  <dig> shows cell epr just prior to its division into epra and eprp. the image clearly shows the metaphase plate and its orientation for the division along the anterior/posterior axis.

when a lineage is edited in such a way that cell linkage is changed from that in the original nuclei files, the tree representation must be rebuilt and cell naming must be redone. therefore, acetree contains the algorithms described by bao <cit>  to determine cell names upon division. these include the algorithm for determining the embryonic axes from the four founder cells and the subsequent divisions of aba and abp which provide the essential starting point for cell naming. therefore, it is possible to use acetree to manually lineage an image series and develop annotation files to be used in subsequent studies of the data although the editing tools are not optimal for such a purpose.

viewing embryonic lineage and morphology
the ability to generate automated lineages opens up the possibility of using the lineage as a phenotype in considering developmental changes induced by altered gene function. for this purpose, a tree that tracks the timing of cell divisions is necessary: we call it an ancestral tree. acetree provides this on its trees..ancestral tree menu. figure  <dig> shows two examples of such a tree where the ems sublineage is shown from a wild type embryo on the left and the corresponding lineage for an embryo where rnai has been used to inhibit the expression of gene lit- <dig> on the right. the time points from the two different data series were chosen at a point where the total number of cells present is stable for several time points and the ab sublineage consists of  <dig> cells.

the modified embryo has  <dig> cells more than the wild type due to an extra division in the e lineage which would normally form the gut. with lit- <dig> function inhibited, the e cells adopt the fate of the ms lineage and the gut fails to form resulting in embryonic lethality <cit> . notice that the e and ms subtrees for the modified embryo are similar to each other and similar to the wild type ms sublineage but not the wild type e sublineage.

besides tracking the lineage of cells, the annotation scheme used here  describes the location and size of each nucleus. this raises the possibility of studying the morphology of the embryo in a 3d space filling model representation. acetree provides this in its view..3d view menu. figure  <dig> shows the results of that tool from each of the series discussed above: wild type embryo on the left and lit- <dig> inhibited embryo on the right. both views have been rotated so one sees the ventral side of the embryo with the anterior on the left. the nuclei are color coded so the main lineages can be distinguished: aba daughters in gray; abp in white; e in red; ms in blue; c in yellow; d in pink; germ line in green.

at this stage the four e cells  of the wild type embryo have migrated to the interior beginning the process of gut formation. the space filling model of the lit- <dig> inhibited embryo shows the e cells remaining on the outside of the embryo and matching in number the ms cells. aside from the abnormal gastrulation, the positioning of other sublineages has also been altered. acetree offers considerable freedom to select the colors of different sublineages and the orientation of the model to explore morphology.

tracking gene expression
tracking the expression of individual genes in time and cellular location is of major interest to developmental biologists. the automated lineaging technique can be used to track expression of genes of interest by introducing a nuclear localized red fluorescent reporter of a gene's promoter activity. the imaging system then collects a parallel set of images in the red channel and the location and size information in the gfp-derived annotations is used to compute the red intensity of each nucleus.

in such cases, acetree offers several ways to view such information. in the normal viewing of images the red data is added to the red plane of the rgb imagewindow so non-expressing nuclei show up in green as usual and expressing nuclei show up in yellow. the user can choose to view only green or only red as well. to make the red expression available in a more interpretable way, the lineage tree can be colored according to the extent of red expression. figure  <dig> shows such a presentation for a data series where the tagged gene, pha- <dig>  is known to be expressed in the pharynx and gut of the developing embryo including the e lineage and sublineages of ms and ab <cit>  .

here, the tree branches are color coded to show the extent of red expression: if the cell is not expressing above the minimum threshold, the branch is shown in gray. for cells that are above the threshold the color starts at light green, getting darker, then black, then shades of red as the expression increases. in figure  <dig>  the entire lineage is captured and the overall character of gene expression is seen at a glance. the cell annotations are shown for every tenth leaf in the lineage. the user can adjust the spacing between lines and line thickness to explore things in more detail, but for detailed review, the tree version shown in figure  <dig> may be more effective. here, the msa sublineage is shown and all cells are named. for further exploration, these trees are "live" like the jtree so a click on a branch brings up the image corresponding to that cell and time and makes it the "current cell" in the main control where the red expression value is reported numerically.

on the left, each nucleus is colored according to the degree of red expression using the same scheme as in figure  <dig> except that nuclei that are not expressing are shown in transparent white. thus according to the data, all cells shown clearly are expressing the tagged gene, with the expression being especially high in those shown in red.

in the view on the right transparent white is again used, in this case for cells where, according to the literature, no expression is expected. within the groups of cells that are reported to express the gene of interest, the lineage color scheme is: abal in pink; abar in blue; e in yellow; msaa in magenta; msap in cyan. pairing the two 3d representations permits the investigator to consider the validity of the hypotheses about the location of gene expression in a very detailed way.

embryonic rotation
aspects of embryo morphology that are difficult to show in other ways can be vividly illustrated using tools available in acetree. the pattern of rotation of the developing embryo illustrates this. during normal development, the embryo has been reported to undergo two rigid-body rotations around its a-p axis <cit> . variability in the direction and magnitude of this rotation was reported by schnabel et al  <cit> . in figure  <dig> a series of 3d images drawn from the annotations is shown as viewed from the anterior/posterior axis with the dorsal on top. only cells from the abp lineage are shown and the time points –  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> – are just prior to the next round of divisions in the series. cells from the abpl sublineage are shown in red; abpr in blue. a clockwise rotation of about  <dig> degrees can be visualized as development proceeds.

one method of quantifying the angle is to visualize a line drawn between the center of mass of the abpr cells and that of the abpl cells. the angle of this line in the plane can then be plotted as shown in the left graph of figure  <dig>  the right side of the figure shows the total cell count in the embryo over time. the calculated angle increases clockwise relatively smoothly after the  <dig> cell stage of the embryo which occurred at about time  <dig> in the series.

CONCLUSIONS
bao et al  <cit>  described the lineaging protocol and presented the results of a series of  <dig> lineaged embryos, using the low error rate observed to establish the validity of the overall approach. the minimum requirement for acetree was that it facilitate curation and editing of the automated lineages. bao et al reported that an earlier version of acetree allowed curation and editing of a series through the  <dig> cell stage in about  <dig> hours and that an additional 2– <dig> hours were required to edit through the  <dig> cell stage. editing time is a function of both the quality of the starrynite output and the utility of acetree. a goal for future versions of acetree and starrynite should be to further expedite editing beyond the  <dig> cell stage.

the longer-term goal of enhancing the researcher's capability of extracting biological significance from the data is more difficult to quantify. in this regard, acetree is in a position similar to a number of software tools reported in the literature, especially those supporting the analysis of microarray data  <cit> . there, as here, the tools permit a combination of data clustering and tree representations, which are meant to guide the researcher through a complex dataset. in the final analysis, the clues obtained by using such tools form only a part of the evidence that leads to new knowledge. we are encouraged by the character of the examples shown here: the work with the lit- <dig> rnai treated embryo; the visualizations of the tagged gene; the embryonic rotation study. we remain open to suggestions for additional features deemed helpful by practicing researchers.

