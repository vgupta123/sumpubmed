BACKGROUND
searching for hypotheses about functional gene modules, co-regulated sets of genes and protein complexes, has been under intensive research effort given the current high-throughput data acquisition methods. traditionally only a single data type, gene expression or protein-protein interaction  data is used . recently also methods for combining relational interaction data and functional gene expression data have been studied, for example  <cit> .

ulitsky and shamir  <cit>  recently used similarities between gene expression patterns as a kind of interaction data between proteins. they combined these interactions with protein-protein interaction measurements in order to seek jointly active connected subnetworks . their novel computational method called matisse found biologically relevant modules better than a set of earlier methods .

another recent method  <cit>  uses a protein-protein interaction network to form prior constraints on the clustering of gene expression data. the method is an extension of markov random fields, called hidden modular random fields . the constraints improved performance in the task of finding functionally enriched modules, compared to using either data source alone. the hmof and matisse have recently been compared  <cit>  to a wide set of state-of-the-art methods, and hence they can be considered to be the best current methods.

we formulate a generative probabilistic model for combined gene expression and protein interaction data. the model thus naturally includes a noise model for both data types, which is missing from many other methods, such as matisse. protein-protein interaction data is known to be notoriously noisy  <cit> , and even manual curation may not be able to remove all uncertainties in the data. the specific probabilistic model family also allows nodes to inherently belong to several clusters at the same time, so we can interpret the results as overlapping functional modules. this overlap goes beyond standard mixture models to the so-called component models, in this case assuming that each interaction belongs to a specific module, and hence proteins to multiple modules. this is biologically sensible, as many genes and proteins are known to participate in multiple functions, and hence functional modules can overlap with each other. this feature is missing from both hmof and matisse.

the methods we propose here are based on a recently introduced generative model for graphs  <cit> . it assumes that the links, or here molecular interactions, can be explained by a set of latent components. in this paper we introduce ways of incorporating functional data related to the nodes, that is, the genes or proteins, into the model. the underlying assumption is that interacting genetic complexes or modules share functional properties in addition to being strongly interconnected. evidence for this feature has been found in humans  <cit>  and yeast  <cit> . in the paper we use the notions "interaction" and "link" interchangeably, as well as "gene" and "protein", assuming that there is a one-to-one relation between them.

RESULTS
methods and data
our models are based on the interaction component model   <cit> . we introduce two extensions for combining ppi and gene expression data in the model framework. in the first model variant  the expression data is transformed into additional interactions and in the second one  the expression is included in the generative process. the models are applied on a ppi data set from the yeast saccharomyces cerevisiae, combined with two different gene expression sets in order to seek functional gene modules. we compare our methods with the recently introduced hmof  <cit>  and matisse  <cit> . both methods combine interaction and expression data and have been proven to outperform a set of earlier methods that use only one of the data sources in the task of finding gene modules. the basic icm that uses only the protein interaction data is also included in the study for comparison. all the models give as a result a clustering for the genes.

our models provide, for each interaction membership, probabilities over the components. these probabilities can be interpreted as overlapping clusters where each node may be assigned to multiple clusters. we demonstrate this feature with an artificial data case study. however, as the other methods provide only single assignments of nodes to clusters, we transform the component memberships into a crisp clustering for the actual biological comparisons. this is done by simply assigning each gene to the most probable cluster.

matisse differs from the other methods in the sense that it leaves some genes out from the clustering and also infers the number of clusters automatically. due to the probabilistic nature of all the models, the number of clusters could be set automatically in several well-justifiable ways, such as cross-validation and different types of information criteria . for our methods a natural option would be to use a dirichlet process prior for the component distribution. dirichlet process is a common non-parametric prior for estimating the number of components based on the data .

however, since implementation of comparable model complexity control methods would be laborious in practice for some of the methods, we fix the number of clusters of the other methods to the median of  <dig> matisse runs to bias the results in favor of matisse, to make sure that the result is not due to the additional degrees of freedom we have in choosing the cluster sizes. we ran each method  <dig> times to obtain confidence intervals, resulting in a different set of clustered genes for each matisse run.

finding biologically relevant modules
our goal is to find biologically meaningful functional gene modules by clustering genes based on ppi and gene expression data. because only a small fraction of the true gene functions is known, the validation of the obtained clustering is not straightforward. the gene ontology   <cit>  annotation database is commonly used as a reference set for model validation, and we will use it as well.

in the first part of the model evaluation we choose a priori a set of standard gene classes from the go. we then use the classes for so-called external validation, by measuring how well the obtained clustering corresponds to the known classes. the motivation is that although the external classification is an imperfect description of the data, a better clustering should reflect it somewhat more. as a goodness measure we use perplexity of predicting the gene classes given the obtained clusters. we additionally complement the analysis with the commonly used go enrichment analysis to find how well our clusters correspond to other known gene annotations. finally, we validate the modules in terms of how well they overlap with known protein complexes.

agreement with standard gene classes
we computed perplexities comparing the module results to three different sets of standard gene classes, based on 1) all genes in the data, 2) those genes common to all matisse runs and 3) those genes appearing in at least one matisse run. the results are shown in figure  <dig> 

the perplexity results show that our three new methods  basically outperform the two comparison methods. difference to matisse is clear, which could in principle be due to matisse leaving nodes out from the clustering. we checked that this is not the case by using only those genes that appear in the matisse runs, which should give matisse an advantage in this sense, but the difference still remains clear . difference to hmof is smaller, and in one case hmof performs equally well to our methods.

out of the icm models, the variant where expression data is included as further links , is the best in all cases except one. somewhat surprisingly, icm that uses only ppi data seems to be better than icmg <dig> on the dna damage dataset.

gene ontology enrichment analysis
we complemented the validation with a commonly used gene ontology enrichment analysis. figure  <dig> shows the number of enriched modules and go classes as a function of the cutoff p-value for enrichments. matisse does not perform as well as the other methods in the enrichment analysis. the other four methods perform about equally well in the osmotic shock response data set, but in the dna damage data set our methods outperform hmof as well.

protein complexes
we finally measured how well the found modules match with known protein complexes. from the results, shown in figure  <dig>  it is evident that the first four methods find a significant amount of the protein complexes with the icm variant outperforming hmof to some extent, whereas matisse's performance is clearly worse. we checked that this was not due to matisse leaving part of the genes out of the clustering: the difference to the other methods was still clear when genes left out by matisse were discarded from the other methods too, before or after their analysis .

demonstration of a sample module
overlapping modules
we have now shown empirically that the icm methods perform well in the task of finding biologically relevant functional modules, outperforming two recently introduced methods that were designed for this particular task. we now further study the ability of our the methods to model and detect overlapping modules, that is, multiple assignments of nodes to modules.

we carry out the study on artificial data to guarantee that the ground truth is available. we generated a network of  <dig> modules with  <dig> nodes each. links were generated with inter- and intra-module link probabilities  <dig>  and  <dig> , respectively. additional links were then generated between the modules such that all modules shared two nodes with at least one other module. the resulting network contained  <dig> partially overlapping modules with 10- <dig> nodes each, and in total  <dig> links. for this data we can compare the icm and hmof with full weighting on network data . matisse can not be run with network data only. we set the number of modules for both methods to  <dig> 

we evaluated the predicted node assignments obtained by the methods against the known assignments, in which most nodes are assigned to exactly one module with probability  <dig>  and those shared by two modules belong to each with probability  <dig> . for icm we use the probabilistic memberships p  and for hmof we simply have the binary assignments.

the distance measure in the comparisons was the simple euclidean distance between the node membership distributions. both methods were run  <dig> times, but the variation was vanishingly small. the distances were  <dig>  for icm and  <dig>  for hmof, suggesting that icm benefits from the probabilistic assignments of nodes to modules. we note that icm with the memberships binarized gives exactly the same results as hmof.

CONCLUSIONS
we have used a generative model of relational data to take into account the uncertainty in ppi data when searching for overlapping functional modules of genes. we have also introduced two approaches for combining gene expression data with the interaction data. experiments with data from the budding yeast suggest that generative modeling of combined expression and interaction data is advantageous. the proposed models outperformed the state-of-the-art methods, hmof and matisse, which in turn have recently been shown to outperform the relevant alternatives.

in its current form, icm is able to detect modules with relatively large number of missing links. what is missing, however, is a suitable noise model for inter-cluster links. this extension will be considered in the future.

we noticed that including the gene expression data in the analysis resulted in most cases only in minor improvements. others have come to similar conclusions  <cit> . there are many possible explanations for this. the effect might really be biological; the functional gene modules may tend to be interconnected more often than they do share similar expression profiles. the go annotations used for evaluation may also be biased towards ppi data.

another reason can also be that the way the models treat gene expression should still be improved. for example, our approaches or the k-means-based modeling used by shiga et al.  <cit>  have chosen to be relatively simple for computational reasons. our model variant icmg <dig> assumes that there are global components responsible for the behavior of a large group of genes under a large number of different conditions, which is probably an oversimplification. still it seems to work to some extent. taking the variation across the different conditions more carefully into account could improve the benefits of using expression data.

it is also possible that only a small part of the expression data is actually relevant for the task. for example, in our model variant icmg <dig> we effectively use only the most correlated pairs of gene expression profiles, and the results seem to consistently outperform the plain icm model, which does not use the expression.

we only recently found out about a related method called detmod  <cit>  that addresses many important aspects of detecting functional modules, such as automated detection of the number of modules and potential overlap of modules. however, detmod does not have a noise model for the protein interaction data and hence is dependent on its good quality. in future work the methods should be compared and best insights of both combined.

finally, we believe that the ability of modeling functional "roles" of proteins, by assuming that their different interactions may belong to different modules, is a promising direction for future research. icm is able to find such roles, as we demonstrated on artificial data, and is empirically better than alternatives even when this property is not utilized. next we should study the discovered roles in more detail.

