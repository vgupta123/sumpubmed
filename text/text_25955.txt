BACKGROUND
while named entity recognition  and relation/event extraction are regarded as standard tasks for biomedical information extraction , coreference resolution
 <cit>  is being recognized more and more as an important component of ie to achieve a higher performance. coreference structure is so abundant in natural language text, that without properly dealing with it, it is often difficult to capture important information pieces in text. it was also a lesson from the bionlp shared task   <dig>  which was a community-wide campaign of bioie system development and evaluation
 <cit> , that coreference structures in biomedical text substantially hinder the progress of fine-grained ie. readers are referred to
 <cit>  for details about bionlp-st. there have been also several attempts for coreference resolution for ie, most of which are focused on newswire texts
 <cit> .

to address the problem of coreference resolution in molecular biology literature, the protein coreference  task was arranged in bionlp-st  <dig>  figure
 <dig> shows an example text segmented into four sentences, s <dig> - s <dig>  where coreferential expressions are shown in brackets. in the task, particularly references to proteins were the primary target of coreference resolution. in the figure, protein names p <dig> - p <dig> are highlighted in bold-face. in the example, the definite-noun-phrase expression, this transcription factor , is considered coreferential with the protein mention p <dig> . without knowing this coreference relation, it becomes difficult to capture the information written in the phrase, nuclear exclusion of this transcription factor, which is a localization of p <dig> , according to the framework of bionlp-st. we call the specific protein reference contained in the antecedent expression, e.g., p <dig> in nf-kappa b p <dig>  the antecedent protein. coreferential expressions which do not involve antecedent proteins are out of the focus of the coref task, e.g., t30→t <dig>  in figure, only the coreferences, t29→t <dig> and t32→t <dig> are the target of extraction, as they involve antecedent proteins.

the best-performing system in the coref shared task found  <dig> % of the anaphoric protein references at the precision of  <dig> % . the system is basically a re-engineered version of existing coreference resolution system that was originally developed for the newswire domain. while the core resolution engine was remained as the same, modifications were mostly made to the processing for markable detection and the post-processing for outputting coreference links according to the task definition
 <cit> . when it was evaluated using the muc score
 <cit> , the system’s performance dropped from  <dig> % for newspaper texts to  <dig> % for biology texts
 <cit> , which was perhaps caused by domain differences.

a detailed analysis on the final submission to the coref task was reported
 <cit> , of which the results of the top  <dig> systems are also shown in table
 <dig>  in this analysis, the submitted predictions on the test data set of the coref shared task are analyzed according to four types of anaphoric expressions: dnp for definite noun phrases, relat for relative pronouns, pron for other pronouns including personal, possessive, and demonstrative pronouns, and other for catch-all type. examples of the coreference types are outlined below: 

“the phosphorylation status of  had significant effects on the ability of  to bind to cd <dig> ” 

the first four rows show the top performances in bionlp-st  <dig>  row  <dig>   <dig> and  <dig> are our system results with different combination of rules.

“subnuclear fractionation reveals that there are   appear to differ with respect to dna binding activity,” 

“this ability of  to facilitate promoter occupation is undissociable from  transactivation potential,” 

an analysis of the results indicated that the best resolution results for definite noun phrases , and several pronouns of the pron type was  <dig> % f-score and  <dig> % f-score, respectively; the scores were much lower than the f-score for relative pronouns , which yielded a  <dig> % f-score. thus, it can be inferred that it is more difficult to resolve definite noun phrases and pronouns than relative pronouns.

in this paper, we compare the contributions of different features in coreference resolution: discourse preference, number-agreement, and domain-specific semantic information. while discourse preference and number-agreement are two features that are often used in coreference resolution, and easy to be transferred across different domains, the use of domain-specific semantic information is varied
 <cit> . we implemented a protein coreference system that makes use of syntactic information from the parser output, and protein-indicated information encoded in rule-based semantic classification. experimental results showed that domain-specific semantic information is important for coreference resolution, and that simple semantic classification using semantic features helped our system to outperform the best-reported system results in the shared task.

related works
several works on anaphora and coreference resolution have been carried out for the biological domain. castano et al.
 <cit>  used a salience measure to select the best candidate antecedent. a main finding of this work is that the coercion of a verb on the semantic types of its argument plays an important role in the pronoun resolution for this domain.  <dig> and  <dig> medline abstracts were used for system development and test, respectively. kim et al.
 <cit>  introduced bioar, a biomedical anaphora resolution system, a system which relates entity mentions in text with their corresponding swiss-prot entries. this system resolves pronouns by using heuristic rules and seven patterns for parallelism. gasperin and briscoe
 <cit>  solved coreference resolution for full-text biological articles. this work employed a complex naive-bayes model to train a multi-class classifer to classify the relation of expression pair. recently, markov logic network 
 <cit>  has been employed in yoshikawa et al.
 <cit>  to predict coreference relation jointly with event extraction. they compared a pairwise classifier model, which is similar to soon’s model
 <cit> , with the mln model, and concluded that latter is better for event extraction application. however, it is difficult to fairly compare different anaphora/coreference resolution. bionlp-st  <dig> included a task for coreference resolution with an aim to implement a fair evaluation and comparison of protein coreference resolution
 <cit> .

methods
in order to acquire an insight into the coreference resolution problem, we took a rule-based approach, analyzing the training data of bionlp-st  <dig> coref task. the performance of the system evaluated on the official test data set of the coref task shows a significant improvement over the official winning system of the task. this section presents the overview and the performance evaluation of our system.

system overview
figure
 <dig> shows the overall design of the system, which includes five main components: preprocessing, markable detection, anaphor selection, antecedent candidate selection, and antecedent prediction. processing of each component is briefly described below.


step  <dig> - preprocessing: the input text is preprocessed using nlp tools for sentence segmentation, and syntactic parsing. we used the genia sentence splitter and enju parsera <cit>  for sentence segmentation and syntactic parsing, respectively. row  <dig> in the example of table
 <dig> shows three sentences as the output from the genia sentence splitter, and noun phrases as the output from the enju parser for the sentence, s <dig>  due to the limited space, only a part of the phrases are shown in the table. the full parse tree for this sentence is separately shown in figure
 <dig> 

the resulted items of each step are shown in square brackets, and the whole syntactic parse tree of the sentence s <dig> is shown in a separated figure.

step  <dig> - markable detection: text chunks that are candidate coreferential expressions, which are also called markables following the jargon of muc- <dig>  are collected. for the set of markables, noun phrases, which do not include a subordinate clause, are collected as they are analyzed by a syntactic parser . pronouns are also collected as markables. then, for chunks that share the same head-word, which is normally the main noun of a noun phrase, only the longest chunk is taken. since the enju parser outputs head-word information for every noun phrase, we make use of this information for our processing, without any modification. the third row of table
 <dig> shows the result of markable detection for the sample text. in the sentence s <dig>  three noun phrases recognized by the nx and np tags of the enju output, role, role for c-myc in apoptosis, and this role for c-myc in apoptosis  share the same head-word role; thus, only the longest noun phrase this role for c-myc in apoptosis is selected. however, between studies and studies using.. apoptosis, the former chunk is selected, since the latter contains a subordinate clause.

step  <dig> - anaphor selection: candidate anaphoric expressions, which are basically pronouns and definite noun phrases are determined. a minority of anaphors are indefinite noun phrases or entity names, which act as appositions. the system first considers all pronouns and definite noun phrases in the markable set as anaphors. then, several filters are applied to remove anaphors that are not relevant to the task definition. we implemented two types of filters: syntactic and semantic. syntactic filters are used to filter out pleonastic its, or pronouns, like he, she, which are not expected to refer to proteins. moreover, because our task focuses on protein references, semantic filters can be used to filter out non-protein anaphors at this stage. in practice, for definite noun phrase type of anaphors, this is accomplished, by using a list of possible head-words of protein references; for pronouns, their context words are used. more details of these methods can be found in the following section.

step  <dig> - antecedent candidate selection: for each anaphor, this component collects the antecedent candidates from the preceding expressions. one of the candidates will become the response antecedent, as a result of the antecedent prediction step. in theory, all expressions in the set of markables can become antecedent candidates; however, too many candidates makes it difficult to achieve correct antecedent prediction. moreover, we also filter out candidates that violate syntactic or semantic constraints raised by the anaphor. in our system, this is done by using a particular window size in sentences, together with several syntactic filters.one of the syntactic filters is based on syntactic relations among phrases outputted from the parser. the idea behind this filter is that some types of syntactic relations imply the impossibility of coreference relations between its argument noun phrases and the inclusive expressions of these noun phrases. for example, the two expressions: dominant negative form and its in our example in table
 <dig>  can not be coreferential with each other, since they are connected via the preposition of.another syntactic filter removes pronouns that are not in the same pronoun family as the anaphor. this results in the disappearance of this in candidate antecedents of its. pronouns in the same family as its are its, it, and itself.

step  <dig> - antecedent prediction: to produce a coreference link, the antecedent candidates are sorted according to a set of preference rules, then the best candidate is chosen . for the sorting, the following four rules are used:


• rule  <dig> : the candidate, which does not conflict in number with the anaphor, is preferred.

• rule  <dig> : if the anaphor is a protein reference, then a protein candidate is preferred.

• rule  <dig> : according to the anaphor type, the farther candidate is preferred.

• default rule : the closer candidate is preferred.

the rules are implemented using different features of expressions, such as syntactic types of expressions, head noun, semantic types, etc., in a similar way to
 <cit> . each rule in the decision list compares two candidates, and returns the preferable candidate in concern with the anaphor. if equility happens, the next rule in the list is applied. the default and also last rule in the decision rule list is different from the other rules in that depending on the anaphor, it prefers the closer or the farther candidate. because of this particular rule, the decision list never results in the equility result. in this way, candidates can be sorted, and the best candidate is selected as the antecedent. figure
 <dig> illustrates how the decision list works when comparing two candidates: a and b.

more details concerning the implementation of the main components of our system shown in figure
 <dig> are presented below.

anaphor selection
in this step, we want to filter out those pronouns and definite noun phrases that are not a target of this task. the expressions are comprised of two types: non-anaphoric expressions, and anaphoric expressions, which do not point to proteins. the term anaphoric is used with the common sense in the nlp community. anaphoric expression refers to an expression with a noun phrase as antecedent. thus, expressions with a sentence or phrase antecedents, or nominal but successive antecedents, are not our target and should be filtered out.

non-anaphoric expressions include first and second-person pronouns such as i, we, you, and pleonastic it. first and second-person pronouns are easily recognized by the part-of-speech tags; thus, we use part-of-speech information for the filtering. for pleonastic it, we make use of the following four patterns, which are similar to
 <cit> 

 it be ∗that

 it be adj  to vp

 it  ∗

 np  it ∗ ∗

to recognize and filter anaphoric expressions that do not point to proteins, the system is based on the protein semantic classification results determined by the method presented below.

antecedent candidate selection
for each anaphoric markable, the system collects a list of antecedent candidates, and select the most probable candidate to be the antecedent of the anaphor. basically, all of the expressions detected in the initial expression set are an antecedent candidate, with the exception of anaphoric pronouns. however, if the list contains too many candidates, then it may be more difficult for the later antecedent-selection algorithm. therefore, candidates that are not probable to be an antecedent of the anaphor should be filtered out. there are several filters that can be used:

window size borders are set to include or exclude antecedent candidates. this is a common method for antecedent candidate filtering, as seen in the previous work
 <cit> . since our task focuses on anaphoric coreference, antecedent expressions normally appear relatively close to the anaphors. thus, using window sizes is a proper technique.

syntactic dependency relations since arguments of some dependency relations  do not corefer with each other, they can be used to correctly eliminate the number of antecedent candidates. for instance, two such truncated forms definitely cannot be an antecedent of the protein in this context: two such truncated forms of the protein.

antecedent prediction
after filtering non-relevant antecedent candidates for an anaphor in the step above, depending on the anaphor type, the remaining candidates are ranked by fixed rules, or by using a pairwise comparison procedure:

fixed rules for relative pronouns
the relative pronoun can be said to be the easiest type of coreference resolution, because its antecedent expression is very close to the anaphor, and in many cases, it is right before the anaphor. for these types of anaphors, any syntactic parser can be used to find the relation between relative pronouns and their arguments. our system accomplishes this task. it simply produces coreference links between the relative pronouns and their arguments.

however, a disadvantage to using this method is that when the parser does not find the correct arguments, the coreference also fails. this is exemplified in the following: “..of transcription factor nf-kappa b also encodes a p <dig> i kappa bzprotein, i kappa b gamma, which is identical to the c-terminal  <dig> amino acids of..”

antecedent candidate ranking based on pairwise comparison rules
this procedure compares two candidate expressions at a time with respect to preferences raised by the anaphor. the most probable antecedent expression is selected to form a response coreference link. in particular, a list of rules is used to compare two candidates of an anaphor in a deterministic manner. for each rule, both of the candidates are checked against the condition hold by the rule. if one candidate satisfies the condition and the other does not, the procedure ends with the result that the former will be preferable over the latter. if both candidates satisfy or do not satisfy the rule, the procedure proceeds to the next rule and the candidates will be checked against the condition in the same manner. the rules are applied in a successive order, one after another, until the inequality occurs, or until the end-of-the-rule list is reached. the default rule of the procedure, is in the preference of the closer antecedent candidate.

semantic type classification in coreference resolution
by definition, two coreferential expressions are idential, which implies a semantic-constraint on coreference relationship. in other words, semantic types of coreferents must be compatible. in practice, this compatibility is verified based on a given taxonomy of semantic classes in the following manner: two semantic classes are considered compatible or agreed with each other, when they have a synonym relation, or hypernym-hyponym relation. in this work, we only focus on the protein type, ignoring other possible semantic types, the structure of the taxonomy is not taken into account. therefore, the likelihood that two expressions are semantically compatible, is definitely beneficial for antecedent prediction. focusing on specific entity types, i.e., protein type, enables us to find a proper method for determining the likelihood, and method for encoding the likelihood in coreference resolution.

accurate semantic type classification based on given pronoun mentions, for nominal expressions 
since gold-standard  protein annotations are provided as input to the task, we can use them in combination with syntactic information to judge whether an expression is a protein-referential expression or not. if an expression is a noun phrase with a single head-word, and it contains a protein mention that completely overlaps with the head-word, then the expression is classified as a protein reference. in another case, when the head-noun of an expression is either protein or gene, and has a protein mention as its premodifier, such as the tax protein, the expression is also a protein reference. for a coordinated noun phrase, if one of its constituents is classified as protein, then that noun phrase is also classified as protein.

semantic type classification for pronominal anaphors 
pronouns, in particular, possessive pronouns, occupy the majority of anaphoric pronouns in biological texts . however, they do not contain in themselves very much useful information for the resolution; thus, we need to acquire more information from its context
 <cit> . the analysis of bionlp-st  <dig> also showed that we need a different strategy to resolve such pronouns
 <cit> . fortunately, the key to this problem lies in the context of pronouns.

we implemented a simple function to classify the semantic type of a possessive pronoun, based on its context word. in particular, we check the noun phrase in which the determiner is its or their; if the noun phrase contains a protein key word then the inclusive pronoun is classified into the protein semantic type. protein key words can be a verb, a noun or an adjective that co-occurred with protein mentions, and can be used as a clue to distinguish the protein type from other semantic types. for example, the word binding in the following noun phrases: its heterodimeric binding partner, or its binding site, is a clue to infer that it must be a protein reference. for our preliminary experiment, we collect these key words manually by checking the noun phrases containing its and their in the training data. our final protein key word set includes  <dig> words: binding, expression, interaction, regulation, phosphatase activity, localization, gene, sequence, region, phosphorylation, transactivation, and transcription. in future, the protein key words can be collected automatically using the term corpus, or other resources of proteins.

semantic type classification for definite noun phrase anaphors 
definite noun phrases do not always have an antecedent in textual context. in particular, in biomedical scientific papers, many definite noun phrases do not have antecedents, since the referenced concepts can include any concept that is understood by subject matter experts in the domain. distinguishing such non-anaphoric definite noun phrases from anaphoric ones is a difficult task. knowing their semantic type helps to filter out irrelevant candidate antecedents, thereby increasing the chance of picking up the right antecedent, and increasing the precision of antecedent prediction.

in our implementation, the decision to keep an anaphoric expression for further processing steps for an anaphoric definite noun phrase is based on a protein head word list. we tested two different head word lists: one is built automatically from the gold anaphoric nominals in gold data; the other word list contains the top seven common head words: protein, gene, factor, molecule, element, family, inhibitor, and receptor. using this head-word list and premodifiers, the system covers  <dig>  percent of the coreference links.

encoding semantic types in coreference resolution
semantic type information can be used in coreference resolution in several ways. first, in anaphor selection, semantic information can be used to filter out non-protein anaphoric expressions. second, in antecedent candidate filtering, semantic agreement between the antecedent candidates and the anaphoric expression is verified. those candidates that are not in agreement with the anaphor in semantics are filtered out. for example, if an anaphor is classified as a protein referent, then the non-protein antecedent candidates are removed from the candidate set of the anaphor. finally, in antecedent prediction: semantic agreement can again be used as a constraint when comparing two antecedent candidates to select the more probable candidate.

RESULTS
performance evaluation
our minimal system configuration rb-min includes all of the processing and filters from step  <dig> to step  <dig>  as explained in the methods section. to keep the minimal configuration simple, step  <dig> - antecedent selection of the baseline only uses the default comparison rule, which assures that the closest antecedent candidate is selected. for antecedent candidate selection, the window size used in step  <dig> is set to  <dig>  which means that antecedent candidates are collected in the two nearest sentences from the anaphor, and the sentence embedding the anaphor. the statistics measured on the training set of the corpus shows that  <dig> % percent of protein coreference links have antecedents appearing in within  <dig> sentences. with this window size, the average number of candidates per anaphor is  <dig> . also, experiments with wider window sizes did not improve performance.

table
 <dig> compares our system with the top four official results of the coref shared task in bionlp-st 2011
 <cit> : uu
 <cit> , uz
 <cit> , cu, and ut
 <cit> . the scoring scheme used throughout this paper is the protein coreference evaluation, the primary evaluation method of the coref shared task
 <cit> . this primary evaluation method, which was particularly designed for the shared task, is based on protein coreference links that have been automatically generated from manually annotated coreference links. the last column all shows the overall results, while its preceding three columns pron, dnp, and relat shows the protein resolution results by three major subtypes of anaphors: pronouns, definite noun phrase and relative pronouns, respectively. note that the results from rb-min with minimal configuration already surpasses the best results obtained by the uu team, with up to  <dig> % higher performance in f-score. since rb-min uses similar preprocessing tools as uu
 <cit> , but less information in antecedent prediction, this gap in performance is likely caused by the different markable detection methods. uu pointed in their paper that markable detection is one of the challenges of this task
 <cit> . in their system, uu used a machine learning approach, and tested two distinguished models for markable detection: one solved both anaphors and antecedents together, the other treated anaphors and antecedents separately. meanwhile, our method is basically based on the boundary of noun phrases and pronouns, as is outputted from the parser. the patterns used to extract the proper noun phrases and pronouns, are manually designed in relation to the markable boundaries annotated in the training data.

breaking down the system performance by the different types of anaphors provides us with insight into what has been accomplished/solved by our methods, and also provides us with improvement opportunities. concerning the relat type of coreference, we can see that rb-min and rb-full both achieve comparable results with the best-performing team in bionlp-st  <dig>  however, it should be noted that our antecedent prediction for the relat type is based solely on the output of the enju parser for the relat type, so in order to improve this type of coreference, we have to find ways to overcome the parse errors on noun phrase boundary detection and relative clause attachment .

the increase in system performance on the pron and dnp types by rb-full demonstrate the effectiveness of discourse and semantic information in the performance of protein coreference resolution. comparing rb-min, rb-full and rb-min+ <dig>   <dig>  we found that rule  <dig>  which stands for discourse preference, works well for the pron type . on the other hand, the major contribution to the improvement of dnp resolution is from rule  <dig>  this rule successfully utilizes the domain-specific information, which shows that coreference resolution requires domain-specific information. to further explore the elements contributed to this significant improvement, we analyzed our system in more detail. the analyses of the results are provided in the section entitled discussions.

discussions
contribution of rules
table
 <dig> compares various configurations of our system. the first row in the table, rb-min, is the minimal configuration of the system. the following three rows show contribution of the three rules, num-agree, sem-cons, and disc-pref. rb-full is the full system. to emphasize the contribution of the semantic rules, it also shows rb-full-sem system.

performance was measured on the development data set which contains  <dig> protein coreference links.

the full combination of rule  <dig>   <dig> and  <dig> resulted in a  <dig> % f-score  . in this full configuration, rule  <dig> contributes a 4-point f-score increase in the development set, and  <dig> -point f-score increase on the test set, when comparing rb-min+ <dig>   <dig> and rb-min+ <dig>   <dig>   <dig>  however, the result of rb-min is still more than  <dig> points higher than in state-of-the-art performance. this gain is due to the fact that the rule ensures that the semantic type of antecedents is the same as for their anaphors, thus enabling the correct detection of antecedents. in other words, if an anaphor is classified as a protein reference, then the antecedent must also be a protein reference. the following examples illustrate the way rule  <dig> works. 

• “therefore,  may be an important contributor to il- <dig> signaling, and we speculate that the defective il- <dig> responses seen in irf-1-/- mice might be attributable, in part, to the absence of .”b 

coreference examples in this paper are represented as below: gold anaphoric and antecedent expressions are bracketed, antecedents before anaphors; gold protein mentions are underlined; and incorrect response antecedents are in italics.

in the example above, without rule  <dig>  the faulty response antecedent of this transcription factor is part because it is the closet antecedent candidate agreeing with the anaphor on the singular number. meanwhile, since this transcription factor is recognized as a protein reference, its closest protein antecedent irf- <dig> was successfully detected by rb-full.

another example is: 

• “this role for  in apoptosis is now confirmed in studies using a dominant negative form of  heterodimeric binding partner, max, which..” 

concerning the anaphoric pronoun its in this example, there are several antecedent candidates: this role, c-myc, apoptosis, studies, a dominant negative form of its heterodimeric binding partner. although studies and a dominant negative form of its heterodimeric binding partner have been crossed out because of disagreement in numbers, and violation of abandoned syntactic constraints, correspondingly, the system would return the incorrect antecedent apoptosis instead of c-myc. fortunately, the containing noun phrase of the anaphor its has the modifier word binding, which is a clue for classifying its as a protein reference ). rule  <dig> utilizes semantic classification result to make the correct selection.

contribution of semantic information in anaphor selection
in our system, domain-specific semantic information is utilized in two places: anaphor selection and antecedent prediction. the effect of semantic information in antecedent prediction has been analyzed in the sections above. in this subsection, we are going to explore the contribution of semantic information in the anaphor selection step.

to classify anaphors into protein or non-protein reference, our system employs a head-word based classifier for definite noun phrases, defnp-ana-sem, and a context-based classifier for pronouns, pro-ana-sem . without limiting the number of anaphors by using semantic information-based filtering, the precision significantly drops, causing a big decrease in the f-score . this decrease is due to the fact that the semantic filter is the only method for filtering out definite noun phrase anaphors. without the filter, all definite expressions, which include a substantial amount of non-anaphoric expressions, are considered as anaphors. besides the anaphoric use, definite noun phrases are also used to refer to entities or concepts in the common domain knowledge shared between readers and writers. statistics in
 <cit>  show that only around 30% of definite noun phrases are anaphoric, and the other uses according to their classification include associative, unfamiliar/larger situation, idiom and doubt. distinguishing such non-anaphoric definite noun phrases from anaphoric ones is extremely difficult.

performance was measured on the development data set which contains  <dig> protein coreference links.

in our system, contextual information of possessive pronouns is utilized through the protein key words , and this contributed to a  <dig> % gain in f-score . this gain is a good indication for seeking a systematic method to develop and include such contextual information in coreference resolution. examples showing the effectiveness of semantic information from the context of pronouns is provided below: 

• “this role for  in apoptosis is now confirmed in studies using a dominant negative form of  heterodimeric binding partner, max, which..” 

• “this ability of  to facilitate promoter occupation is undissociable from  transactivation potential.” 

• “in transient transfectin experiments,  can repress transcription from promoters linked to  dna target sequence and this activity is..” 

• “, an early regulatory protein that is critical for viral gene expression and replication, transactivates the hiv- <dig> long terminal repeat  via  binding to the transactivation response element  and,..” 

in all the examples above, the appearance of words such as binding, transactivation, dna target sequence in the noun phrases for which the anaphor plays a role as a determiner, is a contextual indicator for the protein type. since the anaphors are predicted as protein reference from their context, the system correctly detects their protein antecedents.

comparing with the existing scoring schemes
so far, several scoring schemes have been proposed to evaluate coreference resolution. the muc score
 <cit>  is based on the assumption that coreference links effectively partition the entity references. the precision, recall, and f-score are then calculated based on the minimal number of the required insertion or deletion operations on the coreference links to transform the partition by the response coreference links to the one by gold links. bagga and baldwin
 <cit>  proposed the b-cubed  score, which is calculated based on the individual coreference links, not the resulting partitions. luo proposed the ceaf score which is calculated based on the best mapping between coreference expressions or entities, thus results in two types of ceaf: expression-based  and entity-based 
 <cit> . the best expression mapping used in ceaf is found using kuhn-munkres algorithm. recently, the blanc score was introduced
 <cit> , to be used for the conll coreference resolution shared task
 <cit> . blanc makes use of a clustering evaluation metric called rand index
 <cit>  to measure the similarity between two partitions of coreference expressions.

we compared the bionlp-st scoring scheme with the existing schemes mentioned above. the scores for muc, b <dig>  ceaf-m, ceaf-e, and blanc were achieved using the scorer of conll shared task
 <cit> . the comparison result is shown in table
 <dig>  it is observed that the bionlp, blanc and ceaf scores are relatively similar to each other, which makes sense considering that all the three are calculated based on the number of individual coreference links in the response and gold links. on the other hand, the muc score is much lower, and the b <dig> score is much higher than the bionlp-st score. these results agree with the criticisms on the shortcomings of muc-score and the looseness of b3
 <cit> .

performance was measured on the development data set which contains  <dig> protein coreference links.

other issues
other challenges specific to the protein coreference task number agreement is a constraint in english writing. however, in the data, we found several coreferential expressions that violate this constraint. the anaphor and antecedent in the following is an instance of this violation: 

• “..for otf- <dig> in dra gene transcription. in contrast,  did not affect dra gene transcription although  functionally enhanced the transcription of another..” 

coreference annotation and evaluation therefore, when the proteins appear in premodifiers or postmodifers of noun phrases as  in the following example, such proteins might not be the correct antecedent proteins. 

• “with the aim of identifying genetic targets for these transcription factors, we stably transfected , individually or together, into immature hematopoietic ba/f <dig> cells, which lack .” 

parse error coreference expression boundary is determined mostly based on noun phrase boundary output from the parser. therefore, parse error on noun phrase boundary strongly affects the performance of coreference resolution. examining the data, we found that many antecedent expressions of plural anaphors are coordinated noun phrases, which are unfortunately difficult cases to many parsers including enju. incorporation of recent works for coordination resolution like
 <cit>  should be useful for improving the performance of the parser. the following example shows a coordination-structured antecedent aml1/cbf beta, c/ebp, ets, c-myb, hox, and mzf- <dig> that failed to be detected by the parser. the spurious response expression is transcription factors from several families. 

• “granulocytic and monocytic lineages, transcription factors from several families are active, including . few of  are expressed exclusively in myeloid cells;..” 

CONCLUSIONS
from the results of the bionlp-st coref task, it is analyzed that the use of semantic information is necessary to improve the performance of protein coreference resolution. this paper presented an improvement of protein coreference resolution by particularly using domain-specific semantic information. other popular techniques for coference resolution, e.g., number agreement checking and distance-based preference, were also implemented and tested.

experimental results show that those techniques can improve the coreference resolution performance significantly. nevertheless, the current performance is still far from satisfaction , and there is a much room for improvement. future works include more elaborate acquisition and use of semantic knowledge.

endnotes
aenju parser comes with a default tokenizer and part-of-speech tagger for biological text.

bcoreference examples in this paper are represented as below: gold anaphoric and antecedent expressions are bracketed, antecedents before anaphors; gold protein mentions are underlined; and incorrect response antecedents are in italics.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
all authors contributed to the production of the manuscript. jdk, mm, tm and tj supervised all steps of this work. nltn built the system and carried out the experiments. all authors read and approved the final manuscript.

