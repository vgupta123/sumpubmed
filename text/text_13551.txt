BACKGROUND
recent advances in high-throughput sequencing technologies have contributed to an explosion in sequence data from studies of microbial composition in various environments that harbor complex microbial communities. as one of the most commonly used approaches for such studies, 16s rrna sequences are analyzed to estimate species composition and diversity.

an initial requirement for downstream analyses of 16s rrna sequences is the binning into operational taxonomic units  that contain similar sequences. the existing methods can be divided into two classes, taxonomy-dependent methods and taxonomy-independent  methods  <cit> . for taxonomy-dependent methods, query sequences are compared with known sequences deposited in annotated databases   <cit> . sequences that match with a reference sequence with a simialrity less than a predetermined cut-off value are grouped together. in contrast, ti methods apply clustering algorithms to pairwise sequence distances to assign query sequences into otus  <cit> . a major advantage of ti methods is their independence from the coverage of existing databases, which allows the analysis of sequences from unknown microorganisms, because novel sequences usually represent a large proportion of a sequence dataset  <cit> .

in ti methods, pairwise sequence distances are computed either by multiple sequence alignment  or pairwise sequence alignment  and several clustering algorithms can then be applied to form otus. these clustering algorithms include hierarchical clustering algorithms such as dotur  <cit> , mothur  <cit> , esprit  <cit>  and esprit-tree  <cit> , as well as heuristic algorithms such as cd-hit  <cit>  and uclust  <cit> . in a recent benchmark study, we demonstrated that esprit-tree appeared to have advantages in terms of both accuracy and computational efficiency  <cit> .

one of the critical problems with existing ti methods is the need to set an appropriate distance threshold to retrieve the optimal otu binning at a distinct taxonomic level such as species. applying different thresholds leads to inconsistent binning results. furthermore, appropriate distance levels appear to vary depending on the chosen hypervariable region  <cit> , which makes it impossible to create one single distance-based threshold for defining a taxonomic level  <cit> .

some efforts have been made recently to address this issue. in  <cit> , a semi-supervised clustering method was developed to identify a cut within a hierarchical clustering tree that maximizes the fit with a labeled subset of the sequences so that varied distance levels were applied in the clustering process to improve clustering accuracy. however, this approach shares a crucial disadvantage with taxonomy-dependent methods: the need to preselect labels to perform otu picking. in  <cit> , a bayesian clustering method called crop was developed, which uses a gaussian mixture model to describe the pairwise sequence distance distribution in an otu to avoid the need to set a single distance level for all clusters. although this method does not use hard thresholds, it actually utilizes a lower and upper bounds that can be transformed to a threshold. another bayesian based method bebac  <cit>  utilizes a crude 3-mer count based preclustering step, and then the partition space is searched for the partition having maximum posterior possibility for given sequence data. a minimum description length criterion is then applied in a fine clustering step to determine the number of otus and generate the final partitioning. users only need to provide one parameter - the possible maximum number of otus as the input. the major disadvantage of this approach is its high computational cost.

in this study, a modularity-based clustering method was developed for otu picking. by viewing an otu as a collection of related sequences with similar densities in a sequence space, we applied a community detection method and treated otu picking as a community structure detection problem.

methods
modularity-based clustering
we herein refer to community structure as the occurrence of groups of vertices in a graph that are more densely connected with each other than with the rest of the graph. modularity-based methods are popular in community detection; they are derived from the intuition that a graph has community structure, if the number of edges within groups is significantly more than expected by chance  <cit> . modularity q of a partitioning result can be written as:

  q=12m∑ijwij−kikj2mδci,cj 

where m is the sum of weighted edges in the graph, is the weight of the edge connecting vertices and , is the degree of vertex i, i.e. the sum of weights on edges connected to vertex , and is the cluster that vertex is assigned to. the δ function represents the partitioning result information: if vertices i and j are grouped to the same cluster δ= <dig>  and otherwise δ= <dig>  the term  kikj2m  is used as the null model in equation  to reflect the weight one can expect by chance  <cit> .

modularity itself is also a quality function that indicates whether a partitioning of a graph can reveal the community structure on the graph if such structure exists. the maximum value of modularity is 1; a large value implies good partitioning. the maximum q value corresponds to the optimal partitioning on the graph, which best reflects its community structure. the community detection problem thus can be formulated as an optimization problem to find the partitioning that maximizes q.

several algorithms have been developed to efficiently optimize modularity. among them, the algorithm in  <cit>  appears superior in terms of both accuracy and speed  <cit> , and it is chosen in our study to optimize modularity and find a clustering result that reflects community structure in our sequence data. the algorithm takes a bottom-up approach: it initially assigns each vertex to be a distinct cluster; it then moves a vertex into another cluster if the resultant modularity is increased; afterwards it recursively repeats the process by viewing each cluster as a vertex until a maximum modularity is obtained.

in the context of otu picking, a weighted graph is formed by: i) viewing sequences as vertices, where each pair of sequences is connected by an imaginary edge, and ii) viewing the simlarity of a pair of sequences as the weight on the edge connecting these two sequences. thus the modularity of a partition of sequences can be computed using equation ; the best clustering result is the one that maximizes the modularity. in such a result, each cluster represents an otu with high homogeneity inside, that is, similarities between sequences within otus are greater than those between them. using this approach, otus are defined by homogeneity of edge densities and not by distance between neighborhood clusters, circumventing the need for choosing distance levels.

a toy example comparing the modularity-based method and average linkage based hierarchical clustering is shown in figure  <dig>  the ground truth was generated from three gaussian distributions with different means in x axis  and standard deviations . the euclidean distance is used to quantify the dissimilarity among vertices. there is no single distance level that effectively partitions these three clusters using hierarchical clustering; a variety of distance levels  have been applied in hierarchical clustering; its best result at distance level  <dig>  is shown on figure  <dig>  in contrast, m-pick partitions the data properly when ɛ>= <dig>   due to the fact that although clusters have different sizes, the vertex distances within a cluster are sufficiently smaller than those between clusters, and the density of weighted edges is higher within each group than that between groups.

our modularity-based approach includes three steps.  pairwise sequence distances are computed using the alignment module of esprit  <cit> .  an ɛ-neighborhood graph is formed by only retaining the pairwise sequence distances less than ɛ, or equivalently pairwise sequence similarity greater than 1-ɛ. this step is somehow similar to single-linkage clustering.  modularity-based clustering is recursively performed on the graph generated in the previous step.

in the first step, we generate a pairwise distance matrix, viewable as a fully connected graph. however, the fully connected graph cannot be directly used to perform clustering because of i) prohibitive computational costs and ii) the resolution limit problem which states that modularity-based methods may fail to acquire clusters smaller than a scale depending on the total size of the graph  <cit> . this implies that if a complete graph of significant size is used, small clusters in the graph will likely be ignored even if they show connectivity, albeit weak, to the rest of the graph and thus should be recognized as distinct otus. therefore, we use a parameter ɛ in step  <dig> to mitigate these problems. ideally, ɛ should be chosen to be greater than the maximum pairwise neighborhood sequence distance within a taxon, but not too large so that it includes all the sequences in multiple taxa into one connected graph. a graph formed in this way can guarantee that the sequences within a taxon are connected and the edge density within a taxon is greater than the density between taxa, making the community structure in the original fully connected graph more prominent.

due to the resolution limit problem, which often generates big clusters, it is not desirable to perform the clustering only once. thus, we recursively evaluate each formed cluster to determine the need for further partitioning. the maximum modularity detected on a graph can indicate the presence of community structure in the graph. while a single cluster partitioning has modularity  <dig>  partitions on a highly homogeneous graph  have modularity values close to  <dig>  on the other hand, if multiple communities exist on a graph, some partitions will have large modularity values. thus, the maximum modularity obtained on a graph can be used as a homogeneity criterion, suggesting the existence of multiple communities. here we recursively apply clustering to sub-graphs exhibiting large modularity values, with the final sub-graphs or clusters having a maximum value less than a threshold δ. this recursive procedure - conducting modularity optimization on each single module is similar to that previously suggested by fortunato et al.  <cit> . our method is illustrated in figure  <dig> 

clustering results validation
different clustering results are frequently obtained for the same sequence data set by applying different clustering methods and/or different parameter settings. the lack of a ground truth complicates an objective comparison of clustering methods. generally, there are two types of clustering validation methods  <cit> , either using external or internal criteria. using external criteria the clustering results are compared to correct class labels from the 'ground truth', while only quantities inherent to the data are used for internal validation.

normalized mutual information  is a well-known external criterion previously used for validating otu picking; it measures the difference of a clustering result from a perceived ground truth  <cit> . nmi views the sequence distributions in the clustering result and ground truth as two discrete random variable distributions, and computes the nmi of the two random variables as the measure for quantifying agreement. the maximum nmi score is  <dig> which means the clustering result completely match with the partition in ground truth; the higher the nmi score, the more match. nmi is equivalent to variation of information used in white et al.  <cit> .

another popular external criterion is the f-score, which jointly considers precision and recall  <cit> . a common problem with f-score is that it does not satisfy the cluster completeness constrain that each cluster ωk in ground truth is only judged by the best-matched cluster in the clustering result. thus, other small clusters that match with ωk can not affect the f-score, overestimating correlation when many small clusters are present  <cit> .

internal validation indices such as silhoutette width  <cit>  and dunn index  <cit>  have been used to evaluate clustering performance without the need for a ground truth. quantities such as compactness, connectedness, and separation in the cluster distribution are used to evaluate clustering performance. while independence from questionable ground truths is a clear advantage, internal validation is only possible if the studied dataset has well-defined community structure, a condition that frequently is not met. for the above-mentioned reasons, we herein only use the external criteria based nmi score for clustering validation.

RESULTS
16s rrna sequences of different hypervariable regions were used to compare m-pick with esprit-tree and crop.

we first constructed a reference database from the rdp-ii database  <cit> , which was fully annotated using taxcollector  <cit> . we then used various published 16s rrna datasets of different hypervariable regions in our analysis. for each dataset, we ran a blast search against the reference database, and used a filter with the stringent criteria  to retain the sequences that can be reliably annotated for use as the ground truth .  <dig> sub-datasets were then randomly picked from the retained sequences. the clustering algorithms were applied on these sub-datasets to compare their performances. a similar validation process has previously been described in detail  <cit> .

case study  <dig> - v <dig> variable region
we used published sequences previously generated to study the association between obesity and the composition of human gut microbiota  <cit> . the dataset contains ~ <dig> m sequences covering the v <dig> region with an average length of  <dig> nucleotides. we blasted the sequences against the annotated rdp-ii database, filtered the sequences using the criteria described in the previous section, and picked the species labels of the retained sequences as ground truth. we then randomly extracted  <dig> test subsets from these retained sequences, each containing  <dig> sequences from the  <dig> most abundant species .

esprit-tree was applied to each test subset using distance levels between  <dig> - <dig>   and the peak nmi score was chosen. similarly, crop was applied to each test dataset using different cut-off settings  as described in  <cit>  and its peak nmi score was selected. m-pick was applied using a setting ɛ =  <dig>  to generate a graph for each test dataset.  <dig>  was chosen because for most cases it is greater than the distance between two sequences in a species in our ground truth. thus, once we form the ɛ-neighborhood graph, sequences in a species are more likely to connect to each other than connect to sequences in other species and the edge densities of sequences within a species are generally greater than the edge densities of sequences from different species, which makes it appropriate to apply a modularity-based method. the stopping criterion for recursive clustering was chosen as δ =  <dig> . the nmis of the m-pick were compared with the peak nmis from crop and esprit-tree . for illustrative purposes, the nmi scores of crop and esprit-tree at different distance levels are shown in .

while esprit-tree and crop can achieve nmi scores greater than  <dig>  at their optimum distance level, results are sensitive to the chosen distance level . m-pick generated the most accurate results for all of the test datasets.

in addition to the nmi scores, we also checked if the three methods could accurately estimate the number of species in the test datasets . the estimations from crop and esprit-tree were based on clustering results using their best distance levels. esprit-tree performed slightly better than the other two methods. as for standard deviations, m-pick generated the most robust estimations; its results were more consistent in all the test cases. it should be emphasized that the otu number estimates from crop and esprit-tree are all based on their optimal distance levels, which in real applications are unknown. m-pick can accurately estimate the number of species in test datasets without a need to specify a distance level for defining otus.

in order to evaluate the impact of parameter selection  on m-pick clustering results, we performed a simulation study . parameters values within the area marked in white yielded more accurate results than the best result obtained using esprit-tree. our simulation shows that m-pick performed very well over a wide range of parameters. however, if δ was too small , it led to many small spurious otus. on the other hand, a large δ  resulted in underestimation of the number of species by generating large otus. in both instances the nmi scores can be worse than the peak nmi scores of esprit-tree. as for ɛ, it should be greater than  <dig>  . ɛ was selected as  <dig>  in this case study partly due to the fact that in this case δ can be chosen in a broad region  in the white area so that it is more robust against δ.

case study 2- v <dig> variable region
to confirm the observation described above and to be able to generalize our findings, we performed additional studies using different datasets covering various 16s rrna hypervariable regions. results from another case study are presented below; the second study was performed on a dataset retrieved from a soil microbial diversity study  <cit>  where  <dig>  bacterial 16s rrna sequences  were obtained from samples collected in brazil, florida, illinois, and canada.

similar to the first case study, we initially performed a blast search of the sequences against the annotated rdp-ii database and filtered the sequences using the previously described criteria. we then randomly extracted  <dig> test subsets each containing  <dig> sequences from the  <dig> most abundant species in the ground truth. the proposed m-pick algorithm was applied by setting ɛ =  <dig>  to create a graph, and the stopping criterion was chosen as δ =  <dig> , which is within the appropriate range depicted in figure  <dig>  crop and esprit-tree were again applied to the test datasets and their peak nmi score compared with m-pick . similar to the first case study, m-pick significantly outperformed esprit-tree and crop in both accuracy and robustness. we also found that m-pick was superior to the other two algorithms when using a wide range of parameter settings, shown as the white area in figure  <dig> 

case study 3- v <dig> variable region
for the ease of presentation, we only used the top  <dig> or  <dig> species in the previous case studies, which may not give a complete picture of how m-pick works on a whole real data.

in this case study, we used a dataset from our sepsis study designed to investigate the association of sepsis and intestinal microbiota in infants with very low birth weight. the dataset contains  <dig>  sequences from v <dig> region. esprit-tree and m-pick were applied to obtain clustering results for the whole dataset. ɛ= <dig>  and δ= <dig>  were used in m-pick. afterwards, we blasted the dataset against the rdp-ii reference database and applied the stringent filter to retrain a subset of  <dig>  sequences that have species annotation. we then extracted the clustering result of the annotated sequences from the whole clustering results, and compared it with the species labels to validate the clustering performance. again, we used the nmi score to compare m-pick and esprit-tree evaluated at different distance levels. the estimated numbers of otus and nmi scores were listed in table  <dig>  it can be seen that m-pick generated fewer number of otus but at the same time a higher nmi score, which implies that sequences belong to a species are more likely to be grouped together into the same otu by using m-pick.

case study 4- simulated dataset
in the above case studies, the ground truth was generated by keeping the sequences that highly matched with the rdp-ii database through the stringent criteria. however, the way to genererate ground truth could be quenstionable. to adress this concern, we included another simulated dataset from  <cit> , which contains  <dig>  sequences from  <dig> taxa generated from a gaussian distribution model with varied deviations. we applied m-pick on the data, and it correctly grouped sequences into  <dig> taxa with a perfect nmi score of  <dig>  which is better than those from bebac, uclust, esprit-tree, and crop shown in  <cit> . we also investigated how the problem of resolution limit affected the clustering results by keeping only  <dig> sequences from taxon  <dig>  m-pick still retrieved the correct clustering result, which confirms that m-pick worked well for this rare taxon case without the problem of resolution limit.

additional case studies
additional case studies were provided in the additional file  <dig>  the results were consistent with the findings presented in the previous sections.

discussion
we herein developed a novel modularity-based clustering method, m-pick, for binning 16s rrna sequences into otus. m-pick is based on graph partitioning, and does not require a predetermined distance level to generate otus, which is a challenging requirement for many other otu picking methods.

m-pick is based on a concept from graph partitioning. it initially creates a similarity based graph composed of all the sequences in a dataset. the algorithm first computes the pairwise sequence distances, and then implicitly creates an ɛ-neighborhood graph from the fully connected graph by only keeping sequence connections with pairwise distances less than ɛ. this strategy is used to save computational cost and to make community structure in the original graph more prominent. modularity is used not only as the quality function to perform clustering but also as the criterion for terminating the recursive clustering process. we stop partitioning a graph  when all of its partitions have a modularity value smaller than δ. both settings of ɛ and δ help to alleviate the resolution limit problem. although we cannot claim that the proposed method has solved the problem, we found in our empirical studies that the resolution limit does not seem to be a serious issue.

we used multiple sequence datasets from different hypervariable regions of 16s rrna to compare the performance of m-pick with two other commonly used algorithms, crop and esprit-tree. both are thought to generate accurate clustering results if the optimal distance level is known. however, the optimal distance level, which is not known a priori, varies for different hypervariable regions and even for different datasets from the same region. m-pick outperformed the other two algorithms in most cases even when the optimal distance level was used in the two competing algorithms.

two parameters are required by m-pick. ɛ is used in the process of creating a graph and δ is used to decide when to stop the recursive clustering. the constraint on an otu introduced by ɛand δ is different from that of preset distance level used in esprit-tree and crop. it can create arbitrarily shaped otus, which alleviates the problem of similar sequences being split into separate otus. we found that ɛ should be chosen to be larger than the maximum pairwise neighborhood sequence distance within a species. in all datasets that we analyzed, ɛ and δ were set to be  <dig>  and  <dig> , respectively, and the results were superior to those achieved by the other two algorithms. thus, we suggest users to use this parameter setting for picking otus at species level. a systematic study to determine the two parameters for other phylogenetic levels needs to be carried out in the future. for the stopping criterion δ, similar considerations should be taken as in  <cit>  in order to determine this parameter based on the statistical significance of the maximum modularity values of sub-clusters generated in the recursive clustering process.

the computational cost is composed of two parts.  o is consumed in computing pairwise sequence, where n is the number of sequences.  the cost of performing modularity-based clustering is approximately linear with respect to m, the number of edges in an ɛ-neighborhood graph. the running time is mainly consumed in the computation of pairwise sequence distances. therefore, it is highly desirable to develop a more efficient pairwise sequence alignment method. at present, large datasets are handled by adding a preprocessing step. sequences are pre-clustered at 1% distance level using a high-speed method such as uclust, and a representative sequence from each cluster is used to form a reduced dataset, on which the pairwise sequence distances are computed.

CONCLUSIONS
we developed m-pick, a new modularity-based clustering method, for otu picking of 16s rrna sequences. the algorithm does not require a predetermined cut-off value, and our simulation studies suggest that it is superior to the methods that require specified distance levels to define otus. m-pick appears to offer a viable alternative for binning similar sequences into otus.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
xw, ys and vm designed the study. xw and jy performed the simulations. all authors discussed the results, read and approved the manuscript.

supplementary material
additional file 1
results of case studies not included in the main text.

click here for file

 acknowledgment
we thank the editor and reviewers for their comments and suggestions that significantly improve the quality of this article. this work is supported in part by national science foundation under grant no. dbi- <dig> 
