BACKGROUND
a central problem in computational biology is the task of identifying distantly related evolutionary ancestors, i.e., remote homlogs from primary sequence. currently, ~39% of the over  <dig>  million proteins in the non-redundant database  remain simply as hypothetical, conserved hypothetical, or unknown. with the continued exponential growth of the sequence databases, improvement in the computational annotation of sequences is a necessity.

in recent years, much of the research in the area of remote homology detection has focused on the use of machine learning algorithms, largely support vector machines  to build protein family centric predictive models leading to a large number of approaches  <cit> . the overall ability of these methods to identify homologs is based on the features used to encode the protein sequences. many early approaches to feature generation for protein sequences used amino acid similarity metrics to a basis set  <cit>  or the frequency of specific patterns  <cit> . further improvements in accuracy were achieved by accounting for additional information such as motif order or the likelihood of the occurrence of a motif  <cit> . methods that are profile-based are to date the most accurate, achieving average area under the curve  for a receiver operating characteristic  curve value of ~ <dig>  on the standard scop  <dig>  benchmark dataset  <cit> . other higher accuracy approaches use latent semantic analysis or recurrence quantification. additionally, methods based on network propagation have been developed to compare sequences to a database  <cit> , but at a significant computational cost. for algorithms that are not as computationally demanding in the feature generation stage the average auc values typically range from ~ <dig>  to ~ <dig> .

in bioinformatics, the most common application of homology detection is searching databases for related sequences through pairwise comparisons, most commonly blast  <cit>  or psi-blast  <cit> . to compete with these popular heuristic-based sequence methods new pairwise algorithms must be both simple and computationally friendly. leslie et al.,  <cit>  demonstrated that kernel matrices can be used directly for pairwise comparisons. when compared to blast a string kernel was able to identify homologous relationships in scop  <dig>  with a global auc of ~ <dig>  at the superfamily level in comparison to ~ <dig>  for blast, a modest improvement.

we present a computationally streamlined implementation of svm homology detection based on physicochemical distributions . these feature vectors have low computational cost by using physicochemical properties of amino acids based on the amino acid index   <cit>  in lieu of evolutionary information. feature generation is based on the normalized distribution of the average aaindex value over all sequential 4-mers in the sequence. we show that this new feature representation performs similarly or better than current family-based classification methods with a significant decrease in computation time. most notably, we demonstrate with direct evaluation of similarity across each aaindex for a protein that pairwise homology detection can be performed with improved accuracy over methods such as blast and smith-waterman  <cit> .

methods
generation and selection of null distributions from the aaindex
the goal of protein remote homology detection is to accurately classify protein sequences based on evolutionary relationships with the end goal of annotating new sequences of unknown structure and function. we present a new method that uses the average physicochemical property values associated with all 4-mers to transform a protein sequence into a series of probability distributions that can be used to define an accurate discriminative function of protein homology.

the amino acid index  is a database of numerical values, where each number represents a specific physicochemical or biochemical property of an amino acid or pair of amino acids. the latest version of the database  is separated into three parts: aaindex <dig>  aaindex <dig> and aaindex <dig>  aaindex <dig> has  <dig> properties associated with each of the  <dig> amino acids, aaindex <dig> contains  <dig> amino acid substitution matrices, and aaindex <dig> contains  <dig> amino acid contact potential matrices. for the purpose of protein transformation, the matrices were not used, leaving the  <dig> amino acid properties  as potential features. of the  <dig> indices,  <dig> had incomplete data or an over-representation of zeros, and were removed. thus  <dig> indices were evaluated for potential use in the protein transformation step.

there is only moderate correlation between aaindex properties, however there is considerable correlation when considering all possible 4-mers, where each 4-mer is the average of the physicochemical property values of the corresponding amino acids. the choice of selecting amino acids in sets of  <dig> was based on prior work by yang et al.,  <cit>  where a 4-mer was found to work well, as well as prior work by leslie et al.  <cit> , which found 4-mers to work well for string kernels based on un-gapped sequences of amino acids. to determine which of the  <dig> indices would be used to derive protein distribution features, each of the indices was transformed into a theoretical distribution associated with the values of the  <dig>  possible 4-mers . for each index the  <dig>  average value of all possible 4-mers was computed and then transformed into a discrete empirical distribution. correlated indices were identified by comparing each discrete probability distribution using a pearson correlation coefficient of determination , figure  <dig>  three different subsets of indices were identified for evaluation: 1)  <dig> indices that have an r <dig> value less than  <dig> , 2)  <dig> indices that have an r <dig> value less than  <dig> , and 3) all indices. for example, the subset for which the r <dig> value is less than  <dig>  was selected by simply marching through the indices in order, e.g., if aaindex  <dig> and aaindex  <dig> were correlated at  <dig> , the first index  was kept.

protein sequence transformation into feature space
for a query sequence, the transformation to a distribution was computed by normalizing each of the 4-mer average index values to the mean and standard deviation of the theoretical values computed as described in the previous section and then binning the values into a discrete density distribution. figure  <dig> gives a schematic of the overall process. in the first step the protein sequence of length l is transformed from the  <dig> amino acid letter code to a set of numerical values associated with the index being used also of length l. the average across all 4-mers was taken to create a new numerical vector that is of length l- <dig>  each of these values was then normalized to the mean and standard deviation of the theoretical values associated with the index,   

where vijk is the value obtained for the i-th index on the j-th sequence for the k-th 4-mer, μi and σi are the mean and standard deviation of the index under consideration. these normalized values were then transformed into a discrete distribution of  <dig> frequency values, where each value represents a range of  <dig> σ, i.e., the first bin is all values less than - <dig>  the second bin is all values between - <dig> and - <dig> , and so forth.

benchmark dataset
a standard benchmark dataset is scop  <dig> , used extensively for benchmarking and evaluating new svm-based protein family discriminative algorithms. scop  <dig>  consists of  <dig> protein sequences, which collectively cover  <dig> protein superfamilies . from this collection of data positive and negative training sets have been derived for the  <dig> superfamilies with the most members, described in detail by liao and noble  <cit> . the training and test set definitions are available at http://noble.gs.washington.edu/proj/svm-pairwise/. in addition, this dataset contains classifications on all proteins at the fold, superfamily and family levels, which can be used to assess accuracy of all pairwise comparisons at each evolutionary level.

roc analyses
a roc curve is a graphical representation of the false positive rate  versus true positive rate . a perfect classifier would have a tpr of one at a fpr of  <dig>  and likewise a tpr of one at a fpr of  <dig>  the auc is then one. a random classifier would return essentially the same tpr value for each fpr value, creating a diagonal line as the plot and an auc of  <dig> . this standard approach was used when performing only one comparison, such as homologs versus non-homologs, i.e., the pairwise task. for a protein family-based analysis, sets of training and test sequences were selected for each of the  <dig> superfamilies . a separate svm was trained and tested and a single auc computed for each family. this process was repeated for all  <dig> superfamilies, so that each family had a corresponding auc value  <cit> . thus, the final analysis of the entire family-based approach was the auc versus the number of families that achieved a particular auc value or better. the overall performance of each of the svm methods evaluated was summarized by the mean of all the  <dig> auc values computed .

statistical software
all feature vectors were generated in matlab® r2009b and exported as text files in gist format. all svm classifiers were generated and tested using the gist svm software http://www.bioinformatics.ubc.ca/gist/ <cit> . all default parameters were used with the exception that the kernel function was defined as either a quadratic or a radial basis function. the roc analyses were performed in matlab® using functional available through the statistics toolbox.

RESULTS
the basic assumption of the physicochemical distribution approach is that proteins that are homologous will deviate in a similar manner from the null distribution generated from all possible 4-mers. the discrete distribution of a protein for a single aaindex is represented by frequency values across  <dig> bins associated with the number of standard deviations from the mean each of the observed values is, eq.  <dig>  figure 3a gives these frequency values for two distinct homologous pairs, two that are from the globin-like family and the other two are macrophage inflammatory proteins  for the first aaindex, alpha-ch chemical shifts  <cit> . clearly the related pairs have more similar distributions, which are also reflected in their correlation, figure 3b. for this particular index the homologous pairs have correlation of ~ <dig>  and ~ <dig>  for the globins and mips, respectively. in comparison the correlations across these families range from ~ <dig>  to ~ <dig> . in this study we evaluated how well these distributions, concatenated into a single feature vector, can differentially identify homologous pairs.

in order to establish the pcd vectorization approach as comparable to other methods to identify homologous relationships between proteins a traditional family-based analysis was undertaken on the scop  <dig>  dataset in a comparable fashion to many prior svm-based protein family classification methods  <cit> . this was also performed to determine if all  <dig> aaindices are needed or if one of the subsets would be adequate. three datasets were considered, each consisting of k aaindices by the 18-bin distribution, or equally k* <dig> variables; all  <dig> ,  <dig> with r <dig> less than  <dig>   and  <dig> with r <dig> less than  <dig>  ; pcd, pcd, and pcd, respectively. for training and testing the svm, no feature selection was performed to select the "best" aaindices for a particular sequence or the "best" parameters for the svm since we are interested in the general robustness of the features. prior work had tuned both the features and the svm parameters to each specific family  <cit> . however, both a quadratic and rbf kernels were evaluated for each family to determine the most appropriate kernel transformation for the data associated with each family. for pcd   <dig> families used the rbf kernel and  <dig> used the quadratic kernel. these values were  <dig> and  <dig> for the rbf and quadratic kernels, respectively, for pcd and they were  <dig> and  <dig> for the rbf and quadratic kernels for pcd, respectively. overall, svm-pcd achieved an average auc over the  <dig> families of  <dig> ,  <dig> , and  <dig>  on pcd, pcd and pcd, respectively, which was better than some and worse than others. however, in the cases where svm-pcd does not achieve as high in terms of accuracy it is dramatically faster in terms of vectorization speed. the results of svm-pcd in comparison to other algorithms is in additional file  <dig>  this exercise in the family-based comparison demonstrated that svm-pcd is a comparable method in terms of accuracy to approaches such as svm-rqa and better than others such as svm-la. thus, this vectorization approach is valid for implementation into a pairwise algorithm. in addition, this analysis demonstrated that no gain in accuracy is achieved beyond pcd and thus an even smaller vectorization footprint from the full aaindex can be carried forward into the pairwise homology analysis.

pairwise homology analyses
the family-based roc analysis showed that probability distributions based on physicochemical properties can be used to train a classifier to separate proteins by superfamily with similar accuracy as the current state-of-the-art methods. however, the family-based approaches do not have wide applicability because they require that an adequate number of proteins are known to be associated with a family in order to train a classifier. traditional sequence-based analyses, such as blast do not have this requirement because they compare the sequences in a pairwise manner. to evaluate the generic nature of physicochemical property distributions for pairwise homology detection, all  <dig> protein sequences in the scop  <dig>  benchmark database can be compared against one another and the performance of the approach evaluated in a global manner with a roc analysis.

the family-based analysis did not improve by including amino acid indices that had a correlation of greater than  <dig> . thus, only the set of indices with correlation values less than  <dig>  was used to transform a protein r into the associated feature space , resulting in a vector of length  <dig> , Φpc). the kernel for two sequences r and r is the inner product:  

this kernel gives a measure of similarity between the two sequences in feature space, in essence the more similar the distributions the larger the kernel value. in a similar manner to leslie et al.  <cit> , this kernel is used to generate a distance measure between two proteins. the kernel is first normalized to unity for identical vectors:  

the distance between r and r is then  

the performance of the distance measure dpc was evaluated at the fold, superfamily, and family levels and defined by the scop hierarchy  <cit> . here a single roc curve can be computed using knowledge on true and false homologous pairs. there are  <dig>   <dig> and  <dig> true homologs and  <dig>   <dig> and  <dig> non-homologs at the fold, superfamily and family levels, respectively. the distance measure dpc performs as well or better than auc values for the smith-waterman , blast and mismatch algorithms as described by leslie et al.,  <cit>  for the task of pairwise protein homology detection .

psi-blast is also a popular approach to remote homology detection, but is not truly a pairwise comparison algorithm, but a profile-based algorithm, i.e., it cannot determine homology without first searching a database to build a profile. this is the likely reason it was not included in prior work in comparing kernel distance matrices to sequence-based homology algorithms  <cit> . blast, smith-waterman, and the kernel approaches can take the n sequence and yield a set of n × n pairwise relationship scores independent from any other sequence information. for comparative purposes psi-blast was run using the ncbi publicly available software and allowed to build the profile for a query by searching against the nr database for up to  <dig> iterations  <cit>  and not surprisingly it performed somewhat better than the other approaches with an auc of ~ <dig> and ~ <dig>  at the superfamily and family levels respectively. however, the accuracy and computational speed of psi-blast is related to the number of iterations and the size of the database used to generate the profile, which increases the computation time to weeks versus minutes for the methods in table  <dig> to perform the same n × n comparison in respect to a single processor. psi-blast is a great option for a small numbers of queries, but for large comparisons across databases such as nr to annotate new genomes blast is still the method used and thus the pcd approach would offer an alternative for they types of tasks.

the primary caveats with the current pcd approach and other kernel-based homology detection algorithms are associated with accuracy and usability. although these methods are slightly better than heuristic-based approaches such as blast, they are not quite good enough to warrant the investment to modify current pipelines that use blast. methods that take into account amino acid order in the vectorization step yield improved results in the family-based analyses, but would dramatically increase the computational cost. fast approaches to integrate amino acid order into pcd features, as well as combining vectors of the kernel to train a svm to classify protein pairs as homologous or non-homologous  <cit> , is a topic of future work. in respect to usability, the only output is a score. many users find value in evaluating the actual alignment produced. future work would also include integrating the svm-based homology algorithm with more advanced alignment algorithms, such as those that use centroids  <cit> , to give the most probabilistically correct alignment information.

computational efficiency
the computational cost of transforming proteins into a vectorized form is often a significant barrier preventing widespread acceptance of new methods. when applying svm methods to the pairwise homology problem, the bulk of the computational cost is in the vectorization of the query sequence, i.e., transforming the protein sequence into a fixed length vector. furthermore, methods that require a basis set of proteins against which to derive feature scores   <cit>  are targeted, meaning that feature space is directly tied to the families in the basis set, and thus are not well suited to the generic pairwise problem.

the top-performing family-based methods are also the most computationally expensive and require multiple complex steps to arrive at the final vector. by contrast, utilizing a string-based kernel  <cit>  or aaindex-base string kernel, such as in the svm-pcd method, requires much more simple calculations and hence a much reduced run-time. to illustrate the magnitude of this difference, hochreiter  <cit>  reported a run-time of  <dig> hours for local-alignment-based method on a particular benchmark of  <dig>  sequences vs. a run-time of  <dig> seconds for a mismatch kernel method on the same benchmark. with five orders-of-magnitude faster run time, the mismatch-type methods are ideal candidates for a generic pairwise implementation.

to demonstrate the simplicity of the pcd vectorization process, figure  <dig> gives pseudocode for the calculation of the vector of a single query protein of length l. in the general case there are n indices selected from the aaindex and each has a lookup table of values associated with each possible 4-mer, which is used in the 'lookup_ <dig> mer' function. in addition, each aaindex has a mean  and standard deviation  value that are stored in a vector of length nindices. building the histogram is simply binning the normalized values based on a sliding window of size  <dig> , starting at - <dig>  and is represented as 'build_histogram_18' function and is a quick and simple computation. once the histogram is derived for an index it is simply concatenated to the ones already computed.

CONCLUSIONS
we have presented a new approach to use physicochemical properties via the aaindex to transform protein sequences into vector representation in a simple and computationally efficient manner. this new method, pcd, was evaluated using the common machine learning svm approach of classifying proteins into predefined families. our svm-pcd method performed nearly as well as the computationally expensive svm-rqa, which also uses physicochemical properties.

pcd is similar to string kernel methods in respect to computational costs and scaling. pcd was compared in a pairwise manner against the best string kernel presented by leslie et al. , -mismatch where  <dig> is the length of the k-mer and  <dig> is the number of allowed mis-matches. roc analyses showed that our physicochemical property distributions offered an advantage over simple string comparisons for the identification of homologs at the fold, superfamily and family levels.

authors' contributions
bmw developed the mathematical method, performed statistical analyses, and wrote the manuscript. kgr helped to develop and evaluate feature generation methods. cso performed computational comparisons and wrote the manuscript. all authors read and approved the final version of the manuscript.

supplementary material
additional file 1
table s <dig>  the average of the  <dig> auc scores across multiple algorithms

click here for file

 acknowledgements
we would like to thank lee ann mccue for her helpful comments about this methodology development effort. the pacific northwest national laboratory  is operated by battelle for the u.s. department of energy under contract de-ac-76rl <dig>  this material is based upon work supported by laboratory directed research and development at pnnl and the national science foundation under grant no.  <dig> .
