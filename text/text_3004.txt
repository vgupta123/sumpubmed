BACKGROUND
localized perturbations in a protein structure can originate from point mutations, chemical modifications, interaction with other molecules, etc. sometimes, it is necessary to compare alternative structures for the same protein sequence . to assess such protein structural perturbations, structures are usually compared in a detailed way, by looking at the position and orientation of individual atoms, residues, or secondary structures . this approach is mandatory on case studies, because it leads to explain how modifications have changed the structure and function of a protein. however, this kind of comparison is usually done by superposing different particular structure elements individually and/or by using different protein-specific frames of reference, which are chosen according to the expertise and personal criteria of the researcher. this complicates establishing generalizations applicable to different proteins and the analysis of large numbers of cases. for such situations, quantitative measures of structural perturbation, such as the root mean square deviation  or a derivative function  <cit> , are used.

rmsd is a measure that is simple to calculate and to understand, it can be employed to establish comparisons through different structural families, it has been used very widely, and it is familiar to every researcher in the field. however, rmsd is usually referred to whole-molecule superpositions, so that it does not provide information on partial features, such as whether the perturbation is local or distributed throughout the whole molecule. this problem might be overcome by looking at the components of rmsd, the squared distances between pairs points compared. however, there is a problem with this approach, inherent to whole-molecule superpositions: portions of the structure with little or no perturbation may be badly superposed in order to improve the superposition of those portions with important distortions.

several authors have developed effective methods for sequence alignment based on local structural features  <cit> . most of these methods do not work with neighborhoods of equal and fixed size, or the local zones are not equally distributed along the molecule. this is not a problem for the task of structural alignment because, once a local zone is defined, the goal is usually to optimize whatever measure is used inside that zone. on the other hand, for the detection and description of structural alterations it is essential that all local zones have the same size, in order to compare among them on a uniform basis, therefore allowing the reliable identification of zones with a perturbation that is significantly different from the average. moreover, these methods refer  their local zones to a secondary structure element or a window of residues along the sequence. these are one-dimensional boundaries, which while being convenient for aligning sequences, are poor to examine three-dimensional structure perturbations, which may involve atoms from residues that are not close in the linear sequence, whose interactions are thus neglected.

specifically for the recognition and measure of local structural alterations, we propose that it is more suitable to compare structures on a uniform and residue-based approach, and by delimiting the neighborhood of each residue just in terms of distances. as a result, we conceive a unit of comparison integrated by a residue and the group of adjacent atoms within a fixed radius. therefore, we have developed an algorithm to quantify the degree of structural alteration in the local neighborhood of each residue, when comparing two or more structures, and the means of exploiting this measure not only analytically but also visually.

implementation
colores  is a program that compares two or more protein structures, by performing an assessment of the local structural alteration in the neighborhood of each residue. the input is a set of protein structure files in pdb  format, a sequence alignment between those structures in gde format , and a set of user choices described below. the program generates a log file containing detailed information of each local comparison, a data file containing summaries per alignment position, a structure  file and a script file for the rasmol  <cit>  program, which allows the user to inspect the results visually. colores automatically invokes rasmol to show the results after its job is done.

for each position in the alignment, colores calculates two scores, described next:

truly local score
the algorithm compares protein structures on a residue-by-residue basis. it calculates a score for each alignment position having no gaps on either sequence. the calculation is performed as described next:

for each structure , a sphere whose radius is chosen by the user is defined around the residue under consideration. these spheres can be centered either at the alpha carbon atom or at the center of mass of their respective residues, according to the user's choice.

then, two lists are prepared containing all atoms inside each sphere. there are three options regarding the kind of atoms to be included : all heavy  atoms, backbone atoms, or alpha carbon atoms.

next , the algorithm selects which atom pairs will actually be used for calculations . the user option at this stage is to use only atom pairs whose members are both inside their corresponding spheres , or pairs with at least one member inside one of the spheres .

after selecting the atom pairs, the sets of points  are placed in the same coordinate system, with the centers of both spheres at the origin .

finally, the quaternion method  <cit>  is used to find the rotation of one set of points around the origin that minimizes the rmsd between the two sets of points. the final rmsd value is used as a measure of the perturbation for the region surrounding the residue considered. we will refer to it as the "truly-local score".

in this way a score value is obtained per each non-gapped position of the alignment, for the comparison of two structures. if there are more than two structures to analyze, every one of them is iteratively compared against the rest, and the final score per alignment position is the average of scores obtained from all the pairwise comparisons.

heuristic penalties: mutations or the use of the "intersection set"  can result in unpaired atoms. in this case, the user can choose either to ignore these atoms or to introduce a heuristic penalty to account for their presence in one neighbor list but not in the other. it can be argued that these unpaired atoms actually reflect a difference in a residue neighborhood from one protein to the other, which should be accounted for. the penalty function is largest when the distance from the unpaired atom to the center of the sphere is zero, and it decreases smoothly to zero when this distance is equal to the sphere radius:



where pmax is a maximum penalty value , r stands for the sphere radius, and du is the distance from the unpaired atom to the center of the sphere. the score formula, introduced in figure  <dig>  is modified to account for the penalty in this way:



where n is the number of paired atoms and m is the number of unpaired atoms.

pseudo-local score
colores also calculates an alternative score, which does not make use of a sphere nor any "neighborhood" concept. a structural superposition of the two whole structures is performed as usual: the complete structures are used, the rotations are centered at the center of mass of the structures, and the rmsd for the whole structure is minimized using the quaternion method.

then, the distance between equivalent alpha carbon atom pairs  is taken as an alternative "pseudo-local" score. this measure is, in some way, the one used when a researcher superposes two structures and visually analyses the distance between the backbones. this score is not presented as a novelty but as a reference of one of the current ways of looking for "local" structure alteration or conservation, and to show the significant improvement represented by the truly-local score. the pseudo-local score suffers from the drawbacks mentioned before for whole-molecule superpositions, i.e. that portions of the structure with little or no perturbation are superposed badly in order to improve the superposition of those portions with important perturbations.

output visualization
along with the detailed log file and the data file containing the scores per alignment position, a structure file is produced whose atom coordinates can be selected to be either:

a) the coordinates of the first protein of the alignment.

b) average coordinates corresponding to each position: the coordinates of equivalent backbone atoms are averaged after their structures have been superposed. the average structure is only created for visualization purposes; it is not used for the calculation of the scores.

the truly-local and/or the pseudo local score are also saved in the structure file, in the data column corresponding to the b-factor . this allows displaying the scores on the structure, by employing different colors and different backbone widths; both means of visualization are used simultaneously to aid the visual inspection of the results. this also allows the user to modify further this display by using one or the other property to show a different specific feature, while still showing the colores scores with the remaining property. the three-dimensional presentation of numerical scores and other information as colors or shapes has proven to be a powerful tool for analyzing this kind of data , because it allows to appreciate spatial relationships that are not so evident in a bi-dimensional graph.

a script file for rasmol is created in order to launch the display automatically, and to spare the user the need to learn how to configure the program .

for a better display, the scores saved in the structure file differ from the original ones , in the sense that they are internally normalized and corrected to account for gapped positions .

RESULTS
we have used colores to analyze examples taken from different works on protein structure research. here we provide a detailed description of two cases, for which we compare colores with other structural comparison software. additional examples are available at the colores webpage.

unless stated otherwise, in the examples provided we have used default parameters for the program, which can be found  in a key file accompanying the executable files distribution. the default values for the more significant options are:  the sphere has a radius of  <dig> a and  it is centered at the alpha carbon atom of the residues,  the atoms eligible for comparison are all backbone atoms,  only atom pairs whose members are inside the spheres in both structures are included in the comparison , and  there is no heuristic penalty to account for unpaired atoms.

values near  <dig> a are usually used to define a limit in comparable studies, were the goal is also to reduce the scope of a calculation to the relevant neighborhood, like the cut-offs for atomic interacting forces in molecular mechanics calculations, or the spatial boundary for the ooi's number  <cit> . the use of backbone atoms is an appropriate and popular choice for protein structure comparison, although in some cases the alternative possibilities are better suited, for instance when comparing prediction models that are made only of alpha carbon atoms traces, or for the analysis of two very similar structures that may require using all heavy atoms. regarding the remaining choices, which are considering only atom pairs whose members are inside the spheres in both structures and not using heuristic penalties to account for unpaired atoms, both obey to the criteria of keeping the calculation as simple as possible, in order to make it more transparent to the novel user and avoiding the introduction of additional parameters.

this is a "first approach" and all-purpose set of choices that the user, after an initial test run, in some cases may change to address better his/her specific protein model, goals, and personal criteria.

protein structure prediction
the assessment of protein structure predictions  is an area where our algorithm can make a significant contribution. a three-dimensional structural model of a protein is a powerful asset in the investigation of its biological function , but producing such a model through experimental determinations is not always easy or even possible. as a result, powerful programs to produce theoretical predictions are being developed . the different prediction tools are contrasted in the critical assessment of protein structure prediction  a community-wide experiment where sequences of proteins, whose experimental structures will be released soon, are communicated to groups working in the field so that they can make their predictions  <cit> . original algorithms have been developed and used for the analysis of casp predictions  <cit> . colores is also a valuable tool for this purpose, because it can help to compare both visually and analytically different predictions for a given target.

we will compare the results from colores and the rms/coverage method. the latter is adequately explained in references  <cit> ; in brief, it reports, for a given fraction of the protein residues , which combination of residues exhibits the best superposition.

the casp prediction t0030ab <dig> is analyzed using this method in  <cit> . the main conclusions of the rms/coverage analysis are:

a) for superpositions of up to four residues, the zone around residues 20- <dig> exhibits the best superposition.

b) for superpositions comprising between  <dig> and  <dig> residues, the best superposition primarily involves residues in a hairpin centered on residues 48- <dig> . for superpositions involving  <dig> residues or more, a different set of residues comprise the best superposition, this leads to the conclusion that the hairpin structure is well predicted locally but not with respect to the rest of the structure.

c) for superpositions involving  <dig> residues or more, residue stretches corresponding to four different protein zones integrate the best superposition set. all these stretches grow simultaneously along with the increase in coverage.

in figure  <dig> we show the colores results from comparing the predicted structure with the experimentally determined target structure. it can be seen that the residue neighborhoods with smallest truly-local scores are those around residues  <dig>   <dig>   <dig>  26- <dig>  20- <dig>  and 66; three of them correspond to the zones reported in the rms/coverage results, and three are new. zones found by colores but not by rms/coverage are those still well predicted locally but ranking second to other with the same coverage .

there are differences in the way that residues are included in the lists for the two programs, and this is reflected in the output. for instance, for the loop around residues 48- <dig>  rms coverage shows most of it in the best coverage list, but colores just marks a low score for residue  <dig>  this is because the neighborhood of residue  <dig> is composed almost entirely of residues in the loop, while the neighborhoods of the remaining residues of the loop include atoms from other parts of the protein. this means that residue  <dig> has a relatively better predicted neighborhood, while the neighborhoods of the other residues in the loop include both well predicted and poorly predicted protein regions.

rms/coverage and colores are similar in one feature: they report results from the superposition of atoms that belong to a list of equivalent atoms. the main difference is that rms/coverage atom lists are made from a combination of residues taken from any part of the protein, provided that they exhibits the lower rmsd after superposition; while colores lists belong to atoms surrounding a certain residue. the other difference is that if two different protein zones of a similar size are especially well predicted, rms/coverage will report just the best superposition, while colores will allow noticing the two of them due to their low score.

rms/coverage can indicate when a part of the protein is well predicted locally and not with respect to the rest of the protein, because a single zone will have the best rmsd at low coverages but not at larger coverages. on the other hand, the truly-local score of colores can show multiple zones that have been well predicted locally, but it does not indicate how these zones have been predicted in the context of the rest of the structure. this can be alleviated partially by looking at the pseudo-local score, as it is based on a whole-molecule superposition. when a neighborhood is well predicted locally , if it has a high pseudo-local score it can also be concluded that it is badly predicted with respect to the rest of the structure.

the rms/coverage method sometimes reports a single "best superposition" for a given coverage, which if formed by unrelated structure patches . these zones are not sequentially close, neither are they near in three-dimensional space, nor belong to the same secondary structure element. what can be deduced from the fact that, when arbitrarily grouped and separated from the rest of the structure, these two structure patches superpose well? since colores reports results of a zone that represents a spatial neighborhood of a residue, its unit of comparison always has an objective interpretation. besides, when reporting one of these artificial merges, rms/coverage may overlook a zone with more structural significance and a good local superposition that does not have the single best rmsd for the same coverage level; this is not likely to happen when using colores.

summing up, colores offers two main advantages:

- when two or more zones of similar size have been well predicted, colores reports all of them simultaneously.

- colores reports a definite score for each residue. in addition, the scores correspond to a protein zone that has a significant meaning .

a secondary advantage of colores versus rms/coverage is that colores is actually available for download and use, while rms/coverage is not available as a software application .

it is also worthwhile to compare colores with molmol  <cit> , which is a software widely used for structure visualization and comparison. to compare two or more structures, molmol calculates a "local rmsd" by iteratively superposing all combinations of three contiguous residues, and then assigning the rmsd value to the middle one. molmol also calculates a score named "average global displacements" which is the same as the pseudo-local score calculated by colores.

when the molmol local rmsd is calculated for our present example , it can be seen that it detects several three-residue-long windows of low rmsd, being the one of lowest value around residue  <dig> . but all the other zones which are well predicted and detected by the other methods  cannot be found using molmol local rmsd. this is because rms/coverage and colores can take into account bigger sets of atoms. therefore, molmol shares with colores the property of reporting secondary well-predicted zones, but it is restricted to analyze only very low linear stretches of three residues. the idea behind colores is to enclose a significant neighborhood, big enough to include atoms that do not necessarily belong to very close and sequentially connected residues.

macromolecular movements
we have found that colores is also especially suited to analyze concerted molecular movements that involve a hinge or shear movement of an entire protein domain  <cit> . in these cases, standard "whole molecule" superposition is doomed to fail, because there is no global similarity between the two related structures. in contrast, local superposition can sharply differentiate which zones have maintained its local structure and where the structural alteration  has occurred. we have tested the program against several examples from the database of macromolecular movements  <cit> . here we detail the example of the calmodulin protein.

the unligated form of calmodulin is composed of two globular domains connected by a long helix. the protein can bind peptide helices by closing the two domains in a hinge motion, which breaks the long helix in two minor helices with a strand in between.

the standard whole molecule superposition displayed in figure 3a clearly shows the inadequacy of this approach to differentiate portions of the structure with little or no perturbation  from the connecting helix, which does suffer important perturbations. this is also reflected by the profile of the pseudo-local score on figure 3b . on the contrary, the truly-local score shown in figure 3b  clearly discriminates these zones.

this example shows that our algorithm may contribute to discriminate the unaltered domains from hinge or otherwise structurally altered regions, and therefore to detect evidence of this kind of molecular movements. moreover, this is achieved without employing any particular knowledge about the protein function or structure. considering that the number of existing protein structures increases exponentially, and concurrently more structures belonging to the same protein but determined  under different circumstances are available, colores may help to find and even to automate the process of molecular movement detection as a complement of other tools like the sieve-fit procedure  <cit>  or the multiple linkage clustering  <cit> .

regarding the comparison with other software, as a program for calculating rms/coverage is not available, we cannot provide an actual analysis. nevertheless, it is evident that it would report a single globular domain having the best coverage, but not both of them simultaneously. in figure 3c we compare colores with molmol. it can be seen that molmol local rmsd score reports three highly perturbed residues , while colores reports the 75- <dig> residue stretch. molmol only detects coarse main chain alterations from one structure to the other, in the center of the hinge where the long helix is broken. on the other hand, colores also incorporates the changes in the neighborhood of all the residues along the hinge, so it allows defining this region entirely. independently, the hinge region has been defined by the residues with the largest torsion angle differences   <cit> , confirming the better sensitivity of the colores analysis.

it is interesting to note, before leaving this example, that when a heuristic penalty is introduced in the truly local score , the output is significantly changed. two zones in each domain increase their score, showing that the neighborhood of the corresponding residues was actually changed; this is due to atoms from the opposite domain, which moved from a nearby position in the closed form to a long distance in the open form.

CONCLUSIONS
the comparison of protein structures is an established tool for investigating biological function, macromolecular structure, protein evolution, etc. the superposition of entire structures is the standard approach to initiate this analysis but, in some cases, it can produce misleading results.

a local approach for structural comparison can lead to a better insight and discrimination of perturbed against unchanged portions of the structure. local comparison has been used mostly in the area of structure-based sequence alignment, by employing approaches suited for that particular purpose, but not for the general description of how each zone of a protein changes between two or more structures.

we have developed an algorithm to describe local perturbations of protein structures in quantitative rather than descriptive terms. the method is applicable to any situation and its results are comparable between very different cases. besides, a means of analyzing its results visually is provided by the program that implements the algorithm; this is a valuable asset in order to interpret three-dimensional results. the analysis of structural perturbations is not a task that can be done only with numbers and tables; sometimes it is necessary to use visual inspection to discriminate what is relevant, and to search for relationships between structural conservation/perturbation and chemical modifications, biological function, changes in the crystal contacts, etc. we have compared our results with other existing software to show that the present method offers a useful alternative for the analysis of protein structures.

the examples provided in this article, and others available in the software webpage, show that the program can be used easily to perform standard tasks on protein structural research, like:

a) on experimentally generated structures: the comparison of mutant and wild type proteins, the comparison of enzymes in open/close conformation , the comparison of protein structures determined from different sources, and the comparison of structurally similar proteins in general.

b) on computationally generated structures: the assessment of structure alterations after molecular mechanics manipulations like minimization, molecular dynamics simulation, etc.; the comparison of different three-dimensional structure predictions either among them or against the target structure.

colores can also be used in less standard applications, like the definition of evolutionarily conserved cores, or the identification of zones implicated in macromolecular movements.

colores provides numerical results that can be used for quantitative purposes, and are comparable even across different protein structural families. its scores are also displayed over the structures under study, in a way that can be interpreted quickly and easily. these characteristics make it both suitable for "first glance" purposes when approaching to a novel system under study, and for more specific analytic tasks. its local approach facilitates finding which zones have been perturbed and how much, particularly when using the truly-local score.

it is important to note that, in its present implementation, colores is only able to calculate trivial alignments for pairwise comparisons, when they involve proteins having the same sequence length, and at most a few point mutations. for comparisons involving multiple structures and/or notoriously different sequences, colores does not perform nor improve an alignment between the structures under analysis; but instead it requires the alignment as an input, as described before. we are aware that our comparison method could be developed further as a structural alignment algorithm, and although we may explore that possibility in the future, actually a variety of quite well-developed options are already available for performing the alignment of two protein structures  <cit> .

finally, we would like to consider another possible extension of the method. it has been established that cutoff distances for physical potentials are useful to speed molecular mechanics simulations  <cit> . in these cases, a spherical limit defines a neighborhood of atoms that effectively interact with the atom whose energetic contribution is being calculated. an energetic local score could be calculated from the difference between single point calculations for all the atoms inside the spheres used in colores. this would complement the present geometry-based local score with an energetic one. this, in turn may be useful to assess if a geometrical perturbation has an energetic counterpart. for instance, a conservative mutation may only produce an increment in the geometric score but not in the energetic score, while a non-conservative mutation may have an impact on both.

availability and requirements
project name: colores software

project home page: . the files used in the examples described in this paper, among others, can also be downloaded from that internet address, in order to analyze them interactively.

operating system: executable files tested for windows or linux are available. the source code was written to be platform independent, and it is also available.

programming language: ansi standard c.

other requirements: a software capable of showing temperature factors on protein structures as a scale of variable color and backbone width. it is not required for colores to run , but just in order to check results graphically. it is convenient to use rasmol, since colores automatically calls the program and execute the proper commands for a better display, with no need of user intervention. other software  can be used instead, but in this case, the user must write the appropriate script file or commands.

license: free for academic purposes.

any restrictions to use by non-academics: contact the authors.

authors' contributions
both authors developed the method. ml developed and tested the software under the supervision of je. ml wrote the manuscript and je edited the final version.

