BACKGROUND
dna microarray technology offers the ability to screen the expression levels of thousands of genes in parallel under different experimental conditions or their evolution in discrete time points. all these measurements contain information on several aspects of gene regulation and function, ranging from understanding the global cell-cycle control of microorganisms  <cit> , to cancer in humans  <cit> . gene clustering is one of the most frequently used analysis methods for gene expression data. clustering algorithms are used to divide genes into groups according to the degree of their expression similarity. these groups suggest the correlation and/or co-regulation of the respective genes that possibly share common biological roles.

the combination of data from multiple microarray studies addressing a similar biological question is gaining high importance in the recent years  <cit>  due to the ever increasing number and complexity of the available gene expression datasets. the integration and evaluation of multiple datasets yield more reliable and robust results since they are based on a larger number of samples and the effects of the individual study-specific biases are diminished. a method for integration analysis of the data from multiple experiments is the aggregation of their clustering results into a consensus clustering which emphasizes the common organization in all the datasets and reveals the significant differences among them.

in this work, we present and validate a novel generic approach to consensus clustering based on formal concept analysis  where microarray data realized under different experimental conditions is integrated into a representative consensus clustering solution. it initially divides the available microarray experiments into groups of related datasets with respect to a predefined criterion and then a consensus clustering algorithm is applied to each group of experiments separately. the rationale behind this is that if the experiments are closely related to one another, then they produce more accurate and robust clustering solution. next, the clustering solutions produced by the different groups are pooled together and further analyzed by employing fca which allows extracting valuable insights from the data and generating a gene partition over the whole experimental compendium. fca produces a concept lattice where each concept represents a subset of genes that belongs to a number of clusters. the concepts compose the final disjoint clustering partition.

the proposed general fca-enhanced consensus clustering approach is experimentally validated. for this purpose, two consensus clustering methods are adapted to incorporate an fca analysis step. these methods are quite different; the first  integrates the partitioning results derived from multiple microarray datasets through a weighted aggregation process, while the second employs a particle swarm optimization  approach to cluster gene expression data across multiple experiments. the fca results derived from both methods are analysed with respect to the cluster consistency and biological relevance. it is shown that although both algorithms optimize different clustering characteristics, fca is able to construct similar consensus clustering solutions that are representative for the whole set of experiments.

in summary, the main contribution of the introduced fca-enhanced consensus clustering technique is that it proposes a general approach to the combination of clustering algorithms with formal concept analysis  for deriving clustering solutions from multiple gene expression matrices. in addition, the approach is demonstrated to be independent of the selected clustering algorithm. in this way one can use a customized algorithm optimized for the specific characteristics of each group of experiments. the further employment of fca allows performing a subsequent data analysis, which provides useful insights on the biological role of genes contained in the same fca concepts.

related work
presently, with the increasing number and complexity of available gene expression datasets, the combination of data from multiple microarray studies addressing a similar biological question is gaining importance. however, as emphasized in  <cit> , the investigations of gene expression levels have also generated controversy because of the probabilistic nature of the conclusions and the discrepancies between the results of the studies addressing the same biological question. subsequently, the authors proposed data analysis and visualization tools for estimating the degree to which the findings of one study are reproduced by others and for integrating multiple studies in a single analysis. these tools were described in the context of studies of breast cancer and it was illustrated that it is possible to identify a substantial biologically relevant subset of the human genome within which the expression levels are reliable. the latter suggests that important biological signals are often preserved or enhanced by multiple experiments.

another approach to combining data from different experiments is the aggregation of their clusterings into a consensus or representative clustering which increases the confidence in the common features in all the datasets and reveals the important differences among them  <cit> . methods for the combination of clustering results derived for each dataset separately have been considered in  <cit> . the algorithm proposed in  <cit>  first generates local cluster models and then combines them into a global cluster model of the data. the study in  <cit>  focuses on clustering ensembles, i.e. seeking a combination of multiple partitions that provides improved overall clustering of the given data. the combined partition is found as a solution to the corresponding maximum likelihood problem using the expectation-maximization  algorithm in  <cit> . the authors in  <cit>  consider the problem of combining multiple partitions of a set of objects into a single consolidated clustering without accessing the features or algorithms that determined these partitions. the cluster ensemble problem is formalized as a combinatorial optimization problem in terms of shared mutual information.

in contrast to the foregoing approaches, the generic solution proposed in this paper applies fca in order to construct a consensus clustering that is representative for all the datasets and in addition, it is independent of the applied clustering algorithm. in order to validate the proposed fca-enhanced approach two consensus clustering algorithms have been developed, integrative <cit>  and pso-based <cit> , and used in the validation process. note that, a preliminary fca-enhanced version of the pso-based algorithm was initially considered in  <cit> .

in  <cit>  we study two microarray data integration techniques that can be applied to the problem of deriving clustering results from a set of microarray experiments. a cluster integration approach is considered, which combines the information contained in multiple microarray experiments at the level of expression or distance matrices and then applies a clustering algorithm on the combined matrix. furthermore, a technique for the combination of partitioning results derived from multiple microarray datasets, referred to as integrative consensus clustering, is introduced. it uses a traditional aggregation schema in order to integrate the different partitioning results into a final partition matrix.

the pso-based approach is used to cluster gene expression data across multiple experiments. in this algorithm, referred to as pso-based consensus clustering, each experiment  defines a particle which is initialized with a set of k cluster centroids obtained after performing k-means clustering on the experiment. the final  clustering solution is found by updating the particles using the information on the best clustering solution obtained by each experiment and the entire set of experiments.

in this article, the integrative and pso-based consensus clustering approaches are extended incorporating a final fca-step. the experimental results from their validation suggest that although both algorithms optimize different clustering characteristics, fca is able to construct similar consensus clustering solutions.

methods
partitioning algorithms
three partitioning algorithms are commonly used for the purpose of dividing data objects into k disjoint clusters  <cit> : k-means, k-medians and k-medoids clustering. all three methods start by initializing a set of k cluster centres, where k is preliminarily determined. subsequently, each object of the dataset is assigned to the cluster whose centre is the nearest, and the cluster centres are recomputed. this process is repeated until the objects inside every cluster become as close to the centre as possible and no further object item reassignments take place. the em algorithm in  <cit>  is commonly used for that purpose, i.e. to find the optimal partitioning into k groups. the three partitioning methods in question differ in how the cluster centre is defined. in k-means, the cluster centre is defined as the mean data vector averaged over all objects in the cluster. instead of the mean, k-medians calculates the median for each dimension in the data vector. finally, in k-medoids  <cit> , which is a robust version of the k-means, the cluster centre is defined as the object which has the smallest sum of distances to the other objects in the cluster, i.e., this is the most centrally located point in a given cluster.

particle swarm optimization
particle swarm optimization  is an evolutionary computation method introduced in  <cit> . in order to find an optimal or near-optimal solution to the problem, pso updates the current generation of particles  using the information on the best solution obtained by each particle and the entire population.

the hybrid algorithm proposed in  <cit>  combines k-means and pso for deriving a clustering result from a group of n related microarray datasets m <dig> m <dig> …,m
n
. each dataset contains the gene expression levels of m genes in n
i
 different experimental conditions or time points. in this context, each matrix i is used to generate k cluster centers, which are considered to represent a particle, i.e. the particle is treated as a set of points in an n
i
-dimensional space. the final  clustering solution is found by updating the particles using the information on the best clustering solution obtained by each data matrix and the entire set of matrices.

assume that the i-th particle is initialized with a set of k cluster centersaci=c1i,c2i,…,cki and a set of velocity vectorsbvi=v1i,v2i,…,vki using gene expression matrix m
i
. thus each cluster center is a vector cji=cj1i,cj2i,…,cjnii and each velocity vector is a vector vji=vj1i,vj2i,…,vjnii, i.e. each particle i is a matrix  in the k×n
i
 dimensional space.

next, assume that p
g
={p
g <dig> p
g <dig> …,p
g
k
} is a set of cluster centers in an n
g
-dimensional space representing the best clustering solution found so far within the set of matrices and pi=p1i,p2i,…,pki is the set of centroids of the best solution discovered so far by the corresponding matrix. the update equation for the d-th dimension of the j-the velocity vector of the i-th particle is defined as follows 

  vjdi=w·vjdi+c1·φ1·pjdi−cjdi+c2·φ2·g, 

where i= <dig> …,n; j= <dig> …,k; d= <dig> …,n
i
 and 

  g=pgd−cjdi,ifng≥ni <dig> otherwise 

the variables φ <dig> and φ <dig> are uniformly generated random numbers in the range  <cit> , c <dig> and c <dig> are called acceleration constants whereas w is called inertia weight as defined in  <cit> . the first part of equation  represents the inertia of the previous velocity, the second part is the cognition part that identifies the personal experience of the particle and the third part represents the cooperation among particles and is therefore named the social component. acceleration numbers c <dig>  c <dig> and inertia weight w are predefined by the user. note that the cognition part in the above equation has a modified interpretation. namely, it represents the private ‘thinking’  of the particle based on its own source of information . due to this we adapted the social part ) since each particle matrix has a different number of columns  due to different number of experiment points in each dataset. it was demonstrated in  <cit>  that when w is in the range  pso will have the best chance to find the global optimum within a reasonable number of iterations. furthermore, w= <dig>  and c1=c2= <dig>  were found in  <cit>  to ensure good convergence.

the clustering algorithm combining pso and k-means can be summarized as follows: 

 <dig>  initialize each particle with k cluster centers obtained as a result of applying the k-means algorithm to the corresponding data matrix.

 <dig>  initialize the personal best clustering solution of each matrix with the corresponding clustering solution found in step  <dig> 

 <dig>  for iteration =  <dig> to max-iteration do

 fori=1tondo 

i. forj=1tomdo 

a. calculate the distance of gene g
j
 with all cluster centers.

b. assign g
j
 to the cluster that has the nearest center to g
j
.

ii. end for

iii. calculate the fitness function for the clustering solution c
i
.

iv. update the personal best clustering solution p
i
.

 end for

 find the global best solution p
g
.

 update the cluster centers according to the velocity updating formula proposed in equation .

 <dig>  end for

the pso-based clustering algorithm was first introduced in  <cit>  showing that it outperforms k-means and a few other state-of-the-art clustering algorithms. in this method, each particle represents a possible set of k cluster centroids. the authors in  <cit>  hybridized the approach in  <cit>  with the k-means algorithm for clustering general datasets. a single particle of the swarm is initialized with the result of the k-means algorithm while the rest of the swarm is initialized randomly. in  <cit>  a new approach is proposed based on the combination of pso and self organizing maps and applied it for clustering gene expression data obtaining promising results. further the study in  <cit>  considers a dynamic clustering approach based on pso and genetic algorithm. the main advantage of this algorithm is that it can automatically determine the optimal number of clusters and simultaneously cluster the data set with minimal user interference. the downside of all the foregoing approaches is that they are not suitable for consolidating multiple partitions as the conducted clustering analysis is based on a single expression matrix.

formal concept analysis
formal concept analysis   <cit>  is a mathematical formalism allowing to derive a concept lattice from a formal context constituted of a set of objects o, a set of attributes a, and a binary relation defined as the cartesian product o×a. the context is described as a table which rows correspond to objects and the columns to attributes or properties and a cross in a table cell means that “an object possesses a property”. fca is used for a number of purposes among which knowledge formalization and acquisition, ontology design, and data mining.

the concept lattice is composed of formal concepts, or simply concepts, organized into a hierarchy by a partial ordering . intuitively, a concept is a pair  where x⊆o, y⊆a, and x is the maximum set of objects sharing the whole set of attributes in y and vice-versa. the set x is called the extent and the set y the intent of the concept . the subsumption  relation between concepts is defined as follows: 

  x <dig> y1≺x <dig> y2⇔x1⊆x2ory2⊆y <dig>  

relying on this subsumption relation ≺, the set of all concepts extracted from a context is organized within a complete lattice. that means that for any set of concepts there is a smallest super concept and a largest sub concept, called the concept lattice.

the fca or concept lattice approach has been applied for extracting local patterns from microarray data  <cit>  or for performing microarray data comparison  <cit> . for example, the fca method proposed in  <cit>  builds a concept lattice from the experimental data together with additional biological information. each vertex of the lattice corresponds to a subset of genes that are grouped together according to their expression values and some biological information related to the gene function. it is assumed that the lattice structure of the gene sets might reflect biological relationships in the dataset. in  <cit> , a fca-based method is proposed for extracting groups or classes of co-expressed genes. a concept lattice is constructed where each concept represents a set of co-expressed genes in a number of situations. a serious drawback of the method is the fact that the expression matrix is transformed into a binary table  which leads to possible introduction of biases or information loss. thus the authors further propose and compare two fca-based methods for mining gene expression data and show that they are equivalent  <cit> . the first one relies on interordinal scaling, encoding all possible intervals of attribute values in a formal context that is processed with classical fca algorithms. the second one relies on pattern structures without a prior transformation, and is shown to be more computationally efficient and to provide more readable results. notice that all the mentioned fca-based methods focus solely on optimizing the clustering of a single expression matrix and consequently, they are not suited for the consolidation of multiple partitions.

fca-enhanced consensus clustering algorithm
the problem of deriving clustering results from a set of gene expression matrices can be approached in two different ways: 1) information contained in different datasets may be combined at the level of expression  matrices and afterwards clustered; 2) given multiple clustering solutions, one per each dataset, find a consensus  clustering. in this section, a general fca-enhanced consensus clustering algorithm for deriving a clustering result from multiple microarray datasets is proposed which adopts the second approach.

assume that a particular biological phenomenon is monitored in several high-throughput experiments under n different conditions. each experiment i  is supposed to measure the gene expression levels of m
i
 genes in n
i
 different experimental conditions or time points. thus, a set of n different data matrices m <dig> m <dig> …,m
n
 will be produced, one per experiment.

the fca-enhanced consensus clustering consists of three distinctive steps in figure 1: 1) the expression datasets are divided into several smaller groups using some predefined criterion; 2) a consensus clustering algorithm  is applied to each group of datasets separately, which produces a list of different clustering solutions, one per group; 3) these clustering solutions are further transformed into a single clustering result by employing fca.
fca-enhanced
 consensus clustering approach.

in contrast to the consensus clustering algorithms discussed in the foregoing sections, where some partitioning  algorithm is applied to the entire set of experiments in order to produce the final clustering solution, the algorithm proposed herein initially divides the available microarray datasets into groups of related  experiments with respect to a predefined criterion. the rationale behind this is that if the experiments are closely related to one another, then these experiments produce more accurate and robust clustering solution. thus, the selected consensus clustering algorithm is applied to each group of experiments separately. this produces a list of different clustering solutions, one per each group. subsequently, these solutions are pooled together and further analyzed by employing fca which allows extracting valuable insights from the data and generating a gene partition over the whole experimental compendium. fca produces a concept lattice where each concept represents a subset of genes that belong to a number of clusters. the different concepts compose the final disjoint clustering partition.

the proposed fca-enhanced consensus clustering approach has the following characteristics: 

 <dig>  the clustering uses all data by allowing potentially each group of related experiments to have a different set of genes, i.e. the total set of studied genes is not restricted to those contained into all datasets;

 <dig>  it is better tuned to each experimental condition by identifying the initial number of clusters for each group of related experiments separately depending on the number, composition and quality of the gene profiles;

 <dig>  the problem with ties is avoided  by employing fca in order to analyze together all the partitioning results and find the final clustering solution representative of the whole experimental compendium.

the distinctive steps of the fca-enhanced clustering algorithm, visualized in figure  <dig>  are explained in detail below.

initialization step
let us consider the aforementioned expression matrices m <dig> m <dig> …,m
n
 monitoring n different genes in total. the initialization step is the most variable part of the algorithm since it closely depends on the concrete clustering algorithm employed.

the available gene expression matrices are divided into r groups of related  datasets with respect to some predefined criterion, e.g. the used synchronized method or the expression similarity between the matrices. for each group the set of studied genes needs to be restricted to those contained in all datasets of the group, i.e. the number of overlapping genes found across all datasets of the group. then the number of cluster centres is identified for each group of experiments i  separately. as discussed in  <cit> , this can be performed by running the k-means or other clustering algorithm on each data matrix for a range of different numbers of clusters. subsequently, the quality of the obtained clustering solutions needs to be assessed in some way in order to identify the clustering scheme which best fits the datasets in question. some commonly used validation measures are the silhouette index and connectivity, presented in the cluster validation measures section, which are able to identify the best clustering scheme. finally, the prevailing number of clusters within the concrete group of experiments is selected as representative for the whole group.

clustering step
the selected consensus clustering  algorithm is applied to each group of related experiments i  separately. the latter will generate a list of r different clustering solutions, one per each group. the result is that k  different clusters are produced by the different groups. this clustering solution is disjoint in terms of the gene expression profiles produced in the different experiments. however, it is not disjoint in terms of the different participating genes, i.e. there will be genes which will belong to more than one cluster.

fca-based analysis step
as discussed above, the n studied genes are grouped during the clustering step into k clusters that are not guaranteed to be disjoint. this overlapping partition is further analysed and refined into a disjoint one by applying fca. as mentioned above fca is a principled way of automatically deriving a hierarchical conceptual structure from a collection of objects and their properties. the approach takes as input a matrix  specifying a set of objects and the properties thereof, called attributes. in our case, a formal context consists of the set g of the n studied genes , the set of clusters c=c <dig> c <dig> …,c
k
 produced by the clustering step , and an indication of which genes belong to which clusters. thus, the context is described as a matrix, with the genes corresponding to the rows and the clusters corresponding to the columns of the matrix, and a value of  <dig> in cell  whenever gene i belongs to cluster c
j
. subsequently, a formal concept for this context is defined to be a pair  such that 

• x⊆g & y⊆c & every gene in x belongs to every cluster in y

• for every gene in g that is not in x, there is a cluster in y that does not contain that gene

• for every cluster in c that is not in y, there is a gene in x that does not belong to that cluster.

the family of these concepts obeys the mathematical axioms defining a concept lattice. the constructed lattice consists of concepts where each one represents a subset of genes belonging to a number of clusters. the set of all concepts partitions the genes into a set of disjoint clusters.

validation setup
microarray datasets
the aforementioned consensus clustering algorithms are validated and compared on benchmark datasets where the true clustering is known. these datasets are composed by gene expression time series data obtained from a study examining the global cell-cycle control of gene expression in fission yeast schizosaccharomyces pombe <cit> . the study includes eight independent time-course experiments synchronized respectively by: 

 <dig>  elutriation: three independent biological repeats ;

 <dig>  cdc <dig> block-release: two independent biological repeats, of which one in two dye-swapped technical replicates  and in addition, one experiment in a sep <dig> mutant background ;

 <dig>  a combination of both methods: elutriation and cdc <dig> block-release  as well as elutriation and cdc <dig> block-release .

thus, nine different expression test sets are available. in the pre-processing phase the rows with more than 25% missing entries are filtered out from each expression matrix and any other missing expression entries are imputed by the dtwimpute algorithm presented in  <cit> . in this way nine complete matrices are obtained.

the authors in  <cit>  identified  <dig> genes as cell-cycle regulated subjected to clustering which resulted in the formation of  <dig> separate clusters. subsequently, the time expression profiles of these genes are extracted from the complete data matrices and thus nine new matrices are constructed. note that some of these  <dig> genes are removed from the original matrices during the pre-processing phase, i.e. each dataset may have a different set of genes. thus a set of  <dig> different genes are present in the nine pre-processed datasets in total.

two different benchmark datasets are constructed from the original nine pre-processed matrices and used in the validation process: 

 <dig>  the genes that are not present in the intersection of the nine pre-processed datasets are removed. the latter produces a subset of  <dig> genes. subsequently, the time expression profiles of these genes are extracted from the complete data matrices and thus nine new matrices which form our test corpus  <dig> are constructed.

 <dig>  the initial complete datasets are divided into three groups with respect to the used synchronization method. the overlapping genes within each group are as follows: a subset of  <dig> common genes in the elutriation datasets, a subset of  <dig> common genes in the cdc <dig> block-release datasets and a subset of  <dig> common genes in the datasets synchronized by the combination of both methods. for each of the three groups only these common genes are retained. as a result of this nine new matrices which form our test corpus  <dig> are built. notice that the nine different dataset contain  <dig> different genes in total.

the benchmark datasets are normalized by applying a data transformation method as proposed in  <cit> .

consensus clustering algorithms
in order to validate the proposed general fca-enhanced approach, we applied two different consensus clustering methods: 1) an algorithm integrating multiple partitioning results and 2) a pso-based clustering method.

these two consensus clustering methods approach in a different way the initialization of the cluster centres and the production of the final clustering partition. both methods initially restrict the studied genes for each group to those contained in all datasets of the group.

the first algorithm, referred to as integrative, initializes the cluster centres for each group of experiments using the information contained in the datasets of the group in an integrated manner. this step is performed using a matrix constructed by concatenating the expression matrices in each group. the k-means algorithm is then applied to each expression matrix in the group to generate a set of partition matrices for each group. utilizing information on the quality of the microarrays, weights are assigned to the experiments and are further used in the integration process in order to obtain more realistic overall partition for each group. the data transformation method proposed in  <cit>  is used to evaluate the quality of the considered microarrays. it is applied to each expression matrix and the number of standardized genes is considered as a quality measure for this matrix. this step results in the assignment of a weight to each expression matrix in the group, i.e. the different experiments in the group will contribute to the final partitioning result to a different extent. a detailed explanation of the integrative consensus clustering algorithm can be found in  <cit> .

the second consensus clustering method, referred to as pso-based, employs a pso approach to cluster gene expression data across multiple experiments. each experiment  defines a particle which is initialized with a set of k cluster centroids obtained after performing the k-means clustering algorithm applied over the experiment. the final  clustering solution for each group of experiments is found by updating the particles using the information on the best clustering solution obtained by each experiment and the entire set of experiments in the group. a detailed explanation of the pso-based consensus clustering algorithm can be found in  <cit> .

cluster validation measures
one of the most important issues in cluster analysis is the validation of the clustering results. essentially, cluster validation techniques are designed to find the partitioning that best fits the underlying data, and should therefore be regarded as a key tool in the interpretation of the clustering results. since none of the clustering algorithms performs uniformly well under all scenarios, it is not reliable to use a single cluster validation measure, but instead to use at least two that reflect different aspects of a partitioning. in this sense, we have implemented two different validation measures for estimating the quality of the clusters: 

 <dig>  connectivity: for assessing connectedness;

 <dig>  silhouette index : for assessing compactness and separation properties of a partitioning.

connectivity
the connectivity captures the degree to which genes are connected within a cluster by keeping track of whether the neighbouring genes are put into the same cluster  <cit> . let us define m
i as the j-th nearest neighbour of gene i, and let χimi be zero if i and j are in the same cluster and 1/j otherwise. then for a particular clustering solution c <dig> c <dig> …,c
k
 of matrix m, which contains the expression values of m genes  in n different experimental conditions or time points , the connectivity is defined as 

 conn=∑i=1m∑j=1nχimi. 

the connectivity has a value between zero and infinity and should be minimized.

silhouette index
the silhouette index  reflects the compactness and separation of clusters  <cit> . suppose c <dig> c <dig> …,c
k
 is a clustering solution  of matrix m, which contains the expression profiles of m genes. then, the si is defined as 

 s=1m∑i=1mbi−ai/maxai,bi, 

 where a
i
 represents the average distance of gene i to the other genes of the cluster to which the gene is assigned, and b
i
 represents the minimum of the average distances of gene i to genes of the other clusters.

the values of the silhouette index vary from - <dig> to  <dig> and a higher value indicates better clustering results.

RESULTS
the validation process presented below has two main goals: 1) to illustrate that different clustering methods usually generate gene partitions on expression data, which may exhibit considerable inconsistencies and discrepancies in terms of clustering quality and gene composition 2) to demonstrate the added value of an fca-enhanced clustering approach for overcoming and diminishing such differences and preserving relevant biological signals. for this purpose, the following partitions have been generated and compared: 

 <dig>  two consensus partitions over test corpus  <dig> using respectively the original versions of the integrative and the pso-based consensus clustering algorithms;

 <dig>  two times three consensus partitions, one for each group of experiments from test corpus  <dig>  using respectively the grouped versions of the integrative and the pso-based consensus clustering algorithms as specified in the foregoing section;

 <dig>  two concept lattices derived by applying fca on the two sets of group partitions  produced respectively from the grouped versions of the integrative and the pso-based methods.

clustering performance
in this section, we evaluate and compare the clustering performance of the two consensus clustering algorithms discussed in the foregoing section on the benchmark datasets described above by using two cluster validation measures: silhouette index and connectivity.

the partitioning algorithms such as k-means contain the number of clusters  as a parameter and their major drawback is the lack of prior knowledge for that number. therefore, we initially identified the number of cluster centres by running the k-means clustering algorithm on each dataset for values of k between  <dig> and  <dig>  <cit> ,  <cit> . subsequently, the quality of the obtained clustering solutions is assessed using the connectivity validation index. we focused on the values of k at which a significant local change in value of the index occurs  <cit> . the optimal number of clusters for the different experiments range between  <dig> and  <dig> as can be seen in figure  <dig>  however, k= <dig> prevails  and therefore it is used for our experiments.
integrative
 and the
pso-based
 consensus clustering algorithms on test corpus  <dig> 

next, the performance of the grouped versions of the integrative and pso-based consensus clustering algorithms on test corpus  <dig> is considered. initially, the nine datasets are divided into three groups with respect to the used synchronized method: 

 <dig>  elutriation datasets: elu <dig>  elu <dig>  elu3;

 <dig>  cdc <dig> block-release datasets: cdc25- <dig>  cdc25- <dig> , cdc25- <dig> , cdc25-sep1;

 <dig>  datasets synchronized by the combination of both methods: elu-cdc <dig>  elu-cdc <dig> 

afterwards, the number of cluster centres is identified for each group using the connectivity measure. the selected optimal number of clusters for the three groups of experiments is as follows: elutriation datasets: k=4; cdc <dig> block-release datasets: k= <dig>  and the combined ones: k= <dig>  as a result  <dig> different clusters  in total are produced by each of the two consensus clustering methods.
integrative
 and
pso-based
 consensus clustering algorithms on test corpus  <dig> 

cluster consistency
in this section, we analyse the impact of the different clustering methods on the final gene partition. the degree of pairwise overlap between the different gene clusters generated by the integrative and the pso-based consensus clustering algorithms is calculated and compared. assume that we have a gene cluster c
i
 produced by the integrative algorithm and a gene cluster c
j
 coming from the pso-based clustering. then the degree of overlap is calculated as follows: 

 dij=#ci∩cjmax#ci,#cj <dig>  

in this way, d
i
j
 will be equal to  <dig> in case of full overlap between the clusters i and j,  <dig> in case of no overlap and between  <dig> and  <dig> otherwise.

the consensus gene partitions generated respectively by the original integrative and the pso-based consensus clustering algorithms on test corpus  <dig> are compared in figure  <dig>  the best overlap is recorded for the pairs: , ,  and . evidently, the genes of pso cluster  <dig> are almost uniformly distributed between integrative  <dig>  integrative  <dig> and integrative  <dig>  those of pso  <dig> are allocated to integrative  <dig>  the genes of pso  <dig> are mainly distributed between integrative  <dig> and integrative  <dig> and pso  <dig> has a high overlap with integrative  <dig> 

figures  <dig>  ,  depict the overlap between the consensus clustering assignment of pso-based versus the integrative clustering algorithms on test corpus  <dig> for each group of experiments separately . the best overlap is recorded for the following pairs: 

• elutriation: , , ,

• cdc <dig> block-release: , , , , , ,

• combined: , ,  and .

the high degree of pairwise overlap between the different gene clusters generated by the integrative and the pso-based consensus clustering algorithms suggests that there is a certain consistency in the resulting clustering solutions. the next section elaborates on this effect by applying fca on both consensus clustering solutions consolidating the different groups of experiments.

results from the fca-enhanced step
the gene partitions produced by the grouped versions of the integrative and pso-based consensus clustering algorithms on test corpus  <dig> are further analysed by applying fca.

first, we create a context that consists of the set of  <dig> studied genes and the set of  <dig> clusters produced by the grouped version of the integrative consensus clustering algorithm. it produces a lattice of  <dig> concepts for this context ). however,  <dig> concepts have support  <dig>  i.e. the benchmark genes are grouped into  <dig> disjoint clusters . further a context that consists of the set of  <dig> studied genes and the set of  <dig> clusters produced by the grouped version of the pso-based clustering algorithm is built. subsequently, a lattice of  <dig> concepts for this context is generated ). the fca step partitions the benchmark gene set in  <dig> disjoint clusters  in total since the rest of the concepts have support  <dig>  it is interesting to notice that all the concepts consisting of three clusters in both disjoint partitions  contain clusters produced by each of the three groups of experiments .
fca-enhanced
 consensus clustering produced by the
integrative
  and the
pso-based
  clustering algorithms respectively.

let us consider the concepts, each consisting of three clusters, with support above  <dig>  for both fca-enhanced clustering partitions in table  <dig>  the si and connectivity values for the expression matrices formed by the genes contained in these concepts are compared to the known clustering solution published in  <cit> . this was executed by extracting the known clustering solutions for the pso and integrative concepts in table  <dig>  the results from figure  <dig> show that in contrast to the results obtained for the clustering results before the fca step , the si and connectivity performances of the two clustering algorithms follow a similar trend. thus, it appears that fca step is able to overcome cluster assignment differences and performance discrepancies mostly attributed to the specificities of the different clustering methods. additionally, for the elutriation experiments fca has better si and connectivity than the known clustering solution for both pso and integrative. however, for cdc <dig> block-release the fca performs for both measures a bit worse than the known solutions.

let us investigate whether some correspondence exists between the pso-based and the integrative concepts in table  <dig>  for this purpose we consider the overlapping pairs of clusters of the grouped fca partitions identified in the foregoing section , , ). table  <dig> presents the correspondence between the pso-based and the integrative concepts in table  <dig> in terms of the percentage minimum cluster assignment overlap as extracted from the results in figures  <dig>  , . note that table  <dig> does not include concepts, which exhibit significantly low overlap  with any other concept in table  <dig>  next, each of the  <dig> different concepts in table  <dig> are subjected to analysis with the bingo tool  <cit> , in order to determine which gene ontology categories are statistically overrepresented in each concept. the results are generated for a cut-off p-value of  <dig>  and benjamini and hochberg  multiple testing correction. for each gene concept a table is generated consisting of five columns:  the go category identification ;  the multiple testing corrected p-value ;  the total number of genes annotated to that go term divided by total number of genes in the test set ;  the number of selected genes versus the total go number ; and  a detailed description of the selected go categories .

only  <dig> of the  <dig> fca concepts are assigned go categories by the bingo tool: 

• integrative-{ <dig>   <dig>  14} contains  <dig> genes annotated to  <dig> go categories , most of which refer to the regulation of protein kinase activity or regulation of cell-cycle process or regulation of metabolic process;

• integrative-{ <dig>   <dig>  14} contains  <dig> genes annotated to  <dig> go categories , dominated by sister chromatid segregation and beta-glucan process regulation categories;

• integrative-{ <dig>   <dig>  14} contains  <dig> genes annotated to  <dig> go categories , most of which refer to regulation of mrna stability;

• pso-{ <dig>   <dig>  10} contains  <dig> genes connected with  <dig> go categories , most of which refer to cell-cycle control or regulation of dna replication or sister chromatid segregation;

• pso-{ <dig>   <dig>  12} contains  <dig> genes connected with  <dig> go categories , all referring to the regulation of sister chromatid cohesion and segregation;

• pso-{ <dig>   <dig>  12} contains  <dig> genes annotated to  <dig> go categories  dominated by rna metabolic processing related categories.

it can be observed that the correspondences between the pso-based and integrative concepts presented in table  <dig> are also supported by the above go categories e.g. sister chromatid segregation, dna and cell-cycle regulation, metabolic processing, etc. these correspondences suggest that although both algorithms optimize different clustering characteristics , fca is able to construct similar consensus clustering lattices that are representative for all the datasets. evidently, the proposed fca-enhanced approach is a generic consensus clustering technique that is not dependent on the applied clustering algorithm. this means that one can use a customized algorithm suited for the specific characteristic of each dataset group and consolidate the resulting clustering solutions of the involved groups by using fca.

CONCLUSIONS
in this paper we introduced a novel consensus clustering technique which proposes a general approach to the combination of clustering algorithms with formal concept analysis  for deriving representative clustering solutions from multiple gene expression matrices. this approach involves three distinctive steps:  the studied microarray experiments are partitioned into groups of related datasets with respect to a predefined criterion,  a consensus clustering algorithm is applied to each group of experiments separately,  the clustering solutions produced by the different groups are pooled together and further analyzed by employing fca. the performance of the proposed consensus clustering algorithm is evaluated on a test set of nine time series expression datasets obtained from a study examining the global cell-cycle control of gene expression in fission yeast schizosaccharomyces pombe. in addition, in step  of the proposed approach two different consensus clustering algorithms  are applied for the validation process. the presented experimental results demonstrate that the proposed fca-enhanced clustering algorithm is a robust data integration technique able to produce good quality clustering solution that is representative for the whole set of experiments. in addition, the employment of fca allows performing a subsequent data analysis, which provides useful insights on the biological role of genes contained in the same fca concepts. our future work will focus on further exhaustive analysis of the composition and relationships between the different fca concepts. moreover, our longterm aim is to further evaluate the generalisability of fca-enhanced consensus clustering technique by conducting experiments with other clustering algorithms and microarray datasets.

implementation and availability
the used cluster validation measures and the integrative consensus clustering algorithm have been implemented in c++. in addition, the pso-based clustering algorithm has been implemented in java. the publicly available open source machine learning software weka  <cit>  is used by this implementation for the particle initialization and for the gene assignment to the different clusters. finally, fca is performed by using publicly available tools  <cit> .

endnotes
a the number of clusters k, is initially identified by analyzing the quality of the obtained clustering solutions generated on the involved datasets for a range of different numbers of clusters.

b the velocity vectors are initialized by zeros.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
et conceived the project. ah, vb and et designed the methodology and experiments. ah performed the experiments. ah, vb and et interpreted the results and drafted the manuscript. all authors have read and approved the final manuscript.

