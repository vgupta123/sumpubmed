BACKGROUND
nowadays, a plethora of biological data is freely available for the life sciences community. the vast majority of this data is accessible through heterogeneous relational databases and traditional keyword searching. as information is scattered across several databases using different data representations and formats, text based keyword searching and browsing often proves to be impractical. effective research in life sciences is thereby currently hampered by the absence of integrated databases, and will get even more difficult as more and more biological data accumulates.

over the last few years, the semantic web has established itself as a common framework allowing data to be used and shared across applications and database boundaries. several biological semantic web databases and services for querying and integrating heterogeneous biological databases have emerged, trying to bring the advantages of semantic web to the life sciences community  <cit> . the bio2rdf  <cit>  project has converted and interconnected many biological databases, which allows creating queries across database boundaries. ebi very recently launched its own semantic web platform  <cit>  for several of its databases, including uniprot, chembl, and reactome.

together, these resources combine an enormous amount of biological information where typically profound background knowledge of the underlying databases as well as the query language is needed to access the information. sparql has emerged as the most-widely used query language to retrieve and manipulate data stored in semantic web databases, but often proves to be too complex for inexperienced users. therefore, the task of querying the data remains an unresolved problem for many researchers. as a consequence, several efforts have been made to make the data more accessible and hide the complexities of the querying language from the end-user .

to the best of our knowledge, no service has been published that allows users to graphically build and execute biological semantic web queries without having to deal with the database schemas and underlying semantic web technologies. therefore, we created the web-based platform sparqlgraph featuring an intuitive graphical query editor, several predefined template queries, and a clear result presentation. the tool is open-source and freely accessible at http://sparqlgraph.i-med.ac.at.

implementation
the web application sparqlgraph is based on javascript and uses the application framework meteor  <cit>  as backbone for both the client and server side. meteor features rapid prototyping, and offers routing support, easy connections to a database, and html templating. sparqlgraph uses the javascript graph visualization library mxgraph  <cit>  for building and rendering graphs. this library allows designing of components, which mimic the behaviour of standalone applications in terms of functionality and design. users of sparqlgraph are authenticated and authorized by using the accounting system of meteor. furthermore, the commenting system disqus  <cit>  is attached to each graph to enable specific discussions amongst users. sparqlgraph currently supports firefox, and chrome and can be freely tested using a provided demo account.

RESULTS
sparqlgraph
sparqlgraph is a web-based platform allowing users to build semantic web database queries in a novel, graphical way. the main interface of the platform consists of a large drawing board that is used to assemble new query graphs. users can add new elements and their attributes to a query by simply dragging and dropping them onto the board.

currently, sparqlgraph supports several databases from the ebi rdf platform  <cit>  and from the bio2rdf project  <cit> , which are listed in table  <dig> several core elements of the theses rdf databases were added to the system and important attributes were integrated into the application . these attributes are specific to each element and can be used for filtering or extending query results. if possible, elements were cross linked between databases, which allows querying multiple databases at once using federated queries.table  <dig> 
list of rdf databases integrated in sparqlgraph



bio2rdf v2

database
triples
focus
example elements
reference
each database is listed with their number of triples, the area it focuses on, example database elements, and its reference.
graphical and textual representation of an example query. a) displayed are the drawing board  and the element selection panel . elements  of the query are represented as green boxes that display the corresponding database in the top right corner. relations between elements are represented as arrows and display the proper description. properties of elements are represented as grey boxes. the depicted graph represents a federated query including three different databases ; b) shows the corresponding sparql query that is automatically generated by the system and executed at an endpoint.



in order to make the right connections between the selected elements, the platform verifies for allowed combinations and provides visual feedback to the user. upon execution, the graph is automatically converted into the corresponding sparql query and submitted to an endpoint. the result is then displayed in a tabular form, which can also be exported in csv format.

besides querying single databases, sparqlgraph is also capable of creating federated queries where different databases are searched at the same time without the need for data transformation or manual result filtering.sparqlgraph provides several manually curated template queries targeting different databases and use cases . template queries cannot be edited but allow substituting values of specific fields, for example gene name, protein name, or organism name. therefore, they are of great help for answering common biological questions and for making new users familiar with the platform.figure  <dig> 
overview of example template queries. shown is a list of template queries in sparqlgraph. users can create new template queries or use them to quickly get answers to various biological questions.



every user has the possibility to create an account, where private queries can be stored. moreover, template queries and private queries can be shared with the community to make them publicly accessible. the integrated commenting system allows users to quickly engage in discussions, suggest graph improvements, or propose query modifications. new users are guided through the system by a tutorial and are assisted during graph creation by tooltips and legends.

example use case
to illustrate the basic design of sparqlgraph, we have selected the following example query: “which protein targets of the sunitinib drug are down-regulated in any human tissue?”

figure 1a) displays the graphical representation of the example query in sparqlgraph, which is also available as a template query. the created federated query involves three different databases including chembl , uniprot , and atlas . it starts with selecting the compound “sunitinb” in the chembl database. next the compound is connected with all associated proteins and, in order to restrict it to human, it is linked with a target component having taxonomy  <dig> . to output the uniprot protein label of all associated proteins, a cross-reference between the chembl database and the uniprot database is inserted. as gene expression patterns are stored in the atlas database, a link from uniprot to atlas is included. the atlas design element represents a probe, which is used in an assay for detecting sequence or gene expression levels. to output only down-regulated proteins, the design element is connected to the decreased expression value entity, which returns its label as a query result.figure 1b) shows the generated sparql query, which is submitted to a corresponding endpoint. the query code is simplified for better readability.

discussion
several approaches were made to facilitate the creation of sparql queries. tools such as gruff  <cit> , viziquer  <cit> , and nitelight  <cit>  are using a very generic graph building approach often resulting in high complexity due to their comprehensive functionality. sparqlgraph is using a different approach, in that it focuses solely on predefined biological databases, and puts emphasis on usability for users of the life science community. furthermore, sparqlgraph allows users to query several databases at once as it makes use of the sparql service keyword. this feature is crucial for using semantic web in the life science field, as more and more institutions offer their databases as linked rdf data  <cit>  allowing for more comprehensive queries. to date, sparqlgraph is the only query builder which integrates this valuable feature.

sparqlgraph facilitates collaborative work amongst researchers by allowing them to create and share graphs. therefore, users with similar biological questions can reuse and extend existing template queries to match their needs.

outlook
future efforts on sparqlgraph will focus on usability evaluation and simplification of the graphical query builder to further ease and speed up the query creation process. furthermore, newly created rdf data sources will be linked to the currently supported ones, which would allow for more complex federated queries in sparqlgraph. in order to support collaborations and the extension of the software we have submitted the code to a public repository on github . in addition, the online user documentation provides an example of how to create new and extend existing database schemas within sparqlgraph.

CONCLUSIONS
we present sparqlgraph, a web-based platform for the visual creation and execution of biological semantic web queries. the graphical query builder allows users to create and share query graphs in a new simple way. several template queries are provided to offer a great starting point for building new graphs and assist researchers in finding answers to biological questions. currently, the requirements of knowing the querying language sparql and the exact structure of the used databases are limiting the success of biological semantic web platforms. sparqlgraph tries to remove these burdens from the user and considerably facilitates the creation of biological semantic web database queries. the platform actively supports user collaborations through an integrated commenting system and can be extended with additional databases.

availability and requirement
 
project name: sparqlgraph

 
project home page:http://sparqlgraph.i-med.ac.at & https://github.com/tadkeys/sparqlgraph

 
operating system: platform independent

 
programming language: javascript

 
other requirements: modern browser, i.e. current version of firefox or chrome

 
license: gnu gpl

 
any restrictions to use by non-academics: mxgraph is available under the non-commercial creative commons



competing interests

the authors declare that they have no competing interests.

authors’ contributions

ds implemented sparqlgraph and drafted the manuscript. zt conceived the study, and participated in its design and coordination. sp supervised and conceived the study and helped drafting the manuscript. all authors read and approved the final manuscript.

