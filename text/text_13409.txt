BACKGROUND
the number of documents discussing biomedical science is growing at an ever increasing rate, making it difficult to keep track of recent developments. automated methods for cataloging, searching and navigating these documents would be of great benefit to researchers working in this area, as well as having potential benefits to medicine and other branches of science. lexical ambiguity, the linguistic phenomenon where a term  has more than one potential meaning, makes the automatic processing of text difficult. for example, "cold" has several possible meanings in the unified medical language system  metathesaurus  <cit>  including "common cold", "cold sensation" and "chronic obstructive airway disease ". weeber et al.  <cit>  analysed medline abstracts and found that  <dig> % of phrases were ambiguous relative to the umls metathesaurus.

the ability to accurately identify the meanings of terms is an important step in automatic text processing. it is necessary for applications such as information extraction and text mining which are important in the biomedical domain for tasks such as automated knowledge discovery. the nlm indexing initiative  <cit>  attempted to automatically index biomedical journals with concepts from the umls metathesaurus and concluded that lexical ambiguity was the biggest challenge in the automation of the indexing process. friedman  <cit>  reported that an information extraction system originally designed to process radiology reports had problems with ambiguity when it was applied to more general biomedical texts. during the development of an automated knowledge discovery system weeber et al.  <cit>  found that is was necessary to resolve the ambiguity in the abbreviation mg  in order to replicate a well-known literature-based discovery concerning the role of magnesium deficiency in migraine headaches  <cit> .

word sense disambiguation  is the process of resolving lexical ambiguities. wsd has been actively researched since the 1950s and is regarded as an important part of the process of understanding natural language texts. a comprehensive description of current work in wsd is beyond the scope of this paper although overviews may be found in  <cit> . schuemie et al.  <cit>  provide an overview of wsd in the biomedical domain. previous researchers have used a variety of approaches for wsd of biomedical text. some of them have taken techniques proven to be effective for wsd of general text and applied them to ambiguities in the biomedical domain, while others have created systems using domain-specific biomedical resources. however, there has been no direct comparison of which information sources are the most useful or whether combining a variety sources, a strategy which has been shown to be successful for wsd in the general domain  <cit> , also improves results in the biomedical domain.

this paper compares the effectiveness of a variety of information sources for wsd in the biomedical domain. these include features which have been commonly used for wsd of general text as well as information derived from domain-specific resources, including mesh terms.

the remainder of this section provides an overview of various approaches to wsd in the biomedical domain. the methods section outlines our approach, paying particular attention to the various types of information used by our system. an evaluation of this system is presented in the results section, the implications of which can be found in the discussion section.

the nlm-wsd data set
research on wsd for general text in the last decade has been driven by the semeval frameworks  which provide a set of standard materials for a variety of semantic evaluation tasks  <cit> . at this point there is no specific collection for the biomedical domain in semeval, but a test collection for wsd in biomedicine, the nlm-wsd data set  <cit> , is used as a benchmark by many independent groups.  the unified medical language system  metathesaurus was used to define the set of possible meanings in the nlm-wsd data set. in umls strings are mapped onto concepts, indicating their meaning. strings which map onto more than one concept are ambiguous. for example, the string "culture" maps onto the concepts 'anthropological culture'  and 'laboratory culture' .  <dig> terms which are ambiguous in umls and occur frequently in medline were chosen for the nlm-wsd data set.  <dig> instances of each term were selected from citations added to the medline database in  <dig> and manually disambiguated by  <dig> annotators. twelve terms were flagged as "problematic" due to substantial disagreement between the annotators. there are an average of  <dig>  possible meanings per ambiguous term and the most ambiguous term, "cold", has five possible meanings. concepts which were judged to be very similar in meaning were merged. for example, two concepts for "depression": 'depressive episode, unspecified' and 'mental depression'. in addition to the meanings defined in umls, annotators had the option of assigning a special tag  when none of the meanings in umls were judged to be appropriate.

various researchers have chosen to evaluate their systems against subsets of this data set. liu et al.  <cit>  used a set of  <dig> terms, saying "we excluded  <dig>  that weeber et al. considered problematic, as well as  <dig> terms in which the majority sense occurred with over 90% of instances." however, the  <dig> terms used to evaluate their system include "mosaic" and "nutrition" which weeber et al.  <cit>  flagged as problematic. leroy and rindflesch  <cit>  used a set of  <dig> terms for which the majority sense accounted for less than 65% of the instances. joshi et al.  <cit>  evaluated against the set union of those two sets, providing  <dig> ambiguous terms. mcinnes et al.  <cit>  used the set intersection of the two sets  which contained  <dig> terms. the terms that form these various subsets are shown in figure  <dig> 

the  <dig> terms which form the nlm-wsd data set represent a range of challenges for wsd systems. the most frequent sense  heuristic has become a standard baseline in wsd  <cit>  and is simply the accuracy which would be obtained by assigning the most common meaning of a term to all of its instances in a corpus. despite its simplicity, the mfs heuristic is a hard baseline to beat, particularly for unsupervised systems, because it uses hand-tagged data to determine which sense is the most frequent. analysis of the nlm-wsd data set showed that the mfs over all  <dig> ambiguous terms is 78%. the different subsets have lower mfs, indicating that the terms they contain are more difficult to disambiguate. the  <dig> terms used by liu et al.  <cit>  have an mfs of  <dig> % while the set used by leroy and rindflesch  <cit>  has an mfs of  <dig> %. the union and intersection of these sets have mfs of  <dig> % and  <dig> % respectively.

wsd of biomedical text
a standard approach to wsd is to make use of supervised machine learning systems which are trained on examples of ambiguous words in context along with the correct sense for that usage. the models created are then applied to new examples of that word to determine the sense being used.

approaches which are adapted from wsd of general text include  <cit> . their technique uses a supervised learning algorithm with a variety of features consisting of a range of collocations of the ambiguous word and all words in the abstract. they compared different supervised machine learning algorithms and found that a decision list worked best. their best system correctly disambiguated 78% of the occurrences of  <dig> ambiguous terms in the nlm-wsd data set .

joshi et al.  <cit>  also use collocations as features and experimented with five supervised learning algorithms: support vector machines, naive bayes, decision trees, decision lists and boosting. the support vector machine performed best scoring  <dig> % on a set of  <dig> words  and  <dig> % on the  <dig> terms used by liu et al.  <cit> . performance of the naive bayes classifier was comparable to the support vector machine, while the other algorithms were hampered by the large number of features.

examples of approaches which have made use of knowledge sources specific to the biomedical domain include leroy and rindflesch  <cit>  who used information from the umls metathesaurus. they used the metamap tool  <cit>  which identifies the relevant umls concepts for a piece of text. leroy and rindflesch used knowledge about whether the ambiguous word is the head word of a phrase identified by metamap, the ambiguous word's part of speech, semantic relations between the ambiguous words and surrounding words from umls as well as semantic types of the ambiguous word and surrounding words. naive bayes was used as a learning algorithm. this approach correctly disambiguated  <dig> % of word instances from a set of  <dig> terms . humphrey et al.  <cit>  presented an unsupervised system that also used semantic types from umls. they constructed semantic type vectors for each word from a large collection of medline abstracts. this allowed their method to perform disambiguation at a coarser level, without the need for labeled training examples. in most cases the semantic types can be mapped to the umls concepts used to annotate instances in the nlm-wsd corpus but not for all terms. in addition, this approach could not disambiguate instances which had been annotated with the "none" tag which indicated that none of the meanings in umls were judged to be appropriate. five terms were excluded from their evaluation, four  because the semantic types could not be mapped onto umls concepts and the other  because all instances of that term were assigned the "none" tag. in addition, only 67% of the instances for the remaining  <dig> terms were used for evaluation and, since instances with the "none" tag were also excluded, their system was only evaluated against an average of 54% of the instances of these terms. an accuracy of  <dig> % was reported across these instances. mcinnes et al.  <cit>  also made use of information provided by metamap. in umls each concept has a concept unique identifier  and these are also assigned by metamap. the information contained in cuis is more specific than in the semantic types applied by leroy and rindflesch  <cit>  and humphrey et al.  <cit> . for example, two of the cuis for the term "cold" in umls, "c0205939: common cold" and "c0024117: chronic obstructive airway disease", share the same semantic type: "disease or syndrome". mcinnes et al.  <cit>  were interested in exploring whether the more specific information contained in cuis was more effective than umls semantic types. their best result was reported for a system which represented each sense by all cuis which occurred at least twice in the abstract surrounding the ambiguous word. they used a naive bayes classifier as the learning algorithm and reported an accuracy of  <dig> % on the set of ambiguous terms tested by leroy and rindflesch  <cit>  and  <dig> % on the set used by joshi et al.  <cit> . they concluded that cuis are more useful for wsd than umls semantic types but that they are not as robust as features which are known to work in general english, such as unigrams and bigrams. unfortunately, direct comparison of the various wsd systems which have been evaluated on the nlm-wsd data set is not straightforward. firstly, as we have described, systems have been tested against a variety of ambiguous terms. a more subtle problem arises in the way in which researchers have chosen to present their results. with the exception of unsupervised systems  <cit> , which do not require training data, all approaches involve training a classifier using some portion of the available data and then testing against the remaining unseen portion. these supervised approaches normally involve choices over how to set the parameters which define the group of features used. for example, liu et al.  <cit>  compared a total of  <dig> different feature sets by varying the size of the context window around the ambiguous word and the terms which are extracted. one approach  <cit>  is to experiment with a variety of parameters and choose the best one for each ambiguous term. for example, the 78% accuracy figure quoted by liu et al.  <cit>  is obtained by choosing the result from the best classifier for each of the  <dig> terms used in their evaluation. we refer to this as per-term parameter setting. an alternative methodology involves applying the same parameters to all terms. for example, the results reported by mcinnes et al.  <cit>  are obtained by using the same parameters for all terms rather than selecting the best result for each. we call this global parameter setting.

it would be preferable to automate the process of parameter setting as far as possible however this would be difficult for per-term parameter setting, particularly for a data set such as nlm-wsd where there are only  <dig> instances for each ambiguous term and many senses with occur only a few times. the alternative approach, global parameter setting, is less affected by this problem and has the advantage that the settings are more likely to be suitable for terms other than the ones which are contained in the test collection. the global parameter setting methodology is used in the experiments described later in this paper.

methods
our approach is to adapt a state-of-the-art wsd system to the biomedical domain by augmenting it with additional domain-specific and domain-independent information sources. our basic system  <cit>  participated in the senseval- <dig> challenge  <cit>  with a performance close to the best system for both the english and basque lexical sample tasks. the method is based on a supervised learning approach and uses features derived from text around the ambiguous word which are domain independent. we refer to these as linguistic features. this feature set has been adapted for the disambiguation of biomedical text by adding further linguistic features and two different types of domain-specific features: cuis  and medical subject heading  terms.

features
our feature set contains a number of parameters which were set empirically . in addition, we use the entire abstract as the context of the ambiguous term for relevant features rather than just the sentence containing the term. effects of varying these parameters are similar to results reported in previous work  <cit> , for example using the entire abstract as context yields more accurate results than using only the sentence containing the ambiguous term. since these results are not novel we do not report them in this paper.

linguistic features
the system uses a wide range of domain-independent features which are commonly used for wsd.

• local collocations: a total of  <dig> features which extensively describe the context of the ambiguous word and fall into two main types:  bigrams and trigrams containing the ambiguous word constructed from lemmas, word forms or pos tags  and  preceding/following lemma/word-form of the content words  in the same sentence with the target word. for example, consider the sentence below with the target word adjustment.

"body surface area adjustments of initial heparin dosing..."

the features would include the following: left-content-word-lemma "area adjustment", right-function-word-lemma "adjustment of ", left-pos "nn nns", right-pos "nns in", left-content-word-form "area adjustments", right-function-word-form "adjustment of ", etc.

• salient bigrams: salient bigrams within the abstract with high log-likelihood scores computed from the nlm-wsd corpus, as described by pedersen  <cit> . in the experiments, bigrams that occur more than once and have a log-likelihood higher than  <dig>  are included as features.

• unigrams: lemmas of all content words  in the target word's sentence and, as a separate feature, lemmas of all content words within a ± 4-word window around the target word, excluding those in a list of corpus-specific stopwords . in addition, the lemmas of any unigrams which appear at least twice in the entire corpus and are found in the abstract are also included as features. this feature was not used by  <cit> , but joshi et al.  <cit>  found it to be useful for this task.

a previous version of our system  <cit>  included syntactic dependencies, such as subject and noun-modifier of ambiguous terms, as an additional feature. these features were also used by agirre and martinez  <cit>  and were extracted by a set of manually-created heuristics applied to part of speech tagged text. however, we found that removing these features led to a small increase in performance. the likely reason for this is that these features are noisy since the dependencies are difficult to identify accurately. in addition the heuristics used were not developed to be applied on biomedical documents.

concept unique identifiers 
we follow the approach presented by mcinnes et al.  <cit>  to generate features based on umls concept unique identifiers . the metamap program  <cit>  identifies all words and terms in a text which could be mapped onto a umls cui. metamap does not disambiguate the senses of the concepts; instead it enumerates all the possible combinations of the concept names found. for example, metamap will segment the phrase "body surface area adjustments of initial heparin dosing ..." into two chunks: "body surface area adjustments" and "of initial heparin dosing". the first chunk will be mapped onto four cuis, two with the concept name "body surface area": "c0005902: diagnostic procedure" and "c1261466: organism attribute" and a further pair with the name "adjustments": "c0456081: health care activity" and "c0871291: individual adjustment". cuis which occur more than three times in the abstract containing the ambiguous word are included as features.

medical subject headings 
the final feature is also specific to the biomedical domain. medical subject headings   <cit>  is a controlled vocabulary for indexing biomedical and health-related information and documents. mesh terms are manually assigned to abstracts by human indexers. the latest version of mesh contains over  <dig>  terms organised into an 11-level hierarchy. the terms assigned to the abstract in which each ambiguous word occurs are used as features. for example, the abstract containing the example phrase in the previous paragraph has been assigned  <dig> mesh terms including "m <dig> . <dig> : aged", "m <dig> . <dig> .080: aged,  <dig> and over", "d <dig> . <dig> .119: anticoagulants" and "g <dig> . <dig> .150: blood coagulation". to our knowledge mesh terms have not been previously used as a feature for wsd of biomedical documents.

learning algorithms
we compared three machine learning algorithms which have previously been shown to be effective for wsd tasks.

the vector space model is a memory-based learning algorithm which was used by  <cit> . each occurrence of an ambiguous word is represented as a binary vector in which each position indicates the occurrence/absence of a feature. a single centroid vector is generated for each sense during training. these centroids are compared with the vectors that represent new examples using the cosine metric to compute similarity. the sense assigned to a new example is that of the closest centroid.

the naive bayes classifier is based on a probabilistic model which assumes conditional independence of features given the target classification. it calculates the posterior probability that an instance belongs to a particular class given the prior probabilities of the class and the conditional probability of each feature given the target class.

support vector machines have been widely used in classification tasks. svms map feature vectors onto a high dimensional space and construct a classifier by searching for the hyperplane in that space that gives the greatest separation between the classes.

we used our own implementation of the vector space model and weka implementations  <cit>  of the other two algorithms. a linear kernel was used for the support vector machine.

RESULTS
this system was applied to the entire nlm-wsd data set. experiments were carried out using each of the three types of features  both alone and in combination. ten-fold cross validation was applied and the figures we report are averaged across all ten runs.

results from this experiment are shown in table  <dig>  which lists the performance using combinations of learning algorithm and features. the figure shown for each configuration represents the percentage of instances of ambiguous terms which are correctly disambiguated.

the best performance is obtained using a combination of the linguistic and mesh features, a pattern observed across all test sets and machine learning algorithms. although the increase in performance gained from using both the linguistic and mesh features compared to only the linguistic features is modest, it is statistically significant , as is the difference between using both linguistic and mesh features compared with using the mesh features alone .

the vector space model learning algorithm performs significantly better than both support vector machines and naive bayes . this pattern is observed regardless of which set of features is used, and it is consistent with the results over semeval data  <cit> .

performance using mesh terms as the only feature is better than using cuis alone when the naive bayes and support vector machine learning algorithms are used. however, this is reversed for the vector space model. the most likely reason is that the mesh terms are far more sparse than cuis  which hinders this algorithm's performance.

per-word analysis
the performance of leroy and rindflesch's system is always lower than the best result for each word. the systems reported by joshi et al.  <cit>  and mcinnes et al.  <cit>  are better than, or the same as, all other systems for  <dig> and  <dig> words respectively. the system reported here achieves results equal to or better than previously reported systems for  <dig> terms.

there are five terms for which the performance of our approach is actually lower than the mfs baseline  in table  <dig>   the performance of our system is within 1% of the baseline for five of these terms. the remaining pair, "blood pressure" and "failure", are included in the set of problematic words  <cit> . examination of the possible senses show that they include pairs with similar meanings. for example, the two senses which account for the majority  of the instances of "blood pressure", which refer to the blood pressure within an organism and the result obtained from measuring this quantity, are very closely related semantically.

linguistic features
our wsd algorithm uses a wider range of linguistic features than previous approaches. table  <dig> shows a comparison of each of the three types of linguistic features described in the features section. each type of feature is used alone and as part of a pair. performance of each type of feature used alone is above the relevant mfs baseline, indicating that all three provide useful information for disambiguation. unigrams are the most effective, followed by salient bigrams with local collocations the least effective. a possible reason for this may lie in the fact that local collocations comprise an extensive feature set, some of which may be redundant or noisy. for all words the pairing of local collocations with unigrams is the most effective with performance only  <dig> % less accurate than combining all three types of linguistic features. however, combining salient bigrams with unigrams generates the best results over each of the four subsets and actually outperforms the combination of all three feature types for two of them.

discussion
our experiment shows that each of the three types of information  can be used to create a classifier which achieves a reasonable level of disambiguation, since performance exceeds the relevant baseline score. this suggests that each of these can contribute to the disambiguation of ambiguous terms in biomedical text. in addition, disambiguation is improved by combining information sources. this is consistent with results over general text. for example, stevenson and wilks  <cit>  and harley and glennon  <cit>  showed that wsd could benefit from use of several different types of information from a dictionary. more recently specia et al.  <cit>  showed that a combination of information sources could improve disambiguation of portuguese verbs.

combining mesh terms with other features generally improves performance, suggesting that this provides the classifier with information not available from the others. an important difference between mesh terms and the other features  is that they are assigned to the entire abstract rather than just individual terms and, as such, provide information about the topic of the abstract which would be hard to derive from more local features. this can be seen in the example usage of "adjustment" in the features section above. the abstract in which this term is used discusses the treatment of coronary angioplasty using heparin, an anticoagulant. this abstract does not include the term "anticoagulant" but is assigned the mesh term "d <dig> . <dig> .119: anticoagulants". it would be difficult to determine that this abstract discusses anticoagulants using only the kinds of linguistic features used by many wsd systems. however, mesh terms provide a way of identifying this information. these findings in this study are consistent with results from wsd of general text. for example, agirre and martinez  <cit>  observed a small improvement when domain information was used as additional information in their wsd system.

unlike mesh terms, the inclusion of cuis as features does not always improve performance and, in several cases, causes it to fall. this is consistent with mcinnes et al.  <cit>  who concluded that cuis were a useful information source for disambiguation of biomedical text but that they were not as robust as one type of linguistic information  which they had used for a previous system. however, in some ways this result is surprising since cuis are derived from umls, a resource which contains all the information in the mesh hierarchy . the most likely reason for this is that our cui assignment, provided by metamap, is automatic. metamap does not attempt to disambiguate terms which map onto more than one umls concept so this cui assignment is noisy.

differences between cuis and mesh terms were explored further through an analysis of their distribution in the nlm-wsd corpus. a first observation is that cuis are far more frequent than mesh terms. on average  <dig> cuis are assigned to each abstract in the nlm-wsd data set and only  <dig>  mesh terms. two measures were used to determine how well cuis and mesh terms indicate the meaning of an ambiguous term. the first of these, entropy, is a measure of uncertainly  <cit> . lower entropy values indicate there is less variation in the meanings of abstracts to which a particular cui or mesh term is assigned. entropy is computed using equation  <dig> where f is a feature , n is the total number of senses and pi is the probability that an instance of that feature is assigned to an abstract which has been assigned a particular sense .

  entropy=∑i=1n−pi log2pi 

the entropy of each feature  is computed and averaged across all terms in the data set. for cuis this figure is  <dig> , significantly higher than the equivalent figure for mesh terms,  <dig>  . the higher entropy figure indicates that cuis provide less information about the sense of an ambiguous term than mesh terms.

an additional metric, information gain  <cit> , is based on entropy and provides a measure of how useful a feature is to classify the data. it can be used to determine how accurately a cui or mesh term indicates the sense being used in an abstract to which it has been assigned. information gain is computed using the formula shown in equation  <dig> where c is a collection of texts and v alues the set of values which the feature f can be assigned. in our case the collection, c, is the set of abstracts for a given term in the nlm-wsd collection and v alues is binary, since each cui and mesh term is either assigned to a particular abstract or not.

  information gain=entrophy−∑v∈values|cv||c|entropy 

the average information gain score for all features which apply to a term was computed. the average of this figure across all terms is  <dig>  for cuis and significantly higher  for mesh terms . this indicates that mesh terms provide more useful information for sense classification than cuis.

the methodology adopted in this study has been to evaluate and compare a variety of types of information which may be useful for the disambiguation of biomedical terms. each of these sources are readily available: linguistic features can be extracted directly from text, mesh terms are available for many medline entries while cuis can be generated by metamap. the study does not directly compare the usefulness or value of the mesh hierarchy against umls since we are using manually assigned mesh terms and cuis from umls which are automatically generated. we do not have access to a reliable assignment of cuis to text; if we had wsd would not be necessary since the senses used in the nlm-wsd corpus are effectively cuis. however, our study suggests that using linguistic features is a better strategy for wsd of biomedical terms, confirming previous results  <cit> ; in addition, there is nothing to be gained from combining cuis with linguistic features. on the other hand, our study also shows that mesh terms can improve disambiguation performance and should be used if available . while the benefit provided by mesh terms is statistically significant, it is quite small and not crucial for disambiguation of biomedical text.

CONCLUSIONS
this paper has compared a variety of information sources for wsd of ambiguous biomedical terms and reported results which exceed the performance of previously published approaches. we found that the most accurate results can be achieved using a combination of linguistic features commonly used for wsd of general text and manually assigned mesh terms. while cuis are a useful source of information for disambiguation, they do not improve the performance of the best system configuration, i.e. when used in addition to linguistic features and mesh terms. this may be because our approach uses manually assigned mesh terms while the cuis are obtained automatically using metamap. analysis of the information gain afforded by automatically assigned cuis versus manually assigned mesh terms for the sense classification task confirms that the mesh terms do indeed supply more information.

the linguistic information used in this paper comprises a wide variety of features including unigrams, local collocational features and salient bigrams. when these feature types are considered singly unigrams are the most effective, while unigrams together with local collocations are the most effective pair. we have not explored the contribution of individual collocational features, however, and this is a topic for further work. in addition, our approach does not make use of the fact that mesh terms are organised into a hierarchy. it would be interesting to discover whether this information could be used to improve wsd performance.

others, for example  <cit> , have developed techniques to make use of hierarchical information in wordnet for wsd which could be adapted to mesh.

competing interests
the authors declare that they have no competing interests.

authors' contributions
dm and yg developed the wsd system used in this study. yg generated all experimental results. ms carried out analysis of previous approaches and, together with rg, conceived the study and co-ordinated its design and the drafting of this manuscript. all authors read and approved the final manuscript.

