BACKGROUND
the quality of many experiments in molecular biology depends on the accurate characterisation of the helix-coil transition of nucleic acid duplexes. this includes for instance polymerase chain reaction  experiments, sequencing by hybridization, antigene targeting, southern blotting, prediction of local stability within a duplex, and predicting the influence of mutations on duplex stability. for some of these applications, being able to predict accurately the melting temperature avoids the amplification or detection of wrong sequences.

in addition, it has been established that rna molecules, besides a role in encoding proteins, also have more complex functions, for instance as micrornas and sirnas. these small non-coding rna molecules are involved in the regulation of gene expression by means of direct rna-rna binding. these discoveries have driven the need for algorithms and software providing accurate predictions for hybridization, melting temperature, dna/rna folding and secondary structures. a lot of these needs are already covered by tools such as the vienna rna webservers  <cit> , which implement a large set of algorithms for rna/dna secondary structures prediction and base pair probabilities such as rnafold or rnacofold. more recently, the rip program  <cit>  and the pirna program  <cit>  have been developed to compute partition function over interaction complexes of rna pairs for determining accurate base pair probabilities.

however, one of the most frequent approaches used for predicting melting temperature is the nearest-neighbor approach, based on the assumption that the interaction between watson-crick base pairs depends on the neighboring base pairs. the enthalpy and entropy for the hybridization of two complementary sequences can be simulated by the initial attachment of the first watson-crick base pair independently from neighboring base pairs and then its lateral propagation taking into consideration both the energy of formation of the watson-crick base pairs and the stacking interaction between the neighboring base pairs  <cit> . two duplexes with the same base pairs could have different stabilities depending on the nearest neighbor pairs composition. however, two duplexes with different sequences but identical sets of nearest neighbor base pairs have almost identical thermodynamics properties  <cit> . the formula for the melting temperature depends on the oligonucleotide concentration, the enthalpy  and the entropy  of the duplex. the entropy and enthalpy values for each nearest neighbor pair which consists of two watson-crick base pairs have been studied for many years and several databases of thermodynamic parameters are now available such as the thermodynamic parameters for dna/dna hybridization and folding from santalucia and donald  <cit>  or the nndb database for rna/rna hybridization and folding from turner and mathews  <cit> . several software using the nearest-neighbor approach and thermodynamic parameters already exist, such as dinamelt  <cit> , which not only compute the melting temperature of nucleic acids but also provides entire equilibrium melting profiles as a function of temperature.

however, most software computing the melting temperature using the nearest-neighbor method rely on a limited set of thermodynamic parameters and patterns, typically from a single author. melting is a free, open source software, available since  <dig>  which computes the melting temperature of nucleic acid duplexes using a wide set of thermodynamic datasets and formulae from the literature. melting does not predict duplex formation, but predicts its melting temperature for a given alignment of the duplex strands . version  <dig>  has already been integrated into several platforms such as oligodb  <cit> , sol  <cit> , sepon  <cit> , side  <cit>  and the sirna selector  <cit> . melting  <dig>  supports dna/dna, rna/rna and dna/rna hybridizations, dna internal single base mismatches and dna single base dangling ends  <cit> .

as the calorimetric measurement for nearest neighbor parameters are made on small oligonucleotides, and the linear combination has only been demonstrated for oligonucleotides of less than  <dig> bases, the nearest-neighbor method cannot be accurately applied to long sequences. the complex secondary structures formed by longer oligonucleotides are more accurately taken into account by hybridization ensembles or partition functions. as melting does not use such methods, approximative formulae for dna/dna, rna/rna and dna/rna duplexes, such as the one from wetmur  <cit>  or from von ahsen et al. <cit>  are used when dealing with long sequences. these depend on gc composition, duplex length and sodium concentration.

a lot of progress has been made in the field of nucleic acid thermodynamics, and parameters are available for other modified nucleic acids or biochemical molecules. these include locked nucleic acids  <cit> , azobenzene  <cit>  and inosine, a modified adenine base frequently used in pcr because of its universal base capacity  <cit> . some approximative temperature corrections already exist for denaturing agents such as formamide and dmso, both of which are frequently used in molecular biology experiments  <cit> . similarly, corrections for the magnesium ions are also available  <cit> ; these ions are frequently present in pcr experiments to activate enzymes and influence duplex stability. oligonucleotide sequences are not always perfectly complementary and the duplex can contain mismatches, bulge loops or dangling ends. for each of these patterns, several thermodynamic formulae exist to compute resultant enthalpy and entropy. these formulae are often different according to the type of hybridization, such as dna/dna or rna/rna.

melting  <dig> x could only support a single thermodynamic formula for computing duplex entropy and enthalpy, and was unable to incorporate thermodynamic parameters for inosine nor accomodate corrections for the magnesium ions. melting  <dig> is a complete reimplementation supporting a larger set of parameters and thermodynamic formulae to compute the enthalpy and entropy of several duplex patterns such as mismatches, bulge loops, dangling ends, cng repeats, modified nucleic acids and to include new ion and denaturing agent corrections.

implementation
the structure of melting  <dig> has been described elsewhere  <cit> , and we will focus here on melting  <dig> 

nearest-neighbor approach
algorithm
each duplex strand is entered as a linear sequence of nucleic acids, with gaps in the sequences represented by a dash , e.g. aatt−−gc−ta. for perfect matching, only one strand is necessary as the complementary sequence can be deduced by the program.

the nearest-neighbor implementation consists of several steps. first, the program determines the location of each mutually exclusive pattern  composing the duplex. patterns consisting of consecutive perfectly matching watson-crick base pairs are located and identified first. each remaining set of consecutive base pairs in the duplex  are identified as requiring specific thermodynamic formulae and parameters. for example, if a base pair contains an inosine and it is adjacent to a mismatch, it will be considered as a pattern composed of two base pairs  requiring a formula and parameters of its own.

once the locations of the patterns are determined, the program is able to match the pattern to its thermodynamic formula using hardcoded recognition methods, and applies the appropriate parameters to compute its enthalpy and entropy. the default formula and parameters used can be overriden by a user defined set through the options. for example, a pattern consisting of l perfectly matching watson-crick base pairs starting at position i in the duplex would use this formula: 

  Δhperfectly matching pattern =∑ilδhnearest neighbor base pairsΔsperfectly matching pattern =∑ilδsnearest neighbor base pairs 

some patterns also take into consideration the base pairs located outside of the pattern; an internal loop pattern starting at the position i and ending at the position i+l will take into account the base pairs at i- <dig> and i+l+ <dig> because the neighbors of the internal loop are important in determining the enthalpy and entropy. supposing we apply the thermodynamic rules for rna from lu et al. <cit> , the internal loop will be computed as follows: 

  Δhinternal loop =δhinitiation-loop+δhper-adjacent-au-or-gu+δhfirst-non-canonical-pairs+δhasymmetry 

  Δsinternal loop = <dig> 

where: 

· δhinitiation-loopaccounts for the internal loop of l nucleotides.

· δhasymmetryaccounts for the internal loop asymmetry  with l <dig> and l <dig> the number of nucleotides on each strand per-adjacent-au-or-gu accounts for each au or gu base pair adjacent to the internal loop.

· δhfirst-non-canonical-pairsaccounts for each sequence specific first mismatch .

this mechanism is the same for other mismatches, bulge loops and modified nucleic acids.

before applying each thermodynamic formula, the program checks if it is applicable within the environment set by the user . therefore, the previous rules from lu  <cit>  will not be applied when the internal loop is not a  <dig> x  internal loop with n >  <dig> or when the hybridization type is dna/dna.

to be able to use the appropriate thermodynamic formula for each pattern composing the duplex, the program computes the enthalpy and entropy of the duplex as follows : 

  Δh=δhinitiation+∑δhpatternΔs=δsinitiation+∑δspattern 

the program computes the initiation of the hybridization according to the formula and parameters chosen by the user for perfectly matching sequences. it is important to note that in melting  <dig>  the user selects not only a set of thermodynamic parameters  but also the thermodynamic formula that uses it. the default set of parameters for each formula is defined by the paper describing that formula.

finally, the melting temperature is computed using the same formula as melting 4: 

  tm=ΔhΔs+rln− <dig>  

where: 

· tm  represents the melting temperature in a solution of  <dig> m of sodium ion.

· ctis the total concentration of oligonucleotides.

· f is  <dig> when oligonucleotides are self-complementary. when they are not, f is  <dig> if both strands are present in equivalent amount and  <dig> if one strand is in excess .

when oligonucleotides are not self complementary, the term ct/f is replaced with cmax−cmin/ <dig>  where cmax is the concentration of the strand in excess and cminthe concentration of the other strand. but if the excess is large enough, the total concentration of oligonucleotides can be assumed to be identical to the concentration of the strand in excess. the actual formula is ln but with cmax>>cmin, cmax is equivalent to ctand ln is equivalent to ln and so f is  <dig>  if the excess is not important enough to make the previous assumption, we can assume that cmax is close to cmin. given that ct=cmin + cmax, then ln is equivalent to ln which comes back to the default correction of f= <dig> when both strands are in equivalent amount.

when melting  <dig> initially parses the sequences, it identifies the known base pairs and stores them as a list. the program currently recognises the chemical entities with the following string representations: a , t , c , g , u , a* , al , cl , gl , tl , i , x_c  and x_t . it uses a greedy match to parse the nucleic acid names in order to solve ambiguities .

special case of cng repeats
the thermodynamic parameters for cng repeats from magdalena et al. <cit>  are applicable to self complementary sequences entirely composed of  <dig> to  <dig> cng repeats, starting with a gc base pair and ending with a cg base pair. that the initiation is already included in the thermodynamic parameters so no additional initiation is computed for these sequences. for sequences composed of  <dig> to  <dig> cng repeats, a hairpin pattern is dominant and the melting temperature is computed as follow: 

  tm=ΔhΔs− <dig>  

ion and denaturing agent corrections
the concentrations of various cations, such as sodium, and certain denaturing agents can be entered; melting can adjust the computed melting temperature taking into consideration the concentration of monovalent cations , bivalent cations  and denaturing agents such as formamide and dmso, using published formulae.

by default melting  <dig> loads the appropriate ion correction using the algorithm from owczarzy et al. <cit> , similarly to melting  <dig> . the ion correction to apply can be forced by the user, thereby ignoring the default choice. the purpose of this implementation is to take into account the possible binding competition between monovalent and bivalent cations by default, yet still provide flexibility should the user prefer to apply a specific ion correction. as melting  <dig> implements several sodium equivalence formulae , it is now possible to enter potassium, magnesium and tris buffer concentrations even when an approximative computation is used, or a sodium correction is forced. this enables sodium-dependent approximative computation methods to take into account ions other than sodium.

according to santalucia and hicks  <cit> , the terminal mismatches in internal loops are assumed to have the same salt dependence as complementary base pairs, whereas the stability of the remaining internal loop nucleotides are assumed to be salt independent. consequently, melting  <dig> computes separately a ’sodium independent’ entropy and a ’sodium dependent’ entropy when internal loops of type n1×n <dig> are present, where n <dig> >  <dig> is the number of nucleotides in the internal loop for the first sequence and n <dig> >  <dig> is the number of nucleotides in the internal loop for the second sequence. the ion correction will only be applied to the ’sodium dependent’ entropy, and the final entropy used to compute the melting temperature will be the sum of the ’sodium independent’ entropy and the corrected ’sodium dependent’ entropy. in this situation, melting  <dig> considers the entropy term for the loop length and the entropy term for the loop asymmetry  as sodium independent.

approximative approach
like its previous versions, melting  <dig> has a customisable threshold value for the maximum oligomer length for which a nearest-neighbor approach should be used instead of an approximative formula. it is possible to bypass this threshold and force the usage of a specific type of computation.

the software offers several approximative formulae taken from the literature such as that of wetmur  <cit>  for dna: 

  tm= <dig> + <dig> logna+1+ <dig> na++ <dig> %gc−500size−%mismatching 

similar to the nearest-neighbor approach, the approximative formula will be used if the environment matches the condition of application. as these formulae embed sodium correction, melting does not apply any additional ion correction. however, if the environment contains magnesium or other monovalent cations, the approximate formula will use the equivalent sodium concentration computed by a sodium-equivalence formula such as that of von ahsen et al. <cit> : 

  naeq+=na++k++tris+2+ <dig> mg2+− 

software design
user interface
upon reading the options set by the user, the chosen thermodynamic formulae, approximative formulae and ion/denaturing agent corrections are instantiated using the factory design pattern.

there are several groups of options in melting  <dig>  the information options display information about the program, such as help or legal information. to be able to compute a melting temperature, the program requires mandatory options: type of hybridization, sequence and nucleic acid concentration, and at least one ion concentration. moreover, the general options allow one to define the optional environment of the program: other ion or denaturing agent concentration, verbose mode, file output mode, data file path or threshold value. finally, there are several options which enable the user to change the default nearest-neighbor formulae and/or parameters, the default approximative formulae, the ion and denaturing agent corrections or to force a specific melting temperature computation method . after the options are entered, the program first looks for the hybridization type to load the appropriate default set of thermodynamic parameters. then the set of options entered by the user are completed with the default values for this hybridization type.

the command line option syntax of melting  <dig> differs from the previous versions. while an alternative backwards-compatible executable is provided to allow the use of the previous option syntax with the new software, it precludes use of the new features when using the old syntax.

the program automatically detects when the sequences are self complementary and sets the nucleic acid factor correction f to  <dig>  it also applies an additional symmetry correction parameter which is stored with its nearest neighbor pairs parameters set.

extension interfaces
we have defined four interfaces, one for each kind of model that is used by melting: 

· melting temperature computation model 

· enthalpy and entropy computation method for patterns forming the duplex

· ion and denaturing agent correction

· sodium equivalence computation method

software structure
melting  <dig> is entirely written in java and can be run with a java  <dig> environment or higher. executables for microsoft windows and linux, as well as the pre-generated jar file, are provided together with the source code. the program is licensed under the general public license version  <dig>  <cit> . to date melting  <dig> does not have a graphical interface, but can be easily used through the command-line. the distribution contains a detailed user guide, which describes each nearest-neighbor or approximative formula, ion and denaturing agent correction. detailed documentation for the developers, including a pre-generated javadoc is also provided. the package can be found at the following addresses: http://sourceforge.net/projects/melting and http://www.ebi.ac.uk/compneur-srv/melting/.

data encoding
all the sets of thermodynamic parameters are taken – or deduced – from published experimental work. datasets are stored in xml files which allow more flexibility and extensibility for data representation . in order to correspond to the literature of the domain, the enthalpy and entropy values of each parameter are given in cal/mol despite this unit not being si compliant.

types of xml nodes and attributes found in thermodynamic files, defining enthalpy and entropy parameters in cal/mol.

melting uses sax to parse the xml files, with an additional layer of xml-independent handler classes to hide the xml parsing process . once sets of pairs of entropy and enthalpy values are loaded from their file, they are independent from their xml representation.

RESULTS
common new features of melting  <dig>  and melting 5
in addition to the features described below, some inaccuracies have been fixed in the calorimetric tables, which explains some of the differences between melting  <dig>  and melting  <dig>  results.

inosine parameters
melting  <dig>  integrates thermodynamic parameters for inosine. for dna/dna duplexes, the program uses the parameters of watkins and santalucia  <cit> , which covers all possible nearest neighbor pairs containing a single inosine base, and several nearest neighbor pairs containing two inosine bases. for rna/rna duplexes, the program uses the parameters of wright et al. <cit>  which covers only inosine-uracil base pairing.

corrections for ion concentrations
it is now possible to enter the concentration of potassium ions, tris buffer and magnesium ions. if only a sodium ion concentration is entered, melting  <dig>  uses a sodium correction . otherwise, the program uses the algorithm from owczarzy  <cit>  to load the appropriate ion correction: one of the sodium corrections if magnesium ion concentrations are negligible, a mixed monovalent/bivalent ion correction if there is a binding competition between monovalent and bivalent cations, and a magnesium correction if monovalent cation concentrations are negligible.

new features of melting 5
approximative formulae
melting  <dig> provides a large set of approximative formulae for dna/dna, rna/rna and dna/rna duplexes from von ahsen et al.,  <dig>  <cit>  that do not take into account mismatches, bulge loops and dangling ends. in addition it still provides formulae from wetmur,  <dig>  <cit> , as implemented in previous versions, which include a penalty based on percentage of mismatch.

nearest-neighbor formulae and parameters
melting  <dig> supports several patterns in dna/dna and rna/rna duplexes: perfectly matching base pair, single mismatch, asymmetric and symmetric tandem mismatch, asymmetric and symmetric internal loop, single and long bulge loop, single dangling end, second dangling end, long poly-a queue and sequences composed of cng repeats . due to the flexibility and modularity of melting  <dig>  it is now possible to choose a combination of thermodynamic formulae and parameters to compute the enthalpy and entropy of the different patterns composing the duplex. in addition to the choice of the thermodynamic formula, melting  <dig> allows the user to specify custom thermodynamic parameters.

however, in order to recognise patterns, melting  <dig> requires that users explicitely identify dangling ends, asymmetric internal loops or bulge loops by filling the gaps in the complementary sequence with dash characters.

for 2’-o-methyl rna/rna and dna/rna duplexes, only thermodynamic parameters for perfectly matching sequences are currently available, but the extensibility of melting  <dig> will facilitate the inclusion of these parameters in the future. as the 2’-o-methyl rna/rna parameters are determined in a solution of  <dig>  m of sodium ions, melting  <dig> automatically applies the entropy correction from santalucia and hicks,  <dig>  <cit>  to each 2’-o-methyl rna/rna parameter before using them in the nearest-neighbor algorithm.

the parameters for inosine are the same as for melting  <dig> . parameters for other biochemical entities  are only implemented for dna/dna duplexes. the independence of the nucleic acid name will facilitate the integration of additional nucleic acids and fluorophores.

corrections for ion concentrations
melting  <dig> accepts user defined concentrations for sodium, potassium, magnesium, dntp and tris buffer. the program provides several sodium, magnesium and mixed monovalent/bivalent ion corrections .

to test the accuracy of the ion corrections as implemented in melting  <dig>  the sodium corrections were compared using  <dig> different dna perfectly complementary sequences from owczarzy et al.   <cit>  and five sodium concentrations  for each of the dna sequences. to test the magnesium corrections,  <dig> different dna perfectly complementary sequences from owczarzy et al.   <cit>  and five magnesium concentrations  were used. the oligomer concentration was  <dig>  m in all cases. the error margin was computed as follow: 

  err=tm−tmtm 

percentage of error between computed and experimental melting temperature for each melting~ <dig> sodium and magnesium ion correction implementation.

sodium equivalence computation is automatically applied on approximative formulae if several cations concentrations are present. the computed sodium equivalent concentration replaces the actual ion concentrations. during a nearest-neighbor computation, a sodium equivalent concentration can be computed if the user enters a specific sodium correction as well as several cation concentrations .

denaturing agent corrections
melting  <dig> provides several approximative corrections for dmso  <cit>  and formamide  <cit> . however, these corrections are independent of the ion correction, although denaturing agents and ions interact with each other. melting  <dig> does not integrate an algorithm to take this interaction into account since none has been published. however, it is now easier to add new algorithms and denaturing agent corrections due to the flexibility and extensibility of the modular program core.

self-complementarity and complementary sequence
as in the previous versions, melting  <dig> can derive a complementary sequence when only one sequence is provided. in addition, the program can automatically detect when a sequence is self complementary and applies a correction for the symmetry, as well as setting the correction factor f to  <dig>  this automatic detection is applicable for perfectly matching sequences with and without dangling ends. if a self complementary sequence containing mismatches, modified nucleic acids or bulge loops is to be entered, only the first sequence should be entered, with the new option -self , which will inform melting of the self-complementarity.

type of hybridization
melting  <dig> requires that users enter a type of hybridization since this affects the thermodynamic formulae and parameters used. when the user enters the hybridization type, melting  <dig> is now sensitive to the order of the sequences types. indeed, a dnarna hybridization indicates that the 5’3’ sequence entered with the option -s is a dna sequence and the 3’5’ sequence entered with the option -c a rna sequence. a rnadna hybridization would indicate the opposite.

discussion
since the software architecture of melting  <dig> was able support the addition of inosine parameters and magnesium ion correction, melting  <dig>  was released to allow software already embedding melting  <dig> to be easily updated and benefit from these important new features. however, the limitations of the architecture of melting  <dig> did not allow the incorporation of new thermodynamic parameters and formulae for patterns other than perfectly matched sequences or single base mismatches. this necessitated a complete rewrite of the software which now includes new features such as dmso and formamide corrections, internal loop parameters, bulge loops, initiation parameters depending on the base pairs and modified nucleic acids. melting  <dig> is now superseded by melting  <dig> and users are invited to upgrade at their convenience. however, unlike melting  <dig>  a graphical interface has not yet been implemented for melting  <dig> 

accuracy of the predictions and flexibility of melting 5
as illustrated by figure  <dig> and additional file 3: figures s <dig> and additional file 4: figures s <dig>  the accuracy of the melting temperature for dna/dna and rna/rna perfectly matching sequences has slightly improved in melting  <dig>  and significantly improved in melting  <dig>  melting  <dig>  improvements are due to a bug fix related to the initiation parameters from allawi and santalucia  <cit>   and the usage of the thermodynamic parameters provided by santalucia and hicks  <cit>  . melting  <dig> improves over melting  <dig>  by computing the duplex initiation as described in each publication from which the initiation parameters originate. for instance, in the thermodynamic parameters published by breslauer et al. in  <dig>  <cit>  , there are two initiation parameters: one to use when having two terminal a/t base pairs and the other to use when at least one terminal base pair is g/c. this is different from the thermodynamic parameters published by allawi and santalucia  <cit>  where the initiation parameters depend on the total count of a/t and g/c terminal base pairs. in melting  <dig>  all the initiation parameters relied on this formula independently from the chosen thermodynamic models. that the initiation parameters from breslauer et al. <cit>   were simply not taken into account explains the slight inaccuracy of the melting temperature.

melting  <dig> automatically sets the nucleic acid correction factor  appropriately for self-complementary sequences while the previous version needed user input to determine this. in addition to this, melting  <dig> uses an entropy symmetry correction term for self complementary sequences, further improving the prediction .

the new version uses the same thermodynamic parameters for dna single mismatches, dna single dangling ends and inosine as the previous version. however, the accuracy of the predictions for duplexes containing single mismatches, single dangling ends or inosine bases has improved along with the accuracy of the perfectly matching watson-crick base pairs predictions. moreover, melting  <dig> improved on these features by allowing the users to change the single mismatch, single dangling end and inosine computation by easily integrating other thermodynamic formulae and parameters. melting  <dig> also incorporates a penalty for terminal iu base pair in rna/rna duplexes and accepts terminal inosine pairing unlike melting  <dig> .

the new software provides a larger choice of ion corrections  than its previous versions. unlike the versions  <dig> x of the program which only proposed ion corrections determined on dna/dna duplexes, melting  <dig> provides specific ion corrections for dna/dna and rna/rna duplexes.

sodium equivalence formulae allow the user to choose an approximative formula even though several ion species are present, resulting in a better approximation of the melting temperature.  <dig> different non self-complementary dna sequences from owczarzy et al.,  <dig>  <cit>  were used to test the accuracy of the sodium equivalence computations as implemented in melting  <dig>  the tris buffer concentration was  <dig>  m  and the oligomer concentration was  <dig>  m. for each sequence, five different magnesium ion concentrations were tested . the error margin was computed as follow: 

  err=tm−tmtm 

error margin in percents between experimental melting temperatures and temperatures computed with each sodium and magnesium equivalence formula implemented by melting.

current limitations of melting 5
melting is limited to publicly available thermodynamic parameters, formulae and corrections. consequently we cannot guarantee that computations are always accurate . in addition, as there is currently no algorithm to take into account the relationship between denaturing agents and ion species, the implemented formamide and dmso corrections are independent of the ion corrections. this is biologically inaccurate and can decrease the accuracy of the predictions. however, the flexibility of the melting  <dig> code base would allow a quick integration of any new relevant research results.

comparison with other similar software
we have compared melting  <dig> to several other software predicting the melting temperature of nucleic acids. these are: the dinamelt web server , the dnamate software , meltdna , dan , melttemp service/scisoft/gcg/gcg10/melttemp.html), the poland server , fractm  and pirna http://compbio.cs.sfu.ca/taverna/pirna/.

unlike most of these programs, melting  <dig> does not yet offer a web interface nor a graphical user interface. several of them compute fuller melting profiles containing asborbance, heat capacity or other parameters, while melting only computes melting temperature, enthalpy and entropy.

however, only melting offers customisation of the following parameters: type of hybridization, thermodynamic parameters, computation methods, duplex patterns, as well as ion and denaturing agent corrections. moreover, melting is the only software that allows the use of approximative formulae when several ion species are present using sodium equivalence formulae. it is also the only software which integrates parameters for nucleic acids such as inosine or locked nucleic acids, and parameters for other biochemical entities such as azobenzene. finally, only melting integrates experimental evidence from all sources, eventually allowing it to handle various duplexes in various environments.

this comparison is detailed in additional file 6: basic software structure, hybridizations, ion corrections, denaturing agent corrections, approximative formulae and polymer mode, supported duplex patterns.

CONCLUSIONS
two new versions of melting have been released. melting  <dig>  is an extension of melting  <dig>  and integrates inosine thermodynamic parameters for dna and rna sequences as well as a dna/dna correction for mixed monovalent/bivalent ion and magnesium ion. melting  <dig> is an extensible and flexible program which computes melting temperature for dna, rna, dna/rna and 2’-o-methyl rna/rna duplexes using a large choice of nearest-neighbor formulae and parameters as well as approximative formulae, and takes into account sodium, potassium, magnesium ions concentrations, tris buffer concentrations, formamide concentration and percentages of dmso.

melting  <dig> allows user specified customization of methods. the rationale for the development of this flexible extensible architecture is to integrate new knowledge in the thermodynamics of nucleic acids and melting temperature and to introduce a large choice of formulae, thermodynamic parameters and ion corrections. for instance, modified nucleic acids or fluorophores have become useful for certain molecular experiments and melting should be able to take these chemical entities into account. the extensibility of melting  <dig> allows one to easily add these new modified nucleic acids or chemical entities  when thermodynamic parameters become available for them, as well as new ion species corrections. melting  <dig> implements several thermodynamic formulae which allow one to compute the enthalpy and entropy of mismatches, bulges, dangling ends,  <dig> to  <dig> cng repeats, and will be able to integrate new thermodynamic formulae and parameters as they become available.

availibility and requirements
· project name: melting

· web site:http://www.ebi.ac.uk/compneur-srv/melting/

· project home page:http://sourceforge.net/projects/melting/. melting  <dig>  is also distributed by the debian and ubuntu projects.

· operating system: platform independent

· programming language: c and a graphical interface in perl for melting  <dig> , java for melting 5

· other requirements: jre  <dig> or higher for melting  <dig> 

· license: gnu gpl version 2

additional files
competing interests
the authors declare that they have no competing interests.

authors’ contributions
marine dumousseau implemented the melting  <dig>  extension and the melting  <dig> software. nicolas le novère implemented the previous c versions of melting and supervised all the project. nicolas rodriguez helped with the implementation of the melting  <dig>  web interface. marine dumousseau, nick juty and nicolas le novère wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
melting  <dig> thermodynamic formulae and parameters. this additional file lists all the patterns which can be managed by melting  <dig> and the references of each matching thermodynamic formulae and parameters. melting  <dig> cannot currently compute terminal mismatches, all mismatches must be internal. you can refer to the documentation in the melting  <dig> package or at the following page  to have more information about the melting  <dig> implementation of the thermodynamic formulae.

click here for file

 additional file 2
ion corrections. this additional file lists all the ion corrections which can be applied by melting  <dig> and melting  <dig>  as well as the references of each matching ion correction. you can refer to the documentation in the melting  <dig> package or at the following page  to have more information about the melting  <dig> implementation of the ion corrections.

click here for file

 additional file 3
figure s <dig>  melting results for rna sequences. the various predictions were computed for  <dig> different not self-complementary rna sequences from xia et al. . the sodium concentration was  <dig> m and the oligomer concentration  <dig>  m. the thermodynamic parameters with which the melting temperature was computed were freier et al.   and xia et al.  .

click here for file

 additional file 4
figure s <dig>  melting results for dna/rna duplexes. the various predictions were computed for  <dig> different dna/rna duplexes from sugimoto et al. . the sodium concentration was  <dig> m and the oligomer concentration  <dig>  m. the thermodynamic parameters with which the melting temperature was computed were sugimoto et al.  .

click here for file

 additional file 5
figure s <dig>  melting results for rna self complementary sequences. the various predictions were computed for  <dig> different rna self complementary sequences from xia et al.  . the sodium concentration was  <dig> m and the oligomer concentrations  <dig>  m. the thermodynamic parameters with which the melting temperature was computed were freier et al.   and xia et al.  .

click here for file

 additional file 6
features comparison of melting with similar softwares. this additional file lists the software structure information, the supported hybridization and parameters, the ion and denaturing corrections, the approximative formulae and the supported duplex patterns of melting and other similar softwares.

click here for file

 acknowledgements
we thank lukas endler for his help to find several rna thermodynamic parameters, mathieu sivade for his programming advices and margaret duesbery for proof reading.
