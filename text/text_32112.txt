BACKGROUND
data analysis and processing are tasks met in almost any experimental laboratory. widely used software for such tasks include ubiquitous generic spreadsheet programs such as ms excel, as well as sophisticated commercial software packages such as sigmaplot, origin, igor, etc. in the last ten years, free and open source software has also been developed, mainly based on c++ and python. this includes, but is not limited to, software such as fityk
 <cit> , peak-o-mat , hippodraw , veusz , paraview , gnuplot , r  and others. one of the most established software in this respect is grace , a descendant of the ace/gr 2d plotting tool originally developed for unix.

our lab has been developing practical java applications focused on structural biology tasks since 2002
 <cit> . numerical methods well established in the classical scientific programming languages such as fortran and c have increasingly been developed and implemented in java. for instance, jama provides classes for constructing and manipulating real matrices and their decompositions , and many algorithms have been made available by developers in java, including the very extensive library of scientific and numerical classes by flanagan . despite the availability of numerical methods implementations, there is a surprising lack of interface-oriented java software for data analysis and processing. according to a list of numerical analysis software in wikipedia    , there is only one java/jython program listed in this context, namely jhepwork .

based on java classes developed within our program collection for structural biology and biophysical chemistry
 <cit> , we set out to design a simple-to-use and portable java application for serial data analysis and regression , which enables graphical visualisation, transformation and fitting of two-dimensional data. the emphasis of this application has been intuitive usability and quick access to a variety of laboratory-derived raw data. concomitantly, a class handling the 2d plotting  has also been programmed.

implementation
sdar is a java application that builds on and extends fundamental java classes developed within the program collection for structural biology and biophysical chemistry 
 <cit> . the four pcsb components of the program are the main class providing the gui, a class to describe the dataseries objects, a jpanel class graphpanel that provides plotting functionality, and general classes from our pcsb library . the sdar source code is available upon request.

for curve fitting, levenberg-marquardt minimisation  and regression methods provided by the flanagan library  have been implemented, depending on the type of equation. these methods are implemented in sdar as classes levenbergmarquardt, linearregression and neldermead. in order to generate scalable vector graphics  images, sdar uses the apache batik svg toolkit   which also allows for generation of image files in png- and tiff-format.

RESULTS
sdar uses tabbed panels to enable viewing of datasets. the main panel tabbed graph shows graphical x-y-plots of the current datasets. for each dataset, a new tabbed panel is added with the name of the set showing as label in the tab. these latter panels show the spreadsheet format of the dataset, comprising of the x-y-data in the first columns, as well as any data derived from analysis in sdar in the following columns. at the bottom of these panels, two functions are provided: close will delete this dataset from the current session, save writes the current dataset to an ascii file compatible with the format of the program grace; data derived from analysis in sdar will be saved as remarks  at the top of the file. in the table view, the user can change data entries in the first two columns. with update, the amended data get plotted in the graph panel .

a movable tool bar allows quick access to frequently used graphics functions.

the current session can be saved in a binary file using the file-save, and retrieved with the file-load function.

on the graph panel, vertical and horizontal line cursors can be activated and positioned using either a click with the left mouse button, or the arrow keys up, down, left and right. the x- and y-values of the active dataset at the current cursor position are displayed in the status bar. transformations can be applied simultaneously to any selection of datasets.

the transformation features implemented in the current version of sdar include:

• translation of data series in x- or y-direction

• scaling of x- or y-values

• change data pitch 

• addition of a linear function to data series

• smoothing of data series, using the mean or median of sliding windows

the current analysis features include:

• automatic and manual determination of maxima and minima

• integration

curve fitting of data series is currently possible with the following functions:

• linear 

• sigmoid 

• hill 

• hill with background 

• dose–response/logistic ec <dig> 

• gaussian 

• exponential 

graphical fitting of gaussian functions enables the user to interactively position and fit a gaussian function in the graph panel . for all curve fitting applications, a manual option is also available which enables the user to adjust the fit by changing individual fit parameters with sliders. the goodness of fit statistics are updated in real time, with red and green colours indicating whether a change of parameter values has improved or worsened the fit .

for graphical visualisation of plots we have developed the graphpanel class . this class provides a versatile tool for plotting any two-dimensional data either as symbol or line graphs. all graphical features such as line cursors, zoom and integration windows, etc. are carried out by this class. for interpolation of functions in between discrete data points, a cubic spline algorithm has been implemented, following the numerical methods published in
 <cit> . the graphpanel class, since its inception, has been used in several of our other java applications, including afdp, acdp, and dman
 <cit> .

compared to other software applications in this area, the feature that distinguishes sdar is its intuitive use and the emphasis on graphical operations. in contrast to the purely number-based handling of curve fitting and data transformations in other software, sdar offers a graphical manipulation feature where possible, therefore enabling a visual interaction and assessment of the user with the plotted data.

an important aspect in the design of sdar is to provide flexibility to the user by ensuring compatibility with other software. the program grace has a long-standing history in data transformation and plotting, and we therefore decided to have data saved by sdar in a grace-compatible format. all data files saved within sdar have a header section with grace-compatible commands. there is also an option export to grace which will save all current data series in a grace-compatible input file.

CONCLUSIONS
sdar is a simple-to-use, platform-independent visualisation and analysis tool for two-dimensional data implemented in java. the program features and the graphical user interface have been designed considering convenient usage and flexible applications. images can be generated directly from sdar and saved as high quality svg files, as well as in the highly portable png and tiff formats. data processed in sdar can be exported in a format compatible with grace.

for future versions of this software, we plan to implement further smoothing and curve fitting features as well as deconvolution. for improved output features, we plan to include pdf generation, as well as export to the gnuplot software .

availability and requirements
• project name: sdar

• project homepage:
http://www.structuralchemistry.org/pcsb/

• operating system: os-independent

• programming language: sun/oracle java version  <dig> .0_03

• other requirements: sun/oracle jre  <dig> or jre 7

• licence: eula

• any restrictions to use by non-academic user: software is free for non-commercial users

• sdar v <dig>  is included as additional file
2

• the manual is included as additional file
3

• the graphpanel class is included as source with documentation as additional file
1

abbreviations
pcsb: program collection for structural biology and biophysical chemistry; pdf: portable document format; png: portable network graphics; sdar: serial data arithmetic; svg: scalable vector graphics; tiff: tagged image file format.

competing interest
the authors declare that they have no competing interests.

authors’ contributions
ah invented, designed and wrote algorithms. sw and njh contributed to the design and writing of algorithms. sw, njh, ah and as tested the program; sw and as wrote the manual. all authors contributed to drafting the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
source file of the graphpanel class with javadoc documentation.

click here for file

 additional file 2
the program compiled with java  <dig> . <dig> 

click here for file

 additional file 3
the manual for sdar.

click here for file

 acknowledgements
we thank jp lewis and m flanagan for making available their numeric libraries. research in the lab of ah is funded by the national health and medical research council and the australian research council.
