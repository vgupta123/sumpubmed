BACKGROUND
single nucleotide polymorphisms  are the most common genetic variant found in vertebrates and invertebrates
 <cit> . snps are regularly utilised as the favoured molecular marker in association studies
 <cit> , genetic mapping
 <cit>  and population genetics
 <cit> . improving technologies and decreasing costs have enabled researchers to identify thousands of mutations, including rare variants, with potential influence on phenotypic variation
 <cit> . more frequently non-bioinformatics researchers are required to perform analysis of increasingly large datasets. disease susceptibility, agriculture and evolution are among the areas concerned with understanding the influence snps have on biological function and phenotypic variation of complex traits
 <cit> . however, annotating large numbers of snps with this type of information can prove daunting and impractical to perform manually.

a number of bioinformatics tools for snp annotation already exist . although there are over  <dig> reference sequences for eukaryotic species available from ensembl 
 <cit> , there are currently only a small number of tools that enable analysis of non-human snp data . many tools that are more general can only analyse species with snp information in dbsnp and some require that the snps being annotated already exist in dbsnp. several tools try to circumvent this problem by returning information for known snps surrounding the unknown which works well for densely sampled species like humans but is not a viable option for almost all other species .

we have developed a simple to use snp data analysis tool  specifically for use with organisms which are not supported by other tools and may have a small number of annotated snps available, but can equally be used to analyse datasets from organisms which are densely sampled for snps.

implementation
snpdat is a cross-platform command line tool written in perl, allowing easy incorporation into existing snp discovery or annotation pipelines or even run by a user on a standard desktop machine. snpdat can provide comprehensive annotation of both novel and known snps for any organism with a draft sequence and annotation.

many available tools require the user to create a local database before snp annotation can be performed . however, this process is not practical in all cases or straightforward enough for inexperienced users. for example to perform snp annotation using functsnp, users must first supply a list of uniform resource locators  linked with online resource data files and then download them. they must then decompress any of these files matching specific suffixes, convert the data to sql format to be imported to a sqlite database and finally import these files into the sqlite database. this is time-consuming and difficult for users inexperienced in bioinformatics to annotate even one snp.

additionally, some tools  involve a number of pre-processing steps to parse and reformat either sequence or annotation files. this can be a difficult and confusing step for novice users, especially when dealing with non-model organisms. snpdat does not require the creation of any local relational databases or pre-processing of any mandatory input files.

snpdat requires only three input files; a variant calling formatted  file or a simple tab delimited text file  as the snp input file, a reference fasta formatted sequence file for the species of interest, and a gene annotation file in gff/gtf format. gtf files are a standard format for storing information on gene structure . gtf files define genomic structures as features. typical features include coding sequences , exons, start and stop codons. additional features may include untranslated regions , introns and micrornas.

both fasta and gtf files are available from ensembl for over  <dig> eukaryotic species
http://www.ensembl.org/info/data/ftp/index.html). optional files include a processed file of snp information from other databases such as dbsnp. snpdat uses the extra information provided by this file to cross reference de novo snps against known annotations. separate scripts are provided to automate the retrieval and format the data for any organisms with snp information in dbsnp. additional scripts which automate the retrieval of gtf, fasta and dbsnp information are described in the following sections and are available from the snpdat webpage .

retrieval of gtf and fasta information
an additional script  is provided to retrieve fasta and gtf information for any of the organisms in ensembl . this is written in perl but uses the system call curl to retrieve the information from ensembl. this script requires an internet connection. curl is a part of most linux distributions and mac os x and can also be provided for windows through cygwin, which is a collection of tools that provide a linux-like environment for windows. this script is interactive; when run it prompts the user to select a release of ensembl followed by an organism in that release. the gtf and fasta files for that organism will be downloaded to the directory from which the script is run. alternatively, gtf and fasta information can be retrieved manually via the ensembl website. snpdat also works with genomic annotations from sources other than ensembl as long as they are provided in gtf format. this includes the results of computationally derived annotations of de novo genomic assemblies, or transcriptomes.

retrieval of information from external databases
the script “dbsnp_finder.pl” retrieves snp information for any organism in the dbsnp database . this script also uses the curl system call and requires a connection to the internet. once run, the user is prompted to select an organism from all those currently with snp information in dbsnp. the snp information is then retrieved for that organism. snp information from dbsnp can also be downloaded manually from the dbsnp ftp site . when dbsnp information has been retrieved, an additional script  can be used to convert the dbsnp file into a format suitable for use with snpdat.

conversion tools for databases that are not currently supported are available upon request.

running snpdat
to run snpdat, the user specifies the input/output files and desired options with a single command . in the case of malformed commands, snpdat will print an error message to the screen and a short example of how the correct command should look. snpdat does not require the user to install any additional packages or modules and only uses modules included in the core installation of perl.

initially snpdat reads the annotation information into memory from the gtf file. each snp is checked for errors such as non-numeric snp locations and any warnings are printed to the output. all chromosome names provided by the user are compared against the annotation file. a warning message is printed to the output file for every snp location provided which does not exist in the annotation. once all snps have been parsed, snpdat will read the fasta file one chromosome at a time. to save on memory usage and time, any chromosomes that do not appear in the list of queried snps are skipped.

output from snpdat is presented in an easily accessible tab-delimited format containing up to  <dig> columns of information on each snp queried. snpdat returns information on genomic location of each snp queried, including information on the distance to the nearest coding regions and other annotated sequence features, what those features are and where they start and finish . snpdat contains algorithms for estimating information when not provided in either the genome file or the annotation file such as the total number of exons for each transcript containing a snp, the estimated reading frame, , whether the region containing a snp is exonic, intronic or intergenic and distances to coding regions for intronic and intergenic snps.

snps that do not have sequence information in the fasta file but have information in the gtf are still annotated by snpdat. however, the returned information is limited to the first  <dig> columns and columns  <dig>   <dig> and  <dig> of the output file .

non-coding snps
next, all intronic and intergenic snps are identified and processed. the nearest feature to a non-coding snp is identified and relevant data, such as distance to feature, feature ids, strand sense, start and end position, is retrieved. if a snp is equidistance from more than one feature, a separate line for each feature will be reported. column seven in the output file contains the number of features reported for a snp .

coding snps
all features that a snp occurs in are identified and printed to separate lines. information calculated and retrieved for a feature containing a snp is contained in columns 9– <dig> of the output file . columns 18– <dig> contain information estimated from the sequence of the feature such as the reading frame, the position in the codon, reference and mutant amino acid and whether or not the snp is synonymous. the estimated reading frame is relative to the strand sense of the feature. if no strand sense is available from the gtf, snpdat assumes that the strand sense is positive.

finally, all snps are cross referenced against information retrieved from external databases such as dbsnp. snps that do not have sequence information in the fasta file but have information in the gtf are still annotated by snpdat. however, the returned information is limited to information which can be returned without reference to the dna sequence . see table 
 <dig> for more details.

a tutorial demonstrating the use of snpdat and the additional scripts is available from the snpdat website . a user manual and sample dataset are also available to download from here.

RESULTS
to demonstrate its ease of use, de novo snps discovered by mullen et al.  were annotated using snpdat. as a comparison, annovar was also used to analyse this dataset. this dataset consists of  <dig>  snps discovered using high-throughput dna sequencing of target-enriched pooled dna samples of  <dig> genomic regions from groups of dairy cattle. the snps included novel and putative variants from  <dig> chromosomes including the x chromosome.

for snpdat: ensgene annotation and fasta sequence files for bos taurus were retrieved from the ucsc ftp site . a gtf version of the ensgene annotation file was supplied to snpdat along with the fasta file. snpdat does not require any pre-processing steps and so both these files were used as input for the software.

for annovar: the same annotation and fasta files were retrieved for use with annovar. the fasta file was pre-processed to create a sequence file using information from both the fasta file and the ensgene annotation file. the new sequence file and original ensgene file were then supplied as input for annovar.

both tools annotate snps to coding regions ,  <dig> prime untranslated regions ,  <dig> prime utr, intronic and intergenic regions . snpdat annotated snps to a larger number of features and transcripts . both tools identified mutations leading to stop gains, stop losses and other non-synonymous changes.

misc features include non-coding rna and splicing. these features were not included in the gtf version of the ensgene annotation file and so snpdat was unable to identify them as such.

both annovar and snpdat annotated  <dig> snps in coding regions to a total of  <dig> transcripts. of these,  <dig> snps were non-synonymous and  <dig> snps were synonymous mutations . from the snpdat output file it was possible to determine upstream and downstream distances for snps to coding regions . also, from the snpdat output file it was determined that  <dig>   <dig> and  <dig> non-synonymous snps occurred in the first, second and third codon position respectively .

snpdat and annovar both found a large proportion of  of intergenic snps within  <dig>  base pairs of coding regions. additionally, from snpdat output file it was determined that 39% of intronic snps were within a  <dig>  base pair region surrounding exons .

CONCLUSIONS
the rationale behind snpdat is to provide a simple to use tool for researchers annotating the results of de novo snp discovery projects. it is especially intended for use by researchers with limited bioinformatic experience. it can provide a valuable insight into the functional roles associated with discovered snps and cross reference information with external sources. as a command line tool it can easily be incorporated into existing snp discovery pipelines and fills a niche for analyses involving non-model organisms that are not supported by many available snp annotation tools.

availability and requirements
project name: snpdat

project home page:
http://code.google.com/p/snpdat

operating system: platform independent

programming language: perl

other requirements: perl

licence: gplv2

any restrictions to use by non-academics: none

abbreviations
snp: single nucleotide polymorphism; url: uniform resource locator; vcf: variant calling format; gtf: gene transfer format.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
cjc conceived the project. cjc and agd designed and tested algorithms. agd wrote the code for snpdat. both authors read and approved the final manuscript.

acknowledgments
agd is funded under the teagasc walsh fellowship scheme ; cjc is funded under the science foundation ireland  stokes lecturer scheme .
