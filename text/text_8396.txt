BACKGROUND
multiple sequence alignments  are an integral part of many bioinformatics analyses. from an evolutionary perspective, msas can be considered as attempts at arranging sequences in such a way that homologous residues occupy the same columns. this will necessitate the introduction of gaps into some or all of the sequences. a good alignment is found by searching for one that attains a favourable score by penalising the introduction of gaps and substitution of residues. given a scoring function it is possible to determine the optimum alignment of two sequences using dynamic programming
 <cit> . however, as time and memory requirements for determining the optimum alignment grow exponentially with the number of sequences, an exact solution is not feasible for more than a few sequences. this is why the ‘progressive alignment’ heuristic was developed
 <cit> . in progressive alignment, initially only pairs of sequences are aligned, producing so-called profiles, which are then in turn aligned in a pair-wise fashion with other sequences or ever growing profiles. the order in which sequences and profiles are aligned is determined by a so-called ‘guide-tree’
 <cit> . a shortcoming of progressive alignment is that an arrangement of residues that was determined early in the msa cannot be changed at a later stage
 <cit> . consequently the guide-tree has an effect on the quality of the final alignment, and there are different strategies of constructing such a guide-tree. a common strategy
 is to determine pair-wise distances amongst the sequences and to construct from these distances either a upgma
 <cit>  or neighbour joining
 <cit>  tree. in another strategy
 <cit>  the guide-tree is made to resemble the evolutionary tree that is imputed to have given rise to the sequences. recently we have demonstrated
 <cit>  that randomly labeled chained guide-trees produce good alignments for very large numbers of protein sequences. this approach is similar to early msa strategies
 <cit>  where sequences were simply added to a growing msa, one by one. it is also similar to how alignments are generated for the pfam
 <cit>  alignment database.

the purpose of the current study is to systematically assess the impact of the guide-tree on the quality on alignments of small numbers of protein sequences, where the accuracy can be measured using protein structure derived reference alignments. by confining ourselves to small numbers of sequences, we can systematically generate and test every possible guide-tree topology.

methods
we will construct guide-trees for different protein families with a small number of sequences and measure their respective alignment qualities, using several commonly used msa programs on benchmark data derived from protein structure based alignments. the quality of the alignments is evaluated in terms of total column  and sum-of-pairs  score.

aligners
we consider msa programs that are in common use, allow input of an external guide-tree and are fast. we used the following programs with the respective command-line arguments:
◦ clustal omega v <dig> .0
 <cit>  

◦ mafft fft-ns-i v <dig> b
 <cit> 

–anysymbol –retree  <dig> –maxiterate  <dig> –unweight

◦ mafft l-ins-i v <dig> b
 <cit> 

–anysymbol –retree  <dig> –maxiterate  <dig> –unweight

◦ muscle v <dig> .31
 <cit> 
-maxiters 1

◦ pagan v. <dig> 
 <cit>  



these aligners are based on related algorithmic approaches. clustal omega converts sequences and intermediate profiles into hidden markov models  and aligns these hmms using hhalign
 <cit> . by default it makes very fast guide-trees using the mbed algorithm
 <cit>  and does not use iteration, although both guide-tree and alignment can be iterated, on request. muscle uses a standard profile-to-profile alignment method but is very highly optimised and makes extensive use of iteration to gradually improve the alignment and guide-tree. mafft l-ins-i uses consistency as introduced in
 <cit>  and as such, is only suitable for relatively small numbers of sequences. it also makes use of iteration. mafft fft-ns-i uses fast fourier transforms for very fast pairwise alignments and is the standard mafft program for fast high-throughput alignment of medium to large numbers of sequences. pagan uses a phylogeny-aware graph alignment algorithm and relies explicitly on having a phylogenetic tree as guide-tree. these have to be generated outside of pagan.

the main purpose of this study is to correlate alignment scores with particular tree topologies for the basic profile-profile alignment engine. therefore we disable iteration, as this will modify the alignment order. by iteration we mean a process that attempts to improve the objective score by repeatedly adjusting an initial msa. this process can entail a modification of the guide-tree or a re-alignment of individual sequences onto a preliminary alignment. consequently the scores for mafft  and muscle in this study are lower than in their respective default modes, where iteration is enabled. we do give these default scores in additional file
1: supplement s <dig> 

to score an alignment we use the total column  and sum-of-pairs  scores, as implemented by qscore
 <cit> .

benchmark data
benchmark data were extracted from the homstrad data base
 <cit> . we selected single domain protein families with at least  <dig> sequences and multi-domain families with  <dig> or more sequences. if more than  <dig> sequences were available for a particular family then we reduced the number down to  <dig>  picking the sequences randomly. if more than  <dig> sequences were available then we created an extra test family, possibly with re-sampling. if the number of protein structures was between  <dig> and  <dig>  then we supplemented the sequences with homologous pfam sequences
 <cit> . in this case scoring of the alignment can only be done on the embedded homstrad reference alignment. we assembled  <dig> protein families,  <dig> were augmented with additional pfam sequences and  <dig> were re-samples of larger homstrad families. alignment lengths vary between  <dig> and  <dig>  average sequence lengths vary between  <dig>  and  <dig>  and average pair-wise identities ranged between  <dig> % and  <dig> %.  <dig> families were comprised of multiple  domains. a summary of reference family statistics can be found in additional file
1: supplement s <dig> 

guide-trees
distance based default guide-trees
progressive alignment is a 2-stage process. the first stage is the guide-tree construction, the second stage comprises of the alignment of individual sequences and successively larger profiles, as specified by the guide-tree. in this study we will treat the second stage, that is the profile-profile aligner, as a ‘black box’ and focus on the first stage. in order to construct the guide-tree, many multiple sequence aligners construct a matrix of pair-wise distances. these distances can be k-tuple distances of unaligned sequences or full alignment distances. for small numbers of sequences, n, it is feasible to construct a full n × n distance matrix; if the number of sequences is large , then time and memory may be conserved by calculating distances of the n sequences to only a small number of seeds, n ≪ n
 <cit> . the distance matrix can then be converted into a guide-tree, using neighbour-joining or upgma algorithms. the version of pagan that we used in this analysis does not construct a default guide-tree. as mentioned earlier, we turn off all iterations, which would interfere with our guide-treeselection.

guide-trees based on estimated phylogeny
we do not know the true phylogeny of the test sets we align but we do have high quality reference alignments. these were used to estimate the phylogeny using a range of methods. the best-fit empirical model of amino acid sequence evolution for each reference alignment was determined using prottest 3
 <cit> . each model was determined using the akaike information criterion 
 <cit> , corrected akaike information criterion 
 <cit> , bayesian information criterion 
 <cit>  and decision theory criterion 
 <cit> . the most likely tree for each alignment was inferred using the maximum likelihood approach employed by raxml
 <cit> . in addition to the best-fit model of sequence evolution, the generalised time reversible  model and gtr model where a fraction of amino acids is considered invariable  were used for each alignment. in all cases, gtr or gtr+i trees produced higher log likelihood scores than the best-fit model predicted using prottest  <dig>  and so were considered to be the most likely tree available. for  <dig> families we had species information for all  <dig> sequences. out of these we were able to root  <dig> trees by hand. of these,  <dig> trees were mid-point rooted and another  <dig> trees had a robinson-foulds distance of  <dig> from the mid-point rooted tree. we also tried all  <dig> possible rootings for all  <dig> families and ranked the quality of the alignment, using the mid-point rooting. for clustal omega mid-point rooting was the best in 61/ <dig> cases, for muscle 45/ <dig>  for default mafft 55/ <dig> and for mafft l-ins-i 54/ <dig>  we therefore used hand-rooted trees where they were available and thought it reasonable to use mid-point rooted trees, where no better tree could be obtained. trees were  rooted using phylip’s retree command
 <cit> . the list of estimated phylogenetic trees, henceforth called ml trees, can be found in additional file
1: supplement s <dig>  where we also show that 133/ <dig> trees are within 1σ of the imbalance expected under an equal rates markov model
 <cit> .

systematic guide-tree construction
the number of possible guide-trees grows with the number of sequences n. for a rooted tree the number of labeled guide-trees is ln = !!
 <cit> . in the present study we will analyse l4 =  <dig>  l5 =  <dig>  l6 =  <dig>  l7 =  <dig>   <dig> and in particular l8 =  <dig>   <dig>  no closed formula is known for the number of unlabeled guide-tree topologies un, but in this study we use u4 =  <dig>  u5 =  <dig>  u6 =  <dig>  u7 =  <dig> and u8 = 23
 <cit> . in general, there are n! ways to distribute n sequence labels amongst the leaves of a guide-tree; however, sequence alignment should be a symmetric process, so that every degree of symmetry decreases the number of topologically distinct labeled guide-trees by a factor of  <dig>  for example, a perfectly balanced tree with  <dig> sequences ,), has three degrees of symmetry, that is  ↔ ,  ↔  and ,) ↔ ,), so that there are b4 = 4!/23 =  <dig> distinct balanced trees with  <dig> leaves. these are ,), ,) and ,). a perfectly chained tree of  <dig> sequences ,3),4) has only one degree of symmetry, that is,  ↔ , so that there are c <dig> = 4!/ <dig> =  <dig> distinct chained trees of  <dig> sequences, given in additional file
1: supplement s <dig>  there are no other topologically distinct unlabeled trees for  <dig> sequences. this example is consistent, as b4 + c4 = 3 + 12 = l <dig>  which is the expected number of all labeled trees with  <dig> leaves.

we are particularly interested in the case of  <dig> sequences, as these trees can be perfectly balanced. this means that at every internal node there is an equal number of sequences subtended by both branches. only trees with n leaves, where n is a power of  <dig>  can be perfectly balanced. the next such tree has  <dig> sequences. for  <dig> sequences there are u16 =  <dig>   <dig> unlabeled trees and l16 ≈  <dig>  ×  <dig> labeled trees. a complete exploration for  <dig> sequences is outside the scope of this study. however, in additional file
1: supplement s <dig> we present results for  <dig> topologically distinct trees of  <dig> sequences, each labeled in  <dig>  different ways. perfectly imbalanced trees are trees where at every internal node  one of the two branches subtends exactly one sequence. these trees are sometimes referred to as pectinate  or linear; we call them chained. for n >  <dig> sequences there are, aside from perfectly balanced and perfectly chained trees, trees of an intermediate degree of balance. several measures to quantify this degree are in use, for example, sackin’s index
 <cit> , the index described by colless
 <cit> , the inverse-maximum index, as described by sokal
 <cit>  and shannon entropy. however, apart from the perfectly balanced and chained trees, none of these indices give exactly the same ranking of trees , so that the ordering of trees according to their degree of balance is somewhat fuzzy and depends on the specific aspect of the property measured by the respective index. in additional file
1: supplement s <dig> we show all unlabeled guide-trees for  <dig>   <dig>   <dig>   <dig> and  <dig> sequences and quote their respective measures of im/balance.

different clustering schemes
apart from the aligners’ default and the ml trees we tried various other clustering schemes, as outlined in
 <cit> . we consider single linkage , merging clusters for which the minimum distance between their elements is the least one; complete linkage , merging clusters for which the maximum distance between their elements is the least one; mean linkage , merging clusters for which the euclidean distance between their centroids or means is the least one; ward’s criterion, merging clusters for which the increase in variance for the resulting group is the least one. in addition, we considered upgma and neighbour joining trees, as produced by clustal w2
 <cit> .

populating chained guide-trees
it has been shown
 <cit>  that randomly populated chained guide-trees on average produce good alignments. however, any particular randomly populated chained guide-tree might in fact produce a bad alignment. one would like to select an ordering with the best possible outcome. in order to determine such an ordering scheme we will arrange the sequences according to their length, hydrophobic moment , isoelectric point  and sequence similarity. for the hm and ip we consider absolute values and values normalised by the sequence length. hm and ip are calculated according to
 <cit> . for all criteria we sort in ascending and descending order. sequences cannot always be uniquely sorted according to just one sort key, there may be ties. we also explore secondary sort keys.

benchmarking
for each protein family, we allowed each aligner to construct a default guide-tree. using this default guide-tree the aligners construct an initial alignment, without iteration. we call this alignment the default-tree alignment as it uses the default guide-tree, despite not using default command-line flags. the version of pagan that we used does not construct a default guide-tree. in a next step we use the ml tree as the guide-tree, again without iteration. we then used all possible guide-trees to align the sequences. the alignments were scored using qscore. we collected the tc score, which is defined as the fraction of correctly aligned core columns of residues of all core columns in the alignment. core columns were determined where the structural superposition for every reference sequence agreed. we accepted helix, sheet and coil states, since the euclidean distance between each pair of alpha carbons within the column was within a threshold of  <dig>  nm
 <cit> . we rejected the joy criterion
 <cit> , where only 70% of sequences have to agree, as this produced too many columns, which by visual inspection could not be deemed reliably aligned. this reduces the ranges of lengths of the alignments from  to , the largest percent reduction was down to  <dig> % , while the largest retention was  <dig> % . the behaviour of four example families can be found in additional file
1: supplement s <dig>  the tree/s yielding the highest tc score is/are then easily identified by sorting the  <dig>  tc scores for the different trees. we count how many trees produce the same, highest tc score.

RESULTS
estimated phylogenetic trees
figure
 <dig> compares the tc scores for the  <dig> test families with  <dig> sequences, using default guide-trees versus ml trees, for the various aligners. along the x-axis are the tc scores when using default trees; along the y-axis when using ml trees. the coloured dots represent results for each of the  <dig> protein families, the colour encodes the average percentage identity of the reference alignment. unsurprisingly one sees that in general, high identities  are associated with high scores  while low identities  are associated with low scores . a dot below the bisectrix  means that the default tree gives a better score than the ml tree. a dot above the bisectrix means that the ml tree produces a better score than the default tree. the black squares represent the average of all  <dig> alignments. we notice that for clustal omega the ml trees produce, on average, worse results than the default trees , for mafft fft-ns-i and l-ins-i the results are slightly better . ml trees produce a better average score for muscle . for clustal omega the individual data points are tightly arranged along the bisectrix. for mafft fft-ns-i, l-ins-i and muscle the ml trees appear to give an improvement for difficult alignments and a deterioration for easy alignments. results using the sp score can be found in additional file
1: supplement s <dig>  as there is no default tree for pagan there is no corresponding pagan panel in figure
 <dig> figure  <dig> 
comparison of tc scores for default and ml tree. tc scores for default tree along x-axis, for phylogenetic tree along y-axis for  clustal omega,  mafft fft-ns-i,  mafft l-ins-i,  muscle. colour dots are used for individual protein families: blue and green for high percentage identity reference alignments, yellow and red for low identity. black box is used for average tc score. below the dotted line the default tree is better than the ml tree, above the ml tree is better than the default tree.



best possible trees
figure
 <dig> compares the default tc scores for the  <dig> test families with  <dig> sequences, with the best tc scores found from scores for the  <dig>  possible guide-trees. clearly, no points can lie above the bisectrix. points on the bisectrix represent the best possible outcome. we notice that the default trees for all aligners fall way short of the best possible outcome, that is - <dig> % for clustal omega, - <dig> % for mafft fft-nt-i, - <dig> % for l-ins-i and - <dig> % for muscle. as there is no default tree for pagan there is no corresponding panel in figure
 <dig> 

figure
 <dig> compares the best possible results for the  <dig> test families with  <dig> sequences, with the results for the alignments obtained with the ml trees; this figure does show results for pagan in panel . the average tc scores for the ml tree fall way short of the best possible tc scores; this is consistent with figure
 <dig> figure  <dig> 
comparison of tc scores for default and best tree. tc scores for best tree along x-axis, for default tree along y-axis for  clustal omega,  mafft fft-ns-i,  mafft l-ins-i,  muscle. colour dots are used for individual protein families: blue and green for high percentage identity reference alignments, yellow and red for low identity. black box is used for average tc score. here all points must be below bisectrix as no tree can be better than the best tree.
comparison of results for best possible and ml tree. tc scores for the best tree along x-axis, for ml tree along y-axis for  clustal omega,  mafft fft-ns-i,  mafft l-ins-i,  muscle,  pagan. colour dots results are used for individual families, black squares averages of families. bottom right-hand panel distribution of robinson-foulds distances between best and ml tree. frequencies for clustal omega  shown in red, mafft l-ins-i  in green, mafft fft-ns-i  in dark blue, muscle  in magenta and pagan  in light blue.



in the bottom right-hand panel of figure
 <dig> we show the proportion of times the ml guide-tree has a certain distance from the guide-tree giving the best possible tc score, as measured by the robinson-foulds  metric for rooted trees
 <cit> . trees that are isomorphic and label preserving have an rf distance of  <dig>  the maximum rf distance for two rooted trees with  <dig> sequences is  <dig>  if for any family more than one tree produced the same highest score we registered the tree with the lowest rf distance. the bottom right-hand panel of figure
 <dig> shows that in less than 12%  of the families the best possible tree is isomorphic and label preserving  wrt the ml tree. on the other hand for roughly a sixth  of families the ml tree is as far away from the best tree as possible  under the rf metric. the average rf distances for the different aligners are  <dig>  ,  <dig>  ,  <dig>  ,  <dig>  ,  <dig>   – all more than half the maximum distance.

different clustering schemes
table
 <dig> shows the performance of various clustering schemes for the different aligners. the best scheme for pagan in this study is the mean or centroid linkage, which merges clusters for which the euclidean distance between their centroids or means is the least one. for all other aligners single linkage appears to be the best scheme, that is, better than their respective default guide-tree, whose entries in the first row correspond to the average values in figures
 <dig> and
 <dig> table  <dig> 
tc scores for different aligners and clustering schemes


 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
default guide-tree for respective aligner, ‘raxml’ score for ml tree produced from true alignment, upgma/nj trees produced by clustalw <dig>  single/complete/mean linkage clustering schemes, ‘ward’ variance minimising scheme. best scheme for each aligner in bold.



populating chained trees
table
 <dig> gives tc scores for perfectly chained trees, where the leaves were populated with sequences in a certain order. for the current benchmark data of alignable and homologous sequences it appeared to be generally more beneficial to arrange sequences in ascending order of length, that is, to align short sequences before long ones. for fragmented, non-overlapping sequences this would presumably not be a good strategy. data for the hydrophobic moment are not conclusive, because it appears to be beneficial to arrange the sequences in order of descending absolute hm, while the best ordering for the hm divided by the respective sequence length is ascending. for the isoelectric point the best ordering appears to be ascending. the strongest predictor for a good ordering, however, appears to be sequence identity. we consider the highest and/or lowest identity of a sequence to any other sequence. here it is clearly best to first align similar sequences. this ordering gave the best scores for muscle, mafft fft-ns-i and pagan, that is, it was better than their respective default guide-tree. for clustal omega and mafft l-ins-i this ordering was second best, only slightly worse than the default tree.table  <dig> 
tc scores for chained guide-trees populated according to certain criteria


 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
‘len/a’ length ascending, ‘len/d’ length descending, ‘hm/a’ hydrophobic moment ascending, ‘hm/d’ hm descending, ‘hml/a’ hydrophobic moment divided by sequence length ascending, ‘hml/d’ hml descending, ‘ip/a’ isoelectric point ascending, ‘ip/d’ ip descending, ‘ipl/a’ isoelectric point divided by sequence length ascending, ‘ipl/d’ ipl descending, ‘hi/a’ highest sequence similarity ascending, ‘hi/d’ highest similarity descending, ‘lo/a’ lowest sequence similarity ascending, ‘lo/d’ lowest similarity descending. ‘def’ is the default guide tree , raxml is the ml tree estimated from the true reference alignment. the best score for every aligner is highlighted in bold .



tree branch lengths
the analysis so far has not taken absolute or relative tree branch lengths into consideration. the question therefore arises if the distribution of tree branch lengths has an effect. for each family we determined the variability in the distribution of branch lengths. in the top panel  of figure
 <dig> the colless measure of imbalance of the default guide-tree was plotted against this variability. data points with the same colless score are rendered in the same colour. on average  one observes that low variability gives rise to more balanced trees , while higher variability causes the trees to be more chained , that is, in panel  the black line is rising. next, the optimum trees were identified. in the bottom panel  the colless measure of imbalance for the optimum trees is plotted against the variability of the branch lengths. here no correlation between variability and topology is discernible, that is, the black line is flat. it is possible to match up the differently coloured dots, spanning the entire spectrum of variability: most are shifted towards a high degree of imbalance, many of them are perfectly chained. we conclude that the variability of branch lengths does not affect whether the optimum tree is balanced or chained. some examples with extreme topology and/or branch length distribution are shown in additional file
1: supplement s <dig> figure  <dig> 
effect of branch length variability on default and optimum tree shape. panel  correlates variability of distances with the degree of imbalance for the default tree. families are represented with dots, the colour encoding the colless score. panel  correlates variability of distances with the degree of imbalance for an optimum tree. families represented by the same colour as in panel .



optimum guide-tree discrimination
when evaluating all possible  <dig>  guide-trees for  <dig> sequences we determined the best tc score attained for each aligner and counted how many different trees gave rise to this score. for some families only one unique guide-tree produced the optimum alignment. for some families multiple trees produced the optimum alignment and for others families the guide-tree was completely irrelevant and all  <dig>  trees produced the same alignment. this behaviour is depicted in figure
 <dig> 

figure
 <dig> shows how many families have at most a certain number of guide-trees which produce the highest tc score. for example, for clustal omega there are  <dig> protein families whose highest tc score is produced by exactly one guide-tree. for mafft fft-ns-i/l-ins-i, muscle and pagan these numbers are  <dig>   <dig>   <dig> and  <dig>  respectively. on the other hand, there are  <dig>   <dig>   <dig>   <dig> families where all  <dig>  guide-trees produce the same tc score for clustal omega, mafft fft-ns-i, l-ins-i and muscle; there is no such family for pagan, where the most ‘promiscuous’ family has  <dig>  ‘optimum’ guide-trees. it should be noted that the unique and promiscuous families are not necessarily the same for each aligner. in fact there are only five families, where each aligner only identifies exactly one optimum tree, and only two families where, apart from pagan, all aligners find that all trees are equivalent.figure  <dig> 
number of trees that produce optimum tc score. along the x-axis number of families with no more trees producing optimum tc score than indicated along y-axis. clustal omega shown with red boxes, mafft l-ins-i with green bullets, mafft fft-ns-i with dark blue triangles, muscle with inverted magenta triangles, pagan with pale blue diamonds.



average tc score for different topologies
figure
 <dig> shows the average tc score for different guide-tree topologies for  <dig> sequences. the whiskers show the top and bottom 25%: the band inside the box shows the median. tc scores are averaged over all  <dig> protein families. the horizontal red line shows the average tc score for the default guide-tree. the  <dig> guide-tree topologies are ordered from left to right with increasing degree of imbalance; labeling and the concept of imbalance is explained in table s <dig> of additional file
1: supplement s <dig>  the first box is for the perfectly balanced guide-tree, the last box for the perfectly chained one.figure  <dig> 
quartiles of tc scores for different tree topologies. tree topology along the x-axis, left-most box for perfectly balanced tree, right-most box for perfectly chained tree, intermediate topologies as specified in additional file
1: supplement s <dig>  whiskers represent top/bottom 25% scores, band represents median score. boxes are averages over all  <dig> protein families. red horizontal line shows average default score.



we first observe a distinct increase in the tc scores with increasing imbalance. this means that a randomly labeled chained tree is on average better than a randomly labeled balanced tree. this is true for all aligners considered in this study. on the other hand, it is not true to say that all balanced trees produce bad alignments, as the top whisker of the balanced box well overlaps with the top whisker of the chained box. secondly, we observe that the default score is always above the median score for any of the guide-trees. this means that the default guide-tree for  <dig> sequences on average is better than a randomly populated guide-tree, whether it be chained or balanced. this is particularly true for l-ins-i and clustal omega, however for mafft fft-ns-i and especially muscle the default guide-tree is on average only marginally better than a randomly labeled chained guide-tree. this is also true for  <dig> or fewer sequences, as shown in additional file
1: supplement s <dig>  in additional file
1: supplement s <dig> we show how often certain tree topologies produced the best and the worst results.

discussion
we found that for clustal omega and mafft l-ins-i tc scores for the default tree and the ml tree are tightly correlated. this may be in part due to the underlying profile-profile alignment strategy. clustal omega uses hmms and l-ins-i uses consistency; both appear to confer a certain degree of ‘robustness’ wrt the choice of guide-tree. for mafft fft-ns-i and particularly for muscle we found that phylogeny based guide-trees produce a small improvement over default trees for difficult alignments and a deterioration for easy alignments. here the underlying alignment engine is more susceptible to a sub-optimal guide-tree, and the quality of the alignment depends more on the choice of a good guide-tree. in their respective default modes muscle and mafft fft-ns-i compensate for this by iteration. on average we found that ml guide-trees are not better than default distance based guide-trees when performing a progressive alignment. this has long been suspected
 <cit> . the argument there is that sequences with the highest identity can be aligned most accurately. however, if phylogenetic rates vary considerably among lineages, then the evolutionary neighbour may not be the nearest neighbour wrt identity. we see evidence for this conjecture by comparing tc scores for both strategies as well as analysing the robinson-foulds distances.

while the differences in tc scores are small between ml and default guide-trees, there is a vast potential when compared with results for the best possible trees. it would be worthwhile to try to devise better guide-tree construction schemes, especially since contributions from the guide-tree to the alignment accuracy appear to decouple from contributions from the profile-profile alignment stage while the overall accuracy is bound to decrease for larger numbers of sequences
 <cit> .

a structure based evaluation is only one possible angle on benchmarking as it does not primarily test gap placement due to insertion/deletion events
 <cit> . we could confirm that pagan is by far the most phylogeny aware aligner amongst the ones considered in this study, despite being evaluated on a non-phylogeny based benchmark strategy. the other aligners displayed a similar degree of awareness in discriminating between good and bad guide-trees , with muscle being slightly more sensitive than the other three.

when grouping alignment scores according to guide-tree topology we found that chained guide-trees, on average, produce better results than balanced ones. this seems to run counter the established wisdom of trying to balance guide-trees but can be understood when realising that chained trees have fewer sequence pairs that cross the root and the mean pair-wise distance therefore being less than for a balanced tree
 <cit> . for the small numbers of sequences we analysed, we could not confirm that a randomly labeled chained guide-tree is better than the default guide-tree. however, as the number of sequences is increased from  <dig> to  <dig> and then to  <dig> this difference appears to decrease, and we suspect that beyond a certain number of sequences, randomly labeled chained guide-trees will be better than distance based default guide-trees, see additional file
1: supplement s <dig>  this is consistent with findings in
 <cit>  who observed that for the small numbers of sequences in balibase  <dig> 
 <cit>  randomly labeled chained trees were sometimes as good as default trees, while for more than  <dig>  sequences randomly labeled chained trees were clearly better. this suggests that the greatest  improvements of guide-tree construction may come from finding an optimum non-random labeling strategy for chained trees.

CONCLUSIONS
alignment methods that use consistency or hidden markov models to make alignments are less susceptible to sub-optimal guide-trees than simpler methods, that basically use conventional sequence alignment between profiles. the latter appear to be affected positively by evolutionary based guide-trees for difficult alignments and negatively for easy alignments. one phylogeny aware alignment program can strongly discriminate between good and bad guide-trees. the results for randomly chained guide-trees improve with the number of sequences.

availability of supporting data
benchmark sequences, tree topologies, utility programs and driver scripts are available as
http://www.bioinf.ucd.ie/download/bmc-2014-treeexploration.tar.gz.

electronic supplementary material
additional file 1:
supplemental material.


 competing interests

the authors declare that they have no competing interests.

authors’ contributions

fs designed the study, selected benchmark data, generated systematic guide-trees and performed benchmarking. gmh generated and hand-rooted the ml trees and calculated hydrophobicities. dgh discussed results and helped with the manuscript. all authors wrote, read and approved the final manuscript.

