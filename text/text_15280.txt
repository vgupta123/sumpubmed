BACKGROUND
high-throughput biology has led to an increasing number of data, with more and more complex experimental designs. the analysis of these data often produces biological identifier lists, including gene names or otu , obtained from different methods  or from different experimental conditions. venn diagrams  <cit>  are a common visualization chart, which allows to spot shared and unshared identifiers providing an insight on lists similarities.

in a venn diagram, each list is presented by a transparent shape. shape overlaps contain the elements shared between lists or more often the corresponding counts. in proportional venn diagrams, the size of a shape is proportional to the number of elements of the corresponding list or of the corresponding lists intersection. venn diagrams with up to four lists are easy to read and understand but venn diagrams with more than four lists, are much harder to interpret. to solve this problem, the edwards-venn  <cit>  representation introduces new shapes providing a clearer view, shown in the example of figure  <dig> figure  <dig> 
a six lists edwards-venn diagram. this venn diagram displays overlaps between six different biological samples. the icon, located on the top-right, allows users to download the diagram as a png file. the middle-right switch button panel allows to activate or dis-activate lists to access a specific intersection count. charts showing the list size and intersection size repartition located underneath the diagram.



many venn diagram software packages are already available. the first six lines of table  <dig> present the main packages with their main features . the table gives insight on several aspects of the venn diagram production and highlights that, up to now, no web application handled up to six lists. vennture  <cit>  is the only application able to produce such diagrams but it only implements edwards layout and runs only under ms-windows os, producing static ms-powerpoint and ms-excel files. proportional venn diagrams can only display a very limited number of lists, three at maximum. the only feature available in other software which is not in jvenn is the proportional diagram. this is justified by the fact that jvenn was designed to display up to six lists and that proportional diagram is not suited to visualize more than three lists.table  <dig> 
features of a subset of already available software packages, and jvenn




hereafter we introduce jvenn, a javascript library, developed as a jquery plug-in  <cit> , including many features easing diagram production and enhancing their readability. in particular, jvenn can handle up to  <dig> lists, is a dynamic tool and implements both proportional and edwards layouts. the library has already been used and cited in two scientific publications  <cit> . it is already embedded in different web applications such as ng <dig>  <cit> , rnabrowse  <cit>  and wallprotdb  <cit> .

implementation
this section presents the main features of the jvenn library, including the kind of inputs it accepts, the different types of charts it displays, the types of the outputs and how it can be integrated in websites or directly used on our example web page.

inputs
the jvenn library accepts three different input formats : “lists”, “intersection counts” and “count lists”. examples are presented in table  <dig>  where the different lists are “sample1” and “sample2”, the elements of the different lists are given in the fields “data”. for “intersection counts”, the lists are given a label  which is used to make the correspondence between the list and its count. finally, “count lists” provide a count number for each element of a list. hence, with “count lists” the figures presented in the diagram correspond to the sums of counts of all elements shared between lists. they can be particularly useful to present otu read counts  <cit> . for “lists” and “count lists”, jvenn computes the intersection counts and displays the chart. for “intersection counts”, the intersection counts is provided by the user.table  <dig> 
available input formats


series: [{
name: ’sample1’,
data: 
}, {
name: ’sample2’,
data: 
}]
series: [{
name: {a: ’sample 1’, b: ’sample 2’},
data: {a: , b: , ab: [~otu1~,
~otu2~, ~otu5~, ~otu7~]} }],
values: {a:  <dig>  b:  <dig>  ab: 4}
series: [{
name: ’sample1’,
data: ,
values:  <cit> 
}, {
name: ’sample2’,
data: ,
values:  <cit> 
}]


display features
venn diagrams are commonly used to present up to six lists but for six lists, the intersection areas obtained when using a proportional layout are often too small to display the figures.to display five or six lists diagrams, in a user-friendly manner, jvenn implements several features. first, the layout can be switched between the standard layout and the edwards-venn layout  which gives a clearer graphical representation for six lists diagrams. to enhance the figure’s readability for the classical six lists venn chart, some count values are not shown and some are display outside the chart, using lines to line the count to its corresponding area. however, this is still not enough to show all figures. therefore, a switch button panel  was added. it enables to switch on and off the different lists and to display the corresponding intersection counts. when the number of characters of the intersection count exceeds the available space to display it, the value is substituted by a question mark. when the mouse is mouved over this question mark, the value pops-up. to emphasize the list involved in an intersection area, jvenn highlights the intersection shapes when mouse is moved over, fading the others out.figure  <dig> 
a six lists classic venn diagram. on mouse over a figure, the shape corresponding to the lists involved in the intersection are highlighted and the other ones faded out. in this example, the user pointed the intersection between deseq, fq, uq and tmm which contains  <dig> different genes.



the extra charts presented under the venn diagram ease the verification and comparison of multiple lists. the list size graph allows users to check the homogeneity of the input list sizes. the intersection size graph can be used to compare the compactness of multiple venn diagrams.

scientists are usually interested in extracting identifier lists for some intersections, therefore, jvenn implements a one-click function which retrieves the names of the corresponding sets and the identifiers. to find an identifier, one can use a dynamic search box. the shapes containing the matching identifiers are highlighted when using this tool.

outputs
jvenn display is based on a javascript canvas object that allows for png export. the intersection table can also be downloaded as a csv file. this file contains a header line with the diagram area labels and, in column, the identifiers of the elements contained in the area.

integration
jvenn allows programmers having only moderate javascript experiences to embed venn diagrams in a web page without dependency. it has been designed following the examples of jbrowse  <cit> , cytoscape-web  <cit> , and jheatmap  <cit> . the integration documentation is included in the software package which can be downloaded from http://bioinfo.genotoul.fr/jvenn.

web application
jvenn can also be directly used as a web application, which is available at http://bioinfo.genotoul.fr/jvenn/example.html. jvenn’s web application performances depend on the client browser. using the current version on a standard linux computer , it displays a six lists diagram of  <dig>  identifiers in two seconds.figure  <dig> 
jvenn web application. the running version of jvenn accessible at http://bioinfo.genotoul.fr/jvenn/example.html. this one allows the user to set all jvenn main features. the layout can be changed from classical to edwards, a search box is accessible, the switch button panel and the exporting button are available and the statistical charts are displayed. on the right of the page, each of the six textareas can be filled with a list of elements . if the same item is given multiple times, this one will be considered as unique. the list labels can also be customized using the text field on the top of each textarea.



RESULTS
m.a. dillies and colleagues  <cit>  have compared seven methods for normalization and search of differentially expressed genes in rnaseq data. this study is designed to provide a set of best practices to help biologists with their data processing. table  <dig> of the cited article is the contingency table of the differentially expressed genes obtained from the seven methods, where counts in the table correspond to the intersection of two lists obtained from two different methods. the raw data table, kindly provided by the team, contains  <dig>  lines and seven columns. the columns correspond to the different methods presented in the “differential expression analysis” section of their article. the data in the table was filtered  to retrieve the gene name lists corresponding to each method. as, jvenn handles only six list at most, six out of the seven lists were selected for further processing: we left out the median normalization method because, for one hand, this method is very similar to several other methods  and, for the other hand, we believe that median is a poor estimate of the sequencing length, which is the bias that normalization methods try to correct. the lists were uploaded to the jvenn application and a venn diagram was obtained, using an edwards layout, which is shown in figure  <dig> 

the same analysis was performed with vennture, the only other tool able to generate a six list edwards venn diagram. first, the software package was installed on a computer running under ms-windows os. the six gene lists were loaded in an ms-excel spreadsheet and vennture was run using the spreadsheet as input generating a static ms-powerpoint file containing the diagram and a ms-excel file with all the intersection contents.

discussion
the lists overlaps, as produced by jvenn, are given in figure  <dig>  and figure  <dig> . the highest counts are located in central areas of the graph, showing that the corresponding methods share large portions of gene lists. the jvenn statistics show that the different methods produce gene lists with very different sizes  and that most of the genes are shared between methods:  <dig>  genes out of  <dig>  are common between at least four methods. in a very intuitive manner, the chart also points out that the results are strongly consensual since there are many zeros in the peripheral areas. only a few genes  are specific to one list only . genes that are in two lists only are also very few . note that all these numbers are easily read from the chart and that the strong consensus between the lists is also clearly shown from the upper side figure “number of elements: specific or shared by several lists”). such findings are not easily shown using only contingency tables.the largest count over all lists overlaps is found to be  <dig>  which is the number of genes found to be differential by deseq, tmm, uq and fq. as shown in figure  <dig>  this list is very easily retrieved from the web application in one click only, providing the biologist with a large list of very consensual list to study.on the other hand, if the biologist is interested in one specific gene, this gene can easily be tracked using the search box at the top side of figure  <dig>  as no specific gene is of interest in the seminal work, we simply picked out one of the  <dig>  genes randomly  and used it in the search box. it was found to be part of the five genes specific to fq and uq.

making the same analysis with vennture is also possible but a bit harder: the  <dig> genes shared by deseq, tmm, uq and fq can be found easily in the intersection spreadsheet outputed by vennture but the diagram did not allow to search for gene g <dig>  thus, this gene has to be found using ms-excel text search in the intersection spreadsheet, which is less handy than a dynamic and interactive search. moreover, the additional statistics are not provided by the tool.

CONCLUSIONS
jvenn enables to compare up to six lists and updates the diagram automatically when modifying the lists content. compared to vennture it does not need any local installation of a new program and it gives access to a dynamic diagram providing simple tools to extract gene lists and perform searches. jvenn’s statistics charts give a simple and quick overview of the sizes of the different lists and of their overlaps. it permits to compare different venn diagrams. these features are not available in the vennture software package.

for biologists using different techniques in their experiment or in their statistical analysis, jvenn enables to quickly extract the shared identifiers. when comparing different methods applied to extract differentially expressed genes, these features ease the analysis.

thanks to its numerous features, dynamic behavior and graphical layout quality, jvenn can be efficiently used in many cases to compare different sets of results and easily extract shared elements. being a simple javascript plug-in allows developers to embed it in any web environment.

availability and requirements
 project name: jvenn

 project home page:http://bioinfo.genotoul.fr/jvenn

 project demo site:http://bioinfo.genotoul.fr/jvenn/example.html

 operating system: platform independent

 programming language: javascript

 other requirements: web browser

 license: gnu gpl

 any restrictions to use by non-academics: gnu gpl



competing interests

the authors declare that they have no competing interests.

authors’ contributions

jm conceived and designed the project. jm, pb, fe and cd implemented the project. ck evaluated software capabilities, and provided feedback on implementation. jm and ck wrote the manuscript. all authors read and approved the final manuscript.

