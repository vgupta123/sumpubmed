BACKGROUND
enumeration of chemical compounds is important in bioinformatics, and has been adapted to several applications such as drug discovery and design , structure elucidation , and analyses of chemical spaces . it is defined as a problem of generating all non-redundant chemical structures satisfying some constraints. for example, a chemical formula, which consists of the number of each atom included in the compound, is given as an input. there are several algorithms for enumerating chemical compounds from a chemical formula and most of them use a molecular graph to represent a chemical compound, where the nodes and edges of the graph refer to atoms and bonds of the chemical compound, respectively. some of those algorithms are claimed to be able to enumerate various chemical structures without restriction of the structure, such as molgen  <cit>  and open molecule generator   <cit> . it was reported that omg is able to deal with different valences for a kind of atom, and was not efficient for several instances compared with molgen. while the remaining ones, such as enumol  <cit>  as well as bfssimenum and bfsmulenum  <cit> , have a limitation of the structure of enumerated compounds, such as acyclic compounds for bfssimenum and bfsmulenum and compounds with no cycle except for benzene rings for enumol, the methods consume significantly less computational time. there are also related application softwares, e.g. smilib  <cit>  and clever  <cit> , that generate chemical compounds from given fragments. the limitation of these tools is that they require a library of desired chemical fragments, which can be generated by the enumeration tool.

our previous methods, bfssimenum and bfsmulenum, use a tree structure, instead of a general graph, to represent a chemical compound and call it a molecular tree so they can generate only tree-like chemical compounds. in this work, we develop bfsbennaphenum, which aims to reduce the limitation of previous methods by extending them such that they can enumerate chemical compounds containing only benzene rings and naphthalene rings as cyclic structures, which are six carbon atoms cyclic structures and ten carbon atoms bicyclic structures, respectively. pólya proposed a group-theoretic method for isomer counting of single cyclic structures such as a benzene ring, a naphthalene ring, and an anthracene ring using the cycle index, from which many studies followed  <cit> . however, structures enumerated by these methods are restricted to certain types. indeed, meringer wrote that up to now the only way to calculate the number of isomers belonging to an arbitrary molecular formula is to use structure generators  <cit> . suzuki et al. considered the problem of enumerating structures having monocyclic graph structures, each of which has exactly one cycle  <cit> . an enumeration method for tree-like chemical compounds containing only benzene rings as cyclic structures has been implemented on enumol web server . on the other hand, our method can enumerate compounds containing naphthalene rings in addition to benzene rings. moreover, the proposed algorithm can calculate the number of benzene rings and naphthalene rings from chemical formula, while users have to specify the number of benzene rings in enumol.

chemical structures considered in this study can be represented by a molecular tree, where a benzene ring is converted to a node with valence six and a naphthalene ring is considered as two benzene nodes having a special bond. we name that special bond as a merge bond. since a merge bond merges two carbon atoms of two benzene rings together, it reduces the number of carbon atoms with free valence electron of two benzene rings by two so we represent a merge bond by a double-edge. moreover, benzene nodes cannot have double bonds with other nodes because they bond with other non-benzene atoms by a single bond  <cit> . this means that a double-edge represents a double bond if it connects two non-benzene nodes, while it represents a merge bond if it connects two benzene nodes. therefore, bonds in a benzene ring and a naphthalene ring are considered as the same bond and kekulé representation is not included in this work. besides, this work uses a two-dimensional molecular tree to represent a chemical structure so it cannot deal with stereoisomers. for tautomeric, this work considers two structures in a pair of tautomeric as non- redundant compounds and generates both of them.

bfssimenum and bfsmulenum are modified to return a set of molecular trees as the output, given a chemical formula, the number of benzene rings, and the number of naphthalene rings. after that, an attribute called carbon position list is added into benzene nodes in a molecular tree to represent the way that benzene nodes bond with their adjacent nodes. this attribute is important because bonding with different carbon atoms in a benzene ring may result in different chemical structures. finally, for each molecular tree from bfssimenum and bfsmulenum, we generate a set of molecular trees whose nodes adjacent to benzene nodes are labeled with a carbon position such that all chemical structures are enumerated without redundancy based on normal form rule.

for evaluating our proposed method, we perform computational experiments for several instances, and compare the execution time by our method with that by molgen. we show that our proposed method is efficient for enumerating chemical compounds containing benzene rings and naphthalene rings, and is from  <dig> times to  <dig> , <dig> times faster than molgen for several instances in our experiments.

preliminaries
enumeration problem
let Σ be a finite set of labels of atoms, for example, Σ={c,n,o,h }, where ‘c’, ‘n’, ‘o’, and ‘h’ denote carbon, nitrogen, oxygen, and hydrogen atoms, respectively. a molecular graph is defined as a multi-graph g, where v is a set of nodes and e is a set of multi-edges, also denoted by v and e, respectively. each node is labeled with an atom-label in Σ, while each edge represents the bond between two atoms and the multiplicity of edge represents the bond type. the degree of each node is equal to the valence of its atom. let deg and l be the degree and the label of node v, respectively. let val be the valence of the atom represented by label li in Σ. it should be noted that there exist different valences for a kind of atom, for example, carbon atoms of co <dig> and co. for this case, it is sufficient to put two distinct labels c and c in Σ, and to define val= <dig> and val)= <dig>  let num be the total number of nodes labeled with label li in molecular graph g. then, the enumeration problem is defined as follows.

problem <dig> 
given the numbers nli of atoms for all labels li∈Σ, the number nb of benzene rings, and the number nn of naphthalene rings, enumerate all non-redundant molecular graphs g such that num=nli for all li∈Σ, deg=val) for all nodes v∈v, and g includes exactly nb benzene rings, nn naphthalene rings, and no other cyclic structures. it must be noted that nb and nn can be zero.

in the case that the input chemical formula contains five or less carbon atoms, bfsstructenum can enumerate only tree-like chemical compounds by specifying the number of benzene rings and the number of naphthalene rings to be zero. because we enumerate molecular trees such that degree of each node equals to valence of atom label of that node, charged molecules cannot be enumerated automatically. however, they can still be enumerated by specifying a charged atom as a new kind of atom type with appropriate valence value.

since our enumeration methods deal with a chemical compound as a node-labeled rooted ordered tree for efficient enumeration, we contract cyclic structures appearing in a molecular graph to single nodes. concretely, we contract a benzene ring to a node, called benzene node, labeled with a special label ‘b’, and contract a naphthalene ring to two benzene nodes connected by a special bond, called merge bond, represented by a double edge . since six carbon atoms contained in a benzene ring are contracted into a benzene node, we need to remember which carbon atom in the benzene ring connects to its adjacent node in a molecular graph. hence, we add an attribute called carbon position list to each benzene node. figure 1b shows examples of carbon position lists using numbers assigned to carbon atoms in benzene rings in fig. 1a. we call such a node-labeled rooted ordered tree whose benzene nodes are attributed with carbon position lists a carbon position-assigned molecular tree. we enumerate carbon position-assigned molecular trees instead of molecular graphs.
fig.  <dig> example of a molecular graph including benzene rings and naphthalene rings. a a molecular graph including one benzene ring and one naphthalene ring. b a rooted tree contracted from the left graph. it is noted that hydrogen atoms are omitted



center-rooted and left-heavy
in our previous work, we defined the normal form for molecular trees without any cyclic structures using center-rooted and left-heavy to avoid its redundant generation. in this work, we also utilize center-rooted and left-heavy for carbon position-assigned molecular trees, of which properties do not depend on carbon position lists.

a molecular tree t is called center-rooted if its root is the center node  or one endpoint of the center edge of the longest path in t . the center can be either a node or an edge depending on the length of the longest path.
fig.  <dig> illustration of center-rooted molecular trees. a center of the longest path is a node. b center of the longest path is an edge. the thick lines indicate one of the longest paths and the center node/edge is shown in red




in order to define a left-heavy tree, atom-labels must be ordered so that they can be compared with each other, for example, b >c>n>o>h for Σ={b,c,n,o,h }, where ‘b’ denotes a special atom representing a benzene ring. let t be the ordered subtree rooted at u in t. let u and v be two nodes in a molecular tree t,  and  be lists of child nodes of u and v, respectively. it is defined that t>st if l>l  or there exists an integer i such that t=st for all j<i and >st  or i=k+1≤h ). if t>st or t>st does not hold, it is said that t=st.
fig.  <dig> illustration of three molecular trees such that t>s
t or t>m
t. a
l>l. b
l=l, t>s
t. c
l=l, t=s
t, h=2>1=k. d
t=s
t, m
u
l>m
u
l



let mul and mul be the multiplicity of edge e=. let  and  be two lists of edges in t and t in breadth-first search  order , respectively. t>mt if t>st, or if t=st and there exists an integer i such that mul=mul for all j<i, and mul>mul . if t>mt or t>mt does not hold, it is said that t=mt.
fig.  <dig> illustration of breadth-first search  order. numbers indicate bfs order for this example



let child= be a list of all child nodes of node v in bfs order. it is defined that a molecular tree t is left-heavy if t≥mt holds for all nodes v in t and all i= <dig> …,|child|− <dig> 

it should be noted that center-rooted and left-heavy are different from centroid-rooted and left-heavy defined by fujiwara et al.  <cit> , for example, the molecular tree in fig. 1b is center-rooted and is not centroid-rooted because the number of nodes in the left subtree by removing the root,  <dig>  is more than /2=/2= <dig>  in addition, their left-heavy is defined using depth-first search order, not our breadth-first search order.

carbon position list
let s= be a list of nodes, |s| and s denote the size and the i-th element of s, respectively. let tsub be the left-heavy tree rooted at v <dig> that consists of the connected component including v <dig> when the edge  is deleted from t . tsub=mt if v <dig> is a child of v <dig> in t. let index be the order of v∈v by traversing a center-rooted left-heavy molecular tree t with bfs order, which is also denoted by index if t is clear.
fig.  <dig> illustration of subtree t
sub. a a molecular tree t and t
sub, which is surrounded by a red rectangle. b
t
sub



proposition <dig> 
for a node v that has the parent node vp and a child node vc in a center-rooted molecular tree t, tsub≠mtsub.

proof.
the height of tsub is larger than that of tsub because t is center-rooted. hence, tsub is always different from tsub.

we define an equality t1=ct <dig> for two rooted carbon-position assigned trees t <dig> and t <dig> if t1=mt <dig>  and cv1t1=cv2t <dig> for all benzene nodes v1∈v, where v2∈v satisfies index=index, and cvt is a list of lists, called a carbon position list explained later, for a benzene node v in t. for convenience, we define another equality t1=c̲t <dig> by removing the condition that cr1t1=cr2t <dig> for the roots r <dig> and r <dig> of t <dig> and t <dig>  respectively, from the conditions of t1=ct <dig>  if r <dig> and r <dig> are benzene nodes.

for a node v having the parent vp and a child vc, tsub≠ctsub if tsub≠mtsub. hence, only carbon position lists of descendent benzene nodes are needed to determine whether or not tsub=ctsub for child nodes vc <dig> and vc <dig> of v.

definition <dig> 
an adjacent node listavt of a benzene node v in a carbon position-assigned molecular tree t is defined as a list of lists of nodes adjacent to v using carbon position lists of descendent benzene nodes such that 
|avt|≤|avt| for all i,

indexavt <cit> <indexavt <cit>  if |avt|=|avt|,

indexavt<indexavt for all i,j,

avt= if  is a merge bond for some i,

v′∈avt if  is not a merge bond, and tsub=ctsubavt <cit> ,v.


fig.  <dig> examples of adjacent node lists and carbon position lists. a
t
 <dig>  b
t
 <dig>  c
t
 <dig>  d molecular graph of t
 <dig>  e molecular graph of t
 <dig>  f molecular graph of t
 <dig>  red numbers represent carbon positions of node v
1




proposition <dig> 
for a benzene node v that has the parent node vp in a center-rooted molecular tree t, avt <cit> =.

proof.
if v has no child, it is clear because the adjacent node of v is only vp. we assume that v has a child vc. from proposition  <dig> and index<index, avt <cit> = always holds.

a carbon position listcvt of a benzene node v in t is a list of lists, where cvt is a list of carbon positions of the nodes in avt. it is sufficient to enumerate cvt in ascending order because each node in avt has the same subtree. if avt <cit> ,v is a merge bond, cvt has two carbon positions instead of one as usual. it should be noted that cvt⊆{ <dig> …,6} and two carbon positions are assigned for a merge bond because a naphthalene ring shares two carbon atoms between two benzene rings. in the examples of fig.  <dig>  cv1t1=,,) for av1t1=,,), cv1t2=,,) for av1t2=,,), cv1t3=,,,) for av1t3=,,,).

definition <dig> 
an adjacent node listat for a naphthalene ring with two benzene nodes v <dig>  v <dig>  where  is a merge bond, is defined as a list of lists of nodes adjacent to v <dig> or v <dig> except v <dig> and v <dig> such that 
|at|≤|at| for all i,

indexat <cit> <indexat <cit>  if |at|=|at|,

indexat<indexat for all i,j,

v′∈at if tsub)=ctsubat <cit> ,bnt <cit> ), where bn is v <dig> or v <dig> that is adjacent to v.



for a benzene node v <dig> that is connected by a merge bond with the parent node v <dig>  we suppose that the carbon atoms having positions  <dig>  in v <dig> are connected with the carbon atoms having positions x+1¯,x¯ in v <dig>  respectively, where x takes an integer between  <dig> and  <dig>  and x¯=+ <dig> . here, consider the case that v <dig> has the parent node vp. if t is in normal form , position  <dig> is assigned to the carbon atom connected with vp . then, from proposition  <dig>  tsub≠ctsub for any child node vc of v <dig>  tsub≠ctsub for any child node vc of v <dig> except v <dig>  and the naphthalene ring is not symmetric. consider the case that v <dig> does not have a parent node, that is, v <dig> is the root. if tsub≠c̲tsub, the naphthalene ring can be symmetric only with respect to the axis denoted by the dashed red line in fig. 7a. then, it is not needed to consider the other symmetry for the naphthalene ring.
fig.  <dig> correspondence between carbon positions in a naphthalene ring. a correspondence between carbon positions involved with a merge bond in two benzene rings. b correspondence between carbon positions of a naphthalene ring and two benzene rings in the case of tsub=c̲tsub. the upper benzene ring v
 <dig> is the parent of the lower benzene ring v
 <dig>  x¯ denotes + <dig>  blue, red, and green numbers are positions of cv1t, cv2t, and ct, respectively. the dashed red line denotes the symmetric axis of ϕ
ref




consider the case that tsub=c̲tsub. we can prove that x= <dig> if t is in normal form . then, a carbon position list ct of a naphthalene ring consisting of two benzene nodes v <dig>  v <dig> is a list of lists determined from cv1t and cv2t according to the following rule, where ct is a list of carbon positions of nodes in at in ascending order.

definition <dig> 
carbon positions in a naphthalene ring correspond to carbon positions in two benzene nodes v <dig> v <dig>  where v <dig> is the parent node of v <dig>  if tsub=c̲tsub, as follows . 
for the benzene ring of v <dig>  positions  <dig>  are assigned to carbons of the merge bond in cv1t. position i  in cv1t corresponds to i− <dig> in ct.

for the benzene ring of v <dig>  positions  <dig>  are assigned to carbons of the merge bond in cv2t. position i  in cv2t corresponds to i+ <dig> in ct.


fig.  <dig> example of carbon position lists for a naphthalene ring. a
t
 <dig>  b molecular graph of t4′, which is t
 <dig> with cv1t4′=,,), cv2t4′=,,). c molecular graph of t4′′, which is t
 <dig> with cv1t4′′=,,), and cv2t4′′=,,)




definition <dig> 
for carbon position lists cvt <dig>  cvt <dig>  where avt1=avt <dig>  it is defined that cvt1<cvt <dig> if there exist two integers i and j such that 
cvt1=cvt <dig> for all i′<i and all j′= <dig> …,|cvt1|,

cvt1=cvt <dig> for all j′<j,

cvt1<cvt <dig> 



this definition is applied to comparison of ct <dig> and ct <dig> for a naphthalene ring with v <dig> and v <dig> in the same way.

in the example of fig.  <dig>  t <dig> and t <dig> have the same tree structure, and cv1t2=,,)<,,)=cv1t <dig> because cv1t2=1<3=cv1t <dig> 

let autb and autn be the automorphism groups of a benzene ring and a naphthalene ring, respectively . autb is generated from rotation of π/ <dig> radians and reflection. for ϕb∈autb, v <dig> is adjacent to v <dig> in a benzene ring if and only if ϕb is adjacent to ϕb in a benzene ring. autn is generated from rotation of π radians and reflection. we suppose that a list ϕ of carbon positions for a map ϕ and i= <dig> …,|cvt| is in ascending order by sorting elements of the list because all nodes in avt have the same subtree. for example, ϕb=,,) for cv1t1=,,) and the reflection map ϕb by the perpendicular bisector between carbon atoms of  <dig> and  <dig> 
fig.  <dig> illustration of automorphism of a benzene ring and a naphthalene ring. a a benzene ring. b a naphthalene ring. dashed lines indicate reflections, curves indicate rotations, where all automorphisms are not shown



normal form of a carbon position-assigned molecular tree
in order to prevent generating redundant molecular trees in enumeration, we define a normal form of a carbon position-assigned molecular tree.

definition <dig> 
let p be a path in t consisting of n nodes . p is called a symmetric path if the following conditions are satisfied. 
tsubv⌊n2⌋,v⌊n2⌋+1=mtsubvn−⌊n2⌋+ <dig> vn−⌊n2⌋,

indexvi,tsubv⌊n2⌋,v⌊n2⌋+1=indexvn−i+ <dig> tsubvn−⌊n2⌋+ <dig> vn−⌊n2⌋ for all i= <dig> ⋯,⌊n2⌋, where ⌊x⌋ is the largest integer less than or equal to x,

cvt=cv′t for all benzene nodes v∈vtsubv⌊n2⌋,v⌊n2⌋+1∖vtsub, where v′∈vtsubvn−⌊n2⌋+ <dig> vn−⌊n2⌋ satisfies indexv′,tsubvn−⌊n2⌋+ <dig> vn−⌊n2⌋=indexv,tsubv⌊n2⌋,v⌊n2⌋+ <dig>  and v∈v1∖v <dig> means that v∈v <dig> and v∉v <dig> 



proposition <dig> 
for a center-rooted molecular tree, either of vn <dig> and vn2+ <dig> is the root if the length of a symmetric path  is even. otherwise, the depth of vn+ <dig> is less than that of any node in the path.

proof.
for a path , vi+ <dig> and vn−i must be the parent nodes of vi and vn−i+ <dig>  respectively, for i= <dig> ⋯,n− <dig> if n is odd and for i= <dig> ⋯,n2− <dig> if n is even due to the center rooted property. therefore, if the length of path is odd, vn+ <dig> is the parent node of both vn+12− <dig> and vn+12+ <dig>  which means that the depth of vn+ <dig> is less than that of any node in the path.

in the case that n is even, either vn <dig> or vn2+ <dig> has the least depth among all nodes in the path and another node is the child node of that node. assume that between these two nodes the parent node is va and the child node is vb. va cannot have a parent node because the height of tsub, where vp is the parent node of va, cannot be equal to the height of tsub for any nodes vc that are adjacent to vb due the center-rooted condition, which means that tsub=mtsub cannot be hold and the first condition of symmetric path is violated. in other words, va, which is either vn <dig> or vn2+ <dig>  is the root node of the tree if n is even.

we say that v <dig> is left of vn for a symmetric path  when vn−⌊n2⌋+ <dig> is the root, or index<index.
fig.  <dig> examples of symmetric paths. the red lines denote symmetric paths. a
t
 <dig>  where  is a symmetric path, and t5sub=mt5sub. b
t
 <dig>  where  is a symmetric path, t6sub=mt6sub and c
v
4
t
6=c
v
6
t
6




we define an inequality t1>ct <dig> for carbon position-assigned molecular trees t <dig> and t <dig> if t1>mt <dig>  or t1=mt <dig>  and there exists an integer i such that vi is a benzene node, cvit1>cvi′t <dig>  and cvjt1=cvj′t <dig> for all benzene nodes vj with j>i, where index=index for all k= <dig> …,|v|.

definition <dig> 
let ϕref be the reflection map with the symmetric axis shown in fig. 7a. a carbon position-assigned molecular tree t that contains a carbon position list cvt for each benzene node v is in normal form if the following conditions are satisfied. 
t is center-rooted and left-heavy.

t≥mtsub if the center of the longest path in t with the root r is the edge .

positions in each sublist of cvt for each benzene node v are in ascending order.

cvt≤ϕbcvt for all benzene nodes v that is not connected by a merge bond with the parent node and all ϕb∈autb.

for benzene nodes v <dig> v <dig> connected by a merge bond such that v <dig> is the root of t, 
ct≤ϕnct for all ϕn∈autn if tsub=c̲tsub, where ct is related with cv1t and cv2t by definition  <dig> 

cv2t≤ϕrefcv2t if tsub≠c̲tsub and cv1t=ϕrefcv1t.



tsub≥ctsub for all pairs v <dig> vn of nodes such that the path  is a symmetric path, v <dig> and vn are not connected by a merge bond, and v <dig> is left of vn.



we call a tree in normal form a normal tree.

proposition <dig> 
for a normal tree t with a benzene node v <dig> that is connected by a merge bond with its child node v <dig> and satisfies tsub=c̲tsub, positions  <dig>  are assigned to the merge bond in the benzene ring of v <dig>  furthermore, if ct≤ϕnct for all ϕn∈autn, then cv1t≤ϕbcv1t for all ϕb∈autb.

proof.
we assume that there exists a node vl as a left sibling of v <dig>  and vl is the leftmost child of v <dig>  since t is left-heavy, t≥mt, and l=l=‘b’ is needed. however, t=ct, where vc is the leftmost child of v <dig>  because tsub=c̲tsub=ct. hence, t<mt. it contradicts the assumption, and v <dig> is the leftmost child of v <dig>  therefore, av1t <cit> =. from condition  <dig> of definition  <dig>  cv1t <cit> =, and positions  <dig>  are assigned to the merge bond, that is x= <dig> in fig. 7a.

for a map ϕb∈autb other than the identity and reflection map ϕref for a benzene ring, cv1t<ϕbcv1t because each of ϕb and ϕb is at least  <dig>  from ct≤ϕrefct and the correspondence between cv1t and ct, cv1t≤ϕrefcv1t. therefore, cv1t≤ϕbcv1t for all ϕb∈autb.

proposition <dig> 
for a benzene node v of a normal tree t, cvt <cit>  <cit>  is always equal to  <dig> 

proof.
if v is not connected by a merge bond with the parent node, from condition  <dig>  cvt must be the least possible carbon position list. hence, cvt <cit>  <cit> = <dig>  otherwise, from definition  <dig>  cvt <cit>  <cit> = <dig> 

lemma <dig> 
given a molecular graph g without cyclic structures except benzene rings and naphthalene rings, g can be represented by a normal tree.

proof.
we can assign numbers to carbons in benzene rings and naphthalene rings of g such that the conditions of definition  <dig> are satisfied.

lemma <dig> 
given two different molecular graphs g <dig> and g <dig>  they cannot be represented by the same normal tree.

proof.
we can unambiguously obtain a molecular graph from a normal tree by replacing all benzene nodes with benzene rings according to its carbon position lists.

proposition <dig> 
for a normal tree t with a path , g′ is the molecular graph obtained from the tree t′ by removing tsub and tsub except v <dig> and vn from t, where v <dig> is left of vn. if there is a non-identity map ϕ of the automorphism group of g′ satisfying ϕ=vn−i+ <dig> for all i= <dig> …,n, then tsub≥ctsub, where ϕ in g′ is naturally extended to t.

proof.
if tsubv⌊n2⌋,v⌊n2⌋+1>mtsubvn−⌊n2⌋+ <dig> vn−⌊n2⌋, then tsub>mtsub, and tsub>ctsub. we assume tsubv⌊n2⌋,v⌊n2⌋+1=mtsubvn−⌊n2⌋+ <dig> vn−⌊n2⌋. if the path  is a symmetric path, tsub≥ctsub from condition  <dig>  we assume that  is a symmetric path for some i, and index)>index) . then, 
  tsub=mtsub,tsub≥ctsub. fig.  <dig> illustration of an automorphism ϕ in the proof. the red path indicates , where ϕ=v
n−i+ <dig> for all i= <dig> …,n




let uj and wj be child nodes of vi+ <dig> and vn−i, respectively. then, vi=uj <dig> and vn−i+1=wj <dig>  where j1=index) and j2=index). if vi+ <dig> and vn−i are benzene nodes, t=ct, t=ctwj <dig>  and t=ct because cvi+1t=cvn−it and ϕ=vn−i+ <dig> 

we assume that vi+ <dig> and vn−i are not benzene nodes. for child nodes uj of vi+ <dig>  t≥ct because  is a symmetric path. also for child nodes wj of vn−i, t≥ct. from the definition of ϕ, t=ct) for all uj≠vi. if index)<index) for uj,uj+l≠vi and l> <dig>  t≥ct=ct)≥ct)=ct. it means t=ct. we assume that index)<index) for all uj≠vi, that is, ϕ=wj+ <dig> for all j=j <dig> …,j2− <dig>  then, 
  tuj=ctwj+1≤ctwj,andt≤ctuj2−1=ctwj <dig>  

if tsub>ctsub, then there is an integer j  such that t>ct, and it contradicts eq. . therefore, tsub=ctsub, and t=ct. also for the case that  is a symmetric path for some i and index)<index), then t=ct. thus, tsub≥ctsub.

lemma <dig> 
given two different normal trees t <dig> and t <dig>  t <dig> does not represent the same molecular graph as t <dig> 

proof.
we assume that t <dig> represents the same molecular graph as t <dig>  let g <dig> and g <dig> be molecular graphs transformed from t <dig> and t <dig>  respectively, where each carbon in benzene rings and naphthalene rings is connected with adjacent atoms according to carbon position lists of t <dig> and t <dig>  from the assumption, there is an isomorphism ψ from g <dig> to g <dig>  it means that l=l) for all v1∈v, ,ψ)∈e if and only if ∈e, and mul,ψ)=mul.

consider the case that the automorphism group aut of g <dig> has only elements ϕ such that ϕ≠v <dig> for v <dig> and v <dig> belonging to distinct benzene rings. let t be the molecular tree without carbon position lists, obtained from g by contracting benzene rings and naphthalene rings to benzene nodes, and satisfying conditions  <dig>   <dig> of definition  <dig>  we suppose that maps ψ and ϕ in g <dig> are naturally extended to t. since t <dig> is different from t <dig>  there is a benzene node v1∈v such that 
  cv1t1≠cψt <dig>  

if v <dig> is not connected by a merge bond with the parent node, there is a non-identity map ϕb∈autb such that cv1t1=ϕbcψt <dig> because t <dig> and t <dig> represent the same molecular graph. it contradicts condition  <dig> of definition  <dig>  suppose that v <dig> is connected by a merge bond with the parent node vp and cvpt1=cψt <dig>  if tsubvp,v1=c̲tsubv <dig> vp, then vp is the root, and there is a non-identity map ϕn∈autn such that ct1=ϕnc,ψ)t <dig> because t <dig> and t <dig> represent the same molecular graph. it contradicts condition 5a. otherwise, tsubvp,v1≠c̲tsubv <dig> vp. if vp is not the root, then t <dig> does not represent the same molecular graph as t <dig> because tsub, where va is the parent of vp, is different from other subtrees connected to the naphthalene ring. it contradicts the assumption. if vp is the root, cvpt1=ϕrefcvpt <dig> and cv1t1=ϕrefcψt <dig> because t <dig> and t <dig> represent the same molecular graph. it contradicts condition 5b.

consider the case that there is an element ϕ∈aut such that ϕ=v <dig> for v <dig> and v <dig> belonging to distinct benzene rings. since t <dig> is different from t <dig>  there is a benzene node v1∈v such that 
  cv1t1≠cψt <dig>  

here, we suppose that conditions  <dig>   <dig>   <dig> are satisfied for all benzene nodes in t <dig> and t <dig>  then, there is a path from v <dig> to ϕ=vn, , in t <dig>  since t <dig> and t <dig> represent the same molecular graph, 
  t1sub=ct2sub,ψ)andt1sub=ct2sub,ψ). 

here, we can assume that v <dig> is left of vn and ψ is left of ψ without loss of generality. then, from proposition  <dig>  for paths of  and ,…,ψ), 
  t1sub≥ct1subandt2sub,ψ)≥ct2sub,ψ) 

because t <dig> and t <dig> are normal trees. there is no carbon position lists that satisfy eqs. ,  and .

therefore, t <dig> does not represent the same molecular graph as t <dig> 

methods
we propose an algorithm bfsbennaphenum for enumerating chemical compounds containing benzene rings and naphthalene rings as cyclic structures. bfsbennaphenum utilizes our previously developed algorithms bfssimenum, bfsmulenum  <cit> , and assigns carbon position lists.

modification of bfssimenum and bfsmulenum
suppose that the numbers nli of atoms with label li for all li∈Σ, the numbers nb, nn of benzene rings and naphthalene rings are given. bfsbennaphenum introduces a special label ‘b’ representing a benzene node to Σ with b>li∈Σ and val= <dig>  and executes bfssimenum to generate all non-redundant molecular trees t such that num=nli for li∈Σ except li=b,c and num=nb+2nn, num=nc−6nb−10nn. at this time, all edges of enumerated trees are single because bfssimenum generates only simple trees. then, we modify bfsmulenum to assign nn merge bonds to edges between benzene nodes in each tree enumerated by bfssimenum in addition to adding 1+∑li∈Σ,li≠bnum−2)/ <dig> bonds to edges between usual nodes. it should be noted that multiple bonds cannot be assigned to edges connected to benzene nodes since a carbon atom in benzene rings and naphthalene rings is connected with another adjacent atom by a single bond.

assignment of carbon positions for molecular trees
in this algorithm, we traverse along the tree t from the rightmost deepest benzene node to the root in reverse bfs order because an adjacent node list depends on carbon position lists of descendant nodes. for each benzene node v we found, we assign a carbon position list not to violate the conditions of normal form.

the pseudocode of assignment part in bfsbennaphenum is given in algorithms  <dig> and  <dig>  we always assign carbon position  <dig> to the first node in avt  due to proposition  <dig>  which is the parent node of v if v is not the root . if v is the root and |avt <cit> |≥ <dig>  we assign carbon position lists in table  <dig>  to v immediately for the sake of efficiency. carbon position lists in table  <dig> satisfy condition  <dig> of the normal form, and all the cases are included in the table.
fig.  <dig> illustration of benzene rings having each carbon position list in table  <dig>  a ). b ). c ). d ,). e ,). f ,). g ). h ). i ). j ). k ). solid and dashed lines correspond to avt <cit>  and avt <cit> , respectively



|avt <cit> |
|avt <cit> |
cvt






for other carbon positions from  <dig> to  <dig>  we use assign_child to assign such positions to the remaining adjacent nodes. for example, let t <dig> in fig.  <dig> be output without any carbon position list by bfsmulenum. t <dig> has a benzene node v <dig>  and av1t1=,,). first, carbon position  <dig> is assigned to av1t <dig> <cit>  <cit> =v <dig>  that is, cv1t <dig> <cit>  <cit> = <dig>  since v <dig> is the root and |av1t <dig> <cit> |=1< <dig>  table  <dig> is not used, and the other nodes v <dig> v <dig> v <dig> are assigned by assign_child. for v <dig>  each carbon position from  <dig> to  <dig> is examined . for v <dig>  each position from  <dig> to  <dig> except the position assigned to v <dig> is examined . for v <dig>  each position from  <dig> to  <dig> that is more than the position assigned to v <dig> except the position assigned to v <dig> is examined  because v <dig> and v <dig> have the same subtree and condition  <dig> must be satisfied. thus, cv1t1=,,),,,),,,),…,,,),,,),,,),…,,,) are examined, where ,,),,,),,,) and so on are discarded in the next step.

for each benzene node v, after assignment of a carbon position list to avt, whether or not cvt violates conditions  <dig>   <dig> of the normal form is confirmed . after carbon position lists are assigned to all benzene nodes, condition  <dig> is confirmed .

since an input of this part, that is, an output of bfsmulenum, satisfies conditions  <dig>   <dig> of the normal form, bfsbennaphenum always outputs normal trees. in assign_child, a distinct carbon position list is always assigned, and all patterns are assigned . hence, bfsbennaphenum outputs all distinct normal trees.

theorem <dig> 
bfsbennaphenum outputs all non-redundant molecular graphs that are solutions of problem  <dig> 
fig.  <dig> example of a molecular tree t
7




RESULTS
in this section, we show that our proposed method can enumerate chemical compounds with benzene rings and naphthalene rings correctly and efficiently. for the evaluation, although molgen  <dig>  is more suitable than molgen  <dig>  to enumerate tree-like compounds because molgen  <dig>  offered the possibility to define substructures like benzene or naphthalene as macro atoms but molgen  <dig>  cannot handle all the cases provided in table  <dig>  we compared proposed tool with molgen  <dig> . thereby, we implemented it and installed another well-known general purpose structure generator, molgen  <dig> , on a computer with  <dig>  ghz intel xeon cpu and  <dig>  gib memory, and compared their computational time. the implementation of bfsbennaphenum is available on our supplementary web site, http://sunflower.kuicr.kyoto-u.ac.jp/jira/bfsenum/.

c
7
o
2
h
8

c
8
o
3
h
10

c
9
o
4
h
10

c
10
n
2
o
4
h
10

c
11
n
2
h
10

c
12
n
1
o
1
h
11

c
13
o
2
h
12

c
14
o
4
h
12


since molgen can enumerate chemical compounds without restriction on the structure, we must specify a benzene ring and a naphthalene ring as a substructure so that the enumerated structures contain only benzene rings and naphthalene rings as cyclic structures. as can be seen from table  <dig>  where ‘n’ and ‘b’ denote a naphthalene ring and a benzene ring, respectively, bfsbennaphenum enumerated chemical compounds much faster than molgen while giving the same number of enumerated structures. bfsbennaphenum was from  <dig> times to  <dig> , <dig> times faster than molgen for instances with  <dig> to  <dig> carbon atoms. table  <dig> also compares the number of discovered compounds in pubchem, which are not limited to tree-like chemical compounds, with the number of compounds enumerated by the proposed algorithm for several chemical formulas. when the number of carbon atoms is large , the number of discovered compounds is much less than the number of enumerated compounds. this implies that there are still a numerous number of unknown compounds to be discovered, which possibly include some essential compounds. in this study, we examined chemical formulas including up to two benzene rings and one naphthalene ring because molgen was not able to output results in practical time for chemical formulas including more benzene rings and naphthalene rings.

we plotted the relation between the number of enumerated structures and the computational time for both methods in fig.  <dig>  where both x-axis and y-axis are in a log scale. it is seen from the figure that the execution time of bfsbennaphenum is much smaller than that of molgen.
fig.  <dig> relation between the number of enumerated structures and the computational time 



discussion
our algorithm is limited to tree-like chemical structures without any cyclic structures except benzene rings and naphthalene rings while molgen does not have such limitation. therefore, in the future, we would like to extend the algorithm such that it can enumerate more complex cyclic structures, such as polycyclic aromatic compounds and nucleotides. besides, in order to make enumeration tools practical, we need to rank enumerated structures because a large number of structures are usually enumerated. for that purpose, it might be useful to employ drug likeness filters such as lipinski ro <dig>  and qed score. incorporation of such filters into our system is also important future work.

CONCLUSIONS
we proposed a way to represent a benzene ring in a molecular tree by regarding it as a new defined atom with valence six and introducing a new attribute named carbon position list to benzene nodes. carbon position of an atom specifies which carbon in a benzene ring that the corresponding atom bonds with. we also proposed a new kind of bond called merge bond that merges two benzene rings together to form a naphthalene ring. with merge bond a molecular tree can represent a structure containing naphthalene rings without defining new kind of atom. moreover, since a benzene ring and a naphthalene ring are symmetric structures, we defined a rule to assign carbon position lists such that no redundant structures due to the symmetry of a benzene ring and a naphthalene ring are enumerated.

the algorithm of this work consists of two main steps. given the number of benzene rings, the number of naphthalene rings as well as a chemical formula, bfssimenum and bfsmulenum are applied such that they can enumerate molecular trees with benzene nodes. next, the new extension bfsbennaphenum assigns carbon position lists to benzene nodes in normal molecular trees.

to show the performance of our algorithm, all non-redundant chemical structures were enumerated for several chemical formulas by bfsbennaphenum and molgen  <dig> , a well-known general purpose structure generator. it is shown that our algorithm is reliable since it generated the same number of structures as molgen, while expended much less computational time. bfsbennaphenum was from  <dig> times to  <dig> , <dig> times faster than molgen for instances with  <dig> to  <dig> carbon atoms in our experiments. this is mainly because the number of nodes decreases from six to one for each benzene ring and from ten to two for each naphthalene ring in a chemical structure and because we enumerate chemical structures in the form of trees instead of graphs.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

jj and mh developed, implemented the methods, and drafted the manuscript. yz and ta participated in the discussions during the development of the methods and helped draft the manuscript. all authors read and approved the final manuscript.

