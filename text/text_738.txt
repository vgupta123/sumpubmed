BACKGROUND
histone modifications and dna binding proteins regulate gene transcription and correctly identifying where they are enriched is crucial to understanding development and cell function  <cit> . unbiased genomic surveys of histone modifications and dna binding proteins can be made using chromatin immunoprecipitation combined with high-throughput sequencing . once sequenced, the reads must be analyzed to identify where they are enriched.

chip-seq analysis algorithms have specialized in identifying one of two types of enrichment: broad domains  or narrow peaks . however, the threshold that distinguishes one category from the other is arbitrary and can be spanned by biologically relevant histone modifications. for example, trimethylated h3k <dig> , which is correlated with transcriptional repression, can cover entire gene bodies, forming broad domains of enrichment  <cit> , as well as enhancers and transcriptional start sites, forming narrow peaks spanning a small number of nucleosomes  <cit> . thus, a full analysis of h3k27me <dig> can require two separate methods and merging the results in an ad hoc manner  <cit> . a program that accurately identifies both broad domains and narrow peaks simultaneously would greatly simplify these analyses.

hidden markov models  are suitable for identifying changes in discrete states, and thus can determine if a region is “enriched” or “depleted”  <cit> . importantly, hmms generate posterior probabilities, providing a measure of confidence that goes beyond the simple binary output of “enriched” or “depleted”. because it is not always clear where an enriched domain starts and where it ends, posterior probabilities indicate in which parts of the enriched domain users should have high confidence and in which parts they should have only moderate confidence.

we developed hiddendomains, a program that uses an hmm, to identify both enriched peaks and domains simultaneously. it is unique in that it does not need to be tuned to one type of enrichment prior to analysis and does not make assumptions about how reads should be distributed around transcription factor binding sites. we have also added steps to prevent a problem identified in other hmm based enrichment detection programs; inversions in the output, where enriched regions are called depleted. the hmm state optimizations and estimations for transition and gaussian emission probabilities are performed by the depmixs <dig>  <cit>  and the hiddenmarkov packages for r. hiddendomains creates bed files that are ready to be displayed in the ucsc genome browser and are colored according to the posterior probabilities, allowing users to select the confidence level they wish to view. we compare hiddendomains to the leading programs designed for broad domains and narrow peaks and show that it performs as well as, if not better, than the best program in each class.

RESULTS
comparing sensitivity and specificity of domain calling
to compare hiddendomains to existing domain detecting methods, we used an h3k27me <dig> chip-seq dataset  derived from mouse myoblasts that has  <dig> chip-qpcr verified enriched sites and  <dig> chip-qpcr verified depleted sites  <cit> . the chip-seq dataset has  <dig> , <dig> h3k27me <dig> reads and  <dig> , <dig> reads of sonicated input. the chip-qpcr sites allow us to determine sensitivity, the percentage of true positives identified, and specificity, the percentage of true negatives rejected, for each method.

we compared hiddendomains to the following programs for detecting broad domains of chip-seq enrichment: homer   <cit> , macs   <cit> , peakranger   <cit> , which includes bcp  <cit>  and ccat  <cit> , rseg   <cit>  and sicer   <cit> . homer and macsv <dig> have options that allow them to specifically search for broad domains of enriched chip-seq reads.

we started by running the domain finding programs on the full dataset and uploaded the output the ucsc genome browser . visual inspection suggested two different domain calling styles; programs either broke enriched domains into smaller fragments and peaks or left larger domains intact. we then quantified the number of domains and their average widths called by all of the programs . the programs identified anywhere from  <dig> to  <dig>  broad domains. in general, the more domains identified, the shorter the average domain. rseg found the fewest and longest domains, averaging  <dig> kb per domain. peakranger-ccat found the most domains, averaging  <dig>  kb per domain. overall, homer, macsv <dig> and peakranger-ccat appeared to break enriched domains into smaller fragments and peaks and hiddendomains, peakranger-bcp, rseg and sicer left larger domains intact.fig.  <dig> broad domains in h3k27me <dig> chip-seq data. a a ucsc genome browser screenshot of the chip-seq and domains called by the various methods. b the number of domains called for each method used and the average domain width. c the sensitivity and specificity for the original chip-seq dataset and down-sampled versions of it. the colors used in the graphs represent the same programs listed in the legend for 



we then compared sensitivity and specificity at different read depths, including the full dataset, by down-sampling the h3k27me <dig> and input reads to  <dig> , <dig>   <dig> , <dig> and  <dig> , <dig> reads . the down-sampled datasets were intended to simulate sub-optimal sequencing results. rseg, which found the fewest, but longest domains, and peakranger-ccat, which found the most, but shortest domains, had the highest sensitivity at all read depths, identifying ~75 % of the chip-qpcr verified enriched sites, but also the lowest specificity, failing to reject ~42 % of the chip-qpcr verified depleted sites. hiddendomains, peakranger-bcp and macsv <dig> had the next best sensitivities, identifying ~62 % of the verified enriched sites, and only failed to reject 10 % of the verified depleted sites. sicer and homer had the lowest sensitivities, but the highest specificity scores. among the methods that control the number of false positives in their results with specificities close to  <dig> , hiddendomains’s sensitivity is comparable to the best programs in this class.

comparing domain widths in an h3k36me <dig> chip-seq dataset
because there is no gold standard to determine whether a program’s broad domains accurately cover an enriched region, we used the widths of gene bodies in an h3k36me <dig> chip-seq dataset , generated from k <dig> cells, as an approximation for optimal domain widths. figure 2a and b shows that all of the programs except for rseg identified domains that overlapped gene bodies almost 100 % of the time. rseg, which also uses hmms to determine enriched and depleted states, called significantly more domains outside of gene bodies and they often appeared over h3k36me <dig> depleted regions , as if the results had been inverted. to verify that the inverted results were not due to user error, we ran rseg  <dig> times in a loop, using the same command each time, and observed inverted results in  <dig> of the runs. because rseg generated two classes of results, we describe both of them in the remaining analyses, using rseg-inverted to refer to the inverted results. inverting the results is possible with an hmm because defining which state represents enrichment can be arbitrary. in contrast, hiddendomains takes inversion into consideration and adjusts accordingly .fig.  <dig> evaluating domain widths with h3k36me <dig> chip-seq data. a a ucsc genome browser screenshot of the chip-seq and domains called by the various methods. b the percentage of domains from each method that overlapped gene bodies, the average domain width  and the percent of highly expressed genes larger than  <dig> kb that were overlapped by domains called by the various programs



h3k36me <dig> is associated with the chromatin of actively transcribed genes  <cit> . to identify actively transcribed genes, we paired the chip-seq with an rna-seq dataset  that had also been performed in k <dig> cells. after aligning the rna-seq to the human genome  with tophat <dig>  <cit> , we used deseq-count  <cit>  to determine the number of reads that mapped to each gene. we then ranked the genes by rpkm and filtered out all genes with rpkm < <dig> and the average width of the remaining transcribed genes was 24 kb. we then compared the average transcribed gene width to the average domain size called by the various programs . both rseg and rseg-inverted had the widest domains overall and homer’s were the shortest. sicer’s domains were closest in size to the average transcribed genes. hiddendomains’s was a close second, and peakranger-bcp was third. lastly, we focused on the domains that covered the top  <dig> highly expressed genes that were longer than  <dig> kb . when it did not invert its results, rseg performed best, overlapped 95 % of the gene bodies. sicer, peakranger-bcp, peakranger-ccat and hiddendomains all performed similarly well, calling domains that covered over 80 % of the gene bodies.

comparing sensitivity and motif overlap of narrow peak calling
to compare hiddendomains to existing peak calling programs we used a chip-seq dataset for ga-binding protein   in the jurkat human t lymphoblast cell line  <cit>  that had  <dig> chip-qpcr verified enriched sites  <cit>  defined as having >3-fold enrichment over controls  <cit> . the chip-seq dataset had  <dig> , <dig> gabp reads and  <dig> , <dig> reads of input. without chip-qpcr verified depleted sites we can only calculate sensitivity. in lieu of the ability to calculate specificity, we determined the accuracy of each method as the percentage significant peaks that overlapped  <dig>  predicted gabp binding sites identified by fimo  <cit>  with the transfac gabp motif  <cit> .

we compared hiddendomains to the following programs for detecting narrow peaks of chip-seq enrichment: homer, macsv <dig>  gps/gem   <cit> . homer and macsv <dig> have options that allow them to specifically search for short peaks of enriched chip-seq reads. sicer, peakranger-bcp and peakranger-ccat were excluded from peak detection because their documentation specifically states that they are tuned for domain calling.  comparison to additional programs applied to the same transcription factor dataset can be found in  <cit> .

we started by running the programs on the full dataset and uploading the results to the ucsc genome browser  and verified that the output from each program overlapped visible peaks. gps/gem identified the most peaks,  <dig> , and they were 200 bp wide on average . hiddendomains found the smallest number of peaks,  <dig>  and these were  <dig>  kb wide on average, which was to be expected since its default bin size is 1 kb. however, we also tested 212 bp wide bins  and with this setting, hiddendomains identified  <dig>  peaks averaging 411 bp wide .fig.  <dig> narrow peaks in two gabp chip-seq datasets. a a ucsc genome browser screenshot of the jurkat chip-seq and peaks called by the various methods. b the number of peaks called for each method and the average peak width. c the number of peaks called, sensitivity and the percentage of peaks that overlapped predicted binding sites for the original chip-seq dataset and down-sampled versions of it. the colors used in the graphs represent the same programs listed in the legend for . d a ucsc genome browser screenshot of the encode chip-seq and peaks called by the various methods. e the number of qpcr validated sites and predicted binding sites overlapped by the peaks and the percentage of peaks that overlapped predicted binding sites called by the various methods



we then compared the total peaks called, sensitivity, and the percentage of peaks that overlapped predicted gabp binding sites, at different sequencing depths, including the full dataset, by sequentially halving the gabp and input reads to  <dig> , <dig>   <dig> , <dig> and  <dig>  reads . again, the down-sampled datasets were intended to simulate sub-optimal sequencing results. at every sample size, gps/gem called the most peaks. in contrast, hiddendomains called the fewest peaks at every sample size larger than the smallest. however, the sensitivity for gps/gem and hiddendomains were almost identical at all sample sizes, indicating that the  <dig> -fold increase in the number of peaks called by gps/gem did not provide it with an advantage for identifying chip-qpcr verified sites. with the full dataset, gps/gem identified  <dig>  of the chip-qpcr verified loci and hiddendomains identified  <dig> . furthermore, at all sample sizes, hiddendomains had the highest percentage of peaks that overlapped predicted gabp binding sites. with the full dataset, 54 % of the peaks that hiddendomains identified overlapped predicted binding sites, whereas only 21 % of gps/gem’s peaks overlapped predicted binding sites. when hiddendomains used 212 bp wide bins, it maintained the 2nd highest sensitivity  and the highest percentage overlap of predicted gabp binding sites  . thus, bin size alone cannot account for hiddendomains’s ability to call peaks over predicted gabp binding sites.

although gps/gem’s sensitivity is 1 % better than hiddendomains’s, it called over  <dig>  times as many peaks and only 21 %  of these overlapped predicted gabp binding sites. in contrast, 54 %  of hiddendomains’s peaks overlapped predicted gabp binding sites, suggesting that a greater percentage of its results are true-positives. by these metrics, we conclude that hiddendomains’s output was comparable to, if not better than, that from the best peak calling programs.

because the control dataset for the jurkat gabp chip-seq is relatively noisy compared to newer datasets, we used the peak finding programs on an encode gabp chip-seq dataset with much cleaner control data  to validate the original results. we used hgliftover  to convert the genomic coordinates for the qpcr validated sites from hg <dig> to hg <dig>  and we used fimo and the transfac gabp motif to predict binding sites in hg <dig>  the new dataset generated results that were very similar to the original, if not more favorable for hiddendomains . hiddendomains called the fewest significant peaks, but these overlapped almost as many of the qpcr validated binding sites as macsv <dig>  which overlapped the most. the peaks called by hiddendomains overlapped more predicted binding sites than any other method and its percentage of peaks overlapping predicted binding sites was also highest.

although hiddendomains accurately detects peaks, its dependency on binning reads prevents it from being very precise. to rectify this, we include a helper program, peakcenters, which takes the output from hiddendomains and identifies the genomic coordinates for the peak centers. by default, peakcenters extends the peak by 100 bp in the up and downstream directions, but this can be changed on the command line. we used peakcenters and its default settings on the encode gabpa data and saw that narrower peaks still performed very well, overlapping as many qpcr validated sites as macsv <dig> and more of the predicted binding sites than macsv <dig> and homer .

lastly, ccat, when used separately from the peakranger suite of programs, can be configured to identify narrow peaks. using this configuration, we applied it to the encode gabpa dataset. ccat identified  <dig>  enriched regions,  <dig> times more peaks than the next largest number found by gsp/gem . hiddendomains, homer and macsv <dig> all identified close to  <dig>  enriched regions,  <dig> times fewer peaks than ccat’s. ccat’s peaks averaged  <dig> kb wide and covered 968 mb, over one third of the entire non-n hg <dig> genome. in comparison, the average number of bases called enriched in the h3k37me <dig> analysis was only 372 mb. these results suggest that ccat must have very low specificity and are reminiscent of ccat’s analysis of the h3k27me <dig> data. with the h3k27me <dig> data, ccat identified the most domains and had a high sensitivity score, but at the expense of having domains that overlapped many of the validated “depleted” regions and thus, an unacceptably low specificity score . because of its poor performance with the encode gabp dataset, we excluded ccat from additional narrow peak analyses.

analysis of narrow peak calling in additional transcription factor chip-seq datatsets
to further characterize the abilities of the narrow peak calling programs, we applied them to two additional chip-seq datasets for the transcription factors estrogen receptor  <dig>   and forkhead box a <dig>   . just like for gabp, we determined the accuracy of each method as the percentage significant peaks that overlapped the  <dig>  predicted esr <dig> and the  <dig>  predicted foxa <dig> binding sites identified by fimo with their respective transfac motifs.fig.  <dig> narrow peaks in esr <dig> and foxa <dig> chip-seq data. a a ucsc genome browser screenshot of the esr <dig> chip-seq and peaks called by the various methods. b the number of peaks called, the number of predicted binding sites overlapped by peaks, and the percentage of peaks that overlapped predicted binding sites for the various methods. c a ucsc genome browser screenshot of the foxa <dig> chip-seq and peaks called by the various methods. d the number of peaks called, the number of predicted binding sites overlapped by peaks, and the percentage of peaks that overlapped predicted binding sites for the various methods



the results for esr <dig> and foxa <dig> were similar to the results for gaba <dig>  we found that while hiddendomains found the fewest domains, these overlapped nearly as many predicted binding sites as the other methods . furthermore, a much greater percentage of the peaks called by hiddendomains overlapped predicted binding sites for both transcription factors than the other methods . lastly, we applied peakcenters to hiddendomains’s output for both the esr <dig> and foxa <dig> datasets and the 200 bp wide peaks had results similar to the gabpa outcomes; there were fewer predicted sites called significant, but the percentage overlap remained the highest of the peak finding programs. these results show that the enriched regions identified by hiddendomains do not overlap predicted binding sites simply because its peaks are wider than the other methods’.

discussion
hiddendomains performs exceptionally well using a two state hmm that makes no assumptions about how the reads are distributed around transcription factor binding sites. although rseg also uses a two state hmm, there are important differences between these two programs. first, rseg uses the difference between two independent negative binomial distributions to model the chip and control reads and the hmm parameters are estimated for the entire genome, rather than per chromosome. in contrast, hiddendomains uses a normal distribution to model the difference in normalized read counts in bins with one or more read in either the chip or control datasets and the hmm parameters are estimated separately for each chromosome. second, rseg explicitly incorporates mapability into its model, and hiddendomains implicitly ignores unmappable regions by using samtools to filter out reads that map to them and then ignoring bins with zero reads. lastly, rseg can invert its output; calling enriched regions depleted and depleted regions enriched. in contrast, hiddendomains evaluates the states after parameter estimation to determine which one represents enrichment. although these differences in the algorithms are subtle, the differences in the output are dramatic. rseg’s inverted output in the h3k36me <dig> dataset would lead to erroneous interpretations, and at every sample size in the h3k27me <dig> dataset hiddendomains had much higher specificity and its domains were much smaller.

in the transcription factor chip-seq datasets, we noticed there are several loci that hiddendomains did not call enriched, even though other programs, like macsv <dig> did . many of the sites that hiddendomains excluded from its results had very low chip-seq reads that, numerically, were no different from the control dataset. one possibility for why other programs call these sites enriched is their model assumptions . in contrast, hiddendomains does not make assumptions about how reads should be distributed around transcription factor binding sites. although it might seem like hiddendomains’s simple model would result in excessive false positives, we note that across multiple datasets, the relatively small number of peaks that hiddendomains calls overlap a large number of qpcr validated and predicted binding sites, even when the bin size is set to 212 bp or when peakcenters limits them to 200 bp.

because hiddendomains called relatively few loci significantly enriched, unique loci that were called enriched were rare. however, we did see them from time to time. in one case, this occurred over a very narrow region  that contained a mound of reads . this site was called significant because hiddendomains did not make assumptions about how far apart reads should be to indicate enrichment.

hiddendomains is especially useful for data like h3k27me <dig> chip-seq that contain both narrow peaks and broad domains because it does not need to be tuned to either type of enrichment. all other programs that analyze both types of enrichment require setting a parameter that tunes it to one type or the other. however, if knowing the precise location of transcription factor binding site is important, we have three recommendations: 1) using the peakcenters program that is included with hiddendomains, 2) using macsv <dig> 3) combining the output from hiddendomains with a specialized binding site program like gem. furthermore, the default bin size for hiddendomains  means that, without changing this parameter, a single peak may span two or more enriched loci . this is acceptable if the user simply wants to know if a transcription factor binds within a region. however, if the user wants higher resolution by default and they know their data only contains narrow peaks, we recommend using macsv <dig> 

CONCLUSIONS
using chip-seq datatsets for h3k27me <dig>  gabp, esr <dig> and foxa <dig>  we have shown that hiddendomains’s sensitivities and specificities are among the best, if not better than, methods that are dedicated to identifying broad domains or narrow peaks. we have also shown that a larger percentage of hiddendomains’s gabp, esr <dig> and foxa <dig> results overlap predicted binding sites than any other method using the default bin size  and much smaller,  <dig> and 200 bp, bin sizes. because hiddendomains implements a simple model, and yet fits the data as well, if not better than, more complicated models in a wide variety of situations, we believe it represents a significant improvement over the current state-of-the-art in chip-seq analysis.

implementation
hiddendomains is a program that consists of three main stages. while more details are given below, briefly, the first stage bins the reads, the second stage creates the hmm and identifies enriched peaks and domains and the third stage converts the results into bed files.

the first step uses samtools  <cit>  to filter out reads with low mapq scores from a chip-seq experiment and counts how many of the remaining reads map to uniformly sized bins spanning the genome of interest. the default minimum mapq score,  <dig>  filters out reads that map to multiple locations, have many mismatches, or poorly called base pairs. the default bin size is set to 1 kb, which works well for both broad domains and identifying the presence or absence of transcription factor binding. for more precise peak coordinates for transcription factors, users can set the bin size to 200 bp or smaller, or visually inspect the data in the ucsc genome browser for a peak width.

binned reads, one for a control dataset, if available, and one for a chip dataset, are then used as input to the hmm in the second stage. if a control dataset is included, both the chip and control datasets are normalized by a factor based on their total read counts. if the smaller of the two datasets has fewer than  <dig> , <dig>   <dig> , <dig> or  <dig> , <dig>  reads, then the read depths are divided by  <dig> , <dig>   <dig> , <dig> or  <dig> , <dig>  respectively. after normalization the new control read counts are subtracted from the new chip read counts. this is similar to the method described by wang, lunyack and jordan  <cit> , but not implemented in their program, broadpeak, which does not accept control datasets. following the normalization step, bins with no reads mapping to them are excluded and hiddendomains truncates the maximum and minimum read counts per bin to minimize the effects that repetitive regions have on estimating variances. if a control dataset is used, the normalized read counts form a normal distribution centered on  <dig> with a standard deviation that is approximately  <dig> . thus, the default maximum and minimum number of normalized reads in a bin after subtracting the normalized control read counts is  <dig> and − <dig>  respectively. these values account for the skewing in the data caused by true chip-seq enrichments and allow for two times the standard deviation reductions in the depleted areas. furthermore, these values perform well in practice. however, they can be changed at the users discretion. for example, if hiddendomains only detects repetitive regions, the maximum number of normalized reads can be reduced to  <dig>  hiddendomains then builds and estimates parameters for a two-state hmm, one state modeling enriched regions and one state modeling depleted regions. parameter estimation is done for each chromosome, using either the depmixs <dig>  <cit>  or hiddenmarkov packages for r. in practice, we observed that depmixs <dig> works well with data containing a mixture of broad domains and narrow peaks, and hiddenmarkov works well with data consisting entirely of narrow peaks. hiddendomains tries depmix <dig> first, and if it fails to converge on parameter estimates, hiddenmarkov is used. on data where both methods succeed, the results are identical . with both packages, hiddendomains uses normal distributions to model emission probabilities. the choice of distribution was based on histograms of the normalized binned read counts . the initial parameters for the “enriched” state are the standard deviation and three times the mean of the normalized bin read counts. the initial parameters for the “depleted” state are the standard deviation and mean of the normalized bin read counts. formally, the joint likelihood for the series of observations , o1:b, and latent states, s1:b, given transition and emission parameters, Θ, is: po1:b,s1:b|Θ=ps1=ipo1|s1=i∏b=1b−1psb+1=j|sb=ipob+1|sb+1=j. 

where sb can be either an enriched or depleted state, p is the prior probability of the first bin on a chromosome being in one of those two states, p is the probability of emitting the observed read count, o <dig>  from the initial state, p is the probability of transitioning from the state assigned to bin b to the state assigned to bin b +  <dig>  and lastly, p is the probability of emitting the observed read count at bin b +  <dig> given the state at bin b +  <dig>  furthermore, p and p are normally distributed, with one set of parameters assigned to the enriched state and another set of parameters assigned to the depleted state. in order to obtain maximum likelihood estimates of the model parameters, Θ, we first need the marginal likelihood of the observations and this is calculated using the forward algorithm as modified by  <cit> . this reformulation calculates the gradients of the likelihood at the same time and prevents underflow with both the standard log transformation and using a scaling factor. thus, the recursive method for calculating p is: f1o1|Θ=po <dig> s1=jfbob,sb=j|o1:b−1=pob|sb=j∑i=1nfb−1ipsb=j|sb−1=i/∑i=1nfb−1i and the log-likelihood is found by taking the log of both sides. lastly, Θ is estimated with the em algorithm and smoothing parameters are estimated with the forward-backward algorithm.

on rare occasions neither depmixs <dig> nor hiddenmarkov can converge on parameter estimates for the hmm for a single chromosome when using a control dataset . when this occurs, hiddendomains uses the average parameters estimated from the other chromosomes for the hmm. hiddendomains opts for using parameter estimates per chromosome, rather than always using the average, because using the average results in a slight reduction in sensitivity and specificity . that said, even when the average is used for all chromosomes, hiddendomains continues to rank among the best programs for both broad domain and narrow peak calling.

once the hmm parameters are estimated, the optimal state, either enriched or depleted, and its posterior probability is assigned to each bin. because an hmm can arbitrarily assign state  <dig> or  <dig> to be the enriched state, hiddendomains identifies the enriched state as the one capturing the highest variance. this information is used as input to the third hiddendomains’s stage, which converts it to a bed file and ensures that the domains’ start and stop coordinates conform to chromosome sizes. when displayed in the ucsc genome browser, each bin is color-coded by its posterior probability. bins with posterior probabilities greater than  <dig>  are black and bins with lower posterior probabilities  are sequentially lighter shades of grey.

the peakcenters program uses the bedtools coverage tool  <cit>  to count the number of reads that overlap each position in an enriched region. it identifies the peak as the position with the most overlapping reads.

software compared to hiddendomains
we compared hiddendomains to the following programs for detecting broad domains of chip-seq enrichment: homer   <cit> , macs   <cit> , peakranger   <cit> , which includes bcp  <cit>  and ccat  <cit> , rseg   <cit>  and sicer   <cit> .

we compared hiddendomains to the following programs for detecting narrow peaks of chip-seq enrichment: homer, macsv <dig>  gps/gem   <cit> .

unless otherwise noted, all examples given in this paper used default settings for all programs. one consistent exception to this was for macsv <dig> and homer, which required specific parameters to identify peaks or domains. for these programs, the appropriate parameters were always set. default parameters were used because they were, in general, found to be the most stable  <cit>  and these are what most researchers are going to use. see additional file  <dig> for example command lines used for each program with each dataset.

availability and requirements
project name: hiddendomainsproject home page: http://hiddendomains.sourceforge.net/operating systems: unix, macos, windowsprogramming languages: perl and rother requirements: samtools and, optionally, bedtoolslicence: gplv <dig> all perl and r scripts are available at sourceforge: https://sourceforge.net/projects/hiddendomains/.

documentation and a tutorial can be found at: http://hiddendomains.sourceforge.net/.

additional file
additional file 1: this document includes figures s <dig>  s <dig> and s <dig> and example command lines used with each program. 



abbreviations
hmmhidden markov model

competing interests

the authors declare that they have no competing interests.

authors’ contributions

js designed and implemented the algorithm and performed analyses. js and tm designed experiments and wrote the manuscript. both authors read and approved the final manuscript.

