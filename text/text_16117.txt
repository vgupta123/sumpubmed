BACKGROUND
real-time quantitative pcr  is a powerful method for accurate measurement of nucleic acid concentrations. qpcr instruments collect a large set of data during each run, which provides the basis for quantification and pcr product validation. further, the user has assembled data on biomaterials, targets and qpcr assays that are essential in determining data quality, downstream statistical analysis and independent replication; target and sample names can be entered into the qpcr instrument software to be used in built-in data analysis routines. an instrument-independent format to store and exchange this collection of data was published in  <dig> as the first version of real-time pcr data markup language   <cit> . since then, several journals have endorsed and advocated the use of rdml . of practical relevance, bio-rad , life technologies , qiagen  and roche  implemented rdml export capabilities into their instrument's software. furthermore, third party software with rdml data file import and/or export functionality, such as linregpcr , qbase +  and an rdml r package, were developed to enable  data-analysis workflow, such as raw data quality control, amplification curve analysis, normalization and statistical analysis independent of the qpcr machine software . as a design choice, many elements in the rdml data tree are optional and documentation fields are present in several places. this choice allows the flexible use of rdml even in non-qpcr applications. primer3plus is an example of this intended use, where primer and amplicon sequences can be exported as rdml files containing only the “target” elements of the rdml format  <cit> . on the down side, this flexibility resulted in cases where the level of rdml support did not fully meet the expectations and the original intentions of the rdml consortium. some qpcr instrument software export only a small set of the collected data and ignore available rdml elements, or the data are stored in different elements or in different formats than intended. however, due to the flexibility of rdml, the software would still export valid files in these cases. the rdml consortium aims to overcome these issues by clarification of the rdml elements that led to misinterpretation and by supporting the software developers with tools to create, analyze and validate rdml files.

one of the intentions for creating rdml was to facilitate the exchange of raw fluorescence data free of smoothing or baseline subtraction. raw data are the holy grail of qpcr analysis as they allow quality control, evaluation of the validity of conclusions and, if new methods or statistical analysis tools become available, re-evaluation of previously published results. furthermore raw data open the door for meta-analysis of published qpcr experiments without any bias from the original analysis. today the rdml format offers instrument independency and free and straightforward data exchange, but publications with rdml files as supplemental data are still the exception. furthermore, large experimental sets result in rdml files of significant size, and journals may prefer to not store these files on their website. a central repository dedicated to rdml files offers a better solution for easy exchange. authors upload their rdml files into this database and provide the matching ids in the article, as is customarily done for microarray and rna-sequencing data .

in this paper we describe the evolution of rdml up to version  <dig> , present the data file editor rdml-ninja and the database rdmldb, a database dedicated to the storage and exchange of rdml files.

implementation
rdml version development
rdml files are compressed text files containing an xml-based hierarchical tree with elements for experimenters, documentations, dyes, samples, targets, cycling conditions and experiments at the top level. each element contains various sub-elements. the experiment element contains run elements, each containing the set of reactions in the run with the fluorescence data, baseline values, quantification threshold and observed cq value as sub-elements. a reaction element refers to a sample element and a target element by their unique ids.

the release of a new rdml version is coordinated by the rdml consortium . any researcher, programmer or data-analyst in academia as well as industry can join the consortium free of charge and can participate in the development of rdml. suggestions are evaluated, discussed in the consortium and implemented by the rdml core group. based on the community feedback, the new version is created and released. the consortium aims for an abstracted design that can be used with the majority of instruments and software packages available and thereby balances the interests of the different instrument providers and qpcr users.

software organisation of rdml-ninja
rdml-ninja is an editor that allows the researcher to view and to modify the contents of rdml data files. the rdml data is stored as a xml tree structure from where entries are read on demand and placed in the respective elements of the graphic interface ready for user interaction. for elements such as “sample” or “target”, rdml files allow one up to an unlimited number of entries. in such a case, the user first chooses one element from a list with all elements to access the sub-elements of this selected element . the position of the chosen element in the xml tree is saved in memory upon selection. if the user decides to modify an entry via the graphic interface, the data can thus be written back to the corresponding position of the xml tree structure. prior to modification of the xml tree, the validity of the user input is checked and the operation will proceed only when the input is valid. the majority of data collected by the instruments are stored within the “react” elements and their sub-elements. rdml-ninja enables to view, but not modify, this part of the xml tree in a table view reconstructing the plate format. furthermore, the collected fluorescence values can be plotted as amplification curves or melt curves and exported into the scalable vector graphics  format for further use in presentations or publications.

the platform independence of rdml-ninja as well as its native look was achieved by the use of the qt cross-platform application framework . precompiled executable programs are available for microsoft windows and apple os x platform . because of the design of the qt framework, the support can be easily extended to other platforms if required. the application code was written in c++ making heavy use of qt functionality, not only to display the graphical interface but also to store xml data or draw svg graphics. the software is freely available for commercial and academic use under gnu general public licence .

overview of rdmldb
rdmldb is an online database for exchanging rdml files . users access the database via an interactive web interface. the database stores the original rdml files as well as key information extracted from these files required to index the database. users can query the database based on the generated index to find a specific rdml file.

the majority of the web interface scripts of rdmldb are written in php  <dig> . <dig> and use the javascript library jquery  <dig> . <dig> to enhance usability by providing auto-completion of search fields and form validation. at time of upload, the user only provides an rdml file. this file is parsed using a perl  <dig> . <dig> script to extract the meta information required to create a record such as version, target, sample and experiment description. the record is complemented with a unique id, some additional fields such as the pubmed id, the email address of the uploading user as well as the date of the upload. the meta information record and the original file are stored in the database. the database functionality was provided by using mongodb  <dig> . <dig>  because its nosql structure allows varying number of fields in each record and it enables the storage of entire files within the database using a gridfs system. users may query the database using the unique id or search the above listed fields and then download the associated rdml files.

RESULTS
rdml version development  <dig>  and  <dig> 
since the release of rdml version  <dig>  in  <dig>  <cit> , the rdml standard was updated twice with the latest version  <dig>  being released in autumn  <dig>  the major change in version  <dig>  was a complete redesign of the plate setup. in the initial rdml version  <dig> , all possible plate setups were predefined and therefore each new instrument making use of a new plate type required an update of the rdml standard. to overcome this instrument dependency, from version  <dig>  onwards, the plate setup has been described by providing the number of available reactions in two dimensions. the identification of a single reaction was changed from the letter  + number  format to a number only format based on the reaction position in the two-dimensional matrix. additionally, the handling of the dye element was redesigned. being originally an optional element, the plate setup of multiplex reactions could not be reconstructed without dye information. to avoid ambiguous situations, the dye element is no longer optional and all dyes must be registered at top level.

rdml version  <dig>  addresses the need to classify samples into groups, in order to facilitate downstream statistical analysis. therefore, an annotation element was introduced containing a property and a value string as sub elements. each defined sample may have several of these annotation elements. we envision the use, for example, in a mouse experiment, where a first annotation element could have the property “gender” with the values “male” or “female” and a second element could have the property “treatment” with the values “control”,“condition1” or “condition2”. the free string format for properties and values allows flexible tagging of all samples and thus sub-groups of reactions. the annotation element also replaces the elements used to describe dna or rna quality. furthermore the dna and rna quantity elements, which were already modified in rdml version  <dig> , were united as one quantity element in the current version. some elements in rdml version  <dig>  were added to provide further miqe compatibility  <cit> . an example is the element “amplificationefficiencyse” containing the uncertainty measure for the estimated pcr efficiency. for each target, this value results from the least-squares fit of the cq versus log  observations of the standard curve or, alternatively, is calculated as the sem of the observed efficiency values resulting from analysis of individual amplification curves  <cit> . finally, the documentation of several elements has been updated to clarify and avoid misinterpretation. this section highlights only the major changes; please check the online documentation as well as the supplemental data for a complete list of changes and the corresponding rdml standard definition . despite the described changes, the majority of the elements are unmodified since rdml version  <dig>  and therefore upgrading to version  <dig>  should be no big burden for software developers.

rdml-ninja
the rdml format is flexible due to many optional elements. on the one hand, this reduces the costs of implementation because it allows focusing on the parts of rdml required for the qpcr instrument functionality. on the other hand, no software is available today that can display all possible entries in an rdml file. furthermore, the flexibility allowed some implementations to diverge from the intended use of rdml elements thus creating valid, but difficult to use, rdml files. rdml-ninja was developed as reference implementation to fill this gap and serves to view and modify rdml files . it provides access to all elements of an rdml file in an intuitive way . the majority of data can also be supplemented and/or modified, which enables the user to complement and correct the collected information. all such modifications have to be confirmed by the user by clicking a “set changes” button . the content of some elements in an rdml file is restricted to pre-defined input. these restrictions are checked once the “set changes” button is clicked and before the file is modified. however, the rdml consortium cannot foresee any reason to modify the raw fluorescence data collected by the instrument. therefore, the entries of the “react” element cannot be modified by rdml-ninja and are only displayed in a table view or in curve view . the table view can be exported as comma separated text files  that can be imported into other software packages such as microsoft office or other programs for analysis of amplification curves  <cit> . the curve view allows the export of graphics in the scalable vector graphics format  for easy inclusion in presentations and papers. the svg format can be modified by any vector graphics software without any loss of quality .fig.  <dig> open source editor rdml-ninja. a target information is displayed after selection of an id in the left section. b the annotation and results of a single plate are visualized in an interactive table view. c amplification results and melt point measurements can be plotted in a graph and exported in svg format. a high resolution image is available as supplemental data



in addition to the editor functionality, rdml-ninja was enriched with rdml-specific functionality. an imported rdml file can be validated with the validator tool using the corresponding schema. the validator tool will state “validation successful” or provide information on the type of error that it has encountered. currently, three versions of rdml exist and all were implemented into available qpcr systems and software. rdml-ninja allows migrating files between all three versions at the cost of minor information loss if data were stored in elements not supported by the target version. this feature allows users to migrate their rdml data to the most recent version for further analysis when their instrument software supports only an older version.

rdmldb
rdmldb was designed for the exchange of rdml files . users may upload their data and obtain a unique identifier  referring to the uploaded file. this id can be provided in publications and allows readers to extract the corresponding rdml file. furthermore, users may add a pubmed id to their files in order to link publications to the rdml files. the release of the file to the public can be delayed for up to one year to grant confidentiality during the reviewing and publication process. in addition to the id, rdmldb can be searched for pubmed id, submitter name or rdml version . rdml files can be downloaded from the website, either after searching for public files or using a direct link for private files in the review process. a statistics page keeps users informed on the number of records, linked publications, samples, targets and reactions stored in the database.fig.  <dig> search interface of rdmldb. rdml files are found in the database based on query key elements



discussion
over the past five years, the universal qpcr data exchange file format rdml has been well accepted by the scientific user community and is implemented in many qpcr instruments available today. further, being part of the miqe guidelines, it is endorsed by scientific journals and publishers. although this is a big achievement, the use of rdml should not stop at this point. currently, we see the bottleneck at the level of handling rdml files and rdml file exchange. the editor, rdml-ninja, has been designed with different user types in mind. in the laboratory, rdml-ninja should allow researchers to enter information into rdml elements not supported by the software of their qpcr instrument. furthermore, rdml-ninja can form a bridge between software supporting different rdml versions by handling the conversion. in the field of publishing, reviewers as well as readers can use rdml-ninja to visualize and evaluate qpcr data in rdml files independent of instrument software. in the bioinformatics field, rdml-ninja should assist software developers with the implementation of the rdml standard. programmers can use rdml-ninja to create files to challenge their software or to evaluate the validity of the files created by their software.

the online database rdmldb will facilitate the storage and public exchange of rdml data. rdmldb serves as a repository for rdml files where individual files are referred to by a unique id. rdmldb can thus function for qpcr data like the repositories for other gene expression measurement technologies, such as microarrays and rna-sequencing.

rdml has the potential to connect all qpcr-data-associated processes in a lab. we envision users start by designing their qpcr assays using primer3plus and obtaining an rdml file containing the primer sequences. then they extend the target information using rdml-ninja with references to the gene id and additional information. many labs use a limited set of targets and qpcr cycling programs that could be collected in one comprehensive rdml file and shared among researchers. once researchers start a qpcr run, they import this information from the lab file, enter the sample names and annotations, choose targets and edit the plate layout, adding targets and samples to each reaction in the run. after the real-time pcr instrument completes the qpcr run, it combines the run informations and the reactions and saves it into rdml files. finally, researchers can analyze the raw data using the instrument software or the third party software of their choice and perform final statistical analysis. an rdml based pipeline is currently provided for rdml compatible qpcr instruments. the run, target and tissue information and the raw fluorescence data can be read into linregpcr  <cit> . this program performs qpcr quantification based on the analysis of the amplification curves and saves pcr efficiency values per target and cq values per reaction back into the rdml file. when this rdml file is read into qbase +  <cit>  the gene expression data can be normalized and further statistical analysis of the resulting relative expression levels can be performed. when, at the point of publication, the rdml file has been uploaded to rdmldb and its id is referred to in the publication the reviewers and readers can download the rdml file from the database, visualize the raw data as well as the derived efficiency and cq values and thus review the complete data analysis process.

ultimately, rdml should be extended to store all information required according to the miqe guidelines. while the information required by miqe may seem overwhelming to researchers, rdml offers an easy help to handle this information. all the information is entered only once and stored in a basic rdml file. researchers would not have to re-enter this information with every qpcr run, but can instead import from this rdml file only the parts they need for the current qpcr run. furthermore, integration of miqe would allow checking to what extent miqe information is provided by calculating the checklist completeness. this would serve researchers, enabling them to avoid the repetitive burden of manual documentation, as well as reviewers and readers, who require complete information to judge and replicate the published results.

CONCLUSIONS
our applications lower the barriers using rdml for data exchange. the open source editor rdml-ninja allows visualisation of all rdml elements and migration between rdml versions. the database rdmldb will serve as public online repository for rdml files. rdmldb will ease data exchange between research groups and facilitate the use of rdml files in publications. making qpcr data exchange more accessible will significantly enhance biology research, publication quality and qpcr data validation. with a tighter integration of miqe a data format is in reach allowing collecting and exchanging all data required by miqe at one.

availability and requirements
project name: rdml, rdml-ninja, rdmldb

project home page: http://www.rdml.org, http://sourceforge.net/projects/qpcr-ninja/, http://www.rdmldb.org

operating system: platform independent

programming language: qt, c++, perl, javascript, xml

other requirements: microsoft windows  <dig> or higher, macintosh os x

license: gnu gpl

any restrictions to use by non-academics: no

competing interests

the authors declares that they have no competing interests.

author's contributions

jmr, sl, jh, jv and au drafted the new rdml versions. au designed and programmed rdml-ninja and jmr helped with beta testing. sl, ja, jh and jv designed, programmed and maintain rdmldb. mwp, vb, sab, jv and au participated in qpcr standardisation efforts and in the definition of standardisation requirements in the perspective of rdml and miqe. au conceived of the study, and participated in its design and coordination. jmr, jv and au helped to draft the manuscript. all authors read and approved the final manuscript.

