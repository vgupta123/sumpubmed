BACKGROUND
representing and modeling biological processes as networks, in particular signaling and gene regulatory relations, is a widely used practice in bioinformatics and computational biology. this bridges these research fields to the vast repertoire of tools and formalisms provided by graph- and complex-network-theory. furthermore, this facilitate an integrative analysis of experimental observations, either by derivation of networks from the data, or by mapping the latter on the former. hence, network-based approaches have become a popular paradigm in computational biology  <cit> .

in the last few years this has allowed the design of a broad assortment of algorithms and tools whose aim ranges from providing an interpretative framework for the modeled biological relations, to the identification of network-modules able to explain phenotypic traits and experimental data from large reference signaling graphs  <cit> . many methods in this last class aim at identifying a sub-network, for example, that is composed by the most differentially expressed or significantly mutated genes , or that it is targeted by a given external perturbation . toward this aim different optimization procedures have been used to analyze experimental data, identifying a pathway that is deregulated in a given disease, or whose activity is perturbed upon a given drug treatment.

in many approaches, directed signed networks  are used to model pathways and to interlink pathways from a given collection. in these networks, nodes represent biological entities  while edges represent the biological relationships between them . these edges have a direction to discriminate effectors and affected nodes in a modeled relation, and a sign to specify whether the modeled relation is an activation  or an inhibition . unsigned/undirected edges modeling generic interactions can be also present. when available, sign and direction allow a more detailed detection of the nature of the interaction between the nodes. in this study, the number, sign and direction of a node’s connections are cumulatively denoted by the functional characterization level  of the corresponding modeled biological entity .

in a reference network modeling a set of interlinked pathways or protein-protein-interactions, the fcl might be high for a node that models a functional hub. for example a kinase phosphorylating a large number of substrate proteins will have a high number of out-going edges with positive sign. similarly, a gene activated by a large number of transcription factors will have a high number of positive in-coming edges. on the other hand the fcl might be strongly biased by the relevance of a biological entity in a given research field, and the resource the network has been assembled from. for example, in a cancer focused reference network it is reasonable to find nodes that have a high fcl just because they have oncogenetic or tumor-suppressive properties, thus have been studied more than others. as a consequence, solutions to the network optimization problems tackled in bioinformatics  can be strongly influenced by the topology of the initial network, and by the fcl of its nodes.

in an attempt to overcome this issue, some tools assess this bias by comparing their provided sub-network solutions with those that would be obtained  across a large number of trials, each starting from a reference network that is a randomized version of the original one. many other tools neglect this aspect and the significance of the solution is computed by randomizing the experimental data only. for both options, the expectation of some topological properties  of the sub-network solutions is estimated by analyzing the random solutions obtained across the trials. in this way, the significance of these properties is quantified as the divergence from their expectation, testing against the null hypothesis that there is no association between the analyzed experimental data and the outputted sub-network solutions.

to our knowledge, all the existing methods assessing their solution significance through reference network randomizations make use of a simple edge shuffling. this means that in a randomization trial each edge of the network is simply set to link two randomly selected nodes. this implicitly means that null models resulting from this randomization strategy are totally unconstrained with regards to the degree of the nodes, and the way they are linked to each other in the original network. therefore, the impact of the fcl of the nodes in the original reference network on the outputted sub-network solution is not considered. in order to take this into account a constrained randomization strategy preserving the fcl of all the nodes in the original network must be used.

the problem of randomizing an undirected and unweighted network while preserving the degree of its nodes, i.e. the total number of incident edges for each node, is known in graph theory as network rewiring and unfortunately presents itself with analytical and numerical challenges  <cit> . with the additional constrain that the network to rewire is bipartite , this problem reduces to randomizing a binary matrix preserving its marginal totals, i.e. its row-wise and column-wise sums. several algorithms exist to solve this problem  <cit>  but the computationally efficient randomization of moderately large matrices  is still challenging. additionally, to our knowledge, none of the methods published is formally shown to be able to actually simulate samplings from the uniform distributions of all the possible binary matrices with prescribed marginal totals. such proof exists for methods rewiring directed binary networks based on swap-and-fill strategies applied to their adjacency matrices  <cit>  but not dealing with dsns. finally, some recent methods have been proposed to solve the related  problem of randomizing metabolic networks in a mass-balanced way  <cit> .

in  <cit>  we showed how an algorithm based on a monte carlo procedure known as the switching-algorithm   <cit>  can be used to efficiently randomize large cancer genomics datasets preserving the mutation burdens observed across patients and the number of mutations harbored by individual genes . to this aim, we derived a novel lower bound for the number of steps required by the sa in order for its underlying markov chain to reach a stationary distribution. additionally, we implemented the sa in the r package birewire  and we showed a massive reduction in computational time requirements of our package and bound with respect to other existing r implementations  <cit>  and bounds  <cit> .

here  we introduce the problem of rewiring a dsn modeling a biological network in a way that the fcl of all the modeled entities is preserved: f-rewiring;  we formally show how this problem reduces to rewiring  <dig> bipartite networks;  we provide a generalized bound to the sa for bipartite networks of any size; and  we show the validity of the markov chain convergence criteria  for f-rewiring dsns.

finally, we provide an overview of the functions included in a new version of birewire for f-rewiring, and we show results from two case studies where solutions obtained with two network optimization methods  are assessed for statistical significance and intial reference network biases against constrained null models generated with birewire.

methods
preliminary notations
the problem we are tackling is the computationally efficient randomization of a directed and signed network   in a way that some local features of its individual nodes are preserved.

in such a network g=, the edges in e can be encoded as triplets  where a is called source node, b is called target node and ∗ is a label denoting the sign of the relation occurring among them, which could be positive, ∗=+, or negative, ∗=−.

according to this definition, in a dsn the edge  is different from the edge , thus making this formalism more flexible than that provided by a directed weighted network . in fact, differently from such a model, in a dsn two edges with same terminal nodes and direction but different sign can coexist. in addition, a dsn is different and less general than a multidigraph , because only two possible edges with the same direction can coexist between the same couple of nodes.

given an edge e∈e, we define the function λ:e→{+,−}, mapping each edge to its sign label.

given a node v∈v, we define its in-bound-star
i as the set of edges in e having v as destination, i={e∈e:e=}. similarly, considering the edges having v as source defines its out-bound-star, o={e∈e:e=}. imposing as additional condition for an edge to be included in these sets that of having a fixed sign label, defines positive and negative in-bound and out-bound
stars. formally, the v
positive-  in-bound-star is the set of edges in g having v as destination and positive  label, i
+={e∈i:λ=+} ={e∈i:λ=−}). analogously, the v
positive-  -out-bound-star is the set of edges in g having v as source and positive  label, o
+={e∈o:λ=+} ={e∈o:λ=−}).

by naturally extending the definition of node degree  to these formalisms, we call positive-in-degree of a node v the quantity |i
+| equal to the number of edges with positive label having v as destination. similarly we define the v
negative-in-degree, positive-out-degree and positive-in-degree, the quantities |i
−|, |o
+| and |o
−|, respectively.

in the light of the introduced notation, the object of this study can be redefined as the randomization of the edges of a dns g while preserving not only its general node-degrees , but also all the signed degrees defined above, for all the nodes: network f-rewiring.

a biological pathway can be naturally represented through a dns g=. in this case the nodes in v would represent biological entities, and the edges in e would represent functional relationships occurring among them, whose type would be defined by the sign label , with directions indicating effector/affected roles . in this case the signed degrees introduced above would define the functional characterization level  of the individual biological entities considering all the possible roles that they can assume within a given pathway.

particularly the positive-out-degree of a node v would correspond to the level of characterization of the corresponding biological entity as activator of other entities; the negative-out-degree would correspond to its characterization as inhibitor; finally, the positive-, respectively negative-, in-degree of a node would correspond to the level of characterization of the corresponding entity as activated, respectively inhibited, by other entities in the same dsn.

as a consequence, the ultimate goal of this study is to efficiently randomize a pathway  in a way the functional characterization levels of its individual entities, i.e. the signed-directed degrees of all the nodes, are preserved.

f-rewiring of a directed signed networks is reducible to the rewiring of two bipartite networks: reduction proof
let us consider a directed signed network  g=, with λ∈{−,+}, ∀e∈e and a transforming function f, from the set of all the possible dsns to the set of all the possible pairs of bipartite networks , such as b
∗=, whose node sets are defined as s
∗={v∈v:∃∈e}, and d
∗={v∈v:∃∈e}, with ∗∈{+,−}. worthy of note is that the same node of g can be both a source  for some edge in e, and a destination  for some other edge in e. as a consequence f should also relabel the nodes . here, for simplicity we will neglect this relabeling.

as a conclusion, the function f maps g to two bipartite networks   such that b
+= is the bn induced by the positive edges of g, where all the sources of these edges are included in the first node set s
+, all the destinations in the second set d
+ and two nodes across these two sets are connected by an undirected edge if they are connected in the original network g by a positive edge that goes from the node in the first set to that in the second one. the second bipartite network of the pair b
− is similarly induced by the negative edges of g. formally e
∗={:s∈s
∗,d∈d
∗ and ∃∈e}, with ∗∈{+,−}. an example of this transformation is shown in fig. 1
a.
fig.  <dig> f-rewiring of directed signed networks is reducible to the rewiring of two bipartite graphs: a scheme of the transformation function mapping a directed signed network  to two bipartite networks  induced by the positive, respectively negative, edges of the original network; b scheme of the inverse function that, after the two bns induced by the edges of the original network have been rewired via the switching-algorithm, maps back the resulting rewired bns to a dsn




it can be shown that such a function f realizes a bijection between the set of all the possible dnss and the set of all the possible pairs of bns  <cit> . as a consequence its inverse f
− <dig> is a function from the set of all the possible pairs of bns to the set of all the possible dsns, and it is defined as f−1=g=, where 
 v=s1∪s2∪d1∪d <dig>  
 e={:∈e1withs∈s1andd∈d1} 
 ∪{:∈e2withs∈s2andd∈d2}. 


for simplicity, we assume that f
− <dig> re-assignes to the nodes their original labels before constructing the node/edge sets of g, if they were relabeled by the function f. an example of this inverse transformation is shown in fig. 1
b.

proposition 1
let be g= a dsn modeling a pathway  p, and f the transformation function described above f=. if r
+ and r
− are rewired versions of b
+ and b
− respectively, then f−1=ℋ is a randomized version of g in which the signed-directed degrees of all the nodes v∈v, i.e. the quantities |i
+|, |i
−|, |o
+|, |o
−|, are kept equal to their original values. this implies that ℋ is an f-rewired version of g, hence a randomization of p in which the functional characterizations of the individual entities are preserved.

proof
first of all we need to show that ℋ is a randomized version of g, in other words that ℋ is a directed signed network with the same nodes set and number of edges of g and the same signed-directed node degrees but a different edge set.

to this aim let be ℋ==f− <dig>  since a rewiring does not affect the node set of the transformed network, r
+ has the same node set of b
+, and r
− has the same node set of b
−. on the other hand, b
+ and b
− are the two bipartite networks induced by the positive and negative edges  of g. for construction, the union of their nodes gives v. taken together these observations imply that w=v


from the definition of f, b
+ contains the positive edges in e and b
− the negative edges of e . from the definition of rewiring, the edge set of r
+ contains the same number of edges of b
+ but at least one edge not contained in b
+. similarly the edge set of r
− contains the same number of edges of b
− and at least one edge not contained in b
−. therefore, from the definition of f
− <dig>  |f|=|e| and f contains at least two edges that are not included in e. this imply that f≠e.

as a conclusion g and ℋ have the same set of nodes and number of edges but different edge sets.

secondly we need to show that the signed degrees of all the nodes of ℋ are equal to those of all the nodes in g.

let us assume that the positive-in-degrees of ℋ are different from those of g. from the f
− <dig> definition, this implies that r
+ contains at least a node in the source set for which the degree is different from that of its counterpart in b
+. however, this contradicts r
+ being a rewired version of b
+. with the same argument it is possible to prove that all the signed-directed node degrees of ℋ are equal to those of g. □

switching-algorithm lower bound for bipartite networks of any size
to rewire a bipartite network b=, the switching-algorithm   <cit>  performs a cascade of switching-steps . in each of these ss two edges  and  are randomly selected from e and replaced with  and  if these two new edges are not already contained in e. in this case the ss under consideration is said successful.

underlying the sa is a markov chain whose states are different rewired versions of the initial network g and a transition between states is realized by a successful ss.

in  <cit>  we prove that, if executing a sufficiently large number of ss, the sa can efficiently simulate samplings from the uniform distribution of all the possible bipartite networks with predefined node sets and prescribed node degrees. therefore it can be used to obtain a rewired version of a network b that it is, on average, no more similar to b than are similar to each other two bipartite networks b
 <dig> and b
 <dig> sampled from the real uniform distribution of all the possible bipartite networks with the same node sets and node degrees of b. to this aim, the number of ss to be performed before sampling the -th rewired network must be large enough to assure that the algorithm has forgotten the k-th sampled rewired network . formally, the number of ss between two following samplings must be at least equal to the burn-in time of the markov chain underlying the sa, which is needed to reach a stationary distribution  <cit> . an example of this is shown in fig. 2: the  <dig> plots show results from a simulation study in which the sa has been used to rewire a synthetic bipartite network of  <dig> +  <dig> nodes and an edge density of 20%, and rewired versions of this network have been sampled at different intervals of sss. a sampling interval of  <dig> ss produces sampled networks that are strongly related to each other . gradually increasing the sampling interval , reduces the sampled network similarities but some local dependencies are maintained. at a sampling interval of  <dig> ss  the markov chain underlying the ss has reached its stationary distribution, the sampled networks are completely unrelated and there are no dependencies. therefore, for the bipartite network under consideration, a number of ss ≥ <dig> is sufficient to simulate samplings from the uniform distribution of all the possible bipartite networks with  <dig> +  <dig> nodes and node degrees equal to those of the original network.
fig.  <dig> rewired network samplings using the switching-algorithm  at different sampling intervals, in terms of switching-steps , as indicated by the different panel identifiers . points represent sampled networks, arrows indicate a starting synthetic network, and colors indicate the sampling order. point proximities reflect corresponding network similarities quantified through the jaccard index. point coordinates have been obtained with a generalized multi-dimensional scaling procedure 




an empirical bound n
′ for the minimal number of ss to be performed by the sa between two consecutive samplings has been proposed in  <cit>  as being equal to  <dig> times the number of edges of the bipartite network to rewire. this makes rewiring moderately large networks computationally very expensive.

by analyzing the trend of similarity to the original network along the sample path of the markov chain simulation implemented by the sa, in  <cit>  we proposed a novel lower bound to the number of ss needed to rewire large bipartite networks equal to 
  <dig> n=|e|2ln, 


where e is the set of edges of the network to rewire b= and d=|e|/ is its edge density. in  <cit>  we show that this bound is much lower than n
′ and that our sa implementation and bound provide a massive reduction of the computational time required to rewire large bipartite networks  with respect to other sa implementations  <cit>  and the bound n
′.

here we provide a generalization of the lower bound n making the sa effective and computationally efficient in rewiring bipartite networks of any size. this is led by the observation that a dsn modeling a pathway  can be even composed by a modest number of nodes and edges.

as shown in the supplementary data of  <cit>  , eq.  <dig> follows from the gsd-equation  <dig>  and it is a simplified form of 
  <dig> n=|e|ln|e|ε−|e|2εt2pr 


where t=|s||d| is the total number of possible edges of the original network, d=|e|/t is its edge density, p
r is the probability of a ss to be successful. ε is the accuracy of the bound in terms of distance  from the real fixed point x¯.

under the assumption of a uniform degree distribution <dig> we showed that p
r= <dig> . as a consequence eq.  <dig> can be rewritten as: 
  <dig> n=|e|ln|e|ε−|e|2εt <dig>  


which for ε= <dig>  gives eq.  <dig> 

equation  <dig> expresses the lower bound of the number of ss as a function that accounts for the network topology and the estimated distance of the markov chain underlying the sa from its steady-state, according to the convergence metric used in  <cit> . more detailed, this distance is equal to |x−x¯|, where x
 is the number of common edges between the original network and its rewired version after k ss, and x¯ is the expected number of common edges between the original network and its rewired version, after the markov chain underlying the sa has reached its stationary distribution.

in our previous bound definition ε was defined in terms of number of edges, and n defined as in eq.  <dig> in order to have |x−x¯|≤ <dig> for k≥n.

for large bipartite networks, i.e. |e|> <dig>  a value of ε= <dig> guarantees a relative error δ< <dig> % of edges for a number of ss k≥n. however, for relatively smaller networks, for example when |e|= <dig>  a value of ε= <dig> implies a substantially increase in the relative error to δ=1%, making the estimated lower bound n increasingly suboptimal with respect to the estimated real fixed point.

for this reason here we redefine the lower bound n for the number of ss as a function of its relative error δ, which quantifies its sub-optimality with respect to the estimated real fixed point. through the simple substitution ε=|e|δ, eq.  <dig> can be rewritten as: 
 n=|e|ln1−dδ2pr=Ω|e|  where Ω=−lnδ)2pr depends only on the level of accuracy δ, the density d of the original network and the probability p
r of a successful ss. for uniformly distributed degrees  <dig>  i.e. p
r= <dig>  this bound reads as: 
  <dig> n=|e|ln1−dδ <dig>  


a value of δ= <dig>  , is used by default by our new implementation of the sa in the new version of the package birewire but this parameter can also be set to a user defined value, making our tool and bound suitable for the rewiring of bipartite networks of any size. additionally, the choice of a suitable value for this parameter can be determined by visually inspecting the sa markov chain convergence with a new dedicated function 

convergence criteria for signed directed networks
in  <cit>  we showed that the convergence criteria we used to estimate our lower bound n for the number of switching-steps  needed to rewire bipartite networks can be applied also to the more generic case of undirected networks.

to show the validity of this criteria for f-rewiring of directed signed networks  let us observe that the jaccard index   <cit>  used to assess the similarity between two dsn with the same set of nodes and same number of edges: g= and ℋ= is defined as 
 j=|e∩f||e∪f|=x2|e|−x  where x=|e∩f| is the number of common edges and the last equivalence holds because the two dsns have the same number of edges. when estimated for bipartite networks, our n guarantees that the number of common edges between an initial network b and its rewired version at the n-switching-step is asymptotically minimized.

proposition 2
let be r
+ and r
− the rewired versions of two bipartite networks b
+ and b
− obtained through a number of switching-steps respectively equal to n
+ and n
− , and such that =f . then the jaccard similarity between g and ℋ=f− <dig> is minimized.

proof

j reaches a minimum when the number of common edges x between g and ℋ reaches a minimum. x is given by the sum of the number of common positive and negative edges across the two networks, namely x=x
++x
−. given that ℋ=f− <dig>  x
+ is the number of common edges between b
+ and r
+. analogously x
− is the number of common edges between b
− and r
−. since r
+ and r
− are rewired version of b
+ and b
− computed through n
+ and n
−  also x=x
++x
− is minimized. □

RESULTS
overview of the new functions included in birewire v <dig> .0
the r-package birewire  was originally designed to efficiently rewire large bipartite networks . we have performed a major update, by including functions to: 
read/write directed signed networks  from/to simple interaction format  files ;

perform the transformation f  to derive bipartite networks induced by positive and negative edges of a dsn, and vice-versa ;

f-rewire a dsn by applying the switching-algorithm  to the two corresponding induced bipartite networks with numbers of switching-steps automatically determined for both networks individually, using eq.  <dig> ;

sample k rewired versions of a network: this function runs k instances of the sa in cascade; each of these instances performs a number of switching-steps  determined using eq.  <dig>  this function can take in input a bipartite network, an undirected network or a dsn  ;

monitor the convergence of the markov chain underlying the sa on user defined networks. this routine samples a user-defined number of networks at user defined intervals of ss. for each of these intervals, it computes a jaccard similarity  <cit>  pair-wisely comparing the sampled networks to each other; finally it plots the sampled networks in a plane where points proximities reflect jaccard similarities of the corresponding networks and point coordinates are computed through the generalized multidimensional scaling method t-sne  <cit> ; this function gives in output the network coordinates of such scale reductions and produce the plots shown in fig.  <dig>  also in this case the inputted graph can be a bipartite network, an undirected network or a dsn ;

perform an analysis of the trends of jaccard similarity across ss. this function performs a user-defined number of independent runs of the sa, computing the mean value and a confidence intervals of the observed pairwise jaccard similarities between the obtained rewired networks. the result is a dataset containing the jaccard similarity scores computed and sampled at user-defined intervals of ss, and a plot similar to that showed in figs. 3
a and 4
a. this function takes in input a bipartite network or an undirected network or a dsn .
fig.  <dig> bionet study case. a analysis of the jaccard index trend across switching-steps  while rewiring the bionet reference interactome and estimation of the lower bound n; b visual inspection of the switching-algorithm markov chain convergence to verify the suitability of the estimated bound ; c interactome module outputted by bionet while analyzing the dlbcl dataset; d scatter plots of bionet scores vs. frequency of inclusion in the rewired solutions for all the nodes included in the bionet module  and for all the other interactome nodes contained in the dlbcl dataset 


fig.  <dig> cellnopt study case. a analysis of the jaccard index trend across switching-steps  while rewiring the two bipartite network induced by the positive  edges of the reference dsn ) and estimation of the lower bounds for the number of switching-steps; b visual inspection of the switching-algorithm markov chain convergence to verify the suitability of the estimated bounds ; c comparison of the cellnopt scores and the rewired scores; d empirical p-values of the cellnopt scores across the entire family of models. e the liver-pkn used by cellnopt as initial reference network; f the model outputted by cellnopt when using the liver-pkn as initial reference network with superimposed the frequency of inclusion of each node in a set of  <dig>  models outputted by cellnopt using f-rewired versions of the liver-pkn as reference networks







worthy of note is that, supporting the analysis of dsns, our package can handle also generic directed graphs, therefore with birewire <dig> it is now possible to rewire any kind of unweighted networks.

we have developed also a cython wrapper of the corresponding c library for python users. a first release  can be found in https://github.com/andreagobbi/pybirewire.

case study 1: bionet
the r package bionet  <cit>  provides a set of methods to map gene expression data onto a large reference biological network, and to identify  a maximal scoring sub-network , which a is a set of connected nodes  with unexpectedly high levels of differential expression  <cit> . several other methods moving along the same lines exist . here we focus on bionet because it can be considered a typical example among these methods, and we show how birewire <dig> can be used to estimate the impact of the reference network topology and the functional characterization level , i.e. sign-directed degree, of its nodes on the optimal module outputted by this tool.

the initial reference network used by bionet  is a large undirected protein-protein-interaction network assembled from hprd  <cit>  and encompassing  <dig>  nodes and  <dig>  edges. in  <cit> , the authors show an application of bionet to gene expression data from a diffuse large b-cell lymphoma  patient dataset, with corresponding survival data. after determining gene-wise p-values for differential expression and risk-association, the authors aggregate them and fit a beta-uniform mixture model to the distribution of aggregated p-values that yields a final score  for each gene: the higher this score the more a gene is differentially expressed across the contrasted groups of patients. then the methods proceeds with mapping these scores onto the interactome nodes and, applying a heuristic method  <cit> , it identifies a sub-network  that is a sub-optimal estimate of the mss. this module is shown in fig. 3
c and the bionet package vignette contains detailed instructions on how to reproduce this result.

to evaluate the impact of the fcls of the interactome nodes on the module outputted by bionet when used on the dlbcl dataset, we generated  <dig>  f-rewired versions of the interactome with birewire <dig> and used each of them as initial reference network in  <dig>  individual bionet runs, using the dlbcl dataset as input.

to this aim we first conducted a birewire <dig> analysis  to determine the number of switching-steps  to be performed by the switching-algorithm  in order to f-rewire the interactome. this function makes use of the convergence criteria we designed in  <cit> , which is based on the estimated time, in terms of ss, in which the jaccard similarity  between the original network and its rewired version at the k-th ss reaches a plateau . in  <cit>  we showed that this criteria is equivalent to other established methods to monitor markov chain convergence when the states are networks. in addition its relatively simple formulation consents the analytical derivation of an estimated plateau time, i.e. our bound n. neverthless, our package allows also a visual inspection of the optimality of the estimated bound n showing how independent are f-rewired versions of an initial network sampled at a number of user-defined ss intervals as well as every n ss .

these preliminary analyses resulted in a required number of ss equal to n= <dig>   and showed that this number of ss is actually sufficient to generate unrelated f-rewired versions of the interactome, thus to simulate samplings from the uniform distribution of all the possible networks with the same number of nodes and fcls of the interactome . generating  <dig>  f-rewired versions of the interactome sampled each n ss required ∼ <dig> hours on a  <dig> core  <dig>  ghz computer with 8gb memory.

running  <dig>  independent instances of bionet using each of these f-rewired interactome as reference network and the dlbcl dataset in input resulted into  <dig>  different module solutions . for each of the nodes included in the original bionet module solution , we quantified the ratio of rewired solutions including them and we investigated how this quantity related to the corresponding bionet scores . as expected, we observed a significant correlation . in fact, as per the definition of the mss, it is reasonable that nodes with high scores  tend to be included in the module outputted by bionet regardless their edges and degree in the reference interactome. similarly, nodes with large negative scores  are included in the module only because they link high scored nodes and it is obvious that they do not tend to be included in the rewired solutions, as in this case the way they are interlinked to other nodes is crucial.

nevertheless, a number of nodes  have modest score but tend to be included very frequently in the rewired solutions. this hints that what leads the inclusion of such nodes in the bionet module is their high fcl. as a confirmation of this, smad <dig>  smad <dig> and pik3r <dig> fall over the 99th percentile when sorting all the nodes in the interactome  based on their fcl . this is a proof that the reference network provides the bionet outputted module with a positive impact, and that at least some nodes are included in the solution because of their high fcl.

when extending this analysis to the nodes of the interactome  that are not present in the module outputted by bionet we observed again an expected significant correlation , and some nodes  with high scores frequently included in the rewired solutions . however we also observed a large number of nodes  scored high but relatively infrequently included in the rewired solutions. this hints that these nodes are penalized by their low fcl in the reference interactome, thus proving the existence of a negative impact provided by the reference interactome to the bionet outputted module, and that at least some nodes are not included in the solution because of their low fcl.

an indication of both these types of impacts, together with diagnostic plots and statistics would complement and complete the output of many valuable and widely used tools, such as bionet.

case study 2: cellnopt
cellnopt  is a tool used to train logic models of signal transduction starting from a reference directed signed network  called a prior knowledge network , describing causal interactions among signaling species , and a set of experimental data , obtained upon various perturbatory conditions .

cellnopt converts the pkn into a logic model and identifies the set of interactions  that best explain the experimental data. this is performed through a set of bioconductor packages supporting a number of mathematical formalisms from boolean models to ordinary differential equations.

through a built-in genetic algorithm cellnopt identifies a family of subnetworks from the reference dsn  together with the value of the objective function  quantifying at what extent each model is able to explain the experimental data . by default, the best model with the lowest score denoted δ^ is returned to the end-users. note, however, that multiple models may be returned if they cannot be discriminated given the experimental evidence. besides, to account for experimental noise, users may also provide a parameter, which is called tolerance , that will keep all models below a threshold defined as λ=δ^.

setting this tolerance parameter is non-trivial and depends largely on the experimental error. one idea would be to estimate this threshold by looking at the expected ability of f-rewired versions of the liver-pkn to explain the data, when they are used as input to cellnopt. in fact, even if original local node properties are maintained, in each of these f-rewired networks the topology of the biological pathways interlinked in the liver-pkn is disrupted. as described before, a large score calculated by cellnopt indicates a large disagreement between data and network logic behavior at the measured nodes. therefore the distribution of the δs outputted by cellnopt when using these f-rewired networks gives an idea of the attainable base-line performaces, which are not derived from biologically meaningful models but depend only on the fcl  of the original liver-pkn.

based on these considerations, here we show how birewire <dig> can be used to identify such a threshold as the maximal δ value whose deviance from expectation is statistically significant. similarly to the previous case study, this expectation can be empirically estimated by running a large number of independent cellnopt runs using f-rewired versions of the initial reference signaling network and the same experimental data. thus accounting for the effect of the node fcls on both scores and outputted models. to this aim, we used the same reference pkn network and phosphoproteomic data used in  <cit> , which has about  <dig> nodes and  <dig> directed and signed edges. this was a study on human liver cell and hence the network is called liver-pkn hereafter. with the birewire <dig> package we generated   <dig> f-rewired versions of the liver-pkn, visually inspecting  the optimality of our estimated lower bound n for the number of switching-steps  to be performed by the switching-algorithm   between one sampled f-rewired network and the following one. subsequently we run  <dig> independent instances of cellnopt .

on each of these f-rewired liver-pkn networks and the same phosphoproteomic dataset , as well as a final run using the original liver-pkn network .

when comparing the two populations of cellnopt scores obtained from these two analyses we observed, as expected, a notably statistically significant difference , indicating that in the f-rewired networks the topology of the pathways originally interlinked in the liver-pkn is actually disrupted. subsequently, using the distribution of scores of the rewired models we computed empirical p-values for the cellnopt scores for the entire model family outputted by the final run .

for a given score δ
i corresponding to the i−th model of the family, an empirical p-value was set equal to the number of rewired models m such that δ
m≥δ
i divided by  <dig> . more than 90% of the models in the outputted family had a cellnopt score significantly divergent from expectation  and the estimated score threshold guaranteeing this  divergence from expectation, thus a minimal impact of the initial liver-pkn fcls, was equal to  <dig> .

finally, and similarly to the analysis performed in the first study case, we quantified the tendency of each of the nodes included in the final merged cellnopt model to be included in the rewired models, finding that also in this case this is indeed proportional to the nodes’ fcl.

in summary, birewire <dig> could be effectively used to determine a score threshold on an analytical ground, based on which meaningful models could be selected from the family outputted by cellnopt for further analyses, and finally assemble a consensual model solution. additionally, it could be employed to evaluate the extent of impact of the cellnopt reference network on the topology of its outputted consensual model.

discussion

birewire <dig> is a one-stop tool to rewire in a meaningful way any type of unweighted networks  currently used to model different datasets and relations in computational biology  in an computationally efficient way. it represents a significant and formally demonstrated advance with respect to its previous version  <cit> , whose applicability was restricted to presence/absence matrices and undirected bipartite networks. we have previously shown that, thanks to an analytically derived lower bound to the number of steps of its underlying algorithm, the computational time requirements of birewire <dig> are vastly lower than those of other similar tools, reducing from months to minutes  when rewiring networks with tens of thousands of nodes and edge density ranging up to 20%. additionally, the core algorithm underlying birewire <dig> is based on a markov chain procedure that could be easily parallelized in future implementations, to exploit the power of modern multi-core computer architectures, thus reducing these time requirements even further.

our package is available as free open source software on bioconductor and, as we showed in our case studies, it can be easily combined into computational pipelines together with a wide range of existing bioinformatics tools aiming at integrating signaling networks with experimental data.

CONCLUSIONS
we have presented a computational framework implemented in a r package that could complement existing network based tools. this will be useful for computing a wide range of constrained null models testing the significance of the solutions of these tools, and to investigate how the topology of the used reference networks can potentially bias these results.

moreover, the range of applicability of birewire <dig> goes beyond computational biology, and includes all those fields making use of tools from network theory, from operative research, to microeconomy, and ecological research .

endnote

 <dig> our proof applies also to non uniform degree distributions, leading to the same conclusions for the case of directed signed networks. here we use the uniform case for simplicity.

abbreviations
f-rewiringnetwork rewiring preserving the functional characterization of the individual nodes

dsndirected signed network

fclfunctional characterization level

saswitching algorithm

ssswitching steps

gsdsupplementary data of  <cit> 

sifsimple interaction format mss: maximal scoring subnetwork

dlbcldiffuse large b cell lymphoma

pknprior knowledge network

