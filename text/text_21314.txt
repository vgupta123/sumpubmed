BACKGROUND
protein complexes are physical aggregations of proteins that interact with each other at the same location and time. they are a cornerstone of many critical cellular processes, providing the molecular machinery to perform a vast spectrum of complex biological functions. some important examples include the nuclear pore complexes for regulating the passage of proteins and rna between the nucleus and cytoplasm  <cit>  and the proteasomes for breaking down unneeded or damaged proteins  <cit> . elucidating these important protein complexes is critical for understanding cellular function and structure. in fact, many proteins are functional only when assembled into a protein complex  <cit> .

unfortunately, biologists have yet to overcome the many experimental limitations for the large-scale detection of protein complexes, such as the shortcomings of tandem affinity purification  listed in a recent protein complex survey paper  <cit> . as a result, only a tiny fraction of the possible protein complexes have been confirmed by wet lab experiments.

in contrast, high-throughput methods for detecting pairwise protein interactions  have enabled the interactomes of many organisms to be mapped efficiently, yielding large scale protein-protein interaction datasets that are readily available in public databases for data mining and knowledge discovery. given the experimental limitations of large scale detection of protein complexes, computational methods for detecting protein complexes from the rich protein-protein interaction datasets present a useful alternative.

by modelling a protein-protein interaction  network as an undirected graph, where a vertex denotes a unique protein and an edge represents an interaction between two proteins, we can expect protein complexes to manifest graphically in the ppi networks as cliques. in practice, given that data derived from high-throughput screening techniques are often incomplete  and noisy   <cit> , the protein complexes are more likely to manifest in the ppi networks as dense regions with many interactions  than as cliques   <cit> . many protein complex prediction algorithms are cognisant of this and search for regions with high density. this is often done by expanding seeds into maximally dense subgraphs where a seed is a small group of vertices   <cit> .

the mcode algorithm proposed by bader et al.  <cit>  was one of the first methods to mine ppi networks for protein complexes in this fashion. it scored vertices by their neighbourhood densities, selected those seeds with high scores, and then traversed the graph outwards from each seed to recursively include other highly scored vertices to form clusters. however, mcode is known for predicting too little complexes with too many proteins in each predicted complex  <cit> . simulating random walks in graphs is a fast and robust method for clustering network data  <cit> , and has been applied to detect protein complexes in ppi networks. the markov cluster algorithm   <cit>  popularised this technique but had limitations such as being unable to detect overlapping protein complexes and predicting noisy clusters  <cit> . algorithms such as sr-mcl  <cit> , mcl-ca  <cit>  and rrw  <cit>  were proposed to overcome these limitations; however, sr-mcl still predicted too many complexes while the rrw model was too rigid and predicted complexes of a particular size .

we can exploit the graph theoretic properties of the biological structures of protein complexes for better complex detection in ppi networks. a protein complex generally contains a core in which proteins are highly co-expressed and share high functional similarity. the protein complex is often surrounded by attachments, which are proteins that assist the core to perform subordinate functions  <cit> . the core-attachment architecture of experimentally detected protein complexes was demonstrated by gavin et al.  <cit> . a few algorithms, e.g., coach  <cit> , core  <cit> , mcl-ca  <cit>  and cachet  <cit> , have employed this model to predict biologically meaningful complexes. these algorithms typically consist of two major steps:  <dig>  detect protein complex cores, and  <dig>  add other proteins that are closely associated with the core as attachments. the demonstration of modularity in yeast ppi networks  <cit>  has also led to the application of modularity optimisation in protein complex detection by finding regions that are relatively denser compared to their surroundings  <cit> . while this approach is able to detect the less dense protein complexes, existing modularity functions have limitations such as the modularity resolution limit  <cit>  and misidentification  <cit> .

in all these approaches, finding high quality seeds to expand without excluding important proteins or including too many noisy ones in the seeds is pivotal to increasing the algorithms' precision. in addition, given that proteins within a protein complex interact with each other to perform a common biological function, the algorithms should also focus on ensuring that the protein members detected as protein complexes have high functional homogeneity. in this paper, we propose a probabilistic local walks  algorithm to detect protein complexes. we devise a seed selection strategy and formulate a topological measure called common neighbour similarity to estimate the functional similarity in two proteins. using these, we illustrate how plw performs probabilistic local walks efficiently to mine protein complex cores by identifying areas of high common neighbour similarity. the effectiveness of common neighbour similarity is established through its high correspondence to functional similarity. finally, we validate plw using yeast ppi data and show that it significantly outperforms  <dig> existing methods for complex prediction in terms of various evaluation metrics .

methods
in this section, we present a novel probabilistic local walks  algorithm to mine a ppi network/graph gppi for protein complexes. this ppi graph is formally defined as the undirected graph gppi =  where eppi = {|u, v ∈ vppi}. our proposed plw algorithm consists of three main steps:

 <dig>  selecting proteins that are located in a dense region and have high degree centrality as seeds,

 <dig>  expanding these seeds to find protein complex cores through iterative probabilistic local walks, and

 <dig>  adding attachment proteins that are closely linked to the cores.

since a complex core is the "heart" of a protein complex, it should be a subgraph that satisfies the two following structural graph-theoretic properties.

first, given that protein members of a complex core highly interact with each other, it should be dense. let us define a subgraph g' = , where v' ⊆ vppi and e' = {| ∈ eppi, u, v ∈ v'}. we quantify the density of this subgraph using the local clustering coefficient, which is the number of edges |e'| divided by the theoretical maximum number of edges possible for the graph, |v'| * / <dig> 

definition  <dig>  the density of the graph g' =  is defined as:

  density=2*|e′||v′|*|v′-1| 

secondly, it has been observed that there is a high degree of functional homogeneity in experimentally-verified protein complex cores where proteins work together and share common biological functions  <cit> . as such, we also require that the member proteins of a protein complex core should have many common neighbours or interact with a similar set of proteins. we postulate that protein a and b are likely to possess similar functions if protein a shares a number of interaction partners  with protein b-since a and b can bind to the same proteins, they are likely to share common biochemical and physical properties.

we will define a topological protein similarity measure called common neighbour similarity in equation  to quantify the degree of similarity between two proteins by considering the number of common neighbours.

seed selection
choosing high quality protein seeds for expansion is also critical. most protein complex prediction algorithms have employed a form of local search to expand seeds by including proteins located in the seeds' local neighbourhood graph. however, if a complex does not exist in the neighbourhood of these seeds, the algorithm will never be able to find the complex regardless of the quality of the local search method. furthermore, low quality seeds may also result in a false positive complex being detected. for example, if a protein on the periphery of multiple complexes is chosen as a seed, the resulting predicted complex may subsume the multiple complexes under an unrealistic big false complex that can not match with any real protein complex.

let us first provide a number of definitions for seed selection. given a vertex, its neighbour set and degree are defined as follows.

definition  <dig>  for each vertex v ∈ vppi, the set of its neighbours  is denoted as nv = {u|u ⊆ vppi,  ⊆ eppi}. v's degree in vppi is denoted by deg = |nv|.

given a vertex vi ∈ vppi, its local neighbourhood graph gvi is the subgraph formed by v and its adjacent vertices  and the interactions between these proteins, as defined below.

definition  <dig>  for each vertex vi ∈ vppi, its local neighbourhood graph gvi=vvi,evi, where vvi=vi∪v|v∈vppi,v,vi∈eppi,evi=vj,vk|vj,vk∈eppi,vj,vk∈vvi.

we devise the following score function that would identify protein seeds likely to be inside protein complexes, and which have high centrality in those complexes.

definition  <dig>  the score of a seed vi is defined as the product of the seed's degree and its neighbourhood graph density.

  scorevi=degvi*densitygvi 

the seed score function takes both degree centrality and neighbourhood graph density into consideration for prioritising the proteins for seeds. we demonstrate its calculation for an example network in figure  <dig> 

let us discuss two specific scenarios to illustrate the usefulness of the score function:

 <dig>  given two proteins with the same neighbourhood graph density but different degrees, the protein with the higher degree is more likely to be in a protein complex core as it interacts with more proteins and therefore more likely to serve as key players or coordinators within complex cores, whereas the protein with the lower degree is more likely to be an attachment or on the periphery of a core.

 <dig>  given two proteins with the same degree but different neighbourhood graph density, the protein with the lower neighbourhood graph density might be interacting with proteins from multiple complexes since the connectivity between its neighbours is lower, e.g., vertex  <dig> in figure  <dig>  in contrast, a high neighbourhood graph density reflects a high degree of functional homogeneity within the seed's neighbourhood which indicates a higher likelihood of the seed being in a protein complex core, e.g., vertex  <dig> in figure  <dig> 

proteins with higher seed scores are therefore more likely to be in complex cores and should be subsequently expanded to form cores and corresponding complexes. in this paper, we rank proteins by their seed scores and select a fraction, denoted as λ, to be expanded into cores. for example, if λ =  <dig> , the top-ranked 30% of proteins are selected as the seed set vseeds. this selection is formally defined in equation  using x, the number of proteins selected; the seed set is defined in equation .

  x=λ*v , λ∈ <dig>  

  vseeds={vi|vi∈vppi, scorevi are top x out of all the proteins in vppi} 

core mining using iterative probabilistic local walks 
protein complexes have a high degree of functional similarity between their member proteins. unfortunately, it is infeasible to directly use functional information  for protein complex core detection, as experimentally verified functional information may not be available for many proteins.

common neighbour similarity
we define a vertex common neighbour similarity measure to estimate the functional similarity of two proteins using a topological characteristic, the number of common neighbours. a high number of common neighbours means that the two proteins interact with a similar group of proteins. as the biological function of proteins is determined by the nature of their interactions with other proteins and which proteins they interact with, the number of common neighbours is a good proxy in the absence of functional data. if two protein share a number of interaction partners, they are likely to share biological functions as they could have common biochemical or physical properties to allow them to bind to their common neighbours. in fact, proteins with high vertex common neighbour similarity might even be substitutes for each other since they are able to interact with the same set of proteins to carry out similar or identical biological functions.

definition  <dig>  vertex common neighbour similarity is defined as the cosine similarity of the vector representations of the proteins' neighbourhoods.

  common_neighbour_similarityv,u=vv∩vu/|vv|*|vu| 

each protein vi is represented as a vector vvi with a dimension equal to |vppi| where an element in vvi is equal to  <dig> if the corresponding vertex interacts with vi and  <dig> otherwise.

vertex common neighbour similarity can also be calculated using the number of common neighbours normalised by the geometric mean of the neighbourhood size of vertex u and v as shown in figure  <dig>  proteins are more similar if they have a high number of common neighbours and have a similar neighbourhood size. the intuitiveness of this measure in representing functional similarity can be seen in its independent derivation by goldberg et al. and mete et al.  <cit> .

basis for probabilistic local walks 
we propose a novel probabilistic local walks  algorithm, which will identify for each seed s ∈ vseeds proteins that are similar in terms of common neighbour similarity, in the vicinity of the seed and which may not be directly connected to the seed by an edge.

favouring similar proteins using a weighted random choice. the plw algorithm takes into account the network structure by favouring edges connecting proteins with higher common neighbour similarity for inclusion in the same complex core. this weighted random choice is achieved by choosing the next protein in the walk with probability proportional to the common neighbour similarity between the current protein and each candidate neighbour. given a protein v and its neighbour u, we define the probability of walking from v to u in equation  and provide an illustrated example in figure  <dig> 

  p=common_neighbour_similarity∑∈eppicommon_neighbour_similarity 

according to equation , the random walker will pick edges that connect proteins with high common neighbour similarity with a higher probability, and will tend to walk within groups of proteins with high similarity. performing these probabilistic walks allows us to detect regions of high functional similarity. making a probabilistic choice instead of greedily choosing the most similar neighbour lessens the chance of getting stuck in local maxima. while a probabilistic local walk can be seen as a finite markov chain, they are different from the random walks simulated in existing algorithms  <cit> .

in order to perform our proposed plw algorithm, we transform our gppi into a weighted graph gsim:

definition  <dig>  gsim is defined as the graph where each edge  ∈ eppi has the weight  <dig> - common_neighbour_similarity.

  gsim= vsim, esim, where vsim=vppi 

  esim={|∈eppi,weight=1-common_neighbour_similarity} 

identifying proteins in the vicinity of a seed. in our plw algorithm, we ensure that proteins chosen are close to the seed in the ppi network by limiting the length of the walk using a starting energy α and penalty γ. each probabilistic walk starts with an energy of α. for each step taken, γ =  <dig> - common_neighbour_similarity is deducted from the walk's energy, where v is the current vertex and u is the next vertex to be visited. the walk terminates when taking the next step would cause the energy to fall below  <dig>  the penalty term penalises walking to dissimilar proteins by reducing the length of the walk. this limits the reachable vertices to the α-vicinity of the seed, which is defined as follows:

definition  <dig>  the α-vicinity of a seed s is defined as the set of vertices for which the distance to s on gsim is less than or equal to α. the distance is the length of the shortest path between the two vertices.

  vicinitys,α={u|u∈vppi,distancegsims,u≤α} 

α was chosen by estimating the diameter  of protein complex cores. we set α to  <dig>  to cover direct neighbours as well as neighbours of neighbours, as there may be missing interactions  between a seed and fellow proteins in the same complex core. indeed,  <dig> % of complexes in the cyc <dig> manually-curated yeast complex catalogue  <cit>  have a diameter of at most  <dig> in the dip ppi dataset .

compared to existing work rrw  <cit> , which uses conventional random walks with restarts that potentially allow the walk to traverse the entire graph, our proposed plw algorithm does not allow for proteins that are distant in the ppi graph to be detected in the same complex core. this better models the detection of protein complex cores, since proteins are highly unlikely to be in the same core as distant proteins. we thus avoid generating the giant protein complexes that are predicted by existing techniques such as mcode  <cit> .

implementation of the probabilistic local walks  algorithm
our plw algorithm can be implemented in two parts:

 <dig>  performing probabilistic local walks and counting how frequently each vertex is visited in walks starting from a seed s , and

 <dig>  identifying the core vertices for each seed by evaluating the statistical significance of their visit frequency counts .

collate visit frequency counts. algorithm  <dig> illustrates the calculation of visitcount, which is the frequency count that a vertex vj is visited from the seed s. for each seed s, we expand the seed w times for w probabilistic local walks, with w set to  <dig> for this paper. lines 3- <dig> represent one walk .

for each probabilistic local walk starting at a seed s, we initialise the current vertex to be the seed s with an initial energy of α in lines  <dig> and  <dig>  in lines 5- <dig>  the algorithm walks from vertex to vertex until the energy falls below  <dig>  at each non-seed vertex that it visits, it increments visitcount. it then picks the next vertex to visit using the weighted random choice described in the previous section. the algorithm applies the penalty term γ  to limit its graph traversal to the seed's α-vicinity. we bound γ to be a minimum of  <dig>  in line  <dig> to ensure termination of the walk even when similarity is high .


10
7
at the end of this walk, visitcount =  <dig>  visitcount =  <dig> and visitcount =  <dig> . note that vertex  <dig> is not visited as it would cause the energy to become negative.

algorithm  <dig> compute visitcount using probabilistic walks

1: function computevisitcount

2:  for i ←  <dig>  w do ▶ perform w walks

3:   v ← s ▶ initialise random walk at s

4:   energy ← α ▶ initialise energy at α 

5:   repeat

6:     if v≠s then

7:       visitcount ← visitcount +  <dig> ▶ record visit to vertex v

8:     end if

9:     select u randomly from ng with p ∝ common_neighbour_similarity

      ▶ make a weighted random choice in line 9

10:   γ ←  <dig> - common_neighbour_similarity ▶ compute penalty for traversing edge 

11:   γ ← max ▶ ensure termination when similarity = 1

12:   energy ← energy - γ

13:       v ← u

14:     until energy <0

15:   end for

16: end function

identification of protein complex cores. algorithm  <dig> demonstrates how the protein complex cores are formed using visitcount. we calculate the standard scores for all ln)∀visitcount ≠  <dig>  and select statistically significant ln values in line  <dig> using a significance level of  <dig> %. we apply a logarithmic transformation in lines  <dig>   <dig> and  <dig> to lessen the impact of outliers. this is a common method of improving the normality of variables  <cit> .

for each seed s ∈ vseeds, we find the significant vertices for walks starting from s and select them to form the complex core . we discard duplicate cores as well as cores with two or less proteins, since detecting two-protein cores is more dependent on the interaction data quality than the clustering method  <cit> .

algorithm  <dig> identify cores using recorded visitcount

1:   function minecores

2:   calculate z-scores of all ln)∀visitcount ≠ 0

3:   calculate statistical significance of all ln) ▶ p =  <dig> % is used for this paper

4:   cores ← ∅

5:   for all s ∈ vseeds do

6:     candidatecore ← {s} ∪ {v|v ∈ vppi, ln) is significant}

7:     if |candidatecore| >  <dig> then

8:       cores ← cores ∪ candidatecore

9:     end if

10:   end for

11: end function

adding of attachments
we select proteins that interact with more than half of the proteins in the core as attachments. the neighbourhood of a complex core c =  is defined as n = {u| ∈ eppi, v ∈ vc, u ∈ vppi, u ∈ vc}. n consists of the direct neighbours of the vertices in c connected with v. |nv ∩ vc| is the number of proteins in the core that are also neighbours of v. by selecting only attachments with |nv∩vc||vc|> <dig> , we ensure that they are closely associated and interact closely with proteins in the protein complex core.

overall plw algorithm
the overall plw algorithm, which combines all the major steps, is shown as follows in figure  <dig>  this includes seed selection in lines 2- <dig>  core mining in lines 4- <dig> and adding of attachments in lines 9- <dig> 

the time complexity of our plw algorithm is on log n+m, where n = |vppi| and m = |eppi|. this allows plw to compete on large-scale ppi networks that can not be handled by the majority of existing methods  <cit> . sorting the seeds for seed selection takes on log n time. the weighted random choices can be precomputed for all vertices in on+m time. expanding the seeds into cores takes x * w * q operations, where x is the number of seeds selected for expansion into cores, w is the number of probabilistic local walks taken and q is the average number of steps taken. given that w and q are constants  and x is at most n, the expansion of the cores takes on time.

algorithm  <dig> overall plw algorithm for mining protein complexes

1: function minecomplexes)

2:   x←λ*|vppi| ▶ seed selection in lines 2-3

3:   vseeds ← vertices in vppi with the x highest scores

4:   for all s ∈ vseeds do ▶ core mining in lines 4-7

5:     computevisitcount ▶ see algorithm  <dig> for details

6:   end for

7:   cores ← minecores ▶ see algorithm  <dig> for details

8:   clusters ← ∅

9:   for all sg ∈ cores do ▶ add attachments in lines 9-15

10:     for all v ∈ vppi\sg do

11:       esg,v ← {| ∈ eppi, u ∈ sg}

          ▶ esg,v are the edges connecting v and the core sg

12:     end for

13:     sg ← sg ∪ {v|v ∈ vppi, |esg,v |/|sg| >  <dig> }

14:     clusters ← clusters ∪ sg

15:   end for

16:     return clusters

17: end function

RESULTS
we performed extensive experiments to illustrate the effectiveness of our proposed plw algorithm. we first present our experimental datasets and evaluation metrics, followed by our results.

experimental datasets
we applied our proposed plw algorithm on two experimental yeast ppi datasets. one was retrieved from the database of interacting proteins   <cit>  and was used in  <cit> . another is a combined dataset of experimentally-determined ppis that was used in  <cit> . this dataset combines ppis from six experiments, namely  <cit> ,  <cit> ,  <cit> ,  <cit> ,  <cit>  and  <cit> , and is hereafter referred as "combined6" for convenience. to evaluate the seed selection strategy, we used an additional yeast ppi dataset from the biogrid database  <cit> , which was used in  <cit> . it was not used for the main comparative evaluation as a significant number of algorithms could not run in time on this larger dataset.

after we removed duplicated edges and self-loops, the dip dataset contains  <dig>  interactions among  <dig>  yeast proteins, the combined <dig> dataset contains  <dig>  interactions among  <dig>  yeast proteins and the biogrid dataset contains  <dig>  interactions among  <dig>  yeast proteins,

two sets of protein complexes were utilised as gold standards to validate the predicted protein complexes. the first set is the cyc <dig> catalogue of manually curated protein complexes from wodak's lab  <cit> . the second set used in  <cit>   was derived from three sources: mips  <cit> , aloy et al.  <cit>  and the gene ontology  annotations in the sgd database  <cit> . complexes smaller than  <dig> proteins were filtered out from both benchmarks. after this step, there are  <dig> complexes left in the cyc <dig> and  <dig> complexes in newmips. for the cyc <dig> benchmark, the largest complex is the cytoplasmic ribosomal large subunit with  <dig> proteins and the average size of the complexes is  <dig>  proteins.

evaluation metrics
let p and b be the set of predicted complexes and the set of benchmark complexes. we apply the neighbourhood affinity score to quantify the degree of overlap between a predicted cluster p ∈ p and a benchmark complex b ∈ b, denoted as n a in equation . a predicted cluster p is considered to match a complex b if n a ≥ ω. ω is set as  <dig>  in our experiments and the same setting was used in  <cit> .

  na=|p∩b|2|p|*|b| 

ncp in equation  is defined as the number of predicted complexes that match at least one benchmark complex and ncb in equation  to be the number of benchmark complexes that match at least one predicted complex.

  ncp={pp∈p,∃b∈b,nap,b≥ω}| 

  ncb={bb∈b,∃p∈p,nap,b≥ω}| 

based on the above definitions of ncp and ncb, we use recall, precision and f-measure  in equation  and equation  to evaluate overall algorithm performance.

  precision=ncp|p|,recall=ncb|b| 

  f-measure=2*precision*recallprecision+recall 

in addition, sensitivity , positive predictive value  and geometric accuracy  have recently been proposed to evaluate the quality of protein complex predictions  <cit> . given n benchmark complexes  and m predicted clusters , let tij denote the number of common proteins between the ith benchmark complex  and jth predicted cluster , i.e. tij = |bi ∩ pj|. sn, ppv and accuracy are then defined in equation . generally, a high sn indicates that the predicted complexes have a good coverage of the proteins in the benchmark complexes. high ppv values indicate that the predicted complexes are likely to be true positives.

  sn=∑imaxjti,j∑i|bi|,ppv=∑jmaxjti,j∑j|∪|,accuracy=sn*ppv 

performance comparison with existing methods
we compared the performance of plw with  <dig> state-of-the-art methods on dip data. these methods are: mcode  <cit> , rnsc  <cit> , mcl  <cit> , dpclus  <cit> , cfinder  <cit> , cmc  <cit> , rrw  <cit> , coach  <cit> , spici  <cit> , sr-mcl  <cit>  and clusterone  <cit> .

we set the parameters of each algorithm to the authors' recommended values. for instance, the inflation parameter in mcl was set as  <dig>  on dip data  <cit>  and the minimum cluster size of rrw was set to  <dig>  <cit> . please note that we removed predicted clusters of two or less proteins. for a fair comparison, we did not supply biological data to algorithms that supported them  as most of these techniques focused on the topological properties of ppi networks.

f-measure and geometric accuracy
plw achieved the highest f-measure compared to the other algorithms across all four combinations of the two ppi datasets and the two gold standards for protein complexes. in figure  <dig>  we present the f-measure and geometric accuracy of various algorithms on the dip dataset evaluated using the cyc <dig> benchmark. plw attained the highest f-measure of  <dig> , which is  <dig> %  and  <dig> % higher than the next highest of  <dig>  for rrw and  <dig>  for coach, respectively. meanwhile, plw achieved a higher level of precision than other methods, indicating that more of our predicted protein complexes can be matched to benchmark complexes.

plw's geometric accuracy is the highest as depicted in figure  <dig> as a result of its high ppv and respectable sensitivity scores. the high ppv means that our method has a high proportion of correctly identified proteins in each predicted protein complex, which is consistent with the precision as analysed above.

ncb
ncp
note that predicted clusters of two or less proteins are removed. for comparison, the average size of complexes in the cyc <dig> benchmark is  <dig>  proteins.

in addition, the comparison results on the other  <dig> combinations  are shown in additional file  <dig> 

benefits of seed selection strategy
in this experiment, we validate our hypothesis that selecting proteins in dense regions that have high degree centrality as seeds for expansion increases the precision of our algorithm. in addition, we apply our seed selection strategy to three other algorithms, namely, coach  <cit> , rrw  <cit>  and clusterone  <cit> . by default, coach and rrw use every protein as a seed for expansion, while clusterone keeps using the next unused protein seed with highest degree. for rrw, we show results using both a minimum cluster size of  <dig>  and  <dig> . this is justified since  <dig> %  of gold standard complexes in the cyc <dig> catalogue are of size  <dig> and  <dig> 

for coach, rrw and clusterone, their f-measure is  <dig> ,  <dig>  and  <dig>  when λ is set as  <dig> , as shown in figure  <dig>  they have even higher f-measure when λ is set as  <dig> , e.g.,  <dig>  for coach,  <dig>  for rrw and  <dig>  for clusterone. without the seed selection strategy, the f-measure for coach, rrw and clusterone is  <dig> ,  <dig>  and  <dig> , respectively. it is evident that our seed selection strategy enhanced the performance of existing algorithms for predicting protein complexes.

for the dip dataset, plw generates  <dig>   <dig>   <dig> and  <dig> clusters under λ =  <dig> ,  <dig> ,  <dig>  and  <dig>  respectively. with more seeds available as starting points for expansion into cores, the number of possible clusters increases thus explaining this trend.

we recommend the use of λ =  <dig>  for plw. this value yields high precision while allowing a reasonable rate of recall, as quantified by the peak in f-measure in figure  <dig>  this value also works well for other ppi datasets, as evidenced by the peak in f-measure at λ =  <dig>  for all three datasets in figure  <dig> 

usefulness of common neighbour similarity
common neighbour similarity is important for plw's prediction of protein-complex cores, since it enables plw to select protein pairs with high functional similarity.

our experiment in figure  <dig> showed that picking protein pairs  with high common neighbour similarity yielded significantly higher functional similarity when compared to randomly picking the same number of protein pairs. this demonstrates the effectiveness of common neighbour similarity in estimating functional similarity. functional similarity was quantified using gene ontology  semantic similarity  <cit> , with the terms in the biological process  sub-ontology as it is the most informative   <cit> .

co-localisation scores of predicted complexes
as the gold standard sets are incomplete  <cit> , unmatched complexes could be undiscovered complexes. colocalisation scores quantify the quality of these complexes by measuring the percentage of proteins in each complex that share a common localisation annotation  <cit> . this utilises the fact that a protein complex can be formed only when its constituents are found in the same cellular component  <cit> . plw achieved high average co-localisation scores of 73% and 80% for the dip and combined <dig> datasets respectively, showing that it is able to detect biologically relevant protein complexes.

biological case studies
in this section, we conduct a qualitative analysis of the protein complexes predicted by our plw algorithm. plw was able to detect  <dig> benchmark complexes in the cyc <dig> gold standard with better accuracy than existing methods.

in figure  <dig>  we show two examples that were detected with higher accuracy by plw. figure  <dig> shows two overlapping complexes, h+-transporting atpase  and h+-transporting atpase . the complex predicted by plw consists of  <dig> proteins, covering  <dig> proteins in the benchmark complex. the next best match was by clusterone with  <dig> proteins, which did not recover the proteins ydl185w and ylr447c.  shows our predicted complex that matches "dna replication factor c complex " in cyc <dig> . the next best match was generated by rrw, whose predicted complex has  <dig> proteins and recovers  <dig> proteins in the real complexes . additionally, the two protein complexes detected only by plw were the box c/d snornp complex  and isw1b complex , which were matched with neighbourhood affinity scores of  <dig>  and  <dig> , respectively.

plw is able to recover the complexes with high accuracy, as shown in figure  <dig>  therefore, we believe that plw will be useful to biologists in predicting high quality protein complexes for further investigation.

CONCLUSIONS
as experimental protein complex detection remains a challenging problem, it is important to develop accurate computational approaches for predicting protein complexes from ppi data. the continued explosion in the volume of available ppi data demands more efficient and more precise algorithms. we used our plw algorithm to demonstrate three techniques, which can also be applied to improve the performance of other protein complex prediction algorithms and even general graph clustering algorithms. these techniques are:

 <dig>  a precise and efficient probabilistic local walks  algorithm for mining protein complex cores. plw attained the best f-measure , with an improvement of  <dig> % over the next best method amongst the  <dig> methods evaluated. it carries out probabilistic local walks to mine cores efficiently in o|v|log|v|+|e| time. this efficiency renders it competitive on larger ppi networks  on which other algorithms are unable to compete.

 <dig>  seed selection strategy. we developed a scoring strategy that finds important seeds to expand without excluding important proteins or including too many harmful seeds. this strategy yielded increased precision for plw, coach, rrw and clusterone.

 <dig>  common neighbour similarity. we formulated a measure to estimate the functional similarity of two proteins using their common neighbours. we found that common neighbour similarity is highly correlated with functional similarity, rendering it useful in detecting complexes with functional homogeneity. in addition, common neighbour similarity can be applied in situations where functional information is not readily available.

for future work, we are exploring how to automatically determine a suitable value for the threshold λ in the seed selection strategy to increase its applicability to the large range of agglomerative clustering algorithms. we are also studying the mathematical properties of plw's novel walking method.

the techniques we conceived will be useful for researchers in graph clustering. in particular, plw could be applied to cluster other biological networks, such as metabolic networks and gene regulatory networks. in addition, plw could be parallelised to tackle massive networks. we will explore such applications as our future work.

competing interests
the authors declare that they have no competing interests.

authors' contributions
dlkw, xll and mw conceptualised and designed the method, and drafted the manuscript together. dlkw was responsible for the implementation and carried out the experiments. jz and skn participated in discussion as well as revision of the draft. all authors read and approved the manuscript.

supplementary material
additional file 1
performance of algorithms on various datasets.pdf. this file contains four figures comparing the algorithms' performance on the following datasets and gold standards:  <dig>  dips ppi dataset against cyc <dig> gold standard,  <dig>  dips ppi dataset against newmips gold standard,  <dig>  combined <dig> ppi dataset against cyc <dig> gold standard and  <dig>  combined <dig> ppi dataset against newmips gold standard.

click here for file

 acknowledgements
we thank the three anonymous reviewers for their valuable comments and suggestions, and are grateful to derek khu for his comments on the manuscript. this work was supported by the institute for infocomm research, agency for science, technology and research , singapore, and by a grant from the ministry of education, singapore .

declarations
publication of this article was funded by the institute for infocomm research, agency for science, technology and research , singapore.

this article has been published as part of bmc genomics volume  <dig> supplement  <dig>  2013: twelfth international conference on bioinformatics : computational biology. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcgenomics/supplements/14/s <dig> 
