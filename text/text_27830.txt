BACKGROUND
the structural organization  and associated functional role  of electroencephalographic  oscillations are still far from being completely understood. oscillatory activity can be separated in background  and transient burst pattern activities. the background eeg is constituted by regular waves, whereas bursts are transient and with higher amplitudes: cortical dynamics do not follow continuous patterns, but instead operates in steps, or frames  <cit> . these bursts are organized local activities, most likely to be representative of local synchronies. synchrony among oscillating neural assemblies is a plausible candidate to mediate functional connectivity, and therefore to allow the formation of spatiotemporal representations  <cit> . oscillatory bursts should consequently play a specific functional role, distinct from ongoing background eeg activity . they are correlated with reciprocal dynamic connections of neural structures, which can be considered as distributed local networks of neurons  <cit> . together, distant neural assemblies are involved in collective dynamics of synchronous neuronal oscillations  <cit> , taking the shape of oscillatory patterns.

eeg activities are usually analyzed using either time or frequency representations of event related potentials , which can be interpreted as the reorganization of the spontaneous brain oscillations in response to the stimulus  <cit> . erp can be further seprated into two sub-groups: event related synchronization , and similarly event related desynchronization . the simplest hypothesis concerning the origins of erp would be additive: following the stimulus onset, in each trial, a transient change of amplitude is observed in a given frequency range, independent of the ongoing signal . however, other competing theories could also explain the erp patterns. the stimulus could induce a change in the phase of ongoing oscillations, without power changes. if the phases of all trials were aligned or dialigned, then after averaging ongoing oscillations an ers or erd pattern would arise: this is the so-called theory of phase resetting . another recent theory explains the generation of event related potentials as a consequence of a baseline shift of ongoing activity  <cit> . confronting these three competing theories with experimental facts seems necessary in order to understand the basis of neural dynamics.

it should be noted however that all the above erp theories are interested in the study of averages of electrophysiological signals in the time domain. erp were observed in several studies to have visible outcomes even in single trials  <cit> , especially observable when using wavelets  <cit>  which represent the signal with optimal time-frequency resolutions. local oscillatory events are present in single trials, appearing as transient oscillatory synchronizations  or transient oscillatory desynchronizations , corresponding to the presence or absence of a coherent neural assembly  <cit> . if the additive theory was right, ers and erd could be assumed to be the outcome of an average of tos and tod events respectively – if not , they would have an independent meaning, and it would be even more worthwile to study them. we are not interested here in an averaged outcome , because the brain itself usually processes information in single trials.

instead of using average approaches, one could try to analyze directly single trials in the time-frequency plane. however, in the case of time-frequency planes, hundreds of thousands of coefficients are used to represent a signal; and when a large set of signals is to be compared, the complexity of simple graphical matching methods becomes intractable. analyzing directly this large amount of information leads to complex computations, and either approximate or over-fitted models . we instead advocate a sparsification approach. the main purpose of sparsification approaches is to extract relevant information within redundant data. sparse time-frequency bump modeling, a 2d extension of the 1d bump modeling described in  <cit> , was developed for this purpose: sparse time-frequency bump modeling extracts the most prominent bursts within a normalized time-frequency map, by modeling them into a sum of parametric functions . bump modeling is however not the only possible sparsification approach. the ridges  <cit>  of wavelet maps can be extracted; but while they are sparse, their biological interpretation is not trivial. multiway analysis  <cit>  allows the simultaneous extraction of multi-dimensional modes, and can be applied to time-frequency representations of electrophysiological signals ; however it does not allow the independent analysis of transient oscillations. wavelet packets  <cit>  allow the computation of very sparse time-frequency representation ; however, because they provide inaccurate time-frequency locations of oscillatory contents, the use of discrete wavelets is not appropriate for signal analysis – especially for electrophysiological data. finally, the closest method to bump modeling would be matching pursuit  <cit> , which associates a library of functions to a signal – the signal is thereby decomposed into a set of atomic functions, each with specific time-frequency properties . other more straightforward attempts were also made at extracting specific atoms of eeg oscillations, like for instance the extraction of narrow band alpha peak epochs  <cit> , or the analysis of a specific time-frequency area , but with limitations due to an a priori defined time-frequency area or frequency range  <cit> . as a comparison, sparse bump modeling allows an automatic broadband modeling of time-frequency atoms, each of them interpreted as transient local activities of neural assemblies .

sparse time-frequency bump modeling was first applied to model invasive eeg , recorded from rats olfactory bulb during a go-no go olfactory memory task  <cit> . afterwards, it was used to investigate several aspects of brain oscillatory dynamics: scalp eeg data from patients with early stage of alzheimer's disease  was also successfully analyzed and classified using bump modeling  <cit>  with a high accuracy . the model was also applied to represent simultaneously time-frequency and space information using a sonification approach  <cit> . time-frequency space information was then exploited using a synchrony model: oscillatory burst extracted with bump modeling were used to determine large-scale synchrony – the stochastic event synchrony . applied to eeg recorded from early ad patients, ses extracted significant differences with age-matched control subjects. these differences were complementary when compared against  <dig> other synchrony measures  <cit>  . finally, oscillations of steady state visual event potential epochs were extracted  using sparse bump modeling, and an increase of large-scale synchrony measured using ses  <cit> . this confirms that sparse bump modeling has a wide range of possible applications, from feature extraction to signal modeling and analysis.

however, due to its complexity, it was until now difficult for researchers to reproduce our results: only one external group  <cit>  tried to reproduce results obtained with bump modeling on alzheimer's disease modeling . therefore we present now a toolbox  for sparse bump modeling. the software extracts transient oscillatory events . we will first describe the method procedure, then demonstrate the toolbox functions with a toy signal. in appendix, we present some details of the improved adaptation and matching methods implemented in the toolbox.

implementation
method procedure
butif toolbox follows four steps :  the signal is first wavelet transformed into time-frequency, then the time-frequency map is z-score normalized;  the map is described by a set of time-frequency window, then parametric functions are adapted within these windows, in decreasing ordered of energy.

the first steps are executed with matlab, while the last are executed with a stand-alone software. note however that the stand-alone software can be directly called by matlab: the whole package can be run from matlab.

wavelets
wavelets , especially complex morlet wavelets  <cit> , have already been widely used for time-frequency analysis of eeg signals  <cit> . complex morlet wavelets ϑ of gaussian shape in time  are defined as:

   

where σ and f are interdependent parameters, the constraint 2πft >  <dig>  the wavelet family defined by 2πft =  <dig>  as described in  <cit> , is adapted to the investigation of eeg signals. this wavelet has positive and negative values resembling those of an eeg, but also a symmetric gaussian shape both in the time and frequency domains – i.e. this wavelet locates accurately time-frequency oscillations both in the time and frequency domain.

we scale complex morlet wavelet ϑ to compute time-frequency wavelet representations of the signal x of length t:

   

where s, the scaling factor, controls the central frequency f of the mother wavelet. the modulus of this time-scale representation can therefore be used as a positive time-frequency spectrogram, which we will note cx, a time-frequency matrix of dimension t × f, where f scales are used to compute appropriate frequency steps .

z-score
the time-frequency spectrogram is normalized depending on a reference signal. the reference signal is used to determine the usual distribution of the time-frequency map: bump modeling will extract activities with transient amplitudes above or below this usual distribution . the reference signal r of dimension u is wavelet transformed into a spectrogram cr of dimension u × f. the average mf =  and standard deviations sf =  are computed from cr for each of the f frequencies of the matrix cr. for instance, at frequency i:

   

and

   

the z-scored map zx is obtained through normalization of the wavelet map cx using these values:

   

in event related studies, the reference signal is usually a signal recorded during a rest period, just before the stimulus period . in rest condition, the reference signal can be either the signal itself ; or a statistic derived from a group of signals . the minimal number of samples of the reference signal should be determined with regards to the lowest frequency range , so that a sufficient number of cycles is present – otherwise, the reference statistic would not be significant.

windowing
the z-scored map is analyzed in a time-frequency area of interest defined by the user, with lowest frequency fm and highest frequency fx. the z-scored map zx is described by a set of windows ω with f ∈ , t ∈  the position on the general time-frequency map respectively in frequency and time. each ω has its own dimensions h × w , determined depending on the time-frequency resolution at the window's central frequency. the dimension w is determined to have a duration of a fixed  number of cycles . the dimension h is determined as the ratio of w to the time-frequency resolution . the limit bt is determined so that bt = w/ <dig> for the windows at the frequency fm . in other words, the left and right limits of the modeled area are vertical, and constrained by the lower frequency so as to allow the modelisation of bumps centered at these limits  <cit>  .

parametric functions
we use half ellipsoid functions  to model the normalized time-frequency map. the half ellipsoid boundaries are defined as:

   

where y and x are respectively the time and frequency position of the adaptation window on the time-frequency map , f and t are respectively the time and frequency position of the bump on the time-frequency map, h and w are respectively the height and width of the bump, and a is its amplitude. all points lying inside these boundaries are non zero; outward points have null values. this is expressed by:

   

where λ is a small positive value .

hence the adaptation error to be minimized will be:

   

adaptation is performed using a combination of first and second order gradient descent . more details on the adaptation procedure can be found in  <cit>  and in the appendix.

c++ implementation
the stand-alone software was implemented in c++ for better speed, and higher stability when manipulating large data sets .

exchange files between matlab and the c++ software  store data as integers. float or double precision real numbers are recoded into integers , because matlab and c++ builder appear to use differing symbolic representations. the wavelet maps are implemented as objects, with time-frequency contents partitioned into windows using a chain list object. each window is sorted using an energy function, based on the matching procedure described in the appendix. the modeling procedure selects iteratively the best window, performs the parameter adaptation, re-computes the energy of neighboring windows, and finally calls a method performing a fast sorting of the windows. in the end, this procedure avoids redundant computations: the set of window energy is computed once and for all at the beginning of the modeling. the adaptation itself is applied to bump functions, implemented as virtual methods. the algorithm uses the step gradient described in the appendix, the bfgs algorithm part was re-coded from a numerical recipes original code  <cit> ).

butif toolbox
the toolbox is separated in two parts: one is a stand-alone software  developed using borland c++ builder  <dig>  this standalone software is used to model bumps from wavelet maps. it needs a windows xp environment to run. the second one is a set of matlab m-files that perform the wavelet transform and call the software. the resulting bump model can be displayed using a matlab function . the toolbox uses several parameters, they are detailed both in the matlab files  as comments, and on the website  <cit> . most parameters are related to the wavelet transform itself . let us explain here those related with bump modeling: z-score offset, window dimension, and convergence/pruning criterion.

z-score offset
the first step of bump modeling is wavelet time-frequency representation. afterwards, the z-score normalization is applied to the map. we will refer to the positive z-score values as transient oscillatory synchronization  components: if the signal is recorded during a stimulation, these oscillatory peaks are likely to be constituent of ers , and probably carry specific information related to the stimulus . if the signal is recorded in pre-stimulus period or in rest condition, these oscillations are representative of organized oscillatory bursts. z-score returns values in ℝ, but bump modeling only accepts values in ℝ+ as inputs. in order to model tos, we reject the negative components of the map with a threshold, the z-score offset ϕ. the thresholded map  is obtained with:

   

usual values of ϕ are in the  range, it corresponds to the proportion of ongoing activity which will be rejected . for very clean signals, a low z-score is possible, for noisy signals, the threshold should be higher. the parameter 'offset_val' represents ϕ.

we will refer to the negative z-score values as transient oscillatory desynchronization  components: if the signal is recorded during a stimulation, these oscillatory peaks are likely to be constituent of erd , and probably carry specific information related to the stimulus. if the signal is recorded in pre-stimulus period or in rest condition, these oscillations are representative of unusually disorganized oscillatory bursts. these negative z-score values in ℝ- can be extracted into a threshold map :

   

in order to model , the parameter 'offset_val' must be given the value - <dig> in the model header.

window dimension
wavelets have a specific time-frequency resolution depending on their central frequency  <cit> . this resolution corresponds to their precision in time and frequency. consequently, the representation of a high frequency transient activity will be narrow in time and spread in frequency – conversely for low frequency transient activities. this is taken into account when establishing the adaptation windows. the dimension h × w  of the windows ω depends on the time-frequency resolution at the window's central frequency: the dimension w is determined to have a duration of a fixed number of time periods, and the dimension h is determined as the ratio of w to the time-frequency resolution . this dimension should always be determined to fit the average size of transient synchrony events, but is adaptive with frequency . the parameter 'header.cote' in the toolbox represents this fixed number, i.e. the number of oscillation one wishes to model. it was observed that tos last around three to four cycles   <cit> . negative events  are shorter in duration, lasting approximately two time periods. the parameter 'header.cote' should usually be four to model tos events; and two to model tod events . however, one can change these parameters if he wishes to study its relevance. in this case, take into consideration that windows encompassing too many cycles would attempt to model several events with one bump; whereas a too short window would split the map in many unncessary atoms.

convergence and pruning
we first design a model with the largest number of bumps – within a reasonable computation time. to that effect, the fraction of the total intensity of the map modeled by a given bump is computed:

   

this value is compared with a threshold ft: when three consecutive bumps have f <ft, modeling stops. the parameter 'header.limit'  represents this threshold.

a tradeoff must be performed between accuracy and relevance : if the number of bumps in the model is too low, the latter will not be accurate; if it is too large, irrelevant non-organized information from the background eeg will be modeled. when modeling is finished using the above termination criterion, we use a pruning strategy. the matlab program 'prune_model.m' can be used to perform this pruning. pruning can be performed with four options: pruning to remove only abnormal bumps ; pruning to remove bumps with a threshold ft <dig> ≥ ft; pruning to remove all bumps after the n first modeled ; or pruning to remove all bumps after the n first in time order. users can combine these options, in order to obtain a clean and accurate representation.

RESULTS
here we will demonstrate how this toolbox works using a toy signal, and illustrate the use of the three main parameters . all files  can be downloaded on the bump toolbox project website. the toy signal  is an eeg signal taken from one channel recorded in rest eyes closed condition . this demonstration can be reproduced by launching demo_zscore under matlab  <dig>  . note that due to border effects of the wavelet transform,  <dig> msec are automatically rejected on both sides of the wavelet map by the toolbox prior to bump modeling – hence only one second was analyzed in the following examples.

z-score offset
we vary the parameter 'offset_val' in the  range to show its effect on modeling . the resulting models  are in the folder 'result demo_zscore). obviously, a too permissive z-score offset  will introduce strong bias in the model.

using the parameter offset_val = - <dig>  the negative components  can be modeled . as illustrated on the figure, the negative events are even more transient, and needs usually more bumps to be properly represented.

window dimension
we introduced above the usual limits for the window dimension. we will illustrate here the effect of this parameter. we again modeled the negative components ; but this time instead of using the adequate window dimension parameter  we used too large windows . in this condition, the minimized error e will be lower when two or more events are modeled by one bump only .

convergence and pruning
the results of demo_zscore are shown with  or without pruning . the first model is performed with a limit ft =  <dig>  without pruning, the second model is pruned with a fixed number of bumps .

CONCLUSIONS
the butif toolbox allows the extraction of time-frequency oscillatory events. whatever theory  would best explain erp, extracting transient oscillations in single trials is always relevant: if erp are due to a change of amplitude, more transient oscillations should be observed. if instead a phase shift of the signal is observed, then the transient oscillations position will change both for transient oscillations an background eeg; combined with changes in the number of these oscillations in case we admit the theory of baseline shifts. contrary to averaging studies, using sparse time-frequency bump modeling, analyzing the amplitude, number, or alignment of tos and tod becomes feasible in single trials. in other words, whatever the generation hypothesis, bump modeling allows a better understanding of the mechanism behind the presence of an erp, because it facilitates the independent analysis of transient oscillations in single trial, which provides complementary information. the idea is not to neglect the information of ongoing activity, but instead to allow a separate study of transient oscillations on one hand, and ongoing activity on the other hand. in the end, even the presence or absence of erp is not relevant, as the analysis of transient synchronizations and desynchronizations can be relevant even in rest conditions . we stress again that bump modeling is a method well suited in order to study the characteristics of transient oscillations, and should not be confused with erp averaging.

this approach has already provided new insights in eeg and lfp signals , and will hopefully allow significant progress in the investigation of brain dynamics. nevertheless, although this toolbox is user-friendly and reasonably efficient, it is very dependent upon parameter settings. more specifically, one parameter is critical when the toolbox is used for applications such as ses  <cit> , classification  <cit> , or statistical analysis  <cit> : the pruning threshold. a visual inspection  will allow users to refine this parameter. automatic approaches to determine the best parameter are also possible. such an optimization is usually performed with an ad-hoc algorithm depending on the application: for instance, if the application is a classification, this parameter has to be estimated during the validation procedure. as another example, in  <cit> , we described an algorithm which can be used to optimize this threshold when event-related paradigms are used.

the software transforms a set of eeg signals first into a set of wavelet transforms , then into a bump model . the outcome is a set of parameters  stored in structured variable inside a matlab '.mat' file. this variable can be visualized  or used for statistics. this provides a better understanding of the structure of eeg oscillations . despite this toolbox provides many tools, some maintenance work will remain necessary in the future to improve and upgrade it. for instance, the choice of atom functions affects the modeling. we originally chose half ellipsoid for their sparsity ; but despite a dissymmetric 2d curve would have more parameters, it might better represent the dissymetry of wavelet representations . until now we obtained good results with half ellipsoids, but this does not mean that we might not find a better solution. using other curves is on the list of our future experimentations and developments for the toolbox. additionally, the pruning criterion, as explained above, is critical. it would certainly benefit from further investigations. new developments, however, will not be possible without interactions with users . hence, the current version only lays the foundation stone of a long-term project.

availability and requirements
project name: butif toolbox

project home page:  <cit> 

operating system: windows xp

programming language: matlab/c++ builder 2006

other requirements: matlab  <dig>  or  <dig>  with wavelet toolbox is necessary to run this package .

license: creative commons license  – anyone can use this software for academic applications providing they properly reference our work when publishing research results obtained with this toolbox .

any restrictions to use by non-academics: the software is restricted to non commercial applications.

authors' contributions

fbv developed the concept of time-frequency bump modeling during his ph.d., created the software, wrote the first draft of the paper, and created the first version of the website. js-c helped in debugging of the final version of the software, and for the preparation of the website . reviewed the draft of the paper. jd helped in the theoretical development of bump modeling. reviewed the draft of the paper. mm helped in the design of the website, was involved in the preparation of all illustrations. ac helped in the theoretical developments of bump modeling. reviewed the draft of the paper. all authors read and approved the final manuscript.

appendix
appendix a: improved adaptation
in the previous implementation of bump modeling  <cit> , we optimized all the bump function parameters  simultaneously . an improved adaptation can be obtained by optimizing the parameters stepwise, with a priority depending on the order of their derivatives. when comparing of the parameters derivatives , we observe that the term - <dig> is common to all these derivatives, multiplyed by a term in ℝ+: they will all have the same sign  <cit> . the slope of the adaptation will then be dependant on the multiplicands m applied to -2e: m =  <dig> for de/da; m is a positive value in  in numerator divided by a variable of order  <dig> for de/dh and de/dw; m is a positive value in  in numerator divided by a variable of order  <dig> for de/df and de/dt.

this would probably be working correctly with properly normalized parameters, however we are here adapting parameters of different ranges: a ∈  <cit> , while h and f ∈  and w and t ∈  with h and w usually >>  <dig>  therefore, the multiplicands corresponding to the three above case will be of the order m ∈ o in case , and m ∈ o in case  and m ∈ o in case . practically speaking, it means that the parameters adaptation should be performed stepwise . we improved the quality and speed of convergence by performing the following stepwise estimation of these parameters:

 <dig>  update h and w until both their derivatives are below a threshold tΨ.

 <dig>  update f and t until both their derivative are below a threshold tpos. if at anytime de/dh or de/dw becomes above tΨ, go back to  <dig> 

 <dig>  update only a, until its derivative is below a threshold ta. if at anytime de/dh or de/dw becomes above tΨ, go back to  <dig>  if at anytime de/df or de/dt becomes above tpos, go back to  <dig> 

the adaptation is still performed using the bfgs  <cit>  algorithm.

appendix b: improved window matching
in the previous version of bump modeling  <cit> , the best candidate window Ω was selected as:

   

because these windows are used to determine the initial condition of the function adaptation, finding the best suitable window is primordial. the new optimized method is more related to matching pursuit  <cit> , in that we will match the window content w with a prototype bump function ξw = ξ with fw = hw = h/ <dig>  xw, and aw the highest peak in the window:

   

for each window w, we compute the corresponding matrix Ξw of values of this prototype function. the best window is thus matched as:

   

where: denotes the frobenius inner product, and ||·||f indicates the frobenius norm. this generalize the matching criterion of matching pursuit methods to 2d data, with the difference that for bump modeling, high z-score has priority on best fit. therefore, contrary to matching pursuit, the product is not normalized by the norm of w.

supplementary material
additional file 1
all_in_one.zip. this file contains the butif toolbox  <dig> , including the stand-alone software, matlab package, demo files, sample data, and results of the demo. the 'documents' subfolder contains a manual .

click here for file

 acknowledgements
jordi solé-casals was supported by the departament d'universitats, recerca i societat de la informació de la generalitat de catalunya, and by the spanish grant tec2007-61535/tcm. monique maurice is supported by the jsps fellowship p- <dig>  justin dauwels is supported by the henri-benedictus fellowship from the king baudouin foundation and the baef. f.b. vialatte thanks pr. r. gervais  and pr. g. dreyfus  and collaborators  for their significant help in the early developments of the bump modeling methodology.
