BACKGROUND
microsatellites , also called simple sequence repeats  or short tandem repeats , are repetitive genomic sequence stretches with repeat unit lengths of 1â€“ <dig> nucleotides.

the high variability in the number of repeat units of many microsatellites in combination with the high reproducibility of results often make them the marker of choice when fine temporal and/or spatial resolution is needed. their high analytical power  made microsatellites one of the most widely used molecular marker systems in the last two decades  <cit> . genotyping of ms loci is usually performed by amplification of the repetitive sequence with primers positioned in more conserved flanking regions. however, the actual design of suitable flanking primers in unknown genomes still accounts for most of the handling time and resource requirements in ms marker design workflows, in particular when multiplex amplification of several loci simultaneously is aimed for.

in order to be most widely applicable, microsatellite marker design workflows should be flexible enough to accept data originating from different sources, such as whole genome sequences, sequences from repeat-enriched genomic libraries, or even est  data. the input data format can either be text files  or trace files obtained directly from the sequencer. a software tool for fast microsatellite marker design should ideally combine high throughput with high flexibility, enabling the user to work with the whole spectrum of possible data sources and to combine different analysis tools in user-definable workflows. while the software should provide the possibility to manually interact with the analysis process at any point, it should be able to perform a number of basic tasks automatically, e.g. base calling, vector and quality clipping, and assembly in case of de novo sequencing as well as repeat detection and flanking primer design. the workflow should be applicable to data sets of any size, from individual sequence reads to large genomic data sets. of great importance is the possibility to manually check and backtrack results of each analysis step, and to introduce changes at any point if required, e.g. shifting primer candidates by a few nucleotides based on sequencing quality information. last but not least, it should provide the functionality to aid the researcher in finding locus or primer combinations for multiplexing. although a couple of stand-alone software tools have been developed for automatic ms marker design , we found none that could satisfy all the above criteria. each of these tools has one or more of the following weaknesses: lack of redundancy checks, weak or inconsistent solutions for the repeat detection problem and lack of integration and interactivity. although, e.g., sat offers many of the demanded functionalities and the sat web interface makes it an attractive option, it requires more software dependencies to be fulfilled as a stand-alone tool. these include a database-service, a web-service for the interactive features, a unix/linux-based compute system capable to run the sat-scripts, as well as a number of third-party sequence analysis tools . the desired integrated features to trace back primer-pairs to sequence-trace-files was found implemented best in the troll package. disadvantages of the latter package concerning repeat detection and lack of integration of primer design, as discussed below, motivated the present work.

only two of the above mentioned pipelines, the troll module for the staden package and the sat pipeline, explicitly address the problem of marker redundancy  <cit> . in most cases, microsatellite markers are developed based on sequencing genomic shotgun libraries, which generally contain redundant sequence fragments. this increases the risk of developing redundant molecular markers if sequenced clones are uncritically treated as representatives of different genomic loci . the troll module of martins et al.  <cit>  addresses this issue by using the assembly functionality provided by the staden package to detect and assemble overlapping reads as unique contigs. this implementation, however, suffers from the problem that the information of just a single repeat detection step in the workflow is used for both, assembly of sequence reads and primer design for ms candidate loci . sat  <cit>  uses a similar approach but with an additional ssr detection step after assembling overlapping reads, an important improvement as ssr detection for the purpose of masking for assembly and for primer design require different criteria.

another weakness of currently available ms marker design pipelines is the repeat detection. while detecting perfect repeats is a relatively straightforward task, which is implemented satisfactorily in several tools, detecting imperfect repeats is a more complex problem and several repeat detection tools perform poorly in this regard. however, detecting imperfect repeats is crucial in microsatellite design workflows for several reasons. first, imperfect repeats can seriously impede the assembly of unique and unrelated contigs which can cluster together if they consist of long and highly similar tandem repeats with only short non-homologous flanking regions. this artifact, which typically arises in repeat-enriched genomic libraries, is avoided by masking repetitive regions during assembly. second, imperfect ms markers are more common than perfect ones and often represent the major proportion of the markers reported in molecular ecology notes . since imperfect mss may suffer from a higher degree of detectable homoplasy than perfect repeats  <cit> , it is more difficult to find a simple and appropriate mutation model for them. if, however, a high degree of polymorphism is more important than assumptions on the underlying evolutionary model, imperfect microsatellites are well suited and should thus be correctly recognized in a modern ms design workflow. of the existing ms marker design pipelines cited above, only ssr primer , msatfinder  and sat  can detect imperfect repeats, however only with a limited accuracy. finally, even if primers should exclusively be designed for perfect mss, their reliable automatic detection requires that perfect and imperfect mss are successfully identified and distinguished by the software, avoiding the risk of choosing perfect subsatellites of larger imperfect satellites as markers.

the novel repeat detection program phobos <cit>  has been chosen for the staden pipeline since it implements a fast, efficient, and highly accurate algorithm to scan molecular sequences for perfect and imperfect tandem repeats without the need to specify a repeat pattern library. its high accuracy stems from an exact, i.e. non-probabilistic, search algorithm which detects all tandem repeats that match user-defined repeat characteristics. furthermore, phobos can search for tandem repeats with a unit size of more than  <dig> bp, which in the stamp modules implies that primers can also be designed for minisatellites and tandem repeats with even longer units. search settings and the output format of phobos can be adjusted in a flexible manner, making it an ideal multipurpose tandem repeat search tool .

another major incentive motivating our work was the lack of flexibility and interactivity in most ms marker design tools, which simply implement a rigid and for the most part strictly linear workflow. however, an interactive workflow control can improve the usability at several steps during the design process. the troll module for the staden package  <cit>  demonstrated the power of an approach that uses a modular sequence analysis software as a backbone for a special purpose application, realized by adding some specialized extensions to the basic workflow. their module integrated the repeat detection tool troll  into the pregap module of the staden package, making it possible to define workflows that combine base calling, vector and quality clipping as well as assembly of sequencing reads with repeat detection. finally, the results from the pipeline were used in a stand-alone primer design program wrapping primer <dig> for designing flanking primers.

besides ignoring imperfect repeats, the integration of troll into staden is further limited in its usefulness because repeat detection can only be carried out once as part of the pre-processing pipeline for sequence assembly, i.e., no post-assembly repeat detection can be performed. however, the purposes of identifying repeats for assembly and designing flanking primers differ fundamentally. whereas for masking tandem repeats, a high imperfection should be allowed and all tandem repeats should be searched for, the search criteria for primer design are usually more restrictive with a focus on more perfect repeats with user-defined motifs and length-characteristics.

furthermore, in the troll module, the primer design process was implemented as a stand-alone wrapper script for primer <dig>  an unsatisfying solution concerning integration. thus, the user has no possibility to interactively validate the primers in the context of their contigs or sequencing reads. this step would be necessary to manually check, e.g., sequence coverage and quality in the primer binding region, or to perform multiple rounds of primer design with the aim of incrementally adding primer candidates from these rounds to a list of most promising primer candidates.

in view of the major drawbacks of existing stand-alone ms marker design tools we decided to develop a set of extension modules for the staden package  <cit>  for a flexible, convenient, and efficient development of ms markers. the staden package provides the functionality for data input from multiple sources, base calling, vector and quality clipping, assembly with redundancy checking, interactive contig editor, possibilities to manually and programmatically tag selected regions. our modules extend staden's functionality by the following features:  integration of the microsatellite search tool phobos,  independent detection of microsatellites for assembly and marker design with different search parameters,  more flexible integration of repeat detection and primer design steps which can now be performed in an iterative process allowing the user to repeat design steps without having to go through the complete workflow again,  design of ms markers optimized for multiplex pcr. these features are partly visualized in the newly implemented workflows of stamp depicted in fig.  <dig> 

in order to improve upon an important weakness of the staden package for such applications, namely the difficult programmatic handling of in-memory gap <dig> databases, we also implemented an extension providing the possibility to store sequence features  in a more transparent manner in sqlite  <cit>  databases, which allows for an easy exchange and archiving of data in a more common and more flexible file-format compared to the gap4-data.

implementation
all extensions described below were implemented as tcl-modules following the conventions used in the internal modules of the staden package.

phobos module for pregap â€“ detection of tandem repeats for assembly
our first extension is a tcl-module integrating the repeat detection tool phobos into the staden pre-processing tool pregap. it extends the existing pre-processing pipeline by a tandem repeat detection step. the user has full control over the phobos search parameters and detected tandem repeats can be filtered according to user preferences in the module. tandem repeats that pass the filter are added as tags to the experiment files for subsequent processing steps.

module for gap4
after the sequence pre-processing step, the experiment files, which include the information on repetitive regions, can be used for the assembly in the gap <dig> module of the staden package. when using the "normal shotgun assembly" option, the tagged repeats can be masked out. either all experiment files or a subset of them can be used as input for the assembly process. after assembly, the individual contigs can be viewed using the contig editor window of gap <dig> with tagged regions being marked. if the project started from trace files, the individual traces can even be displayed together with the contigs.

phobos module for gap <dig> â€“ detection of tandem repeats for primer design
on the basis of assembled contigs, a tandem repeat search can be invoked with search parameters independent of a previous search . information on selected tandem repeats can be saved in different forms that can be accessed within staden in later analysis steps.

module for gap <dig> â€“ designing flanking primers
this module integrates primer <dig> into gap <dig> and enables the finding of pcr primer pairs flanking any user specified tag in the gap <dig> database. even though our work focuses on designing primers for tagged tandem repeats, the module was developed with a more general applicability in mind in order to make the functionality of designing flanking primers available for all tagged features in the database/experiment files, see fig.  <dig>  in this module the user is offered a number of options to choose primer target regions and primer design parameters. the user can specify whether the primer pairs should flank just a single tandem repeat or several tandem repeats for a single pcr product.

after completion of a primer <dig> run, a table listing the best primer pairs for each contig is being displayed. by clicking on rows of this table, an instance of the contig editor is opened showing the contig corresponding to the primer pair that has been tagged. check boxes allow the user to manually select or deselect primer pairs for individual contigs . fig.  <dig> gives an example of the combined view of repeat segments, flanking primers, and according trace-files. subsequently, all checked primer pairs can be written either into the gap <dig> database, into experiment files, or an sqlite database. upon completion of manual checks, the list of selected primer pairs can be exported into a tab delimited text file, useful for e.g., ordering primers.

module for gap <dig> â€“ selecting primer combinations for multiplex pcr
this module allows the user to search for primer pair combinations which could be used in a multiplex pcr experiment. as input, the module uses a list of candidate primer pairs, which in general come from a previous primer design step. fig.  <dig> shows the program dialog for this. to search for compatible primer pair combinations, a score matrix is calculated by aligning all primers with each other. additionally, blast searches of primers against sequences from either the gap <dig> database or a user specified fasta file can be performed, to check for a potential cross-hybridization among different loci and prevent the inclusion of primers that may bind to non-target loci. if the free statistical computing software r  <cit>  is installed, the results of a cluster analysis of primer pairs based on their alignment scores can be visualized. the tree image created using r shows the compatibility between different primer pairs: pairs within near branches are more compatible in a pcr-multiplex, than pairs on more distant branches. the tree is based on a hierarchical cluster analysis of primer-pair alignment scores, calculated on both, the forward and reverse complement strands. the created primer sets can be written as tags into the gap <dig> database, experiment files or an sqlite database. it is also possible to export the lists as tab delimited text files.

sqlite module for gap <dig> â€“ storing tagged features
with this module it is possible to store analysis results in sqlite databases. all results created with the other modules listed above  can  be written into an sqlite database, as depicted in fig.  <dig>  this adds a transparent alternative to storing features in experiment files or in-memory databases of the gap <dig> module. a data transfer between the in-memory gap <dig> database and sqlite databases is possible in both directions. furthermore, features from the sqlite tables can be added to staden experiment files and can be exported as tab-delimited text. a number of further methods to manipulate sqlite databases through a gap <dig> interface have been implemented

installation
the stamp extensions can readily be added to an existing installation of the staden package by extracting the stamp archive into the staden home folder. precompiled stamp archives that contain all necessary binaries  are available for the windows, linux, and macos platforms. the archives also include documentation for each of the extension modules in pdf and html format as well as tutorials.

RESULTS
the pipeline was tested in three microsatellite marker design projects, described in detail in leese et al.  <cit> , gÃ¤bler et al.  and pÃ¶hlmann et al. . table  <dig> summarizes these results in terms of primer yield.

lab test serolis paradoxa
microsatellites were enriched using the reporter genome protocol  <cit>  with dna from drosophila melanogaster and mus musculus as enrichment templates  <cit> . a short-insert genomic library was created, of which inserts from  <dig> clones were sequenced. using the gap <dig> normal shotgun assembly algorithm and allowing a mismatch percentage of 10% in the flanking regions we found  <dig> redundant inserts. for the remaining  <dig> unique inserts we searched for microsatellites with a percentage perfection â‰¥ 95% using phobos. for  <dig> appropriate loci, primer pairs were automatically developed using primer <dig>  twenty of the  <dig> primer combinations yielded distinct pcr products , which is comparably high. these were analysed for polymorphisms on an abi3130xl sequencer. genotyping was performed using the software genemapper  <dig>  . six of the  <dig> loci were rejected from analysis due to artifactual allele patterns or unreliable genotyping. overall success of primer design was therefore as high as  <dig> %.

lab test phaeocystis antarctica
total dna was isolated from p. antarctica . nuclear dna was purified by ultracentrifugation through a caesium chloride-ethidium bromide density gradient  <cit>  and used to create a microsatellite-enriched library, following a slightly modified protocol based on  <cit> . in total  <dig> clones were directly sequenced,  <dig>  contained microsatellite motifs. in eight cases, two inserts overlapped with each other. thus, altogether  <dig> non-redundant clones were used for marker design. repeat detection was performed using a minimum perfection of 85% in phobos. for  <dig> loci, more than one primer set was automatically designed using primer <dig>  for the majority, only the theoretically best primer set was used for the evaluation. in total,  <dig> primer sets were tested and pcr products were obtained for  <dig>  yielding usable pcr products in  <dig> loci .

lab test nacella magellanica and n. deaurata
microsatellite enrichment was conducted as described above  with dna from mus musculus as enrichment template. for n. magellanica  <dig> redundant inserts were found in  <dig> sequenced clones, allowing a mismatch percentage of 10% in the flanking regions during assemby. the remaining  <dig> unique inserts yielded  <dig> suitable loci, for which primers were designed using the multiplex option in primer <dig> with a tm of 55Â°c. for n. deaurata  <dig> redundant inserts were found in  <dig> sequenced clones. the remaining  <dig> unique inserts resulted in  <dig> suitable loci. also here the multiplex option was applied with a tm of 55Â°c. for n. magellanica,  <dig> of the  <dig> loci produced distinct pcr products , for n. deaurata  <dig> out of  <dig> .

CONCLUSIONS
we developed a set of extension modules to the staden package to facilitate the process of microsatellite marker development: integration of phobos in gap <dig> and pregap, integration of primer <dig> in gap <dig>  an interactive primer-analysis for multiplex-pcr, and full support of data-storage in sqlite- and gap4-databases.

workflows using these extensions can take full advantage of the rich functionality of the basic staden package including the possibility to import data from a variety of sources, to visualize data as well as results, and to export results into several formats. the mentioned alternative tools for ms-design may show sufficient performance and convenience, depending on the demands and preferences of the project and/or the user. the major advantages of stamp over other currently available tools that serve the same purpose are the consequent integration of state-of-the-art repeat detection and flanking primer design tools into a single, flexibly customizable and interactive analysis environment. the software was successfully used in three laboratory tests, demonstrating that microsatellite marker design led to a high proportion of useful primer pairs. furthermore, the usage of the new modules strongly increased the efficiency of the process of marker design.

availability and requirements
the software can be obtained via ftp-download from . login as user "anonymous" and with a pseudo-password like me@hotmail.com, change directory to "pub", then to "edv". download the file: stamp-vx.zip, where x is the current version number.

project homepage:  and click "software".

operating system: platform independent

programming language: tcl

other requirements: none/staden package

license: openbsd for the stamp module.

phobos is copyright protected and free only for academic users.

any restrictions to use by non-academics: for phobos a license needs to be obtained from the author cm.

authors' contributions
lk developed the extension modules under the coordination of sf and bb. bb contributed prototype scripts in the initial development phase and drafted the manuscript. all authors contributed to writing the manuscript. fl, ch, and cm advised on practical and theoretical aspects of microsatellite marker design. fl, lk, sgs, and kp performed the laboratory tests and provided user feedback during development. all authors read and approved the final manuscript.

