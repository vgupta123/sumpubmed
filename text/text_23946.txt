BACKGROUND
decoding the genome  is not sufficient to explain the cause of many diseases. therefore, the study of differences in gene expression between subjects , the analysis of protein synthesis , and the study of metabolic regulation  have been intensified in recent years  <cit> .

analysis of the plethora of metabolites found in the nmr spectra of biological fluids or tissues requires data complexity to be reduced  <cit> . the field of metabonomics is evolving in parallel to the application of multivariate statistical methods with this purpose.

however, multivariate analysis is not easy for novice users. several commercial programs can help such users apply multivariate methods, although none include the full range of routines, from data pre- and post-processing to the final statistical results. recently, an open-source platform   <cit>  based on visual c++ has been developed to carry out a full nmr-based metabonomic analysis. automics includes the most common 1d nmr spectral processing functions and nine statistical methods: feature selection , data reduction , unsupervised clustering  and supervised regression and classification methods .

we present a new software package based on the open-source r framework  <cit>  with a graphical user interface  that helps the user understand and run such methods for the analysis of nmr-based metabonomic data. our package is called "metabonomic" and it makes use of different r libraries to build a statistics toolbox. moreover, the r framework open-source architecture allows newly proposed algorithms or methods for spectral processing and data analysis to be implemented and included much more easily and freely accessed by the public. the "metabonomic" gui includes unsupervised multivariate analysis techniques , supervised multivariate analysis , and k-nearest neighbor classification). it can also be used to define different types of neural networks. in our study, we test some of these multivariate methods using internal cross-validation and external validation.

this "metabonomic" package also enables pre-processing of raw nmr spectra. pre-processing transforms the data in such a way that subsequent analysis and modelling are easier, more robust, and more accurate. in the analysis of nmr spectra, pre-processing methods usually attempt to reduce variance and any other possible source of bias such as phase correction, peak shifting or misalignment, and baseline correction. although the "metabonomic" package has been developed for the analysis of nmr spectra, this software can also be used for the pre-processing of mass spectrometry-based profiles or other 1-dimensional spectra. the analysis of 2-dimensional nmr spectra will be available in the next software update.

implementation
program description
the "metabonomic" gui was designed using the r-tcl/tk interface  <cit> , which enables us to use the tk toolkit and replace tcl code with r function calls to facilitate interaction with the r functions and a comprehensive metabonomic analysis. the software offers several graphic outputs, through plots created using a combination of different tcl/tk interfaces. the program is based on r version  <dig> . <dig>  <cit>  under the windows operating system.

the "metabonomic" gui, requires packages  to be downloaded and installed in the r console. the process package can be found at the bioconductor project site  <cit> . once the required packages are ready, the "metabonomic" package is loaded using the package installer or writing ">require " if the package is already in the computer.

the program is started by writing "> metabonomic()" in the r console to open the main user interface. the gui has an input console, which can be used to launch any r application, and two different output consoles, where warnings and output messages are displayed. it also has a button line, with the following buttons:  undo,  redo,  current data display,  launch the commands written in the input console,  erase the input console,  stop any running process, and  shut down the gui and return to the r console.

finally, the gui has a main menu with different tabs: file, script, edit, pre-processing, metabonomic analysis, and spectrum. the script tab provides access to the following functions:  "load a script," which opens a script into the input console,  "save script," which saves the commands written in the input console as an r script file, and  "launch the script," which runs the commands written in the input console. other functions are described in detail in the following sections.

data importing
the nmr processed spectra for metabonomic analysis are loaded as a text file by selecting the "file/load data file" tab. the text file, with no header, shows the chemical shift  in the first column, and the intensities of the different spectra are in the following columns. after importing the spectra text file, the gui asks for an "info" file. this file contains all the sample information, which has been previously written by the user as a text file, where the first column holds the names of the samples and the different characteristics are in the following columns separated by tabs . a header with the caption of each column is also required.

alternatively, the data can be loaded directly from the bruker spectroscopy format by an independent package that can be executed by selecting the "file/import bruker file" tab. the user has to select the raw data . this application displays the spectrum reference and manages basic operations such as setting the chemical shift of a certain compound  to  <dig> ppm and zero order and first order phase corrections <cit> . when the first set of data is loaded, the gui asks for a new array. when all the spectra are imported, the gui asks for the "info" file. applications to load other commercial data formats will be added soon.

the gui also allows processed data to be exported as a text file.

category selection
this application selects the information that will be used in the supervised analysis. first, the gui asks which characteristic  will be used to classify the samples. the user then chooses the different types of samples that will be used in the multivariate analysis. to date, the program only allows the selection of four different sample types. the "category selection" application is launched by selecting the "file/category selection" tab.

data pre-processing
data must be pre-processed carefully, since any inaccuracy introduced at this stage can cause significant errors in the multivariate analysis. thus, the gui offers several guided corrections, as explained below. if any special correction or data processing is necessary, it can be easily programmed in the input console.

region exclusions
the first step of data pre-processing usually involves the exclusion of spectral regions  <cit> , which either contain non-reproducible information or do not contain information about metabolites. on the one hand, the spectral width to acquire nmr data is usually wider than necessary to digitize all chemical shifts associated with endogenous metabolites. thus, downfield and upfield spectral areas without any endogenous metabolites are initially excluded. on the other hand, spectral regions highly depending on the experimental parameters, such as the water and the reference regions are also deleted. as these regions are sensitive to spectral artifacts, such as inadequate phasing, exclusion is beneficial. therefore, the spectrum outside the  <dig> -10-ppm window is usually excluded. by selecting the "file/manual cut" tab, a graphical application to select the area of interest in the spectrum and to delete the water resonance region is launched.

baseline correction
baseline correction is an essential step to obtain high quality nmr spectra in some cases  <cit> . rolling baselines can make it difficult to identify peaks and can introduce significant errors into any quantitative measurements. in order to avoid errors, the gui incorporates an application to reduce this influence in batch mode. baseline correction is performed using the "bslnoff" function, which is based on the loess method  <cit>  from the process library  <cit> . this graphical application  allows the bandwidth to be controlled so that it can be passed to the loess function until the adjustment is correct. graphs with the raw spectrum, estimated baseline, and baseline-subtracted spectrum are plotted in the r console.

another application, based on the fticrms package  <cit> , is available for individual baseline correction. it computes an estimated baseline curve for a spectrum using the method of rocke and xi  <cit> . the most important parameter for obtaining a perfect baseline is the smoothing parameter, which is controlled by a slider widget. the algorithm uses extra parameters that have been optimized for nmr data sets, such as negativity penalty, maximum number of iterations, or a parameter for robust center and scale estimation. in any case, these parameters can be modified through the "extra parameters" tab. all changes are instantly displayed in the graphical device , thus allowing an interactive baseline adjustment.

binning
the most common method of reducing the influence of shifting peaks is the so-called binning or bucketing method, which reduces spectrum resolution  <cit> . thus, the spectra are integrated within small spectral regions, called "bins" or "buckets". subsequent data analysis procedures applied to the binned spectra are not influenced by peak shifts, as long as these shifts remain within the borders of the corresponding bins. after launching the binning graphical applications , the user can select the bin size. this process is executed by the "binning" function from the process library  <cit> .

peak detection and alignment
peak alignment is an alternative to binning the spectrum to account for peak shifts  <cit> . a peak detection graphical application  has been developed to control the "msc.peaks.find" function from the camassclass library  <cit> . the graphical application adjusts the signal-to-noise ratio and the threshold criterion in the peak's detection process and returns a data frame with the positions and intensities of the detected peaks. these are aligned by a peak alignment graphical application . this application guides the user in the use of the "msc.peaks.align" function from the camassclass library  <cit> .

normalization
a crucial step in pre-processing of spectrum data in metabonomic studies is the so-called normalization step  <cit> . this step tries to account for possible variations in sample concentrations. normalization may also be necessary for technical reasons. if spectra are recorded using a different number of scans or different devices, the absolute values of the spectra vary, and rendering a joint analysis of spectra without prior normalization is impossible. the normalization graphical application  makes it possible to choose between several types of normalization steps using functions from the clustersim library  <cit> .

principal components analysis
principal components analysis  is one of the most common exploratory steps in multivariate analysis  <cit> , and its most important use is to represent multivariate data in a low-dimensional space. the first principal component is the maximum variation direction in the cluster of points. the second principal component is the second largest variation, and so on.

the gui incorporates a pca graphical application  to guide users in pca by allowing the selection of the algorithm parameters. in addition, interactive graphics have been developed to change items such as the component and graphical parameters in the score  and loading plots. the principal components algorithm used is based on the "prcomp" function from the stats library  <cit> .

in addition, a graphical display for outlier identification has been developed using the "prcomp" function and the "robustbase" package  <cit>  . it shows mahalanobis distances based on robust and classic estimates of the location and the covariance matrix in different plots.

linear discriminant analysis
linear discriminant analysis  is another common technique for the analysis of metabonomic data  <cit> . it is used to obtain linear discriminant functions, a linear combination of the original classes chosen to maximize the differences between them. for samples with only two classes, the discriminating function is a line, for three classes it is a plane, and for more than three classes a hyperplane. in the lda graphical application , the linear discriminant function is calculated by the "lda" function from the "mass" package  <cit> .

the program guides the user through the tasks in the proper order. first, an lda model is built with part of the samples; the remainder are used to perform a validation test. the user can choose the samples directly to make the model, or randomly select the number of samples from each class. second, the user can select the algorithm to calculate the lda from among the following: "moment" for standard estimators of the mean and variance, "mle" for a maximum likelihood estimation, or "t" for robust estimates based on a t distribution. finally, the lda graphical application returns the results of the validation test and different interactive graphs of the lda model . if the number of different classes is three or less, the interactive graph is a plane where the samples used to build the model and the validation samples are plotted. if the number of different classes is greater than three, the samples used to build the model and the validation samples are plotted in interactive cubes. in these interactive plots, the user can select the angle of rotation, the components shown, and other graphical parameters.

partial least squares discriminant analysis
another common multivariate method  <cit>  in metabonomic analysis is partial least squares discriminant analysis , a supervised linear regression method whereby the multivariate variables corresponding to the observations  are associated with the class membership for each sample  <cit> . pls-da provides an easily understandable graphical approach to identifying the spectral regions of difference between the classes, and allows a statistical evaluation of whether the differences between classes are significant.

two different pls-das have been included in the "metabonomic" gui. the first pls graphical application  was developed with a pls algorithm based on the extension of the generalized partial least squares model proposed by ding and gentleman  <cit> . this algorithm is implemented using the "gpls" function from the "gpls" package  <cit> , and it allows separation between no more than two classes of samples. the graphical application controls the manual or random selection of the samples to build the model, the selection of all the algorithm parameters such as the tolerance to the convergence, the number of iterations allowed, and the number of pls components used. at the end, the results of the validation test are returned.

the second application  is performed using the "plsr" function from the "pls" package  <cit> . this pls-da is more complex, and the application guides the user through all the steps in the proper order. first, the user chooses between manual and random selection of the samples. second, the user selects the pls algorithm and the validation method. the four plsr algorithms available are the kernel algorithm  <cit> , the wide kernel algorithm  <cit> , the simpls algorithm  <cit> , and the classic orthogonal scores algorithm  <cit> .

next, the application creates a pls model with the maximum number of components and shows the explained variance and the r <dig> graphics of the model. with this information, the user can select the optimum number of pls components to build the model. in addition, the standard error of prediction  and the root mean standard error of prediction  are plotted in the r console.

finally, the pls graphical application returns the results of the validation test and different interactive graphs of the pls model .

k-nearest neighbors classification
the k-nearest neighbors  rule for classification  <cit>  is the simplest of all supervised classification approaches. for the classification of an unknown object, its distance  to all other objects is computed. the minimum distance is selected and the object is assigned to the corresponding class. the knn graphical interface  allows the user to choose between random or manual selection of the samples to build the model, number of neighbors, minimum vote for definite decision, and the use or not of all the neighbors. if the all the neighbors are used, all distances equal to the kth largest are included. if not, a random selection of distances equal to the kth is chosen to use exactly k neighbors. to finish, the interface returns the results of the validation test and the cross-validation test. the knn graphical application uses the "knn" function from the class package  <cit> .

neural networks
application of artificial neural networks  for data processing is characterized by analogy with a biological neuron. an ann consists of a layered network of nodes, each of which performs a simple operation on several inputs to produce a single output.

two different applications to define anns have been included in the "metabonomic" gui. the first application  makes use of the "nnet" function from the "nnet" r package  <cit> . this graphical application allows the user to build a single-hidden-layer neural network, by selecting the number of units in the hidden layer, the initial random weight, and the weight decay. in addition, the user can choose between random or manual selection of the training samples.

the second application  creates a feedforward artificial neural network according to the structure established by the "amore" package  <cit> . with this application, the user can select the number of layers and the number of neurons in each layer, while controlling several parameters. these include the learning rate at which every neuron is trained, the momentum for every neuron, the error criterion , the activation function of the hidden and the output layer , and the training method . with these parameters selected, the algorithm trains the network with the manually or randomly selected samples before testing it with the rest of the samples.

other tools
in addition to the multivariate techniques, other useful graphical tools have been developed in the "metabonomic" gui to enable easy interpretation of complex data tables.

for example, a graphical display  has been added to show the differences between the subgroups in a specific spectral region. the application plots the values and means of all samples in the specified chemical shift region .

another graphical display  has been created to visualize and overlap the spectra. with these applications, the user can focus the interesting areas with a zoom tool, superimpose different spectra, increase or decrease the spectra intensity, and change other graphical parameters. moreover, when the user clicks with the cross cursor in the spectrum, a new window pops up showing the chemical shift and the intensity of this selected resonance. this display can be launched for the original or for the current spectra .

RESULTS
an nmr analysis of lung tissue was used to test our package. this dataset  consisted of  <dig> akr/j mice chronically exposed to tobacco smoke for  <dig> days/week  over a 6-month period and a sham group .

high-resolution magic angle spinning spectra were generated from intact lung tissue using a bruker amx <dig> spectrometer  <dig>  t,  <dig>  mhz .

first, the water peak and the spectrum area outside the  <dig> -10-ppm window were removed. the baseline of each spectrum was corrected using the baseline  tool. in addition, the spectra were normalized by total area and integrated within  <dig> -ppm buckets.

the pre-processed spectra underwent different multivariate analyses. the multivariate models were built with a number of random training samples . the remaining samples can be used to perform a validation test, derived from the probability of belonging to each group. the validation results are summarized in table  <dig> 

CONCLUSIONS
pre-processing of raw nmr spectra and different multivariate analyses are standard procedures applied to interpret the complex metabonomic profile. the "metabonomic" gui presented in this paper offer an easy application of the principal pre-processing methods and the most commonly used multivariate statistical methods in metabonomic analysis. various tools have been developed or adapted to make statistical analysis easier for the inexperienced user. the more experienced user always maintains complete control of the statistical tools. special correction or data processing can be carried out using the input console.

the main advantage of the "metabonomic" gui is its modular design, which makes it easy to upgrade. furthermore, new analysis methods can be included in the metabonomic field using the large r free software library.

availability and requirements
• project name: metabonomic r package.

• project home page: 

• operating system: ms windows.

• programming language: r. the package runs on ms windows using an installed version of r.

• other requirements: the required process package is available in the bioconductor website .

• licence: gpl version  <dig> or newer.

list of abbreviations
ann: artificial neural network; gui: graphical user interface; knn: k-nearest neighbors; lda: linear discriminant analysis; pca: principal components analysis; pls: partial least squares; pls-da: partial least squares discriminant analysis; nmr: nuclear magnetic resonance; gui: graphical user interface.

authors' contributions
jlig carried out the programming and software design and drafted the manuscript. pv, ir, ak, pb, and md provided domain knowledge and helped to draft the manuscript. jrc conceived the study, participated in its design and coordination, and helped to draft the manuscript. all authors have read and approved the final manuscript.

