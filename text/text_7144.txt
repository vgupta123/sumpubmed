BACKGROUND
dna and protein sequences provide a wealth of information which is routinely used in phylogenetic studies. traditionally, single genes or small groups of genes have been used to infer the phylogeny of a group of species under study. it has been shown, however, that molecular phylogenies based on single genes often lead to apparently conflicting tree hypotheses  <cit> . the combination of a large number of genes and species in genome-scale approaches for the reconstruction of phylogenies can be useful to overcome these difficulties  <cit> . this approach has been termed phylogenomics  <cit> .

since complete genome sequences are available only for a limited number of species, many phylogenomic studies rely on est sequences. est sequences are short , unedited, randomly selected single-pass reads from cdna libraries that sample the diversity of genes expressed by an organism or tissue at a particular time under particular conditions. the relatively low cost and rapid generation of est sequences can deliver insights into transcribed genes from a large number of taxa. moreover, est sequences contain a wealth of phylogenetic information. several recent phylogenomic studies used est sequences to generate large data matrices, e.g.  <cit> . such studies start with the generation of est libraries for a set of species. overlapping est sequences from single coding regions are then assembled into contigs and orthologous genes are identified as a basis for phylogenetic reconstruction. homologous sequences are called orthologs if they were separated by a speciation event, as opposed to paralogous sequences, which were separated by a duplication event within the same species  <cit> . if the last speciation event predates the gene duplication event, homologous sequences are called inparalogs  <cit> . orthologs are usually functionally conserved whereas paralogs tend to have different functions  <cit>  and are less useful in phylogenetic studies.  a typical protocol for detecting orthologs in phylogenomic studies should include  a similarity search using tools like blast  <cit> ,  a strategy to select a subset of hits returned by this search,  a criterion to identify sequences as potential orthologs,  a strategy for eliminating potential paralogs – in case several sequences from the same species have been assigned as potential orthologs to the same orthologous group.

orthology assignment is a crucial prerequisite for phylogeny reconstruction as faulty assumptions about orthology – e.g. the inclusion of paralogs – can lead to an incorrect tree hypothesis  <cit> . errors can result from similarity searches against non-specialized databases, e.g. ncbi's nr database, or from best-hit selection strategies such as best reciprocal hit  <cit>  or best triangular hit that may lead to false positive orthology predictions. the similarity between a query and a database sequence stemming from a similarity search – expressed for example as a bit-score or expectation value  – is usually taken as a criterion to predict an orthologous relationship. since the results of these methods depend on the choice of a database and on the strategy to select sequences from similarity search hits, a more reliable protocol for ortholog predictions is needed.

several databases and computational methods for predicting orthologs are available. multi-species ortholog databases have been developed based on different sources of orthologous information. they include information about orthologous relationships between sequences. the orthomcl-db database  <cit>  and the kog database  <cit>  have been constructed from whole genome comparisons, homologene  <cit>  on the basis of synteny. hovergen  <cit>  and treefam  <cit>  were constructed using the orthologous information from phylogenetic trees. two of these databases, orthomcl-db and kog, explicitly define orthologous groups  which can be used as a source for orthology assignment of unknown sequences using similarity searches.

most computational methods to identify orthologs are based on either a phylogenetic analysis, or on all-against-all blast searches  <cit> . the former approach is computationally expensive and usually requires manual intervention. all-against-all approaches use every sequence from the input data set as a query for blast searches against sequences from the respective other species. this generates ogs based on some similarity measure, e.g. using all best reciprocal hits. these ogs can further be processed to merge, delete, or seperate overlapping groups using a clustering algorithm, as implemented in e.g. orthomcl  <cit>  or inparanoid  <cit> . zhou and landweber  <cit>  developed blasto, a different computational method for orthology prediction by including information from an orthologous database. other important aspects in data set construction for phylogenetic analysis on a large scale are  correct identification of open reading frames in ests and their translation,  careful selection of target genes to maximize the phylogenetic information,  elimination of redundant sequences, and  a refinement step to select conserved blocks and remove homoplasy from multiple sequence alignments.

nowadays, data sets in phylogenomic studies can easily contain dozens of taxa and hundreds of genes  <cit> . the construction of data sets of that size for phylogenomic studies is time-consuming and can hardly be achieved manually. to the best of our knowledge, no software pipeline is currently available that performs the above steps automatically. herein, we present a software pipeline, called orthoselect, to process clustered est sequences automatically for phylogenomic studies. our goal is to give both non-bioinformaticians and bioinformatic experts a useful framework to carry out analyses on a phylogenomic scale. it integrates publicly available bioinformatic tools and manages data processing and storage. although the software pipeline is designed to automate the construction of data sets for phylogenomic studies, the user can evaluate intermediate results at any time of the analysis. orthoselect produces automatically calculated and post-processed alignments that can be used as input for common phylogenetic reconstruction software. in a large-scale study, we applied orthoselect to a data set from metazoan species consisting of >  <dig>   <dig> ests belonging to  <dig> taxa . in order to assess the quality of orthoselect predictions in relation to results obtained from other methods, we compared orthoselect to the manually created and published phylogenomic data set by dunn et al.  <cit> . since our tool offers an increased functionality compared to other tools for orthology prediction , our tests focus on the assignment of orthology only, and do not cover the correct translation of ests, gene selection, alignment computation, and alignment postprocessing.

implementation
our software pipeline is written in perl and uses bioperl  <cit> . the main workflow is depicted in figure  <dig>  the entire analysis is guided by a configuration file and several perl scripts. orthoselect can be run on a single desktop computer as well as on a computer cluster using a batch system, e.g. a sun grid engine  <cit> . required programs are blast for the similarity search, estscan  <cit>  and genewise  <cit>  for translating ests, and a software program for multiple sequence alignment. clustalw and muscle are needed for computing the pairwise sequence alignments. our software supports multiple alignments computed by muscle or t-coffee, but it can easily be adapted to accept multiple alignments calculated by other programs. gblocks  <cit> , noisy  <cit>  and aliscore  <cit>  are used to select informative alignment columns. orthoselect offers the possibility to automatically download and install all missing required programs on the computer.

program outline
in contrast to the above outlined methods for the identification of orthologs based on whole genome comparisons, we adopted an approach that compares est sequences to predefined groups of orthologous genes. we developed a software pipeline that uses a reimplementation of blasto, an extension of blast that clusters blast hits using predefined orthologous groups from an ortholog database. here, the similarity between a query sequence and an og is defined as the mean e-value between the query and the sequences from the og . as input data, it takes a library of est sequences together with a database of orthologous genes. we assume that the basic pre-processing steps such as end clipping and vector trimming have already been done and that the ests are already assembled into contigs. as a database of orthologs, either kog or orthomcl-db can be used.

using the orthologous groups  defined by kog or orthomcl-db as a basis, orthologous ests are detected by a similarity search of ests against the ortholog database and assigning them to the ogs using our reimplementation of blasto. the ests are then translated and stored. redundant sequences within each og are eliminated and an alignment of the remaining sequences is computed. in a last step, we use sophisticated post-processing methods to filter out non-informative or misleading information from the alignment . the entire analysis is guided by a configuration file containing the main parameters and options for each external program.

orthology detection
the first step of the software pipeline comprises the detection of potential orthologs in est libraries . this is a critical step, because false ortholog assignments can lead to serious errors in the resulting phylogenetic tree. orthologs are detected by searching an ortholog database – either kog or orthomcl-db – with a query est using blastx and subsequently the resulting hits are clustered according to an algorithm similar to that used in blasto. a standard blast search returns a list of hits ordered by their significance. by contrast, blasto calculates similarity values between the query sequence and entire groups of orthologs .

in blasto, the similarity between a query s and a og g is defined as the average similarity between s and all sequences in g. in our approach, we modified this measure of similarity. for a query s and a og g, we consider only the subset g' ⊂ g that contains the best hit from each species. this is to compensate the many paralogs present in kog  <cit> , and to ensure a high probability of the est sequence being orthologous to the sequences in the corresponding og. the similarity score for a query s and an og g is then calculated as

  

where

  

here, ei is the e-value of the blast alignment of fi with the query sequence s and |g'| the number of species in g'. finally, every est sequence s is assigned to those orthologous groups g with a similarity score sg,s above a given threshold. we allow multiple assignments of a single est, because ests can represent domains rather than full genes, and they should be assigned to all ogs containing that domain . all ests assigned to the same og are now potential orthologous. redundant sequences will be removed later .

est translation
in the next step, potential coding regions in assembled est sequences are detected and translated into proteins. by their nature, est sequences often contain sequencing errors and may cover genes partially, only  <cit> . these errors result in e.g. reading frame shifts that make translation non-trivial. several algorithms have been developed to overcome this problem. diana-est  <cit>  uses a combination of artificial neural networks while estscan uses hidden markov models. in contrast to this, decoder  <cit>  implements rule-based methods, and genewise uses a known protein as a template. in addition, combinations of these methods have been proposed to identify coding regions and to translate est sequences correctly, e.g prot4est  <cit> . we use a comparative approach of different well established programs for translation. each est is translated  and aligned to the best hit from the previous blast search using bl2seq  <cit> . the translated sequence with the lowest e-value is then chosen as the correctly translated sequence. this way, the probability of getting correctly translated ests is increased. our goal was to fully automate the installation of all external programs. we did not include prot4est since it requires additional programs and one of which is not freely available for download and therefore cannot be installed automatically.

taxon/gene sampling strategy
after the assembled est sequences were assigned to predefined orthologous groups  and translated into proteins, the next step consists of the proper selection of ogs suitable for phylogenetic analysis. since est libraries represent snapshots of expressed genes, not every og will contain est sequences from all species under study; some ogs may contain too few sequences and do not contain sufficient information for further consideration. we do not require every og to contain all sequences of interest. there is no consensus about the influence of missing genes on the resulting phylogeny  <cit> . no reliable criterion, which ogs should be used for phylogenetic inference exists. our software offers two alternative ways of selecting ogs:

 <dig>  the user selects a subset of individual species under study. in this case, those ogs will be selected that contain at least one est from each of the user-selected species.

 <dig>  the user defines groups of species . our tool will then select those ogs that contain at least one est sequence for each of the specified groups.

the idea of these two methods is to select the maximal biclique of a graph with the nodes consisting of the ogs and the taxa – in case of option  <dig> – or monophyla – in case of option  <dig>  <cit> . the selection of genes according to these who methods focusses on maximising the phylogenetic signal in the dataset .

eliminating redundancies
multiple divergent copies of the same gene and different levels of stringency during est assembly can lead to a situation where ogs contain more than one sequence for each species . it is also known that some of the orthologous groups contained in kog contain not only orthologous genes but also paralogs  <cit> . in these cases, a fast and reliable method is needed to select the correct sequence for each species. we work with the assumption that a gene from one organism is often more similar to an orthologous gene from another organism than to paralogs from that organism. this seems plausible based on both the definition of orthology and the fact that orthologs typically retain the same function  <cit> . a scenario where a gene from one organism is more similar to a paralog rather than to its ortholog from another organism would require a considerable difference in the rate of paralog evolution  <cit> . since this is more an exception than a rule and since orthoselect aims at the production of gene alignments containing only one sequence per species, we do not consider such cases.

all sequences belonging to the same og are aligned in a pairwise manner to compute a distance matrix. two types of distance matrices can be used to select the sequence from an organism that is most likely ortholog :

 <dig>  an initial distance matrix as computed by alignment methods like clustalw  <cit> .

 <dig>  a normalized distance matrix selecting those sequences that have the highest percentage of matching positions in pairwise comparisons using muscle  <cit> .

the first option follows the idea that those sequences should be selected that optimize the alignment score in a global alignment. the second option takes into account that ests usually do not represent complete genes. since a selection based on a standard distance matrix will penalize missing positions, longer paralogous sequences can be selected instead of shorter orthologous ones. the distance matrix used in the second option selects the sequence with the highest number of matching positions normalized by its length. the user can select one type of matrix to be used to eliminate redundant sequences . based on that distance matrix, we want to select one sequence from each organism in such a way that the selected sequences are most probable to be ortholog to each other. here, we use the following strategy: all sequences from one organisms are compared to all sequences from all other species. for each sequence s from a given species s, we count the number of species s' such that s has the shortest distance to a sequence from s' among all sequences from s' . formally, if the distance between sequences s and s' is denoted by d, we count the number of species s' for which we have

  

for species s, we then select the sequence s for which this number is maximal .

multiple sequence alignment
by default, the previously selected sequences are aligned using either muscle or t-coffee  <cit> . other standard methods for multiple alignment can be used as well, e.g. probcons  <cit> , mafft  <cit> , dialign  <cit>  or dialign-tx  <cit> .

the computed alignments contain sequences that are most likely being orthologous given the data set. nevertheless, there might be cases in which our comparative approach did not find the optimal translation . to correct this, we use the software hmmbuild from the hmmer package to build profile hidden markov models  from sequence alignments  <cit> . additionally, the est sequences from all taxa are translated using estscan. estscan is based on a hmm and was trained for species ranging from arabidopsis thaliana to homo sapiens by default. the translated sequence databases are then searched using hmmsearch from the hmmer package  <cit>  and the hmm. the closest sequence from each taxon above a given threshold is taken as a hit. by this, we can find more similar as well as additional hits – hits that might have been overseen during the initial blastx search, because the est sequence contained one or several frame shift errors. the workflow is depicted in figure  <dig>  the advantage of using a hmm is the possibility of finding that translated sequence that fits best to the whole existing alignment and not just to single sequences, as with standard blast searches.

once multiple alignments have been calculated for selected groups of ortholog est sequences, these alignments can be further processed to exclude columns that are not suitable for phylogenetic analysis. since not all parts of a gene evolve at the same rate, alignments typically contain highly conserved as well as less conserved sites. alignment columns that are too conserved do not contain any phylogenetic signal. the same holds true for parts of the sequences that are too divergent to be correctly aligned. another problem that confuses phylogenetic reconstruction is the presence of homoplasy caused by back- or parallel-mutation. several programs have been developed to tackle these problems by automatically selecting sufficiently conserved blocks from alignments, for example gblocks and aliscore, or by eliminating potentially homoplastic sites, e.g. noisy. gblocks, aliscore, and noisy are incorporated in our software pipeline to allow a broad spectrum of alignment post-processing thereby increasing the accuracy of the subsequent phylogenetic analysis . furthermore, alignments processed by gblocks can be further filtered by discarding too short sequences from the alignment .

RESULTS
orthoselect is the first fully automated and freely available tool that covers the whole process of selecting orthologs from est libraries to output orthologous gene alignments that can be used to build phylogenies. in the absence of a gold standard for benchmarking of orthology prediction and in order to evaluate the performance of our program, we designed the following tests: first, orthoselect was compared to the best-hit selection strategy using a set of sequences from jgi with kog-annotations. second, we evaluated the performance compared to the kog database by re-annotating  ortholog database sequences. in the third and most powerful test we compared orthoselect tool to a manually created and published phylogenomic data set. in this context, we also compared our tool with orthomcl.

orthoselect vs. best-hit selection strategy
to evaluate the performance of our software pipeline and the best-hit selection strategy regarding correct orthology assignment, we used a data set comprised of transcribed genes and annotation files from  <dig> different species as shown in table  <dig>  the best-hit selection strategy assigns the query sequence to that og the best hit belongs to. as ortholog database, we used kog. the annotation files contain kog classification and therewith the functional annotation for each sequence. sequences and annotations were downloaded from the department of energy joint genome institute   <cit> . since orthoselect makes annotations by assinging sequences to ogs of kog, we considered an assignment of a sequence to an og to be correct if it matches the kog classification provided by jgi. to evaluate the performance of our classification system, we calculated for each species and an e-value cut-off of 1e -  <dig> the ratio of correctly assigned ogs, i.e. the number of correctly assigned sequences divided by the number of assigned sequences. table  <dig> shows the result of the analysis. our software pipeline reaches a correct assignment rate of ~93%, whereas the best-hit selection strategy assigns the sequences in ~79% of the cases to the correct og. orthoselect outperforms the best-hit selection strategy and its very high rate of correct ortholog prediction should provide a good basis for subsequent phylogenetic analyses.

the table shows species that we used in our test runs along with the number of sequences from each sequence and the corresponding kog classifications.

the table shows species that we used in our test runs along with the number of predictions and percentage of correct predictions made by orthoselect and the best-hit selection strategy respectively.

orthoselect vs. kog
in absence of a reference dataset for orthology prediction and due to the fact that our tool is mainly focused on the automation of a process rather than being a completely new method for orthology prediction, we compared orthoselect to the kog database by re-annotating  ortholog database sequences. we performed the following:  <dig> sequences were randomly chosen and masked out from the ortholog database. the remaining sequences were converted into a blastable database. we then ran orthoselect using each of the  <dig> sequences as a query sequence against the masked database. assuming the original ortholog group assignment in the ortholog database represents the correct orthology relation, we calculated in how many cases our orthology assignment matched the original assignment. we could assign the query sequences in 92% of the cases to the correct ortholog group.

orthoselect vs. manually created data set by dunn et al
the goal of our tool is to automate the process of constructing data sets that can be used for subsequent phylogenetic analyses. to test our tool regarding this, we selected dunn et al.'s data set  published in nature  <cit> .

this data set consists of newly sequenced ests as well as publicy available ests and protein sequences, and has been generated using all-vs.-all blast searches, protein translations using prot4est, grouping of the sequences into orthologous groups using tribemcl  <cit>  as well as manual curation and tree reconciliation .

the reference data set as well as the single est and protein sequences were either downloaded from publicly available sources or provided by casey dunn. the initial data set consisted of  <dig> genes and  <dig> taxa. in order to guarantee comparable results, we mapped each sequence from each gene to the kog database using the best blast-hit. only genes where all sequences could be mapped to the same kog were further considered. this led to a considerable decrease in the number of genes. since some taxa were not available for download, we ended up with  <dig> out of the  <dig> taxa dunn et al. initially used.

for prediction of orthologous sequences, we denote a true positive as a correctly predicted ortholog, a false positive as an incorrectly predicted ortholog, and a false negative as an overlooked sequence. to be more precise, we use the following measures of performance:

• taxon is present in both alignments: if the percentage identity of both sequences is above a threshold , the sequences are regarded as being equal and counted as a true positive. else, both sequences are aligned to a hidden markov model  build from the alignment of the corresponding orthologous group  using hmmsearch from the hmmer package. if the orthoselect sequence is closer to the hmm, it will be counted as a true positive, and otherwise it will be counted as a false positive.

• taxon is present in the reference alignment, but not in the orthoselect alignment: it will be counted as a false negative.

• taxon is present in the orthoselect alignment, but not in the reference data set: the sequence is aligned to the hmm of that og. if it shows significant similarity, it will be counted as a true positive, and otherwise as a false positive.

furthermore, we use the following formula to measure the specificity of our results:

• specificity:

  

we get the following results : with respect to the reference data set, our tool receives a specificity of 98%. this means that the predictions about orthology our tool makes are almost always true and almost all orthologous sequences contained in the original reference data set could be found. the number of false predictions is considerably small. although we missed 8% of the orthologous sequences, we could find additional hits for  <dig> sequences.  <dig> of those additional sequences showed significant similarity to the rest of the alignment and were counted as true positives.  <dig> sequences were falsely predicted as being orthologous. this equals an increase of +4% of orthologous sequences. compared to the reference data set, we can make the following statements: our tool selects orthologous sequences from est libraries and other sources with very high accuracy. orthoselect correctly translates the sequences and receives a higher specificity by finding more true positives. in phylogenomics, the use of est data can result in data matrices – where the rows are genes and the columns are taxa or vice versa – with most of the cells being empty. although there is no consensus about the impact of missing sequences on the resulting phylogeny, the additionally found sequences will have a beneficial effect.

orthoselect vs. orthomcl
in order to further assess the performance of orthoselect, we compared it with orthomcl, another tool for orthology prediction. orthomcl takes a set of sequences and clusters them into groups of orthologous and inparalogous sequences. in contrast to orthoselect, orthomcl only handles protein sequences and produces clusters of orthologous sequences rather than multiple sequence alignments . these generated clusters can contain considerably more than one sequence per taxon, and subsequently build multiple sequence alignments would not be comparable to the ones produced by orthoselect and dunn et al. nevertheless, we are interested in the performance of our tool compared to orthomcl. the previous test revealed that clustering algorithms of orthoselect and the method by dunn et al. perform similarly. to check if clusters build by orthomcl are in agreement with the orthoselect clusters and thus with the dunn clusters, we used the following  <dig> taxa: cryptococcus neoformans, drosophila melanogaster, gallus gallus, homo sapiens, saccharomyces cerevisiae, and suberites domuncula. the dataset has been reduced to include only protein sequences, because orthomcl deals with protein sequences, only.

for each of the  <dig> previously compared gene clusters , we checked whether orthomcl assigns sequences from the  <dig> taxa to the same orthomcl cluster or not. the results were, that all sequences belonging to the same alignment have been clustered together by orthomcl. this means that the clustering algorithm of all methods produce similar results and converge.

besides the additional functionality of orthoselect as compared to orthomcl and its usability for est sequences, it is also much faster. it took orthomcl  <dig> hours to analyse the data set of  <dig>  sequences. in contrast, our tool analysed the  <dig> . <dig> sequences dunn et al. used in about  <dig> hours.

CONCLUSIONS
orthoselect is a tool for finding ortholog groups in est databases. it can be used by either installing it locally or via the orthoselect web server  <cit> . it automatically searches assembled est sequences against databases of ortholog groups , assigns ests to these predefined ogs, translates the sequences into proteins, eliminates redundant sequences assigned to the same og, creates multiple sequence alignments of identified ortholog sequences and offers the possibility to further process these alignments in a last step. orthoselect performes better than the best-hit selection strategy and shows reliable results in re-annotating database member sequences of orthomcl-db and kog. most importantly, we showed that our tool produces high quality data sets such as dunn et al's data set, but with more selected sequences and therefore less missing data in the alignments. furthermore, the results our tool produces are in absolut agreement with the results of orthomcl, but orthoselect offers additional funcionality, e.g. handling with est sequences, computing sequences alignments, and refining them. our method also showed a significant speedup in comparison to orthomcl. correct orthology assignment is an important prerequisite for the construction of reliable data sets and orthoselect is capable of producing them. this makes a orthoselect a valuable tool for researchers dealing with large est libraries focussing on constructing data sets for phylogenetic reconstructions. the tool can be downloaded at  or the web server accessed without local installation at .

availability and requirements
project name: orthoselect

project home page: 

operating system: mac os x, linux

programming language: perl

other requirements: bioperl, blast, estscan, genewise, clustalw, muscle or t-coffee, hmmer, gblocks, aliscore or noisy

license: gnu gpl

restrictions: none

authors' contributions
fs developed, implemented, tested orthoselect, and wrote the manuscript. kp and de evaluated the performance and usability of orthoselect and revised the manuscript. gw conceived and co-supervised the project, provided resources and revised the manuscript. bm co-supervised the project, provided resources and participated in writing of the manuscript. all authors read and approved the final manuscript.

