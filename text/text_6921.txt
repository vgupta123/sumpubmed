BACKGROUND
at present, there is a data explosion in the biological sciences. a series of technical advances in recent years have led to an increase in the amount of data that biologists can recover concerning many aspects of an organism, both at genomic and post-genomic levels. discovery of hidden patterns of gene expression in plants of economic importance to agro-biotechnology may aid in improving the quality of crop products. in addition, transcript and metabolite integration is gaining importance given the need for extracting knowledge from multiple data types and sources, with the aim of finding informative relations to infer new insights concerning the genetic processes underlying them  <cit> . in plant experimental biology and crop breeding, widely used systems include introgression lines and recombinant inbred lines , characterized genotypes carrying exotic alleles from related species. although ils and rils have proven useful tools in crop domestication and breeding since time immemorial, their applicability as experimental systems exposing thousands of quantitative trait loci has become increasingly popular in recent years  <cit> . the effects on gene expression and metabolite accumulation in each line may provide important clues regarding the genes and metabolic pathways impacted by the introgressed segments  <cit> . a recent advance in this field has reported probabilistic associations and visualizations of genes, metabolites and phenotypes for such datasets  <cit> . bioinformatics is playing an important role, allowing biologists to make full use of the advances in computer science for analyzing large and complex datasets.

biological data sets in the omics era have several common problems: they are typically large, have inherent biological complexity, may have significant amounts of noise and may change with time requiring proper tracking. these challenges require novel design and adaptation of computer science techniques and models. also, given the rapid expansion of biological data and the tools to handle them, there is both an increasing need and opportunity to extract information that may not have been obvious using past analysis methods. large databases may contain interesting patterns that, if identified and validated by further laboratory work, can lead to novel discovery  <cit> .

bioinformatics has evolved mainly from the development of data mining techniques and their application to automatic prediction and discovery of classes  <cit> . the prediction of classes uses the information available from expression profiles and known features of the data and/or experiments to build classifiers for further data interpretation. here we focus primarily on class discovery, where data are explored from the perspective that previously unknown relations can be identified and could lead to the formulation of novel hypotheses  <cit> . two distinct types of class discovery methods exist: supervised, which are guided by a few hypotheses to be tested; and unsupervised, where no target variable is identified a priori and the mining algorithm searches for structures among all variables. the most common unsupervised data mining method is clustering  <cit> . clustering refers to the grouping of observations or samples into classes of similar objects   <cit> . these algorithms segment the entire dataset trying to maximize the similarity of the samples within a cluster, minimizing their similarity to outside members  <cit> . for the analysis of these biological data, clustering is implemented under the assumption that behaviorally similar samples may be related to common pathways. according to this principle, named guilt-by-association, a set of genes involved in a biological process is co-expressed under the control of the same regulatory network  <cit> . it is presumed that if a gene with unknown function is co-expressed with a gene with known function participating in a recognised metabolic pathway it can be inferred that the unknown gene is also likely to be involved in the same pathway . similar reasoning can be applied to analysis of metabolites and to the integration of both types of data.

due to the limitations of traditional algorithms, computational intelligence has been recently applied to bioinformatics with promising results  <cit> . this research area includes artificial neural networks, evolutionary algorithms and fuzzy systems, each of them having its own characteristics and significant history. however, their application to bioinformatics problems remains a recent development  <cit> . in particular, artificial neural networks have been recently stressed as suitable for the task of clustering and knowledge discovery, for example the self-organizing maps   <cit> . these neural models have proven to be adequate for handling large data volumes and projecting them in low dimensional maps while showing, at the same time, previously unknown relationships  <cit> .

soms have been used for unsupervised clustering of transcriptome profiles increasingly over the past decade  <cit> . for example, genepattern  <cit>  provides support for several categories of gene expression analysis such as differential expression and selection, pathway analysis and class prediction/discovery through clustering. genepattern supports soms as well as several traditional clustering methods, such as hierarchical clustering. its use  <cit>  in an earlier version called genecluster has indicated significantly regulated genes over time. more recently, autosome  <cit>  has been presented as a new method for automatically clustering som ensembles of high-dimensional data, such as that from whole genome microarrays.

regarding metabolites, in  <cit>  a correlation network analysis has revealed a sequential reorganization of metabolic and transcriptional states during germination and revealed gene-metabolite relationships in arabidopsis. in  <cit>  som clustering is used for the analysis of arabidopsis thaliana metabolome and transcriptome datasets, helping in the hypothesis validation of a metabolic mechanism responding to sulfur deficiency. the results obtained after examination of each cluster by hand indicated that functionally related genes were clustered in the same or neighboring neurons.

in many cases, however, the biological experiment does not involve time or developmental change of a particular condition within a given genotype; rather genotypic differences form the basis of differential gene expression and metabolite accumulation. for example, it may involve an original genome that has been modified by introgression of wild species alleles  or transgenic plants expressing a gene of interest. furthermore, the focus may be the identification of meaningful biological points  that are hidden within large-scale analytical intensity measurements from metabolomic experiments. in  <cit>  we have proposed a som model for finding relationships among ils compared to a wild type control  at a given developmental stage in contrast to genotype-specific data representing a time-course. furthermore, the proposed model is oriented towards discovering new relationships among transcriptional and metabolic data, instead of verifying an a-priori condition.

for all of these tasks, many software tools implementing the use of soms have recently been presented. marvis  <cit>  performs data mining on intensity-based profiles using one-dimensional self-organizing maps. it has been developed for metabolome analysis, but it can also be applied to gene expression experiments. simple bl-som  <cit>  sets a som model for following the evolution of a previously-established condition over time. vanted  <cit>  is mainly presented as a tool for visualization of networks with related experimental data from large-scale biochemical experiments. additionally, this tool uses a som for clustering the input data files according to similar behavior over time.

in this paper, we present the *omesom software, which trains a two-dimensional som for the analysis and interpretation of large amounts of data of different types such as gene expression and metabolite profiling. the analysis is performed over their genotypic differences instead of time evolution. the raw dataset used to test this software were derived from ripe tomato fruits harvested from a population of introgression lines derived from a cross between the tomato domesticated species solanum lycopersicum and its wild relative solanum pennellii  <cit> . the high variation in metabolite and transcript accumulations displayed by this kind of genetic material prompted us to select it to test the feasibility of using this software on these data. this work adds a new analytical dimension providing a specialized tool for data exploration, as well as for grouping and searching for new relationships between metabolites and transcripts. furthermore, this software could be used to analyze many different types of omics data.

with *omesom we provide simple visualization interfaces for the identification of co-expressed and co-accumulated genes and metabolites at a glance, in a way that neurons grouping both types of data together are quickly highlighted. the focus of *omesom is on the easy identification of groups and pattern types, independently from the large collection of formed clusters.

the paper is structured as follows: first, implementation and software features are described followed by a discussion of the *omesom clustering. the visualization tools and a final discussion of biological applications round out the presentation.

implementation
the *omesom software has been implemented in the matlabÂ® programming language. we used a standard toolbox for som training, provided by the original developers of this neural network model  <cit> . the software packages and documentation can be downloaded from the project home page http://sourcesinc.sourceforge.net/omesom/.

the *omesom software provides the following main options:

â¢ create *omesom model: creating an *omesom model requires an input file with the .data extension, for example datasetname.data . the map size should be typed by the user in the command line.

â¢ search: any input data point can be located on *omesom. this function returns the neuron number where a given metabolite name/transcript code has been grouped.

â¢ neurons map: several views of a trained map are possible, showing transcript , metabolite  and both molecular entities  grouped into neurons. detailed plots of normalized and un-normalized data are shown. additionally, in the case of transcripts, their corresponding arabidopsis  <cit>  and solanaceae unigene  <cit>  annotations can be retrieved. also, a list of metabolic pathways  <cit>  associated with each metabolite is shown.

â¢ 3-colors map: a specific view of the map is shown, painting the neurons according to a color scale that easily indicates those grouping transcripts and metabolites which are  <dig> standard deviation out of the neuron mean.

â¢ neurons error measure: a typical measure of clustering quality  is calculated for each neuron and shown graphically over the feature map with different marker sizes.

â¢ neurons having pseudo-zeros: there are special situations where some metabolite may show undetectable levels in a specific genotype, having however valid measurements for many others.

the features described above constitute the fundamental functions of the software, which are constantly extended according to the users feedback.

RESULTS
the case study used to test the *omesom software applicability involves the analysis of fruit transcriptome and metabolite profiles from a set of tomato ils derived from a cross between solanum lycopersicum and its wild relative solanum pennelli. an example dataset can be downloaded from the project home page http://sourcesinc.sourceforge.net/omesom/.

il-dataset input file
*omesom input file format.

original and inverted versions of all data samples are included in the example.

each measurement is an average log value , where * stands for the metabolite or transcript at the genotype i, calculated from the relative measurements of the compounds studied for valid experiments, where there are measurements for at least two technical replicates. the resulting log ratios are normalized. for each pattern, the sum of the square of log ratios is set equal to  <dig> according to

  xi*=logri*âj=1p <dig> 

where p is the total number of genotypes studied.

several data integrations are possible. for example, before integration of two datasets, the plus/minus sign of one dataset can be reversed to obtain negatively correlated items. all possible relations are direct relations between transcripts  and metabolites : ât ââm , ât âât  and âm ââm ; and cross relations: ât ââm , ât âât  and âm ââm . moreover, from an input dataset with only the original data, the software can generate the inverted patterns automatically. the main input file for the *omesom should be named in the following manner:

â¢ omesom <dataversion >- <date >t <time >-otom.data: input data where <dataversion> indicates the version of the data file format and otom indicates original transcriptes and original metabolites.

once the main. data file has been loaded, the following files are automatically searched for and loaded from the same directory:

â¢ omesom <dataversion >- <comp >- <date >t <time >-ilexp.data: markers for expressed ils, where < comp > indicates the component type: trs for transcripts and mts for metabolites;

â¢ omesom <dataversion >-mts- <date >t <time >-nonormsq.data: un-normalized metabolites;

â¢ omesom <dataversion >-trs- <date>t <time >-nolowess.data: un-normalized transcripts;

for the case study, the metabolic data were obtained analyzing polar extracts of tomato fruits, through gas chromatography coupled to mass spectrometry . the peak intensities were normalized to the internal standards added and to the mass of the tissue sample processed  <cit> . the metabolite profiling technique used allows the identification of approximately  <dig> primary metabolic compounds  <cit> . metabolite accumulation measurements are obtained from  <dig> to  <dig> replicates of an experiment. metabolites that do not appear in at least two independent replicates are not considered for further analysis. for each metabolite in each il, the log ratio of the mean of the valid replicates is calculated. in the selection step only metabolites with log ratio greater than  <dig>  are kept for data integration and cluster analysis.

transcriptional levels were obtained from tom <dig> chips  ordered into spots, previously marked by hybridization with two fluorescence probes. poor quality spots, negative spots, spots not expressed in both channels and empty spots were filtered out. non-expressed spots were detected for each il and control slide. spots having a foreground signal mean less than the spot mean background plus two times the spot background standard deviation were selected. spots with at least two replicated data points are included for analysis. these measures are then normalized using the print-tip lowess normalization strategy  <cit>  and the valid replicates were averaged. a total of p =  <dig> ils were analyzed, with introgressions in chromosomes:  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  after pre-processing and selection steps, m =  <dig> metabolites and t =  <dig> transcripts reached the threshold value to be considered valid data. for further details on the preprocessing and selection steps see  <cit> .

*omesom clustering
neural network-based clustering is closely related to the concept of competitive learning, which is based on the idea of units  that compete to respond to a given subset of inputs. the nodes in the input layer admit input patterns and are fully connected to the output nodes in the competitive layer. each output node corresponds to a cluster and is associated with a prototype or weight vector. given an input pattern, its distance to the weight vectors is computed and only the neuron closest to the input becomes activated. the weight vector of this winning neuron is further moved towards the input pattern. this competitive learning paradigm is also known as winner-takes-all learning  <cit> . self-organizing maps  represent a special class of neural networks that use competitive learning. their aim is to represent complex high-dimensional input patterns in the form of a simple low-dimensional discrete map, with neurons that can be visualized in a two-dimensional lattice structure, while preserving the proximity relationships of the original data as much as possible  <cit> . therefore, soms can be appropriate for cluster analysis when looking for underlying or so-called hidden patterns in data. a neighborhood function is defined for each neuron and when competition among the neurons is complete, soms update a set of weight vectors within the neighborhood of the winning neuron.

the *omesom software builds a som model oriented towards discovering unknown relationships among transcriptional and metabolite data, showing previously unknown clusters of coordinated up-regulated and down-regulated patterns in each tomato genotype. several model topologies, map sizes and initialization strategies are possible. the initial vectors are set by principal component analysis, obtaining a learning process independent of the order of input of vectors, and hence reproducible. the model learning method is the batch training algorithm  <cit> , where the whole training set is gone through at once and only after this the map is updated with the net effect of all the samples. comparison between each pattern x* and each neuron weight vector wj is measured through the standard euclidean distance d = ||x* - wj|| <dig>  we use a gaussian neighborhood function of the form gij=eâÎ´ij22r <dig>  where Î´ij is the distance between neuron i and neuron j on the map grid and r is the neighborhood radius.

*omesom visualizations
an appropriate visualization of the resulting characteristics map, painting the neurons according to the type of data grouped, is proposed for helping in the rapid identification of combined data types. the setting of several possible visualization neighborhoods  of a neuron is also helpful for the easy detection of groups of combined data types, avoiding the need for an identification procedure. when a vn is defined, all the neurons in the neighborhood of radius vn are considered as a group and treated altogether accordingly.

for the special case of the *omesom, many interesting representations of clusters can be obtained from the projection of the patterns in the lattice of neurons. if the dataset includes the original data and all the data with inverted sign, the resulting map shows a symmetrical "triangular" configuration. this means that the top-right and down-left zones of the map group exactly the same data but have opposite sign. it can be seen directly from the data visualisation which genes and metabolites are up-regulated and down-regulated together or with the inverse relationship . there is a specific zone in the map where the exactly opposite behavior for each il can be found, which is useful for associating specific genes/metabolites to a specific genotype.

in a standard som, clusters are recognized as a group of nodes rather than considering each node as a cluster. the identification of clusters is mainly achieved through visualization methods such as the u-matrix  <cit> . this method computes the average distance between the codebook vectors of adjacent nodes, yielding a landscape surface where light colors stand for a short distance  and dark colors for longer distances . then, the number of underlying clusters must be determined by visual inspection.

the visualizations provided by the proposed *omesom model, instead, provide a simple interface for helping in the rapid identification of co-expressed genes and co-accumulated metabolites via a simple color code. the focus is on the easy identification of groups of different patterns, independently of the number of neurons in a cluster. furthermore, setting of several possible visualization neighborhoods  for a given neuron is also helpful for the easy detection of groups of combined data types, avoiding the need for the identification of neuron clusters. when a vn is defined, all the neighboring neurons  are considered as a group and treated altogether accordingly, also for counting whether metabolites and transcripts are grouped.

the following visualizations are supported by *omesom:

easy identification of clusters of combined data types
detail view of original data measurements
kegg pathways associated with grouped compounds
if metabolites and transcripts are named consistently with the kyoto encyclopedia of genes and genomes   <cit>  conventions, data grouped by neurons can be checked against metabolic pathways available online, for finding candidate genes belonging to metabolic pathways. for each metabolite, a list of kegg pathways where it participates can be easily visualized in the same interface. the software performs cross-references searches inside kegg to obtain the corresponding pathway descriptions, using the metabolite kegg codes.

visualization of clusters inside a specific chromosome segment
another possibility is the visualization of clusters from all ils belonging to the same chromosome. it is possible to select the data from a particular chromosome from a full genome dataset. this allows users to dissect particular clustering patterns showed by ils spanning a given chromosome. when components of a neuron  show significant deviations of the neuron mean with respect to the other ils, they can be visualized in separated maps as those showed in figure  <dig> for ils spanning chromosome  <dig>  this allows the comparison of pattern expressions according to a color scale that paints only neurons having patterns with an important deviation from the neuron mean, for each dimension/il. that is, neurons where at least one pattern has a value greater than the mean plus one standard deviation in the corresponding il are depicted in green. if in this il there is at least one pattern in the neuron with a value lower than the mean plus one standard deviation, the neuron is painted in gray. the variations in the gene expression levels and/or metabolite variation of the grouped patterns may provide useful information regarding genes/metabolites specifically associated with a certain introgressed chromosomal segment. this feature could help in the association of metabolite and transcript networks with genetic maps. figure  <dig> presents the output of the 3-color map function which shows the activation of a  <dig> Ã  <dig> map for all ils comprising chromosome  <dig>  the comparison of these maps allows identifying those ils showing distinctive neurons. this feature might facilitate mapping those genetic factors involved in the clusters.

quality evaluation of clusters of combined data types
it is quite important to be able to evaluate the quality of a clustering algorithm when applied to biological data, in particular if later biological inferences should be made. inside *omesom, a typical clustering measure is calculated for each neuron and shown graphically over the feature map with different marker sizes, when the feature neurons error measure is selected. this measure comprises validation measures assessing cluster compactness or homogeneity  <cit> . intracluster variance is their most popular representative:

  cÂ¯j=1|Î©j|ââxiâÎ©jâxiâwjâ <dig>  

where |Î©j| is the number of patterns in node j. as a global measure of compactness, the average over all nodes is calculated cÂ¯=1kâjcÂ¯j. values of cÂ¯ close to  <dig> indicate more compact nodes.

CONCLUSIONS
the *omesom model is oriented towards discovering unknown relationships among data, as well as providing simple visualizations for the identification of co-expressed genes and co-accumulated metabolites. it has a user-friendly interface and provides several visualization tools easy to understand by non-expert users. a case study which involved gene expression measurements and metabolite profiles from tomato fruits was presented here to show the application of the software. the interest in comparing the cultivated tomato against the different ils lies on the fact that, as has been shown, some wild tomato relatives can be sources of important agronomical characters which could be used for the improvement of commercial tomato lines. therefore, *omesom is presented as a software designed to give support to the data mining task applied to both basic research and applied breeding programs.

availability and requirements
â¢ project name: *omesom.

â¢ project home page: http://sourcesinc.sourceforge.net/omesom/.

â¢ operating system: linux and microsoft windows.

â¢ programming language: matlabÂ®.

â¢ other requirements: som toolbox.

â¢ license: opensource, free for academic use.

authors' contributions
dm and gs implemented the *omesom graphical user interface, the clustering algorithm and the clustering measurement, and wrote the manuscript. jg and jl provided the transcript case study dataset. lk, ml and fc provided the metabolite case study dataset, tested the software and wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
*omesom screenshot. several windows of the software are shown in the picture. the main menu  shows the features provided by the software. by clicking on neurons map, the upper left window appears showing a 2-d som model, where each neuron is painted according to the type of data it contains. right-clicking on one neuron, let us suppose neuron  <dig>  the upper right window appears showing a detail of the normalized patterns values that have been clustered together in neuron  <dig>  here, if one of the patterns is selected, the down right window appears, with detail of the de-normalized  values for the pattern; in this case, transcript le7e <dig>  in the background  the corresponding transcript code decodification appears  and unigene  annotations), as well as a list of related kegg pathways.

click here for file

 acknowledgements
this work was supported by conicet , anpcyt , inta  and a grant from the united states national science foundation  to jg. jl was supported in part by korea research foundation grant .
