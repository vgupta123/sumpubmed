BACKGROUND
identifying gene functions is an important task in biology. the exponential growth of genome sequences has placed greater importance on the use of computational approaches for sequence analysis and annotation. with the development of high-throughput technology, methods of comparative genomics are increasingly used to assist with the identification of gene functions  <cit> , as conventional methods of gene screening using transgenic organisms are resource intensive and time consuming. in practice, bench-side researchers frequently encounter extensive lists of genes that require further pruning and experimental validation. accurate prioritisation of candidate genes, therefore, constitutes a key step in accelerating the discovery of gene functions.

in silico candidate gene prioritisation  ranks genes based upon the features associated with genes and the function of interest. a variety of gene features have been suggested for the prioritisation of causal genes in human diseases, including the co-occurrence of gene name and disease terminology in biomedical texts  <cit> , sharing of terms in annotation or gene ontology databases  <cit> , gene expression in different tissues  <cit> , protein-protein interactions  <cit> , similarity of gene or protein sequences  <cit> , presence of genes within a phenotype or diseases database  <cit> , phylogenetic relationships  <cit> , or a combination of the above  <cit> . however, to construct a cgp system for prokaryotes, different forms of gene features are needed, as current cgp algorithms are skewed towards eukaryotic genomes and the systematic curation of annotation or genotype-phenotype databases are less complete than for eukaryotes. hundreds of whole genome sequences of bacteria and thousands of partial genome sequences are available in public databases, yet prokaryotic genomes display a higher proportion of genes with unknown function than eukaryotes  <cit> . in contrast, several methods for computational protein function discovery have been studied, including chromosomal proximity method, domain fusion analysis, analysis of gene expression patterns, and phylogenetic profiles  <cit> . in particular, the phylogenetic profile method exploits knowledge of gene occurrences across a range of sequenced genomes and postulates that genes involved in the same metabolic pathway are frequently co-inherited. phylogenetic profiles have been applied to unsupervised clustering of proteins to discover their functional linkages  <cit>  and to discover conserved gene clusters in microbes   <cit> . supervised approaches of phylogenetic profiles have also been applied to infer protein networks  and predicting protein functional class in saccharomyces cerevisiae , in the discovery of protein localisation in eukaryotes  <cit> , in functional annotation of genes . these studies suggested that the concept of phylogenetic profiles provides a valuable tool for predicting gene-function linkage. it was thus hypothesised that such concept can also be exploited as gene features for prioritising genes contributing to a particular phenotypic trait of interest, thus providing a practical and generalisable tool to guide microbiologists in gene selection.

this paper examines the practical application of the phylogenetic profile method for gene prioritisation to investigate its generalisability and applicability on both simple and complex traits in prokaryotes.

phylogenetic profiles form an indirect connection between gene and function in two conceptual steps. the first step establishes the gene-genome relationship, by examining the occurrence  of a candidate gene  in a given genome. the second step groups genomes according to their known phenotypes. we investigate two scenarios in which cgp can be useful in assisting with functional discovery of uncharacterised genes in prokaryotes. the method of statistical cgp is used when the occurrence profile can be directly inferred from the study phenotype, whereas inductive cgp is used when the profile is obscure but a small number of genes known to contribute to the study phenotype are available. candidate genes are then prioritised by either statistical scoring functions or supervised machine learning algorithms.

in addition, at present there are no clear benchmarks to allow comparison between these different approaches to gene prioritisation, and the extent to which such algorithms are capable of identifying target genes in bacteria remains unexplored. this paper takes advantage of selected metabolic processes with a well-understood genetic basis to craft gold standard prioritisation tasks. the two cgp approaches are evaluated by rediscovering genes participating in well-characterised biochemical pathways – the metabolism of peptidoglycan, fermentation in anaerobes, and selected metabolic pathways curated in kyoto encyclopaedia of genes and genomes   <cit> . we ultimately aim to develop metrics that will provide an indication of the likelihood that highly prioritised genes are strong biological candidates, and the degree to all potential candidates have been identified for tasks such as the selection of biomarkers, the discovery of virulence genes, and the formulation of new hypotheses about uncharacterised genes.

methods
determination of genomic occurrences of candidate genes
to evaluate the performance of cgp methods, three case studies were selected for rediscovery experiments using well-known pathway genes as gold-standards. for each case study, the polypeptide sequences of n candidate genes were compared with all open reading frames  of the k genome sequences from the national centre for biotechnology information  by basic local alignment and search tool  . if a candidate gene reached the critical e-value of < 10- <dig> in a given genome, a gene or gene homolog was defined as present in the genome. if a gene did not reach the critical e-value in a genome, the gene was recorded as absent from the genome. the binary states of gene occurrence were recorded in an n × k homolog matrix.

statistical cgp
from the k genomes, kp genomes known to display the phenotype of interest  were selected as positive genome examples, and kn genomes not displaying p were chosen as negative genome examples. for each of the n candidate genes, the number of co-presence  and co-absence  were counted and presented into a  <dig> ×  <dig> contingency table, from which a number of statistical scoring functions was calculated. the scoring functions included: a) sensitivity , b) specificity , c) positive and negative predictive values , d) arithmetic  and harmonic  mean of sensitivity and specificity, e) odds ratio , f) chi-square scoring function , g) directional chi-square function , and h) f-measure . the mathematical definitions of these scoring functions are listed in the additionl file  <dig> 

inductive cgp
inductive cgp ranks genes by finding genes with similar occurrence pattern across a number of bacterial genomes using supervised machine learning. a number of genes known to display a target phenotype or function p were selected as positive examples for the training set. similarly, genes that did not contribute to p were selected as negative gene examples. the occurrences of genes in k genome examples were used as features for model training. candidate genes were ranked by the score or posterior probability from the output of the machine learning classifiers. the machine learning classifiers included naïve bayes , logistic regression , j <dig> decision tree , nearest neighbour classifier , alternating decision tree , support vector machines  with polynomial  and radial basis function  kernels. the waikato environment for knowledge analysis   <dig> . <dig> was used for classifier training  <cit> . for the purpose of benchmarking, the generalisation performance of inductive cgp was evaluated by stratified 10-fold cross-validation: for the n genes used as candidate genes for prioritisation, all n+ genes from the validation set and the rest of n- genes not in the validation set were each randomly divided into  <dig> subsets. one-tenth of the the genes from each group  were sequentially selected as test set, whereas the rest of the genes were selected as training set to train inductive models. the performance of each inductive cgp algorithm was obtained by averaging areas under receiver operating characteristic curves  over the  <dig> runs.

evaluation of cgp performance
the performance of different cgp methods was evaluated by rediscovery experiments. the relative position of the ranked candidate gene was measured by percentiles from the top of the rank . the aucs were estimated non-parametrically by trapezoidal rule. we adopted probability enrichment  described by turner et al  <cit>  to compare the performance of different statistical cgp scoring functions . the average and maximum probability enrichments, defined as n folds-improvement in precision above a certain score threshold τ, were calculated by partial precision , such that:

 partial prec. at τ=pppv=num. correct genes>τnum. genes>τ 

and the average  and the maximum  probability enrichments were defined as:

 η=pppvnppvη¯=∫01ηdtηmax=η 

where t was the rank fraction at threshold τ, ppv was the overall precision, pppvn was the partial precision at rank fraction t, and η was at its maximum at t*. both auc and  measure the overall performance of a cgp task. the rank fraction t* indicates the point above which correct genes are likely to be found ηmax-times more likely than compared to a random gene list. evaluation with ηmax is useful to identify cases where a small proportion of genes is ranked highly but the overall performance is poor.

effect of number of genome examples on cgp performance
two simulation experiments were performed to investigate the effect of the number of genome examples on statistical cgp performance . for the first simulation, the amss scoring function was repeatedly applied on randomly selected subsets of  <dig> positive and negative genome examples, using genes from set m . the number of positive genome examples  and negative genome examples  were gradually increased in each subset. for each combination of np and nn,  <dig> runs were performed and the median auc was obtained. a second simulation was performed to determine the variability of performance. here the proportion of positive and negative genome examples was kept the same  and the median and the range of auc were then obtained over  <dig> runs for each np and nn.

a similar simulation was also performed to determine the effect of genome example sizes on inductive cgp performance. twenty five subsets of n genomes  were randomly selected as features with n increased from  <dig> to  <dig>  for each n, stratified 10-fold cross-validations were performed with svm/poly using all genes from sa- <dig> genome as candidates. median aucs from  <dig> random subset of n genomes were obtained.

the case studies
case study 1: identification of genes involved in bacterial cell wall synthesis
well-characterised genes responsible for peptidoglycan biosynthesis and metabolism in bacteria were used for testing and were grouped into three nested validation sets . the c  validation set consisted of genes responsible for the synthesis of n-acetylmuramate-pentapeptide from udp-n-acetylglucosamine . the b  validation set, extended the c set with genes involved in precursor pathways including n-acetyl-d-glucosamine, meso-diaminopelamate and d-alanyl-d-alanine, as well as genes responsible for undecaprenyl phosphate biosynthesis and recycling. the m  validation set further extended the b set by including genes responsible for the modification, recycling, and cross-linking of the peptidoglycan such as penicillin-binding proteins and n-acetylmuramoyl-l-alanine amidases . genome examples were selected from the ncbi bacterial genomes catalogue file  <cit>  and manually verified by one of the authors . genes in the validation sets were identified using kegg  <cit>  and ecocyc  <cit> . genomes of one gram positive bacterium  and one gram negative bacterium  were selected for prioritisation.

for statistical cgp,  <dig> genomes of bacteria known to produce peptidoglycan were selected as positive examples. genomes of  <dig> bacterial species lacking cell wall, including mycoplasma spp., ureaplasma spp., anaplasma spp., and phytoplasma spp., were selected as negative examples . for inductive cgp, the occurrence of the candidate genes in the same  <dig> genomes was used as features for machine learning training. candidate genes were labelled according to whether they belong to c, b, and m validation sets. to compare the effectiveness of statistical cgp, the relative positions of the peptidoglycan genes were compared with an unrelated metabolic pathway  acting as the control validation set .

case study 2: anaerobic mixed acid fermentation genes
enzymes responsible for anaerobic respiration and fermentation were identified from pathway databases  <cit>  and literature searches  <cit> . statistical and inductive cgp methods were used to derive the occurrence matrix and to rank candidate genes for anaerobic mixed-acid fermentation in ec-k <dig>  all genes in ec-k <dig> were used as candidates for prioritisation. for statistical cgp,  <dig> bacterial genomes of known obligatory and facultative anaerobes capable of performing anaerobic metabolism were selected as positive genome examples, and  <dig> genomes of obligatory aerobes that do not perform anaerobic respiration were applied as negative examples . methods for genome example selection were identical to case study  <dig>  for inductive cgp, the occurrence patterns of  <dig> candidate genes in  <dig> genomes were obtained by the methods described above.

case study 3: kegg pathways
to evaluate the generalisability of inductive cgp, a large-scale rediscovery experiment based on the curated kegg metabolic pathways was performed  <cit> . thirty-one metabolic pathways with at least  <dig> genes involved in each pathway were selected for evaluation from the  <dig> known pathways available for the sa- <dig> genome in kegg. all seven inductive cgp algorithms were tested, and the generalisation performance of the algorithms evaluated by stratified 10-fold cross-validation.

RESULTS
case study 1: peptidoglycan-related genes
the best scoring functions for rediscovering metabolic genes  were the amss, hmss, and npv  using the whole genome of sa- <dig>  as candidate genes. of the  <dig> known peptidoglycan-related genes, all except one gene were identified within the top 13%  in sa- <dig> . the top-scored genes in the sa- <dig> genome are listed in . encouraging results were also achieved in prioritising the ec-k <dig> genes in all three validation sets ; for example, for the m set genes in ec-k <dig> , an auc of  <dig>  was achieved by amss, and the median of the rediscovered genes was at the top  <dig>  pct of the rank. in contrast, poor performances were yielded when matching the control validation sets  against the same amss-prioritised ranks .

this table lists the performance of statistical and inductive cgps in prioritising peptidoglycan-related genes in streptococcus agalactiae  <dig> v/r. abbreviations: sens: sensitivity; spec: specificity; ppv: positive predictive value; npv: negative predictive value; amss: arithmetic mean of sensitivity and specificity; hmss: harmonic mean of sensitivity and specificity; or: odds ratio; chisq: chi-square; bchisq: signed chi-square; f: f-measure; nb: naïve bayes classifier; lr: logistic regression; adtree: alternating decision tree; ibk: k-nearest neighbour classifier; j48: j <dig> decision tree; smo: support vector machine trained by sequential minimal optimisation algorithm; poly: polynomial kernel; rbf: radial basis function kernel.

this table lists the performance of statistical and inductive cgp in prioritising peptidoglycan-related genes in escherichia coli k- <dig>  abbreviations: sens: sensitivity; spec: specificity; ppv: positive predictive value; npv: negative predictive value; amss: arithmetic mean of sensitivity and specificity; hmss: harmonic mean of sensitivity and specificity; or: odds ratio; chisq: chi-square; bchisq: signed chi-square; f: f-measure; nb: naïve bayes classifier; lr: logistic regression; adtree: alternating decision tree; ibk: k-nearest neighbour classifier; j48: j <dig> decision tree; smo: support vector machine trained by sequential minimal optimisation algorithm; poly: polynomial kernel; rbf: radial basis function kernel.

the performance of statistical cgp was also measured by folds-increase in precision  compared to the non-prioritised rank. with the chisq scoring function, the ranked gene list achieved an average enrichment of  <dig>  folds  for sa- <dig> and  <dig>  folds for ec-k <dig> . the probability enrichments of other validation sets are listed in tables  <dig> and  <dig>  high auc values were obtained from the stratified cross-validations of inductive cgp experiments. in particular, svm achieved near-perfect aucs in both sa- <dig> c and b validation sets, whereas adtree had the best auc of  <dig>  in m set genes . similarly, the best auc was achieved by svm/rbf in the ec-k <dig> m validation set . the best aucs of  <dig>  and  <dig>  were also achieved in the rediscovery of c and b set genes .

simulations were performed to investigate the effect of number of genome examples on statistical cgp performance. the range of aucs was found to be considerably broader with fewer genome examples . however, a median auc  could still be achieved with as few as  <dig> genome examples in each group in the rediscovery of the m set genes, compared with a maximum of  <dig>  using all  <dig> bacterial genomes , indicating that the method has considerable power using even a very small genome sample.

the same simulation performed on inductive cgp  also achieved an median auc > <dig>  with only  <dig> genome examples . it was noted, however, that the aucs peaked at  <dig> to  <dig> genome examples  and the performance gradually declined as more genome examples were added to the profile. considerable variation of auc was also noted when the full  <dig> genomes were included in the profile panel .

case study 2: anaerobic mixed-acid fermentation genes
statistical cgp on the anaerobic mixed-acid fermentation rediscovery task for ec-k <dig> performed poorly . however, the maximum probability enrichment was high . bacterial genes specific to anaerobic metabolism were identified with high ranking scores  by amss. in contrast, genes shared with aerobic respiration, such as the fumerase genes  and the phosphoenolpyruvate carboxylase gene , were ranked much lower . for genes encoding the fumarate reductase complex, there were mixed results: the membrane anchor subunits  were ranked highly  and the catalytic subunits were placed at the bottom of the rank . better overall performance of inductive cgp was achieved compared with statistical cgp . the best aucs with inductive prioritisation were produced by ibk and svm/poly algorithms respectively .

thirty-eight known genes were labelled as known . the auc in inductive cgp were calculated using stratified 10-fold cross-validation. abbreviations: sens: sensitivity; spec: specificity; ppv: positive predictive value; npv: negative predictive value; amss: arithmetic mean of sensitivity and specificity; hmss: harmonic mean of sensitivity and specificity; or: odds ratio; chisq: chi-square; bchisq: signed chi-square; f: f-measure; nb: naïve bayes classifier; lr: logistic regression; adtree: alternating decision tree; ibk: k-nearest neighbour classifier; j48: j <dig> decision tree; smo: support vector machine trained by sequential minimal optimisation algorithm; poly: polynomial kernel; rbf: radial basis function kernel.

case study 3: inductive prioritisation of kegg pathway genes
inductive cgp was conducted on  <dig> kegg pathways of sa- <dig> using  <dig> algorithms. the best supervised machine learning algorithms identified  <dig> pathways  with aucs > <dig>  and  <dig> pathways  with aucs > <dig>  . the best performing algorithm was ibk which had the highest auc in  <dig> pathways. adtree and svm/poly also performed well, with each producing the best auc in  <dig> pathways. svm/rbf achieved best auc in  <dig> pathways. nb and j <dig> did not produce a best auc in any of the  <dig> pathways studied.

discussion
successful prioritisation of bacterial genes by occurrence-based cgp methods
in this paper, we applied two approaches  to prioritise candidate genes for functional discovery, based on the occurrence patterns of candidate genes in a selected set of bacterial genomes . our findings demonstrate that both cgp methods can rediscover genes with high accuracy in two selected genomes of e. coli k- <dig> and s. agalactiae  <dig> .

interestingly, these methods seem relatively insensitive to the number of genome examples. in the peptidoglycan example with statistical cgp , we were able to identify peptidoglycan genes with high accuracy, despite only a limited number of sequenced genomes among negative examples. for inductive cgp, increasing profile dimension beyond  <dig> genome examples apparently resulted in a decrease in subsequent median aucs, implying that a proportion of genome examples was less informative and might not have contributed to the identification of genes of interest. this finding coincides with the observation by johti et al., where increasing the phylogenetic profile dimension with redundant genomes did not necessarily improve the accuracy in eukaryotic gene function prediction  <cit> .

in statistical cgp, we found that the scoring functions measuring gene occurrence in both positive and negative genome example groups  consistently outperform the scoring functions that measure only positive , negative , or partial  frequencies of the groups. this finding highlights the importance of including both positive and negative examples in comparative genomic studies. in inductive cgp, the rediscovery experiments favoured adtree, ibk, and svm s when compared with other algorithms. in case study  <dig>  the performance of the best inductive and statistical cgp methods are comparable, suggesting that both approaches are capable of producing robust results.

statistical cgp rediscovers genes specific to the function of interest
our results demonstrated that statistical cgp can discover genes specific to a particular function or pathway. for example, by comparing the cell-walled bacteria with cell wall-less mycoplasma spp. , it was expected that the peptidoglycan genes, which are specific for the phenotypic trait, were among the genes lost in this evolutionary lineage  <cit>  . such genes were ranked very highly and yielded favourable aggregated performance . in contrast, results from our anaerobic fermentation experiment  suggested that genes specific to anaerobic respiration were placed very highly on the rank , whereas genes sharing with the obligatory aerobic bacteria  were ranked much lower. as these shared genes are present in both phenotypic groups, finding these "shared" genes by applying only statistical cgp is a challenging task. alternative methods are needed to aid in the discovery of such non-specific genes.

evolutionary pressure may contribute to specific gene occurrence patterns
both occurrence-based cgp methods performed well, suggesting the genes encoding for a complex phenotype are frequently co-present and co-absent across the genomes, forming specific occurrence patterns, thus allowing the functional predictions. this co-occurrence phenomenon may reflect the process of natural selection and the adaptation of microorgranisms into different evolutionary niches.

for bacteria undergoing positive selection, the acquisition of a particular gene group may result in phenotypes conferring survival advantage for the microorganism to adapt to a new environment. it has been known that genes contributing to symbiosis or pathogenesis are frequently organised into genomic islands, in which gene mobility is facilitated by horizontal gene transfer, conferring the ability to form a new relationship with the host  <cit> . the good auc achieved by inductive cgp in kegg pathways  suggests specific functional co-occurrence patterns of genes do exist, regardless of the physical proximity of the genes or the presence of a mobile genetic structure.

similarly, negative selection can also contribute to the co-absence of functional gene units across multiple genomes. for a complex phenotype encoded by multiple genes, the deletion of a critical gene could result in the non-expression of phenotype, leading to the subsequent loss of other non-functional genes over time. thus, the differential co-occurrence patterns in genes can be exploited for comparative genomics studies, as demonstrated by our methods, in assisting our understanding of gene functions.

factors affecting cgp performance
sampling biases
prioritising candidate genes with reliance on gene features from literature, ontology, or annotation as background knowledge may introduce literature or annotation biases  <cit> . while we minimised such biases, several sources of sampling bias could have limited the performance of our gene prioritisation methods. with statistical cgp, accuracy can be affected by ad hoc selection of examples, especially by the choice of positive and negative genome examples representing the variations in the study phenotype. with inductive cgp, performance may be impeded by incorporating inconsistent  genes in the training set. increasing the heterogeneity of the training genes may adversely influence prioritisation performance. an example can be found in a slight decrease of performance  from c to m validation sets in the peptidoglycan experiments in ec-k <dig> candidates, as shown in figure  <dig> 

using kegg as a validation data source
there were considerable variations in inductive cgp performances across different kegg categories . by manually inspecting the worst-performing functional category , we found the phenylalanine and tyrosine trna synthases genes were also included in the validation set. the trna synthases have roles downstream of the biosynthesis pathways and thus are not involved in the anabolism of these essential amino acids. removal of the unrelated genes improved overall performance . this contrasts with the best-performing pathways  where only function-specific genes were included in the validation set. since kegg is a commonly-used resource for benchmarking computational methods of functional discovery  <cit> , our finding suggests that careful selection must be practised in constructing validation sets, as mixture of distinct functional groups could lead to inconsistent results. this specific sampling bias needs to be considered when explaining variations in the predicting of gene functions by in silico methods.

the inclusion of paralogs in the occurrence matrix
reciprocal best blast matches are frequently used in the search for orthologous genes. in our experiments, we applied non-reciprocal blast e-value < 10- <dig> as the criterion for determining the sequence similarity between genes. while our results supported its use in functional discovery at the gene level, the use of such criterion may include many paralogs and may affect prioritisation performance of large gene families with diverse functions. detecting and excluding paralogs may be required to refine the gene ranking and warrant further studies.

CONCLUSIONS
we developed a statistical and an inductive computational gene prioritisation methods, based on the concept of gene occurrence across a range of genomes, to improve the search efficiency in the functional discovery of bacterial genes. we designed a range of rediscovery experiments for benchmarking different cgp approaches. promising results were yielded from the testing on the rediscovery of peptidoglycan-related genes, mixed-acid fermentation genes, and a diverse range of bacterial metabolic pathways. these cgp methods could be generalised to other functional discovery tasks when a pair of positive and negative datasets are available  or when a subset of genes with known functions can be used for training machine learning models . with more genome sequences become available, we anticipate the demand of such methods will grow as many different scenarios can be formulated and analysed. in summary, occurrence-based gene prioritisation method offers a simple yet effective framework for ranking candidate genes for functional discovery in prokaryotes. in addition, our experimental framework should provide a standardised benchmark for evaluating future cgp methods and algorithms when prioritising bacterial candidate genes.

competing interests
the authors declare that they have no competing interests.

authors' contributions
fl contributed to the conception of the cgp frameworks and performed the rediscovery experiments. ec and rl contributed to the experimental design. all authors  contributed to the critical analysis, interpretation, and discussion. all authors contributed to the preparation of manuscript. all authors read and approved the final version of the manuscript. we thank the anonymous reviewers for their valuable comments and criticisms.

supplementary material
additional file 1
this file lists the mathematical definitions of the statistical scoring functions evaluated in case studies  <dig> and  <dig> 

click here for file

 additional file 2
the c validation set  includes genes responsible for synthesis of the peptidoglycan backbone . the b validation set includes various accessory pathways . the m validation set further includes genes responsible for transpeptidation, transglycosylation, and other genes responsible for peptidoglycan metabolisms. abbreviations: udp: uridine diphosphate; nag: n-acetylglucosamine; nag-1p: n-acetylglucosamine-1-phosphate; nam: n-acetylmuramate; nag-ep: n-acetylglucosamine-enopyruvate; ala: alanine; glu: glutamate; 2: d-alanyl-d-alanine; m-dap: meso-diaminopelamate; und-pp: undecaprenyl diphosphate; und-p: undecaprenyl phosphate; f6p: fructose-6-phosphate; d-glc: d-glucosamine; d-glc-6p: d-glucosamine-6-phosphate; d-glc-1p: d-glucosamine-1-phosphate; l-asp: l-aspartate; l-asp-4p: l-aspartate-4-phosphate; asa: aspartate semialdehyde; dhdp: l- <dig> -dihydrodipicolinate; thdp: tetrahydrodipicolinate; ns-akp: n-succinyl-2-amino-6-ketopimelate; ns-dap: n-succinyl-l,l- <dig> -diaminopimelate; l,l-dap: l,l-diaminopimelate.

click here for file

 additional file 3
the genes and the validation sets of peptidoglycan-related genes used in case study  <dig> 

click here for file

 additional file 4
this file lists the  <dig> positive and  <dig> negative genome examples used in statistical cgp of peptidoglycan-related genes.

click here for file

 additional file 5
this file lists the positions of glycolysis genes in the ranks produced by statistical cgp of peptidoglycan genes.

click here for file

 additional file 6
this file lists the  <dig> positive and  <dig> negative genome examples used in statistical cgp of anaerobic mixed-acid fermentation genes.

click here for file

 additional file 7
the rank positions, rank fractions , cluster of orthologous groups , and the positions of candidate genes in the reference genome  ranked by amss scoring function.

click here for file

 additional file 8
this figure shows the alternating decision tree  model induced by m-validation set of sa- <dig> genome. this model predicts whether a gene is related to peptidoglycan metabolism by summing the scores of all preceding nodes from root . a higher score would rank the candidate gene higher. the model shown in this figure achieved an auc of  <dig>  as estimated by using stratified 10-fold cross-validation. abbreviations of genome names: nit. europ.: nitrosomonas europaea ; wig. brevipalpis.: wigglesworthia brevipalpis ; oen. oeni psu-1: oenococcus oeni psu- <dig> ; clos. tetan. e88: clostridium tetani e <dig> ; myc. mycoides.: mycoplasma mycoides ; ehr. ruminantium str.: ehrlichia ruminantium str. welgevonden ; buc. aphidicol. cc cinara cedri.: buchnera aphidicola cc cinara cedri ; hah. chejuensis: hahella chejuensis kctc  <dig> ; ric. felis urrwxcal2: rickettsia felis urrwxcal <dig> ; por. gingivalis. w83: porphyromonas gingivalis w <dig> 

click here for file

 additional file 9
the rank fraction  of genes prioritised by amss scoring function in the ec-k <dig> genome.

click here for file

 additional file 10
the rank positions, rank fractions , cluster of orthologous groups , and the positions of candidate genes in the reference genome  prioritised by amss scoring function.

click here for file

 additional file 11
this is the tabular representation of results in figure <dig>  showing the aucs of 10-fold cross-validations in rediscovering genes in the  <dig> kegg pathways evaluated in case study  <dig> 

click here for file

 additional file 12
in case study  <dig>  evaluation experiments were performed on candidate genes selected from one s. agalactiae and one e. coli genomes. these bacterial genomes belong to divisions of firmicutes and gamma-proteobacteria, both consisting of large number of closely-related sequences in positive examples, and it could have favourably biased the performance due to over-representation. this file describes an additional cgp experiment by selecting a less-well represented genome from the ncbi database, prochlorococcus marinus mit <dig>  to investigate this effect.

click here for file

 additional file 13
there were considerable variations in inductive cgp performance in case study  <dig>  and some variations is attributable to statistical uncertainties or algorithmic differences. the influence of pathway functions on cgp performance was, however, unclear. nevertheless, it was observed that there may be limitations in using kegg pathways as a validation source, where potential sampling biases could have explained a significant proportion of such variations. in this file, an additional experiment was performed to illustrate this effect.

click here for file

 acknowledgements
authors are grateful to mike bain and guy tsafnat for their critical comments on the design of cgp experiments. we thank fanrong kong for his review and comments on peptidoglycan-related genes. this research is funded by australian national health and medical research council  project grant no.  <dig> 
