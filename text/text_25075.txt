BACKGROUND
transposable elements  are a type of repetitive sequence that have been found in nearly all eukaryotic genomes. first discovered and analyzed by mcclintock in the 1950s  <cit> , tes have the ability to move and replicate within a genome. due to their mobile and replicative nature, tes often occupy large portions of genomes. tes are estimated to represent 47% of the yellow-fever mosquito genome, aedes aegypti  <cit> , 35% of the frog genome, xenopus tropicalis  <cit> , and 45% of the human genome, homo sapiens  <cit> . this prevalence of tes poses a major difficulty in sequence assembly, as repeat regions are prone to misassembly  <cit> . tes can impact host genomes in a number of ways. they are believed to play a major role in genome evolution  <cit> , as they can insert themselves into, mutate, and move genes, thereby influencing gene expression, causing gene variation, and transferring genetic material  <cit> .

the process by which tes move about a genome is called transposition. tes are classified according to their transposition mechanism into class i and class ii elements. class i tes, or retrotransposons, are mediated by an rna intermediate, typically produced by a te encoded reverse transcriptase. retrotransposons transcribe themselves to rna and are reverse transcribed back into dna by the reverse transcriptase enzyme, the "copy-and-paste" mechanism. the presence or absence of long terminal repeats  further classifies retrotransposons into non-ltr and ltr elements. class ii tes, or transposons, are dna-mediated and transpose through the use of a transposase enzyme. transposons are typically bounded by terminal inverted repeats , which flank and serve as the recognition sequence for the transposase. the transposase adheres to a "cut-and-paste" mechanism, as it cuts out the te from the host dna and allows it to insert at a new site in the host dna. many tes have preferential insertion sites and the method by which tes move about genomes often produces artifacts flanking the tes, called target site duplications . both class i and class ii tes are further divided into families, each with distinguishing characteristics. we follow the classification scheme described by tu  <cit> , summarized in figure  <dig> 

there are several difficulties with te identification. tes do not adhere to a universal structure; rather, some families of tes follow specific structures. an example would be the tir-transposase-tir general structure of a class ii transposon, such as in the mariner element. complicating matters, the structure of tes can degrade over time. for example, tes may preferentially insert themselves in similar regions of the genome, or even within one another, leading to many nested and fragmented copies. while autonomous, or active, tes possess intact reading frames which serve as mechanisms for transposition, the majority of tes are non-autonomous. non-autonomous tes can often still be transposed, using the transcription machinery of other elements in their class. for these reasons, a general approach cannot be used to identify all tes. instead, several approaches are used with varying levels of effectiveness.

the automatic identification of tes is not as robust or mature as analogous methods currently used for genes  <cit> . bergman and quesneville  <cit>  describe many te discovery methods and classify existing te discovery techniques into de novo, structure-based, comparative genomic, and homology-based discovery methods. saha et al. and lerat more recently reviewed approaches to identify tes  <cit>  and classify identification techniques into analogous groups: ab initio, signature-based, and library-based techniques. we next describe the approaches according to the bergman and quesneville classification.

de novo
de novo te discovery approaches look for similar sequences found at multiple positions within a genome. once identified, the sequences are typically clustered, filtered, and characterized. while computationally expensive, this approach can identify novel tes and is most effective in discovering tes with high prevalence. de novo techniques are typically not effective in identifying degraded tes. example de novo tools include piler <cit>  and recon <cit> .

structure-based
structure-based approaches, such as ltr_struc <cit> , work well to identify complete tes that comply to a conserved structure. in this case, ltr_struc is effective at finding retrotransposons with ltrs at each end of the element. structure-based methods are less useful when searching for degraded tes or for tes without a conserved structural characteristic, such as ltrs or tirs.

comparative genomic
a comparative genomic discovery method described by caspi and pachter  <cit>  uses multiple sequence alignments of closely related genomes to detect large changes between the genomes. the idea is that differences in the genomes, called insertion regions, could be tes or caused by tes. such differences are analyzed and classified. this approach is useful when related genomes are readily available and can identify new families of tes. common ancestral tes will not be identified by this approach.

homology-based
homology-based approaches utilize known tes as a means to discover tes in genomes. this is typically done by manually seeding alignment programs, such as blast  <cit> , and then carefully analyzing the results. biedler and tu  <cit>  reference a suite of te-related programs to identify and characterize tes that are homology-based and quesneville, et al. offer the blaster suite of tools  <cit>  to detect tes. although there are few homology-based tools and despite the fact that they struggle in identifying tes unrelated to known elements, they are normally most accurate in identifying known tes as well as detecting degraded tes. existing homology-based approaches also sometimes utilize hidden markov models   <cit> , which are effective for closely related genomes, but struggle with distantly related species, as the models tend to capture more irrelevant data when searching for diverse sequences. additionally, homology-based approaches currently available are the fewest in number  <cit>  and least automated. moreover, many are not geared to output high-quality consensus sequences.

in this paper, we describe a fast, easy-to-use, and automated homology-based approach to discover high-quality putative tes, implemented as teseeker. this approach is aimed to be used in the analysis of tes in novel genomes.

RESULTS
te library
our modular homology-based approach relies on a thorough and high-quality library of representative tes, organized by family. when strong information is available, amino acid coding regions, reverse transcriptases for class i tes and transposases for class ii tes, are the preferred components of the library. nucleotide sequences can also be used, but such sequences do not allow for as much nucleotide variance during the search. sequences for our library were chosen manually from tefam,  <cit> , ncbi  <cit> , repbase  <cit> , and the literature. sequences with intact amino acid coding regions were preferentially chosen and a wide variety of related sequences was assembled for each family. currently, the library consists of  <dig> representative coding regions from a variety of  organisms and covers the major te families. for class i elements, the library consists of  <dig> ltr amino acid sequences representing the cer <dig>  copia, csrn <dig>  cyclops, gypsy, mag, mdg <dig>  mdg <dig>  osvaldo, pao/bel, and ty <dig> families as well as  <dig> non-ltr amino acid sequences representing the cr <dig>  i, jockey, l <dig>  l <dig>  loa, loner, outcast, r <dig>  r <dig>  and rte families. the library consists of  <dig> amino acid sequences for class ii elements, namely the gambol, hat, mariner, p, piggybac, pogo, and tc <dig> families. further details on the provided library are available within the fasta files and online  <cit> . because the library consists of sequences in the fasta format, researchers can easily modify the library or create their own library for use in the approach.

approach
our approach varies slightly depending on whether the representative tes are amino acid or nucleotide sequences, the main difference being that amino acid searches require only a translated nucleotide genome search, tblastn, while nucleotide sequences require translation of both themselves and the host genome, tblastx. we next describe the approach that starts with an amino acid library of tes, shown graphically in figure  <dig> 

the approach begins with blast searches against the genome using representative tes for the chosen family. resulting blast hits are combined if they overlap or are very close together, and are then extracted from the genome. we next assemble with cap <dig> in an attempt to gain a viable representation of the coding sequence. we use the cap <dig> results to do another blast search against the genome and process the hits in the same manner. however, when extracting the sequences from the genome, we add flanking regions. the length of the flanking region is dependent on the type of te and is utilized to enable us to capture the entire te. these results are then aligned and a consensus is generated. we use the consensus to perform a final blast search, again combining, extracting, and assembling the sequences. cap <dig> then produces the high-quality, full-length consensus te. we next describe the approach in more detail.

identify coding region
the coding region is generally most conserved across tes within a genome, as it must be complete to produce a functional protein. we begin with local sequence alignments using blast. nucleotide-based blastn searches are not as effective in identifying tes and are not used; the nucleotide sequence for a given te may vary considerably, while the translated amino acid sequence is more likely to be conserved. instead, tblastn searches are used to identify the coding region. blast produces a set of hits for each te query against the genome and we consider hits with an e-value less than 1e- <dig> for our approach. this cutoff was determined from our empirical data to limit the hits to the most probable tes while also eliminating most false positives and can also be manually adjusted. due to slight sequence variations, blast results are often rich in short, nearly-adjacent hits. we process blast results such that hits are combined if they are within a specified distance of one another,  <dig> bp by default, and originate from the same query sequence. hits with overlapping coordinates are combined as well. these combinations increase the quality of our hits and the potential to capture more complete sequences. in the case where there is a gap between sequences, we also include the intervening sequence data in our hit. figure  <dig> shows combination scenarios. once all possible combinations are performed, hits are extracted from the genome.

at this point, we have a set of possible coding sequences, both complete and partial, many of which are copies or partial copies of one another. to consolidate and improve our results, we assemble the sequences with the cap <dig> assembly program  <cit> . cap <dig> produces a set of consensus sequences generated from multiple sequences, called contigs, as well as sequences that did not assemble with other sequences, called singlets. cap <dig> also generates accompanying quality scores for the contig sequences. we use the quality scores to trim the sequences such that the highest quality sequence remains. to do this, we iterate through a contig, keeping track of the cumulative sum of quality scores for a given number of consecutive nucleotides, called the sliding window, which is  <dig> bp by default. when the average value of a nucleotide in this sliding window exceeds a threshold,  <dig> by default, we consider the corresponding sequence to be high-quality. if the average value drops below the threshold, the sequence is ignored. once we have read the entire sequence, there will likely be gaps in the sequence where there is little commonality. in these cases, we only keep the low-quality regions if they are of short length and have adjacent high-quality sequences. these results are then reassembled in cap <dig>  trimmed, and considered the best potential complete coding region. in the case that cap <dig> produces only singlet sequences, we perform the aforementioned analysis with them. we then extend the sequence to encompass the entire te. pseudocode for the steps described in this section of our approach is shown in algorithm  <dig> 

encompass complete te
once the putative coding region has been identified, we create a consensus for the complete te. we perform a blastn search with each contig from the previous  step attempting to find the instances of the te within the genome. we again process these hits as before and extract them from the genome, but this time we also extract flanking regions on either side of the viable hits in an attempt to capture the entire te. this extracted set of instances can then be used to generate a consensus sequence.

generate consensus
the extracted near full-length sequences from the previous step are inherently very similar on a nucleotide-by-nucleotide basis. to generate a consensus from this set of sequences, we perform a multiple sequence alignment with clustalw <dig>  <cit> . a consensus sequence is generated as follows from the multiple sequence alignment. we record counts for each nucleotide at each position in the alignment file. if a gap is encountered, counts for each nucleotide are incremented. if the percentage for any nucleotide at a given position exceeds a given threshold, 49% by default, that nucleotide is used for that position in the consensus. we now have a consensus sequence for the te that is the most likely sequence to occur in the genome and we need to verify that it is complete.

identify complete te
to validate and improve the consensus sequence, we look for similar copies of it in the genome with a blastn search. we again process the blast hits as previously described and extract them from the genome, generally adding short flanking sequences. the resulting extracted sequences are again iteratively examined with cap <dig> and trimmed. cap <dig> produces a sequence which represents the best estimate for a consensus putative te in the novel genome. further inspection on the putative te is advisable, both in terms of validity and classification. once validated, this te can be utilized to calculate the density of its particular family within the genome and to find individual instances.

implementation
our approach is implemented as teseeker and was purposely designed to be modular, while relying upon common bioinformatics tools, namely blast, cap <dig>  and clustalw <dig>  as well as bioperl  <cit> . teseeker is released as a virtualbox  <cit>  virtual appliance. the local web browser interface to teseeker offers the main gateway to the core teseeker functionality; however, teseeker can also be run through the command line. a researcher needs to only provide basic parameters, such as te family, host genome, closeness to combine, flank length, cap <dig> window size, and the cap <dig> quality score threshold for consensus generation. suggested starting parameters include combining blast hits within  <dig> bp, a cap <dig> window size of  <dig> bp, a combine distance of  <dig> bp, and a cap <dig> quality score threshold of  <dig>  these parameters were determined through extensive testing on arthropod genomes. further details on suggested parameters, as well as means to perform a sample run are provided within the virtual appliance. while not parallelized, researchers can easily run multiple instances of teseeker while varying parameters and te families, offering scalability.

testing
this approach was developed over the course of several te detection projects on several arthropod genomes  <cit> , but was not originally automated. dnastar seqman ii  <cit>  was used in place of cap <dig> and clustalw <dig>  dnastar seqman ii produced viable results, but it required extensive interaction from a researcher. sequences had to be manually examined and trimmed in the program, a process which took considerable time and required a trained researcher. this manual approach produced results that we consider a high-quality annotation of tes. we used these results to partially validate teseeker against the pediculus humanus humanus genome, described later. we also evaluated our approach against published results from the anopheles gambiae pest genome, as well as a number of other genomes. we utilized our library of representative coding regions for validation. except when we used teseeker to reconstruct an element from its amino acid coding region, we removed all sequences in the library that originated from the genome in question.

pediculus humanus humanus genome
the body louse, pediculus humanus humanus, is the primary vector of typhus and several other diseases  <cit> . it is the smallest presently sequenced insect genome at roughly  <dig> mb. teseeker was able to identify all class i and class ii tes, with the exception of mites, reported in kirkness et al.  <cit> . unlike many other arthropod genomes, only 1% of the p. humanus humanus genome is made up of tes.

as reported in kirkness et al.  <cit> , there were  <dig> families of tes identified in p. humanus humanus,  <dig> class i elements and  <dig> class ii element  <cit> . the ty3/gypsy ltr retrotransposon is well-represented in the genome, but there are only  <dig> full-length copies. non-ltr elements belonging to the sart and r <dig> families are also present, each also with a small number of full-length elements. the class ii mariner element is much smaller, but there are  <dig> full-length copies in the genome. detailed results for these elements are described in table  <dig>  our approach was successful in detecting each of these tes.

this table shows information for the tes identified in p. humanus humanus. we identified  <dig> families of tes, with full-length copies of each present in the genome. results were previously reported in kirkness et al.  <cit> .

teseeker correctly identified all previously reported tes in p. humanus humanus. running teseeker with suggested parameters for a mariner class ii element in p. humanus humanus produced a consensus te that was 99% identical to the manually annotated element. additionally, the ends were well-trimmed. the alignment for this comparison can be found in additional file  <dig>  modifying the parameters to account for differences in te characteristics, teseeker identified the class i tes as well. we detected the dong-like te, flanked by its tsds almost perfectly. we also correctly detected the ty3/gypsy te, with  <dig> bp of extra sequence on either end, as well as the hope-like te. our approach's ability to discover tes of varying families, across classes, in a genome with so few tes demonstrates its utility. partial or degraded copies within p. humanus humanus were found through blast searches using the full-length consensus sequences as queries.

anopheles gambiae pest genome
anopheles gambiae serves as the main vector of malaria  <cit> . the pest strain is roughly  <dig> mb and has been extensively studied. class ii p elements within the genome have been especially closely examined. sarkar et al. originally identified  <dig> distinct p elements  <cit> . more recently, oliveira de carvalho et al. identified  <dig> additional p elements  <cit> , while quesneville et al. described  <dig> clades that are at least 30% divergent at the nucleotide level  <cit> . in all, previous research has described  <dig> clades of p elements in a. gambiae that are more than 30% divergent at the nucleotide level.

teseeker detected  <dig> out of the  <dig> p elements within a. gambiae, as well as an additional  <dig> partial hits that showed strong similarity to p element transposase, but that were more than 30% divergent at the nucleotide level. the lone element that teseeker missed, agap <dig>  is most divergent from the other elements, which may explain its absence and which also suggests our library does not fully represent the p element family. additionally, teseeker produced consensus sequences with tirs on every element where they had been previously reported.

searches for additional class ii te families were also successful. in particular, we identified  <dig> of the  <dig> piggybac elements, with tirs when present, described in sarkar et al.  <cit> . again, the elements teseeker missed were most divergent from the other sequences. teseeker did especially well with mariner elements. teseeker identified each of the  <dig> elements at tefam, each with complete tirs and  <dig> with the expected tsds.

further testing was performed on class i tes available on tefam. to validate the ability of our approach to reconstruct a full-length te from a given coding region, we populated our library with coding regions from class i tes. for  <dig> of the  <dig> full-length non-ltr elements on tefam with amino acid coding regions available and also with full-length copies present in the genome, teseeker successfully reproduced the full-length element. parameters for the cap <dig> window quality often needed to be relaxed, as some sequences present in tefam are not abundant in the genome. results from teseeker were typically slightly longer on both ends, due to relaxed parameters. the single element teseeker did not produce in its entirety, loner, was still over 90% reconstructed with more than 80% identity to the tefam element. additional file  <dig> provides clustalx alignments for one member of each non-ltr family from tefam against teseeker-produced full-length elements. teseeker was also able to reconstruct over 99% of the composite pao/bel ltr element from tefam with 98% identity. in addition to the tes found in tefam, teseeker produced many additional singlet and contig sequences because of the relaxed parameters. while extensive validation was not performed on these sequences, many appear to have intact coding regions and are potentially tes present in the genome but not in the tefam database.

other organisms
teseeker was also validated on select elements in a variety of organisms. of particular note, we detected a previously unreported putative mariner element in the well-studied drosophila melanogaster genome. the  <dig> bp element has tirs  <dig> bp in length, with  <dig> mismatches, but with no apparent tsds. a single full-length copy, as well as a small number of partial hits, exist within the genome. its transposase has a high homology to related insects, such as chymomyza amoena and cladodiopsis seyrigi. searches for this element in existing te annotations for d. melanogaster produced no hits. please refer to additional file  <dig> for an annotated version of this putative element.

additionally, teseeker was used to search for mariner elements in the human , frog , and chicken  genomes. mariner elements are known to exist in the human, frog, and chicken genomes, which were found using teseeker.

advantages
our approach offers many advantages to researchers. first, teseeker allows for the fast and accurate detection of tes. as demonstrated in several genomes, across multiple te families, teseeker effectively identifies tes. in addition to te identification, our approach offers opportunities to reexamine and validate previous research. second, teseeker is very easy to use; we provide teseeker as a virtual appliance, completely configured. researchers need only provide a few parameters to begin searching. parameters are easily modified and multiple iterations of the approach can be run simultaneously. third, teseeker is general. while we primarily evaluated our approach on tes in arthropod genomes, the parameters can be adjusted to allow for the effective detection of a variety of te families in any genome, including genomes that contain only degraded tes. less stringent parameters will be more effective in detecting such degraded tes, but will also increase the number of false positives. as mentioned previously, we have utilized various stages of this approach to identify non-ltr and ltr tes in a number of genome projects. last, our approach eases the burden on expert annotators, decreasing genome annotation time.

limitations
while robust, this approach has several limitations. first, results are highly dependent on the quality of the sequences in the library and whether the novel genome contains tes with homology to those in the library. the library must contain a thorough representation of tes for a given family, preferably amino acid coding regions. the provided library has performed well, but extensive testing has not been performed on ltr elements. additionally, this approach is not designed to detect tes without a coding region, such as sines or mites. second, the approach is most effective for tes that exist in multiple copies throughout the genome. while teseeker has been shown to find tes that have only a single full-length instance, the quality of its output and the extra effort required by the researcher to alter the parameters can be time-consuming. last, results from teseeker must be closely examined. an ongoing issue with tes concerns their classification. if a search is seeded with mariner sequences, it may produce consensus tes that are not true mariners, but are rather mariner-like tes. for this manuscript, tes were classified through manual examination of their amino acid coding regions.

CONCLUSIONS
the number of sequenced genomes is rapidly increasing and the necessity to annotate them effectively and quickly is more important than ever. tes are an important evolutionary force present in the majority of these genomes. while there are mature, effective, and automated gene identification systems, the tools available for tes are not as robust. particularly, current homology-based approaches are typically very interactive, requiring numerous user decisions and the manual start of separate tools.

the approach described herein successfully identifies tes in novel genomes in an automated and user-friendly package, offering researchers the ability to quickly produce high-quality consensus tes. teseeker was developed and refined over the course of several te identification projects and works best to detect tes with homology to known tes. we are able to generate high-quality putative tes as well as characterize the prevalence of tes in many genomes. we provide teseeker as a web-based tool within a virtual appliance, while also providing our representative te library. while its local web interface automates the underlying logic, each step can be manually started through the command line, offering additional flexibility. our approach's ability to automatically analyze a genome alleviates the exhaustive, error-prone, and time-consuming task of manually inspecting and manipulating results. the performance of teseeker varies, but is largely dependent on the length of the te family and its abundance in the genome.

future work
due to the nature of tes, there will likely never be an all-encompassing approach for their detection. instead, existing approaches will be improved and used in conjunction with other approaches. with teseeker, several improvements could be implemented. first, incorporating the ability to detect structural characteristics in tes, such as ltrs and tirs, would allow us to more correctly trim our results. second, the ability for teseeker to automatically determine the length of the required flanking sequence based on family characteristics would require less expertise on the part of the researcher. this would be especially useful when coupled with classification techniques that could be applied to the results from teseeker. third, teseeker could utilize additional tools to detect tes without coding regions, such as mites or sines. fourth, as mentioned previously, the results of teseeker will only be as good as the sequences in the library. namely, teseeker will not find tes without homology to those within the library. therefore, we will provide updates to the library online. last, we could implement a cross-validation routine which would learn the optimal parameter settings for a given family, further easing the burden on the researcher.

availability and requirements
teseeker is available as a virtualbox virtual appliance running 32-bit ubuntu  <dig>  lts with all scripts and tools configured. documentation and the representative library are available as separate downloads. please see additional file  <dig> for the complete user manual, which also features an example search walkthrough.

project name: teseeker

project home page: http://repository.library.nd.edu/view/27/teseeker

operating systems: windows, os x, linux, solaris

programming languages: perl, bash

other requirements: virtualbox

license: gnu general public license  v3

any restrictions to use by non-academics: none

authors' contributions
all authors contributed to the approach's design. rck and sc designed and implemented the code. rck tested the approach on various genomes and designed the virtual appliance. mfu and rck assembled sequences for the representative library. all authors discussed and analyzed the biological data. rck drafted the manuscript and all authors read, edited, and approved the final manuscript.

algorithm 1
p = identifyputativesequences 

let q be the set of representative tes

let s be the genome

let p be the set of putative hits

let evalue be the maximum e-value of a potential hit

let distance be the maximum distance between potential hits

// search genome and sort hits according to location

for all q ∈ q do

   hq ← blast

   hq ← sort

end for

// combine overlapping hits

for all q ∈ q do

   for all h ∈ hq do

      if h ≤ evalue then

         for all i ∈ hq do

            if i ≤ evalue then

               if abs ≤ distance then

                  h ← 

               end if

            end if

         end for

      end if

   end for

end for

// extract putative tes from genome

for all q ∈ q do

   for all h ∈ hq do

      pq ← extract

   end for

end for

// assemble consensus tes

for all p ∈ pq do

   p ← trim)

end for

return p

supplementary material
additional file 1
clustalx alignment of the manually annotated mariner and the teseeker-produced mariner, both from p. humanus humanus.

click here for file

 additional file 2
clustalx alignments of selected a. gambiae pest non-ltr elements from tefam and the teseeker-produced full-length elements.

click here for file

 additional file 3
annotated putative d. melanogaster mariner element.

click here for file

 additional file 4
teseeker user manual.

click here for file

 acknowledgements
this project was supported in part by niaid/nih contracts hhsn272200900039c and hhsn266200400039c for "vectorbase: a bioinformatics resource center for invertebrate vectors of human pathogens"  <cit> . ltr reverse transcriptases within the representative library were chosen with the assistance of jose manuel c. tubío. computational resources supported in part by the notre dame center for research computing  <cit> .
