BACKGROUND
ests are primarily cdna sequences obtained by sequencing cdna fragments/clones made from mrnas. representing transcribed portions of various genomes, ests are widely used for a variety of genomic researches, including novel gene discovery, gene expression studies, and genome annotation  <cit> . while cdna/est data generated by next-generation sequencing technologies  is being deposited into the ncbi short read archive  in an unprecedented rate, the quantity of publically available est data created by traditional sanger sequencing is still increasing. as of november  <dig>   <dig>  there were  <dig> , <dig> entries deposited in the genbank dbest, the public data repository for traditional sanger ests  <cit> . unfortunately, many est datasets are poorly processed, and genbank dbest contains numerous errors from a range of sources. for example, double-termini adapters, the palindrome linker sequences that likely concatenate two different transcripts to form chimeric ests, were identified in many pinus teada ests  <cit> . in another case, we were able to identify a number of spurious sequence remnants  in a large portion of the genbank ests and their clusters/contigs for chlamydomonas reinhardtii <cit> , an artifact of under-trimming during the procedures of raw est cleanup.

in order to significantly reduce the errors in public est databases, we proposed a protocol that processes raw est data based on cdna termini/ends – a set of diagnostic sequence elements that can be used to delineate cdna insert ends and facilitate extraction of bona fide cdna insert sequences from raw ests  <cit> . specifically, the diagnostic sequence elements for cdna termini include adapter/linker sequences, insert-flanking restriction enzyme recognition sites, poly / tails, and plasmid vector fragments immediately adjacent to cdna inserts. moreover, these individual elements or components must have retained their sequential order and orientation constraints and form a canonical or expected structure for a given cdna terminus, known as the cdna terminus structure  <cit> . our previous work  <cit>  focused on detecting canonical cdna terminal structures expected from the adopted cdna library constructional protocols and filtering out those ests with abnormal and complex terminal structures for downstream applications. in this study, we have collected a total of  <dig>  raw pinus taeda est trace files, the majority of which have been submitted to both ncbi dbest and trace archive. using this dataset, our objective is to characterize the abnormal and complex terminus structure patterns, explore the potential underlying sources of wet-lab artifacts/errors, and develop a new est cleaning software tool based on pattern analysis approach. using our new tool, we have reprocessed  <dig>  pinus taeda and  <dig>  arachis hypogaea genbank ests, and detected a significant number of problematic est sequences. clearly, characterization of abnormal and complex terminal structures will improve current est cleaning steps and facilitate the quality control of error-prone ests.

RESULTS
pattern analysis of abnormal cdna terminal structures
in our previous studies  <cit> , we defined four canonical cdna termini: 5′ terminus of the cdna in the sense strand , 3′ terminus of the cdna in the sense strand , 5′ terminus of the cdna in the non-sense  strand , and 3′ terminus of the cdna in the non-sense strand . in particular, 5tss and 3tss denote the 5′ and 3′ ends of the relevant mrna, respectively, in the sense strand, whereas 5tns and 3tns delineate the 3′ and 5′ ends of an mrna, respectively, and whose sequences are read in the 5′ → 3′ direction in the non-sense strand. in order to better characterize the abnormal and complex terminus structures, in this study we have expanded our cdna terminus definitions by adding more sub-components, as shown in figure  <dig>  for example, 3tss- <dig> represents the combination of a poly tail and a xhoi site ; 3tss- <dig> denotes the combination of a xhoi site  and the adjacent plasmid vector fragment marked as vector fragment  <dig> ; 3tss- <dig> represents the poly tail; 3tss- <dig> denotes direct adjunction of a poly tail, a guanine  instead of a xhoi site , and the vector fragment vf <dig>  which is impossible in theory; and 3tss- <dig> stands only for the vector fragment vf <dig>  in figure 1vf <dig> and vf <dig> are referred to the left and right vector borders of the cloning sites.

using the same or similar cdna library construction protocol illustrated in figure  <dig>   <dig>  raw ests for pinus teada were generated by three different labs – ugalab , ncsufbg  and tigr_jcvijtc . among the ugalab ests, we found that 82%  contain detectable cdna termini. of those, about 38%  match the expected terminal structures described in figure  <dig>  while 62%  possessed abnormal terminal structures that were different from the expected structures. in contrast, among the ests from ncsufbg and tigr_jcvijtc, 94%  and 99%  have detectable cdna termini respectively. of the identified ests, ncsufbg has 68%  with the expected cdna terminal structures and 32%  with abnormal terminal structures, whereas tigr_jcvijtc has 44%  with expected cdna terminal structures and 56%  with abnormal terminal structures. clearly, ests from ugalgb display more complex cdna terminal patterns than the other two data sources.

been identified, without adjacent poly 
been identified, without poly
and xhoi site, without the vector
 <dig>  identified, without a poly
been identified, without adjacent poly
1v stands for vector sequence while n stands for non-vector sequence.

 <dig> total sequence numbers for a given case

 <dig> of  <dig>  ests,  <dig>  are designated as 3′-ests  whereas  <dig>  as 5′-ests . the percentage is calculated using the total sequence number for each case divided by all 3′-end or 5′-end ests.

4all examples are displayed in additional file 1: figure s <dig> 

restriction enzyme cutting abnormality 
because of low frequencies in occurrence, a number of more complicated abnormal patterns of cdna termini are not listed in table  <dig>  among them, interestingly, is a set of patterns that reveal restriction enzyme cutting abnormality , as summarized in table  <dig> and shown in figure  <dig>  it is known that, for a given cdna library construction protocol using a specific plasmid vector , the vector sequence between the two restriction enzyme  recognition sites should be completely removed prior to the concatenation of a cdna insert. however, our pattern analysis approach revealed that many variants of cdna terminus structure patterns can indicate possible wet-lab abnormalities during the restriction enzyme digestion procedure.

rtmnut1_27_h <dig> g1_a <dig> 
reca-type a: ecori site is cut off but xhoi site remains intact
reca-type a is the case where the ecori restriction enzyme site is cut successfully by an endonuclease  while the xhoi site is kept intact. as a result, the vector fragment between the two recognition sites incorrectly remain in the vector, and the cdna inserts can be inserted into the vector by ligating to the two sticky ends of the ecori cut-off site. depending on how a cdna insert is ligated to the resultant sticky ends, we can identify a <dig> and a <dig> sub-categories, as shown in figure  <dig>  in addition, we found an additional special case in which the adapter/linker fragments replace the cdna insert in the ligation. this case is categorized as a <dig> sub-category and shown in figure  <dig> 

a1: the double-stranded cdna insert is inserted with inversion
as shown in figure  <dig>  the double-strand cdna insert is concatenated by the sticky ends of the vector in such a way that the sense strand  tail) and non-sense strand  tail) of the cdna are ligated to non-sense and sense strand of the double-strand plasmid vector respectively. consequently, the 5′-end sequence contains cdna sequence in the non-sense strand with a cdna terminal pattern like n + 3tns-1 + v + 3tss- <dig>  whereas the 3′-end sequence possesses cdna sequence in the sense strand with a cdna terminal pattern like 5tns-2 + v + 5tss-1 + n. here, v stands for vector fragment sequence and n for non-vector sequence. as shown in additional file 1: figure s <dig> a and b, the 5′-end sequence fld1_38_a <dig> g1_a <dig> and 3′-end rtdr3_19_h <dig> b1_a <dig> exemplify this case. the 5′-end est fld1_38_a <dig> g1_a <dig> actually contains a 3′-end like cdna sequence in the non-sense strand with a detected pattern of n + 3tns-1 + v + 3tss- <dig>  whereas 3′-end est rtdr3_19_h <dig> b1_a <dig> possesses a 5′-end like cdna sequence in the sense strand with a detected pattern of 5tns-2 + v + 5tss-1 + n. in the genbank submission, fld1_38_a <dig> g1_a <dig> has not been trimmed of its 3tns- <dig> component  at the end . more importantly, it has been incorrectly designated as a 5′-end sequence while it actually represents a 3′-end sequence.

a2: the double-stranded cdna insert is inserted without inversion
in contrast to the aforementioned a <dig> sub-category, a <dig> represents the case where the sense and non-sense strands of the cdna are ligated to the sense and non-sense strands of the plasmid vector at the ecori cut-off site – an insertion without inversion. consequently, the resultant cdna terminal pattern of 5′-end ests is 5tss + n + v + 3tss- <dig> , whereas it is 5tns-2 + v + n + 3tns for 3′-end ests . as shown in figure  <dig>  after the vector is cut off at ecori restriction enzyme site, there are two resultant ecori sticky ends available in two ends of the plasmid vector . one of these sticky ends can ligate to the counterpart ecori sticky end of the cdna insert , and the other one should be available to ligate to the xhoi sticky end of the cdna insert . however, the ecori and xhoi sticky ends cannot be ligated naturally and smoothly together. owing to this incompatibility, interestingly, we have found that some uncertain random sequences, denoted by gray color in figure  <dig>  have been generated during the ligation between the ecori and xhoi sticky ends.

a3: adapter/linker fragments are inserted
instead of a cdna insert, adapter/linker fragments are found in some sequences to be ligated at the ecori cut-off site to the vector. in the example shown in additional file 1: figure s <dig> f, the 5′-end sequence nxrv076_a06_f displays the cdna terminal pattern of 5tss + 3tns-1 + v + 3tss- <dig>  and there is no cdna insert detectable around ecori cut-off site. unfortunately, in the genbank submission , the region between  <dig> and  <dig> was taken as the final clean sequence, which was identified as a vector fragment sequence using our method.

reca-type b: the xhoi site is cut off while the ecori site remains intact
in figure  <dig>  similar to the reca-type a, there are two sub-categories whose definitions are based on whether or not the cdna insert is inversely ligated at the xhoi cut-off site: b <dig> is for the insertion  with inversion  and b <dig> for the insertion  without inversion .

reca-type c: neither of the enzyme sites is cut off
as shown in figure  <dig>  sometimes neither of the two restriction enzymes is successfully cut from the vector and consequently no cdna fragment is inserted. this case is exemplified by nxci_011_d03_f and nxci_029_d07_f in additional file 1: figure s <dig> k and l, both of which have a terminal pattern of 5tss-2 + v + 3tss- <dig> 

reca-type d: both ecori and xhoi sites are cut off, but the vector fragment that theoretically should be removed still remains
this type is a combination of reca-type a <dig> and b <dig>  the abnormality appears to be caused by the fact that, after the cutoff at both ecori and xhoi sites, two cdna inserts are inserted or ligated at both cutoff sites separately. consequently, no vector fragment is actually cut off and removed . depending on the orientation of the two cdna inserts, there are a number of complex sub-categories. currently, one relevant terminal pattern that has been detected is n + 3tns-1 + v + 5tns-1 + n, exemplified by 5′-end sequence rtcnt1_24_b <dig> g1_a <dig> in additional file 1: figure s <dig> m.

reca-type e: the restriction enzyme xhoi did not cut at its recognition site
the vector sequence fragment between the restriction enzyme recognition sites of ecori and xhoi should theoretically be removed from the vector, but our analysis shows that part of this vector fragment flanking xhoi recognition site still remains in some ests. one reasonable explanation of this phenomenon is that the restriction enzyme xhoi failed to cut off the vector at its recognition site . as shown in additional file 1: figure s <dig> n, cold1_26_g <dig> b1_a <dig> appears to represent this case, in which a 3′-est displays the cdna terminal pattern as 5tns-2 + v + n.

reca-type f: the restriction enzyme ecori did not cut at its recognition site
similar to reca-type e, when the restriction enzyme fails to cut the vector at the ecori site, part of the vector fragment flanking ecori site can be retained in some ests . as shown in additional file 1: figure s <dig> o, rtca1_14_e <dig> g1_a <dig> supports this case, showing that a 5′-est can have a cdna terminal pattern like v + n + 3tss. 3tss is not necessarily detectable due to either low quality sequence region or longer cdna insert.

overall, we detected  <dig>  est sequences with reca cases. summing up all sequence numbers of each reca types in table  <dig>  we can see that reca-type a , reca-type b  and reca-type c  are the most common types. reca-type d, e and f account for about  <dig> % of all cases, whereas all other unclassified, complicated cases make up about  <dig> %. of all the three labs, ugalgb has  <dig> reca sequences and ncsufbg has  <dig>  whereas no reca case is detected in the ests from tigr_jcvijtc. interestingly, different labs have different reca types. for example, reca-type a <dig>  d, e and f are found in ugalab ests but not in ncsufbg ests whereas reca-type a <dig> and c are identified in ncsufbg ests but not in ugalab ests.

 <dig> other types include two cases:  sequences with complicated patterns whose type is hard to be determined;  sequences with too bad quality to determine the sequence type

because the bona fide cdna fragments in the raw sequences with reca cases are difficult to determine unambiguously, these ests should be filtered out and subjected to further scrutiny before their deposition into the public databases like genbank. unfortunately, most of them have been submitted to genbank by conventional est processing pipelines that do not examine cdna termini and their variations .

double-termini adapter 
previously, we reported abnormal ests with double-termini adapters  – a palindrome linker, made from two mutually exclusive terminus components , that could bring separate 3′ and 5′ directional sequence fragments together into a single, chimeric est sequence  <cit> . detailed pattern analysis of these dbt ests reveals two distinct sub-categories, which we call type  <dig> concatenation and type  <dig> concatenation, and note that type <dig> concatenation is a novel finding in this study. as shown in figure  <dig>  type  <dig> concatenation possesses a sequence pattern of cctcgtgcc + g + aattc + ggcacgagg, whereas type  <dig> concatenation has aattc + ggcacgagg + cctcgtgcc + g. type  <dig> concatenation indicates that adapter <dig> in the sense strand can be connected directly to adapter <dig> in the non-sense strand. among  <dig>  raw pinus taeda ests, we found that  <dig> % of the ugalab ests  and  <dig> % of the ncsufbg ests  have type  <dig> concatenation, while  <dig>  from ugalab and  <dig> from ncsufbg possess type  <dig> concatenation. it is interesting to note that many ests have continuous, repetitive and mixed type  <dig> and type  <dig> concatenations, as shown in additional file 1: figure s <dig> a and b. how many repetitions of such combined concatenations exist in a sequence? this might be a random effect involving complex biochemical reactions, because we have uncovered single-, double- and triple-dbt repetitions. because of such complex concatenations, we might not be able to conclude that all dbts will bring 3′ and 5′ directional sequences to form a single chimeric est. for example, as shown in additional file 1: figure s <dig> b, fld1_32_f <dig> b1_a <dig> has a complex concatenated adapter immediately before the 3tns terminus: cctcgtgcc  is connected to gaattc ; gaattc is concatenated to ggcacgagg ; ggcacgagg is concatenated with cctcgtcc again, which is part of the normal 3tns terminus. in this case, all of the sequences should belong to 3′-directional sequences, not chimeric sequences at all. in fact, about  <dig> % of 3′-end sequences of ugalab have the pattern 5tns + n + dbt + 3tns with this feature. when processing this kind of sequence, it is appropriate to take only the region between 5tns and 3tns, excluding dbt, as the cdna inserts. however, current processing pipelines have overlooked this abnormal terminus and submitted sequences including dbt to genbank .

our software tool - afst
current est processing pipelines that do not examine cdna terminal structures apparently do not have the ability to detect and filter aforementioned abnormal sequences properly before the genbank dbest submission. using pattern analysis, we have created a unique est processing protocol to determine the bona fide cdna inserts within raw est sequence reads generated by sanger sequencing. based on this protocol, we developed a software tool called afst  that can identify cdna terminal structures, visualize sequence abnormalities, and trim ests properly. as an open-source tool, the executable and source codes of afst are available online .

implemented in java with a mysql or sqlite backend database, afst allows users to load their raw ests in fasta format, with or without a relevant quality file, and specify the vector sequence, adapter sequence, and the restriction enzyme recognition sites adopted in their cdna library construction protocols. after execution, as shown in figure 5a, afst is able to provide a tabular result showing final clean, trimmed sequences and information about sequence abnormality such as dbt and reca. moreover, afst can provide more detailed information about the cdna termini  and abnormalities detected  for each individual sequence, and allow users to export results selectively for further data analysis. besides the gui version, we also create a command line version of afst that can be easily integrated into existing bioinformatics pipelines for automatic data processing.

in order to compare afst with other est cleanup tools or pipelines, we compared genbank ests for two species with our processing results because these genbank ests have been trimmed by other tools or pipelines. of the  <dig>  raw pinus taeda ests, we carefully examined  <dig>  genbank ests that had been submitted by at least three different est processing pipelines  <cit> . we found that among them  <dig> %  are “unclean” and  <dig> %  are abnormal, both of which could be cleaned or filtered by afst. moreover, two other popular tools for raw sanger est cleanup and trimming – lucy  <cit>  and seqclean  <cit>  were adopted to process the  <dig>  raw ests. interestingly, among the final clean ests trimmed by lucy,  <dig>   are still unclean,  <dig>   have dbts, and of all the  <dig>  reca sequences,  <dig> ests  are unidentified. meanwhile, among the final clean ests trimmed by seqclean,  <dig>   are still unclean,  <dig>   have dbts, and of all the  <dig>  reca sequences,  <dig> ests  are undetected. in order to demonstrate that our protocol performs well for cdna libraries other than those in pinus taeda, we reprocessed  <dig>  peanut  ests from genbank dbest that utilizes pbluescript ii sk as the vector and ecori and xhoi as the two restriction sites. consequently, we found  <dig> %  are “unclean” and  <dig> %  are abnormal using afst.

CONCLUSIONS
the ever-growing collection of est sequences in genbank is an important bioinformatics resource, providing crucial data for downstream applications related to gene identification, functional annotation, snp and other polymorphism identification, and so on. providing clean data is crucial if these applications are to be used to correct analysis. although there have been significant efforts to filter error-prone ests, many genbank ests are still problematic. as demonstrated in both this and previous studies  <cit> , current bioinformatics protocols and approaches do not explore the essence of potential est data abnormalities from the perspective of cdna library construction. consequently, they have deposited a significant amount of unclean and abnormal ests into the public repositories and created potential problems for data-dependent downstream applications. without inspecting cdna terminal structures, existing est processing programs fail to achieve sufficient data quality control and are unlikely to identify and remove common error-prone ests before genbank deposition. in this study, we have adopted a novel pattern analysis approach that proves to be effective in identifying and distinguishing est sequence abnormalities based on cdna termini structures. this approach improves identification accuracy of the bona fide start and stop position of a cdna insert within a raw est sequence, thus significantly improving est data quality. it also helps illustrate wet-lab abnormalities that can reveal potential error sources, such as a failure of one or both of the restriction enzymes to cut the plasmid vector, a failure of the restriction enzymes to cut the vector at the correct positions, the insertion of two cdna inserts into a single vector, the insertion of multiple and/or concatenated adapter links, the presence of 3′-end terminal structure in designated 5′-end sequences and vice versa, and so on. in particular, the double-termini adapter  reported previously as one est abnormality  <cit>  proves to have a novel variation  identified by the pattern analysis approach adopted in this study. clearly, our pattern analysis approach and the relevant software tool afst will help biologists diagnose the potential problems in wet-lab procedures and facilitate creation of more accurate data.

