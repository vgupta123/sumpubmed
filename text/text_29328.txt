BACKGROUND
next generation sequencing has revolutionized the study of microbial genomics. to handle the millions of sequence read fragments produced by the next gen platforms, a variety of assembly approaches have been developed <cit> . in most instances the assembler produces a set of contigs or scaffolds, which still leaves the genome in pieces. it is no longer common to completely finish and close a newly-sequenced genome. usually, we evaluate the "success" of the assembly with two metrics: the number of contigs produced and the n <dig> value. lower contig counts and higher n <dig> values are considered optimal. however, parra et al.  <cit>  and others  <cit>  reported that choosing assemblies with higher n <dig> values frequently results in conserved genes going undetected in benchmark studies. if a gene is missed due to errors at the assembly stage it will not be annotated, leading to inconsistencies in downstream analyses.

there have been several efforts to assess the quality of assemblies produced by de novo methods. gage  <cit>  and the assemblathon  <cit>  projects provided gold-standard data sets and an environment for peer evaluation of assembly methods. recently, next generation sequence assemblers were evaluated on bacterial datasets in the gage-b study. magoc et al. <cit>  showed that a single library prep and deep  sequencing coverage is sufficient to capture the genomic content of most bacterial species, but demonstrated wide variation in the assemblies produced by different methods.

analysis of genomes does not stop at assembly, however. there exist a wide range of methods for annotation of the assembled data. genome annotation includes identification of the gene sequences within a contig, and assignment of function based on similarity to known genes or sequence patterns. ab initio gene finders and methods for functional assignment each have their own associated uncertainty, and results from one method are unlikely to agree completely with those from another <cit> . assembly and annotation are the two major components of the bacterial genomics workflow, and there are an astonishing number of combinations of methods that can be used to carry out just these two steps.

when we survey the literature in microbial genomics, we find that investigators depositing microbial sequences have not come to a consensus on the best pipeline for genome analysis. several different assemblers are in common use. annotation methods may include anything from simply comparing the genome to a reference by using blast, to using ab initio genefinders, to using integrated annotation pipelines provided by sequencing centers. despite over a decade of literature on the performance of ab initio genefinders and annotation pipelines <cit>  nearly any reasonable workflow seems able to pass peer review , and so the genome annotations found in the public databases vary widely in analytic provenance. especially in the absence of reference genomes and bench work validation, the proliferation of analysis options can lead to inconsistencies  and ultimately to errors in biological interpretation. it is not possible to distinguish a true target, such as a gene that differentiates one genome from its near relatives, from an artifact introduced at the assembly or annotation steps. yet investigators often seem to remain unaware of the impact of their choices, and how the selection of glimmer <cit>  rather than genemark  <cit>   may result in a greatly altered story when they begin to analyze the apparent content of a newly sequenced genome. figure  <dig> is a summary of the major elements of current genomic workflows based on a census of  <dig> bacterial genome announcements in recent issues of the journal genomea   <cit> .

in recent years, the biomedical research community has increasingly recognized the failure of many studies to achieve reproducibility  <cit>  in data analysis protocols. in experiments using ngs data, which rely entirely upon computational analyses for interpretability, the ability to trace the history of and reproduce data analysis is especially critical  <cit> . innovation in this domain is rapid and is ongoing, and best practices for reproducibility in bioinformatics are increasingly widely discussed <cit> . the concept of workflow, originally used to describe business processes, began to be used more broadly in bioinformatics with the advent of high throughput sequencing in the early 2000s  <cit> . systems such as galaxy  <cit> , taverna  <cit> , and molgenis <cit> , among others, have made reproducible workflows more accessible to users of bioinformatics software, and many workflow systems now include the means for tracking analytic provenance, <cit> but it is clear from our survey of the literature that these innovations have yet to completely penetrate to end users of assembly and annotation methods for microbial genome sequencing.

in this study, we assess the scope of the data interpretation problem caused by variation in pipeline choices. starting with five v. vulnificus strains for which paired-end illumina sequence was collected, and one v. vulnificus genome with a high quality finished sequence that has been continually revised and updated  <cit> , we apply well-regarded assembly and annotation methods, in different combinations, to the data. we have chosen to focus on only a few of those most popular methods in each category, because workflow construction from multiple options is a combinatorial problem. the case study data demonstrate the influence of choices made during the assembly and annotation stages on biological interpretation of newly sequenced genomes. vibrio vulnificus is a bacterium commonly found in estuarine waters and mollusks. it is responsible for 95% of all deaths resulting from seafood consumption in the united states  <cit> . there are both clinical isolates and environmental genotypes associated with this bacterium, making it a prime candidate for comparative genomics study. in the present study, we demonstrate the direct impact of parameter and method choices on the biologically relevant products of a comparative genomics analysis among strains of vibrio vulnificus. comparative analysis of gene content and function is a highly relevant case study, as this analysis is a popular protocol among microbiologists, and has been shown to be more effective than mlst for bacterial strain characterization  <cit> . the results highlight the influence of the assembly and annotation pipeline on comparative content and function analysis, and emphasize the need for contributors of genomic data to provide complete information about the analytic provenance of their assembled and annotated genomes, and for consistent workflows, justified by benchmark testing where possible, to be used throughout a project. workflows used in this analysis were constructed in the taverna workflow system, and are available as a workflow pack at http://myexperiment.org. .

RESULTS
workflow dependent outcomes in a simulated assembly case
as a basis for choosing an appropriate analysis pipeline for newly sequenced v. vulnificus genomes, we first generated simulated read data from the genome of v. vulnificus cmcp <dig>  this genome was initially sequenced using sanger sequencing and a traditional genome finishing approach in  <dig>   <cit>  and was partially sequenced and completely reannotated in  <dig> <cit> . while the original annotation relied primarily on a combination of ab initio genefinders, the subsequent reannotation used additional information from closely homologous genomes and public databases of curated gene sequence patterns. the published sequence and annotations for v. vulnificus cmcp <dig> are still not exhaustively validated by transcriptome data, but they are the most heavily curated of the available vibrio vulnificus genome annotations, and therefore we use them as the frame of reference for evaluating different approaches to assembly and annotation.

we performed de novo sequence assemblies of the simulated data with velvet , abyss , and soapdenovo . genemark.hmm  <cit>  and rast <cit>  were then used to identify gene sequences for each contig set. we used orthomcl <cit>  with a stringent similarity cutoff to cluster predicted genes with their counterparts in the  <dig> v. vulnificus cmcp <dig> annotation.

the contig counts observed were  <dig>   <dig>  and  <dig> for the v, a, and s assemblies, respectively. table  <dig> summarizes gene counts obtained for each assembly followed by each gene annotation method, for the simulated v. vulnificus cmcp <dig> genomes. to avoid ambiguity, the percentage of genes recovered refers only to predicted genes, which clustered uniquely with one gene in the reference annotation. less than 1% of predicted genes cluster with apparent paralogs in the reference genome when clustered at a 95% threshold. the results presented in table  <dig> suggest that, while the velvet assembler <cit>  does not assemble the simulated data into the smallest number of contigs, it produces the most accurate assembly of the simulated v. vulnificus cmcp <dig> data. velvet, in combination with the genemark <cit> ab initio genefinder, may produce the best results on novel v. vulnificus sequence data. this type of simple two-step workflow is representative of genome analysis workflows found in the genome announcements surveyed in figure  <dig>  however, it should be noted that the best-performing workflow still resulted in a loss of over  <dig> previously annotated genes, when reanalyzing simulated v. vulnificus cmcp <dig> data.

workflow dependent outcomes on novel genome data
the published vibrio vulnificus genomes are mainly composed of  <dig> circular chromosomes, and some are known to have plasmids. the size of the v. vulnificus genome is estimated at  <dig>  mb- <dig>  mb of dna, and this size is consistent among known strains. the newly sequenced isolates v. vulnificus cip <dig>  cect <dig>  cect <dig>  cect <dig>  and cect <dig> are all known to have  <dig> chromosomes and  <dig> , <dig> , and  <dig> plasmids, respectively. table  <dig> describes each genome used in this study and its genomic characteristics, as well as the number of sequence reads available for each genome.

our analysis here is primarily focused on the performance of the assembly and annotation steps typically used during the construction of a draft genome. biological findings for these genomes will be the focus of another manuscript, currently in preparation. using the workflow framework shown in figure  <dig>  we assembled contig sets and annotation sets for each v. vulnificus strain. after the removal of sequence reads containing 'n' characters, and random sampling of read pairs to obtain 100x genome coverage based on the lander waterman statistic <cit> , there were  <dig> , <dig> paired end reads in the final read sets for each of the newly sequenced strains. the same coverage depth was simulated for v. vulnificus cmcp <dig> 

using the same de novo assemblers we applied to the simulated data set, we constructed contig sets ranging in size from 180- <dig> contigs for each of the input genomes. table  <dig> summarizes the output of velvet, soap, and abyss assemblies for each v. vulnificus strain. we then used mummer  <dig>  <cit> to align the contig sets for each strain, using an all-against-all alignment to identify contigs that were similarly constructed between the assemblers. contig pairs that exceeded coverage and sequence identity cut-offs of 95% were identified as similarly constructed. figure  <dig> summarizes the conservation of contigs across assemblies. although counts varied from genome to genome, we observed on average  <dig> contigs constructed by all three assemblers,  <dig> found by any combination of two of the three assemblers, and  <dig> contigs that were uniquely constructed by a specific assembler.

in our analysis of the novel vibrio vulnificus genomes, we included the glimmer <dig>  <cit> ab initio gene-finding method in addition to genemark and rast. glimmer <dig>  is demonstrated to be approximately 96% accurate in gene identification, <cit> which is similar to the accuracy that we observed for genemark in the cmcp <dig> case study above. in table  <dig>  we summarize the gene predictions by each of the three prediction methods for each of the three assemblies constructed for each v. vulnificus strain. we find that rast and genemark tend to identify more regions as putative genes sequences than glimmer for these strains. however, this is not a case of simple over-prediction, since the glimmer gene sequences are not strictly a subset of the predictions by other methods. as an example, in figure  <dig> we detail the number of gene overlaps between all possible assembly-to-annotation permutations for v. vulnificus cect <dig> 

workflow dependent outcomes in functional analysis
an archetypal result presented in genomic analyses is the categorization of genes into functional categories. this type of analysis is frequently used to draw conclusions about the energy sources an organism can use for survival, or about the genome's capacity to code for systems related to pathogenicity. to illustrate the impact of workflow choice on interpretation of functional content, we performed a comparative analysis among the results of six assembly-to-annotation workflows applied to the genome of v. vulnificus cect <dig>  refer to table  <dig>  we used the genosets <cit>  analysis system to perform the comparison of analysis outcomes, treating the annotation set produced by each workflow as if it were an independent "genome".

each workflow's gene set was assigned gene ontology  terms  <cit> as described in cain et al.,  <dig> <cit> . go categories and individual genes having functionality significant enrichment or depletion between the various annotation versions were identified using the gene ontologizer <cit> . see additional file  <dig> which summarizes the complete go enrichment set for each of the workflow combinations examined. we first compared annotations produced by a workflow that used the velvet assembler, followed by either glimmer or genemark.  <dig> genes appeared in the glimmer predictions, but not in the genemark predictions, resulting in the appearance of statistically significant enrichment or depletion in two go functional categories. deoxyribose phosphate metabolic process and deoxyribose phosphate catabolic process p-values were  <dig>  and  <dig> , respectively.  <dig> genes were identified solely with genemark annotations. use of genemark resulted in the appearance of enrichment in go terms associated with response to stress and iron ion binding, with p-values at  <dig> e- <dig> and  <dig> , respectively. the go terms associated with iron utilization are especially of interest in the context of vibrio vulnificus genomics, because as a pathogen it is especially dangerous to hosts in a condition of iron overload <cit> . iron-protein binding and stress response are potentially regarded as factors contributing to v. vulnificus's pathogenicity. several studies have reported on the correlation between v. vulnificus infections and increased levels of iron in animal models and infected individuals <cit> . wright et al. <cit>  showed the injecting mice with iron prior to v. vulnificus infection significantly lowered the ld <dig>  amaro et al. <cit>  showed that after the injection of v. vulnificus to an iron-overload mice, they always died within a  <dig> hour period of inoculation. in this case, changing the assembly-to-annotation analysis pipeline results in a significant change in detected gene content, in a category that is directly relevant to the biology of the pathogen.

we next examined pipelines using the abyss assembler followed by rast or glimmer.  <dig> genes were unique to the rast annotation. of these,  <dig> significant go enrichment terms were identified. in this set we find both iron-binding protein and terms associated with response to stress, again suggesting that the choice of assembly-to-annotation pipeline has the potential to significantly alter biological interpretation. only  <dig> gene clusters were unique to the glimmer set, and only  <dig> functional categories showed apparent statistically significant enrichment. comparison of rast and genemark annotations on a soapdenovo assembly resulted in approximately  <dig> statistically significant differences in functional content in either direction, although none of these categories were identified as significant to the biology of v. vulnificus in a previous study <cit> .

while these results are not conclusive, they indicate that at least in the case of v. vulnificus, rast or genemark predictions may best reflect the presence of genes in key functional categories, known to be significant in the biology of these organisms.

workflow dependent outcomes in genome content comparison
another archetypal figure found in nearly every comparative genomics analysis paper is the venn diagram or its conceptual equivalent. the venn diagram provides a convenient method to summarize what the microbiologist really wants to know: what is in strain  a that makes it function differently from strain b? in figure  <dig>  we show the effect on this commonly-generated analysis product when different assembly-to-annotation pipelines are used to generate the input data. as an illustrative example, we performed gene content comparisons between v. vulnificus strain cmcp <dig>  and strain cect <dig> . in each comparison, the same assembly-to-annotation pipeline was used on each of the genomes being compared. we tested four combinations of assembler and genefinder. in figure  <dig>  we show that the majority of differences are seen when different annotation methods are used. in contrast, when different assemblers are used with the same annotation method, the number of differential genes are highly conserved. given the large number of non-identical genes found when different pipelines are used on the same genome, as we saw in the previous examples, the result is as expected - the valuable biological "end product", the set of differentiating genes around which the biologist will build their scientific conclusions, can vary by dozens if not hundreds of members.

discussion
many factors can have an impact on the assembly of next generation sequence data. typical information captured about the provenance of sequence data focuses on laboratory procedures and conditions, as we see in the migs <cit>  standard for genomic data, or in the experiment information preserved in, for example, the ncbi's gene expression omnibus <cit> . however, assuming that samples were properly handled and prepared in the laboratory, and that procedures and conditions are consistent, there is still an entire layer of provenance information to be considered. here, we have considered the analytic provenance of genome sequence data, that is, the computational steps that are executed to process the data and to attach features and functional information that allows for interpretation.

despite an attitude on the part of researchers and publishers that microbial genome analysis is a solved problem, application of multiple assembly-to-annotation pipelines to the same data demonstrates that analysis outcomes are heavily dependent on pipeline choice. these choices carry forward into comparative content analysis and functional analysis of genomes, and have the potential to significantly impact scientific conclusions.

it is now typical to report on novel microbial genomes in terse genome announcements, abstract-style papers that give little information about parameterization and execution of bioinformatics processes. a survey of these typical papers shows that a wide variety of genome analysis pipelines using combinations of bioinformatics tools, from simple to sophisticated, will pass peer review. however, on closer examination typical pipelines do not produce identical or even similar results. and while in the hands of trained bioinformaticians, the pipelines we tested in this paper may be fine-tuned to produce somewhat more accurate results, the literature surveyed suggests that this is not what is happening "on the ground" in analysis of bacterial genomes. if the protocols outlined in recent genome reports are accurate, in many cases these protocols are no more complex than the simple one assembler, one genefinder workflows we have analyzed here.

CONCLUSIONS
while in many cases, there is not a standardized set of assembly and gene annotation tools as well as pipeline workflows for novel genome assemblies and annotations available, we recommend that creators of microbial genome datasets consider the following strategies to ensure high quality, reproducible analysis. first, if possible, benchmark proposed analysis pipelines using simulated data derived from a high-quality genome sequence that is as closely related to the novel sequences as possible <cit> . second, maintain an awareness of the variability of assembly-to-annotation results. perform parallel analyses and assess downstream results for pipeline dependence. finally, maintain a detailed record of the analytic provenance of the secondary data generated from your raw sequence reads, including pipeline steps and parameters.

