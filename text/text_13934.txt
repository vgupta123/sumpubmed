BACKGROUND
in  <dig>  katsura and hendrix  <cit>  showed that when a specific gene of the phage λ was shortened, the resulting viruses’ tails were proportionally shorter. the corresponding tape measure protein has since been identified in a large number of phages and prophages. these proteins often have a variable number of tandem repeats with highly conserved tryptophan  and phenylalanine  amino acids at fixed positions that are used as anchors by small auxiliary proteins to stretch the tape and scaffold the actual tail construction . the regular spacing between these anchors, or period, seems to be a key structural property of the tape measure protein and acts as a marking on the tape.

phages are believed to be, by far, the most abundant form of life on the planet  <cit> , a fact reflected by the large number of phage and prophage genomes currently available. this wealth of data allowed us to literally shop for tape measures that had specific properties in terms of length, period, composition and level of similarity.

reconstructing duplication histories has been an intensively studied combinatorial problem in the last ten years or so , following an initial, more biology oriented work, by walter fitch in  <dig>  <cit> . recent advances on duplication history reconstruction extend the previous models by allowing more operations such as inversions  <cit>  or segmental duplications  <cit> . all these approaches suppose a fixed boundaries model, meaning that duplication events may only occur at a fixed set of breakpoints, that does not apply very well to virus duplications . however, the basics of the theory of reconstructing unrestricted duplications was developed by benson and dong  <cit>  in  <dig>  and constitutes the starting point of the present study. the idea of their heuristic is to evaluate the number of mutations for each putative duplication event, and choose to contract the segment with minimum, or near minimum, number of mutations.

we tested most available algorithms and heuristics - with or without the fixed boundaries hypothesis -using the amino acid sequences and the corresponding dna sequences of the two viruses in figure  <dig>  unfortunately, despite the striking similarity of the sequences, the two versions of the duplication history of their presumed common ancestor were always different. since their divergence, each virus seems to have added embellishments to the original story, by the way of mutations, that eventually blur the common origin of their duplication history.

here we develop a method that uses, in parallel, the information from two or more sequences to detect the most recent duplication event of their ancestor. it is based on an algorithm that computes the expected number of mutations that occurred before any speciation event.

RESULTS
the units of the tape measures
the telltale of units in tape measure proteins is tandem repeat sequences, that can be detected with existing software  <cit> . however, since these tools are based on sequence similarity, that can be barely detectable in some cases, they must be complemented by alternative tools. figure  <dig> shows a motif generated by the meme motif discovery software  <cit>  with three tape measure proteins of staphylococcus phages sap- <dig>   <dig> and d <dig> . this motif indicates a possible repeat unit of  <dig> amino acids, with the amino acid tryptophan  as a marker.

the structural analysis of siponen et al  <cit>  suggested that amino acid phenylalanine  could be an alternate marker, and that a pattern with mixed period  could also be present. this information was used to construct two search patterns - in prosite format:

pattern 1: -x--x--x--x--x--x-

pattern 2: -x--x--x--x--x--x-

using the blast package algorithm seedtop  we found that pattern  <dig> has occurrences in  <dig> of the  <dig> proteins records in genbank that have an explicit reference to “tape measure phage protein”, and pattern  <dig> has occurrences in  <dig> of the  <dig> proteins . of these,  <dig> sequences have occurrences of both patterns, yielding a total of  <dig> sequences that contain at least one occurrence of either pattern, or nearly 5% of the  <dig> sequences. note that these results poorly reflect the real number of tape measure proteins with such periods, since many proteins highly similar to known tape measure proteins are annotated with various descriptors that range from “minor tail protein” to “hypothetical protein”.

this was an encouraging first result that yielded examples of tandem repeats that are discussed in the next paragraphs. however, further investigations, both computational and biological, are needed to discover, if they exist, the repeated units of the remaining annotated tape measure proteins. current automated tandem repeat finders rely on internal similarity to identify repeated units, and many tape measure proteins fail to show them. biological evidence of conserved structures - such as the work described in  <cit>  -are key observations that allow to construct alignments using these structures, but are based on protein crystallography experiments, thus not widely available.

reconstruction of the duplication history
we initially tried to reconstruct the duplication history of the two phage dna sequences that code for the sequences in figure  <dig> by applying the benson & dong algorithm  <cit>  separately to each sequence. the algorithm computes a normalized distance between each tandem pair of segments, and chooses as the most plausible recent duplication a pair that minimizes the distance. the normalized distance is obtained by computing the number of mutations necessary to transform one segment into the other, normalized by dividing by the length of the segments. minimizing this distance yields a most parsimonious duplication event with respect to the average number of mutations necessary to explain it.  for example, comparing the two consecutive segments of length  <dig> starting at position p =  <dig> yield the normalized distances shown in figure  <dig> 

the benson & dong algorithm requires these distances to be evaluated for each possible position and each possible multiple of the period, here  <dig> base pairs. in this first experiment, both sequences predict that the most recent duplication is a segment of length  <dig> nucleotides, but disagree on where it should be. the two top curves of figure  <dig> plot the distance versus position for the two phage sequences: the curves often widely disagree, including on where the minima are attained. the graph for phage a2_kyoto reaches its minimum at each position in interval , and the graph for phage ba4_ <dig>  at position  <dig>  and in intervals  and .

assuming that the two sequences are indeed orthologous, the origin of disagreements between the curves lies in mutations that occurred after speciation. consequently, if the data of both sequences are to be used to reconstruct the duplication history, it is necessary to develop a scoring technique, detailed in the methods section, that can discriminate between “recent” mutations and “ancient” mutations.

contrary to the classic distance that counts the number of positions in which two sequences are different, the new distance is based on the simultaneous comparison of four sequences. an example of computation taken at position p =  <dig> is shown in figure  <dig>  in this example, only three columns have a positive score: the first and third columns contain the motifs actc and tgtc and get a score of  <dig> , reflecting the expected number of mutations that preceded the speciation event; the second column contains the motif tata and gets a score of  <dig>  the combined normalized distance is thus / <dig> 

this combined normalized distance applied to all possible positions yields the bottom curve of figure  <dig>  the new curve smooths out the differences between the first two curves, and narrows the search for the position of the most recent duplication: it reaches its minimum value at each position of interval . this approach can be used recursively in order to reconstruct the recent duplication history of these sequences  but going further might stretch too far the use of a heuristic on limited input. however, pinpointing the possible positions of the most recent duplication can be useful in establishing the phylogenetic relationships between tape measure proteins, as we show in the next section.

duplication or loss?
we now turn to a group of closely related phages that infect bacteria of the cereus group. figure  <dig> shows the self-alignments of three tape measure proteins from prophages labeled by the strain of bacillus in which they were found . one of them, mycoides, is shorter than the others by  <dig> amino acids. the heuristic of the preceding section applied to anthracis and thurigiensis predicts that the most recent duplication of their common ancestor is  <dig> nucleotides long, or  <dig> amino acids. it is thus natural to conjecture that mycoides is a descendant of the pre-duplicated ancestor. however, there is always the possibility of a loss of a bloc of  <dig> amino acids in an ancestor of mycoides.

when two tandem repeat sequences are suspected to differ by one duplication or loss event, it is possible to estimate at which position this event occurred, regardless of the nature of the event . if the most recent event is a duplication event, its position can be determined by the techniques of the preceding section. in theory, there are two cases:

 <dig>  the two predictions agree. then the most recent event is either a duplication, or a loss of a recently duplicated segment.

 <dig>  the two predictions disagree. then the most recent event is a loss.

this result illustrates the difficulty of deciding between duplication and loss. indeed, as simulations show , the shape of the curve that determines the position of the most recent event is also an indication of its nature.

methods
heuristic for duplication reconstruction
the duplication reconstruction heuristic proposed in  <cit>  compares every possible pair of consecutive segments of length np where n is an integer greater than  <dig>  and p is the period of the repeat. each comparison results in a score that is divided by np, and the duplication with the lowest score is a candidate for contraction. a contraction merges together the two consecutive segments by using the fitch procedure: let s and t be the sets of nucleotides at position j in each segment, if s ∩ t ≠ ∅, then the new position j is filled by s ∩ t, otherwise it is filled by s ∪ t.

in the original paper of benson and dong, the sequences were scored by the number of unions performed in the comparison, which is proportional to the number of mutations that separates the two segments. in this paper, we want to apply the same heuristic, but with a different scoring technique that uses two or more dna sequences whose common ancestor underwent the duplication events. to do this, we must be able to evaluate the number of mutations that occurred before the speciation event.

orthologous and paralogous nucleotides
the self-alignments of figure  <dig> are gapless, and this property holds also for the alignment of the underlying dna sequences. this allows us to apply the classical terminology of paralogs and orthologs to single nucleotide positions.

suppose that a sequence of length p undergoes a series of duplications of lengths np, where n is an integer greater than  <dig>  for example:  

the length of the resulting sequence will also be a multiple of p, and any two nucleotides in the resulting sequence whose positions differ by a multiple of p were created by a duplication event, thus can be called paralogs. in our model, two tape measure proteins that have a good parallel alignment, such as the one in figure  <dig>  are presumed to share the duplication history of their common ancestor. under this hypothesis, all duplications occurred before the speciation event, and nucleotides that are in the same respective position in each sequence can be called orthologs.

problem  <dig> suppose that a duplication event created paralogous nucleotides x and y, and that a subsequent speciation event created orthologous viruses  <dig> and  <dig>  yielding the two pairs of orthologs x <dig> and x <dig>  and y <dig> and y <dig>  what is the expected number of mutations that occurred before the speciation event?

f-trees and the fitch algorithm
to discuss the properties of the model, we need the following definition and notations, illustrated in figure  <dig> 

definition  <dig> an f-tree is a duplication-speciation tree with  <dig> ordered leaves labeled by sets a, b, c, d that are subsets of the set of nucleotides {a, c, g, t}.

• the left node is the parent of the leaves labeled by sets a and c. it is labeled by l = a ∩ c, if this set is non-empty, otherwise by l = a ∪ c.

• the right node is the parent of the leaves labeled by sets b and d. it is labeled by r = b ∩ d, if this set is non-empty, otherwise by r = b ∪ d.

• the ancestor node is labeled by x = l ∩ r, if this set is non-empty, otherwise by x = l ∪ r.

the number n of mutations of an f-tree is the number of set unions necessary to construct the sets l, r and x. a labeling of an f-tree is a labeling of its leaves and nodes by nucleotides, such that each leaf is labeled by a nucleotide that belongs to its set label, and such that the number of mutations - that is, edges with different labels at their extremities - is equal to n. note that it is not mandatory that nucleotides that label internal nodes belong to the corresponding set label, l, r or x.

the procedure outlined in definition  <dig> was originally proposed be w. fitch  <cit>  as a way to compute the minimum number of mutations for a given tree, it was later proven correct by d. sankoff  <cit> . the sets computed for a parent node by this rule are called fitch sets.

a mutation occurs before the speciation event in a given labeling if it occurs between the root and one of its children, otherwise it occurs after the speciation event. if an f-tree has several labelings, we denote by nb the average number of mutations that occurs before speciation among all possible labelings, and by na, the average number of mutations that occurs after speciation. clearly, nb + na = n.

we first compute, as an example, the values of n and nb in the case all sets a, b, c and d are singletons. the general proof is presented in the next section. there are  <dig> =  <dig> different motifs of  <dig> nucleotides. with respect to our problem, they can be partitioned into  <dig> classes with the following representatives: aaaa, aaat, atta, caat, tata, acat, and actg. of these, the first four cases yield nb =  <dig> 

the tata-motif is the simplest of the remaining cases, since only one mutation is required to generate it. this motif can be described as two pairs of equal orthologous nucleotides. figure  <dig> shows the two possible labelings, and the single mutation can only be assigned before the speciation event.

the actg-motif, on the other hand, requires a minimum of three mutations. figure  <dig> shows  <dig> of the  <dig> possible labelings and, on average, 2/ <dig> mutations occur before the speciation event, and 7/ <dig> after. note that the third labeling is not obtainable by the fitch traceback algorithm since the label of the right child of the root is not contained in the union of the labels of its children.

the acat-motif is the most complex and is shown in figure  <dig>  it has one pair of equal orthologous nucleotides, and requires a minimum of two mutations. three labelings have nucleotide a as an ancestor, one has nucleotide c and one has nucleotide t. on average, 4/ <dig> mutations occur before the speciation event, and 6/ <dig> after.

in the next sections, we will show how these observations can be generalized to trees labeled by sets.

computing the average number of mutations preceding speciation
when the leaves of an f-tree are labeled by sets containing more than one element, the possible labelings can include more than one motif. for example, if:

a = {a, t}, b = {a, t}, c = {t}, d = {a}

then the fitch procedure yields n =  <dig> mutations. four possible labelings achieve this minimum: two with tata labeling the leaves, one with aata, and one with ttta. the motif atta is excluded since it requires n =  <dig> mutations.

in order to solve the general case, given the sets a, b, c and d, consider the following parameters:  

the next three lemmas give the average number of mutations that occur before speciation in an f-tree with leaves labeled by the sets a, b, c and d, with n >  <dig> minimum number of mutations:

lemma  <dig> when n =  <dig>  the average number of mutations that occur before speciation is given by:  

proof. there is only one mutation when exactly one of the sets a ∩ c, b ∩ d or l ∩ r is empty. if l ∩ r is not empty, then either a ∩ c = ∅ or b ∩ d = ∅. if a ∩ c is empty, then the single mutation occurs in the left subtree, there is at least one motif with three equal nucleotides implying naaat >  <dig>  ntata =  <dig>  and nb =  <dig>  thus the result holds. the case b ∩ d is similar.

if l ∩ r is empty, then any motif with two different nucleotides may be present, but only motifs with orthologous equal nucleotides , or motifs with three equal nucleotides, yield n =  <dig>  the tata-motif has two different labelings, as seen in figure  <dig>  both of which assign the mutation before the speciation event. the aaat-motif has only one labeling, and the mutation occur after the speciation event. thus nb = 2ntata/.

lemma  <dig> when n =  <dig>  the average number of mutations that occur before speciation is given by:  

proof. we first consider the case l ∩ r ≠ ∅. both a ∩ c = ∅ and b ∩ d = ∅, implying nacat =  <dig>  since  ≠ ∅, then at least one of the sets a ∩ b, a ∩ d, c ∩ b or c ∩ d is not empty. in this case, ncaat may be  <dig> when both |a ∩ b| and |c ∩ d| are non zero, or both |a ∩ d| and |c ∩ b| are non zero, but in these cases, natta >  <dig>  thus we have  >  <dig>  the atta-motif has two possible labelings, both of which assign the two mutations after speciation, and the caat-motif has only one labeling, also with the two mutations after speciation, thus nb =  <dig> and the formula holds.

when l ∩ r = ∅, then one of a ∩ c or b ∩ d is not empty and nacat >  <dig>  as seen on figure  <dig>  there are five possible labelings of acat-motifs, four of which have a mutation preceding speciation. however, atta-motifs and caat-motifs may also be present, for example with:

a = {a, t}, b = {c, g}, c = {a, g}, d = {t}.

thus, nb = 4nacat/.

lemma  <dig> when n =  <dig>  the average number of mutations that occur before speciation is given by nb = 2/ <dig>  proof. in order to have n =  <dig>  all three sets a ∩ c, b ∩ d and l ∩ r =  ∩  must be empty, thus the four sets are singletons, and, by the case study of figure  <dig>  nb = 2/ <dig> 

detecting duplication and loss events
in this section, we discuss the problem of detecting a duplication or loss event when comparing two tandem repeat sequences. we first discuss this problem in the fixed boundary context. formally, we are given two sequences:

b = b1…bj–1bj+1…bn

c = c1…cj–1cjcj+1…cn

each of them composed of segments of the same length, and both sharing a common ancestor a that contained all segments, except possibly the segment at position j. the relation between the sequences is either a duplication creating segment cj in the lineage of sequence c, or a loss of segment bj in the lineage of sequence b. the hamming distance between two segments is denoted by h and measures the number of position with different nucleotides in segments s and t. under these hypothesis, the problem is the following:

problem  <dig> given sequences b and c, what is the position j of the duplication or loss event that minimizes the distance between the sequences?

define c|i = c1…ci−1ci+1…cn, as the sequence c with segment at position i removed. then we have:

proposition  <dig> if h ≤ h, for ℓ ≠ i, then the function h attains a minimum when i = j.

proof. we have . if i <j then  

thus, since h ≤ h, we have:  

the same reasoning holds when i >j.

the hypothesis that h ≤ h reflects the fact that the duplication event that created the segments at position i and ℓ preceded the speciation event that created sequences b and c. in real data, the hypothesis might not hold for all values of i and ℓ, but it should hold on average.

without the assumption of repeats with fixed boundaries, it is still possible to use proposition  <dig> to obtain an estimate of the position of a duplication or loss event by testing all possible sets of boundaries. this is equivalent to computing, for each position i of the nucleotide sequence c, h), where d is the difference in length of the two sequences, and c|[i,i+d) is the sequence c with all nucleotides between positions i and i + d –  <dig> removed.

we also simulated loss events in prophage a2_kyoto of figure  <dig>  whose most recent duplication, according to the graph of figure  <dig>  occurs around position p =  <dig> and is of length  <dig>  figure  <dig> shows the graph of function h, c|[i,i+33)) for three different loss events, one at p =  <dig>  one at p =  <dig> and one at p =  <dig>  each curve exhibits a clear minimum around the position of the simulated loss event, but the shape of the curve differs depending on the distance between the position of the loss event and the position of the most recent duplication.

CONCLUSIONS
in this paper, we developed a variety of tools to study the evolution of tape measure proteins. we relied on existing software to identify repeated units and markers, and we have already identified hundreds of sequences that have a clear repetitive structure. however many tape measure proteins do not have readily identifiable repeat sequences, or markers, and new methods must be developed to classify them.

in order to study the duplication histories of this first set of sequences, we developed new theoretical tools that could use in parallel the information provided by slightly divergent sequences. for the time being, these analysis are restricted to pairs of sequences for two main reasons:  the algorithm assumes an established rooted phylogeny of the studied sequences, and, given the high rate of recombinations between phages  <cit> , this is not a trivial task;  the computational complexity of extending the algorithm to more than two species is unknown, but suspected to be hard.

competing interest
the authors declare that they have no competing interests.

supplementary material
additional file 1
uncovering shared duplication history techniques for detecting shared duplication history between tandem repeat sequences.

click here for file

 additional file 2
models for boundaries in tandem repats the fixed boundaries model and the unrestricted boundaries model for tandem repeat sequences

click here for file

 acknowledgements
mb and gp are supported by nih grant p20rr <dig> from the national center for research resources. gp is supported by nih grants u54rr <dig> and p20rr <dig> from the national center for research resources. the paper’s contents are solely the responsibility of the authors and do not necessarily represent the official views of the nih. ab is funded by nserc .

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2011: proceedings of the ninth annual research in computational molecular biology  satellite workshop on comparative genomics. the full contents of the supplement are available online at http://www.biomedcentral.com/1471-2105/12?issue=s <dig> 
