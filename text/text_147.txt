BACKGROUND
protein structure comparison techniques are of great importance for inferring distant evolutionary relationships that cannot be suggested from sequence similarity alone  <cit> , and finding recurrent structural motifs in proteins  <cit> . because of its importance, many structural alignment algorithms have been developed  <cit> . although there are a variety of structure alignment algorithm, most of them follow a simple sequential rule, that is, two proteins are aligned only in sequential order. recently, however, a number of interesting examples that show non-sequential structure similarity have been reported, where non-sequential structural similarity is the structural similarity in which structurally equivalent regions are aligned in different order in the sequence of the compared proteins. the most populated class of non-sequential structural similarity is circular permutation  <cit> . although not as many as that of circularly permutation, the number of examples that show non-sequential similarity beyond circular permutation proved to be also significant  <cit> . further, ilyin et al. found that non-sequential structural alignments between proteins are not limited to proteins of any particular fold, and they are systematic and widespread across the protein universe, suggesting generality and importance of non-sequential structural relationship  <cit> .

non-sequential structural similarities are intriguing in terms of evolution. currently, some examples of protein pairs with evidence for evolutionary relationships that fold into topologically different but share the same secondary structure packing arrangement have been known. one of the most interesting examples of such protein pairs is that of kh domains of hnrnp k  and ribosomal protein s <dig>   <cit> . they show statistically significant sequence similarity  implying homology. their structures, however, are quite different in topology while converging to the same architecture. another example is a pair of carboxylic esterase  and hydroxynitrile lyase   <cit> . both belong to the same superfamily  defined in scop database  <cit> , suggesting that they share a common evolutionary ancestor. however, structure alignment revealed that the sequence order of the long structurally equivalent region is swapped  <cit> . these examples suggest that some proteins have changed their folds by segment shuffling or rearrangement events while conserving the same core packing arrangements. further investigation of such protein pairs would give us a hint as to how proteins can change their fold in the course of evolution.

although some non-sequential structure alignment methods have been developed  <cit> , there is still much room for improvement in non-sequential structure alignment algorithm. indeed, we have tested all of the publicly available non-sequential structure alignment programs, and found out some problems of currently existing methods which is specific to non-sequential structure alignment. one of the problems is that some non-sequential structure alignment algorithms which utilize a single vector representation of each sse tend to fail in aligning residues which belong to long sses. such a simplified protein representation is crucial especially for non-sequential alignment, because search space for non-sequential alignment is much larger than that for sequential alignments. however, such an approach is not suitable for describing bent or twisted nature of long sses, which makes it difficult to correctly align long sse regions. also, it may be difficult to correctly align a short sse in a long one by the single vector representation, even if the long sse is not bent or twisted. on the other hand, another kind of the non-sequential structure alignment method which employ a cα representation of protein structures has another kind of problem. for instance, alignments generated by samo  <cit> , which tries to maximize the number of matching cα atoms and minimize their root mean square distance, frequently show over-fragmentation; there is no long continuous alignment region, although the number of matching residue is large and rmsd of aligned residues is small. an example of such alignment is shown in figure  <dig> for arylamine n-acetyltransferase and epididymal retinoic acid-binding protein. these two structures are very similar, as is suggested by the reference alignment which is taken from malisam database  <cit> , a manually curated database of structurally analogous pairs. for the same protein pair, samo generates a totally different alignment. the reference alignment has rmsd of  <dig>  Å over  <dig> residues, while the alignment by samo gives  <dig>  Å over  <dig> residues, suggesting alignment by samo is better than reference just in terms of these values. however, it is questionable whether such a highly scattered and fragmented alignment is evolutionary or physically meaningful.

in this paper, we introduce a novel non-sequential structure alignment method called “mican” that overcomes above-mentioned problems. mican is designed so as to find the rotational matrix that maximize a structural similarity score of sse region, regardless of chain connectivity. since mican utilizes an sse as a structure unit in structure comparison, it is free from over-fragmentation problem, or noisy alignments which mostly consist of relatively short segments or single residues. the search scheme of mican is based on the geometric hashing paradigm. it was originally developed for model-based object recognition problems in the area of computer vision, and has been widely applied to protein structure comparison studies  <cit> . geometric hashing has the property that it does not use the sequential order of the points to be compared. therefore, it is highly suitable for structure comparison in cases where the sequential order should be ignored. one of the key feature of the algorithm is utilizing the multiple vector representation for each sse. this feature enables us to correctly treat bent or twisted long sses. another feature is a building way of reference frame in the geometric hashing technique, in which one reference frame is defined per point to be compared, not defined per pair or per triplet of points. by virtue of this technique, we can reduce the number of reference frame systems to be compared to o, while that of the cases in which one reference frame is defined per triplet is o, where n is the number of points to be compared. as a result, mican algorithm is very fast; it is the fastest non-sequential structure alignment program among all the programs we examined here.

in order to assess the performance of the algorithm, we compare mican with other publicly available non-sequential alignment programs: dedal, snap, gangsta+, scali, mass, and samo, as well as sequential ones: dalilite, ce, and tm-align. we evaluate those programs using both reference-dependent and reference-independent evaluation methods on both sequential and non-sequential benchmark test sets. we show that mican outperforms the other existing methods for reproducing reference alignments of non-sequential test sets. furthermore, although mican does not specialize in sequential structure alignment, it shows the top level performance on the sequential test sets for both reference-dependent/independent measure.

the source code of mican is freely download-able at http://www.tbp.cse.nagoya-u.ac.jp/mican.

RESULTS
evaluation
in order to assess the performance of alignment methods as objectively as possible, we use both reference-dependent and reference-independent evaluation methods.

reference-dependent evaluation is based on pre-computed gold standard of reference alignments. reference alignments are often carefully inspected, or manually curated to ensure good alignment quality. they are considered to be, for the most part, biologically or physically meaningful, although they may not be necessarily perfect. the reference-dependent alignment accuracy is calculated as the number of correctly aligned residue pairs in a test alignment divided by the total number of aligned residue pairs in a reference alignment. because of its biological or physical relevance, as well as simplicity of the evaluation, reference-dependent evaluation has been widely used  <cit> . however, some aspects of the method have been criticized; it relies heavily on the correctness of the reference alignment and it is unclear how the quality of reference alignment influence the evaluation of alignment programs  <cit> .

on the other hand, reference-independent method does not require reference alignments. it evaluates purely geometric measure, such as number of aligned residue pairs, their rmsd, number of gap, or their combinations. thus, reference-independent method is free from problems associated with reference-dependent evaluation. comparing these geometric measure is particularly useful for identifying characteristic feature of several alignment programs. however, these similarity measures may not necessarily reflect the biologically or physically-meaningful similarity  <cit> . this situation is particularly serious, especially for non-sequential structure alignment. for instance, as shown in figure  <dig>  an alignment by samo shows larger number of aligned residue pairs and lower rmsd than those of the reference alignment. however, its alignment seems to be not physically relevant because there are too many gaps and too many short segments that are likely to be spurious matches in the alignment.

as mentioned above, both reference-dependent and reference-independent method have their own advantages and weaknesses. the use of both two evaluation methods would provide more objective view on the results of the benchmark test, highlighting different aspects of the algorithm.

datasets
what kind of datasets should we use for the evaluation of non-sequential structural alignment programs? obviously, many protein pairs of which the ‘correct’ alignments is known to be non-sequential are needed. we refer to such test sets as ‘non-sequential test sets’. in addition to that, ‘sequential test sets’, a collection of protein pairs of which the ‘correct’ alignment is sequential, are also needed. that is because ideally, if the correct alignment is sequential, non-sequential alignment programs should generate a sequential alignment. sequential test sets enable us to assess such an ability of non-sequential programs. thus, we have used both sequential and non-sequential test sets for the evaluation of different structural alignment programs.

as sequential test sets, we chose malidup  <cit>  and malisam  <cit> , which contains manually curated structural alignments with non-trivial homology  or structural analogy . we call these benchmark sets as “malidup-sq” and “malisam-sq”, hereafter.

we must construct non-sequential test sets for evaluation of non-sequential alignment, because of the absence of gold standard of non-sequential structural alignment databases. here, we create artificial non-sequential test sets “malidup-ns” and “malisam-ns” based on the sequential test sets, rather than collecting naturally occurring non-sequential alignments, because the number of currently known naturally occurring protein pairs that show non-sequential structural similarity is limited. the detailed description of how to create artificial non-sequential test sets is given in the methods section.

comparison to other alignment programs
we compared the alignments of mican with those of other structure alignment programs. they are three sequential alignment programs: dalilite  <cit> , tm-align  <cit> , and ce  <cit> , and six non-sequential alignment programs: dedal  <cit> , snap  <cit> , gangsta+  <cit> , mass  <cit> , scali  <cit> , and samo  <cit> . we selected dalilite, tm-align and ce as representative of sequential alignment programs, because they have been known to be one of the best structure alignment programs  <cit> . the choice of above-mentioned non-sequential programs was based on the availability of stand-alone programs. all of the programs were downloaded and executed locally on a linux platform. if the source code of the program was available, we compiled it with gnu compiler  <dig> . <dig> on the computer. to our knowledge, this is currently the largest and most comprehensive comparison of non-sequential structural alignment programs.

benchmark test with reference-dependent evaluation
results of sequential alignment test
in order to assess alignment accuracy of several method on sequential test sets, we compared the alignments generated by the ten methods with all of the reference alignment of malidup-sq and malisam-sq, and computed percentage of agreement, q-score. here, q-score is defined as the number of correctly aligned residue pairs in a test alignment divided by the total number of aligned residue pairs in a reference alignment. the corresponding box-and-whisker plots are shown in figure  <dig>  and mean q-score are listed in table  <dig>  we also present the scatter plots of q-score for all pairs of the compared methods in figure  <dig>  for malidup-sq test set, the largest mean q-score was achieved by mican with  <dig> %  and the second largest mean was  <dig> %  by dalilite. on the other hand, for malisam-sq test set, the best algorithm was dalilite and the second best was mican. its mean q-score was  <dig> %  by dalilite and  <dig> %  by mican. the alignment accuracy by dalilite and mican are statistically indistinguishable; according to the wilcoxon signed rank test, p-value is  <dig>  and  <dig>  on malidup-sq and on malisam-sq, respectively. these two programs are the leading methods in the comparison, because the difference between these two and the others are statistically significant with p <  <dig> . for example, the alignment accuracy by mican and dedal is statistically distinguishable; p-value is  <dig> ×10− <dig> and  <dig> ×10− <dig> on malidup-sq and on malisam-sq, respectively. the scatter plots of q-score shown in figure  <dig> also show superiority of the two programs. from these results, it can be concluded that mican and dalilite showed the best performance at least for reference-dependent evaluation on malidup-sq/malisam-sq test sets. it should be noted that although mican does not specialize in sequential structure alignment, the performance of mican is comparable with that of dalilite, which is known to be one of the best sequential alignment program.

results of non-sequential alignment test
to examine the ability of reproducing non-sequential reference alignments, we performed the benchmark test on the non-sequential test sets, malidup-ns and malisam-ns test set. as far as we tested, ce program did not work for protein pairs in the non-sequential test sets. that is because artificially generated protein structures included in the test sets have chain break. accordingly, data of ce algorithm is not shown for the test sets. the results of the non-sequential benchmark tests are shown in figure  <dig>  figure  <dig>  and table  <dig>  as we expected, the performance of sequential alignment programs, dalilite and tm-align, were significantly decreased on non-sequential test sets, compared with their results on sequential test sets. for example, the mean q-score obtained by dalilite has dropped from  <dig> %  to  <dig> % . this result is a natural consequence, because these sequential alignment programs were not designed so as to align protein structures in non-sequential manner. on the other hand, the performance of non-sequential alignment programs are robust against changes of test sets from sequential to non-sequential. among them, mican shows outstanding performance on the test sets. it achieves the highest median and mean q-score on both non-sequential test sets . especially, the result on malisam-ns test, which is the harder one, is significant; the mean q-score obtained by mican with  <dig> % is as many as 11% higher than that by dedal, which shows the second highest mean q-score . in addition, the difference between mican and dedal is statistically significant: p-value is  <dig> ×10− <dig> . taken together with the results on sequential and non-sequential test set, mican can be considered as the outstanding program for generating alignments consistent with reference alignments regardless of whether the reference alignment is sequential or not, at least for the test sets we used here.

an example of one of the most difficult alignment taken from malisam-ns test set is shown in figure  <dig>  one of the pair is the structure of formiminotransferase domain of formiminotransferase-cyclodeaminase . the other is the permuted structure of fad-binding domain , which is generated by randomly permuting sequential order of sses of fad-binding domain.

the alignment plot of the reference alignment and those of nine alignment methods are also shown in figure 6b and c. the structure alignment of the reference consists of five fragments, and each fragment contains a single sse and loops attached to the sse. the orders of sses in the polypeptide chains are completely different, which makes alignments quite complex, as shown in figure 6b. five non-sequential methods  returned zero agreement with the reference alignment, suggesting difficulty of reproducing the reference alignment of this pair. dalilite, tm-align, and dedal returned partial agreement with the reference. all these three method correctly aligned α  <dig> to α  <dig>  but only dalilite did α  <dig> to α  <dig>  all the method except mican failed to correctly align any β strands pairs. on the other hand, only mican correctly align all of the secondary structure pairs, completely reproducing the reference alignment .

although mican is the best aligner in terms of reference-dependent evaluation, there are still some failures. for example, as depicted in figure  <dig> and  <dig>  mican generates some alignments with q-score = 0%. manual investigation revealed that majority of such failed alignments had a common feature; they had 1- <dig> residue shift of an alignment with respect to the reference alignments. shown in figure  <dig> is a typical failed example of mican. although the alignment plot by mican is similar to that of the reference, there is no overlap with the reference alignment. tm-score of the alignment by mican  is slightly larger than that of the reference , indicating that optimizing tm-score does not always lead to the manual alignment. this observation suggest that one possible improvement is to develop a scoring function that is more consistent with human expert knowledge.

benchmark test with reference-independent evaluation
to identify characteristic feature of several alignment programs, we calculated several standard geometric measures, the number of aligned residue pairs , the corresponding root mean square deviation  of the cα atoms, and the number of gap opening , for all the alignments generated by all the methods, for all the pairs provided in malidup-sq, malisam-sq, malidup-ns and malisam-ns test sets. here, nali is defined as the number of aligned residue pairs divided by the size of the smaller protein of the protein pair. their average values for malidup-sq, malisam-sq, malidup-ns and malisam-ns test sets are listed in table  <dig>  to visualize the data, average nali and rmsd obtained by each method is plotted on  plane in figure  <dig>  on this plane, better performance corresponds to larger values along the horizontal axis with smaller values along the vertical axis.

shown in figure 8a are results for malidup-sq and malisam-sq test sets. each method locates in various positions of the plane, which reflect the feature of objective function of each method. among them, dalilite, tm-align, mican, and samo show similar feature of the alignments; they are located on a similar position. these four algorithms are seated on the upper right part of the graph, suggesting that they prefer larger number of aligned residue pairs with larger rmsd . although their average rmsd values are relatively large compared with the other programs, these values can be considered as biologically relevant, because they are comparable to typical rmsds for homologous proteins  <cit> . in contrast, alignments by mass shows shorter alignment with the smallest rmsd of all the algorithm. the other programs lie between the two extreme cases.

according to figure 8a and b, mican and samo show similar behavior; they prefer large number of aligned residue pairs with larger rmsd, regardless of whether the reference alignment is sequential or not. however, they showed totally different behavior in the reference-dependent assessment, as shown in figure  <dig> and figure  <dig>  where does the discrepancy come from? one possible explanation is that the large number of aligned residue pairs by samo is mainly attributed to contribution of short segments that are likely to be spurious matches. in fact, table  <dig> shows that the number of gap opening is different between the two algorithms. the number of gap opening by samo is about  <dig> times larger than that by mican, suggesting that alignments by samo largely consist of relatively short segments or single residue pairs. as pointed out by abyzov and ilyin  <cit>  and teichert et al. <cit> , these short aligned segments are considered as ‘noise’, which may likely arise by chance, rather than ’signal’ of structural similarity, because sequence similarities based on structure alignments increase by removing short fragments from the alignments  <cit> . these noise could be one of the major factor of overestimation of the structural similarities  <cit> . thus, in order to eliminate contribution of such noise from nali, we calculated the number of aligned residue pairs, nali′, which does not count residues pairs in fragments shorter than three consecutive residues pairs.

average value of nali′ obtained by each method for each test set are listed in table  <dig>  underlined data listed in table  <dig> indicate significant difference  between nali and nali′. the largest change is observed for samo, which shows 46% decrease between nali and nali′ on malisam-ns test set by omitting the short fragments, suggesting the large number of aligned residue pairs by samo is enhanced by gathering short  fragments. on the other hand, nali and nali′ by mican are completely the same for all the test sets, implying that its alignments is mostly composed of relevant signals of structural similarity.

to visually understand the influence of eliminating short fragments on all the algorithms, we plotted average nali′ and rmsd for each method on  plane in figure 8c and d for sequential and non-sequential test sets, respectively. comparing figure 8a with c, as well as figure 8b with d, we can see that eliminating short continuous segments bring about drastic changes for some alignment programs. as pointed out above, samo is the most sensitive to eliminating short fragments, followed by mass and tm-align. the others are located at the same position on the plane, suggesting that their alignments are free from spurious matches. among then, alignments by mican shows the largest number of aligned residue pairs for all the test sets, implying that the characteristic feature of mican is that it prefers large number of aligned residues with reasonable rmsd and that its alignment is free from spurious matches.

so far, nali and rmsd have been evaluated based on the residues located everywhere in the structure. however, as pointed out by gueler and knapp, comparing the number of aligned residues or rmsds should be careful, because the residue assignment strategies can have a significant influence of the results  <cit> . to elucidate influence of the residue assignment strategies, we recalculated number of aligned residue pairs and corresponding rmsds in two different strategies. the first strategy is based on the residues only within secondary structure elements. the second one is based on residues belonging to the same sse type. we found that the results from both strategies were qualitatively the same as the result we have shown here; alignments by mican show the largest number of aligned residue pairs over all the test sets for both strategies . this result implies the robustness of the results against the change of residue assignment strategies.

we have shown that the characteristic features of alignments by mican are  large number of aligned residue pairs with reasonable rmsd and  its alignment is free from one or two length short segments. for further characterization of the algorithm, we investigate what length fragments are frequently used in the alignment of mican, and to compare them with those of the other algorithms. shown in figure  <dig> is the distribution of lengths of continuously aligned fragments in the alignments produced by each method for malidup-sq set. according to the location of the peaks of their distribution, the algorithms can be classified into four groups: the first group has a peak at  <dig> residue length , the second group at  <dig> , the third group around  <dig> or  <dig> , and the fourth group around  <dig> or  <dig> . mican belongs to the first group; its peak location of the distribution is larger than any other groups. this result indicates that the large number of aligned residue pairs by mican is mostly attributed to relatively longer consecutive fragments . this is contrast to the distribution of the fourth group; the number of aligned residue pairs is enhanced by contribution of a large number of  <dig> or  <dig> length short fragments.

influence of multiple vector representation of protein structures on the alignment accuracy
as described in the methods section, mican utilizes a multiple vector representation for each sse. here, we discuss how it works on improving performance, by comparing the performance of mican with that of mass, which utilizes single vector representation of sses. as pointed out in the introduction, it may be difficult to correctly align a short sse in a long one by the single vector representation. in order to assess whether the multiple vector representation improve alignment accuracy over single vector representation methods for such cases, we examined the dependence of alignment accuracy on the average difference in residue number between aligned sses in the reference alignment. shown in figure 10a is the relationship between the average difference of aligned sse length in the reference alignment and q-scores of mican and mass alignments for all the target pairs of both malidup and malisam-sq test set. there is statistically significant relationship between q-score and the average difference of aligned sse length for mass. these two values are correlated with a correlation coefficient r = − <dig> . the p-value associated with this correlation is extremely small . this result indicates that the larger the average difference of aligned sse length, the more mass fail to align. on the other hand, there is no correlation between the two values of alignments by mican , implying that the performance of mican is robust against the difference of aligned sse length. these results suggest that multiple vector representation of protein structures improve alignment accuracy for protein pairs that have large difference of sse length.

computational costs
to assess the computation speed of the algorithms we examined here, we measured computational time per alignment. average cpu times required to calculate one structure alignment for each test sets with the ten algorithms are shown in table  <dig>  the fastest algorithm of all the programs is tm-align for all the test sets. although, compared with tm-align, mican is about  <dig> ∼ <dig>  times slower than tm-align, it is the fastest algorithm of all non-sequential programs. since average cpu times required for one structure alignment by mican is very fast , it is suitable for large-scale database search. it should be noted that although mican showed the similar behavior to dalilite in both reference-dependent/independent evaluation for sequential test sets, computational speed of mican is much faster  than that of dalilite, which is known to be one of the best structure alignment program.

*cpu times are measured on a pc with intel core-i <dig>  <dig>  ghz processor.

homologous protein pairs that have non-sequential structural similarity
recently, some homologous protein pairs that show non-sequential structure similarity have been reported  <cit> . however, it is unclear how abundant such pairs are. in order to address the issue, we compared homologous protein structures by mican. we considered all the pairs of scop family representatives within the same superfamily . for these  <dig>  pairs, pairwise structural alignments were generated using mican. here, only the alignments with significantly high structural similarity, tm-score ≥  <dig>   <cit> , were collected, resulting in total of  <dig>  structurally similar protein pairs. among them, the overall proportion of protein pairs that show non-sequential alignments was 39% . this result suggests that a large number of proteins have changed their folds by some complex events while conserving the same core packing arrangements.

one of the interesting example of such a homologous protein pair is shown in figure  <dig> for ubiquitin c-terminal hydrolase  and phytochelatin synthase . these two proteins belong to the same superfamily  in the scop database  <cit> , suggesting that they share a common evolutionary ancestor. although their ligands are different, the molecular functions are suggested to be similar; both of them have hydrolase enzymatic activity and contain the same catalytic residues of cysteine, histidine, aspartate and glutamine  <cit> . tm-score of the alignment by mican is  <dig>  , suggesting significant structural similarity. figure 11b shows superimposed structures of aligned region around the catalytic-site. all the side-chain atoms of the catalytic residues are well superimposed, suggesting the correctness of the alignment. the corresponding alignment plot  shows a non-sequential alignment; the large portion of structurally equivalent parts are not in the same order in protein sequences. this permutation can not be explained by well-established mechanism of protein evolution such as “duplication and fusion”. it is interesting to investigate how such a fold change occurred, but left for future studies.

CONCLUSIONS
we have developed a new algorithm mican to compare protein structures regardless of the topology. one of the key of the algorithm is a novel representation of sses with multiple comparing elements of short segments. it enables us to properly describe bent or twisted nature of long secondary structure element. in addition, this representation method also helps speeding up a geometric hashing procedure. as a results, mican is the fastest program among non-sequential alignment programs we examined here.

we have presented a comparative analysis of structural alignments using both reference-dependent and reference-independent evaluation methods on both sequential and non-sequential test sets. reference-dependent evaluation shows mican outperforms the other existing methods for reproducing reference alignments of non-sequential test sets. further, although mican does not specialize in sequential structure alignment, its performance on sequential test sets is comparable to dalilite, which is known to be one of the most accurate sequential alignment program. reference-independent evaluation demonstrates that the features of alignment by mican are large number of aligned residue pairs with reasonable rmsd and that its alignment is free from short segments that are likely to be spurious matches. these results suggest that mican is highly effective tool for automatically detecting homologous protein structures bearing topological irregularities, such as circular permutations and segment-swapping, many of which have been identified manually by human experts so far.

