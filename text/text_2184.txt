BACKGROUND
genetic association studies are a powerful method to assess correlations between genetic variants and traits differences occurring in a population. when a significant correlation arises with respect to a pathological trait, these studies may lead to the identification of candidate disease susceptibility genes, offering the promise of novel targets for therapeutic treatments. nowadays, high-throughput genotype technologies allow a genome wide approach to these studies, taking into account hundreds of thousands of different markers  <cit> . standard statistics is usually applied to this data to extract univariate models and find significant markers with univariate tests. however, together with deriving the existing correlation between genetic markers and phenotypic traits it is also extremely interesting to find the relations between the markers themselves. both aims can be effectively achieved by using bayesian networks   <cit> . bns represent probabilistic relationships between random variables by means of a directed acyclic graph and a set of conditional probability distributions. nodes in the graph correspond to variables and directed arcs represent dependencies between them. a conditional probability distribution is associated with each node and quantifies the dependency of the node on its parents, i.e. the nodes that have an arc directly pointing to it.

bns have already been successfully applied in association studies, for example to study overt stroke in sickle cell anaemia  <cit>  and to identify the relationships between snp variations in the human apoe gene and plasma apolipoprotein e levels  <cit> .

when performing an association study, the data typically consist of measurements for a set of genetic markers  and evidence for a certain number of phenotypic traits . each genetic marker is modelled as a random variable taking on one of three possible states: 'aa', which corresponds to homozygous for the minor allele, 'aa', heterozygous, and 'aa', homozygous for the major allele. each phenotypic trait is also represented by a random variable, such as 'affected' and 'unaffected' for the disease status. an example of bn modelling the relationships between  <dig> snps and a phenotypic trait is given in figure  <dig>  this network not only models the relationships between the phenotype and snps, but it also represents conditional independence assumptions between variables. referring to the figure, we can for example say that the phenotype is conditionally independent of snp <dig> and snp <dig> given snp2: this means that, if the value for snp <dig> is known, the phenotypic status does not depend on the values of snp <dig> and snp <dig>  thus, the bn can highlight potential key markers in phenotype prediction.

both the graphical structure of a bn and the parameters of the conditional probability distributions can be learned from the available data. however, learning these networks is often non-trivial due to the high number of variables to be taken into account in the model, with respect to the instances of the dataset. therefore, it becomes very interesting to use an abstraction of the variable space that suitably reduces its dimensionality without losing information. thanks to this abstraction, a more parsimonious model might be built, whose graphical connections are also more easily interpretable. as the final aim of genetic dissection studies is to identify how genes affect the phenotype, we decided to consider the set of snps mapping to the same gene as a new meta-variable. in order to assign states to the meta-variables we employed an approach based on classification trees. by learning a classification tree for the snps mapping to each gene, it is possible to identify the most relevant combination of snp values to predict the phenotypic status. once the meta-variables have been identified, a bn is built using them and the phenotype as nodes.

we applied our method to genotypic data measured in a group of patients affected by arterial hypertension and in a group of nonagenarians without history of hypertension. the ability of the bn inferred on the meta-variables to correctly predict the phenotype  is quantitatively assessed and compared with that achievable with a bn built using single snps.

methods
our goal is to build a model to estimate the probability of a phenotypic trait given the genotype of an individual, represented as a suitable collection of snps. when learning this model from data, we also want to extract the relationships between snps and highlight the potential role of the genes associated to the snps. to this end, it is possible to resort to classification algorithms, in which the phenotype is the class and the snps  are the predictive attributes.

our strategy is made of two main steps: i) generation of meta-variables corresponding to each gene by using an approach based on classification trees, ii) learning of a bn in which the nodes are the meta-variables and the phenotype.

classification trees  are one of the most largely used classification tools  <cit> . given a database of n cases, each containing the values for v attributes and a class c, a ct learned from this database graphically represents a set of rules that allow the classification of each case on the basis of its attribute values . a test on the value of an attribute is associated with every non-leaf node of the tree and a branch descends from this node for every possible value taken by the attribute; leaf nodes are instead associated with a class value. therefore the path going from the root node to a leaf node can be mapped into a classification rule of the kind "if attribute_a = a <dig> and attribute_b = b <dig> and attribute_c = c <dig> then class = ci".

bayesian networks  <cit>  are a formalism for the representation and use of probabilistic knowledge widely employed in various fields, such as artificial intelligence, statistics, and more recently bioinformatics. as mentioned in the background section, a bn consists of two main components, a directed acyclic graph and a set of probability distributions. while the graph qualitatively describes dependence relationships between variables, a conditional probability distribution is associated with each node xi and quantifies the probabilistic dependence of the node on its parents pa. a very interesting property of bns is the fact that the joint probability distribution of all variables can be expressed as the product of these conditional distributions : p=‚àèip). once a bn is learned it is possible to use it to perform probabilistic inference, i.e. to calculate the posterior probabilities of unobserved variables on the basis of evidence on the values of other variables in the network  <cit> . a bn can thus be employed for classification purposes, allowing the prediction of the most probable value for a class node once the values of some attributes are known.

in the following of this section we describe how we employ cts to generate meta-variables and how we learn bns on the generated variables.

meta-variables generation
there are different available algorithms to learn a classification tree from a dataset. partitioning algorithms recursively split the tree by choosing the "most informative" attribute, i.e. the attribute that better separates instances with respect to their class value. these algorithms usually implement some "pruning" strategies, i.e. they remove leaves corresponding to negligible improvements in the classification performance. pruning helps avoiding overfitting and thus helps improving the tree's ability to classify new instances not used to generate the tree.

cts allow us to find rules to assign state values to meta-variables. our procedure is performed with the following steps:

 <dig>  select the set of snps si mapping to the i-th gene .

 <dig>  learn a classification tree using the phenotype to be forecast as class and the set si as attributes. to this aim, we employed the c <dig>  algorithm  <cit> .

 <dig>  prune the tree according to the following rules:

a. apply minimal error pruning with m-estimate  <cit>  and equal prior probability for each class. in the following all the results have been obtained with m =  <dig> 

b. remove leaves containing a number of instances lower than 1% of the total number of individuals .

c. check the total number of meta-variable states that remain after pruning steps a and b: if there are more than  <dig> states, cut the subtree with the lowest number of instances.

 <dig>  create a discrete variable gi with states corresponding to the leaves of the final pruned tree.

as an example, suppose having a gene c represented by two snps , each taking three possible values . suppose also that the classification tree corresponding to gene c is shown in figure  <dig> 

looking at the leaf nodes we can derive three rules to assign state values to the meta-variable for gene c, each one dependent on combinations of the two snps values: if "c <dig> = aa and c <dig> = bb" then state1; if " and c <dig> = bb" then state2; if "c <dig> = bb or c <dig> = bb" then state <dig> 

the classification trees were learned using the software orange  <cit> .

bn learning
learning bns can be approached as a model selection problem, in which different network models are compared on the basis of their posterior probability with respect to the available data. thanks to the decomposability of the joint probability of all variables, the network with highest posterior can be learned by learning local models, i.e. the parent sets of each variable, and then joining the inferred models. however, the number of possible models to be explored grows exponentially with respect to the number of candidate parents. for this reason, an exhaustive search is unfeasible and a heuristic strategy must be employed. an effective one is the greedy search strategy known as k <dig> algorithm  <cit> . this algorithm requires the specification of an ordering of the analyzed variables, so that the parents of each variable are searched only among those variables that precede it in the ordering. we decided to use the gain ratio of variables  to establish the ordering to be given as input to the k <dig> algorithm. in this way, variables with higher gain ratio were tested as parents of those with lower ratios. moreover, we focused on networks in which the genotypes are dependent on the phenotype, in accordance with sebastiani et al.  <cit> .

in order to infer bns from data we employed the software bayesware discoverer  <cit> , which implements the k <dig> algorithm for the search.

RESULTS
we applied our approach to data coming from a genome-wide scan on  <dig> individuals affected by arterial hypertension  and  <dig> nonagenarians without history of ah. arterial hypertension is considered a polygenic disease, resulting from the combination of a number of genetic risk factors, whose expression depends on their interaction with environmental factors such as high dietary intake of sodium, alcohol, obesity and stress  <cit> .

the number of alleles and polygenes contributing to the phenotype of elevated arterial blood pressure  is still unknown; however, experiments in inbred rats suggest that about ten or more genes might contribute to the control of bp  <cit> . moreover, although the number of genes influencing bp is not known, it is expected that many alleles at different loci may contribute to the ultimate disease trait. in agreement with these observations, linkage and association analyses have shown that bp is not due to a single genetic variant  <cit> . our multivariate method thus appears particularly suitable to analyze this kind of data. in the following we describe in more details data collection, pre-processing and obtained results.

data collection and pre-processing
 <dig> patients with high bp and aged 35‚Äì <dig> years were recruited; the control population was represented by  <dig> nonagenarians, without history of ah and selected during the course of the last few years. after approval of the ethical committee and under informed consent collected following the italian law, blood was drawn from every patient participating in the study. dna was extracted and anamnestic, clinical and laboratory data were collected. all samples were assayed with the illumina humanhap300duo bead chips  containing  <dig>  phase i hapmap tagging snps. data were acquired with illumina bead studio software ; afterwards, standard preliminary analysis was performed with gplink  <cit>  as follows: i) genotyping/missing rate statistics were calculated; ii) the minor allele frequency  was calculated; iii) hardy weinberg equilibrium  was evaluated; iv) snps with hwe values in the control population deviating from the equilibrium  were removed. in order to identify and remove outliers, we performed a multidimensional scaling plot  and a neighbors plot, based on the genome-wide identity-by-state  information.

after data pre-processing, we performed both allelic and genotypic association tests to compare frequencies distribution between cases and controls and identify the most significant snps. allelic association tests yielded  <dig> highly significant snps . p-values given by genotypic association tests confirmed the same results as the allelic association tests.

snp annotation was performed using genephony, an online tool for genomic dataset annotation  <cit> : a snp is annotated to a gene if it is located in a  <dig> kb region around the coding sequence. selecting only those genes represented by at least two snps, we focused on a subset of  <dig> snps mapping to  <dig> different genes. thus the final dataset to be analyzed consisted of  <dig> individuals  and the  <dig> selected snps. since such results still have to be biologically validated, in the following we will denote genes by letters and snps by numbers, so that for example "d3" represents snp number  <dig> of gene d.

bayesian networks for arterial hypertension prediction
we first learned a bayesian network using single snps as variables and employing the whole dataset. in this network snps within each gene appear tightly connected . this is probably due to the fact that snps mapping to the same gene present highly correlated configurations and thus the bn learning algorithm correctly infers a direct dependence between them. this result supports the hypothesis that considering the snps mapping to the same gene as a unique meta-variable is an appropriate way to make an abstraction of the network structure without losing information. hypertension is connected to  <dig> genes, and, among the snps within each gene, it is always directly connected to the snp with the largest gain ratio.

we then associated each gene to a meta-variable, whose states were derived by building a classification tree according to the procedure outlined in the methods section. in the network built using the meta-variables  the phenotype is directly connected to the same genes as in the network learned with all snps. moreover the indirect path gene a ‚Äì hypertension ‚Äì gene c ‚Äì gene g, identifiable in the single-snp network, is conserved in the meta-variable bn. therefore, the use of meta-variables appears able to summarize the relationships between genes and phenotype with little loss of information.

predictive ability of the networks
bayesian networks allow the prediction of the most likely value for any node given the values of any group of other nodes. in our case, we are interested in assessing the ability of the learned bn models to predict the phenotype status given a certain configuration of snps or meta-variables.

the single-snp network  and the meta-variable network  built on the whole dataset have a predictive accuracy  equal to  <dig> % and to  <dig> %, respectively. we compared these values with respect to the majority classifier performance, which had a classification accuracy of  <dig> %. a normalized measure of how much those accuracies differ from the majority classifier is given by the k-statistic, which is  <dig>  for the snp network and  <dig>  for the meta-variable one. thus, the ability to predict the true phenotypic status of the meta-variable network appears to be slightly superior. however, as training accuracy is affected by overfitting, it is much more interesting to evaluate the capability of the models to correctly predict the unknown phenotype of a new sample of data . in order to obtain an estimate of the generalization accuracy, we repeated  <dig> times a random sampling hold-out scheme in which 75% of the dataset  was employed as training set and the remaining 25% as test set . the sampling was performed with stratification, so that both the training and the test set have the same distribution of phenotypic classes as the entire dataset. thus, the validation scheme we performed  <dig> times can be summarized as:

‚Ä¢ split the dataset into 75% training and 25% test

‚Ä¢ on the training set:

‚ó¶ learn the meta-variables according to the strategy presented in the methods section;

‚ó¶ learn a bn using the gain ratio of meta-variables as ordering for the k <dig> algorithm.

‚Ä¢ on the test set:

‚ó¶ map the snps of the test set into meta-variables and assign the states using the rules derived on the training set;

‚ó¶ compute the accuracy of phenotype prediction given all the meta-variables.

the mean accuracy on the  <dig> test sets was equal to  <dig> % . as a benchmark for our method, we used the bn with snps as variables, learned and evaluated on the corresponding test set. the mean accuracy of the snps bns was  <dig> %. moreover, as reported in table  <dig>  the accuracy of the meta-variable network was always higher than the accuracy of the snp network on the same test set, suggesting that our method is able to achieve a better classification performance. the k-statistic computed on each test set is also higher for the meta-variable networks. to confirm these results, we computed the 95%-confidence intervals  of the mean accuracy for the meta-variable networks and for the single-snp bns . although the two cis partially overlap, the mean accuracy of the meta-variable network is higher than the upper bound of the ci for the snp-network. in order to evaluate the difference between the two sets of accuracies values, we applied the wilcoxon signed rank test as suggested by j. demsar  <cit> , obtaining a significant result . this reinforces the evidence that the performance of the meta-variable bns is superior to the single-snp ones.

the table summarizes the results obtained by repeating  <dig> times a random sampling hold-out scheme in which 75% of the dataset  was employed as training set and the remaining 25% as test set . in particular, the table shows the classification accuracies obtained on the test sets by the single-snp bn, the meta-variable bn and the haplotype bn, the accuracies of the majority classifier and the k-statistics.

comparison with haplotype-based bn
a typical way of performing association analysis using aggregated variables instead of single snps is to group them into haplotype blocks. thus, we compared our classification approach with a haplotype-based one, considering haplotypes as variables to learn the bn. haplotype definition was performed through the following steps:

‚Ä¢ linkage disequilibrium  analyses using haploview software  <cit>  to identify haplotype blocks for each gene region;

‚Ä¢ haplotype blocks filtering to keep only blocks with frequency in the dataset larger than 10% ;

‚Ä¢ selection of the most informative haplotype configuration for each haplotype block, according to a case-control analysis based on permutation tests on the whole dataset;

‚Ä¢ inference of the haplotype phases for each individual on the previously selected blocks ;

‚Ä¢ removal of individuals with a posterior haplotype probability <  <dig> .

after haplotype phases reconstruction and individuals selection, we learned a bn using haplotype phases as variables and we then applied the same validation scheme previously described for the single-snp and meta-variable based approaches. the network built on the whole dataset is represented in figure 5: the phenotype is connected to  <dig> haplotypes out of  <dig> , which map to  <dig> genes. three of these genes  are directly connected to hypertension also in the meta-variable network. yet haplotypes belonging to the same genes are not always connected with each other and the network shows a higher interconnectivity among variables than the meta-variable one. the classification accuracy of this network is  <dig> % and thus higher than the single-snp and meta-variable networks. however, the classification performances on the hold-out test sets are lower than the other two approaches, with an average classification accuracy of  <dig> % . the haplotype method seems prone to overfit the data, since it has the worst performance in terms of generalization accuracy, but the best one in terms of training accuracy. we also applied the friedman statistical test  <cit>  to verify the difference in the median accuracy of the three methods, obtaining significant results .

CONCLUSIONS
the new approach presented in this paper can be considered as an instrument to derive a gene-based predictive model based on snps data. such model is more parsimonious than the one based on single snps, while preserving the capability of highlighting predictive snps configurations. its limited number of nodes provides an abstract view of the relationships between genes and the phenotype of interest, and therefore represents an alternative way to analyze the available data. the prediction performance of this approach was consistently superior to the snp-based and the haplotype-based one in all the sets studied in the paper.

the results of this approach should however be cautiously interpreted. first of all, the proposed learning method heavily exploits the training set, and, therefore, is prone to overfit the data. the evaluation should be performed on a separate test set to carefully assess the predictive performance. moreover, learning the meta-nodes requires classification tree pruning to reduce overfitting. for this reason, the learning process needs to specify tree pruning parameters.

furthermore, the method's goal is to perform prediction and the meta-variables have a precise meaning as predictors of a phenotype of interest. the method is designed to extract models based on gene-related snps, and cannot be properly applied to intergenic snps.

finally, the results have been obtained after a selection of snps performed on the entire dataset. for this reason, the absolute values of the accuracies here reported are probably overestimated. however, since all the analyzed bns have been learned with the same set of snps, their comparison is fair.

as regards the limits of the association study, we are aware of the potential confounding factors related to age and ah differences between groups. to address this issue we are genotyping an age-matched control population.

competing interests
the authors declare that they have no competing interests.

authors' contributions
am carried out the molecular genetic studies, performed the statistical analysis and drafted the paper. an carried out software tools development and integrations, participated in study design and drafted the manuscript. ff participated in the definition of the methodology and in drafting and reviewing the manuscript. aap participated in study coordination and draft revision. rb conceived the study, participated in its design and coordination and helped to draft the manuscript. all authors read and approved the final manuscript.

