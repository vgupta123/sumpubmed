BACKGROUND
interactions between signaling pathways in mammalian cells indicate that a large-scale complex network of interactions is involved in determining and controlling cellular phenotype  <cit> . to visualize and analyze these complex networks, the biochemical networks may be abstracted to directed graphs  <cit> . to understand the topology of such networks, graph-theory methodologies can be applied to analyze networks' global and local structural properties  <cit> . additionally, the value of assembled network datasets is enhanced with network visualization software and web-based information systems. these systems provide summary information, order, and logic for interpretation of sparse experimental results  <cit> . visualization tools and web-based navigation systems provide an integrative resource that aids in understanding the system under investigation and may lead to the development of new hypotheses.

graph-theory methods have been used in other scientific fields to analyze complex systems abstracted to networks. for example, watts and strogatz  <cit>  defined a measure called the "clustering coefficient"  for characterizing the level of clustered interactions within networks by measuring the abundance of triangles in networks . for instance, if a node has four neighbors and three of the neighbors are directly connected, the cc for that node is  <dig>  because the four neighbors can be connected maximally with six links . the network's cc is the average cc computed for all nodes. caldarelli et al.  <cit>  formulated an algorithm to consider rectangles  in the clustering calculation, and called it the grid coefficient. watts and strogatz also used the characteristic path length to measure the disjointedness between nodes in networks. characteristic path length is the average shortest path between any two pairs of nodes. it is calculated for all possible pairs of nodes, such that the average minimum number of steps between all pairs of nodes is the characteristic path length. together, the cc and the characteristic path length measurements have a predictable relationship when computed for most real networks. this observation is called the "small-world" phenomenon  <cit> .

barabasi and coworkers  <cit>  analyzed the connectivity distribution of metabolic networks and other biochemical networks and observed a connectivity distribution termed "scale-free". scale-free property indicates that the connectivity distribution of nodes follows a long heavy tail that fits a power-law. such distribution results in few highly connected nodes that serve as hubs whereas most other nodes have few links. another topological property that is used to statistically analyze biochemical regulatory networks is the identification of network motifs. in biochemical regulatory networks, motifs are subcircuits of molecular interactions involving multiple cellular components. the different possibilities for subcircuit configurations made of several components define different types of network motifs. all the possible combinations for interconnectivity made of few components in directed graphs can be determined  <cit>  and then used to identify their prevalence by comparing the counts in random topologies. this method was used to characterize motifs in gene regulatory networks from caenorhabditis elegans and saccharomyces cerevisiae  <cit> . this type of analysis identified signature patterns of network motifs that can characterize different types of networks, including signal-transduction networks  <cit> . the graph-theory based network analysis methods described above are statistical. such statistical analysis of signaling networks requires that the size of the network is large enough . snavi includes functions to compute the clustering, characteristic path length, and connectivity distribution of networks, and provides the means to identify and visualize network motifs.

statistical analysis of network topology is complemented by effective network visualization and web-based navigation tools. maps or diagrams of signaling pathways help summarize many interactions at once. maps may suggest new interpretations for experiments, because the act of preparing the maps imposes logical interpretation  <cit> . additionally, mapping a network is an important initial step for developing models for quantitative simulation  <cit> . molecular interaction network maps are constantly changing as new data become available, and manually redrawing signaling maps is not convenient or desirable. the requirements for mapping large-scale biological networks include showing an appropriate level of detail, minimizing overlap of nodes and links, and compatibility with multiple data storage formats  <cit> .

existing software tools draw networks automatically from databases, excel spreadsheets, xml , or text files where interactions are listed in a structured format. one recommended platform is cytoscape  <cit> . general network visualization software are often used by computational biologists, for example the pajek software project  <cit> , or at&t's graphviz project  <cit> , where the second is an open-source project used as a library in many applications, i.e., science signaling uses graphviz to display their connections maps  <cit> . when maps expand beyond a certain number of nodes  it becomes impossible to follow the links generated using the pajek  or graphviz  programs. one solution is implementing zooming and panning functionality using scalable vector graphics  code  <cit>  or flash, or dividing large, complex pathways into sets of smaller interrelated pathways. another solution is to allow users to specify a portion of the network they want to explore and then construct subnetworks that are easily navigated. snavi can be used to construct and visualize such subnetworks to allow investigation of larger networks.

snavi is a software tool for statistical analysis and visualization of large-scale cellular signaling networks and other biochemical intracellular networks. here, we demonstrate how snavi can be used for web-based visualization and statistical analysis of biological regulatory networks. as an example, the installation of snavi provides a network representing signaling pathways in hippocampal neuronal cells  <cit> . to create this network, direct interactions were extracted from primary papers into a template stored in a flat file , and then verified through a multistep manual review process by biologists. the network currently contains  <dig> nodes and  <dig> links extracted from  <dig> articles. users may use this dataset or may load their own data. the process of creating, analyzing, and visualizing signaling networks using snavi is described in the methods.

implementation and 
RESULTS
overview and data files
snavi is organized into seven functional parts: loading data into snavi, file manipulation and validation, exporting data to other programs, network visualization, statistical analysis of network properties, and identification of network motifs. the main snavi interface divides the functions of the software into five sections . help is available within the software by clicking the question mark buttons, which either opens a new window with detailed information or pops up a brief description of the function in question. snavi installation script automatically places a set of sample data files into the "data" directory under the directory in which the snavi program was installed. these are "snavi.sig", "background.sig", "geneslist.txt", and "twocol.txt". when analyzing user-supplied datasets, it is recommended that each dataset be located in its own directory.

the native data format for snavi conforms to a specified format  and these files are called "sig" files. these are flat text files that contain lists of interactions where each interaction has  <dig> attributes. table  <dig> also includes four interaction records given as examples, representing the  <dig> attributes from a "sig" file. there are three ways to load data into snavi for analysis: users may load sample datasets that are included with the software , create a network from lists of human entrez gene official symbols using a background network within snavi that contain over  <dig>  human protein-protein and ligand-protein interactions, or analyze user-supplied interaction data listed in two-column text format. once loaded, datasets may be saved as "sig" format for later analysis or manual editing.

snavi contains several routines to validate the integrity and completeness of loaded network datasets. these routines check for name, type of nodes, type of interactions, and logical or syntactical inconsistencies in accession codes. for example, two different accession numbers associated with the same node name are flagged and reported, as well as interactions involving the same pairs of node-names but having different effects. all validation errors may be ignored, if the errors are not relevant to the user's analysis and visualization requirements. most functions will still work even when validation errors exist. validation errors are reported in a window created from a file called "validation.htm" that is automatically saved in the same directory or folder in which the loaded data file is from, which is referred to as the current working directory.

in most networks, not all nodes are reachable from all other nodes. this means that networks are fragmented into isolated but internally connected components. some statistical measurements and visualization functions can only work for networks where all nodes are reachable from all other nodes. therefore, snavi provides a mechanism to export the biggest component in a network into a new sig file for analysis. this file is created with the "dump the biggest component" option on the file and validation section of the main snavi interface.

creating a network from a list of gene or protein names
another acceptable input for snavi is a flat text file  containing a list of human genes or proteins. this type of file may be useful for creating an interaction network from experimental data, such as a list of mammalian genes or proteins produced by microarray or proteomic experiments. the gene or protein names must be listed in a text file and use the human entrez gene official symbol term for the corresponding human gene or protein in each row in the text file in a single column. snavi uses a background network of human protein-protein and ligand-protein interactions containing over  <dig>  interactions to build a subnetwork containing the list of gene names connected through intermediate proteins or signaling components. the user specifies the number of intermediates  that can be used to connect any two genes in the list. once snavi has created a subnetwork from the list of gene names, the resultant subnetwork can be saved as a "sig" file.

visualizing networks
snavi provides several options for viewing entire networks or network motifs. the viewing options involve html files, svg files, jpg, and dot files depending on the visualization option selected. the color and shape settings for the graphical displays are stored in a small text file called colors_and_shapes.txt, which can be found in the current working directory. this file may be modified manually to generate user-defined colors and shapes. the file must have three columns in each row. the first column corresponds to the molecule type defined in the sig file, the second column is a color name defined in at  by graphviz, and the third column is a shape defined at  by graphviz.

after loading a network or creating a network from a list of gene names, one of the visualization options snavi provides is the creation of a set of web pages that are saved in the directory that contains the uploaded data file. when the program is creating the web site, it attempts to connect to pubmed and swiss-prot databases through an internet connection to obtain information about the proteins and details about references used. the web page files include a main page that has links to pages containing the following information in addition to a network diagram organized by the type of component in the network:  an alphabetized list of molecules with links to individual pages for each node in the network,  network statistics,  legend to colors and shapes. the web pages created for each node contain an svg map with all the upstream and downstream links from that node, and a list of references and detailed text descriptions of interactions directly implicated with each node. the pages also contain links to the swiss-prot database and statistics for individual nodes.

pathwaygenerator
snavi's pathwaygenerator function provides a mechanism to query a network by allowing the user to select a source node and a target node and then finding the paths that connect these two elements in a network . the output is a graphical network map showing the interactions that connect the selected nodes. the program attempts to find the shortest paths from the source to the target while optimizing the maximum number of steps from the source to the target so that the map is of optimized size. this is performed to fit as many nodes and links as possible based on the user's specified parameters. the process of maximizing the number of steps from the source to the target is implemented to generate maps that are optimally sized for easiest navigation and maximal content, and to control execution time. an example of the interface and a generated map from grin2a to syntaxin <dig> is provided .

there are two ways to create the query that draw subnetworks. the "pathwaygenerator" interface is the "advanced" user interface where the user may set the maximum number of parameters. the "easy interface" limits the options for the source node to those classified as ligands or receptors, and then allows the target node to be one of the following: transcription factor, kinase, phosphatase, vesicle-related protein, cytoskeleton, or ion channel. when the radio button next to each option is clicked a drop-down menu with the names of the nodes provides the available choices for each. snavi also includes a function that finds, counts, and plots a subset of small-sized network motifs: scaffolds , feedback loops, feed-forward loops and bifans  <cit> . an example of the user interface dialog box to select different motifs and a sample output of such analysis is provided .

network statistics
the statistics report in snavi shows the number of components, interactions, and references for the network. the components are categorized according to their function and their locations. the interactions are categorized according their effects and the types of interaction. snavi statistics reports provide several standard graph-theory measures. for example, the clustering coefficient  measures the level of clustered interactions in networks by measuring the abundance of triangles. the grid coefficient measures the level of clustered interactions by counting rectangles. the connectivity distribution is the number of nodes that share the same degree of connectivity.

to further investigate the topological structure of networks, snavi can be used to partition the loaded networks into subnetworks based on two different specified criteria. in the first option, which is accessed by the "generate and analyze subnetworks based on connectivity", the inclusion of nodes and interactions is based on nodes' degree. in the second option, which is accessed by the "generate and analyze subnetworks propagating from source nodes", the inclusion of nodes and interactions is based on specifying a group of nodes from which the connectivity is expanded in steps to build subnetworks. for example, subnetworks can be generated and analyzed by setting ligands as the source nodes and expanding the subnetworks in steps in the downstream direction. starting from a specified group of source nodes, series of subnetworks can be created and analyzed expanding in steps from source nodes. the subnetworks characteristics produced by such analysis are reported in a html table. this table can be exported to an excel spreadsheet.

comparing real topologies to shuffled networks is important for identifying topological properties that have been selected for in biological regulatory networks. snavi provides the user with functions to create and analyze three types of shuffled networks based on the original loaded network: shuffled networks in which pairs of target nodes were repeatedly swapped, shuffled networks in which the connectivity is the same as that in the original network but the signs of effects  are shuffled, or erdos-renyi networks  <cit> . erdos-renyi networks have the same number of nodes and links as the original network; however the links are randomly assigned between nodes.

exporting networks
networks loaded into snavi can be exported into the following file formats: mfinder, cytoscape, dot and pajek.

creating a file for mfinder
the mfinder program  <cit>  is a command line program that counts and reports network motifs. the program identifies statistically over- or under-represented network motifs, and reports the motifs that have been found in an output text file. the mfinder program accepts input as text files containing three columns of integers. the first two columns represent the source node and the target node, respectively. the third column is not used .

creating a file for cytoscape
cytoscape  is an open source bioinformatics software platform for visualizing molecular interaction networks and integrating these interactions with gene expression profiles and other state data. sif files created with snavi can be loaded into cytoscape for visualization. this file can be loaded into cytoscape using the file->open function.

creating a file for pajek
snavi users can also export networks into the pajek software . pajek is windows-based freely available network visualization and analysis software. pajek accepts formatted text files as input that follow the pajek language specification. files are saved with the .net extension. the pajek files created with snavi specify the node colors based on their degree of connectivity , as well as by assigning colors to links  and specifying the direction of the links so that arrows are drawn. the pajek software is mostly useful for drawing large networks. it contains algorithms that optimize locations of nodes to minimize link lengths and link crossings.

comparing snavi to cytoscape
many of the functionalities that have been implemented for snavi are available with the network analysis software system cytoscape. although the snavi and cytoscape software systems provide some similar functionality, cytoscape is much more robust and provides many more features than snavi. hence, snavi is not as stable as cytoscape and as such we do not recommend snavi as the first choice for biological network analysis in general. however, snavi still has some unique features that are not found in cytoscape. snavi is especially appropriate for analysis and visualization of mammalian cell signaling networks represented as directed graphs. this is because snavi's core functions were developed specifically for the analysis applied for a study published in science in  <dig>  <cit> . a case study of how to use snavi to analyze and visualize this signaling network is provided as supporting material to this article . the two main features in snavi that are not available in cytoscpae are: a) several specific open source algorithms for performing different types of complex network analyses; b) snavi can effectively be used to created complete web-sites from large-sized networks by breaking a large network into pieces presented as linkable web-pages. we summarized the differences and similarities between snavi and cytoscape in table  <dig> as per the peer reviewers' request. although many features are shared by snavi and cytoscape users should consider that although the same features might be implemented there could be still significant differences in the way such features were implemented. hence, there are advantages/disadvantages and/or user personal preferences for specific implementations.

CONCLUSIONS
effective analysis and visualization tools for large-scale cellular networks that can draw connectivity diagrams with an unbiased predisposition from large interaction datasets can help cell and molecular biologists identify potential new pathways and sometimes predict missing components and interactions. such tools can be used to support hypothesis generation and experimental design, improve presentations in seminars and publications, and serve as a valuable educational resource for students. the abstraction of signaling networks into nodes linked through three types of links  is simplified, but nevertheless captures key features of information flow in cellular regulatory networks. others have proposed more detailed descriptive and visualization approaches, which may provide more information about cellular regulatory systems than what is currently provided by snavi  <cit> . although these other visualization schemes can be useful, it is more difficult to annotate interactions to fit into their templates. in order to move from gene and protein lists to network maps and then to predictive models of mammalian cells, signaling networks will indeed have to become more detailed in their annotation. such details will include kinetic parameters and spatial information  <cit> . we hope that snavi will provide one more resource towards achieving such long term goals.

availability and requirements
project name: snavi

project home page: 

operating system: windows xp or vista

programming language: visual c++ .net version  <dig> 

other requirements: adobe svg viewer version  <dig> , wingraphviz.

license: gnu gpl

any restrictions to use by non-academics: license is not needed but interested commertial parties should contact technology@mssm.edu before reusing the code.

authors' contributions
am designed the system and implemented the code except for the grid coefficient and matrix visualization functions which were implemented by spp. rlw, sib, nah, jmp, tf tested the system. am and slj wrote the manuscript. ri reviewed the manuscript and supervised the project.

supplementary material
additional file 1
case study instructions for snavi. the document provides step by step instructions on how to use snavi to analyze and visualize a large cell signaling networks provided with the software.

click here for file

 acknowledgements
this work was supported by nih grant no. 1p50gm071558-01a <dig>  we would like to give special thanks to nancy gough the editor of science signaling for her many useful suggestions and comments.
