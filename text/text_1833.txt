BACKGROUND
computational methods for psp
homology modeling, protein threading and ab initio are three computational approaches used in protein structure prediction. prediction quality of homology modeling and protein threading depends on the sequential similarity of previously known protein structures. however, our work is based on the ab initio approach that only depends on the amino acid sequence of the target protein. levinthal's paradox  <cit>  and anfensen's hypothesis  <cit>  are the basis of ab initio method for protein structure prediction. the idea was originated in  <dig> when it was demonstrated that all information needed to fold a protein resides in its amino acid sequence. in our simplified protein structure prediction model, we use 3d fcc lattice for conformation mapping, hp energy model for conformation evaluation, and a hydrophobic-core centric local search algorithm  for conformation search. local search approach, 3d fcc lattice, and hp energy model are described below.

local search
starting from an initial solution, local search algorithms move from one solution to another to find a better solution. local search algorithms are well known for efficiently producing high quality solutions, which are difficult for systematic search approaches. however, they are incomplete  <cit> , and suffer from revisitation and stagnation. restarting the whole or parts of a solution remains the typical approach to deal with such situations. in psp, cebrian et al.  <cit>  used a local search algorithm combined with tabu heuristic. they implemented their method on 3d fcc lattice configuration for hp model, and tested its effectiveness on harvard instances  <cit> . later, dotu et al.  <cit>  extended the work in  <cit>  by using a hybrid method that combines local search and constraint programming together. prior to ls-mem, these two methods  <cit>  produced the state-of-the-art results for psp on fcc lattice and hp energy model.

tabu meta-heuristic
tabu meta-heuristic  <cit>  enhances the performance of local search algorithms. it maintains a memory structure to remember the local changes of a solution. then any local changes for those stored positions are forbidden for certain number of subsequent iterations .

3d fcc lattice
the fcc lattice has the highest packing density compared to the other existing lattices  <cit> . in fcc, each lattice point  has  <dig> neighbours with  <dig> basis vectors , , , , , , , , , , , and . the hexagonal closed pack  lattice, also known as cuboctahedron, was used in  <cit> . in hcp, each lattice point has  <dig> neighours that correspond to  <dig> basis vertices with real-numbered coordinates, which causes the loss of structural precision for psp. in simplified psp, conformations are mapped on the lattice by a sequence of basis vectors, or by the relative vectors that are relative to the previous basis vectors in the sequence.

hp energy model
the  <dig> constituent amino acids of proteins are broadly divided into two categories based on the hydrophobicity of the amino acids:  hydrophobic amino acids denoted as h ; and  hydrophilic or polar amino acids denoted as p . in the hp model  <cit> , when two non-consecutive hydrophobic amino acids become topologically neighbours, they contribute a certain amount of negative energy, which for simplicity is shown as - <dig> in figure  <dig>  the total energy  of a conformation based on the hp model becomes the sum of the contributions of all pairs of non-consecutive hydrophobic amino acids as shown in equation  <dig> 

  e= ∑i<j-1cij⋅eij 

where cij =  <dig> if amino acids i and j are non-consecutive neighbours on the lattice, otherwise 0; and eij = - <dig> if ith and jth amino acids are hydrophobic, otherwise  <dig> 

related work
different types of metaheuristic have been used in solving the simplified psp problem. these include monte carlo simulation  <cit> , simulated annealing  <cit> , genetic algorithms   <cit> , tabu search with ga  <cit> , tabu search with hill climbing  <cit> , ant colony optimisation  <cit> , immune algorithms  <cit> , tabu-based stochastic local search  <cit> , and constraint programming  <cit> . cebrian et al.  <cit>  used tabu-based local search, and shatabda et al.  <cit>  used memory-based local search with tabu heuristic and achieved the state-of-the-art results. however, dotu et al.  <cit>  used constraint programming and found promising results but only for small sized  proteins. besides local search, unger and moult  <cit>  applied genetic algorithms to psp and found their method to be more promising than the monte carlo based methods  <cit> . they used absolute encodings on the square and cubic lattices for hp energy model. later, patton  <cit>  used relative encodings to represent conformations and a penalty method to enforce the self-avoiding walk constraint.

the ga has been used by hoque et al.  <cit>  for cubic, and 3d hcp lattices. they used depth first search  to generate pathways  <cit>  in ga crossover for psp. they also introduced a twin-removal operator  <cit>  to remove duplicates from the population and thus to prevent the search from stalling.

methods
in hp model, protein structures have h-cores that hide the hydrophobic amino acids from water and expose the polar amino acids to the surface to be in contact with the surrounding water molecules  <cit> . h-core formation is the main objective of hp based psp. to achieve this, the total distance of all h-h pairs is minimised in  <cit> . a predefined motif based segment replacement strategy is applied in  <cit>  to replace structure segments by pre-determined substructures based on matching h-p orientations in the target sequence. in ss-tabu, we try to reduce the distance of each h-amino acid from the hcc; which eventually helps minimise the free energy level of the conformation.

spiral search framework
in spiral search, only the diagonal move operator is used repeatedly  in building h-cores. a diagonal move displaces ith amino acid from its position to another position on the lattice without changing the position of its succeeding th and preceding th amino acids in the sequence. the move is just a corner-flip to an unoccupied lattice point. in ss-tabu, we repeatedly use diagonal moves that squeeze the conformation and quickly form the h-core. the spiral search procedure  is composed of several sub-procedures mainly, for move selection, for handling local minima and stagnation, and for initialisation and evaluation.

move selection
in move selection, the hydrophobic amino acids get priority in comparison to polar amino acids. the move selection criteria are explained in the following paragraphs.

h-move selection
in h-move selection , the hcc is calculated by finding arithmetic means of x, y, and z coordinates of all hydrophobic amino acids using equation  <dig>  the selection is guided by the cartesian distance di  between hcc and the hydrophobic amino acids in the sequence. for the ith hydrophobic amino acid, the common topological neighbours of the th and th amino acids are computed. the topological neighbours  of a lattice point are the points at unit lattice-distance apart from it. for 3d fcc lattice, there are four common tn of the th and th amino acids. from the common neighbours, the unoccupied points are identified. the cartesian distance of all unoccupied common neighbours are calculated from the hcc using equation  <dig>  then the point with the shortest distance is picked. this point is listed in the possible h-move list for ith hydrophobic amino acid if its current distance from hcc is greater than that of the selected point. when all hydrophobic amino acids are traversed and the feasible shortest distances are listed in h-move list, the amino acid having the shortest distance in h-move list is chosen to apply diagonal move operator on it. a tabu list is maintained for each hydrophobic amino acid to control the selection priority amongst them. for each successful move, the tabu list is updated for the respective amino acid. the process stops when no h-move is found. in this situation, the control is transferred to select and apply p-moves.

  xhcc=1nh ∑i=1nhxi,yhcc=1nh ∑i=1nhyi,zhcc=1nh ∑i=1nhzi 

where nh is the number of h amino acids in the protein.

  di=2+2+zi-zhcc <dig> 

p-move selection
for polar amino acids, the same kind of diagonal moves are applied as h-move. for each ith polar amino acid, all free lattice points that are common neighbours of lattice points occupied by th and th amino acids are listed. from the list, a point is selected randomly to complete a diagonal move for the respective polar amino acid. no hydrophobic-core center is calculated, no cartesian distance is measured, and no tabu list is maintained for p-move. after one try for each polar amino acid the control is returned to select and apply h-moves.

stagnation recovery
for hard optimisation problems such as protein structure prediction, local search algorithms often face stagnation. thus, handling such situation intelligently is important to proceed further. in our ss-tabu, we use random-walk  <cit>  and a new relay-restart technique with on-demand basis to deal with stagnation.

random-walk
premature h-cores are observed at local minima. to escape local minima, a random-walk  <cit>  algorithm  is applied. this algorithm uses pull moves  <cit>   to break the h-core. we use pull-moves because they are complete, local, and reversible. successful pull moves never generate infeasible conformations. during pulling, energy level and structural diversification are observed to maintain a balance among these two. we allow energy level to change within 5% to 10% with changes in the structure from 10% to 75% of the original. we try to accept the conformation that is close to the current conformation in terms of energy level but is diverse in terms of structure.

relay-restart
instead of using a fresh restart or restarting from the current best solution  <cit> , we use a new relay-restart technique  when the search stagnation situation arises. we use relay-restart when random-walk fails to escape from local minima. the relay restart starts from an improving solution. we maintain an improving solution list that contains all the improving solutions after initialisation. when a solution with energy level better than the current global best is found, the solution is added to the top of the list pushing existing solutions back. for relay-restart, a random conformation from the top 10% solutions of the list is selected to start with. the selected solution is then sent back to the bottom of the list to keep it away from the scope of reselection in very near future.

further implementation details
like other local search algorithms, our spiral search requires initialisation. it also needs evaluation of the solution in each iteration. further, it needs to maintain a tabu meta-heuristic to guide the search.

initialisation
our algorithm starts with a feasible conformation. we generate an initial conformation following a self-avoiding walk  on fcc lattice points. the pseudocode of the algorithm is presented in figure  <dig>  it places the first amino acid at . it then randomly selects a basis vector to place the successive amino acid at a neighbouring free lattice point. the mapping proceeds until a self-avoiding walk is found for the whole protein sequence.

tabu tenure
intuitively we use different tabu-tenures based on the number of hydrophobic amino acids  in the sequence. we intuitively calculate tabu-tenure using the formula in equation 4:

  tenure=10+hcount <dig> 

evaluation
after each iteration, the conformation is evaluated by counting the h-h contacts  where the two amino acids are non-consecutive. the pseudocode in figure  <dig> presents the algorithm of calculating the free energy of a given conformation. note that energy value is negation of the h-h contact count.

RESULTS
in our experiment, the protein instances , f <dig> and r instances are taken from peter clote laboratory website . cebrian et al.  <cit> , dotu et al.  <cit> , and shatabda et al.  <cit>  used these instances in evaluating their algorithms. we also use six more larger sequences that are taken from the casp  competition. the corresponding casp target ids for proteins 3mse, 3mr <dig>  3mqz, 3no <dig>  3no <dig>  and 3on <dig> are t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  and t <dig>  these casp targets are also used in  <cit> . to fit in the hp model, the casp targets are converted to hp sequences based on the hydrophobic properties of the constituent amino acids. the lower bounds of the free energy values  are obtained from  <cit> ; however, there are some unknown values  of lower bounds of free energy for large sequences.

results for  <dig> small , medium , and large  sized proteins. the sequences are taken from  <cit>   and casp competition . the results are calculated over  <dig> different runs with identical settings for each algorithm; duration of each run is presented in last column. the bold-faced values are the winners in respective rows. column lb-freee presents the lower bounds of free energy.

note: = denotes the lower bound of free energy is found and ? denotes unknown.

in table  <dig>  the size column presents the number of amino acids in the sequences, and lb-freee column shows the known lower bounds of free energy for the corresponding protein sequences in column id. however, lower bound of free energy for protein 3on <dig> is unknown. the best and average free energy for three different algorithms are also present in the table. the bold-faced values indicate better performance in comparison to the other algorithms for corresponding proteins. the experimental results show that our ss-tabu wins over ls-mem and ls-tabu over the  <dig> proteins with a significant margin on average search results.


relative improvement
the difficulty to improve energy level is increased as the predicted energy level approaches to the lower bound. for example, if the lower bound of free energy of a protein is - <dig>  the efforts to improve energy level from - <dig> to - <dig> is much less than that to improve energy level from - <dig> to - <dig> though the change in energy is the same . relative improvement  explains how close our predicted results to the lower bound of free energy with respect to the energy obtained from the state-of-the-art approaches.

in table  <dig>  we present a comparison of improvements  on average conformation quality . we compare ss-tabu  with ls-tabu and ls-mem . for each protein, the ri of the target  w.r.t. the reference  is calculated using the formula in equation  <dig>  where et and er denote the average energy values achieved by target and reference respectively, and e <dig> is the lower bound of free energy for the protein in the hp model. we present the relative improvements only for the proteins having known lower bound of free energy values. we test our new algorithm on  <dig> different proteins of various length. the bold-faced values are the minimum and the maximum improvements for the same column.

the relative improvements of ss-tabu w.r.t. ls-mem and ls-tabu are presented in the table. the column ri presents the relative improvements. the values are calculated using the formula in equation  <dig>  the value ? denotes an unknown value. the results are calculated over  <dig> different runs with identical settings for each algorithm. the bold-faced values are the minimum and maximum values of relative improvements for the respective columns. the column lb-freee presents the lower bounds of free energy.

note: ? denotes unknown.

  ri=et-ere1-er*100% 

improvement w.r.t. ls-mem
the experimental results in table  <dig>  at column ri  under ls-mem shows that our ss-tabu is able to improve the search quality in terms of minimizing the free energy level over all  <dig> proteins. the relative improvements with respect to ls-mem range from  <dig> % to  <dig> %.

improvement w.r.t. ls-tabu
the experimental results in table  <dig>  at column ri under ls-tabu shows that our ss-tabu is able to improve the search quality in terms of minimising the free energy level over all  <dig> proteins. the relative improvements with respect to ls-tabu range from  <dig> % to  <dig> %.

effectiveness of relay-restart
in table  <dig>  we present another set of experimental results to show the effectiveness of relay-restart in the spiral search framework. the results under the headings target and reference are obtained by running ss-tabu respectively with and without relay-restart. the relative improvements on average search results are presented in the last column of the table. the relative improvements after including relay-restart in our ss-tabu, are as minimum as  <dig> % and as maximum as  <dig> %.

comparison between two different variants of ss-tabu: i) the results under the heading reference are obtained by running ss-tabu without relay-restart  and ii) the results under the heading target are obtained by running ss-tabu with relay-restart technique. the results are calculated over  <dig> different runs with identical settings for each algorithm. the bold-faced values in columns avg are the winners for the respective proteins, and that in column ri are the minimum and maximum values of relative improvements. column lb-freee presents the lower bounds of free energy.

note: ? denotes unknown.

simplified structure
in figure  <dig>  we show the best structures found by ss-tabu, ls-mem and ls-tabu for protein r <dig>  each algorithm runs over a period of  <dig> hours to achieve the results.

search progress
we compare the search progresses of different variants of local search; ls-tabu, ls-mem, and ss-tabu over time. figure  <dig> shows the average energy values obtained with times by the algorithms for protein r <dig>  we observe that all of the algorithms achieve very good progress initially, but with time increasing, our spiral search ss-tabu makes more progress than ls-tabu and ls-mem.

CONCLUSIONS
in this paper, we present a new spiral search  under the local search framework for simplified protein structure prediction on 3d face-centred-cubic lattice. we use a new search guiding heuristic, which is the distance of a hydrophobic amino acid from a dynamic hydrophobic-core centre. we also use a novel relay-restart technique to break the stagnation. we compare our results with two other local search algorithms: ls-tabu and ls-mem, which achieved the state-of-the-art results for similar models. we found that our ss-tabu significantly outperforms both ls-mem and ls-tabu. we aim to apply our algorithm in high resolution protein structure prediction in future.

competing interests
the authors declare that they have no competing interests.

authors' contributions
mar conceived the idea of spiral search algorithm. mahn, mth, ss, dnp, and as helped mar modeling, implementing, and testing the algorithm. all authors equally participated in analysing the test results to improve the algorithm and were significantly involved in the process of writing and reviewing the manuscript. ss also provided experimental data from his memory based local search .

declarations
nicta, the sponsor of the article for publication, is funded by the australian government as represented by the department of broadband, communications and the digital economy and the australian research council through the ict centre of excellence program.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2013: selected articles from the eleventh asia pacific bioinformatics conference : bioinformatics. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/14/s <dig> 

