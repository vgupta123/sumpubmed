BACKGROUND
predicting which molecules can bind to a given binding site of a protein with known 3d structure is important to decipher the protein function, and useful in drug design to identify drug precursors or predict potential side effects if a drug candidate is predicted to bind to many protein pockets. a classical assumption in structural biology is that the 3d structure of a protein is related to its molecular function, i.e., the nature of its partner molecules. most available programs for structure visualization provide tools for 3d structure superposition and comparison, which may help to predict the nature of a protein ligand from those of other proteins with overall similar 3d structure  <cit> . however, proteins that do not display any overall sequence or structure similarity may present similar binding sites, and consequently also share similar ligands. therefore, comparison of binding pockets is a more appropriate approach in order to predict if two proteins bind similar ligands  <cit> , and many ligand prediction methods rely on local 3d comparisons at the binding site, using various ways to perform the comparison. for example,  <cit>  compared pockets described with real spherical harmonic expansion coefficients,  <cit>  used a specialized geometric hashing procedure as the core of the sitesbase web server,  <cit>  developed a method that detects multiple common sets of points. an approach proposed by  <cit>  is based on the representation of binding pockets by triangle-discretized spheres.  <cit>  and  <cit>  considered graph-based representations of binding pockets and applied graph matching algorithms. finally,  <cit>  combines the identification of a binding site on a whole protein 3d structure and its comparison to a reference binding site, using a geometric hashing procedure.

our contribution in this paper is twofold. first, we propose a new similarity measure to compare binding pockets of proteins. for that purpose, we represent a binding pocket by a cloud of atoms in the 3d space, potentially baring labels such as partial charges or atom types. the method relies on the modeling of local protein structures are rigid bodies, and we therefore represent a protein pocket as a cloud of points with fixed relative positions. the new similarity measure is based on a convolution kernel between clouds of points, and allows to align protein pockets. the method provides a superposition of two pockets even if their corresponding proteins present no overall sequence or 3d structure similarity. one important difference between this approach and most existing methods is that it does not require any pairwise matching of atoms , or residues, in order to compare protein binding pockets. instead we attempt to capture the similarity of atom densities in the 3d space. this confers smoothness properties to the proposed similarity measure. second, we propose to use a classification method to predict ligands for target pockets according to their similarity scores with a set of pockets with known ligands. this approach is able to handle the difficult case where different families of pockets binding the same ligand are present. this may be observed when the ligand is flexible and can be bound in various conformations by pockets displaying different topologies.

an important question debated is how to compare the quality of similarity measures. we underline that it is not possible to define an intrinsic quality for a similarity measure, because there is no absolute reference. similarity measures can only be compared according to the question of interest.

here, we evaluate quality of similarity measures with respect to their ability to predict a ligand for a pocket. although the area under roc curves  are commonly used  <cit> , we show that classification-based scores better compare the performances of similarity measures for ligand prediction.

we test our method on a benchmark proposed by other authors, in order to compare our new method to other published algorithms. we also test the methods on a new benchmark containing non redundant protein pockets binding ligands of similar sizes, typical of that of drug molecules, corresponding to a more realistic problem. we provide this new dataset as a publicly available benchmark.

methods
convolution kernel between clouds of atoms
in our model, a binding pocket is described by a set of atoms in the 3d space. our objective is to construct a similarity measure between pockets, which may be used to identify pockets binding the same ligand.

let  denote a binding pocket consisting of n atoms, where xi ∈ ℝ <dig> is a 3d vector representing atom coordinates, and li is a label  that may be used to store additional information on the atoms .

a classical approach for pocket comparison is to iteratively align two pockets and further count the number of overlapping atoms, usually within a tolerance of  <dig> Å. different implementations of this principle can be found in such methods as the tanimoto index  <cit> , the sitesbase algorithm , or the multibind algorithm  <cit> . the alignment is made to maximize the number of overlapping atoms, which is generally a good indicator of pocket similarity. however, atoms may have different positions but play equivalent roles in ligand binding , and the role of one atom in one pocket may be played by a group of atoms in another one. these observations suggest the idea of an alternative smooth score which would not count the number of overlapping atoms, but rather use a weighted number of atoms having similar positions. we first consider the case where labels are ignored, and only atom coordinates are used to measure the similarity between pockets. then, we explain how the information on atom labels may be introduced in the new similarity measure.

given two pockets p <dig> and p <dig> the similarity measure k is defined as follows   

in fact, this similarity measure defines a positive definite kernel, i.e. it may be considered as a true scalar product on atom clouds that represent binding pockets  <cit> . implicitly, it defines the following distance between pockets, which has all standard properties of a true metric :   

the parameter σ characterizes the sensitivity of the similarity measure  to points relative displacements. when σ is small, only atoms which are close to each other significantly contribute to k. on the contrary, when σ is large, almost all pairs of atoms contribute to k. the kernel  is an example of a convolution kernel  <cit>  between sets of points. alternative kernels may be constructed by substituting the gaussian kernel  by any other kernel between 3d vectors xi and yj

alternatively, the kernel  defined between sets of points can also be thought of as a kernel between mass distribution functions estimated from sets of points  <cit> . more precisely, let us represent each binding pocket pi by a distribution of masses defined as the sum of gaussian functions with bandwidth σ/ and centered on the pocket atoms, namely:  

then kernel  between pockets p <dig> and p <dig> can be recovered, up to a scaling constant, as the scalar product in l <dig> between the associated mass distributions:  

where c is a positive constant. in particular, the distance  between pockets can be thought of as the l <dig> distance between the corresponding mass distributions, namely:  

this probabilistic interpretation shows that, intuitively, the similarity score is preserved as far as the corresponding mass distributions are stable. it is therefore robust to small uncertainty in 3d coordinates.

however, formula  is not fully appropriate in practice, because the proposed measure is not invariant upon rotations and translations of the binding pockets. therefore, we define a similarity measure sup-ck as the maximum of  over all possible rotations and translations of one of the two pockets:   

where r is an orthonormal rotation matrix and yt is a translation vector. sup-ck is not a positive definite measure anymore, but can still be used as a similarity score. in particular, the interpretation of the similarity as a comparison of mass densities is still valid after the rigid motion. furthermore, to evaluate sup-ck, we now need to maximize a non-concave function over the set of rotations and translations, which may have many local maxima. exact maximization of this non-concave function is a hard optimization problem. an approximate solution can be estimated by running a gradient ascent algorithm, starting from many different initial points, and taking the best local maximum. choosing initial points near the global optimal can then help find a better solution and accelerate the optimization. in the case of binding pockets, we found experimentally that, rather than starting from random initial points, a good approximation of the optimal translation vector yt is the vector which translates the geometric center of p <dig> into the geometric center of p1:  

similarly, an approximation of the optimal rotation matrix r is the rotation that superposes the first principal axis of p <dig> with the first principal axis of p <dig>  the second one with the second one, and the third one with the third one. since principal vectors are defined up to a sign, the two signs for all principal vectors of one of the pockets have to be tested . if some of the pocket axes have close lengths, it may also be interesting to consider rotations which superpose the first principal axis of one pocket with the second principal axis of the other one.

gradient ascent method requires to calculate the gradient of the function in  with respect to r and yt. calculation of the gradient components related to yt is straightforward:  

since the set of rotation matrices is a 3d manifold embedded in 9d space, we cannot differentiate  with respect to each element of matrix r.

therefore, we use the euler representation of the rotation matrix:   

where r is expressed as a function of  ∈ [0;2π) <dig>  we can now calculate the derivatives of the maximand in  with respect to . for instance:  

this optimization step defines the best pocket superposition, according to the sup-ck similarity measure.

as mentioned above, it may be interesting to use additional information on binding pocket atoms, such as atom types or charges. let us suppose that this information is represented by labels li  and that it is associated to a similarity measure. for example, to measure the similarity between categorical labels like atom types, one can use the dirac function . in our experiments, we used atom partial charges as atom labels, with a gaussian kernel . of course, other similarity measures may be employed.

these atom labels can be used to re-weight the contribution of two atoms xi and yj by kl in :   

where parameter λ controls the sensitivity of our measure to atom labels, for example to partial charges. when λ is large, the impact of labels is negligible, which corresponds to a purely geometrical approach. when λ is close to zero, only pairs of atoms which have the same partial charge contribute to our measure. in general, the smaller λ, the greater the contribution of the atom labels to the binding pocket similarity measure. since the function kl does not depend on r and yt in , the same optimization procedure for pockets superposition can be used to optimize  or . finally, it is important to notice that the sup-ck measure of similarity can be used to compare any set of atoms in 3d. as mentioned in the introduction section, the superposition method and the similarity measure may be applied to superpose and compare pockets, even when they belong to proteins displaying no sequence and no overall structure similarity. this point will be illustrated in results on the example of two unrelated atp binding proteins.

related methods
in the following, we briefly recall the principals of a few other methods proposed to measure similarity between pockets, because we compare them to the sup-ck method defined in the present study.

spherical harmonic decomposition 
 <cit>  proposed to model pockets by star-shapes built using the surfnet program. the star-shape representation is defined by a function f , representing the distance from the pocket center to the pocket surface for a given ,. to measure the similarity of binding pockets p <dig> and p <dig>  the corresponding functions f <dig> and f <dig> are first decomposed into spherical harmonics, and the pocket similarity is then computed as the standard euclidean metric between vectors of decomposition coefficients.

 <cit>  presented three different variants of shd, using only the shapes or the sizes of the binding pockets , and their combination. in the results section, we recall the results that they obtained with the combination, because it provided the best performance.

poisson index 
as mentioned in the introduction, many binding pockets similarity measures are based on pocket alignment with further counting of overlapping atoms. this kind of approach is used in the poisson index model  <cit> . more precisely, the poisson index model is based on a normalized number of overlapping atoms , where l is the number of overlapping atoms, and #p <dig> and #p <dig> are the numbers of atoms in p <dig> and p <dig>  respectively. the pi score may be computed for any pocket superposition method. while  <cit>  used the geometric hashing algorithm, we used the superposition made by the sup-ck method, with further superposition refining to maximize the number of overlapping atoms.

multibind
 <cit>  represents pockets by pseudo-atoms labeled with physico-chemical properties. pockets are aligned using a geometric hashing technique. this algorithm was mainly designed for multiple alignment of binding sites, but it may be used for pairwise alignment of pockets, as performed in this study.

other simple methods
we also consider two simple methods based on the comparison of simple binding pockets characteristics. these methods represent each pocket by an ellipsoid constructed on the basis of the pocket's principal axis. the first one, referred to as vol, estimates the similarity between pockets p <dig> and p <dig> by the absolute value of the difference between the volumes of their corresponding ellipsoids:

vol = |vol - vol|. the second one, called princ-axis, estimates the similarity score between pockets by , where  and  are the lengths of the three principle axis of pockets p <dig> and p <dig>  respectively.

combination of sup-ck and vol
since volume information was found to be important by  <cit> , we also tested a linear combination of the sup-ck and vol methods, called sup-ck-vol, where the coefficient of linear combination is learned as other model parameters  in the double cross validation scheme. this linear combination takes advantage of the vol method to separate pockets binding ligands of very different sizes like po <dig> and nad, and of the sup-ck algorithm to allow finer discrimination.

sequence
to compare our method based on local 3d similarity to a simple and classical approach based on sequence comparison, we conducted a pairwise alignment of all protein sequences for the different datasets, in order to build a matrix of distance between proteins. this matrix was built with the algorithm of needleman and wunsch, using the default settings  <cit> .

performance criteria
there are various ways to measure the similarity between binding pockets, and some of them were discussed in the previous section. to evaluate the quality of a given similarity measure, one may compare it to some "ideal" similarity measure, but the problem is that such measure does not exist. as an example, if two alternative measures sm <dig> and sm <dig> compare two pockets p <dig> and p <dig> so that sm <dig> =  <dig>  and sm <dig> =  <dig> , there is no way to decide which one is the best, because we do not have any absolute reference. the choice of the optimal measure, thus, depends on the problem of interest. in the context of ligand prediction, the quality of a similarity measure can be evaluated according to its ability to cluster together pockets that bind the same ligand. this can then help to predict ligands for previously unseen pockets. to evaluate this clustering ability, we considered two different scores.

auc score
 <cit>  used the auc score which is computed as follows. let us consider a set of pockets  and a similarity measure sm. to estimate the auc score of a given pocket p*, we rank all other pockets according to their similarity to p*, sm , and we plot the roc curve, i.e., the number of pockets binding the same ligand versus the number of pockets binding a different ligand among the top n pockets, when n varies from  <dig> to n. the quality of sm is measured by the surface of the area under the roc curve, which defines the auc score. an "ideal" sm function will rank all pockets binding the same ligand as p* on the top of the list, leading to an auc score equal to  <dig> . on the contrary, if these pockets have random positions in the ranked list, the auc score will be equal to  <dig>  . finally, the overall auc score of a method equals its mean value over all pockets. while the auc score represents an intuitive and classical way to evaluate the quality of similarity measures, it may fail in some situations. consider the case of a dataset containing two types of pockets l <dig> and l <dig> , and a similarity measure that correctly clusters pockets according to their type. if clusters are close to each other , the auc score of pockets situated near the border  will below. the situation becomes even worse if pockets binding ligand l <dig> form several clusters, as shown in figure  <dig>  leading to low auc scores for almost all pockets binding ligand l <dig> this similarity measure will have an overall poor auc score on this dataset, although it produces perfect separation of pocket types. this may happen when the database contains proteins that underwent convergent evolution, or that bind the same ligand under very different conformations. therefore, a poor auc score does not necessarily correspond to a poor pocket separation, and auc scores may not be suited to evaluate the quality of similarity measures with respect to the question of ligand prediction.

classification error
these remarks lead us to employ another quality score based on a classification error. to estimate the quality of the similarity measure sm, we try to predict a ligand  for each pocket from that of its neighbors. the smaller the classification error , the better the similarity measure. in this work, we used a k nearest neighbors  classifier. to evaluate the classification error, we applied a leave-one-out double cross validation methodology. namely, each pocket p from the dataset is considered one by one, and all other pockets are used as the training set. parameters of the model  are estimated on the training set via cross-validation technique, and the class  of the pocket p under consideration is predicted using the training set and the estimated parameters of the model. more precisely, in the case of a dataset containing  <dig> proteins, double cross validation is performed according to the following scheme: each of the  <dig> pockets is extracted in turn from the dataset in a leave one out procedure. then, each of the other  <dig> pockets is selected in turn and its class is predicted from the  <dig> remaining pockets. this operation is repeated for different values of σ and λ, and the σ* and λ* values providing the highest number  of well predicted pockets are retained and used to predict a class for the initially extracted pocket. note, that all datasets contained proteins that presented less than 30% global sequence identity  <cit> , to ensure that there were no duplicates or very close elements in the datasets. this allowed to use a leave-one-out scheme without risk of bias.

data
for all protein structures, binding pockets were extracted as follows: protein atoms situated at less than r Å of one of the ligand atoms were selected, where r is a parameter of the model , and is also learned in the double cross-validation scheme. in most cases, the optimal value of r was found to equal to  <dig>  Å, a value which was retained in this study. however, experiments where r is varied are also presented in the discussion section. finally, pockets are represented by 3d clouds of atoms labeled by their partial charge, attributed according to the gromacs  force field  <cit> . atom partial charges were assigned according to the protein structure alone, in absence of the ligand. however, the presence of a ligand would potentially modify these calculated charges, but this could not be taken into account since the method aimed at predicting the ligand. other labels representing chemical properties such as amino-acid type, hydrogen donor or acceptor, or hydrophobic atom could be included.

we considered three benchmark datasets. the first one, proposed by  <cit>  and referred to as the kahraman dataset, comprises  <dig> protein crystal structures in complex with one of ten ligands . the second one is an extended version of the kahraman dataset , in which we added protein structures in complex with one of the same ten ligands, leading to a total of  <dig> crystal structures . the added proteins presented pairwise sequence identities less or equal to 30%, to avoid potential bias by inclusion of close homologues.

the kaharaman dataset comprises ligands of very different sizes and chemical natures, as shown in table  <dig>  however, the real challenge is to test methods on pockets that bind ligands of similar sizes. therefore, we created a third dataset comprising  <dig> structures of proteins in complex with ten ligands of similar size , see table  <dig>  this dataset will be referred to as the homogeneous dataset  . the results presented below on this dataset may constitute a new benchmark for future work in the same area.

amp: adenosine monophosphate, atp: adenosine-5'-triphosphate fad, flavin-adenine dinucleotide, fmn: flavin mononucleotide, glc: alpha-d-glucose, hem: protoporphyrin containing fe, nad: nicotinamide-adenine-dinucleotide, po4: phosphate ion, and: 3-beta-hydroxy-5-androsten-17-one, est: estradiol.

pmp: 4'-deoxy-4'-aminopyridoxal-5'-phosphate, suc: sucrose, llp: 2-lysine, lda: lauryl dimethylamine-n-oxide, bog: b-octylglucoside, plm: palmitic acid, sam: s-adenosylmethionine, u5p: uridine-5'-monophosphate, gsh: glutathione, 1pe: pentaethylene glycol.

RESULTS
all methods were tested on three datasets described in the data section. the performance of all methods is evaluated on the basis of the auc score and of the classification error . the sup-ck method is compared to sup-pi, shd, vol, princ-axis and multibind algorithms . among the pocket extraction methods used in the shd approach, we considered the results corresponding to the interact cleft model, which is similar to our pocket extraction method, and allows to compare the sup-ck and shd approaches. algorithms, benchmark datasets and distance matrices for the supck method are available at http://cbio.ensmp.fr/paris/.

kahraman dataset
results of all methods on the kahraman dataset are presented in table  <dig>  according to the auc score, all methods improve the baseline value of  <dig>  corresponding to a random ranking, and simple methods like vol and princ-axis give surprisingly good results, for example, there is no significant difference between the auc score of vol and the auc score of the best performing method sup-ckl-vol. the same effect was observed by  <cit>  when they used simple measures based on comparison of pockets sizes.

performance for each algorithm is evaluated by its mean auc score and by its classification error , averaged over all pockets. .

as expected, the score obtained using the sequence alignment is close to the baseline value, indicating that this approach is not suitable to the problem of predicting ligand when sequences are very different. the auc scores of sup-ck-vol  are better than those of all other methods, except for vol, according to the wilcoxon signed-rank test . the best results are obtained by the sup-ck-vol algorithm, which seems to benefit from the association of volume information and of more subtle geometric details provided by the sup-ck algorithm. another observation, is that information on atom partial charges does not significantly improve the auc score of the sup-ck methods.

to evaluate the classification error, we tried to predict a ligand  for each pocket using the k-nearest neighbors classifier . note that in a ten class  classification problem, a random classifier would have an error of  <dig> , which represents baseline performance for all classifiers.

the sup-ck and sup-ck-vol algorithms have lower classification errors than other methods, which means that they are well suited to the problem of ligand prediction. interestingly, atom partial charges information significantly reduces classification errors of both methods, which was not the case for auc scores. the use of additional atom labels such as amino-acid type, hydrogen donor or acceptor, or hydrophobic atom may again improve the quality of ligand prediction.

no method reaches the auc score of  <dig> , or perfectly predicts the ligands. several remarks might explain this fact. first, pockets have to be extracted from the protein structure. whatever the employed method might be, it is difficult to extract all atoms interacting with the ligand, and only these atoms. in particular, atoms that do not interact with the ligand might have been included in the pockets, which could reduce the observed similarity between pockets that bind this ligand. second, ligands are flexible molecules that can adopt different conformations. therefore, protein pockets that bind the same ligand may display various shapes. in such situations, correct prediction is still possible if the learning dataset contains pockets in which the ligand conformations correctly samples its accessible conformational space. the present dataset contains only  <dig> pockets per ligand, which might be too small for the most flexible ligands.

when analyzing results in table  <dig>  one must remember that the vol and princ-axis methods do not require pockets superposition, while all other methods do. the superposition algorithms of the latter are different, which contributes to the observed scores. however, the sup-pi and sup-ck methods only differ by their similarity measures. after superposition, sup-pi requires to determine the number of overlapping atoms, while sup-ck relies on a weighted number of atoms having close positions. this seems to confer some smoothness properties to the latter, and robustness with respect to variations observed between pockets binding the same ligand.

an important point mentioned in background is that pocket superposition with sup-ck does not require any sequence or structure similarities between the corresponding proteins. to illustrate this property, we analyzed in more details the results for atp-binding proteins of this dataset. for example, the biotin carboxylase from e. coli , and the phosphoinositide 3-kinase  are unrelated proteins. they present no sequence similarity , and their overall structures are totally different, as shown in figure 3a. however, they bind atp in similar conformations. when these two pockets are aligned with the sup-ck algorithm, their corresponding atp molecules are found correctly superposed, as shown in figure 3b, although the sup-ck algorithm only uses protein atoms.

moreover, similar residues, playing equivalent roles in atp binding, are found in equivalent positions in the superposed structures. in particular, n <dig> and k <dig> interact with the γ phosphate of atp in pdb: 1e8x and are found close respectively to k <dig> and h <dig> that play the same role in pdb: 1dv <dig>  we also observe that, k <dig> interacting with the β and α phosphates of atp in pdb: 1e8x, is found close to k <dig> in pdb: 1dv <dig> after pockets superposition. these residues form equivalent positively charged regions, as shown in figure 3c. similarly, the hydrophobic region interacting with the adenine ring of atp in pdb: 1e8x and involving residues w <dig>  i <dig>  i <dig>  i <dig>  v <dig>  a <dig>  m <dig>  f <dig>  and i <dig> is equivalent to the hydrophobic region involving residues v <dig>  v <dig>  i <dig>  l <dig>  l <dig>  i <dig>  i <dig> in the superposed pdb: 1dv <dig> structure. these hydrophobic patches overlap after pockets superposition, as shown in figure 3d. overall, these observations indicate that the sup-ck algorithm proposed a reasonable superposition for these two unrelated atp-binding pockets.

extension of kahraman dataset
to evaluate the ability of the sup-ck method to improve its performance when trained on a larger dataset, we considered an extension of kahraman dataset consisting of  <dig> of non redundant pockets that bind one of the  <dig> ligands of the original dataset . therefore, the new dataset consists of  <dig> kahraman pockets and  <dig> new pockets from the pdb.

classification error for all algorithms on the extended kahraman dataset. column a - classification error evaluated on all  <dig> pockets. column b proportion of wrong predictions among the original  <dig> kahraman pockets extracted from column a, i.e. classification error evaluated on  <dig> kahraman pockets when all  <dig> pockets are used in the leave-one-out procedure. column c - classification error evaluated on the  <dig> new pockets, when the  <dig> kahraman pockets are not used in the leave-one-out procedure.

however, sup-ckl provides the best performance. the quality of its predictions might again improve by including more structures available at the pdb. column b presents the results on the  <dig> original pockets extracted from those presented in column a. it shows that 79% of the binding pockets of the original kahraman dataset were correctly classified by sup-ckl, compared to 73% when they were classified using only the original dataset . finally, column c shows the prediction errors for the  <dig> new pockets when the  <dig> original pockets are not used in the leave one out procedure. the scores in this column may be seen as a test on an external independent dataset . it shows that the performance of the sup-ck methods does not degrade on the  <dig> new pockets, and remains above those of the other methods.

it is also interesting to study the structure of the dataset according to the metric associated to the sup-ck method. we performed kernel principal component analysis  <cit>  on the pockets similarity matrix of the sup-ck method . figure  <dig> represents the projection of  <dig> binding pockets on the first two principal components. overall, we observe a clustering of binding pockets according to their ligands, which illustrates the good performance of this method for ligand prediction. looking into more details, we notice that the clusters of pockets that bind atp, amp or po <dig> overlap. indeed, proteins that bind atp usually also bind amp or po <dig>  although with different affinities. furthermore, some pockets  are found far from their main cluster, or form secondary clusters, which illustrates that pockets having different geometrical characteristics may bind the same ligand. in the classification approach employed here, prediction of a ligand for a given pocket uses the classes of its neighbors, which allows to better predict ligands for pockets belonging to such secondary clusters.

homogeneous dataset 
the kahraman dataset contains ligands of very different sizes, which might not be typical of real problems. therefore, we built the homogeneous dataset because it was important to test methods on a benchmark containing pockets binding ligands of more similar sizes.

performance for each algorithm is evaluated by its mean auc score and by its classification error , averaged over all pockets.

the best auc score is obtained by the sup-ckl-vol algorithm. the auc scores of all other methods are significantly lower according to the wilcoxon signed-rank test , except sup-ckl. indeed, volume information only provides a slight improvement of 1%, compared to 3% on the kahraman dataset. on the contrary, information on partial charges leads to an improvement of 4% for the sup-ck and sup-ck-vol algorithms, which was not observed on the kahraman dataset. this shows that addition of physico-chemical information is critical to better compare pockets of similar sizes. the lowest classification errors are obtained by the sup-ckl and sup-ckl-vol algorithms, which again shows that volume information is not critical on this benchmark. on the contrary, partial charge information leads to an improvement of 9% between sup-ck and sup-ckl, and of 8% between sup-ck-vol and sup-ckl-vol.

discussion
computer vision methods
an important topic is the relation between methods for binding pockets comparison and algorithms in field of computer vision for comparison of 3d shapes. a complete review of 3d shapes comparison methods is out of scope of this article, and interested readers may consult  <cit>  for a detailed review. interestingly, most of the existing methods for binding pocket comparison have an analogue in the domain of computer vision. for example, methods based on real spherical harmonic expansion used in  <cit>  for binding pocket comparison are also discussed by  <cit>  in the context of general 3d shape matching. principles used in another popular method for matching and comparison of 3d forms, called iterative closest point algorithm  <cit> , and its variants are used in poisson index and multibind algorithms. examples of approaches based on graph representation of 3d forms and graph matching methods may be found in  <cit>  for binding pockets comparison, as well as in  <cit>  for 3d shapes comparison. nevertheless, binding pockets are not continuous shapes but discrete clouds of points. they can be transformed into 3d shapes  <cit> , but this transformation may be a source of noise. moreover, a similarity measure between binding pockets should be rotationally and translationally invariant, which is not always the case in computer vision methods. however, we believe that the adaptation of appropriate methods may be very fruitful for the recognition of binding pockets.

choice of optimal parameters
an important characteristic of the sup-ck algorithm is its ability to adapt to the variability potentially observed between pockets binding the same ligand. the sup-ck algorithm presents two parameters, σ and λ. parameter σ controls the sensitivity of the similarity measure to atoms relative displacements. the larger the variability of pockets binding the same ligand, the greater the value of σ should be. figure 6a shows how the mean  auc score and classification error vary with σ on the homogeneous dataset. in both cases, the optimum is reached when σ is equal to  <dig>  note that we did not use the same value of σ estimated from all pockets. for each pocket, the optimal value was estimated on the basis of the remaining  <dig> pockets used for training, in a double cross validation scheme, to avoid overfitting to the data. however, we observed that, in most cases , σ =  <dig> was chosen. when information on atom partial charges is used, parameter λ  conditions the sensitivity of the method to atoms charges. figures 6b and 6c present the mean auc score and the classification error as functions of σ and λ. we observe that for the auc score, the optimum is reached when σ equals  <dig> and λ equals  <dig> , while for the classification error the optimal value of σ is equal to  <dig> 

while in general we suggest to learn these two parameters of the sup-ck algorithm on the dataset of interest, we observed that some default values provide good performance in many cases, and that they could be used in dry-runs on new datasets. for example, a good default value for σ is  <dig>  this value was optimal for the hd dataset when we used the pure geometrical approach, and it also gave good results on the kahraman and extended kahraman datasets. when partial charges are used, i.e. with the sup-ckl algorithm, larger default values for σ are recommended , and a good default value for λ is around  <dig> . the radius r of the extracted pocket is a parameter of the extraction pocket procedure. figures 7a and 7b present the classification errors of sup-ck as a function of σ and r, respectively for the kahraman and the hd datasets. we observe that in both cases, the optimal value of r is around  <dig>  Å, which corresponds to a good default value. however, figures 7a and 7b show that the performance of the method is still interesting for values varying between  <dig>  and  <dig> Å. importantly, they also show that the optimal value of σ does not depend on r. finally, k is a parameter of the k nearest neighbors classifier . ideally, it should also be learned, but values of k between  <dig> and  <dig> usually work well.

robustness of the method with respect to pockets definition
it is important to discuss the impact of using the r parameter, a cutoff distance used for pocket definition. this could lead to situations where an atom is excluded from the pocket in one protein, when a similar atom is included in the pocket of another protein to which it is compared. however, as briefly mentioned in the background section, the principle of the method is to compare pockets based on the optimal superposition of their clouds of atoms. the method does not define or use pairwise matching of atoms of the two pockets, as most other available methods do. figure  <dig> illustrates this point: the method did not lead to local pairwise superposition of blue and red points, but rather proposed a global superposition of the red and blue atoms densities. therefore, the method is expected to be robust with respect to potential inclusion or exclusion of a small number of atoms in one of the pockets. as mentioned in the above paragraph, the fact that the performance of the method remains interesting when r varies between  <dig>  and  <dig> Å is also an indirect illustration of this idea. one could wonder if the use of atom labels such as partial charges would decrease the robustness of the method with respect to pockets definition using r. indeed, a cutoff distance could split a strong dipole in one of the proteins, and not in the other . however, the addition of atom labels like partial charges is only one option of the method. results using only atom positions  already show good performances. addition of partial charges labels still improves the results, despite the risk that strong dipoles might have been cut. this can probably be explained by the facts that such events are rare, and that the method searches an overall best superposition of atoms densities, despite possible local mismatches in atoms positions or labels. nevertheless, it would be interesting to explore other cutoff criteria taking atom labels into account , in future developments of the method.

pocket extraction
we did not tackle the problem of pocket detection, which relies on totally different algorithms than those discussed in this paper, and which was out of the scope of the present study. however, the similarity measured between two pockets strongly depends on pocket definition. we extracted pockets as the set of all protein atoms within about  <dig> Å of the bound ligand. similar approaches were used by  <cit>  , and similar pockets may also be retrieved by methods like q-sitefinder  <cit>  without any information on ligand coordinates. another alternative could be to employ one the various programs that have been developed to locate depressions on protein surfaces, particularly in the case where no holo structure is available  <cit> , or in the case of orphan proteins for which the ligand and the binding site is unknown. however, existing pocket extraction algorithms have difficulty to define the rim of a binding pocket, and tend to extract protein cavities that are larger than the binding pocket itself, as defined by the ensemble of residues involved in ligand binding. although we observed that our method had some robustness with respect to the definition of the binding pocket, global similarity measures like those proposed in this paper may loose some performance on automatically extracted pockets.

protein functions
the problem of ligand prediction for proteins is related to the problem of predicting the protein molecular function. we analyzed the repartition of the atp binding pockets generated by the sup-ck similarity measure on the extended kahraman dataset. figure  <dig> presents the projection of atp pockets annotated as transferases or ligases, on the first two principal components of the similarity matrix associated to sup-ck. we observed that these two families of enzymes are essentially separated. although these are very preliminary results, they show that sup-ck method may be a useful tool, in conjunction with other approaches, for the prediction of protein molecular functions.

in the result section, we showed the example of the pdb: 1e8x and pdb: 1dv <dig> unrelated structures, binding atp in similar conformations, and whose pockets were correctly superposed by the sup-ck method. in the case of even more dissimilar pockets, binding atp in different conformations, sup-ck still allows superposition of the pockets so that similar regions overlap. for example, rabbit muscle pyruvate kinase  and e. coli  <dig> -dihydro 6-hydroxymethylpterin pyrophosphokinase  of the kahraman dataset have no sequence or structures homologies, and bind atp in different conformations as shown in figure 3a. however, according to the sup-ck superposition of these two pockets, shown in figure 3c, the two patches of hydrophobic residues that interact with the adenine ring of atp are found to overlap. note that these two pockets where correctly classified by sup-ck , on the basis of other more similar pockets present in the dataset.

nevertherless, a reasonable pocket superposition for these highly different proteins with significant pockets deviations, was proposed by the sup-ck method.

apo structures
the sup-ck algorithm had a good performance in ligand prediction for holo structures. it also showed robustness with respect to atom displacements. this is an important characteristic for future application of the method to real case studies where the ligand is unknown, and one must extract pockets from apo structures. local structural rearrangements are frequent upon ligand binding, and methods displaying some smoothness with respect to atoms positions are required when working with apo structures. this would also be necessary for proteins with no available experimental structure but for which a homology model can be constructed, since the modeled pocket may somewhat differ from the true, but unknown, pocket. we expected that, for large flexible ligands, the performance of the sup-ck method might decrease, but this was not observed for the two datasets that we used . however, we cannot rule out the possibility that this could be observed if the method is trained on other small training datasets.

computational issues
the running time of the sup-ck method depends on the value of the stopping criterion used in the gradient ascent method, and on the number of atoms. in our experiments, the algorithm running time varied between  <dig>  and  <dig>  seconds  per pockets pair. this running time is already quite reasonable to process large protein databanks. the method is presented on datasets of moderate sizes because our aim was to validate the methodology. however, it can be applied on ligand prediction problems, where the number of pockets  included in the learning dataset needs to be larger. for future applications in the domain of screening using all ligands available in the protein data bank, a pre-filtering on the basis of simple pocket descriptors  could further accelerate the sup-ck method. future application of the method proposed could include identification of new ligands for protein pockets according to those known for the most similar pockets. this is of interest in the context of identification of drug precursors or of side effects prediction.

CONCLUSIONS
we have developed a new method to measure the similarity between protein binding sites. in this method, binding pockets are described as clouds of points in the 3d space, each point corresponding to an atom. these points may bare additional labels representing various characteristics such as atom partial charges, atom types, or other atomic features. the proposed method showed good performance in the classification of binding pockets according to their respective ligands. it relies on the search for the best global superposition of clouds of atoms, which confers robustness with respect to binding site definition or variations in ligand conformation. this method may be used to compare any type of binding sites in the 3d space, even in absence of overall sequence or structure similarity between their corresponding proteins.

authors' contributions
bh and vs prepared the benchmark datasets, performed data processing and interpreted results. mz and jpv developed the sup-ck algorithm. mz implemented the methods and performed computational experiments. all authors contributed to the redaction. all authors read and approved the final manuscript.

supplementary material
additional file 1
text file containing the name of all added pdb and ligands for the extension of the kahraman dataset.

click here for file

 additional file 2
pdf file containing a table describing all proteins used in the homogeneous dataset. 

click here for file

 acknowledgements
we thank mines paristech and cannot mines for financial support to the project and funding of bh and mz.
