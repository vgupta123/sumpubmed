BACKGROUND
modeling gene regulatory networks  is one of the most important issues in systems biology research. it uses time series gene profiles to characterize the phenotypic behavior of a target system, and reverse engineering has been advocated to construct networks in an automated way  <cit>  <cit> . in the process of inferring gene networks, many computational models and methods have been proposed. the choices mainly depend on the biological levels to be studied and the computational complexities needed to solve the corresponding problems. to capture the sophisticated characteristics of a gene network, in this work we adopt one of the most popular and well-researched models, the s-system model, to represent a gene network. the s-system is a set of tightly coupled ordinary differential equations , and the component processes in these equations are characterized by power law functions  <cit>  <cit> . in the s-system model, the systematic structure can be described as:

  dxidt=αi∏j=1nxjgi,j︸synthesis−βi∏j=1nxjhi,j︸degradation,∀;i 

where xi is the expression level of gene i and n is the total number of genes in the genetic network. the parameters αi and βi ∈  <cit>  are rate constants ; gi,j and hi,j ∈  are kinetic orders that reflect the interactions from gene j to i in the synthesis and degradation processes, respectively. the inference of a tightly coupled s-system, however, is a large-scale parameter optimization problem that is very time-consuming. by examining the structural characteristics of gene networks, maki et al.  <cit>  proposed an efficient strategy to decouple this inference problem with n separated sub-problems, each of which refers to one gene. in other words, in a decoupled s-system, a tightly coupled system of non-linear differential equations is decomposed into n differential equations  <cit> . the main benefit of adopting this strategy is that it allows us to model corresponding genes and observe genetic interactions toward the target gene independently.

to exhibit how the components of an s-system represent a network topology and pathway diagrams, figure 1a shows a visualized topology that was generated by an arbitrary arrangement. in the graph, we take gene x <dig> as an example, which has a link with x2; therefore, the pathway diagram can be expressed as in figure 1b. the input magnitude  of x <dig> could be affected by x <dig> , which is also called the synthesis process of x <dig> . at the same time, the output magnitude  of x <dig> depends on the concentration level of x <dig>  and could be affected by x <dig>  as well, which is depicted by the degradation process in the equation for dx <dig>  the concentration of x <dig> at the next time step is determined by a calculation of the magnitude of synthesis minus that of degradation . the synthesis and degradation processes of gene x <dig> have the following relationships.

  synthesis process: sx1=α1 x2g <dig>  

  degradation process: dx1=β1 x1h <dig> x2h <dig>  

  x1∙=sx1-dx <dig> 

similarly, an example of the 3-node connections on the perspective of gene x <dig>  but with the same computational process can be completed through the equations below.

  synthesis process: sx2=α2 x1g <dig> x3g <dig>  

  degradation process: dx2=β2 x1h <dig> x2h <dig> x3h <dig>  

  x2∙=sx2-dx <dig> 

to infer target networks from time series gene profiles, many issues that are related to biological systems cannot simply be addressed by topology reconstruction or parameter estimation alone. as mentioned in  <cit> , on the one hand, if the topology of a grn can be reconstructed, it is usually not sufficient for a satisfactory scientific understanding . on the other hand, the optimized parameters for a given network topology  do not enable discrimination of alternative candidates. from the above analyses, we can recognize that there are two major goals to satisfy in inferring gene networks. the first goal is to minimize the accumulated discrepancy between the gene expression data recorded in the data set  and the values produced by the inferred model . the performance of a certain model can thus be defined directly as the mean squared error  over the time period:

  mse=∑t=1txia -xioxio <dig>  for i =  <dig> ,...,n 

in the above equation, xio is the desired expression level of gene i at time t, xia
 is the value generated from the inferred model, and t is the number of time points for measuring the gene expression data. n is the number of genes in the network. as mentioned previously, in this work, we adopt the decoupled strategy in which each sub-problem corresponds to the i-th mse function.

the non-linear odes of an s-system are difficult to solve by traditional local optimization techniques  <cit>  <cit> , such as the conjugate gradient method and newton's method. global optimization techniques are better choices than the local techniques in estimating parameters for biological systems. among the global methods, those utilizing deterministic strategies are more effective in finding the global optimum. however, they are computationally expensive. in contrast, the methods that employ stochastic strategies can obtain solutions close to the global optimum within a reasonable amount of time. population-based approaches  or particle swarm optimization ) are stochastic methods, which have been used in many studies to infer s-system models . in this study, we adopt this type of global optimization technique and develop a new algorithm to enhance the search performance.

the second goal, in the meantime, is to select the solution that has a correct network structure. in real-world situations, the number of data points that are available is often smaller than that of the parameters to be determined; in other word, the network inference task is in fact an under-determined problem. it is thus possible to obtain many feasible solutions with various combinations of network parameters . to solve the structure problem, prior knowledge or assumptions are required. some researchers suggested that directly taking the form of a parameter constraint for the prior domain knowledge  would restrict the parameter search . other researchers proposed to incorporate the structural/topological properties of the biological networks  with the gene expression data described above in the evaluation process. for example, some inference methods intend to limit the amount of grn connectivity to be as small as possible because gene regulatory networks are typically known to be sparsely connected . in such a case, a small penalty term that measures the connection between the genes can be added to the fitness function to discourage the connections  <cit>  <cit> . to take both gene expression data and structure information into consideration, the evaluation function for network inference thus becomes:

  fobj=α⋅mse+⋅structureerr, for i=1~n 

where mse is the mean squared error, structureerr is a penalty that describes the structure discrepancy between the current solution and the previously known knowledge, and α is a weighting factor between  <dig> and  <dig> 

prior knowledge, however, is not always available. additionally, the topological properties of the network that are unveiled within the genome-scale networks cannot be easily addressed in studies of relatively small size networks . though some tools can be used to derive skeletal network structures from time-series data, for example boolnet  <cit> , their results are not sufficiently accurate to be used as structural knowledge to guide the search for solutions. in this study, we use a different perspective when accounting for the network structure in the inference procedure. because several theoretical analyses have demonstrated that a gene regulatory network with correct structure innately has the intrinsic characteristic of robustness , we instead turn to infer robust networks that are likely to have the correct structures when there is a lack of explicit structural knowledge.

network robustness can be defined as the insensitivity of a specific system property to variations in the components and environment of the system  <cit>  <cit> . in general, there are three types of robustness against different types of perturbations that are often considered in the literature: knockout robustness, parametric robustness, and initial condition robustness  <cit> . the first two types of robustness are related to the evolutionary  perturbation , and the third type of robustness involves the environmental perturbations . some prior studies have shown that there is a growing consensus that the network structure has a significant influence on the robustness  <cit>  <cit> . though robustness is a critical feature for living systems, details about the mechanisms through which robustness is achieved are still not well understood.

as mentioned above, we focus here on how to infer a network that is robust against internal fluctuations caused by the parameters that correspond to active gene interactions. in a biological system, genes interact within a complex network to provide robust functions, and each network parameter has its role in determining the system behavior. nevertheless, several authors have observed that most of the variation in the measured gene expression changes can be explained by a relatively small number of variables  <cit>  <cit>  <cit> . parameters that correspond to these variables are very sensitive to variations and can introduce fragility into the system. to ensure the robustness of the inferred network and to further investigate gene interactions, it is thus important to first identify the critical subset of the network parameters based on the observed system changes and, then, to derive an acceptable value range for each parameter to restrict its value lying in the specified range during the network reconstruction process  <cit> . therefore, we take parameter sensitivity into consideration in the network reconstruction procedure in such a way that robust results  can be obtained.

in this work, we present an integrated approach, which is revised from our previous study, which focused on parameter sensitivity analysis  to iteratively evolve partial solutions to guide the search gradually toward the complete solution. this approach couples parameter identification and parameter optimization techniques to address the aforementioned two problems in gene network inference: it first identifies which parameters are more critical than others in a system, based on their sensitivity measurements. as mentioned before, this arrangement is to enhance the structure correctness of the inferred network in an indirect way, under the situation that lacks prior knowledge about the network structure. then, it involves a hybrid ga-pso optimization method to infer networks in accordance with the parameter criticality. to validate the proposed approach, a series of experiments have been conducted on artificial and real datasets. the results and analysis show that our approach can infer robust networks with desired system behavior successfully from the gene profiles.

methods
parameter identification
as mentioned above, in an inference method, it is important to identify the critical network parameters  based on the observed system changes before performing parameter estimation because the parameter values are only valid for the set of parameters that were selected . the parameter identification procedure employed here is based on a sensitivity analysis technique, in which the parameter values are adjusted within a given range and then the statistical calculations are employed to measure the system stability. with the parameter sensitivity measurement defined in  <cit> , we can identify the critical parameters  or discover parameters that could influence the synthesis and the degradation processes of a network.

two types of approaches are often utilized to implement the sa techniques for a dynamic system, namely local sa and global sa. local methods focus on a specific point in parameter space and measure responses of the model to local parameter changes. the advantage of this type of approaches is that when the network structure remains unknown, local sa methods still can give the sensitivity estimation by calculating a parameter's given value range. local sa methods, however, consider only one parameter per calculation and do not account for other parameters   <cit> . this approach often results in an underestimation of the true model sensitivities in non-linear models. in contrast, global methods attempt to capture the entire parameter space. they explore multiple parameter values and examine parameter interactions with different parameter values simultaneously  <cit> . however, this type of methods can only be used if the network structure is known beforehand.

in the case of inferring a gene network from the expression data, the network structure is usually unclear during the modeling process. it is therefore impossible to locate and choose the most important genetic interactions as in the analysis pool for global sa. to consider multiple network parameters simultaneously, we devise a new approach modified from a widely used sa technique, which is multi-parameter sensitivity analysis . mpsa utilizes pearson correlation coefficients  for quantitative comparisons to identify the sensitive parameters during inferring a grn, which is achieved by calculating and ranking the values of pcc among parameters. this approach can be used to explore influential genetic interactions and to examine the robustness of an inferred grn, similar to other global sa methods. our newly developed method  includes an iterative process for calculating the sensitivity of each parameter, and then ranks the sensitivities of all of the parameters. by considering the most sensitive parameters first, the inference algorithm can then obtain robust solutions.

in the parameter identification procedure, a parameter range ri is set for each parameter i, and a set of random points , are created within a specified interval. each random point , together with the other parameter values, constitutes a candidate solution, and its fitness value is calculated via the objective function. a pre-defined threshold cr  is used to determine whether the fitness value of each random point is acceptable or unacceptable. then, the sensitivity for each parameter i  is calculated using its cumulative frequency , which measures the correlation coefficient  of the acceptable cfi and the unacceptable cfi values. finally, the parameters are ranked based on their sensitivity values. the parameters with relatively low sensitivity values are considered to be sensitive . the additional details of how the cumulative frequency, and sensitivity of a parameter are calculated are given in our previous work  <cit> .

parameter optimization
in addition to the above parameter identification procedure, the hybrid ga-pso procedure for parameter optimization also plays an important role in the proposed approach. in this approach, a direct encoding way for designing an individual of the population is adopted. the parameters in the s-system for genei  are floating-point numbers and arranged linearly. to evaluate the performance of each potential solution , a fitness function is defined to be the error function described in the first section ) of the performance measurement.

the optimization procedure operates in the following way. the ga-pso procedure first generates a random population  and evaluates these individuals . then, the individuals are ranked based on their fitness values and separated into two parts: % and r%, where % is the best part of the population. after that, the ga and pso processes are performed as follows. first, the % individuals are preserved and enhanced by the pso procedure. in the meantime, the r% individuals  are pending, awaiting updates by the ga procedure. second, to replace those pending individuals, new individuals are selected through a tournament selection scheme, and then sent for the ga operations . the newly generated individuals fill in the pending part of population . finally, once a new candidate list is formed, the individuals in this list are again ranked based on their fitness values, and the new population is dispatched to the next generation. the above procedure is repeated until the termination criterion is met. for simplicity, in this work, the randomness rate r is set to  <dig> , though it could be a variable with a value that changes during the run to control the population diversity .

the main steps of the integrated approach are described in algorithm pio, in which step  <dig> indicates the evolution cycle for deriving the network parameters. as seen in step  <dig>  there are two strategies used in the evolution. the first strategy  is to perform sensitivity analysis by the m-mpsa method described above, and then a threshold ccr  is adopted as a selection baseline for determining the most sensitive parameters. after the parameters have been classified, new value ranges  are set for the parameters: the sensitive parameters are given tight intervals, whereas the insensitive parameters are assigned loose intervals. the second strategy is an exploration phase  to maintain population diversity and to avoid having individuals move close to locally optimal solutions. currently, the above two strategies are performed periodically .

in this algorithm, the most critical strategy for achieving the network inference lies in step  <dig>  in detail, this strategy is intended to perform sensitivity analysis for the network parameters and to specify the constraints  on them. a network parameter  is added to the sensitive list and is given a pair of tight constraints  if its sensitivity value is less than  the threshold ccr; otherwise, a parameter is added to the insensitive group and assigned a pair of loose constraints. the dimensions corresponding to the parameters recorded in the sensitive list are given a higher priority with respect to being searched, and their parameter values must be determined at an earlier evolutionary stage. as described in step  <dig>  an operation of classification is performed to group sensitive and insensitive parameters. the search space for each parameter is set to either a small-range interval or a relative large interval, according to the classification result. with a specified interval, the optimization procedure is performed to derive suitable parameter values. in algorithm pio, the interval is equal to a search constraint associated to a parameter. nevertheless, the constraint can be regarded as search guidance in finding the sensitive  parameters. it can help a non-deterministic search method  concentrate on exploring the pre-defined space  and rule out solutions with feasible but fragile values. it means that if a parameter value goes behind the designated interval, the system dynamics will be affected severely and that will change the network behavior consequently. hence, setting and observing the intervals  during the search process are helpful in acquiring robust networks with desired behaviors. in addition, as pointed out in  <cit>  <cit> , by understanding how the parameters vary according to different bounds towards different system dynamics, scientists may have new insights into the underlying mechanism corresponding to the observed biological behaviors.

as seen in step  <dig>  the threshold ccr will be increased gradually , and the parameters on the insensitive group will be turned into the sensitive group incrementally. in this way, parameters will be recognized as sensitive eventually, and their values will thus be constrained to a limited range. because the sensitive parameters are more influential to the network behavior, enforcing restrictions  to these parameters remains the robustness of the whole gene network and, meanwhile, evolves other parameters during the optimization process. finally, the proposed algorithm can lead the inferred solutions to meet both the desired network robustness and system behavior.

other details about the variables used in steps  <dig> and  <dig> are described as follows. p is the individual  with the best fitness value over the entire population , and p represents the i-th parameter of p. in addition, p is the individual with the best fitness value obtained from the flying history of the j-th particle , and p represents the i-th parameter value of p.

algorithm pio: integrated approach of parameter identification and optimization

 <dig>   input: a gene expression profile 

 <dig>   output: values of the network parameters

 <dig>   step 1: initial setting.

 <dig>     setting the experimental parameters p: the generation number max_gen, the correlation coefficient ratio

 <dig>     ccr, and the pso parameter velocity_bound.

 <dig>   step 2: running the main evolution-cycle, as follows:

 <dig>     for 

 <dig>       if  then

 <dig>         go to step 3;

 <dig>         if  then

 <dig>           go to step 4;

 <dig>       infer s-system parameters by running the ga-pso procedure;

 <dig>     end_for;

 <dig>   step 3: 

 <dig>     call m-mpsa for sensitivity analysis;

 <dig>     use a threshold ccr to classify the parameters as sensitive or insensitive;

 <dig>     sort the particles in ascending order according to their fitness values;

 <dig>     for each particle j /* set new value ranges for all of the network parameters

 <dig>       give tight bounds for each sensitive parameter i:

 <dig>         upper bound ubi = p + α × velocity_bound;

 <dig>         lower bound lbi = p - α × velocity_bound;

 <dig>       regenerate its value according to new ubi and lbi;

 <dig>       give loose bounds for each insensitive parameter i:

 <dig>         upper bound ubi = p + β×velocity_bound;

 <dig>         lower bound lbi = p - β×velocity_bound;

 <dig>       regenerate its value according to new ubi and lbi;

 <dig>       let p equal to the regenerated value;

 <dig>         update p, if p performs better than p;

 <dig>     end_for;

 <dig>       ccr = ccr + ε; /* update the threshold to consider more parameters in the next parameter

 <dig>                           identification interval

 <dig>     return;

 <dig>   step 4: 

 <dig>     for each particle j 

 <dig>       for each network parameter i

 <dig>         regenerate its value according to new ubi and lbi;

 <dig>         regenerate the velocity of the particle swarm;

 <dig>         let p equal to the regenerated value;

 <dig>       end_for;

 <dig>       update p, if p performs better than p;

 <dig>     end_for;

 <dig>     return;

RESULTS
in this section, we describe how we conducted a series of experiments to verify the developed integrated approach from two different perspectives: the external network behavior and the internal network robustness. in these experiments, we first examined the performance of applying computational methods with parameter sensitivity analysis to two artificial datasets, and then, we focused on the evaluation and analysis for three real-world datasets.

evaluation of the proposed approach on artificial datasets
in the first set of experiments, several artificial datasets often used in gene network inference were collected to evaluate the proposed approach. because our major goal is to investigate how the proposed approach can be adopted to infer networks for real datasets , we report here only two sets of the results as representative examples. the first dataset is a five-node network taken from  <cit> , in which the nodes and their interactions are described by the following non-linear relationships:

 Ẋ1= <dig> x3x5- <dig> - <dig> x <dig> Ẋ2= <dig> x <dig> - <dig> x <dig> Ẋ3= <dig> x2- <dig> - <dig> x2- <dig> x <dig> Ẋ4= <dig> x <dig> x5- <dig> - <dig> x <dig> Ẋ5= <dig> x <dig> - <dig> x <dig>  

the second dataset is a ten-node network taken from  <cit> , in which the nodes have the following non-linear relationships:

 Ẋ1= <dig> x4x6- <dig> - <dig> x <dig> Ẋ2= <dig> x3x <dig> - <dig> x <dig> Ẋ3= <dig> x1- <dig> x4- <dig> - <dig> x <dig> Ẋ4= <dig> x <dig> x9- <dig> x <dig> Ẋ5= <dig> x <dig> x6- <dig> - <dig> x <dig> Ẋ6= <dig> x <dig> x10- <dig> - <dig> x <dig> Ẋ7= <dig> x6x10- <dig> - <dig> x <dig> Ẋ8= <dig> x1x2- <dig> x7- <dig> x <dig> Ẋ9= <dig> x3x8- <dig> - <dig> x <dig> Ẋ10= <dig> x <dig> x7- <dig> - <dig> x <dig>  

to collect gene expression data, we started and continued network operations for thirty simulation steps. before using the developed approach to infer robust results, we conducted an investigation on the above two datasets to examine the effect of considering the network structure in the inference procedure. in this set of experiments, to prioritize the network topology of the inferred model toward the ideal structure, a structural correctness function was added to the mse function given in the first section ). this evaluation function includes two major parts, as follows:

  fobj=α⋅mse+⋅strpri2n, for i=  <dig>   <dig>   <dig>  ..., n 

the first function, mse, is used to derive the correct network behavior, whereas the second function, strpri, is used to minimize the structure inconsistency between the structure suggested by the prior knowledge and that of the inferred model. the weighting factor α is used for controlling the importance of the two issues to be considered . there are two sub-terms for the structural priority function as described below.

  sp1=nzpizpki; sp2=zpinzpki, where   sp1=nzpizpki; sp2=zpinzpki 

in this equation, sp <dig> ∈  <cit>  is the ratio of the parameters against the suggestions from prior knowledge: there is no plausible connection between gene j and i. in detail, the numerator nzpi ∈ n <dig>  records how many inferred kinetic orders of gene i are non-zero  but should be zero according to prior knowledge. the denominator zpki represents the total number of kinetic orders of gene i that are zero, . in contrast, sp <dig> ∈  <cit>  is also the ratio of parameters, but it indicates that the kinetic orders of gene i follow the suggestion that a plausible connection should exist between genes j and i. hence, the numerator zpi ∈ n <dig> counts the number of zero values from the inferred kinetic orders, and the denominator nzpki represents the total number of kinetic orders of gene i that are non-zero.

once the evaluation function was defined, we conducted thirty independent runs for each dataset with a population size  <dig>  in which each run lasted for  <dig> iterations. tables  <dig> and  <dig> show the results  of using a different weighting ratio α for the two datasets. as observed, when the structure error was introduced to the evaluation function, the resulting model tended to have a structure that was closer to the original network but that had a less-fitted behavior. these results show the importance of the network structure and indicate the need for an inference approach to account for both issues .

after presenting the influence of the network structure, we performed experiments to evaluate our approach that considers network robustness as a core factor for representing the unknown network structure. for the above two datasets, two optimization algorithms  with different settings  were arranged, and twenty independent runs were conducted for each arrangement. table  <dig> shows the results, in which the mean, standard deviation, and best and worst performance of the runs are listed for each arrangement .

from table  <dig> we can observe that both of the computational methods using sa consistently outperform the other methods that do not use sa in network inference, and the proposed ga-pso method performed better than the traditional pso method in all runs. this table indicates that the proposed approach obtained better results on the average, best, and worst fitness values, and it provided smaller standard deviations. to evaluate the robustness of the evolved gene networks, we also list the sensitivity values  of the best solutions obtained from the final generations for two settings. they show that the runs with sa could evolve networks that had lower fitness values  and lower sensitivity values  simultaneously. it should be noted that the threshold ccr is a relative value that is determined by the statistical distribution of all parameters, and it has a different value for each algorithm. therefore, it is not suitable for comparing the sensitivity values  of different algorithms.

importance of parameter sensitivity analysis: studies of real systems
after evaluating the performance of our integrated approach for network inference, we conducted a set of experiments to investigate how our approach could be applied to the study of real gene networks. as the ga-pso algorithm has been shown to outperform the other method, in this set of experiments, we chose to use this method with two settings  to conduct experiments on three popular real-world datasets.

the first dataset is the sos dna repair system in e. coli. figure  <dig> illustrates how the gene regulations response to dna damage in the cell  <cit> . this system, on the one hand, involves the repressor lexa, which keeps activating and therefore represses the sos genes . on the other hand, the rexa protein involves the inactivation of the lexa in this system. when reca is activated , it interacts with lexa, which causes the expression level of lexa decrease , and the concentration of the sos genes thus rises. the fully expressed sos genes then activate the repairing process. once the damage has been repaired, the concentration of reca drops and this stops facilitating the self-cleavage of the lexa repressor. the expression level of lexa increases and begins to repress the sos genes again. recently, several studies have uncovered the regulations of the six sos genes mentioned above, and the network structure has been reconstructed . we therefore chose these six genes from the original experimental data reported in  <cit>  for our study here. using the regulatory relationships described, we can validate our proposed method by comparing the results to those reported previously.

the sos repair system dataset includes  <dig> time points. in this experiment, the decoupled s-system model was used and twenty runs were performed with two settings: without and with sa techniques. the results are presented in table  <dig> in which the average fitness and the average parameter sensitivity values are revealed. these results indicate that the approach coupled with a sensitivity analysis procedure outperformed the algorithm without using sa . furthermore, figure  <dig> compares the inferred and target network behaviors , in which the inferred expression profiles are very close to that of the real system.

to investigate the parameters that have significant effects on the system dynamics of the sos repair system, we summarized the most sensitive parameters identified by the proposed pio algorithm. thirteen parameters were highlighted as crucial regulations, each of which represented a regulatory relationship between two genes. table  <dig> lists the gene regulations that were also found in the literature. based on this table, figure  <dig> depicts the pathway diagram of the most crucial parameters  on both the synthesis and degradation processes of each gene. the results show that, of the thirteen gene regulations found in our experiments, ten matched regulatory relationships known from other studies. for example, the regulation of lexa, uvra, and uvrd by lexa degradation has been successfully identified as the most significant regulations. however, the regulation of lexa by reca degradation was not marked by the pio algorithm. this is because our approach operated on the gene level, whereas the regulation between lexa and reca was affected by lexa and reca at the protein level  <cit> . in detail, the representation of the s-system model had inherent limitations on discovering genetic interactions that involved biological details in both protein and gene levels. these limitations were not related to the inference algorithm, therefore, the corresponding problems were not addressed in the inference process. nevertheless, the proposed approach has shown its advantages that can capture the expected network behavior and determine the network robustness in modeling a real gene system.

in addition to the above sos dataset, we also applied the proposed approach to the second real experimental dataset for further verification. this dataset is from the rat central nervous system  taken from  <cit> , which included expression data of  <dig> genes collected from  <dig> time points of different phases . the gene expression profiles used here are in the cluster with  <dig> genes derived from the rat cns dataset. table  <dig> lists the genes. twenty runs were conducted, in which  <dig> parameters in the network model must be analyzed during the evolution.

in the experiments, the hybrid ga-pso method was employed to construct the cns network. two sets of experimental runs  were conducted, as in the previous sections, and the results are presented in table  <dig>  as observed, the optimization method with sensitivity analysis performs better than the other case on both the fitness and sensitivity. in addition, figure  <dig> depicts the system behavior  of the original and the inferred networks, in which the x-axis shows the time steps and the y-axis shows the expression levels of the genes. again, the figure shows that the inferred network can produce very similar behavior to that of the original network.

fitness
to further investigate the relationship between the gene roles and the sensitive network parameters identified by the proposed approach, we examined each sensitive parameter and tracked the genes that were related. the sensitive parameters described here are defined as the parameters that were recognized as sensitive in at least ten runs . the results are listed in table  <dig> in which the value indicates the number of sensitive parameters related to a specific gene. three gene profiles, basic fibroblast growth factor , neurofilament, heavy polypeptide , and acidic fibroblast growth factor , were involved in most of the gene regulations. according to this table, the two genes, bfgf and afgf, dominated ten and eight gene regulations, respectively; in other words, the gene expression profiles that were being regulated were affected by the kinetic orders of bfgf and afgf with the corresponding expression profiles. this finding indicates that the dynamics of bfgf and afgf had a crucial influence on the network behavior of the inferred s-system model. in fact, bfgf and afgf belong to the family of fibroblast growth factors , which has been shown to play an important role in gene duplications and gene repairs  <cit> . similarly, the nefh gene was related to nine gene regulations and also had a crucial influence on network reconstruction. the nefh gene belongs to the gene group that controls key functions in nervous system development  <cit> ; it provides instructions for making a protein component of neurofilaments. figure  <dig> exhibits three pathway diagrams that illustrate the most crucial genetic interactions on the bfgf, nefh, and afgf genes. these observations show that our sensitivity analysis method can identify the most influential parameters of the biological pathways to be modeled. using this method to select sensitive parameters and restrict them within certain ranges can efficiently improve the performance of the inference algorithms in the application of gene network reconstruction.

in the third set of experiments, we applied the proposed approach to a real dataset of yeast s. cerevisiae to infer the protein glycosylation system. glycosylation plays an important role in biosynthesis activity; it is the enzymatic process attached to the target proteins that ensures that the proteins fold and assemble properly  <cit> . the associated expression data were first reported in  <cit> , in which the authors began to obtain the synchronous yeast culture at the late g <dig> checkpoint. the cells were observed for nearly two full cell cycles, and  <dig> time points were collected . as mentioned in the report, they reset the cell cycle at  <dig> minutes ; hence, we adopted the first complete cell cycle as the time-series dataset.

to form a regulatory network of the glycosylation system, we refer to the work by spellman et al.  <cit> , which has clustered  <dig> genes related to the glycosylation process. in addition, we exploited the software yeastnet version  <dig>  as our cluster checking tool to validate this cluster. yeastnet is a powerful theoretical framework that integrated several heterogeneous databases including encoding open reading frames  of the yeast genome: s. cerevisiae genome database   <cit> . in short, the software has calculated the confidences in pair-wise genetic interactions from the collected databases; thus, it provides a holistic view of yeast genes. drawing on the calculation by yeastnet, there are  <dig> genes that remain in the glycosylation process; in other words,  <dig> genes have been deduced from the original cluster , each of which has no connection to the others.

in the experiments, similar to the previous sets of experiments, the hybrid ga-pso method with and without sensitivity analysis has been employed to infer the glycosylation system of yeast s. cerevisiae. table  <dig> compares the results, which show that the ga-pso method with sensitivity analysis can deliver better performance on both the fitness and sensitivity results. apart from the summary table, figure  <dig> depicts the system behavior of the inferred and the original network. as observed, all of the profiles from the inferred model  are very similar to those of the target network , except for the psa <dig> gene. this circumstance is mainly due to the measurement noise included in the psa <dig> profile . according to the experimental discussion from spellman et al.  <cit> , the gene peaked only once in the g <dig> phase , and the second peak can be ignored. in other words, the inferred expression profile of psa <dig> has captured the actual network behavior.

CONCLUSIONS
in this study, we indicated the importance of considering both the network behavior and the network structure when inferring gene networks. we also developed an integrated approach that considers network robustness as an alternative to structural information in the inference procedure, when the relevant knowledge is not available. based on the observation that the gene regulatory network was often dominated by only a small set of critical genes, our approach includes a parameter identification procedure that selects sensitive parameters and determines their value ranges. our approach also includes a parameter optimization procedure that searches for the best fitting solutions. the above two procedures work iteratively, and in this way, the inferred networks can satisfy both requirements simultaneously.

a series of experiments have been conducted to validate the proposed approach. in our experiments, we investigated extensively analyzed the results that were obtained from three real gene datasets: the subsets from the sos repair system, rat cns, and yeast s. cerevisiae. the results confirm that the proposed approach can successfully identify and exploit the critical parameters that correspond to the genes that have active interactions in the biological systems. these genes dominate the network dynamics and therefore can enforce the inferred network structures to be close to the real target networks.

authors' contributions
yh undertook the experimental implementation, made statistical analysis and wrote a part of the manuscript. wl conceived the project, designed the algorithm, and wrote a part of the manuscript.

competing interests
the authors declare that they have no competing interests.

