BACKGROUND
forward genetic screens have opened doors to completely novel areas of biological understanding  <cit> . starting with fundamental work with yeast, a significant portion of our molecular understanding is built on hypotheses originating from unbiased screens. recently, forward genetic screens have been used to study the genetics of cancer in vivo, first using murine retroviruses  <cit>  and more recently using mobile genetic elements or transposons engineered to be active within the murine genome  <cit> . transposons are mobilized by the presence of a transposase enzyme, which can be expressed in a tissue specific manner leading to the formation of tissue specific cancers  <cit> . in the simplest possible conceptual model, tumors may be formed by the disruption of a tumor suppressor gene or activation of an oncogene by a transposon, which then leads to a selective growth advantage for the cell and progeny cells that harbor the insertion. identification of common insertion sites  in a significant number of independent tumors strongly implicates genomic regions to be fundamentally involved in tumor formation. prior work has described methods to identify ciss as well as associations between ciss in datasets  <cit> .

identification of the location of transposon insertion requires obtaining the sequences crossing the junction between the transposon and the authentic genome sequence  <cit> . mapping the genomic sequence adjacent to the transposon to a reference genome allows the determination of the specific site of integration. large numbers of insertion sites can be identified in tumors. next generation sequencing technology has allowed massive numbers of transposon-genomic junction fragment to be sequenced. the sheer quantity of sequences has introduced unanticipated problems to pipelines designed to identify ciss.

the goal of the tapdance software is to fully automate the analysis of statistically significant ciss using next generation sequencing of insertions from samples where a mobile genetic element has been activated within the genome. in murine forward genetic cancer screens, these ciss represent potential drivers of tumorigenesis. the effort and expense required to validate potential oncogenes and tumor suppressors in human cancer is immense. yet, the potential benefit to the treatment of these diseases and reducing human suffering cannot be understated. thus, it is of paramount importance to identify and rank the importance of the driver regions  of the genome in these datasets. to this end we have developed the software described here, and made it publicly available.

implementation
the processing and analysis pipeline takes as input  <dig> files . the first file is the sequence file produced by the high-throughput sequencing machine. each line in this file contains a unique sequence identifier and the sequence read. an informative sequence read will consist of a dna barcode sample-identification sequence ligated to either the inverted repeat direct repeat  for sb studies or long terminal repeat  for proviral studies, followed by the captured genomic sequence and potentially ending with the ligation adapter/linker sequence . the second file contains the barcode sequences mapped to library names. in this paper insertion libraries are generated from tumors thus the word tumor and library is used interchangeably throughout. the third file contains a set of metadata characteristics describing the sets of libraries for ciss analyses . the last file contains a list of chromosomes to potentially exclude from the analysis. using these four input files the software automatically performs raw sequence processing and trimming, mapping to the reference genome, cis identification, and nearest-gene annotation as described below. a general overview of the process including a partial database schema is provided as figure  <dig> 

raw sequence processing and trimming
the generation of pcr products containing the junction fragments between transposon insertion sites and the flanking genomic sequence has been described in detail previously  <cit> . the resulting pcr products are then sequenced utilizing next generation sequencing to generate hundreds of thousands  or millions  of reads 75-100 bp in length. these sequences are loaded at the outset into a relational database and database queries  are used to identify and remove barcodes denoting the library of origin. additionally, transposon sequences and linker fragments are trimmed off, leaving only endogenous genomic sequence. in order to speed up the mapping process, identical sequences that are derived from the same library are condensed to a single sequence entry, retaining the total count of observations made.

sequence mapping to the reference genome
genomic sequences are then mapped using the bowtie algorithm  <cit> . to ensure that mapping to the genome is due to authentic transposon insertion, we required that mapping commence directly 3’ to the transposon sequence. for sb transposon mapping, the flanking genomic sequence is required to start with a ta dinucleotide. this was done in order to minimize the potential for multi-mer ligation leading to incorrect inference of transposon integration. to minimize false positive mapping, we mapped randomly generated sets of  <dig>  dna sequences using bowtie and determined the minimum sequence length required so that none of the randomly generated sequences mapped to the mouse genome. the empirical cutoffs established by this analysis were  <dig> nucleotides for  <dig> mismatches,  <dig> for  <dig> mismatches,  <dig> for  <dig> mismatch and  <dig> for  <dig> mismatches . it was surprising that ~20% of the randomly generated sequences map to the genome uniquely if mapping length mismatch thresholds were relaxed below these cutoffs. to avoid this random mapping behavior and increase the stringency of the analyses, genomic sequences of  <dig> or fewer bases are discarded.

the importance of considering sequence length and mapping directly to the first base following the transposon increases as the total number of sequences examined increases. since partial linker sequences and unintended ligation products may remain on the 3’-end of full length junction sequences, we developed an iterative mapping process in order to maximize authentic mappings and minimize the potential for mismapping . in the first iteration, full-length sequences are mapped allowing  <dig> mismatches if their length is > <dig>  in the second iteration sequences that did not map in the first round of mapping had their 3’ ends removed to leave only the first  <dig> bases. these  <dig> bases were then mapped allowing  <dig> mismatches. in the third iteration, sequences that did not map in the second iteration were shortened to 30 bp and combined with shorter sequences before mapping was again attempted allowing  <dig> mismatches. the procedure was then repeated using sequences of 28 bp  and 24 bp .

mapped regions are exported to a bed file in order to visualize all the “raw” mappings and the strand on which the mapping was observed using genomic browsers such as igv  <cit>  or for smaller datasets, the ucsc genome browser  <cit> .

mapping orientation
the sb transposon and mulv retrovirus are both asymmetric, meaning that the biological effect of the insertion depends on the orientation of the insertion. for this reason it is important to track the orientation of the insertion. generally, when insertion-genomic junctions are amplified, two separate pcr reactions are performed, one that amplifies junctions from the “right” side of the insertion and a separate reaction that amplifies junctions from the “left” side of the insertion. this procedure is used to maximize the chance of recovering sequence from an insertion if the required restriction enzyme site is not present on either side of the insertion. the sequences from these two pcr reactions are prepared separately for the right reads and the left reads. this is relevant because the sb transposon can activate transcription only if pointed in the correct orientation, whereas a splice site acceptor capable of causing transcript disruption is present in both orientations . furthermore, genomic sequence derived from both right and left library generation can map to the + or – strand. specific insertion orientation to the positive strand can be identified by either a right read that maps to the + strand or a left read that maps to the – strand.  alternatively, specific transposon insertion orientation to the negative strand can be identified by the opposite events. to simplify the analyses, all insertions are converted so that the site of integration is defined on the strand that can drive transcriptional activation. in other words if the sb transposon is mapped to the + strand it can drive transcription on the positive strand and if it is mapped to the negative strand it can drive transcription on the negative strand.

elimination of non-clonal insertions
several artifacts are present in the sequence datasets generated by pcr amplification of insertions. the first artifact is due to remobilization of a clonal transposon insertion into a neighboring ta dinucleotide in a small subset of daughter cells of the original clone. this artifact can be attributed to “local hopping” of the remobilized transposon  <cit> . in the dataset this artifact presents as a dominant ta with many mapped reads and several neighbouring ta’s with relatively few mapped reads. we hypothesize that these insertions were originally in the dominant ta, and then jumped to the neighbouring ta in a daughter cell. therefore, these insertions should be grouped with the dominant ta. another artifact is created when sequencing errors at the beginning of the mapping sequence leads to incorrect mapping to ta positions only a few bases away. this artifact also presents as a dominant ta with a few neighboring ta’s being mapped at a very low frequency. to minimize the impact of counting these non-clonal events as unique events, the raw data counts are binned into 100 bp regions based on the location and orientation of insertion.

finally, transposon activity is not extinguished as the tumor develops in a forward genetic screen. this means that new insertions will continually occur in daughter cells of the original clone that forms the tumor. insertions that occur later in the development of a tumor will only occur in a few cells and should be considered passenger mutations. this effect appears in the dataset as mapped insertions that are only counted once or twice, as opposed to clonal insertions that are counted many times by the ngs machine. in order to exclude these low-level passenger insertions, we set a cut-off based on the percentage of the total mappable reads in each tumor. for example, consider a case where  <dig>  sequence reads from a single tumor can be uniquely mapped to  <dig>  regions in that tumor. in our datasets we find that a subset of the  <dig>  regions will be identified by a single sequence read while the remaining regions will be identified by many sequence reads. to set a cut-off we require that a region be identified by, at least, a certain percentage of the total sequence reads that were mapped to that tumor. if we set the cut-off to 1/ <dig> th that would mean that only the subset of  <dig>  regions that were identified by at least  <dig> reads will be included in cis analysis. this cut-off eliminates mapped insertions that are only read a few times and probably represent non-clonal insertions. tapdance allows the user to select the cut-off value. alternatively, the user can choose not to have a cut-off. based on our analysis of datasets that directly compare the  <dig> platform with the illumina gaiix platform we recommend using no cut-off for  <dig> data and a cut-off of 1/ <dig> th for illumina data.

project summary files
a summary file is generated for each project that describes the counts for each project, for each directional library, and for each library. the percentage of mappable reads that map to the genome for each run and broken down by library can be obtained from this file. all sequences from a single sequence run are deposited into the sql database.

meta-analyses of multiple projects
each project can be merged with any number of previously existing projects in the database, and files containing all raw mappings and all regional mappings at the thresholds defined in the config.pl file are automatically generated. the software will merge libraries that are identified by the same name, and multiple projects can utilize the same sets of barcodes for different projects without causing confusion, since the informatics model utilizes the library name as a unique identifier.

one of the major bottlenecks in our previous workflows was the combination and reanalysis of datasets that were obtained in separate sets of sequencing runs. to simplify this informatics problem we wrote the software to allow combination of any set of projects to generate a new project or meta-analyses to allow cis generation from any subset of libraries. in this manner a common set of barcodes can be reused over and over in separate projects and the individual projects can be efficiently analyzed together.

cis calculation
the identification of ciss based on large numbers of sequences from hundreds or thousands of libraries is a nontrivial statistical and informatics challenge. tapdance uses poisson distribution statistics to calculate ciss. the poisson distribution determines the probability of observing a given number of events within a region assuming that these events occur in an essentially unbiased manner. in this case the transposon insertions are the events, while the expected number of insertions in a given window is calculated based on the size of the genome and the total number of insertions. the probability estimate is then corrected based on the total number of windows examined  using bonferroni correction to account for multiple testing. essentially, the probability of observing a given number of insertions becomes smaller as the genome becomes larger, or the window of interest becomes smaller, or the total number of insertions becomes smaller, or the number of insertions within a given window becomes larger.

more formally the poisson distribution is calculated using the following formula.

  px:u=e−uux/x! 

where

e, is the base of the natural logarithm; x, is the actual number of inserts within a window; u, is the number of inserts observed  / .

each dataset is analyzed multiple times using different window sizes, which generates a list of ciss for each window size analyzed. for each cis analysis, the window sizes to be used are determined by identifying the maximum window size that will give a corrected p-value <  <dig>   with an integer number of insertions by examining window sizes from  <dig> bases to  <dig> bases in  <dig> base steps. if fewer than  <dig> insertions or more than  <dig> inserts are examined, default window sizes of  <dig>   <dig> , <dig>   <dig>  and  <dig> bases are used.

a peak finding algorithm was written to iteratively identify non-overlapping peak windows with the largest number of events for each window size. the dataset is then analyzed using each different window size, which generates a list of ciss for each window size analyzed. since the use of multiple window sizes can lead to multiple potential overlapping cis definitions, these are resolved by identifying the minimal set of non-overlapping regions that have the most significant probability. if the p-values for two regions are identical, the larger window is used as the default .

three methods to count inserts to determine p-value
the total number of events  is required in order to use the poisson distribution to calculate a p-value. we propose to use three different methods to determine the number of events in a transposon insertion dataset . these three methods test  <dig> different null hypothesys. the first method uses the total number of unique mapped insertions as the event count. we refer to this method as “insertion p-value” and test the null hypothesys that the total number of inserts within a region  is similar to what could be expected to be observed by random chance. in the example cis depicted in figure  <dig> the total number of events used to calculate the p-value is  <dig>  the potential problem with this approach is that a single library can have multiple insertions in a given genomic window. as discussed above, this could be caused by transposon remobilization or local hopping. counting these local hopping insertions as separate unique insertions would be misleading. to overcome this effect, we use a second method that uses the total number of unique libraries within a region, referred to as “library p-value” and test the null hypothesys that the total number of libraries within a region  is similar to what could be expected to be observed by random chance. this method counts multiple insertions from the same tumor as a single insertion if they occur in a single genomic ciswindow. in figure  <dig> the total library count is  <dig>  with this method another misleading situation can arise when many libraries map to the same 100 bp region, using the example in figure  <dig>  sequencing data indicates that six tumors have a mapped insertion in a single ta in region  <dig>  unless there was strong selection for this single ta, which we hypothesize is generally not the case, this represents an artifact. this artifact could arise from false priming events or barcode mis-assignments. in order to eliminate these possible artifacts, we also use a third method to calculate the p-value, referred to as the “region p-value” and test the null hypothesys that the total number of regions  is similar to what could be expected to be observed by random chance. this method uses the total number of unique regions within a genomic window as the total number of events. “strong” ciss, meaning ciss that are composed of many insertions, libraries and regions will be statistically significant using all three methods described above. “weaker” ciss, however will be significant only using one or two of the methods. we recommend that at a minimum, a cis should have a insert p-value, a region p-value and a library p-value less than  <dig>  following bonferroni correction. the p-value test for each of these  <dig> events is user definable, with a default setting of  <dig> .

donor chromosome considerations
the user is provided with the option of excluding chromosomes from consideration due to the potential for local hopping observed within the donor chromosome .

annotation
ciss are then automatically annotated based on a user supplied .bed file to provide the names of the genes surrounding the regions of interest. all elements within  <dig>  bases are returned to the gene name column. if no elements are present, this field gets filled with the default statement “no results within a  <dig>  bp window”.

every project for which this software has been utilized has required analyses of multiple overlapping and non-overlapping sets of libraries. to facilitate these analyses, the software generates ciss based on a model where the library and the analysis group are defined. any library within a project can be combined with any other libraries, resulting in the automatic calculation of new combined wig files of raw mapping regions, insertion regions and ciss.

co-cis and pheno-cis analyses
valuable biological information can be extracted from the cis datasets by determining the association between phenotypes and ciss  as well as the associations between individual cooccurring ciss . tapdance will automatically generate the associations between the different phenotypes, between phenotypes and ciss, and between separate ciss using fisher’s exact test. fisher’s exact test compares the probability of getting the observed data distribution and all more extreme deviations relative to the null hypothesis, where the proportions between the two groups are random. multiple testing correction procedures with varying levels of rigor  are then applied separately to each of the three types of associations being tested based on the number of tests conducted. for the determination of association between phenotypes and ciss the total number of tests being calculated can be computed by multiplying the number of phenotypes tested by the number of ciss being tested. for the determination of association between ciss  the total number of associations tested can be computed using the formula to calculate the total number of edges and diagonals in a polygon of n sides /2) where n is equal to the number of ciss or the number of phenotypes. it is important to emphasize that examination of association in datasets or parts of datasets with insufficient power may mask significant events due to the necessity to correct for multiple testing. the number of ciss to test for association can be set by the user by defining a maximum p-value for ciss to be considered in association analyses. it is suggested that the user be aware of the power available based on the sample size with regards to the annotations and ciss examined. the default setting is all ciss with a p = value < 10e- <dig>  the phenotypes used for this calculation are all the sets where cis generation is calculated within a given project as defined by the user.

RESULTS
a number of tests were used to determine that our automated package was performing robustly. genomic positions were randomly generated and assigned to libraries, with library counts equal to those from real experimental data sets. analyses of ciss in these random datasets determined that no genomic windows were statistically significant. we further tested authentic mapped mouse sequences obtained from chip-seq input control experiments with library and sequence counts equal to those from real experimental data sets. somewhat surprisingly, analyses of ciss in these datasets identified several regions with high significance, which were repeatedly found to be present. as these datasets are defined by examining sequences in the absence of any selective pressure, we hypothesize that these are regions that are present in high copy number within the murine genome but they are mistakenly annotated as a single copy in the genome build. this hypothesis is supported by other groups  <cit> . as these regions are also observed in many of the screens we have conducted, we believe that these regions should not be considered as drivers of tumorigenesis. we also found another artifact specific to transposon screens that contain endogenous murine sequence within the transposon. due to local hopping within the original donor concatamer, the lm-pcr protocol will amplify these internal jumps and they will map to the murine genome. for example, part of the en <dig> murine gene sequence is included in the t2/onc transposon. in sb screens using this transposon, insertions mapping to en <dig> are excluded because of this artifact. all known artifact regions, such as these, are labeled with the string 'bad' in the annotation bed file and are not reported by the software. the excluded regions are included as additional file 1: table s <dig> 

to compare the full functionality of tapdance with previous methods we reanalyzed the sequences obtained for previously published colon cancer and liver cancer screens  <cit> . running the process using tapdance takes a fraction of the time of the original process. these datasets were generated using the roche  <dig> gs/flex platform. a representative summary of the  <dig> required input files is provided as additional file 1: table s <dig>  summary statistics are presented for the dataset as a whole  as well as broken down by barcode  and finally by library .

the cis thresholds automatically calculated via iterative poisson distribution statistical analyses are very similar to those defined by monte carlos simulation and are calculated almost instantaneously .

the cis list is generated as a spreadsheet that contains the chromosome, start and end address of the cis region, the  <dig> associated p-values , the libraries that are included, and the annotation. additionally the total count of inserts that are capable of driving insertions on the positive strand are provided for each cis. this number can be combined with the total number of insertions to determine whether a specific gene is potentially being overexpressed or is being disrupted due to the orientation of transposon insertion.

cis regions were identified in the colon cancer data  as well as the liver cancer data . in total, three files are useful for cis visualization:  the wig file containing the ciss where the cis regions are identified as peaks with a height corresponding to the –log of the p-value.  a bed file containing the regions and orientation of the insertions used for cis calculations  a bed file containing all individual seqeunce mappings. these can be loaded into igv  and the specific rational for each cis, the orientation of each transposon and the raw insertion mappings can be directly analyzed .

to demonstrate the meta-analyses and pheno-cis portion of the software we performed a combined analysis of the insertions derived from liver tumors together with the colon cancer tumor insertions and identified ciss  in the combined dataset. the tapdance software then automatically calculated associations between tumor phenotypes  and ciss.  specific ciss showed clear associations with each of the tumor types as would be expected from the known biology. for example insertions in apc are associated with colon tumors, while egfr insertions are associated with liver tumors. additionally, prior to the removal of the y-chromosome artifact from cis consideration the male phenotype was commonly observed to be significantly associated with y chromosome inserts, which shows that the methodology is capable of identifying statistical associations of biological relevance.

to further demonstrate the co-cis capability of the software we analyzed an insert dataset derived from retroviral insertions obtained from the rtcgd  <cit> . this dataset composed of ~ <dig> mapped insertions derived from ~ <dig> tumor libraries was analyzed for cis using the tapdance methodology. the results are consistent with previously generated results  and co-cis were calculated between cis with a region p-value <  <dig> . the top hits obtained by alternative formulations of co-occurring insertion event analyses  <cit>  in this dataset were also obtained by tapdance cocis analyses .

finally, we compared our cis calculation method directly with the modified gaussian kernel convolution framework  <cit>  using a pancreatic cancer dataset recently published  <cit> . our method was able to find and score  <dig> of the top  <dig> regions within the top  <dig> cis . all top  <dig> cis were scored within the top  <dig> cis by tapdance. the majority of the differences can be attributed to the different methods of ranking used in the final sorts. it should also be noted that the sequence analyses and genome mappings were done independently, indicating that the full tapdance pipeline is showing similar results to the modified gaussian kernel convolution method.

discussion
previously, multiple steps in cis generation sequence cleaning, mapping to the genome, cis calling, and association needed to be carried out separately in a non-automated fashion. in this work we present a fully automated rationally derived method for complete analyses and make it publicly available. previously, monte carlo simulation based on the actual ta density within the genome as well as the number of inserts on each chromosome was used to estimate the number of inserts necessary to be called a cis within a given window. our method, utilizing the poisson distribution based calculation directly provides similar results  in a far less computationally intense and fully automated fashion. in practice, window size thresholds and significance cutoffs are remarkably similar to monte carlo simulation based on ta density on a chromosome by chromosome basis and calculated in a fraction of the time. additionally, p-values are generated for each cis, which is not possible using the monte carlo method as previously implemented. the incorporation of multiple schemes of counting of inserts for use within the p-value calculation based on 1) total number of inserts within a window; 2) based on the total number of libraries; 3) the total number of unique insert regions allows for the selection of ciss with “ideal” tumor driver characteristics to be ranked higher than ciss with less ideal characteristics.

we show that the potential for incorrect mapping exists with short sequences, and resolve this by requiring input sequences to be of sufficient length such that no sequences will be mapped by random chance. additionally we have shown that 1) our empirically derived statistical model for cis calling behaves adequately using random positional/library data and 2) real bias exists in murine sequencing data that needs to be taken into account in the analyses of ciss.

this methodology is robust, statistically conservative and efficient. the results generated are consistent with previous workflows, both in the statistical thresholds identified as well as the cis list membership. this method has a number of advantages. it runs much faster, and is capable of running the volume of data currently being generated via current ngs techniques. similar results are obtained, independent of sequencing depth once a basic sampling threshold is reached. using this system we are able to obtain similar cis results from datasets that are sequenced separately using  <dig>  and illumina . we have utilized this software in the analyses of ~ <dig> different forward genetic screens using both  <dig> and illumina based sequencing approaches.

CONCLUSIONS
widespread incorporation of this software will allow meaningful meta-analyses of transposon based genetic screens. we also note that the software can be readily configured to identify ciss and associations from any organism.

availability
we have made the full software package publicly available at source forge  and the galaxy toolshed .

requirements
the command line version of tapdance requires the user to have bowtie  <cit> , perl dbi and r software installed. the command line version also requires access to a read /write mysql account.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
als wrote software, carried out analyses, and authored paper. je wrote software, ported software to galaxy and generated documentation at sourceforge. als, tks, dls and kats participated in conceptual discussion, software design, and helped to draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
additional supporting tables. table s <dig> xls. suspect regions identified in chip-seq data. ciss found to be highly significant in data sets composed from real mouse sequence obtained as a control for chip-seq randomly assigned to libraries. the trial was repeated with  <dig> different subsets of data a, b, c. regions returned from all  <dig> tests are labeled “badrepeat” and not returned as cis drivers. table s <dig>  comparison of window sizes and insert numbers calculated to be significant by poisson distribution followed by bonferroni correction with window sizes and inserts calculated by monte carlo simulation for colon cancer dataset and for liver cancer dataset. table s <dig>  ciss calculated by tapdance method for colon cancer dataset. table s <dig>  ciss calculated by tapdance method for liver cancer dataset. table s <dig>  ciss calculated by tapdance method for combined datasets. table s <dig>  association results for the combined datasets. highly significant results are shown in bold for the association between a)phenocis and b)cocis. table s <dig>  examples of  <dig> files required in the data directory in order to run the command line version of tapdance. a) a file containing sequences labeled seqs.tab. b) a tab delimited file containing the barcodes, the library names ending in either –l or –r based on the direction of priming and the direction of priming . c) a tab delimited text file containing groups for cis analyses, the default superset for association should be labeled “all” and subsets should be named with  <dig> or less meaningful characters. d) a text file containing chromosomes that should not be analyzed due to the presence of the donor transposon concatamer and local hopping. table s <dig>  report of the counts of the initial mapping and how many sequences have the described characteristics a) for the entire dataset, b) broken down by directional library, and c) total for each library following combination of left and right primed reads. additionally in c the number of reads that were mappable, the number of reads that map and the total of regions that map at the defined threshold of the total mapped sequences is reported. for mapping to the genome we have observed 50-80% mapping to the genome of the mutagenized organism. mapping percentages significantly lower would indicate potential problems. table s <dig>  cis identified in the rtcgd retroviral insertion dataset. table s <dig>  co-cis identified in the rtcgd retroviral insertion dataset. table s <dig>  cis identified in a pancreatic ductal adenocarcinoma sb screen generated by tapdance methodology directly compared to the top  <dig> cis generated by the modified gaussian kernel convolution framework.

click here for file

 additional file 2
example data. we have included a zipped up archive.zip which contains  <dig> data files in the data directory, as well as the results obtained after running the scripts.

click here for file

 acknowledgements
we thank keiko akagi for providing help with accessing data stored within the rtgcd database. we thank the minnesota supercomputing institute for providing access to computational resources.
