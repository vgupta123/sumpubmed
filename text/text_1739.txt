BACKGROUND
introduction
the interpretation of experimental data generally requires physicians and biologists to compare their clinical and biological data to already existing data sets and to reference knowledge bases. for example, starting from a gene involved in a pathological condition, users may want to obtain information about this disease  and about the gene . this kind of information is often present in electronic biomedical resources available through the internet. however, collecting information manually is slow and error-prone, which is essentially incompatible with high-throughput analyses. the integration of biomedical resources has been proposed as a solution to facilitate access to multiple, heterogeneous resources  <cit> . most biomedical systems have been developed independently of each other and do not have a common structure or even a shared data dictionary. in practice, the major barriers to data sources integration are the heterogeneity of database schemas and the disparity of data elements across systems. data elements  can be defined as a basic unit of information, also called attribute in database parlance, and which is built on standard structures having a unique meaning and distinct units or values, also called instances in databases  <cit> . examples of des in the biomedical domain include gene symbol and pathology name. the des extracted from various resources tend to be heterogeneous. in fact, each source has its own way of naming the des it uses. for instance, a de for pathological conditions will be named disorders in one source, but disease in another. in these cases, lexical approaches to integrating des across data sources are therefore likely to perform suboptimally. additionally, in some sources, des are ambiguous because they may acquire part of their meaning from the context. for example, the de name may refer to gene or protein names. in contrast, other sources use fully specified names for their des, e.g., protein name. the issue here is that name in protein context cannot be mapped automatically to protein name . conversely, two des name in gene and protein contexts respectively must not be mapped.

the following scenario illustrates how integrating des facilitates the integration of biomedical sources. we want to help a biologist interested in the interactions of a given protein to query distributed sources seamlessly. to this end, the query term interaction has to be mapped to des of distinct sources: to interactions in hprd  <cit> , to interactant in entrez gene  <cit> , and to ligand interaction in pdb  <cit> . from these resources, biologists can gain information about protein interactions in hrpd, find cross-references in entrez gene not only to the literature, but also to other specialized resources, such as bind  <cit> , and visualize chemical interactions in pdb.

the first objective of this study is to compare the des extracted from biomedical electronic resources to concepts and/or terms of biomedical controlled vocabularies on the one hand and to the des defined by the national cancer institute on the other. this approach should help resolve heterogeneity existing between des. additionally, as some des are ambiguous or underspecified, we use the values associated with such des to identify indirect mappings to terminological resources. our hypothesis is that we will be able to integrate des from heterogeneous sources by linking them to controlled terminologies, when they are not already present in reference de repositories. the set of des under investigation was extracted from eleven biomedical data sources covering genes, proteins and diseases.

related work
the general framework of our study is that of data source integration through schema matching. integration issues have been largely studied over the past years, with a particular emphasis on mapping schemas of heterogeneous data sources. this process takes as input two sets of elements  constituting two schemas and determines the relations  existing between pairs of elements across schemas. various approaches have been developed and categorized according to distinct criteria. a brief overview of these methods is presented below. for a detailed survey of such approaches, the interested reader is referred to  <cit> .

the main difference between these methods concerns the level at which they are applied. more precisely, some approaches are situated at schema level whereas others lie at instance level. schema-based approaches only exploit information existing in the schema of the sources, while instance-based approaches exploit information situated at the instance level, i.e., the values associated with the des. at both schema and instance levels, two main groups of methods are used for the mapping: lexical and structural methods.

schema-based approaches
lexical methods have been proposed to map de labels by exploiting their morphology. for example, a short edit distance or a high proportion of common n-grams between two strings is indicative of lexical resemblance. others consider de labels as terms and use external resources to identify linguistic relations  between them. with structural methods, the idea is for example to consider schemas as graphs and to apply classical approaches for comparing graphs, such as determining similarity between nodes sharing common ancestors and descendants  <cit> .

instance-based approaches
the information available about schemas is sometimes insufficient or ambiguous, and it can be useful to exploit information situated at the instance level. lexical methods can be used here too, for example, mapping instance values to external resources. in practice, external resources can help identify synonymy between values of attributes. structural techniques can also be applied at this level where information can be obtained about constraints existing on attributes by identifying for example the range of their associated values in case of numerical data or recurring terms for textual data.

examples of data source integration systems
the different kinds of methods  and levels at which they are applied  are generally more powerful when used in combination. the system glue  <cit>  provides a semi-automatic method for mapping schemas of heterogeneous sources. it combines machine learning techniques applied at the instance level with structural methods situated at schema level and which exploit the neighbourhood of attributes to determine the best mappings existing between elements of two schemas. also of interest,  <cit>  focuses on an instance-based approach and uses a domain ontology to identify indirect mappings between attributes through external knowledge, as described above. this approach is automatic but the problem is that it requires a fully specified domain ontology , which represents a significant limitation.

the methods used in our study are traditional in the sense that we mostly apply lexical approaches to schema- and instance-based approaches, also taking advantage of external resources. rather than to propose new methods, the contribution of this paper is to evaluate the applicability of existing approaches to the automatic mapping of des from the perspective of integrating biomedical data sources in a high-throughput context.

materials and methods
data elements
origin
our test set consists of des extracted from eleven web-accessible biomedical sources, selected to be representative of the different kinds of resources found in the biomedical domain. some of them contain information about genes: genecards  <cit> , entrez gene, geneloc  <cit> , genew , and hgmd  <cit> , others about proteins: swiss-prot  <cit> , pdb, hprd, interpro  <cit>  or diseases: omim  <cit> . our application is not targeted to a particular model organism so we also included mgi  <cit> , which provides various kinds of information about mice.

extracting data elements
creating a set of terms for querying sources
in order to query the various data sources mentioned above, we first established a list of query terms, namely gene and disease names. to this end, we exploited a reference resource in the domain of medical genetics: the genetics home reference  <cit>  . ghr provides information about genetic conditions and genes involved in these conditions. using the web interface to ghr, a bioinformatician  manually constituted a text file containing gene symbols  and associated disease names , if any. a sample of one hundred terms randomly extracted from this file constitutes the set of terms we used for querying de sources.

acquiring des
the sources used in this study are web-interfaces to biological databases, automatically generated by program. therefore, it is expected that most pages of a given source share a common organization and presentation. we take advantage of this feature for identifying recurring terms throughout web pages, which, we hypothesize, correspond to des. in practice, we developed a program for querying systematically the eleven sources through their query url. for each source, a set of  <dig> html pages corresponding to entries of the set of biomedical terms is created. after eliminating the header and footer, the elements common to at least 75% of the html pages are extracted automatically. this selection results in eliminating specific information , while keeping general information   <cit> . an example of de extracted from the source genew is given in figure  <dig>  for instance, the terms "approved symbol" and "approved name" appear on all three pages and are therefore identified as candidate des.

terminological resources
a biomedical controlled terminology: the umls
we chose the unified medical language systemÂ®   <cit> , a biomedical terminology integration system, because it provides a wide coverage of the biomedical domain, including terminologies for specialized clinical disciplines, the biomedical literature, and genome annotations. the umls consists of three major components. the umls metathesaurus is assembled by integrating more than  <dig> sources vocabularies. it contains about  <dig>  million concepts  and more than  <dig> million relationships between these concepts. the umls semantic network is a limited network of  <dig> semantic types. each metathesaurus concept is assigned to at least one semantic type. finally, the lexical resources comprise the specialist lexicon and lexical tools  <cit> . the umlsks developer's api also provides various methods for identifying metathesaurus concepts from input terms . additionally, the metamap transfer  program maps text to concepts in the metathesaurus with additional flexibility   <cit> . the 2005aa version of the umls is used in this study.

a biomedical collection of data elements: the nci cadsr
the national cancer institute  has created a cancer data standards registry   <cit>  as part of the cacore, a common infrastructure for cancer informatics  <cit> . its main goal is to define a comprehensive set of standardized metadata descriptors for cancer research terminology used in information collection and analysis. various nci offices and partner organizations have developed the content of the cadsr by registration of des based on data standards, data collection forms, databases, clinical applications, data exchange formats, uml models, and vocabularies. using the iso/iec  <dig>  <cit>  model for metadata registration, information about names, definitions, permissible values, and semantic concepts for common data elements  have been recorded. in this study, we used the version  <dig> . <dig>  of the nci cadsr, which comprises some  <dig>  cdes.

method
our method can be summarized as follows. starting from the des automatically extracted from eleven web resources, we first attempt to find a direct correspondence between our des and biomedical terms in the umls on the one hand and existing cdes in the nci cadsr on the other. alternatively, we map the values corresponding to our des to the umls and expect to determine the type of the de using the semantic types of the terms corresponding to the de values. more formally, we first apply lexical methods in order to map des extracted from distinct sources to common vocabularies by exploiting the schema level. we then apply lexical methods at the instance level and we use external resources to enhance, filter and precise de mappings.

direct mapping of data elements to terminological resources
mapping to the umls metathesaurus
our approach to mapping des to umls concepts is as conservative as possible. we first attempt to find an exact match. if none is found, a match is attempted after normalization. in practice, this process makes the input and target terms potentially compatible by eliminating such inessential differences as inflection, case, underscore and hyphen variations, as well as word-order variation  <cit> . these two steps are implemented by the corresponding methods of the umlsks api. finally, an approximate match is attempted using mmtx . the mapping procedure is fully automated and stops as soon as a match is found. the output of the mapping consists of the list of metathesaurus concepts corresponding to each de, along with their semantic types.

mapping to the nci cadsr
the procedure used to map des to the cadsr is somewhat similar to the mapping to the umls. the major difference is that we used a local copy of the cadsr instead of the tools provided by the nci. this gives us additional control over the mapping process. the cadsr repository consists in twelve fields. half of them contain numbers and other data types unlikely to map to des, e.g. cde identifiers such as "2178687". four other fields are incomplete or contain information in natural language , they are thus difficult to exploit. in practice, out of the twelve fields in a cadsr record, only two are of interest for our purpose: "long name" and "preferred name". the corresponding values of these two fields for the cde "gene name" are "genename" and "name", respectively. we rendered input terms and cadsr cdes compatible by removing spaces in multi-word terms in order to match the naming conventions in the cadsr. we first try to map exactly each de against the preferred names of the cadsr. in case of failure, we attempt an exact match to the long names of the cadsr cdes. additionally, we split each multi-word de not yet mapped to the cadsr and attempt an exact match against the preferred names of the cdes, followed by an approximate match. finally, we attempt to map exactly the isolated words from des to the long names of the cadsr cdes. this process is also fully automated and results in a list of des associated with the long name or preferred name of the mapped cde.

indirect mapping of data elements through their values
the approaches presented in the previous section are efficient to associate des with lexically similar entries in the terminological resources, but they are limited to those cases where lexically similar terms exist on both sides. the alternative approach proposed here consists in mapping not the des, but the values associated with them to terminological resources. this indirect mapping is attempted for all des because the objective of the proposed approach is twofold: on the one hand, to identify mappings for those des for which no match in the umls or cadsr can be found; on the other, to filter out potential inappropriate mappings obtained through the umls or the cadsr. for instance, the de approved name in genew will be mapped to the de protein name in swissprot because they share the word "name". this is incorrect because approved name actually refers to gene, not protein names. in practice, it is expected that the des will be found among the high-level categories characterizing their corresponding values. for example, values associated with the de approved name include "tenascin xb", and "breast cancer  <dig>  early onset" , categorized as gene or genome.

acquiring de values
we first created a program to automatically query each source and recovered the values associated with each de identified in this source. we extracted automatically up to  <dig> values corresponding to each de by querying the sources for each biomedical term of the set constituted as described in the paragraph acquiring des of subsection data elements. for example, the values associated with function include "protein binding" and "enzyme regulator activity". in some cases, no value could be extracted for a given de in a given source.

mapping de values to the umls
we used the automated methods described in the paragraph mapping to the umls metathesaurus above for mapping de values to umls concepts, with the difference that only exact and normalized matches were used here. for example, protein binding was mapped to the concept "protein binding" , categorized by the semantic type molecular function.

extracting de candidates
we used the semantic type of the umls concepts resulting from the mapping of the values of a given de to determine the type of this de. more precisely, we selected the semantic type categorizing the majority of the concepts for a given set of values. for instance, in the example introduced previously, we are able to determine that the de approved name relates to gene names since the majority of its values were categorized by the semantic type gene or genome .

default indirect mapping through data element values and heuristics
when the previous process could not determine the type of a de, we attempted to assign coarser predefined types. we first isolated des containing specific terms. for instance, when the terms "id" or "identifier" were found, the corresponding de was typed as identifier. then, we analyzed the values characterwise and assigned the type sequence to the de when each of its non-empty values was a series of "a", "g", "c", and "t". finally, the remaining des were typed as integer or string according to their values. an example of the exploitation of de values through heuristics is shown in figure  <dig> b.

this indirect mapping associates a type with the des, which is often useful for disambiguating underspecified des and for filtering out potentially inappropriate mappings obtained by direct mapping to terminological resources. additional mappings can also be identified by exploiting the type associated with de values, when the de itself cannot be found in existing terminological resources.

RESULTS
disparity of des
 <dig> distinct des  were extracted from the eleven selected sources, of which  <dig> appear in more than one source . the most frequent des are name and symbol, which appear each in six different sources.

direct mapping of data elements to terminological resources
for both umls and cadsr, we obtained different kinds of mappings. indeed, as a de consists of a word or a set of words, the cardinality of the mappings is either 1- <dig>  or 1-n .

mapping to the umls metathesaurus
 <dig> des  were mapped to  <dig> distinct concepts of the umls metathesaurus. table  <dig> shows the number of des mapped during each step, along with the numbers of the concepts mapped to these des. in addition, we give two examples of des for the different cases. each mapping was reviewed manually by the first author. the validity of the mappings to the umls is nearly 66%. incorrect mappings occur when general terms are given a biomedical interpretation. for instance, the de external links is mapped to the umls concept "link" , which is a pharmacologic substance. in fact, the de refers to "link" in a computer-science meaning, i.e. a cross-reference. other errors are due to the ambiguity of abbreviations, a classical issue in mapping. for example, the de previous gc identifiers is mapped to the concept "gc gene" , while gc stands, in fact, for genecards. we also considered the repartition in terms of semantic types of the results obtained by our method . this gives us an idea of what kind of information des represent. not surprisingly, the semantic type under which many concepts are categorized is intellectual product, corresponding to generic concepts such as synonyms, nomenclature, and database. the semantic categorization of the des also helps assess the quality of the mapping .

mapping to the nci cadsr
 <dig> des  were mapped to  <dig>  distinct des of the cadsr . by exact match to the preferred names, we obtained  <dig> correct mappings, such as gene function. exact match to the long names resulted in mapping  <dig> des to  <dig> cadsr cdes. some mappings were correct, e.g. location which mapped uniquely to "maplocation", but others were not useful in practice, such as description which mapped to  <dig> distinct cdes. after splitting multi-word des, ten mappings were identified by exact match to the preferred names, but resulted in partial matches. for instance, the de other accession ids was only mapped to the cadsr cde "other", which is incomplete and thus irrelevant. approximate match to the preferred names resulted in the mapping of  <dig> des to  <dig>  distinct cadsr cdes. for example, the de name was approximately mapped to  <dig> distinct cadsr cdes through the preferred names field. on the other hand, the approximate match to the long names resulted in  <dig> des mapped to  <dig> distinct cadsr cdes. we did not evaluate the mappings resulting from approximate matches because of the large number of cadsr cdes associated with each de in these cases.

indirect mapping of data elements through their values and default mapping through heuristics
we analyzed the whole set of des. interestingly, this method enables us to identify as distinct those lexically identical des whose associated value sets are different.

overall, only  <dig> des  could be characterized with datatypes more specific than string.  <dig> des were categorized by umls semantic types and three categories of proposed mappings were identified:

- correct . an example is the de previous symbols, extracted from the source genew. 90% of its  <dig> non-empty values were categorized by the semantic type gene or genome. we were thus able to determine that the previous symbols de in the context of the genew source corresponds to previous gene symbols. other examples include function and component, extracted from mgi, whose values are categorized by the semantic types molecular function and cell component, respectively.

- ambiguous . for instance, the de name, extracted from the source entrez gene, is mapped to the semantic types gene or genome and amino acid, peptide, or protein, reflecting ambiguity in the umls. in other words, many values associated with the de name indeed correspond to both genes and proteins. for example, the value "brca1" maps  to both a protein name  and a gene name .

- erroneous . some terms were wrongly extracted from the sources. for example, not applicable is extracted from the source genecards because it is present in many pages, but does not correspond to a de.

the remaining des  were accurately assigned to the coarser types integer, identifier, and sequence. examples include:

- integer: molecular weight, a de extracted from swissprot whose values include  <dig> and  <dig>  for brca <dig> and tnxb genes, respectively.

- identifier: accession numbers, a de extracted from genew whose values include u <dig> and x <dig>  for brca <dig> and tnxb genes, respectively.

- sequence: an illustration of primer  <dig> extracted from geneloc is given in figure  <dig> b.

examples
we present here two examples illustrating the whole mapping process: results obtained by direct and indirect approaches are displayed. the two des we have chosen are from extracted from the source swissprot and rt-pcr obtained from mgi.

direct mapping
umls metathesaurus
the de from is not found in the umls whereas the abbreviation rt-pcr maps unambiguously  to the concept "reverse transcriptase polymerase chain reaction" .

nci cadsr
both des are found through an approximate match to the field preferred name. the de from results in eight cdes, such as "externalreferenceexportedfroms". rt-pcr maps to three cdes including rt-pcr_result_proc, which corresponds to the results obtained by the rt-pcr procedure. none of the mappings obtained through approximate match are accurate.

indirect mapping
semantic types
 <dig> non empty values are retrieved from the de from, including "rattus norvegicus", "zebrafish", and "homo sapiens". among those,  <dig> % are categorized by mammal and  <dig> % by fish , thus indicating that this de refers to organisms. therefore, we can identify an indirect mapping to the des organism present in entrez gene and genecards.

heuristics
the indirect mapping of rt-pcr requires the use of heuristics. the values of this de are digits, which corresponds to the number of rt-pcrs realized on the gene whose information web page is displayed on mgi web site. the associated type is thus integer.

discussion
findings
direct mapping
intuitively, mapping to a reference de repository represents the best possible data integration approach. this intuition was confirmed in part by this study as illustrated by the following example. the de gene name exists in the cadsr, where it is related to the more generic cde "gene". in our experience, however, beside a limited number of such mappings , this approach was rather ineffective because most of our des could not be found in the cadsr. moreover, the approximate matching often yielded too many candidates to be useful in an automated environment. in contrast, the mapping of des to the umls turned out to yield the majority of the mappings. the broad coverage provided by the umls metathesaurus explains the large number of exact matches. approximate matches, while useful for guiding the mapping, are of limited interest in an automated environment. for example, there is no exact or normalized match in the umls for the de gene name and this de is mapped to the two concepts "gene" and "name". the mapping to "name" is too generic and would result in ambiguity with other des such as protein name. analogously, gene name and gene symbol cannot be easily differentiated if the mapping to "gene" is selected.

indirect mapping
because our method selects the semantic type common to most values for a given de, it achieves a semantic typing of the des rather than a real mapping. in fact, the direct and indirect mappings of des are complementary. direct mapping identifies a direct correspondence between des through existing terminological resources, whereas indirect mapping is useful for disambiguating mappings. as illustrated before, we were able to indicate that the de approved name is to be understood in the context of genes  and that the de from represents the organisms in which a protein is expressed. however, overall, only  <dig> % of our des could be semantically typed by this method.

partially automated mapping
the purpose of semantic mining is to identify and characterize the relations among entities of interest in a given domain. because biomedical knowledge is scattered across many heterogeneous databases, data integration is often used in semantic mining applications. moreover, semantic mining techniques are usually applied in high-throughput environments, where manual data integration is impractical. our results suggest that data integration can be achieved automatically with limited precision and largely facilitated by mapping des to terminological resources. our approach exploits both schema and instance levels for aligning schema sources, which is not new in itself. however, this study illustrates concretely the benefit of automating the mapping process for biomedical sources integration, in contrast to integration systems that are designed and maintained mostly manually. the methods presented in this paper would support the partial automation of some tasks related to the conception and evolution of integration systems. indeed, our approach contains the ingredients of a mediator-based system  <cit> : information about sources , a global schema , and finally mappings between elements of the global schema and source schemas .

limitations and future directions
evaluation
in this exploratory study, the validity of the mappings was evaluated by one person only . an independent evaluation would be required to confirm our results.

general lexical resources
among the des that failed to be mapped to the umls and cadsr are general terms such as pathways, ontologies, keywords, domain, and features. mapping to general rather than specialized resources is expected to compensate for this limitation. we plan to add wordnet  <cit> , the electronic lexical database of general english, to our list of target terminological resources. we would like to evaluate the potential benefit of using general lexical resources to increase the coverage of non-domain-specific des, even if we are aware that using such resources will likely result in increased ambiguity for some des.

patterns and rules
the heuristics currently used for analyzing the de values only identify a limited number of datatypes. pattern detection could be used to enrich some datatypes with semantic information. for example, a pattern for identifying bibliographic references would allow us to relate the des primary citation in pdb and publications in interpro. analogously, rules could be used to combine multiple direct mappings. for example, a composite concept "gene name" could be created from the mapping of the de gene name to the two umls concepts "gene" and "name".

CONCLUSIONS
the aim of our study was to consider the integration of biomedical sources through the use of des. we extracted a set of des from disparate biomedical sources available on the internet. we then demonstrated the benefit of using terminological resources to reconcile heterogeneous des. terminological resources were useful from a lexical perspective, enabling to map des to a common vocabulary. in addition, from a semantic perspective, terminological resources supported the categorization of de values, enabling us to disambiguate underspecified des.

