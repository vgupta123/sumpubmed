BACKGROUND
a significant number of the small molecules involved in the metabolism of organisms is still unknown. methods for the structure elucidation of unknown metabolites are therefore needed. computer-assisted structure elucidation , a field that has been researched for over  <dig> years  <cit> , lends itself to this end. for complex structure elucidation problems, a rich set of mass spectral as well as 1d and 2d nmr spectroscopic information is required  <cit> .

under high-throughput conditions, however, only spectroscopic information that can be recorded quickly is used. therefore, successful structure determination based on a limited set of spectroscopic information is important. 1d proton nmr is the most commonly used nmr method in metabolomics; however, in the present study, we based the structure elucidation on carbon- <dig> nmr because reliable open-source methods for proton prediction, including the coupling constants required to produce realistic 1d spectra, are not available. it is common knowledge that 1d nmr alone is usually not sufficient to establish the identity of a hitherto unknown compound.

recently, we and others demonstrated that metabolites and natural products cluster in a distinct area in structure space  <cit> , leading to the concept of a calculated natural product -likeness.

here, we investigated whether np-likeness can be used as another component to the fitness evaluators to help elucidate candidates with minimum spectral information and increase the likelihood of a natural product ranking highly in a set of solutions. the methods presented here have been implemented in the seneca system, an open-source java-based desktop application to perform case for organic molecules. the application takes a molecular formula generated from high-resolution mass spectrometry and spectral data from a suite of nmr experiments and performs a stochastic search in the constitutional space, guided by a fitness function. with the above input, the ability of the application to produce the correct structure for candidates with up to  <dig> heavy atoms has been demonstrated previously  <cit> . other systems have been shown to solve even larger problems, but these systems are closed-source and proprietary  <cit> .

methods
seneca has been refactored completely and is now based on the chemistry development kit , a popular open-source library for cheminformatics  <cit> . the cdk contains a graph-based, object-oriented representation of molecules and provides flexible functionalities to perform various operation on molecules, including valence electrons check, ring perception, aromaticity detection, mutation, and atom environment representation. seneca performs a stochastic search of constitution space , guided by a fitness or scoring function, which contains terms that evaluate the similarity of predicted and experimental spectra and terms that evaluate the validity of the currently inspected solution. seneca contains implementations of simulated annealing  <cit>  and an evolutionary algorithm. the latter is a completely new implementation and not related to the one reported previously  <cit>  that was based on an older, obsolete library and that therefore was discontinued.

availability
the latest version of seneca is available both as a desktop application and as a command-line executable. seneca is available for free download under artistic license from sourceforge  <cit> .

evolutionary algorithm for stochastic search
evolutionary algorithms  are based on the darwinian principles of evolution, incorporating the concepts of natural selection and survival of the fittest. the overall scheme implemented by us for the optimization problem is similar to the scheme reported in  <cit> , which has both mutation and recombination operators. in our scheme, we used only the mutation operator because it offered the desired results and was easier to configure. the simple ea scheme implemented by us is illustrated in figure  <dig> 

in our ea scheme, evolution starts with a population of a configurable number of randomly generated individuals, seeded by an initial molecular structure  derived from the input molecular formula. to generate an initial population, the initial seed is mutated randomly by the mutation functionality within the cdk based on the faulon mutation operator  <cit> . each individual is evaluated for fitness by our fitness evaluators and cross checked with termination conditions. the program can be configured to terminate if any of the following criteria are reached: maximum fitness, maximum allowed runtime, maximum allowed generations, or maximum allowed generations with no improvement. here, we used only one of the termination conditions, namely the maximum allowed generations, because then we could collect all the isomers traversed and rank them to see if there was significant improvement in the ranking of the exact structure with the application of an np-likeness filter. if the termination conditions are not met, each individual is mutated to generate one offspring, thereby doubling the population. the doubled population is evaluated again for fitness and the fittest individuals are chosen by round-robin tournament selection. if there is no improvement in fitness for five consecutive generations, fresh individuals are added to the population using a vicinity search around the top two fittest individuals. after the niche search the population is expanded from  <dig> to  <dig> and allowed to run for five generations. if again no fitness improvement is recorded, the population size is reduced back to  <dig> using tournament selection. the above evolution procedure is repeated until the termination conditions are met . once met, the evolution is stopped and the elucidated candidates are reported.

fitness evaluators
a suite of fitness evaluators , each of which evaluates a certain optimization criterion, e.g. agreement between the recorded chemical shift value from various nmr techniques  and the observed structural features in the candidate, has already been presented in seneca  <cit> . the scoring methods used by these judges are not described in detail here; however, the newly implemented fitness evaluators that have not been reported previously are discussed below.

nmrshiftdb judge
nmrshiftdb is an open-access, open submission database that houses about  <dig>  organic molecules and their associated recorded experimental 1d nmr spectra  <cit> . the database can be accessed at http://nmrshiftdb.org.

the hose  code  <cit>  is a canonical way of capturing atom environments in a linear extendable fashion. a fitness evaluator from a previous version of seneca  <cit>  used the  <dig> one-sphere hose - 13c shift entries published by bremser <cit>  to keep the hybridization and heteroatom attachments of the predicted structures in check. the prediction precision can be improved if the extended environment of atoms can be captured by increasing the hose sphere height  <cit> . the nmrshiftdb database is used to produce an index of hose with extended heights  and to associate it with a mean chemical shift and a confidence score, similar to bremser’s approach  <cit> .

the mean shift value for each hose code is calculated by averaging all the observed shifts over the molecule occurrence count. the standard deviation, therefore, will increase as the sphere height decreases. the confidence limit for each mean shift is calculated by multiplying the standard error with the two-sided student’s t-distribution value for 95% confidence. if the confidence limit is less than  <dig> ppm, a minimum value of  <dig> ppm is assigned. the index generated serves as a lookup table for the new nmrshiftdbjudge.

the nmrshiftdb judge calculates the 13c spectrum for the candidate and assigns a fitness score based on its agreement with the experimental spectrum as shown in equation <dig>  if the back-calculated  and the absolute deviation of a given experimental shift  is within the confidence limit  offered for that shift value, full points  are awarded for that carbon atom, otherwise zero. the summation of all the carbon atom scores gives the total score, validating the agreement between the 13c spectrum and the expected atom environments. equation <dig> can be applied to normalize the score between  <dig> and  <dig>  

  scorenmr_judge=∑carbonspmaxifδpred-δexp≤cl0ifδpred-δexp>cl 

  nmrcostnorm=scorenmr_judgecarbon_count∗pmax 

nplikeness judge
with only nmrshiftdbjudge many isomers will emerge as the fittest by satisfying all the fragment-to-shift associations. this is a classic problem in case, i.e. the possibility of finding not one but many structural candidates that satisfy the given nmr constraints. then expert opinion is relied on to pick the correct candidate solution. hence, candidate ranking methods are indispensable in case when numerous solutions are given.

an automated way to rank these candidate solutions is to check their structural validity, for example by calculating their structural similarity with known nps. therefore, inclusion of a nplikenessjudge is expected to improve the ranking of the candidates by penalizing improbable structures on the fly during evolution. to make decisions on the np-likeness of a molecule, knowledge about the structural space of known nps as opposed to synthetics is used. previously, we reported such a scorer based on the open-data of known natural products and synthetics  <cit> , with the main motivation of including it in the case program. we implemented a nplikenessjudge by including the np-likeness calculator within seneca. the judge scores molecules for np-likeness based on the occurrence of its fragments in the known natural product fragment space. the np score given is between - <dig>  and + <dig> , where a higher score indicates greater np-likeness. this score is normalized between  <dig> and  <dig> using equation <dig>  where max and min are the most extreme values given by the np-likeness scorer.

when nplikenessjudge is used along with nmrshiftdbjudge the total cost is calculated using equation <dig>  thus, the candidate molecule is weighted more for nmr agreement and less for np-likeness. 

  npcostnorm=scorenp_judge-minmax-min 

  costtotal=nmrcostnorm1+npcostnorm <dig> 

antibredt judge
another way to filter improbable structures during evolution is to check for structures that are sterically constrained. antibredtjudge penalizes a structure if it has a double bond at bridgehead atoms in rings with seven or less atoms. an algorithm to detect these unrealistic structures was reported previously  <cit>  and this algorithm has been implemented in our case scheme.

test case collection
to test the performance of the case system in predicting the correct structures using only the 13c spectrum, we collected  <dig> test cases from the journal of natural products. we selected molecules with heavy atom counts ≤  <dig> from recently published articles. from each article, the molecular formulae , 13c chemical shifts, and dept  <dig> and dept  <dig> assignments were extracted to determine the number of hydrogen atoms attached to carbon atoms and then the published molecular structure was extracted for final cross validation. the mf and spectrum information were entered manually into the seneca gui client and saved as a seneca markup language  file, seneca’s native file format based on xml. the molecular structure information was drawn using a structure drawer and saved as an mdl mol file to be used for identifying the correct structure in the solution set at the end of the case. all the structures were cross checked with the nmrshiftdb index to ensure that none of them were already present in the index. the collected test cases along with their np-likeness score are illustrated in figure  <dig> 

RESULTS
performance of the case system
the performance of seneca was tested using only the new fitness evaluators nmrshiftdbjudge, nplikenessjudge, and antibredtjudge. to test the enhancement in candidate ranking with the application of np-likeness, we performed two different evaluations for the  <dig> test cases. in the first evaluation , only two of the judges, nmrshiftdbjudge and antibredtjudge, were used, and in the second evaluation  all three judges were used. the stochastic search does not guarantee that the global optimum will be found in one run; therefore, it is common to collect the results from several runs, and then combine and rank them. to test the performance of the case system, we performed  <dig> sequential runs for every test case, i.e.  <dig> runs for each of the nmr_only and nmr_np evaluations. each run performs an evolution that terminates after  <dig> generations and reports back all the elucidated candidates.

we observed that the frequency of elucidating the correct structure in the solution set was higher with the three nmr_np judges than with the two nmr_only judges as shown in figure  <dig>  although the retrieval percentage was low because of the spectroscopically underdetermined problems among the test cases, there was a  <dig> % overall improvement in the predictions of correct candidates when nplikenessjudge was included as a judge in the evaluations. correct structures were retrieved in the solution set for  <dig> of the  <dig> cases with the application of all our fitness evaluators. the five cases for which no correct solution was found are numbered  <dig>   <dig>   <dig>   <dig>  and  <dig> in figure  <dig>  the most interesting question is: in how many of the  <dig> retrieved cases was the correct candidate ranked the highest and how frequently did this happen? as illustrated in figure  <dig>  nine out of  <dig> cases and  <dig> out of  <dig> cases were ranked the highest using the nmr_only and nmr_np judges, respectively, indicating that the application of np-likeness frequently improved the rank of the correct solution. the improvement in ranking through the application of nplikenessjudge is also indicated in figure  <dig> and figure  <dig>  where the overall rank distribution is plotted for all test cases across all runs where there was a correct structure prediction. the empty indices in figure  <dig> indicate that there was no correct prediction for these test cases in any of the  <dig> runs. figure  <dig> using a violin plot summarises the distribution of overall ranks shown in figure  <dig>  the averaged-out rank distribution in figure  <dig> shows how application of an np-likeness filter tended to improve overall the rank of the correct solution among other predicted candidates.

CONCLUSIONS
here, the application of natural product-likeness to achieve a higher ranking of the correct compound in automated structure elucidation of natural products with an otherwise limited set of spectroscopic information is presented. the newly developed methods described in this article are implemented in the open-source seneca package for case, which features an evolutionary algorithm for structure elucidation and is available as a gui client or as a stand-alone command-line executable. fitness evaluators based on 13c nmr spectrum-to-structure associations in the nmrshiftdb database  <cit>  and an np-likeness score  <cit>  have been integrated in the scoring function of the evolutionary algorithm scheme. with our publicly available open-data based fitness evaluators we have demonstrated the successful elucidation of correct structures for unknowns in  <dig> of  <dig> test cases, and achieved the highest rank for the correct structures of  <dig> of the  <dig> cases. we have also shown that significant improvement in overall prediction frequency and average ranking can be achieved with the application of the np-likeness filter. we believe that these results can lead to improvements in case systems for use in metabolomics data analysis pipelines. the open-source, open-data implementation allows other researchers to contribute to or modify the package, and use their own training data for fitness evaluation.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
cs conceived the project and guided the development. kvj conducted the study, selected the data, implemented the evolutionary algorithm scheme and new fitness evaluators within seneca, and tested it. both authors contributed to the manuscript draft, and read and approved the final manuscript.

acknowledgments
kvj thanks her colleagues from the cheminformatics and metabolism group at the european bioinformatics institute for their active support and critical comments. we especially thank luis filipe de figueiredo for helping with the initial refactoring of seneca and its upload to sourceforge. we thank the open-source communities of the chemistry development kit. this work was supported by funds from the biotechnology and biological sciences research council  .
