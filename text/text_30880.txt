BACKGROUND
personalized medicine is striving to find its way into clinical routine. some therapeutic decisions are already influenced by the presence or absence of certain mutations. sequencing in such contexts is usually performed using next-generation sequencing . however, the analysis of ngs data may be complicated by a number of reasons. on the one hand, false positive calls due to artifacts in the sequencing data may harm the results. on the other hand, false negative calls due to low variant allele frequencies or bad coverage of certain regions can lead to true mutations not being detected.

there are many of programs in terms of variant calling, like gatk  <cit>  or samtools  <cit> . however, – apart from some user-definable thresholds – these programs are usually a black box. they take a bam file as input, apply a number of partially complex filtration steps and return a vcf file containing a list of likely variants. variants with low allelic frequencies – even if they are known hotspot mutations – are usually excluded to keep the number of false positive calls low. even recently developed sophisticated approaches like mutaid  <cit>  that provide a complete data analysis pipeline for sanger- and next-generation sequencing data, including different mapping and variant calling algorithms, finally report a vcf file per sample and a variant summary table. furthermore, tools developed for ngs analysis in a clinical setting, e.g. csn and cava  <cit> , usually focus on the correct annotation of previously called variants.

to our knowledge, there are no freely available variant calling tool that can use as input a list of likely mutations that should be considered with an especially low allelic frequency. neither is it possible to perform a comparable analysis of positions where no variant is called, but the user is interested in the raw number of bases. as a consequence, a manual, time-consuming inspection of all sites where mutations are expected but not called is necessary.

the integrative genomics viewer   <cit>  provides such an option for the manual investigation of the different number of bases, deletions and insertions at any position in the genome. however, it is time consuming to load different samples into the program and to look at the different positions of interest. moreover, there is no way of automatically summing up and visualizing the base counts for a list of positions in igv. other tools, like the r packages rsamtools  <cit>  and varianttools  <cit> , provide options for counting the number of bases and determining quality summaries at a selected set of positions. however, as the output is textual, programming one’s own solution for visualization is necessary. altogether, this does not appear to be a satisfactory solution for clinical routine.

in the use case of medical diagnostics, a tool performing detailed analyses of those locations where mutations are expected – but not always called – may prove to be very useful. low allelic frequency and bad base quality may often explain why calls are missed. however, in case of missing calls this information is not included in a vcf file and is difficult to obtain from igv.

to facilitate the analysis of called and uncalled mutations, we developed bbcanalyzer . just like common variant callers, the application uses a bam file as input. it analyzes the cigar strings that characterize the mapped reads and reports the number of bases, deletions and insertions at any predefined position or region in comparison to any reference genome in a novel visual- and a common textual way. the analysis as well as the plots may be customized in a number of ways.

implementation
bbcanalyzer is implemented in r and available at http://bioconductor.org. additionally, a web application for bbcanalyzer is available at additional file  <dig>  the tool works with any sequence alignment data that are available as bam files.

input
in addition to the bam files to be analyzed, bbcanalyzer needs the corresponding bai files. when using bbcanalyzer as a classical r package, a file summing up the sample names and a target file containing the positions or regions to be analyzed have to be provided. when using bbcanalyzer as a web application, the sample names and the target regions to be analyzed have to be provided in an input field. optionally, a vcf file containing known mutations or polymorphisms and vcf files for each sample resulting from earlier performed variant calling may be provided.

preparation of the plotting
prior to the actual plotting, bbcanalyzer performs various steps of preparation.

first, an analysis of the target region is performed. bbcanalyzer is able to deal with target regions as well as single target bases.

next, detected bases, deletions and insertions at every defined position are written out by analyzing available cigar strings. furthermore, the quality for every base  is written out. a threshold for excluding reads with bad mapping quality may be defined. bbcanalyzer equally copes with uncovered positions as well as insertions > <dig> bp.

subsequently, the number of detected bases, deletions and insertions at every position is summed up. additionally, mean quality of detected bases – including insertions and for the inserted bases only – is calculated. a threshold may be set to exclude bases with bad quality. the number of excluded bases is counted and reported separately. in case of vcf files being available for every sample, the expected number of bases, deletions and insertions are determined based on the called alternate alleles and the assigned genotypes.

finally, the ratios of the detected bases, deletions and insertions  are determined. based on the ratios, up to six different calls are reported. a threshold may be set to ignore variants with a minor ratio. in the case of an available vcf file containing the called variants for every sample, the call – taking into account the reference allele, the alternate alleles and the genotype – is determined.

plotting
the essential feature of bbcanalyzer is its plotting functionality. on the basis of the determined base counts, bar plots are generated. the user can choose between one bar plot per sample, focusing the analysis on various target bases at a time, or one bar plot per position, setting the focus of the analysis on the direct comparison of many bam files at a single position. in addition, the absolute or relative number of counts can be plotted .
fig.  <dig> exemplary output file from real patient data generated by illumina nextseq. relative number of reads at seven positions analyzed in case of sample “example_illumina”. reference bases are plotted at the negative y axis, detected bases in the mapped reads are plotted at the positive y axis . likely snv at chr1: <dig> , <dig> . no variant at chr2: <dig> , <dig> . unlikely snv at chr2: <dig> , <dig> . likely deletion at chr4: <dig> , <dig> . known homozygous snp at chr17: <dig> , <dig> . possible insertion of a “g”, but unlikely deletion at chr20: <dig> , <dig> . likely snv at chr21: <dig> , <dig> 




in each case, the previously determined numbers of detected bases, deletions and insertions are plotted on the positive y axis of the bar plot. the bars are colored according to the base . if the mean quality of the bases is considered, a lower and an upper boundary may be set. a high mean quality close to the upper bound leads to a darker coloring of the bar.

in addition to the counted bases, the reference bases  at the targeted positions are plotted on the negative y axis. in doing so, single nucleotide variants  may directly be identified .

if a vcf file containing known variants, e.g. originating from dbsnp  <cit> , is given, additional reference bases are included in the plots at the corresponding positions .

bbcanalyzer is able to visualize insertions of  <dig> bp , but also long insertions of >  <dig> bp by repeatedly analyzing the same position. this is even possible, when many samples are analyzed in parallel, but the corresponding position is not covered in all cases. furthermore, bbcanalyzer is able to cope with different inserted bases at the same position by plotting them as stacked bars.

an exemplary visualization of a deletion is displayed at position chr4: <dig> , <dig> in fig.  <dig> 

if vcf files for all samples are provided, the expected number of bases, deletions and insertions on the basis of the assigned genotype are added to the bar plots using dashed lines.

to account for the ratio of detected bases, deletions and insertions – even if their absolute numbers are chosen to be plotted –, a vector may be defined giving the ratios at which horizontal lines shall be drawn in the plots, e.g.  <dig>   <dig> and 75%. however, this function may also be used to mark a variant calling threshold at e.g. 5% .

output
the bases and their qualities at every analyzed position, the absolute number of counts and the relative frequencies together with the corresponding calls get reported as separate txt files.

when using bbcanalyzer as an r package, the user can provide an output directory for the plots. if he does, all plots generated by bbcanalyzer get automatically saved as png files. otherwise, the plots are returned to the workspace.

when using bbcanalyzer as a web application, all plots generated by bbcanalyzer get automatically saved as png files in the given output directory. additionally, all plots get displayed in the application’s output panel.

RESULTS
the performance of every variant calling tool is influenced by numerous parameters. general characteristics of the data, e.g. average coverage or the level of sequencing errors, can prevent a true mutation from being called, but variant-specific characteristics, e.g. the variant allele frequency or the surrounding bases may also influence mutation calling. calling mutations in repetitive regions as well as low-frequency mutations is especially challenging.

with the help of two exemplary cases of real sequencing data  from patients with myelodysplastic syndrome , we show how bbcanalyzer is able to facilitate variant calling where common variant calling tools frequently fail.

using bbcanalyzer to detect mutations in repetitive regions
depending on the repeated motive, calling mutations in repetitive regions can be very challenging. as an example, we consider the insertion of g in case of a homopolymeric stretch of eight gs . this mutation in asxl <dig> is regarded as a hotspot mutation for mds and other myeloid malignancies.

we perform variant calling with two standard tools: gatk and samtools. five sets of sequencing data are analyzed . only in case of upn <dig> the expected mutation on asxl <dig> is called. furthermore, the mutation is only called by gatk, not by samtools. gatk reports a depth of dp= <dig>   <dig> reads containing the reference allele and  <dig> reads containing the alternate allele are reported. thus, the allelic frequency is vaf= <dig> . the presence of the mutation in upn <dig> was confirmed by sanger sequencing  <cit> .

in addition to classical variant calling, we use bbcanalyzer to analyze position chr20: <dig> , <dig>  the results are displayed in fig.  <dig>  the following options were defined: no vcf input for every sample, no file containing known mutations, reference genome hg <dig>  mq threshold= <dig>  bq threshold= <dig> , frequency threshold= <dig> , quality lower bound= <dig> , quality upper bound= <dig> , mark at 20%, plot relative number of bases, return one plot per analyzed position.
fig.  <dig> analysis of position chr20: <dig> , <dig> with bbcanalyzer. relative number of reads : upn <dig> and upn <dig> feature an inserted g in almost 30% of the reads, while samples upn <dig>  upn <dig> and upn <dig> feature no significant difference between the number of reads containing a deletion and the number of reads containing an insertion. thus, only samples upn <dig> and upn <dig> are likely to feature the mutation chr20: <dig> , <dig> a >ag




the analysis of position chr20: <dig> , <dig> with bbcanalyzer underlines our previous findings in case of sample upn <dig>  more than 20% of the reads feature an inserted g. however, the frequencies determined by bbcanalyzer differ considerable from the ones reported by gatk.  <dig> reads contain the reference allele,  <dig> reads contain an a,  <dig> a deletion,  <dig> an insertion and  <dig> are excluded due to low base quality. obviously, gatk applies a number of filters by default that exclude a majority of calls.

considering the remaining sequencing data, it becomes obvious that samples upn <dig>  upn <dig> and upn <dig> feature no significant difference between the number of reads containing a deletion and the number of reads containing an insertion. it is thus likely, that these samples do not have a true mutation at the analyzed position. sanger sequencing also indicated that the mutation was not present in these samples. sample upn <dig> however shows results that are very similar compared to upn <dig>   <dig>  reads contain the reference allele,  <dig> reads contain an a,  <dig> reads contain a c,  <dig> read contains a t,  <dig> reads contain a deletion,  <dig> reads contain an insertion and  <dig> reads are excluded due to low base quality. thus, the allelic frequency of the insertion is vaf= <dig> . again we perform sanger sequencing and indeed the presence of the mutation was confirmed, although it has neither been called by gatk, nor by samtools.

using bbcanalyzer to detect low-frequency mutations
detecting low-frequency mutations in ngs data is, even if data features a low level of sequencing errors, very challenging. some mutations, like chr1: <dig> ,744;c >a on nras, are important hotspot mutations that occur in various types of cancer at various vafs. nras mutations may occur at low frequency and seem to be associated with transformation to more aggressive disease. therefore, it may be relevant to detect these mutations already at a subclonal level. for a common variant calling tool, like gatk or samtools, it is practically impossible to detect such a variant.

based on the real illumina nextseq sequencing data we simulate five sets of sequencing data using art_illumina  <dig> . <dig>  <cit> . to account for specific sequencing errors, we determine a read quality profile on the basis of the real illumina data and use it for the subsequent simulation. average coverage of the simulated samples corresponds to average coverage of the real samples . using bam surgeon  <cit>  we simulate the hotspot mutation in nras in case of three out of five samples with an expected allelic frequency of vaf= <dig> .

we perform variant calling on our simulated samples using gatk and samtools. however, both tools are unable to detect the mutation we simulated in any of the three samples. in addition to classical variant calling, we again perform analysis of position chr1: <dig> , <dig> using bbcanalyzer. the results of the simulated samples are displayed in fig. 3a. the following options were defined: no vcf input for every sample, no file containing known mutations, reference genome hg <dig>  mq threshold= <dig>  bq threshold= <dig> , frequency threshold= <dig> , quality lower bound= <dig> , quality upper bound= <dig> , mark at 3%, plot relative number of bases, return one plot per analyzed position.
fig.  <dig> analysis of position chr1: <dig> , <dig> with bbcanalyzer. relative number of reads : a: simulated data. a low-frequency mutation  can be observed in case of samples sim <dig>  sim <dig> and sim <dig>  but not in samples sim <dig> and sim <dig>  b: real data. similar to the simulated data, the same low-frequency mutation can be observed in case of sample upn <dig>  but not in samples upn2-upn <dig>  thus, samples upn <dig> is likely to feature the mutation chr1: <dig> , <dig> c >a




the plot shows that the hotspot mutation on nras is clearly visible in case of sim <dig>  sim <dig> and sim <dig>  the observed frequency matches our expectations. furthermore, it can be observed that the base quality of both, reads featuring the reference- and reads featuring the alternate allele, is high.

just like in case of the simulated data, we analyze five sets of real illumina nextseq sequencing data. again, gatk and samtools do not report a mutation at chr1: <dig> , <dig> in case of any of the analyzed samples. however, when using bbcanalyze, the mutation is visible in case of upn <dig> . the allelic frequency is vaf= <dig> . altogether, bbcanalyzer detects  <dig>  reads containing the reference allele,  <dig> reads containing an a,  <dig> reads containing a t,  <dig> reads containing a deletion and  <dig> reads being excluded due to low base quality. however, similar to the simulated data, reads featuring the reference- and reads featuring the alternate allele have a high base quality. it thus appears likely, that sample upn <dig> actually contains the nras mutation.

as there is no way of validating mutations at such a low allelic frequency using sanger sequencing, we sequenced the sample a second time on illumina nextseq . the same mutation can be observed with a similar frequency. therefore, we assume that sample upn <dig> actually features the low-frequency hotspot mutation in nras, although gatk and samtools both fail to call it.

CONCLUSIONS
different from common variant calling tools, we present an application that provides a novel, visual approach to facilitate variant calling. information on the counted number of bases, the reference bases, known mutations or polymorphisms, called mutations and base qualities is united in a novel graphical way. thereby, bbcanalyzer provides a solution for otherwise time-consuming, manual inspection of sites where mutations are expected but not called. considering examples of mutations in repetitive regions and low-frequency mutations, we have shown how bbcanalyzer can facilitate variant calling where classical tools frequently fail. additionally, bbcanalyzer is not only available as a classical r package, but also in form of an intuitively usable web application. this enables a potentially wide usage of our tool – not only by bioinformaticians, but also biologists and clinicians.

additional files

additional file  <dig> supplement_ <dig>  detailed documentation of the r package “bbcanalyzer”. 





additional file  <dig> supplement_ <dig>  scripts and documentation of the web application “bbcanalyzer”. 




abbreviations
igvintegrative genomics viewer

mdsmyelodysplastic syndrome

ngsnext-generation sequencing

snvsingle nucleotide variant

