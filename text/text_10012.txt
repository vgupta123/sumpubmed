BACKGROUND
the advent of microarray technology gave rise to the development of a plethora of analytical approaches, where each of them try to detect those significant genes among thousands of genes that are enough to summarize all the necessary statistical and biological information for successful classification and pathway analysis. several of those methods are implemented as open-source r-packages with the anticipation to become broadly engaged by bioscientists in microarray analysis problems. though, several factors hinder their extensive application particularly from biologists. in some cases the required computational skills while on other the necessity to integrate results of different formats stemming from several packages are some of those factors.

the map-kl is a hybrid gene selection method, which is based on the hypothesis that among the statistically significant genes in a ranked list, there should be clusters of genes that share similar biological functions related to the investigated disease  <cit> . the output of this method is a subset of genes consisting of one exemplar per cluster that best describes the phenotypes’ characteristics. the method has been compared against twelve other well-established feature selection methods , where all of them applied on a variety of diseases including gene expression data of six neuromuscular diseases and four types of cancer. the overall evaluation results suggest that map-kl implements an efficient sampling of the ranked gene list, selecting those genes that are necessary for accurate classification while at the same time reflect biological relevance to the respective disease, thus providing a reasonable basis for further biological insights  <cit> .

to provide the research community with the capability to apply map-kl in any given gene expression dataset, we have implemented this methodology to an open-source r/bioconductor package accompanied with extra functionalities such as data sampling preprocessing, classification, network analysis, gene annotation analysis, pathway analysis and reporting. the centric idea during the package’s design was to build functions that can either shape an extensive analysis pipeline or used as standalone modules. for instance, a user may import any dataset of raw gene expression data and apply with a single command eight at maximum different preprocessing methods. then, may analyze any of the preprocessed data with the map-kl method and conclude to lists of significant genes . classification assessment, annotation analysis, pathway analysis and network characteristics are some of the possible analyses that a user may apply on these exemplars. on the other hand, a user may as well employ any of the available functions to exploit a particular functionality for example, to partition a dataset into train and validation sets, to obtain annotation info for a given list of probe ids, and so on.

in the rest of this article, we will present the key design characteristics that influenced the implementation of this package, and next we will present a thorough workflow highlighted the functional modules of mapkl. a discussion on other competing packages and how they resemble or differ to mapkl will follow, and finally the future directions of our package will be outlined.

implementation
the mapkl has been implemented in r as an s <dig> package that takes advantage of the rich functionality of the ‘expressionset’  class  <cit> . this type of class is designed to accommodate a variety of information including expression data from microarray experiments , ‘meta-data’ describing samples in the experiment , annotations and meta-data about the features on the chip , information about the protocol used for processing the samples , and a flexible structure to describe the experiment . all those different sources of information are handled by class-methods thus the proper manipulation is guaranteed. besides, using this class objects throughout this package we make feasible any collaboration with other bioconductor packages hence, extending the meta-analysis options.

from a functional perspective, we have designed and implemented functions that each one of those addresses a particular operation. indeed, the loadfiles function imports gene expression data and convert them into eset class objects. hence, this function can be used as a standalone importing and conversion mechanism to eset class objects by a user who wishes to engage other packages that use those class objects. similarly, a user may engage the preprocess function to apply at maximum eight different normalization/transformation methods on microarray data and then insert the preprocessed data to another algorithm of statistical inference. in the same way, we may exploit separately each of the available modules. on the other hand, the implemented functions combine a pipeline to assist particularly non-bioinformatician users to run a thorough microarray analysis as we will present in the following section.

RESULTS
we will present an analysis scenario displaying the functional modules of the mapkl  with the aid of the ‘mapkldata’ bioconductor experiment data package . during the development of the mapkl package we also built the mapkldata package as a necessary supplement to display all different functionalities. it provides the gse <dig> dataset, which is available at the ncbi gene expression omnibus and includes gene expression data from a breast cancer study published by turashvili et al.  <cit>  that contains  <dig> samples related to breast cancer , based on affymetrix hg-u133_plus_ <dig> microarray platform.

data import and manipulation
we developed the loadfiles function that takes as input text tab-delimited files and converts them into eset class objects. typically, a gene expression analysis requires a pair of files for training and optionally another pair for validation purposes. each pair includes a file with the gene expressions in a matrix format, where rows represent probe ids and columns represent samples, and a file with the relevant class labels. in our case, the class label file should have a minimum of two columns with headers, for example ‘title’ and ‘type’. in the ‘type’ column we assign the class labels of the samples where ‘0’ stands for control and ‘1’ stands for ‘treatment’ samples. the loadfiles function, supports importing and converting both, training and validation files, in a single command line.

a further data manipulation attribute offered in the mapkl package is the dataset partition into train and validation sets according to a user defined percentage. in particular, the sampling function takes as input an eset class objects describing a cohort of samples and split into separate train and test sets following a user’s predefined percentage. the minimum percentage of samples that might be kept for validation purposes is 10 % and the user is always confident that the function creates stratified sets in relation to their class analogy within the initial dataset. moreover, the samples’ selection follows a random pick based on a pre-defined seed number, which on the one hand guarantees reproducibility while on the other eliminate any bias during the selection. in the current scenario, we loaded the mapkldata, and then with the aid of the sampling function we kept 40 % of the samples for validation purposes, which produced a train set with twelve normal and six tumor samples, and a validation set with eight normal and four disease samples. those scenario steps require the following r commands.library

library

data

breast < − sampling



data normalization and transformation
the package accommodates a practical preprocessing functional unit that supports log <dig> transformation along with four different normalization methods including mean-centering, z-score, quantile and cyclic loess. in particular, the preprocess function produces an s <dig> class object, i.e. a list with maximum nine available options, table  <dig>  as well as a multi-graph image with the density plots of the preprocessed data for each method, fig.  <dig>  hence, the user may proceed with a gene selection analysis for any of the preprocessed gene expression values. in the following section, we run eight different scenarios and assess their classification results before reaching to a decision about the most appropriate normalization scheme for the mapkldata. the following two lines of code apply the described normalization\transformation options instantly to the train and test sets respectively.table  <dig> the available options in the preprocessing functional unit

fig.  <dig> density plots of normalized intensity values

normtraindata < − preprocess

normtestdata < − preprocess



gene selection analysis
the core function of this package is the mapkl that implements the hybrid feature selection methodology. it takes as input an eset class object with the training data and several predefined parameters necessary for the intrinsic statistical analysis and clustering. it may also accept a validation eset object to directly apply on it the results of the map-kl analysis. this function returns an object of ‘mapklres’ s <dig> class where its slots embody the matrix of the top n ranked genes, the clusters and their respective exemplars, the training and validation eset objects of the exemplars, along with statistical information such as p-value, adjusted p-value and fold-change for all genes. in relation to the gene expression analysis of the mapkldata, we carried out eight different map-kl analyses and concluded to eight different subsets of exemplars, which will be assessed for their discrimination power. in the next lines of code, we employ the gene expression values resulted from the cyclic loess normalization on log <dig> transformed data, and then apply the map-kl method. similarly we may engage any preprocessed set of gene expression values and ask for their exemplars.exprs < − normtraindata$cll <dig> normdata

exprs < − normtestdata$cll <dig> normdata

out.cll2 < − mapkl



classification
the following functional module provides classification estimates for the selected genes. in particular, it utilizes the exemplars’ eset objects from the ‘mapklres’ class to run an svm based cross-validation classification test to quantify the discrimination power of the gene exemplars. the necessary parameters for running the svm classifier are computed dynamically with the tune.svm function of the ‘e1071’ r-package  <cit> . the classification measures are calculated through a mapkl’s function called metrics and include the area under the curve , the matthews correlation coefficient , the accuracy , the true negative rate  or specificity and the true positive rate  or sensitivity. this function performs classification through the svm algorithm and produces a classification result either on the training set or on a validation set. during this analysis we assessed the performance on the validation set using the following svm parameters: ‘linear’ kernel and 5-folds cross-validation  and the r command is structured as follows:claspred < − classification.



according to the classification results, table  <dig>  the exemplars’ list produced after log <dig> transformation and cyclic loess normalization achieved the best discrimination results and will be further explored from a pathway and a network-topology perspectives.table  <dig> classification performance of gene exemplars per preprocessing method



gene annotation and pathway analysis
the next functional module exploits the microarray chip annotation file, when available, to collect necessary genome oriented information so as to facilitate other types of genome analysis such as pathway analysis. the ‘annot’ s <dig> class provides slots for gene ‘symbol’, ‘entrezid’, ‘ensembleid’ and chromosomal location info of the exemplars. thus, the user not only has at hand a valid conversion mechanism between probes and genes but also several additional meta-data for other types of analysis like pathway or gene ontology. for this purpose we run as follows the annotate function with the argument ‘chip’ equal to ‘hgu133plus <dig> db’ since this is the relevant microarray chip platform for the mapkldata dataset.gene.info < − annotate



then, we may easily exploit the ‘annot’ class object produced by the annotate function to perform a pathway analysis utilizing the ‘reactome’ pathway database  <cit>  through the probes2pathways function. particularly, we first remove the ‘na’ entries and then map the ‘entrezid’ to the ‘reactome’ pathway identifiers, fig.  <dig>  thus, for any given set of exemplars a user may effortlessly identify the relevant pathways.fig.  <dig> from annotation to pathways. the  <dig> exemplars  match to ten different ‘entrez ids’, which in turn are found to be related to four pathways



network characteristics
the netwattr function deals with the network characteristics of the top n ranked genes but more importantly of the gene exemplars. three different types of centralities  and a measure for clustering coefficient, called transitivity, are estimated with this function. the degree centrality of a node refers to the number of connections or edges of that node to other nodes. the closeness centrality describes the reciprocal accumulated shortest length distance from a node to all other connected nodes. the betweeness centrality depicts the number of times a node intervenes along the shortest path of two other nodes. transitivity measures the degree of nodes to create clusters within a network. for all four network measures we provide both global and local values. moreover, the netwattr provides a weighted edge list  based on the top n ranked genes, as a front end to network and graph packages for further analysis and visualization. particularly, the netwattr function computes the network degree, closeness, betweenness and transitivity. we compose an edge list  based on the top n ranked genes  to interface with other network related r-packages like igraph  <cit>  or with software tools outside the r platform like cytoscape  <cit> . indeed, we plot a network graph to present the relations-connections among the top n ranked genes, fig.  <dig>  through cytoscape. for both significance and illustration purposes we display only the nodes with local weighted degree greater than the global weighted degree plus  <dig> times the standard deviation. the calculations of those network characteristics are based on the “clr”  <cit>  network reconstruction method. however, there are two more available options, including the “aracne.a” and “aracne.m’  <cit>  algorithms. the basic syntax for this function is the following, although some additional r commands are necessary to create the described output values for the graph. details are included in the mapkl’s vignette, net.attr < − netwattr.fig.  <dig> a network graph of the weighted local degree of centrality



report generation
with regard to the report function, the user may produce a summarized report in html format that presents the results in all different stages of analysis. specifically, the first section depicts the samples' names and their respective class labels, the second section presents the exemplars along with their statistical results and network characteristics, the third section deals with the classification results and illustrates the performance metrics achieved in either cross-validation or hold-out validation. finally, the fourth section of this report cites the annotation info per exemplar relevant to the chip technology.

discussion
comparison with other microarray data analysis software
there are several software tools related to differential gene expression and samples classification. all of those tools can be roughly classified based on two criteria; the software technology used and the scope of the analysis they offer. regarding the first criterion, software applications can be further divided into web applications, desktop java applications and r-packages. concerning the second criterion, there are methods for gene selection, for classification of samples, and methods that engage clustering either for gene selection or for unknown samples categorization. mapkl package is the implementation of a hybrid gene selection algorithm under the r/bioconductor framework, which also includes additional functionalities, aiming at providing a thorough gene expression analysis pipeline. in this context, we compared the mapkl package against the r implementations of the feature selection methods included in the previously published map-kl evaluation  <cit>  as well as against other r-packages that offer functionalities related to data sampling, gene selection and classification.

regarding the r-packages included in the following comparisons, there are seven feature selection and five classification software tools. particularly the feature selection packages represent the following feature selection approaches: the ‘edge’  <cit>  package implements the optimal discovery procedure   <cit>  feature selection method, the ‘limma’  <cit>  includes the ebayes  <cit>  approach, the ‘multtest’  <cit>  provides the maxt  <cit>  procedure, the ‘plsgenomics’  <cit>  contain the partial least squares   <cit>  method, the ‘randomforest’  <cit>  implements the rf  <cit>  algorithm, the ‘samr’  <cit>  carries out the significance analysis of microarrays   <cit>  method, and the ‘st’  <cit>  package implements the cat score  <cit> . as far as the classification packages that most resemble to mapkl are the ‘caret’  <cit> , the ‘classifyr’  <cit> , the ‘cma’  <cit> , the ‘mcrestimate’  <cit> , and the ‘mlinterfaces’  <cit> .

firstly, the packages have been compared in terms of several functional criteria, table  <dig>  including ‘data’ manipulation, ‘significance analysis’, ‘classification’, ‘annotation analysis’, computation of ‘network characteristics’ and ‘reporting’. in addition, we have included subcategories in some of those criteria so as to provide an in-depth comparison. thus, the ‘data’ category falls into four subcategories related to functions for data importing, normalization and transformation, dataset sampling, and eset class utilization. regarding the ‘classification’ criterion we have distinguished the prediction results from the available performance metrics.table  <dig> comparison of features between mapkl and other related r-packages



secondly, we employed the mapkldata package to compare the classification performance of mapkl against the other seven feature selection packages. for equality purposes we engaged the same preprocessing approach , and we decided to keep subsets of genes of the same length based on the  <dig> “exemplars” of the mapkl. besides, we utilized the classification function included in our package to evaluate the top- <dig> gene subsets from the other seven approaches, and the classification results are presented in table  <dig> table  <dig> classification performance among feature selection methods for a subset of  <dig> top-ranked genes 



the accumulated comparison results suggest that the mapkl is more than an r implementation of an effective feature selection method or a classification package. it is a complete and comprehensive gene expression analysis package offering a set of functions to assist the genomics researchers to perform a rigorous analysis starting from raw gene expression data and ending to annotated significant genes accompanied with certain evaluation metrics and networking properties, assembling the information in an auto-generated analysis report.

as part of the bioconductor project, the mapkl package is freely available under the gpl- <dig> or later license accompanied with detailed help pages per class and function. besides, an elaborate vignette introduces all available functionalities through a case study scenario that is based on the ‘mapkldata’ bioconductor experiment data package. thus, the user can see both illustrated codes and executed outputs to become easily accustomed to the package. moreover, the bioconductor project guarantees the easy implementation and platform independence, the versioning of the forthcoming package releases and the obliged that the package will be maintained by the author, which includes response to bug reports or queries from other users as well as checking periodically the functionality of the package.

future directions
in relation to the potential expansions of the mapkl package, we intend to include alternative methods for gene selection as well methods related to functional enrichment analysis.

CONCLUSIONS
we have presented an r/bioconductor package named mapkl concerning the implementation of the map-kl method for efficient gene selection from gene expression data. additionally, it incorporates several features including data sampling to create train and validation sets, various preprocessing methods, functions for measuring the classification performance of the selected genes and gene annotation analysis to facilitate other types of analysis like pathway analysis. moreover, it constructs networks based on the top n genes of our methodology and exploits several network characteristics of the ‘exemplars’ to produce graphical representations of the cellular network topology. in general, it is a user friendly r/bioconductor package for gene expression data analysis that includes a comprehensive suite of functions. those functions include default values to facilitate users without advanced computational or statistical background and collaborate smoothly to integrate into a custom analysis pipeline.

availability and requirements
project name: mapkl

project home page: http://www.bioconductor.org/packages/ <dig> /bioc/html/mapkl.html

operating system: platform independent

programming language: r

other requirements:r , biobase

license:gpl 

any restrictions to use by non-academics: none

additional files
additional file 1: 
package ‘mapkl_ <dig> . <dig> tar.gz’ including source code, documentation. 

additional file 2: 
package ‘mapkldata_ <dig> . <dig> tar.gz’ including microarray data and documentation. 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

as analyzed the data. as wrote the paper. as and gs designed the computational pipeline. as wrote the software. gs supervised the project. both authors read and approved the final manuscript.
