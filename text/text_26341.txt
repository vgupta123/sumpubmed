BACKGROUND
the human mitochondrial  dna is a double-stranded circular molecule of  <dig>  base pairs  and consists of two parts: the non-coding displacement loop, also referred to as the control region, and the coding region. the control region is  <dig>  bp in size and encompasses the nucleotide positions   <dig>  to  <dig>  it contains transcription and replication elements. the hypervariable segments hvs i  and hvs ii  within the control region are hotspots for mtdna alterations. the mutation rate of the hypervariable segments is tenfold higher than that of the coding region  <cit> , whose mutation rate is already  <dig> times higher than that of nuclear genomic dna because of the lack of protective histones, inefficient dna repair systems and continuous exposure to mutagenic effects of oxygen radicals generated by oxidative phosphorylation  <cit> . the mtdna coding region, on the other hand, contains  <dig> genes coding for two ribosomal rnas and  <dig> transfer rnas, which are required for intramitochondrial translation, as well as  <dig> polypeptides, which are components of the respiratory chain enzyme complexes in the inner membrane of the mitochondria that are essential in the energy production of the human cell. while most human cells contain two copies of nuclear dna, they may possess up to  <dig>  copies of mtdna  <cit> . the majority of these copies are identical or homoplasmic immediately after birth. somatic mutations will give rise to variant mtdna copies or heteroplasmy over a lifetime, possibly contributing, for example, to the initiation and progression of cancer  <cit> . mutant copies may also be inherited and are known to cause a variety of diseases affecting mostly the energy-hungry cells of the muscles, brain, or nerves  <cit> . the large number of copies and polymorphisms has made mtdna particularly useful in forensics  <cit>  and paleogenetics  <cit>  where the amount of nuclear dna in a sample is limited or degraded. finally, due to its maternal inheritance and the lack of recombination, mtdna provides insights into the maternal history of anatomically modern humans and into the impact of genetic drift, demography and selection on the level, kind and distribution of polymorphism observed in extant mtdna lineages  <cit> . the analysis of mtdna sequence variation is therefore of common interest in medical, forensic and population genetics. re-sequencing of mtdna has been traditionally accomplished by pcr amplification of the mitochondrial genome in approximately  <dig> overlapping fragments followed by uni- or preferentially bidirectional sequencing  <cit> . although modern capillary array sequencers allow the analysis of as many as  <dig>  sequencing reactions or an equivalent of  <dig> mitochondrial genomes per day, the complexity of conventional sequence analysis has spurred the development of novel tools such as the affymetrix oligonucleotide-based array mitochip for the detection of mtdna variation. the first version of mitochip was introduced in  <dig>  it was capable of sequencing the mtdna coding region in a single hybridization after its long-range amplification in three overlapping fragments  <cit> . a more recent version  of mitochip covers in addition the control region. more importantly, it carries probes that match not only a reference mtdna   <cit> ), but also common variants thereof, 99% of which are located in the hypervariable segments of the control region. the mitochip v <dig>  has been applied mainly to the detection of somatic mutations in cancer  <cit> . in addition, it has been used in forensic and population genetic studies  <cit> .

as illustrated in figure 1a, microarray-based re-sequencing is done in a local sequence context. every base of the mt genome is interrogated by hybridization of fluorescent-labeled dna fragments against  <dig> different 25-mer probes forming two probe quartets, one quartet for the light  and one for the heavy  mtdna strand. these probes vary only at their central nucleotide position  to account for the  <dig> possible alleles a, t, c, g or combinations thereof. the  <dig> bases up-and downstream of the variable position match the rcrs  <cit> . they constitute the local sequence background for hybridization. polymorphisms within the flanking nps compromise hybridization. due to the high mutation rate, multiple polymorphic sites within a window of  <dig> nps are more frequent in the hypervariable than the control and coding regions. to address the problem of compromised hybridization, the mitochip v <dig>  carries additional alternative probes that match not only the rcrs, but also common variants thereof. the mitochip v <dig>  systematically probes for known hybridization context alternatives including insertions, deletions, and closely spaced single nucleotide polymorphisms. these additional probes embed their middle position not into the context of the reference sequence, but into the context of known variants using alternative flanking probe sequences. figure  <dig> illustrates the number of different contexts, available for each position that is covered by at least one additional context.

the alternative context probes, however, have been mostly ignored to date in studies employing the mitochip v <dig>   <cit> . this has been due to the lack of software for the automated analysis of multiple local context probe data.

resequencing analysis of mt genomes operates in two modes: in the qualitative mode, a genotype, namely a, c, g, t, ac, ag, at, cg, ct, gt, acg, act, agt, cgt, acgt or n, is called for each nucleotide position . in the quantitative mode, allele proportions are determined in case of heteroplasmic nps. the challenge in both modes is to improve the analysis by using alternative local context probe information.

for nuclear dna, two software tools, namely the ratools and the affymetrix genechip sequence analysis software , are used to call bases from hybridization signal intensities. both are based on the abacus algorithm  <cit> . position by position, abacus screens a sequence of fluorescence intensities and calculates likelihoods for each base independently for both the forward and the reverse strand. for haploid data, five possible calls  are examined. for diploid data  <dig> possible diploid calls  are considered in addition. the pixel intensities within a probe are modeled as independent random variables with a common mean and variance. means and variances are estimated by maximum likelihood. forward and reverse strand information is combined by adding the respective likelihoods. a base call is issued if the difference between the two highest log likelihoods exceeds a given quality score threshold . otherwise the letter 'n' is introduced into the sequence indicating that no conclusive evidence is available for this position.

abacus can be run in two modes to infer the genotype: the haploid mode only calls the four bases a, c, g, t or the letter n. it assumes the genotype to be homozygous, respectively in the case of mtdna homoplasmic. the diploid mode calls all unsorted pairs of bases. thus it detects both homozygous  as well as heterozygous  genotypes. note that abacus is designed for genotyping nuclear dna, where heterozygous positions consist of two alleles present at a ratio of 1: <dig>  for mtdna the situation is different: as a cell may hold up to  <dig>  mt genomes, allele proportions at a heteroplasmic site may vary over a wide range and even comprise more than two alleles, albeit rarely. nevertheless, due to the lack of alternatives the abacus algorithm has been established as a quasi-standard for mitochip base calling  <cit>  propose algorithms building on the output of abacus for the detection of heteroplasmy in mtdna ignoring alternative context probes.

here we focus on using the alternative context probes arrayed onto the mitochip v <dig> . we introduce reseqchip, a novel, free and open source software implemented in perl that exploits data from these alternative local mt genome context probes in the automated consolidation of base calls. reseqchip does not use raw intensities as input but base calls for alternative local background probes. ideally, intensities are strongest and likelihoods are highest for the correct base with a clear gap to the runner-up. this is typically observed, if the individual sequence matches the reference sequence both to the left and the right of the base in question in a window of 25-bases in total . however, local accumulation of polymorphic sites around the base in question compromises hybridization signals.

mismatches between the individual sequence and the probe sequence on the array are no longer restricted to the middle base but also occur in the flanking regions. intensities do not only become weaker, they are also often more uniformly distributed across the four bases, resulting in many n-calls. reseqchip consolidates these calls. it improves both sensitivity and accuracy compared to applying abacus alone.

implementation
algorithm
input of reseqchip are base calls from one of the two abacus implementations gseq or ratools . the program accepts fasta formated base caller output files for one or a series of chip experiments. base calls need to be provided for the reference context as well as all additional contexts. in case of multiple local context probes for the same position the basecallers provide separate calls for each context. our algorithm aims at identifying the best matching context. we do this indirectly by excluding those probes that appear inadequate. note, that if a local background is inadequate for a certain position, it will also be inadequate for neighboring positions. hence, an indication of inadequacy is the accumulation of n-calls. we investigate calls in neighborhoods of length k around each sequence position and in each available context. figure 1b gives an example. in addition to calls obtained using the reference sequence context , base calls obtained from  <dig> alternative local context probes  are available. note that these alternatives can be related to sequence variants resulting not only from single-base substitutions, but also from insertions or deletions. for the latter, gaps need to be introduced to align homologous sequence positions. the row referring to the current sequence position in the re-sequencing run is highlighted in grey. neighborhoods of size k =  <dig>  are shown as black letters. for probe filtering, the parameter maxn is introduced, i.e. the maximum number of n-calls allowed within the neighborhood. all sequence calls exceeding maxn are then excluded from further analysis. in the example, maxn was set at  <dig>  hence only probes producing no n-calls were chosen. they are indicated by stars. in case the calls for the grey row are widely identical across the filtered columns, the actual call is based on majority voting. more precisely, we introduce the additional parameters minp and minu. if more than minp probes remain after filtering and more than minu percent call the base x, where x is the most frequently called base, then x is included in the final sequence, otherwise the letter n. high values for minp ensure robust base calls, while high values for minu ensure a strong majority vote. in the example, minp was set to  <dig>  hence the  <dig> probes remaining after filtering are sufficient for base calling. moreover, minu was set to 50% in the example. since  <dig> out of  <dig> probes call the base, reseqchip detects the insertion. reseqchip is implemented in perl and accepts a fasta formated file that constitutes the base calls for one or a series of chip experiments as the output of the base caller. base calls have to be provided for the genotypes with respect to the reference context as well as the additional contexts. the optimal parameter settings derived from the parameter training  are provided in a separate parameter file  that can be used in conjunction with the test script . it allows the user to choose a threshold for the maximum number of n-calls per  <dig> nps or to define an own parameter set.

parameter calibration
reseqchip operates on a number of parameters that need to be jointly calibrated. we use training data of known genotype  and run reseqchip on it. we judge parameter dependent performance based on:

 <dig>  dn - the number of discordant base calls between reseqchip and the gold standard

 <dig>  nc - the number of n-calls

there is a trade-off between dn and nc. small dc values lead to high nc values and vice versa. we use a grid of values for one measure and minimize the second measure given the former. the user can then specify the maximal number of n-calls and reseqchip runs with parameters minimizing the number of discordant call given the user specified restraint on the n-calls. vice versa, the user can set a restraint on dc and receives parameters minimizing nc. we let the grid values of both nc and dc vary from  <dig> to  <dig> in steps of  <dig> .

RESULTS
mitochip v <dig> 
we have applied reseqchip to data from the mitochip , a  <dig> kb oligonucleotide array. the array queries  <dig>  nps of the mt genome  <cit>  in  <dig>  ) different, unique contexts, with each context is represented by two probe quartets, one each for the forward and reverse strand, respectively. each probe quartet consits of one probe that matches the sequence perfectly  and three mismatched probes  for the three alternative alleles. there are  <dig>   redundant probes that serve as internal controls of hybridization reproducibility and provide  <dig> to  <dig> fold redundancy. that is, the array carries  <dig>  probe quartets querying both rcrs  <cit>  and common variants  <cit>  thereof . the numbers of interrogated variants, regardless of their contexts are summarized in table  <dig>  these variants cover  <dig> different nps.

number of probe quartets , unique pqs discerning  and not discerning  the probes representing the pm and the three mms that match the rcrs and variations of them, respectively.

number of variations that are interrogated by the mitochip v <dig>  additional probes.

dna samples and chip experiments
 <dig> mt genome sequences were analyzed using conventional dye-terminator sequencing as well as mitochip v <dig>  resequencing. dye-terminator sequences constituted the gold standard that we aimed to recover using mitochip v <dig>  data. among these sequences,  <dig> were sequenced completely and had been reported previously  <cit> , while  <dig> were analyzed only with respect to the hvs i and ii. in addition, pseudo-heteroplasmatic samples were generated for  <dig> mt genomes by mixing dna at a ratio of 1: <dig>  all pairwise combinations of mixed dna where generated in two disjoint groups of  <dig> and  <dig> individuals resulting in  <dig> and  <dig> controlled heteroplasmic samples, respectively. for these individuals gold standard sequences by dye-terminator sequencing using a published protocol  <cit>  were available. combining this data with the mixing protocols yielded gold standard genotypes for the artificial heteroplasmic sites. in total we analyzed  <dig> genomes, whereof  <dig> were artificial mixtures. this data harbored  <dig> variants at  <dig> nps, from which  <dig> were triallelic. five of the variants were insertions,  <dig> were deletions. the total numbers of variable sites were  <dig>   <dig> and  <dig> for substitutions, insertions and deletions, respectively. the artificially created mixtures contained  <dig> single nucleotide substitution and  <dig> insertion type heteroplasmies at  <dig> variable sites. the polymorphic sites as discovered by dye-terminator sequencing are summarized in table  <dig>  for every genome we generated base calls with gseq for quality threshold  values of  <dig> , <dig> and  <dig> using both haploid and diploid settings.

number of nps involved in the training and test data w/o and with  insertions.

relevant for our analysis were only those nps, that were interrogated by at least one alternative local context probe set. there were a total of  <dig> nps that met this criterion. twenty additional nps cover insertions. in total  <dig>  probe quartets interrogated these  <dig> positions, whereof  <dig>  were unique. on average about  <dig> different contexts were assigned to each of the  <dig> position. since the  <dig> contiguous nps around the center of figure  <dig> were covered by only one additional context and probes only for less than  <dig> % of the contexts, we excluded these positions and restricted our further analysis to the remaining  <dig>  nps. we further excluded nps 107- <dig> of the rcrs owing to persistent wrong hybridization signal, resulting from a repetitive sequence pattern, which reduced the total number of positions to  <dig> . we randomly selected  <dig> samples to form a training set for calibrating parameters and collected the remaining  <dig> for evaluating genotyping performance. the total number of positions involved in the training and testing process and the number of variants and variable sites are listed in tables  <dig> and  <dig> 

number of variable sites in the dataset are listed and stratified by type of variation and homoplas-mic/heteroplasmic state. 

parameter calibration
we ran reseqchip on the training data for various parameter constellations. discrepancies between mitochip and the gold standard were considered array-based sequencing errors and nps, for which no call had been generated were counted as n-calls. let dc be the number of sequencing errors and nc the number of n-calls. the goal was to keep both measures small. reseqchip builds on the base calls generated by gseq, which depend on the quality threshold qt. hence qt is an additional parameter that needs to be jointly calibrated with the reseqchip internal parameters. we repeated our analysis using a range of discrete qt values . moreover, we varied the four reseqchip intrinsic parameters, namely the neighborhood size , the maximal number of n-calls for probe filtering , the minimal number of high quality probes , and the uniqueness threshold . in total,  <dig>  parameter combinations were tested. the challenge was to jointly tune this set of parameters so that acceptable performances were obtained for both, the number of n-calls and sequencing errors.

parameter testing
note that the performances indicated by the red dots in figure  <dig> are training set performances. they might be overoptimistic estimates of performance for independent data sets. we evaluated the performance of reseqchip on independent data using the optimal parameter settings derived from the training data. figure  <dig> shows for substitutions/deletions only the results that were obtained applying the various parameter constellations to the test sets for the haploid and the diploid model, respectively. the circles and triangles display the average numbers of discordant  and noncalled  bases normalized to  <dig> nps that were observed upon inclusion  and exclusion, respectively, of the local context probes applying primary base calls only generated by gseq for qt values of  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  evidently, reseqchip reduces considerably both the number of sequencing errors and the number of n-calls in comparison to a sequence assembly ignoring the alternative local context probes.

discussion
reseqchip allows for the automated consolidation of multiple base calls from alternative local mt genome context probes into a single call, thereby improving the accuracy of mt genome resequencing, while simultaneously reducing the number of n-calls. based on primary base calls only, it shall be feasible to use reseqchip with any base calling algorithm and re-sequencing array carrying multiple local context probes. however, this remains to be demonstrated.

exemplified by the mitochip v <dig>  and the gseq basecaller, we demonstrated that an additional sequence consolidation step for analyzing the additional base calls using reseqchip improved both the accuracy and the call rate. interestingly, almost all optimal parameter constellations incorporate a qt value of  <dig>  this indicates that the algorithm performs best with a low number of n-calls, which in turn gives a reasonable number of possibly conflicting local contexts that can be evaluated. vice versa, a sequence assembly based on less but more accurate base calls is inferior.

despite the improvements in call rate and accuracy achieved by means of reseqchip, it seems impossible to achieve call rates similar to those of conventional sequencing at equal accuracy for at least two reasons: first, array-based resequencing is facing inherent difficulties with respect to variability of the target sequence. there are almost always individual target sequences that do not match some contexts well. secondly, the principles underlying the hybridization of target sequences to surface-attached probes are still not completely understood. though discrimination between signal intensities of pm and mm in dna/dna hybridization is relatively precise, some pm and mm probes show an unfavorable relation between their signal intensities. this is in particular due to base composition of probe sequence, neighboring bases of pm and mm, and the mm itself  <cit> . this implies, however, if several probe quartets probing the same or a slightly different local context yield primary base calls that are persistently wrong, then also the consensus call calculated by reseqchip is wrong. that contributes to the fact that the number of n- and discordant calls cannot become zero.

our results also show that base calls generated in a diploid model give less accurate calls and more n-calls. for this reason, we have also not pursued allele ratios other than 1: <dig>  as it is obvious that accuracy will decrease with decreasing frequency of the variant allele. we believe that this limitation can be approached only at the level of the basecaller.

CONCLUSIONS
we provide reseqchip, a freely available software for the automated generation of consensus base calls from resequencing arrays that carry multiple local context probes on the mitochip v <dig> . reseqchip processes both homozygous  as well as heterozygous  base calls of many chips, hence enabling high-throughput generation of sequence data. reseqchip significantly improves both accuracy and call rate.

availability and requirements
project name: reseqchip

project home page: the project is part of the live branch of the bioperl project : http://code.open-bio.org/svnweb/index.cgi/bioperl/browse/bioperl-live/trunk/bio/microarray/tools/

availability: the bioperl live distribution can be downloaded via anonymous svn checkout: svn co svn://code.open-bio.org/bioperl/bioperl-live/trunk bioperl-live

the module path for reseqchip is bio/microarray/tools. a test script  together with test data and optimized parameter set are provided in separate files. the latter files reside in t/data/and carry the prefix "reseqchip ".

operating systems: cross platform

programming language: perl

other requirements: perl interpreter, bioperl  <dig>  or higher, statistics-frequency- <dig>  from cpan http://search.cpan.org/dist/statistics-frequency/

license: gnu gpl

authors' contributions
critical revision of the manuscript for important intellectual input: rs and pjo. technical and material support: hn and wp. study supervision: pjo. study concept and design: pjo and rs. software development: mt. analysis of data and data interpretation: mt, cl, rs, pjo. drafting of the manuscript: mt. all authors read and approved the final manuscript.

supplementary material
additional file 1
optimal parameter settings. a csv file listing the optimal parameter settings obtained from the training for haploid/diploid model and single base substitutions-deletions/insertions variants.

click here for file

 acknowledgements
mt, cl, rs and pjo are supported by the bavarian genome research network . in addition, mt and pjo acknowledge support from the national institutes of health . wp recieved support from the austrian fwf translational research programme . we thank barbara herte for dye-terminator sequencing and long-range pcr amplification of mt dna. gabriela huber, bettina zimmermann and liane fendt  are acknowledged for full mtdna sequence analysis. mitochip v <dig>  array analysis was performed by the center of excellence for fluorescent bioanalytics  at the university of regensburg. we thank michael wulfert  for providing dna material.
