BACKGROUND
antigen presenting cells  present peptides via their major histocompatibility complex  to t cell receptors  of t cells which play an essential role in the adaptive immune system  <cit> . before any recognition between t cell and apc can take place the peptides need to be processed within the apc and afterwards presented in a stable way on the cell surface of the apc. for most of these steps ample prediction methods exist  <cit> . in this context the binding prediction between mhc and the presented peptides is usually referred as t cell epitope prediction. in a usual workflow one wants to test different peptides or even possible fragments of a whole protein for its binding affinity to a given mhc. after this rough pre-selection step the most promising candidates are then tested in wet-lab experiments for their definitive binding affinity and applicability. the success rate of these approaches is discussed abundantly in the literature: while it is known that there is still much space for improvement of b cell epitope prediction methods  <cit>  and that mhc class i t cell epitope prediction works quite well  <cit> , the opinions on the success of mhc class ii t cell epitope prediction differ. various reviews conclude that it lacks reliability  <cit> , though others are more enthusiastic about the results obtainable with mhc class ii prediction tools  <cit> .

while most methods are sequence-based and it is generally believed that sequence-based approaches are more successful  <cit> , there were also some structure-based approaches reported  <cit> . they range from molecular dynamics  methods  <cit>  over quantitative structure-activity relationship   <cit>  methods to empirical scoring methods  <cit> .

by contrast, when asking the question vice versa the scientific challenge changes: one does not want to test a specific set of peptides for their binding affinities, but knows a specific mhc allele and wants to determine a set of peptides which have a very high binding affinity to this mhc allele. applications could be found for example in peptide immunotherapy , in allergy  <cit> , cancer therapy  <cit> , or peptide vaccines  <cit>  by indentifying altered peptide ligands with favourable properties for the respective purpose.

given the fact that for mhc class i  <dig> and for mhc class ii  <dig> or even more different peptides exist, it is obvious that not each individual peptide can be tested. this limitation also includes in silico techniques since even if we assume that modern computers can test  <dig> peptides per second it would still take more than  <dig>  <dig> years ) to predict the binding affinity for all theoretically possible peptides binding to one single mhc class i allele. the runtime would further increase if the effect on the interaction between peptide/mhc  and tcr would additionally be predicted.

several approaches to address the challenge of optimization for pmhc/tcr interaction were reported: in early methods alexander et al. employed the main hla-dr anchors to increase the peptide/mhc binding affinity as well as the use of bulky and charged residues to increase t cell recognition  <cit> . shang et al. used computational alanine scanning to indentify hotspots which were then systematically substituted and scored to optimize a tumor immunodominant epitope  <cit> . also for the peptide and mhc interaction several approaches were reported: reche et al. published a webserver for the formulation of multi-epitope vaccines  <cit> . toussaint et al. developed a mathematical framework on the basis of integer linear programming to obtain good candidates for epitope-based vaccines. in this context they define good as a combination of mutation tolerance, allele coverage, antigen coverage, and antigen processing  <cit> . contrary, parker et al. implemented an optimization algorithm to find point mutations to reduce the immunogenicity of a protein while maintaining stability and function  <cit> . lazar et al. presented an optimization approach for antibody humanization  <cit> . bhasin et al. reported quantitative matrices on the basis of binding and non binding peptides sets  <cit> . similarly, in the studies of doytchinova et al. and walshe et al. the preferred amino acids for peptide positions were selected based on experimental data sets. this leads to a set of a few hundred peptides which were then evaluated in silico and experimentally  <cit> . guan et al. reported amino acid descriptors to characterize the interaction between peptide and mhc. on this basis of the defined binding model high-affinity binders were designed  <cit> .

however, in these approaches the search space for optimal binders is frequently reduced by an initial selection of preferred amino acids for several positions. given this limitation and the fact that the total search space would be  <dig> combinations we propose the use of a genetic algorithm  to be able to investigate the whole search space in justifiable runtime. hereby the task reformulates to finding the most efficient and reliable modes of gas. hence, we implemented a framework "peptx" for optimizing gas for the prediction of sets of peptides with high binding affinities within reasonable runtime. by means of the framework "peptx" we evaluated which combination of parameters and operators yields the most rapid convergence of the ga towards a set of high binding affinity peptides.

it is not the major aim of this study to compare different scoring functions since this issue was already addressed several times in the recent literature e.g. mhc class i  <cit>  and mhc class ii  <cit> . even a "machine learning in immunology competition" was organized for this purpose . since there is already a plethora of benchmarks for prediction methods our study is focused on a generalized approach on how to predict huge sets of high affinity binders on the basis of these previously published methods.

methods
we implemented the c++ framework "peptx" for gas to optimize a set of peptides for mhc binding and tested it for hla-a*02: <dig>  we implemented the whole framework in an object-oriented way which makes it easily maintainable and extendable. the workflow of the ga is illustrated in figure  <dig> and described in detail in the subsequent sections.

initialization of random start generation and removal of identical individuals
we generated a random set of peptides as initial generation. each individual consisted of a string of  <dig> characters, each of them representing one position in the peptide. therefore, we randomly selected for each position in the peptide one of the  <dig> essential amino acids. to avoid too dominant individuals  we purged the whole population from identical peptides at each generation. the removed individuals were replaced by new random ones. this purging step ensures that the algorithm will not get stuck in a local optimum and the genetic diversity will remain over the whole runtime of the ga.

fitness evaluation of the individuals
in the next step we assigned a fitness value to each of the peptides by employing a scoring function for peptide/mhc binding. we utilized the following sequence-based scoring functions: immune epitope database   <cit> , syfpeithi  <cit> , svmhc  <cit> , svrmhc  <cit> . additionally, we employed the structure-based scoring function xscore  <cit>  in combination with the threading technique of scatd  <cit>  for the construction of the 3d peptide/mhc model. this combination was found most appropriate for structural peptide/mhc binding predictions  <cit> .

selection of parent individuals
individuals were selected as parents for the next generation based on the previously described fitness evaluation. we implemented  <dig> different selection methods according to the literature which are briefly summarized in the following. for details of the single algorithms we refer to  <cit> :

 <dig>  proportional  selection: to each individual an area on a roulette wheel is assigned depending on its fitness value. individuals with higher value have a higher probability to be selected than individuals with lower fitness value.

 <dig>  linear rank selection: the individuals obtain a rank in correspondence to their fitness value. the selection is performed on the basis of this rank.

 <dig>  binary tournament selection: two randomly selected individuals compete for their selection where the one with the higher fitness value wins without any other stochastic influences.

 <dig>  random selection: the individuals are selected in a completely random way.

 <dig>  best percent selection: the n best percent of the population are chosen straight forwardly.

 <dig>  q-tournament selection: all individuals participate in q tournaments, where the individuals with the most victories are selected.

 <dig>  stochastic universal sampling: similar to the proportional selection, every individual obtains a segment on a roulette wheel according to its fitness value. however, it is turned only one time with n-balls where n is the number of individuals in the population.

recombination  of parent individuals
to recombine the previously selected parent individuals we implemented  <dig> different crossover operators according to  <cit> :

 <dig>  single point crossover: the amino acid sequence of parent  <dig>  and parent  <dig>  are cleaved at one randomly chosen position. the four parts of p <dig> and p <dig> are recombined at the cleavage point in a way that each child contains one part of p <dig> and the other part of p <dig> 

 <dig>  double point crossover: p <dig> and p <dig> are recombined at two randomly chosen positions.

 <dig>  distance bisector crossover: p <dig> and p <dig> are recombined in the middle .

 <dig>  multi point crossover: p <dig> and p <dig> are recombined at r randomly chosen positions where r itself is also a random number .

 <dig>  uniform crossover: related to the multi-point crossover, however, each position within the sequence obtains a randomly assigned probability for recombination. if this probability exceeds a certain threshold, a recombination at this position occurs.

 <dig>  shuffle crossover: similar to the double point crossover p <dig> and p <dig> are recombined at two randomly selected positions. however, before recombination the amino acids are shuffled in both parents. after recombination the amino acids are unshuffled.

mutations in the offspring
to maintain genetic diversity we performed mutations on each offspring generation. for this purpose we implemented  <dig> different operators  <cit> :

 <dig>  "single point amino acid mutation": one amino acid is substituted randomly by another amino acid which belongs to another amino acid class .

 <dig>  "single point nucleobase mutation": a mutation is introduced in the triplet of the genetic code. stop codons are avoided.

we applied the mutation with a probability of 3% for each amino acid position.

stop criterion
although it turned out that the most reasonable combinations of parameters let the ga converge much earlier  we always simulated  <dig> generations, so as to allow for comparability between the different parameterizations.

RESULTS
operators and their combinations
in total we evaluated  <dig> selection operators,  <dig> recombination operators,  <dig> fitness functions, and  <dig> mutation operators in all possible combinations. this yields  <dig>  independent runs of the ga. in each run we calculated  <dig> generations, each generation consisting of  <dig> individuals . therefore, in total we performed  <dig>  <dig>  <dig>  different peptide evaluations. the results are illustrated in figure  <dig> and will be summarized in the subsequent sections grouped by selection operator, recombination operator and scoring function. since figure  <dig> contains a plethora of data we additionally depict several numerical details of these data in additional file  <dig> 

selection operators have a strong influence on the convergence
it can be seen that most operator combinations work well and converge within the first  <dig> to  <dig> generations. however, there are a few exceptions: obviously, a random selection does not improve fitness in an evolutionary process. we included this operator only as negative control. additionally, the roulette wheel selection operator is, in its basic implementation, not able to generate enough evolutionary pressure to lead the population to convergence. this can be explained by the fact that, in the present setting, the whole roulette wheel was divided into small sections for each individual where the area of the section is proportional to the fitness value. the theoretical maximum for ic <dig> values is at around  <dig>  <dig> while binding peptides usually have ic <dig> values below  <dig>  therefore, the area for a binding individual is not much larger than for non binders closely above  <dig>  these proportions of the roulette wheel seem to hamper the evolutionally pressure on the population. a possibility to improve the performance of the roulette wheel selection operator would be a transformation of the distribution of the ic <dig> values. in contrast, the best percent selection usually converges fastest, however, it seems that the genetic pressure is too strong and the population loses the genetic diversity after reaching a certain optimum and cannot deal with the random mutations and removal of identical individuals anymore. therefore, after a very fast convergence of the best percent selection between generation  <dig> and  <dig> the results are becoming worse between generations  <dig> and  <dig>  quite good results are usually achieved by the tournament selection operators. although they are converging slightly slower than the best percent selection, they reach a better and more stable optimum.

recombination operators have minor influence on the convergence
the influence of recombination operators on the convergence of the population is limited. the results strongly depend on the interaction with the selection operator. there are examples for a good convergence as well for a bad one for nearly each of the recombination operators. the only exception is the distance bisector cross over whose convergence is never among the top performers. this result was to be expected since if the peptide is always cleaved exactly in the middle it takes much longer to find the global optimum.

different mutation operators did not have a significant influence on the population
the usage of "single point amino acid mutation" versus "single point nucleobase mutation" method did not influence the convergence of the populations. operators converging with the "single point amino acid mutation" did also converge with the "single point nucleobase mutation". the same also applies for non converging operators. hence, we show only the data for the "single point amino acid mutation" in figure  <dig> 

different scoring functions lead to diverse sets of optimized peptides
the most severe influence is created by the scoring function used for the calculation of the fitness values. although it is not purposeful to compare the convergence between different scoring functions, it is interesting to investigate individuals which are predicted as optimal for hla-a*02: <dig> by different scoring functions . in the subsequent paragraphs they are discussed and compared to experimentally known anchor residues determined by falk et al.  <cit> . these residues are described in the syfpeithi  <cit>  database as l or m for position  <dig>  l or v for position  <dig>  and v as auxiliary anchor for position  <dig> 

iedb
at positions  <dig>   <dig>   <dig> and  <dig> the scoring function exhibits a clear preference for one specific amino acid. the preferred residues for the anchor positions  <dig> and  <dig> are in agreement with the experimental data. in contrast, the algorithm also proposed q, a rather polar amino acid, for position  <dig>  furthermore, it is noteworthy that there is a tendency towards amino acids with a higher van-der-waals volume. the consensus sequence would exhibit a volume of  <dig>  <dig> Å <dig> 

syfpeithi
the syfpeithi scoring function tends to prefer small, polar, and apolar amino acids while retaining a rather low background noise. the anchors at positions  <dig>   <dig> and  <dig> are clearly the same as described in the literature, however, this is not surprising since the syfpeithi database is partly based on the data of falk et al.  <cit> . the van-der-waals volume of the consensus sequence is  <dig> Å <dig> 

svrmhc
this scoring function exhibits a rather promiscuous impression. there is no strong preference for a single residue. however, also here l and m are strong at position  <dig> while l and v are present in position  <dig>  besides, most of the remaining top performing residues for position  <dig> fall into the same class as v or l. the van-der-waals volume of the consensus sequence is  <dig>  <dig> Å <dig> 

svmhc
while most of the time the svmhc scoring function prefers one single very dominant amino acid per position, the algorithm shows almost never a clear "second place". one residue dominates and the remaining ones are more or less random. interesting is that at position  <dig>  the algorithm mixes an apolar  residue with a charged one . despite this fact, there arises a pattern, because both amino acids carry aromatic residues that seem to be important for position  <dig> according to svmhc. also the other algorithms, with the exception of syfpeithi, support this preference. the consensus sequence of svmhc matches the experimental anchor residues. however, v at position  <dig> is not present. the van-der-waals volume of the consensus sequence is  <dig>  <dig> Å <dig> 

xscore
xscore shows a strong tendency to assert high scores to big, hydrophobic amino acids. the dominating residue at position  <dig>   <dig>   <dig>   <dig>  and  <dig> is w, whereas at position  <dig> and  <dig> f and y are preferred. the corresponding consensus sequence would be repetitive and the probability of occurrence in the genetic code would be very low. the consensus sequence yields a van-der-waals volume of  <dig>  <dig> Å <dig>  the theoretical maximum  for a nonamer would only be slightly above at  <dig>  <dig> Å <dig>  one explanation for this exceptional behaviour could be the fact that xscore is the only structural scoring function used. results suggest that xscore tries to fill the mhc binding groove as tightly as possible.

comparison of the optimized peptides with public experimental data
one question which arises when having a look at the optimized peptides is: are the predicted peptides related to training sets used by the respective scoring functions? while this is an interesting question, it is hard to give a definitive answer since even if the training data set is given in the publication of the scoring function, it is likely that the scoring function was re-calibrated with new data in the meantime since publication. for this reason we compared the resulting top  <dig> peptides  with the  <dig> experimental peptide binding affinities available from the iedb  <cit> . interestingly, no peptide was identical. only  <dig> peptides had a levenshtein-distance of  <dig>  those  <dig> peptides are experimentally determined high affinity binders. all other peptides are more different from the public data. this would suggest that the scoring functions predict novel peptides by the use of the ga. however, as already mentioned above we cannot guarantee that the scoring functions were not trained on further "private" datasets.

validation of the  <dig> consensus peptides via experimental binding assays
since a validation on the basis of existing public experimental data was not possible we were able to find a co-operation partner who tested our consensus peptides for experimental peptide/mhc binding affinity. this was done at the revision level of the manuscript hence it is evident that the whole prediction was validated.

although at first sight it seemed that the consensus peptides will be difficult to synthesise because of the multiple w and m residues, all peptides could be synthesised experimentally. all  <dig> consensus peptides are high affinity binders. the detailed results are shown in table  <dig> 

the affinities are expressed as ic <dig> values. values below  <dig>  nm are beyond the range of sensitivity of the assay and therefore reported as <  <dig>  nm.

CONCLUSIONS
we developed the framework "peptx" for the evaluation of different operators for gas in the context of peptide/mhc binding optimization. at the current time the focus of this study is mainly on the information theoretical part and may not be directly applicable in the wet-lab e.g. for questions like "what is the set of peptides , that bind an mhc with high affinity". however, in a next step further applications can be found in peptide immunotherapy: one wants to find high affinity binding peptides, but with certain constraints in the sequence to avoid allergic reactions .to be further able to address this issue we evaluated different parameter-sets of genetic algorithms in relation to mhc. on this basis further studies with direct relation to the wet-lab can be carried out.

the work most similar to our study was published by wisniewska and co-workers. they combined an ant colony optimization algorithm with an artificial neural network classifier to iteratively adapt octapeptides for mhc class i stabilization  <cit> . however, to our knowledge our study is the first study which investigates the operators of a ga in relation to maximizing peptide/mhc binding affinity.

on the basis of our study we found two remarkable characteristics in the evolutionary process of the individuals . firstly, it is intriguing that although selection operators have a strong influence on the convergence of the population while recombination operators have only minor influence, most reasonable operator combinations lead to convergence of the population. long before generation  <dig> an optimum for most of the populations is found . the fastest convergence is usually achieved by the best percent selection; however, the tournament selections often provide a slightly better optimized median score. secondly, the most crucial step is the choice of a scoring function appropriate for the particular investigation. all other operators have minor influence on what is finally found optimal for binding to a specific mhc. although there are similarities between the consensus sequences of the scoring functions , one obtains different sets of optimal peptides by each scoring function. hence, choosing a scoring function which is suboptimal for the purpose of the respective study renders almost all other parameters of the ga irrelevant. one should choose the employed scoring function with caution on the basis of previously published benchmarks . however, the ga itself can be utilized with an arbitrary scoring function and the convergence will mainly depend on the parameters evaluated in this study.

the peptx framework is available for download including c++ source code for linux at http://www.meduniwien.ac.at/msi/md/sourcecodes/peptx/peptx.htm the download and usage is for free for academic researchers.

competing interests
the authors declare that they have no competing interests.

authors' contributions
bk designed the study, carried out programming work and drafted the manuscript. vg carried out programming work and helped to draft the manuscript. rr helped in the analysis of data and revised the manuscript critically. ws supervised the research and revised the manuscript critically. all authors read and approved the final manuscript.

supplementary material
additional file 1
numerical details of individual operator combinations. this file contains the numerical details of figure  <dig>  the median value over the first  <dig> generations, the median value over the last  <dig> generations, the maximum median, and the minimum median is shown.

click here for file

 acknowledgements and funding
the authors thank j. sidney for testing the ic <dig> binding affinities of the consensus peptides.

this study was supported by the austrian science fund  and the austrian grid project of the austrian ministry of education, science and culture .
