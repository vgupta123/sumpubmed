BACKGROUND
genetic variations exist in many forms in the human genome. large structural variations such as deletions and duplications are quite common in the human populations, which encompass more base pairs than single nucleotide polymorphisms . among various types of structural variations, copy number variations  often occupy regulatory regions of genes and greatly influence phenotypic traits and disease susceptibility  <cit> . cnv is defined as a dna segment with length more than  <dig> kb and observed with various numbers of copies in the population. a number of cnvs have been known to highly associate with several complex diseases such as hiv infection, autoimmunity, autism, parkinson's, alzheimer's and crohn's disease  <cit> .

the advance of high-throughput array platforms and sequencing technologies enables fast and cost-effective scan of cnvs in genome-wide scale  <cit> . using array comparative genomic hybridization  and next-generation sequencing, a large number of cnvs have been identified in human and other primates  <cit> . in practice, because our human genome is a diploid, most sequencing platforms often report total copy numbers of one individual instead of chromosome-specific copy numbers presented on each of the two homologous chromosomes. for example, suppose there are two diplotype configurations at one cnv locus: 1/ <dig> represents one copy at each of the two chromosomes, and 0/ <dig> indicates a deletion at one chromosome and a duplication at the other. the total copy numbers of these configurations are both experimentally obtained as two, although the underlying mechanisms generating these two configurations are different. nevertheless, determination of chromosome-specific copy numbers is important in the analysis of population genetics and disease association studies. for instance, the power of detecting positive selection and accuracy of measuring linkage disequilibrium  between snps and cnvs can be improved through direct use of chromosome-specific copy numbers  <cit> . moreover, identification of the chromosome-specific copy numbers can even shed light on the age of each cnv  <cit> .

recently, an expectation maximization  algorithm was developed to estimate frequencies of chromosome-specific copy numbers under the assumption of hardy-weinberg equilibrium   <cit> . in reality, the observed allele frequencies do not completely satisfy hwe, because each copy number allele may be sampled more or less in different sequencing projects. in a few occasions, hwe may be even deviated due to directional selection, assortative mating, or migration  <cit> . using b allele frequencies  and log r ratios  provided by snp array platforms, a hidden markov model  was designed for inferring chromosome-specific copy numbers within a parent-offspring family  <cit> . in addition, information of allelic-specific copies at each snp locus  have been also used to indirectly infer chromosome-specific copy numbers  <cit> . however, baf, llr and allelic-specific copies are not always available in each sequencing platform. for example, in next-generation sequencing , snps and cnvs called at these platforms  do not provide such information. moreover, the accuracy of allelic-specific copies is often decreased for higher copies and is worse than that of total copy numbers due to cross-hybridization  <cit> . although traditional haplotype phasing programs  may be used for inferring copy number by encoding bi-allelic cnvs into snp genotypes, this approach is inadequate to infer multi-allelic cnvs  <cit> .

to date, the analysis of ld structure in human genome indicated that many cnvs have strong ld with snps in proximity, probably owing to uneven distribution of recombination hot/cold spots or genetic hitchhiking  <cit> . moreover, a number of cnvs have been shown to be taggable using alleles at flanking snps  <cit> . the ld structure between cnvs and snps implies different chromosome-specific copy numbers often sit at their own background haplotypes, which can be viewed as fingerprints of each copy number. as a consequence, chromosome-specific copy numbers of each individual are inferable by careful analysis of background haplotypes around each cnv. in recent years, several large-scale sequencing projects have constructed complete haplotype and cnv databases across major human populations . integration of these databases may gain insight into the distribution of chromosome-specific copy numbers in human populations.

in this study, we develop new computational models and combinatorial algorithms for inferring chromosome-specific copy numbers by distinguishing background haplotypes of each copy number. two optimization problems are formulated, shown to be np-hard, and solved by approximation or heuristic algorithms. simulation indicates our method is very accurate and is able to outperform existing approach. by testing the program separately for each individual within  <dig> parent-offspring trios, the inferred chromosome-specific copy numbers are highly consistent with the law of mendelian inheritance. the distribution of chromosome-specific copy numbers across three human populations indicate that one copy is the major allele as expected, and zero copy  alleles are much frequent than high copy  alleles.

methods
the haplotypes of  <dig> individuals are downloaded from the phase ii of international hapmap project  <cit> . for the input of unphased genotypes, the haplotypes were inferred via the phase  <cit>  program, which was used by the hapmap project. for high-throughput sequencing data, a number of haplotype assembly tools can also be used to infer the haplotypes  <cit> . the total copy numbers of  <dig>  cnvs typing on the same individuals are retrieved from  <cit> . we extract snps within each cnv as well as snps at flanking regions in our study. we compared the snp distance  with the physical distance  for capturing the extent of ld and found that the ld is more sensitive to physical distance. the simulation results indicated that the accuracy of our algorithm is highest when including snps within one-fold extension of the physical size of each cnv . therefore, the released program will automatically checks the coordinates of cnvs and snps and captures snps within the one-fold extension regions into consideration.

given a set of haplotype pairs and the total copy number for each individual , the chromosome-specific copy number of each haplotype is determined by first solving a variant of max-k-cut problem, which aims to divide background haplotypes into k clusters. then, a variant of constraint satisfaction problem  is solved to assign chromosome-specific copy number to each cluster. finally, these two procedures are repeated for all possible k in order to determine the best solution.

haplotypes clustering via solving constrained max-k-cut problem
through analysis of ld between snps and cnvs, the copy numbers on a cnv are shown to have strong ld with alleles at flanking snps  <cit> . the ld structure implies different chromosome-specific copy numbers tend to sit at their own background haplotypes. we first group haplotypes spanning across each cnv into k clusters  based on their pairwise hamming distance and total copy numbers. note that odd total copy number implies the underlying two chromosome-specific numbers should be different . haplotypes clustered into the same set may represent haplotype background for the same chromosome-specific copy number. the input total copy numbers and haplotypes are formulated into a weighted graph described as following :

 each haplotype is transformed into a vertex.

 the weight of edge between two vertices is the hamming distance between two haplotypes. note that the same haplotype from different individuals are formulated as multiple vertices with zero distance.

 for the haplotype pair with odd total copy number , the edge between them is called hard edge.

 for the other haplotype pairs, the edges between them are called soft edges.

given the above weighted graph with hard and soft edges, these haplotypes are grouped into k clusters by solving a variant of max-k-cut problem . a formal definition of the constrained max-k-cut problem is given below.

problem: constrained max-k-cut
given an undirected weighted graph g =  in which some edges in e are hard and the others are soft, the constrained max-k-cut problem aims to find a partition of vertices in v into k sets  such that the total weight of soft edges across different sets  is maximized, requiring all hard edges must be on the cut.

the original max-k-cut is known to be np-hard  <cit> , which is a special case of this problem when all edges are soft. therefore, the problem of constrained max-k-cut is also np-hard. in order to efficiently solve the constrained max-k-cut problem, we develop a greedy approximation algorithm which explores larger solution space by randomizing non-deterministic steps. the core procedure of this algorithm is given below .

algorithm for constrained max-k-cut
 randomly pick k different vertices as initial elements for each k set .

 without violating the constraint of hard edge, randomly pick a remaining vertex and assign it into the set which maximizes the total weight of soft edges across different sets. this step is repeated until all vertices are assigned.

note that the above procedure involves non-deterministic parts in both steps . therefore, this procedure is repeated ten times to explore larger solution space by trying different initial k vertices in step  <dig> and different order in step  <dig>  the best solution among all trials is outputted as the final solution. the number of repeated iterations is usually a tradeoff between accuracy and efficiency. nevertheless, we found that the randomized approaches on top of the greedy framework requires only few iterations . thus, the implemented can run fast in practice. the following theorem implies that the solution found by this algorithm is quite close to the optimal solution.

theorem  <dig>  the algorithm for constrained max-k-cut is a /-approximation algorithm for k >  <dig> 

proof. without loss of generality, let the order of picking vertices be v <dig>  v <dig>  ⋯, vn. let w denote the total weight of all edges in g and  

then  

let xj be the j-th set of partitioned vertices and  

where  <dig> ≤ m ≤ i -  <dig> ,  <dig> ≤ j ≤ k . then  

suppose cuti <dig> ≥ cuti <dig> ≥ ⋯ ≥ cutik and vi cannot be put into set x <dig> due to the hard-edge constraint. then vi can be put into set x <dig> by the algorithm instead, because the hard edge only appears between haplotype pairs of the same individual. the relation between cutij and wi can be computed as following:  

therefore,  

let c denote the solution from the greedy algorithm and c* be the optimal solution, then  

since w ≥ c*,  

copy number assignment via solving constraint satisfaction problem
after clustering haplotypes into k sets , we then assign k different integers to each set, which correspond to k distinct chromosome-specific copy numbers. for each individual, summation of chromosome-specific copy numbers of each haplotype pair should be equal to his/her total copy number. which can be written as the following constraint:   

where copy and copy are chromosome-specific copy numbers for the i-th individual, and total is his/her total copy number. for the example shown in figure  <dig>  copy+copy =  <dig> for individual  <dig>  note that because all haplotypes have been clustered into the same or different sets, eq  can be rewritten into the following constraint using their set variables xi:   

where xa and xb denote the sets of these two haplotypes after clustering . for each individual, a set of constraints with two variables similar to eq  can be generated by repeating the above formulation ). by assigning distinct integer numbers to these set variables xi, chromosome-specific copy number of each haplotype can then be determined. theoretically, all constraints should be satisfied after the assignment, but practically, not all constraints can be satisfied, because some ambiguous haplotypes may not be the true background of the copy number. in order to satisfy as many constraints as possible, chromosome-specific copy numbers are assigned to each set xi by solving a variant of the constraint satisfaction problem . given a set of two-variable constraints over n variables , the unique max-2-csp problem asks for k unique  integers assigned to each variable which satisfied maximum number of constraints.

problem: unique max-2-csp
given a set of variables x = {x <dig>  x <dig>  ..., xn}, a set of finite integer domains d = { <dig>   <dig>  ..., d}, where d ≥ n -  <dig>  and a set of two-variable constraints c = {c <dig>  c <dig>  ..., cm} with the following form:   

where tl is a non-negative integer. the unique max-2-csp asks for an assignment of n distinct integers in d to x <dig>  x <dig>  ..., xn that maximizes the total number of satisfied constraints in c.

we first prove a problem called binary max-2-csp is np-hard, in which the integer domain d is restricted to { <dig>  1}, and values assigned to different variables in x are allowed to be identical .

then, the unique max-2-csp problem is shown to be np-hard by reduction from binary max-2-csp. the details of these proofs can be found in additional file  <dig>  supplementary material.

theorem  <dig>  unique max-2-csp is np-hard.

in order to solve unique max-2-csp more efficiently, we developed a greedy heuristic algorithm which also explores larger solution space by randomizing non-deterministic steps. let n be the number of individuals and cmax be the maximum possible copy number.

algorithm for unique max-2-csp
for  <dig> ≤ i ≤ n,  <dig> ≤ c ≤ cmax, do step  to step  .

 initially set xi = c.

 randomly pick a constraint {n : xa + xb = t } in which only xa  is assigned, where n is the number of the constraint. if xa  = d, and there are m types of constraints with xa + xb as following: {nj : xa + xb = tj }, where  <dig> ≤ j ≤ m, and n <dig> is maximum in nj, assign xb  = t <dig> - d. repeat this step until there is no constraint in which only one variable is assigned.

 compute the number of satisfied constraints with respect to xi = c.

ideally, once the value of the initial variable xi is assigned , the values of other associated variables can be indirectly determined . however, there could be some conflicting constraints existed . therefore, the possible values of all variables xi are dependent on the order of assignment . in reality, there are more variables and the dependency/conflict relations are more complicated. consequently, we repeat the above procedure ten times to explore different orders of assignments by randomly prioritizing distinct constraints to be satisfied in different rounds. the best solution among all iterations is recorded into the corresponding row in the solution table. note that some variables may have no assignment due to conflicts with previously assigned variables and hence are recorded as - <dig> 

after the above procedure is iterated over possible initial values of all variables, a solution table will be created. each row stands for one assignment corresponding to the initial value of some variable. note that although each row represents a set of possible assignment, the assignment may not satisfy all variables due to the lack of dependency with other variables . therefore, we do step  iteratively using a greedy approach.

 select a row which is not chosen in the solution table with maximum number of satisfied constraints. repeat this row selection until no further constraints can be satisfied. note that the variables assigned in one iteration cannot violate the assignment in previous iteration.

finally, the union of assignments selected by this greedy algorithm is outputted as the solution.

iteration and adjustment
the previous two procedures  are repeated for all possible numbers of clusters k, because the best setting of k can not be known in advance. we try all possible k from two to maximum possible number. for example, if a cnv have total copy number  <dig>   <dig>   <dig> in populations, the maximum possible k is  <dig> since all possible chromosome-specific copy numbers range from  <dig> to  <dig>  we choose the best k with maximum number of satisfied constraints in unique max-2-csp. in practice, the constraints of some individuals may be still unsatisfied after these iterations, because the ambiguous haplotypes, which are not the true background of underlying copy number, may confuse the haplotype clustering. consequently, we adjust the clustering results for these unsatisfied individuals using the following randomized approach :

 randomly pick an individual with haplotypes violating the constraint and enumerate all possible assignments for these two haplotypes such that the constraint can be satisfied.

 for each possible assignment, evaluate the new cut value in the max-k-cut problem and choose the assignment with maximum cut among all possibilities.

 repeat step  and step  for the remaining unsatisfied individuals until all of them are satisfied.

because the order of individuals processed is non-deterministic, we also repeat above procedure ten times and output the best solution among them.

simulation
the simulation of ld and hwe generated two series of copy numbers and snp genotypes from  <dig> individuals. the haplotype phases are inferred via phase  <cit> . the first series of data sets simulate diplotype configurations completely match hwe . the flanking snps are simulated starting from perfect ld . subsequently, the remaining data sets of lower ld are constructed by flipping snp alleles at random. the second set of experiments simulated an imperfect hwe data sets by adding/deleting some copy number alleles from the hwe data sets, which aims to slightly deviate from the expected hwe frequency . the remaining data sets of ld decay are generated in a similar way.

the simulation using copy number on x chromosomes is also adopted. because there is only one x chromosome in each male, the total copy number obtained on x chromosome directly represents the chromosome-specific copy number  <cit> . we use cnvs and haplotypes in x chromosomes of males from the hapmap project during simulation. the total copy numbers at one cnv is simulated by randomly pairing two copy numbers on two different x chromosomes.

in order to compare the accuracy of our algorithm and cnvphaser  <cit> , which outputs posterior probabilities of each copy number, we parsed the output files of cnvphaser and picked up the diplotype configuration with highest probability for each individual. the accuracy of inferred copy number configurations is defined as following:  

where ccorrect is the number of correctly inferred copy number configurations and ctotal is the total number of configurations.

RESULTS
the proposed algorithms have been implemented as a program called cscnphaser, which is available at http://www.cs.ccu.edu.tw/~ythuang/tool/cscnphaser/. we retrieved haplotypes of  <dig> individuals from phase ii of the international hapmap project  <cit> . these individuals include  <dig> trios from the utah, usa region ;  <dig> trios from the yoruba in ibadan, nigeria ;  <dig> unrelated japanese individuals from tokyo, japan ; and  <dig> unrelated han chinese individuals from beijing, china . in addition, total copy numbers at  <dig>  cnvs typing on the same  <dig> individuals are downloaded from  <cit> . we consider haplotypes within the cnv as well as haplotypes at flanking regions, whereas the best length of extended haplotypes is determined by simulation .

simulation on ld decay and hwe
we compared the cnvphaser  <cit>  and our program cscnphaser over two series of data sets with respect to different ld and hwe . although the copy numbers in both experiments almost match the ideal hwe, the slight deviation from hwe is shown by the p values using the chi-square test. the first set of experiments simulated complete hwe, in which the copy alleles in all data sets completely follow the expected frequency . the flanking snp alleles are randomly flipped to decay the ld. figure  <dig> plots the accuracies of cscnphaser and cnvphaser at different degrees of ld under complete hwe. because cscnphaser is designed based on the ld of background haplotypes, the accuracy is decreasing as the background haplotypes are less ld-informative. unexpectedly, we found the accuracy of cnvphaser also deteriorates as ld decays. this is because cnvphaser estimated the combined frequencies of the entire haplotype and copy number to match hwe, which implicitly captured ld in a light way. cscnphaser outperforms cnvphaser as the background haplotypes are more ld-informative, and both accuracies are worse as haplotypes are less informative.

the second set of experiments simulated an imperfect hwe data sets by adding/deleting a few copy number alleles to slightly deviate from the expected hwe frequency . note that the entire allele frequency spectrum is still close to that of hwe. figure  <dig> plots the accuracies of cscnphaser and cnvphaser at different degrees of ld. in high ld, both programs can still achieve high accuracies.

although the major trends are similar to previous experiments, cnvphaser is slightly worse than previous experiment compared with our method, implying it is more sensitive to hwe deviation.

consistency with mendelian inheritance
the developed program is further applied on  <dig>  cnvs on autosomal chromosomes typing over  <dig> hapmap individuals from  <cit> . we discarded cnvs with less than  <dig> snps, because they are less informative about ld. there are  <dig> cnvs used in following experiments. the copy numbers observed among normal individuals should be overwhelmingly inherited from their parents. by running our program separately for each individual within  <dig> parent-offspring trios , correctness of our method can be justified by checking the mendelian consistent rate of inferred chromosome-specific copy numbers within trios  <cit> . more than  <dig> percent of cnvs have mendelian consistent rate larger than  <dig>  . these results indicate that majority of copy numbers inferred by our method is under expectation from the law of mendelian inheritance. the remaining few cnvs might imply novel deletions/duplications or translocation-mediated cnvs  <cit> .

distributions of copy number configurations in human populations
the chromosome-specific copy numbers of  <dig> individuals in ceu, yri, and chb+jbp hapmap panels are inferred by our program in order to investigate the distributions of haplopid and diploid configurations in human populations. figure  <dig> plots the haploid distribution of chromosome-specific copy numbers inferred by our program. our results indicate that one copy on each chromosome is the major allele in the population as expected. zero copy  is the second frequent allele compared with two copies . frequencies of higher chromosome-specific copy numbers are relatively lower. this is not unexpected because multiple duplication events at the same cnv locus are relatively less common.

in the distribution of diploid configurations ), 1/ <dig> configurations are the most frequent form as expected. we observed 0/ <dig> configurations  is the second frequent one. this phenomenon may be explained by the fact that 1/ <dig> and 0/ <dig> configurations contribute equally to gene copy balance in humans. in order to assess the miscalled rates of 1/ <dig> into 0/ <dig> configurations, we conducted a series of simulation experiments of only 1/ <dig> diplotype configurations . because 1/ <dig> configuration is miscalled to 0/ <dig> by cscnphaser only when the background haplotypes are not ld-informative, we investigated the miscalled rates of data sets starting from ld-informative haplotypes down to low-ld ones. specifically, the haplotypes are one-by-one replaced with non-informative haplotypes. figure  <dig> plots the miscalled rates with respect to the percentage of replaced haplotypes. when the majority of haplotypes are ld-informative , the miscalled rate is low . as more haplotypes are replaced with non-informative ones, the miscalled rate goes up as expected.

on the other hand, 0/ <dig> and 0/ <dig> configurations  are more frequent than the remaining duplication forms, probably due to the low frequencies of high-copy alleles. although these distributions are consistent across three hapmap panels, these results could be still biased due to low-ld background of recurrent or translocation-mediated cnvs. therefore, these distributions are for reference only, which require experimental validations before further interpretation.

capability and efficiency
although the maximum copy number in the population is still not clear, it is worth of interest to know the capability and efficiency of both programs for processing data sets with large copy numbers. figure  <dig> plots the average running time of cnvphase and cscnphaser over a range of maximum copy numbers. both programs are able to accept input of up to  <dig> copies. the differences are the running time and memory usage. cnvphaser requires longer time  and more memory  for > <dig> copy numbers, whereas cscnphaser is very fast  and does not consume much memory.

discussion
strength and weakness of ld-based inference
cnvphaser was developed by estimating allele frequencies using hwe, while our cscnphaser investigated the haplotype background of each copy number. although not explicitly stated, we observed cnvphaser implicitly capture background haplotypes in a light way, because the frequencies are estimated over the entire copy number/haplotype combinations. therefore, its accuracy also decreases as ld decays. for cnvs having high ld with flanking snps, our program performs better than cnvphaser. in low ld regions with only 1/ <dig> configurations, we observed that cscnphaser may miscall them as 0/ <dig> configurations. on the other hand, in data sets with mixed configurations , we observed that the miscalled rate is lower, because these data sets contain haplotypes ld-informative of 0/ <dig> configuration, which are used for better distinguishing 1/ <dig> from 0/ <dig> configurations in our algorithm. most common, diallelic cnvs have been found to have strong ld with flanking snps, and most low-frequency cnvs even segregated on specific haplotype background  <cit> . therefore, we anticipate it is useful to look at the haplotype background for inferring copy number of most cnvs.

it should be noted that the ld-based approach is not suitable for recurrent cnvs or translocation-mediated cnvs, in which their background haplotypes are less informative of the copy number. in fact, our simulation on x-chromosome cnvs found two possible recurrent cnvs with lower accuracies compared with other ordinary cnvs . nevertheless, the cnvphaser and our program can work in a hybrid way to overcome the limitation. the ld of snps across the cnv can be computed first. if the ld is low , it might be a clue for not looking into the haplotypes for copy number inference. that is, we can run the cnvphaser but exclude snp genotypes for pure hwe frequency estimation. as for other cnvs with ld-information haplotypes, our program can be used to achieve higher accuracies. with the release of next generation sequencing platforms, snps and cnvs are often collectively called in each sequencing project. and the accuracies of inferring these cnvs can be improved by further looking into the ld background of each copy number.

the average accuracies of  <dig> ordinary cnvs compared with those of two recurrent cnvs.

the copy numbers at  <dig> cnvs on x chromosomes in males. two possible recurrent cnvs are highlighted.

strategies for solving constrained max-k-cut
the original max-k-cut problem can be solved by a randomized algorithm which randomly partition all vertices into k sets. in addition, it can be also solved by a deterministic greedy algorithm which iteratively assigns one vertex into the set that maximizes the cut size. in fact, both algorithms return a good approximate solution within a factor of  of the optimal solution, and the semidefinite-programming  relaxation can achieve a better approximation bound  <cit> . therefore, it is natural to consider the three strategies for solving the constrained version. although not presented in this paper, the random partition method was ever considered but later withdrawn due to the bad accuracies in all experiments. it is because the random partition method simply guess the solution, which can't work in practice although the approximation ratio is theoretically good. the sdp strategy is theoretically sound but the running time is slow in our previous study  <cit> , and the sdp implementation is complex so that the program is often not easily portable to all platforms. on the other hand, the greedy algorithm  can achieve high accuracies and run very fast in all experiments. as a consequence, the greedy solution is taken in order to perform genome-wide experiments with high accuracies and within reasonable period of time.

integration of greedy and randomized approaches
theoretically, the two optimization problems  can be both solved by a deterministic greedy approach or a pure randomized approach . the greedy approach is simple and fast. however, the solution found is often only theoretically sound but not comparable with other heuristic methods in practice. this is due to the fact that the ordinary greedy approach tends to find local optimum solution instead of global optimum solution. on the other hand, the pure randomized  approaches do not have the tendency of finding local optimum solution but requires numerous iterations for finding a good solution. therefore, when solving both algorithms, we used the greedy algorithm as a framework and randomized the non-deterministic steps for searching better solutions. the results showed that the iterations required of this hybrid approach are far less than those of pure randomized approaches, while obtaining better solutions than an ordinary greedy algorithm.

CONCLUSIONS
in this study, we developed new computational models and combinatorial algorithms for inferring chromosome-specific copy numbers by distinguishing their haplotype background. simulation showed that our method is accurate and outperformed existing method as the background haplotypes are ld-informative of the copy numbers. the inferred copy numbers are consistent with mendelian inheritance for 97% of cnvs within parent-offspring trios. the inference of copy numbers in microarray and sequencing platforms are often confounded by a number of different factors. this study showed that integration of haplotypes into copy number estimation is able to improve the accuracies, especially for those cnvs having strong ld with snps.

authors' contributions
yth formulated the two optimization problems. yth and and mhw designed and analyzed the proposed algorithms. yth and mhw conducted experiments and wrote the manuscript. both authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary figure s <dig>  simulation of extended regions to the left or right of a cnv. the results indicate accuracy is highest when the extension is equal to the size of cnv.

click here for file

 additional file 2
supplementary figure s <dig>  an example of the algorithm for solving the constrained max-k-cut problem.

click here for file

 additional file 3
supplementary figure s <dig>  the average accuracies of cscnphaser with respect to different iterations used.

click here for file

 additional file 4
supplementary material. other methods and proofs of theorems in this paper.

click here for file

 acknowledgements
we thank the reviewers for their valuable comments. yao-ting huang and min-han wu were supported in part by nsc grant 98-2621-b-194- <dig> from the national science council, taiwan.
