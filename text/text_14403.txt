BACKGROUND
microsatellites or simple sequence repeats  are small sequence motifs comprising 1– <dig> base pairs  in length that are highly conserved in the genome  <cit> . ssrs are one of the most discriminatively powerful molecular markers because of their co-dominant inheritance, wide genomic distribution, hyper variable, locus specificity, and high reproducibility  <cit> . traditional genomic ssr marker identification that directly isolates these markers from a genome is generally time-consuming and labor-intensive. a new method to isolate ssr markers utilizes a motif search over a database of expressed sequence tags  is generally called the est-ssr marker development. this est-ssr approach is faster, more efficient and more economical than the traditional approach  <cit> .

an est is generated by a single-pass  sequencing of a clone randomly selected from cdna libraries  <cit> . using ests researchers have been able to gather insightful information from their corresponding transcribed genes in various genetic studies, e.g., gene structure identification, alternative splicing detection, and valuable source of est-ssr markers  <cit> . previous studies demonstrated that est-ssr markers are more useful than genomic markers because ests are specifically derived from coding region of genes, which are suitable as functional markers  <cit> . developing good est-ssr markers require high quality ests, but often their qualities vary as shown in many public est databases. the ests from such databases may consist of sequences with low quality, unannotated, and redundant  <cit> .

to improve the biological information of ests both in the yield and quality, multi-step procedure is required to quality control ests , clustering and assembly, match ests to pertinent databases , and annotate the results   <cit> . presently, several bioinformatic tools for ssr marker development are available. these computational tools must be utilized together in a sequential manner as: pre-processing, est clustering, ssr mining and primer designing. no complete bioinformatic pipelines that incorporate these steps into one est-ssr development software suite.

est sequences represent only a short portion of their corresponding mrna . these derived est sequences are error sensitive during their sequencing processes. therefore, the pre-processing step must be carried out to reduce the overall noise in est data in order to improve the efficacy of the subsequent analyses  <cit> . first, short est sequences and unknown nucleotides  greater than 5% of the read length need to be removed  <cit> . a computational tool that can address this problem is, however, not currently available. second, an est may be contaminated with a part of its vector sequences, which must be removed. many software tools were developed to detect and remove such vectors including cross_match  <cit> , lucy <dig>  <cit> , vecscreen  <cit> , vector cleaning  <cit> , and seqclean  <cit> . most of the tools prefer fasta format as their inputs. only few tools accept raw input data in both fasta and trace file formats. seqclean is highly recommended as a standard protocol for removing vectors from ests as well as other genomic sequences from public database  <cit> . finally, any low complexity regions and repetitive elements in the ests could cause false sequence clustering and assembly. thus, these repetitive elements must be masked by a tool such as maskeraid  <cit>  or repeatmasker  <cit> .

ests are highly redundant and they need to be grouped together to reduce redundancy. tgicl is a tool for clustering est sequences based on a stringent pairwise comparison between two input est sequences. the ests in these clusters contain significant common regions and they will be assembled to produce consensus sequences  <cit> . another popular technique is cd-hit-est  <cit>  that first sorts input ests by their lengths. these lengths are used to represent different clusters whose members contain est sequences with high similarity score of sequence alignment. the advantage of cd-hit-est is the ultrahigh speed allowing this technique to handle a dataset with millions of sequences. after the above clustering is done, candidate ssr loci can be identified from the clustered est sequences. many bioinformatic tools were proposed including tandem repeat finder   <cit> , misa  <cit> , ssrfinder  <cit> , ssrit  <cit> , troll  <cit> , sputnik and modified sputnik i  <cit> , modified sputnik ii  <cit> , sciroko  <cit>  and repeatmasker  <cit> . these tools were developed by using different algorithms to look for putative ssr loci.

designing primers for the candidate ssr loci is the final step of est-ssr development. many online and offline primer designing tools are available to predict ssr primers including primer <dig>  <cit> , ssr primer  <cit> , batchprimer <dig>  <cit>  and websat  <cit> . websat and batchprimer <dig> provide automatic primer designing for ssr amplification and validation on web. however, websat restricts the length of input data to  <dig>  characters, while batchprimer <dig> offers an offline version for users to download the software to install on a local server with no restriction on the size of the input  <cit> .

the entire workflow for designing est-ssr primers must utilize various bioinformatic tools. a batch process/workflow for developing large scale est-ssr primers requires these tools to be in one single pipeline yet the data formats shared among these tools may not be fully compatible.

in this work, we developed an efficient web-based est analysis pipeline, called esap plus, to facilitate the batch est-ssr development. esap plus can automatically generate est-ssr primers directly from raw est data. esap plus incorporates bioinformatic scripts and software tools necessary for all four important procedures in the development of est-ssr primers including 1) pre-processing, 2) clustering and assembly, 3) ssr identification and 4) ssr primer design. since different tools may offer varying performance depending on their inputs, esap plus also offers users with different software choices to include in the pipeline during the clustering/assembly and ssr identification steps. esap plus was implemented as a web-based bioinformatic pipeline to reduce problems with complicated installation procedures and storage requirements. est-ssr primer results generated by esap plus are shown and can be download from the web interface with e-mail notification when the automatic task is completed. esap plus can be freely used from http://gbp.kku.ac.th/esap_plus/.

methods
software architecture
esap plus architecture is based on the three-tier architecture model, containing a user interface, processing logic and database tiers. the user interface tier provides graphical interface of esap plus via a familiar web interface, whereas the processing logic tier carries out bioinformatic tasks in the proposed analysis pipeline. we wrote a set of perl and bash shell scripts to string all standalone bioinformatic routines together in the proposed pipeline. mysql server  is used to manage raw est data, intermediate and final output data produced during the automated processing of esap plus. we also keep the reference database required by both repbase  <cit>  and univec  <cit>  in this mysql server. the esap plus web interface was implemented using html, css, php  and java scripts. all three servers, namely web, computation and database servers, run on an ubuntu linux server   intel xeon® cpu x <dig> @  <dig> ghz.

the construction of esap plus automated pipeline
esap plus was constructed to identify ssr markers and design the primers from a large est collection. esap plus includes four main processes to be executed: est pre-processing, est clustering and assembly, ssr identification and ssr primer design . we downloaded and installed standalone version of software tools as well as wrote some shell scripts to handle some tasks as recommended in  <cit>  for these processes. to manage the est-ssr primer design, we wrote nine in-house shell scripts . these shell scripts are controlled by the four main core scripts to automate the whole process.fig.  <dig> esap plus workflow. the system is based on three-tier architecture including user interface, processing logic, and database tier. users can interact with the pipeline via the web interface to submit input data and run the pipeline. processing logic tier consists of multiple tasks which facilitate the analysis of input ests. all data and results from the pipeline are stored in the database tier. users can view and download the stored data though esap plus web interface




est pre-processing
est pre-processing is the first process in the proposed pipeline, developed to screen for high-quality ests. est pre-processing has four sub-processes,  est formatting,  length and %n detection, and est removal,  vector detection and removal and  low-complexity masking. est formatting module is responsible for converting multiple raw data formats and merge them into a text file with multiple fasta entries. a perl script, called xtract.pl, parses raw est input sequences and converts them into a combined fasta text file with a “.txt” extension. the second module takes care of screening high quality est   <cit> . a perl script, called length_n.pl, was written to check the length and number of unknown nucleotides in each est sequence. low quality sequences will be removed. the third module is called vector detection and removal, which we utilize the seqclean software  <cit>  and the ncbi univec database  <cit> . seqclean searches through 3′ or 5′ ends of input est sequences and removes those regions that are highly similar  to vector, adaptor, primer or linker sequences listed in the univec database. the low-complexity masking module identifies repeat sequences and masks them for removal. to do this, we installed repeatmasker  <cit>  and included this utility in our pipeline to check the est sequences from the previous module. repeatmasker uses rmblast  to perform the search against the repbase database  <cit>  for interspersed repeats, repetitive elements and low-complexity dna sequences. repeatmasker provides filtering options to identify repetitive elements by users such as dna source of repbase, masking and repeat options, or user can use default parameter. the default parameter is set dna source as human, masking option as repetitive sequence replaced in lowercase, and repeat option as masked interspersed and simple repeats. the est containing low-complexity region were automatically removed by in-house php script of the pipeline.

est clustering and assembly
high quality est data from the pre-processing stage will be passed to est clustering and assembly stage. in this part, there are two alternative workflows using two different algorithms, including cd-hit-est  <cit>  and tgicl  <cit> . cd-hit-est clusters ests and then chooses nr cluster containing non-redundant est candidates. tgicl produces non-redundant assembled sequences , which are the consensus sequences from both contigs and singletons. the est clustering cutoff parameters of both cd-hit-est and tgicl are adjustable . the resulting non-redundant est candidates from either cd-hit-est or tgicl will be the input of the following ssr mining step.

ssr mining
we offer two different algorithms, namely misa  <cit>  and repeatmasker  <cit>  for the ssr mining step. misa can identify both perfect ssrs and compound ssrs   <cit> . misa provides users to set parameter to identify ssr or use the default parameter of misa as follows: a candidate ssr must have at least six di-nucleotide repeats and five tri-, tetra-, penta- and hexa-nucleotide repeats. we also identify candidate ssrs using the repeatmasker software. the results from both algorithms will be used to design est-ssr primer pairs.

est-ssr primer design
est-ssr sequences obtained from ssr mining of both misa and repeatmasker will be sent to batchprimer <dig>  <cit>  that utilizes primer <dig> core  <cit>  to design primers. to reduce resulting false positive primers, batchprimer <dig> incorporates ssr filtering that uses ssrit algorithm  <cit>  to select high quality template for primer design. batchprimer <dig> provides users to set parameter for ssr screening and primer design or use default parameter. the default cutoff parameter of ssr screening is set to have at least six di-nucleotide repeats and five tri-, tetra-, penta- and hexa-nucleotide repeats. the default parameters of batchprimer <dig> to primer design are set as follows: 150–300 bp product size, with 18–27 bp of primer size, primer temperature minimum at 57 °c and maximum at 63 °c, primer gc% minimum at 50 °c and maximum at 80 °c. the primer design results along with other intermediate results produced by the proposed pipeline will be stored in the esap plus mysql database.

evaluation data sources
a total of  <dig>  ests derived from sugarcane  from  <dig> cdna libraries of sucest project  <cit>  were downloaded from genbank dbest . this est collection was used as raw est input data to evaluate the performance of esap plus. this experiment was conducted using the default parameters of esap plus to design est-ssr primer pairs for sugarcane excepted low-complexity masking step that dna source of repbase as saccharum spp. was used.

esap plus database overview
esap plus allows users to submit raw est data from multiple popular file formats, including “.seq”, “.fasta” and “.txt”, through esap plus web interface. the input file will be submitted to the pipeline, whose name will be automatically converted to a timestamp value. at each computational stage, we append the stage number to the name of each est sequence name. for instance, if the accession number of an est input data as specified after the “>” symbol in the header is abxxxx, the extension “.1” will be appended as “>abxxxx.1” and “>abxxxx.2”, if this file is processed in the second stage. modified est sequences at each stage are stored in the mysql database.

the esap plus mysql database contains the following four interlinked tables: est_user , est_contact , work_queuing  and work_done . to save working space and time to download results, we compress all data  and offer links to download which are valid for one week.

RESULTS
esap plus web interface
the web interface consists of three main sections, home, upload and project. users must first register through esap plus web interface in the home section. this is required so that a secure space will be allocated for the registered user. once logged in, users can upload raw est data using the form in the upload page. when the data is being uploaded, a green bar will indicate the uploading progress . upon completion of data uploading, users can click next button and proceed to the configuration page . the esap plus provides various parameters and software options for users for every step in the pipeline. in particular, we offer different software choices in clustering/assembly  and ssr mining  steps. when the software configuration is done, users can start the automatic process by clicking the run button while the save button is also provided to save the configuration settings. after the completion of the est-ssr primer design, users will be notified by e-mail. figure 2c shows a dashboard view showing all statistics, configuration jobs, running jobs and completed jobs.fig.  <dig> a screenshot of esap plus interface. a upload section: users can upload input data into the pipeline. b software parameters can be configured at all stages of the proposed pipeline. the clustering step provides users to choose between two optional software tools for clustering or/and assembly ests, namely cd-hit-est and tgicl. it also provides two alternatives for mining ssr by using misa or repeatmasker. c user page shows the status of all users’ projects such as configuration jobs, running jobs, and completed jobs




the summary view of esap plus allows users to view results in the user page. all intermediate results produced during the computation are collected in the database and can be downloaded through the web interface  with the pie chart summary report . for est pre-processing, lengths of est sequences along with unknown nucleotides are shown in the table and bar chart . for ssr detection, ssr types, motifs, and repeat numbers are reported. for ssr primer design, the web interface shows the details of ssr motif and ssr length. forward and reverse primers with starting position, primer lengths and sequences are also reported in this section .fig.  <dig> overview of esap plus result page. esap plus offers graphical web interface for users to visualize statistical information during the processing of input ests. a an overview of a project is shown in pie chart. b users can view detailed information such as length and n detection. c types of ssr, ssr motif as well as repeats are reported with detailed information of each ssr primer, e.g., forward and reverse primers, position, expected product size




validation of esap plus workflow
a total of  <dig>  sugarcane ests from  <dig> cdna libraries  <cit>  downloaded from dbest were analyzed by esap plus using the default parameters. these input est sequences are larger than or equal to 100 bp. approximately  <dig>  ests contain more than 5% of unknown nucleotides, which were removed by our workflow . consequently,  <dig>  ests were passed to vector detection and removal stage. at this stage, we found  <dig>  ests contains vectors at the 5′ or 3′ end, and these vectors were removed from the sequences. only  <dig> ests were vector-contaminated in multiple regions of these est sequences, which were automatically deleted . in addition,  <dig>  low-complexity regions in  <dig>  est sequences were masked as indicated by lowercase letters . the est containing low-complexity region were automatically removed.table  <dig> number of intermediate est results at each esap plus major stage




from the est pre-processing step,  <dig>  est sequences were identified as high-quality. then, these high-quality ests were clustered or/and assembled by tgicl or cd-hit-est. with cd-hit-est,  <dig>  high-quality ests were clustered into  <dig>  non-redundant clusters. while tgicl clustered and assemble high-quality ests into  <dig>  assembled sequences  .

during the ssr mining step, in  <dig>  non-redundant clusters by cd-hit-est, a total number of  <dig>  and  <dig>  nr clusters were detected as containing ssr loci by misa and repeatmasker, respectively. in  <dig>  ass by tgicl, a total number of  <dig>  and  <dig>  ass were found to contain ssr loci by misa and repeatmasker, respectively. despite this, in  <dig>  and  <dig>  nr clusters, there were  <dig>  and  <dig>  ssr loci while  <dig>  and  <dig>  ass contain  <dig>  and  <dig>  ssr loci, respectively .

although there are some variations in the distribution of nucleotide repeat types among software sets, trinucleotide repeats were the most abundance of ssr type . from misa detected ssr loci , esap plus successfully designed  <dig>  and  <dig>  ssr primer pairs, respectively. from repeatmasker detected ssr loci , esap plus successfully designed  <dig>  and  <dig>  ssr primer pairs, respectively .

the use of ssr markers developed by esap plus
randomly selected fifteen ssr primer pairs , generated by esap plus, were subjected to ssr amplification reactions by using sugarcane genomic dna as template. all primer pairs successfully amplified ssrs and detected length polymorphism within  <dig> sugarcane cultivars . the polymorphic information content  values ranged from  <dig> - <dig>  . an example of ssr primer pair, namely su <dig>  produced ssr amplicons which their sizes varies between 138-157 bp. the pic of this primer pair was  <dig>  . this result indicated that most of ssr primers produced from esap plus could be used as polymorphic dna markers suitable for sugarcane genetics and breeding studies.

discussion
performance and utility of esap plus
we assessed esap plus using  <dig>  ests. esap plus was able to handle relatively large est data sets. in terms of software features, we compared esap plus with existing three publicly available est analysis workflows  as shown in table  <dig>  esap plus is the only workflow that provides all four important steps, namely the pre-processing, clustering, ssr identification and primer design stages. moreover, esap plus allows users to choose different software during the clustering  and ssr mining  stages. esap plus was designed to automatically process raw est sequences and produce the designed primers via web interface with no limitation on input sizes. we tuned the default parameters throughout the computational pipeline based on the experiment on a large sugarcane est dataset. users can easily adjust most software parameters via the configuration page . users will be notified via e-mail when the analysis is done and the results can be conveniently downloaded from the download page.table  <dig> feature comparisons of publicly available est analysis pipelines




data evaluation and ssr distribution in sugarcane ests
esap plus identified that the sugarcane est sequence data are  <dig> % high quality. we noticed that a choice of software tools during est redundancy removal could be a critical stage. in addition, there are much more differences in the numbers of detected ssr loci between misa’s and repeatmasker’s. a number of ssr loci detected by repeatmasker is three times more than that of misa’s. such differences may greatly be influenced by misa’s detection technique that uses a keyword-tree, while repeatmasker attempts to align possible ssr patterns from repbase with the input est data using smith-waterman algorithm  <cit> . smith-waterman offers more relax condition for repeatmasker to detect more ssr loci than misa’s. during the primer designing stage, we observed that batchpimer <dig> successfully generated more output primer pairs from misa’s detected ssr loci than that of repeatmasker. since batchprimer <dig> performs, by default, ssr filtering prior to designing primers, many ssr loci produced by repeatmasker could be filtered out by batchprimer3’s ssr filtering step.

the trinucleotide repeats were abundant ssr type identified by esap plus. this result is also consistent with the previous sugarcane studies  <cit>  and close evolutionary species such as in maize , rice , sorghum , wheat   <cit>  and barley   <cit> . the most abundant ssr motif was ccg/cgg that is identical with some cereal species such as barley, wheat, maize, oats, rye, rice, and sorghum  <cit> .

CONCLUSIONS
esap plus is an automated pipeline for developing est-ssr primers. esap plus is the most comprehensive and flexible software suite for est-ssr primer development that incorporates all four critical steps, namely, 1) est pre-processing, 2) clustering and assembly, 3) identifying ssr locus and 4) design ssr primers. the proposed pipeline offers users to choose different tools that might be better fit with their input ests for reducing est redundancy and identifying ssr loci. esap plus is capable of handling large scale design of est-ssr primers that is needed in most plant genetics studies and breeding programs.

availability and requirements
project name: esap plus.

project home page: http://gbp.kku.ac.th/esap_plus/.

operating systems: the software is fully tested on ubuntu linux operating system.

programming languages: perl, shell script, php, html, java script

other requirements: apache http server, perl interpreter

license: gnu gpl

any restrictions to use by non-academics: none

the dataset of ests supporting the result of this article was published by sucest projects  <cit>  and it is accessible from the dbest repository, .

additional files

additional file 1: supplementary materials. lists of in-house shell script in esap plus. nine in-house shell scripts including:  est1_formatting.sh,  est2_length_n.sh,  est3_vector.sh,  est4_lowcom.sh,  est5_est_clustering_cdhitest.sh,  est5_est_clustering_tgicl.sh,  est6_ssr_misa.sh,  est6_ssr_repeatmasker.sh, and  est7_primer.sh. format: the above shell scripts were compressed in one zip file. 

 
additional file 2: table s <dig>  a list of  <dig> ssr primers used to amplify dna fragments by pcr reaction with genomic dnas extracted from  <dig> sugarcane cultivars. 

 
additional file 3: figure s <dig>  pcr amplification results of primer su <dig> for  <dig> commercial cultivars of sugarcane . 

 


