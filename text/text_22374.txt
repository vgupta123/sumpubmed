BACKGROUND
many eukaryotic lineages have experienced whole genome duplication  events, including fungi  <cit> , animals  <cit>  and especially flowering plants, where wgds are prevalent  <cit> . over evolutionary time, evidence of wgds is obscured by loss of duplicate genes, gene movement and genome rearrangements. unequal evolutionary rates for different lineages and gene families further complicate this problem, making phylogenetic inferences from distributions of pairwise distances between paralogous genes difficult and occasionally leading to erroneous findings. conservation of collinear gene order  is less subject than sequence conservation to difficulties with phylogenetic inference, and is the basis for the discovery and dating of ancient genomic events where whole genome sequence is available  <cit> .

a typical pipeline for genome structure comparison starts with the enumeration of "synteny blocks" - regions of chromosomes between two or more input genomes that shared a common order of homologous genes and are therefore inferred to be derived from a common ancestor. synteny blocks are often viewed as "diagonals" on a syntenic dot plot, where dots represent putative homologous gene pairs or marker pairs as inferred by sequence similarity .

wgds can present a major challenge for accurately attributing synteny blocks to different evolutionary origins, especially when there are multiple sequential wgd events. in particular, some wgds may be species-specific and others shared by multiple species . in order to automate the classification of different evolutionary origins for sets of syntenic blocks in lineages with a history of wgds, it is essential to identify the relative ages of the wgds and their placement relative to the divergence of the genomes being compared before performing in-depth analyses .

current softwares to identify synteny blocks often uses chaining or clustering of putative homologous gene pairs  <cit> . it is common to then use custom schemes to score each block and apply a cutoff  <cit> . existing methods do not differentiate the evolutionary origin and age of these synteny blocks. however, specification of identity and age is crucial for any downstream evolutionary analysis. these software packages for identifying syntenic blocks will identify some blocks that are derived from shared, ancient whole genome duplications as well as false syntenic regions created by repeats and local gene duplications, creating ambiguity in the identification of true syntenic orthologs.

methods that find syntenic regions between vertebrate genomes often rely on "best-in-genome"  criteria  <cit>  in order to remove noise from the exhaustive enumeration of synteny blocks. this is not appropriate when studying plant or other genomes affected by multiple rounds of polyploidy. the orthologous blocks between two genomes under wgd scenarios can be one-to-many, or many-to-many depending on when the wgd occurred in the evolutionary history of one or both lineages.

there have been ad-hoc rules in pairwise comparisons to extract synteny blocks under the influence of wgds. for example, approaches that find "doubly conserved syntenies"  were extensively used in yeast  <cit>  and fish  <cit>  genomes. the dcs method attempts to find  <dig> chromosomal regions that both match the same single region in the outgroup. however, it is only designed to work with the 2-to- <dig> case and does not deal with hexaploidy, double tetraploidy, or more general n-fold polyploidy. additionally, the dcs method still relies on ad-hoc rules to classify the 2: <dig> pattern. without an explicit optimization objective, the dcs method is not fully reproducible. dcs also requires the sequence of an unduplicated outgroup species, a resource not available in many cases.

to generalize the concept behind dcs, we observe that when aligning two genomes with known polyploidy events in one or both lineages, we often have expectations for the number of subgenomes, or "multiplication level", or "depths"  <cit> . such a priori information can be used as a guide to screen synteny blocks. if we set up an upper bound  for the expected number of subgenomes, the synteny blocks will then "compete" for the specified depths and the identification of synteny blocks will then be selective, excluding weaker matches that are more ancient or simply artifacts. as more flowering plant lineages with complicated polyploidy histories are sequenced, tools to automate the identification of synteny blocks with known evolutionary origins will become valuable to a wider range of researchers.

the algorithm we present here, called quota-align, is a method that screens synteny blocks based on the expected number of subgenomes, effectively eliminating more ancient  or spurious alignments. in its simplest usage, a quota of 1: <dig> between genomes of different species corresponds to orthologous blocks in the traditional sense, i.e. neither of the genomes have duplicated since their divergence  and will contain an approximately 1: <dig> syntenic mapping of genomic regions. in quota-align, the quota constraint is generalized to qx:qy in order to handle lineages with different duplication histories, a case found frequently in flowering plant lineages.

the quota-based screening of synteny blocks is a difficult problem because the goal is to simultaneously maximize synteny blocks' scores on both the x-axis and y-axis in a dot plot  <cit> , where simple sorting along any one axis will not necessarily be optimal on the other axis. even in the case of 1: <dig> quota, the problem is known to be np-hard  <cit> . herein, we show that it is possible to translate the problem into "binary integer programming" , which is well-studied and has efficient software implementations. after converting to a bip problem and solving it, quota-align produces cleaner sets of synteny blocks and eliminates most ambiguous matches.

RESULTS
simulations
for the first test, we simulated genome evolution in silico, and tested whether quota-align is capable of recovering true orthologous anchors between two genomes under the influence of genomic rearrangement events. we start with two genomes a and b with the same gene content x <dig> ... xn where genes xi ≠ xj for all  <dig> ≤ i, j ≤ n, i ≠ j - and simulate evolving genomes as signed permutations of gene symbols. next, we simulated polyploidy events in both genomes such that genome a receives a duplication , and genome b receives a triplication . effectively, each whole genome gets k copies  that is concatenated and treated as one chromosome. additionally, we simulated the following mutational events for a total of n steps: 1) macro-inversions - two breakpoints are randomly selected and the intervening chromosome segment is flipped; 2) gene losses - a randomly chosen gene symbol is deleted from the genome. at each step, we set the two mutation events to have different probabilities of occurring pinversion and ploss, or staying unchanged. true homologous gene pairs between genomes a and b are tracked throughout the simulation and are used as a "gold standard" to evaluate the pairs recovered by quota-align. formally, the recovery rate of true homologs can be calculated:  

we set n =  <dig> and vary ploss and pinversion, to investigate whether quota-align is robust against different levels of genomic mutations. since we know a priori that the quota ratio is 2: <dig>  we used this information to screen the synteny blocks. with this simple simulation, we find that both gene losses and inversions affect the accuracy of quota-align. while inversions have a slightly larger impact on the recovery rate of true homologs , the recovery rate never drops below 80% for large probabilities of pinversion  and ploss .

for each case of varying ploss and pinversion,, we calculate the percentage of true homolog pairs recovered by quota-align .

estimating quota ratios
selection of the quota ratio to use in comparisons of real genomes requires knowledge of the duplication histories of both species. for the identification of purely orthologous blocks between two genomes, x and y, the first value of the quota ratio is the product of all polyploidy events unique to the x lineage since its divergence from the common ancestor of x and y, and the second value is the product of all polyploidy events unique to the y lineage. the quota ratio can be better understood with known polyploidy events mapped onto the species tree .

quota-align can be used to identify paralogous syntenic blocks in addition to orthologous blocks. to identify paralogous blocks, the first and second values of the quota ratio are both multiplied by the product of one or more shared polyploidy events in the common ancestor of x and y. to identify paralogous syntenic blocks within a single genome, both values of the quota ratio are the expected multiplication level minus  <dig> . if the most recent polyploidy within a lineage is genome doubling, every genomic region will match one other region within the same genome , therefore the expected quota is 1: <dig>  if the most recent polyploid event is a genome triplication, every genomic region will match two other regions within the same genome, giving a quota ratio of 2: <dig> 

applications to real data
we performed comparisons among four rosid genomes with a known phylogeny and polyploidy history . these genomes were selected to showcase the various genome comparisons that can benefit from quota-based screening. all four rosid genomes share a common genome triplication event called γ, and in some individual lineages there are subsequent genome doubling events  <cit> . two exemplar cases are provided for screening orthologous and paralogous blocks, illustrating both "one-to-one" and "multiple-to-multiple" scenarios. although examples are taken from plant genome comparisons, the algorithm in quota-align is generic and is not limited to plant genomes. finally, the plant genomes that are used in this study were downloaded from phytozome http://www.phytozome.net, and all analysis results can be reproduced in the coge comparative genomics platform using its tool, synmap .

for each case, summary of blocks before screening is in the first row, and blocks after screening is in the second row. the running time for quota-align is based on a single-threaded  <dig>  ghz intel xeon cpu.

example 1: orthologous blocks between a. thaliana and a. lyrata 
for finding orthologous blocks between a. thaliana and a. lyrata , we first note that there are no genome duplications since their divergence , and therefore we need to enforce the quota ratio of 1: <dig> to identify orthologous syntenic blocks. the noise for this analysis is due to synteny blocks derived from shared wgds prior to their divergence . before quota screening, a total of  <dig> linear constraints are identified in this problem. after the 1: <dig> screening, most synteny blocks from the older wgds are rejected as weaker matches  identifying  <dig> putatively orthologous syntenic blocks. as an independent validation, there were originally two major peaks in the ks distribution and the older ks peak  disappeared after the screening .

example 2: orthologous blocks between arabidopsis  and poplar  
comparison of a. thaliana and poplar illustrates a "multiple-to-multiple" case, i.e. where both genomes have experienced duplications since their divergence . we know a priori that a. thaliana had  <dig> sequential tetraploidies, while poplar had  <dig> tetraploidy since diverging from their most recent common ancestor; therefore the expected quota is  <dig>  a. thaliana regions to  <dig>  poplar regions. after 4: <dig> screening, relics of older wgd events  in their shared lineage are removed, and only putative orthologous blocks are retained. compared to example  <dig>  the higher quota ratio  in this example represents a much looser constraint. therefore more blocks are kept, as also reflected in the smaller number of constraints - in this example there are a total of  <dig> variables, but only  <dig> constraints.

example 3: arabidopsis duplicated blocks 
arabidopsis has undergone three wgd events and traces of these events are evident on the arabidopsis-arabidopsis dot plot  <cit>  . the synteny blocks, if unscreened, will include both recent duplicates  and older duplicates , which are difficult to differentiate. bowers et al.  manually curated a list of arabidopsis blocks involved in the most recent duplication  , applying an implicit rule to always use the higher scoring synteny segments when two synteny segments are conflicting  <cit> . with quota-align, we formulate this rule more explicitly by specifying our quota 1: <dig> when finding synteny blocks within the arabidopsis genome. the final problem contains  <dig> variables and  <dig> constraints. the final blocks we find are mostly consistent with bowers' manually identified blocks and are in agreement with 94% of bowers' data . however, quota-align discovered an additional  <dig> gene pairs that were missed in bowers' data. we further note that some of our additional gene pairs are microrna genes that were only recently added to the latest arabidopsis annotation after bowers' study. in addition, we found two small alpha syntenic blocks that were entirely missed in bowers' curated set of duplicates.

example 4: grape triplicated blocks 
the grapevine genome contains many triplet sets of syntenic regions, suggesting its genome is derived from a triplication   <cit>  . therefore, for each grape region, there are two additional matching grape regions and so we enforce a quota of 2: <dig> in quota-align. the γ event is the only known polyploidy event in the grape lineage, and has very few overlapping blocks. the problem contains  <dig> variables and only  <dig> constraints.

results from the four examples are summarized in table  <dig>  following the quota-based screening, the retained blocks conform more closely to expected ratios. before the screening, there are many overlapping synteny blocks that exceed the expected ratio, ranging from 9% to 76% of the total blocks. after the screening, in all four examples there are fewer than 5% of the genomic regions that exceed the given quota. there are still minimal overlaps after the screening, because of the relaxation of "strict overlapping" with the nm parameter .

discussion
choice of quota
selecting an appropriate quota ratio represents the single most important parameter affecting the outcome of screening syntenic regions. a loose quota  imposes fewer constraints on overlapping syntenic blocks and leads to incomplete screening. an overly stringent  quota, on the other hand, might accidentally remove some relevant synteny blocks, resulting in over-screening. currently, the user must specify the quota ratio used by quota-align; therefore the user must know a priori the polyploidy history of the genomes to be compared.

in cases where the polyploidy history is unknown, one strategy is to use different quota ratios  to screen the synteny blocks and then inspect the dot plot to see if major features are included. to aid the user in selecting the quota correctly, quota-align reports statistics on coverage that can be used by the user to validate the choice of quota. for example, in the sorghum-maize comparison, where maize has a wgd following the divergence of their lineages, a quota ratio of 1: <dig> should be used. using a ratio of 1: <dig> instead only aligns 63% of the maize genome, this low percentage indicates that the user is likely missing one duplicated subgenome. another helpful tip is to color syntenic gene pairs based on their ks values . such visualization can quickly identify shared or independent wgd events, and identify syntenic regions of varied ages.

comparison of quota-based with divergence-based screening
as discussed above, most existing methods for screening syntenic blocks are based on ad-hoc rules. some previous method uses frequency of synonymous substitutions  between syntenic gene pairs to differentiate the age of the blocks  <cit> . ks-based methods are not always effective for distinguishing synteny blocks from different events because: 1) ks-based screening is contingent on multiple genomic events that are separable on the ks distribution; 2) even in cases where different events are separable, ks-based screening still involves an arbitrary cut-off that best separates different events. this is further complicated by large variations of ks distributions derived from a single event, temporally continuous gene duplications, and limited resolution of ks rate estimates over long evolutionary distances.

in contrast, quota-align seeks to maximize the coverage  as well as divergence . this assumption complements the approach of using ks values as the proxies of age of the blocks. for example, the ks distribution for a. thaliana - a. lyrata  clearly shows multiple peaks and a cutoff value at ks ~ <dig>  can be applied in order to select only the orthologous gene pairs that are at lower ks range . in contrast, for the arabidopsis - poplar comparison , the peak in the ks distribution contains a mixture of orthologous and out-paralogous  gene pairs, with no conspicuous "saddle" point to be used as cut-off to select only orthologous blocks . in summary, ks is less effective at discriminating older evolutionary events when they occurred close together in divergence time, or a very long time ago, when synonymous substitutions saturate.

studying genome rearrangement events
with the grimm algorithm  <cit>  and its web-based interface, we can analyze the possible rearrangement scenario between two genomes in an automated fashion. grimm calculates the number of inversions, translocations, chromosome fusions and fissions under a most parsimonious scenario. we further note that such rearrangement analysis is only possible with our screening of synteny blocks since the inclusion of blocks from more ancient genome duplications will confound the actual block order.

for example, with quota-align, we found that there are  <dig> synteny blocks between a. lyrata and a. thaliana . one most parsimonious solution to transform the order of these  <dig> blocks in a. lyrata to the order in a. thaliana involves  <dig> steps - <dig> chromosome fusions,  <dig> translocations and  <dig> inversions. previous results based on the genetic map between a. lyrata and a. thaliana suggested fewer steps:  <dig> fusions,  <dig> translocations and  <dig> inversions  <cit> . clearly the genome sequences offer higher resolutions than marker-based genetic maps, especially for finding small inversions. however, the higher number of rearrangements suggested by quota-align might also be due to relative incompleteness of the current a. lyrata genome assembly. for example, the additional fusion event suggested by quota-align appears to be caused by two large scaffolds that failed to join in the genome assembly.

one limitation of grimm is that it can only solve non-duplicated blocks. the reason for this is that the reconstruction of rearrangement history involving duplicated blocks is difficult algorithmic problem known as the "genome halving" for tetraploid genomes, or "genome aliquoting" for n-fold polyploid genomes  <cit> . these problems remain open and are only solved under strict assumptions. as such, the rearrangement analysis for ratios different than 1: <dig> is currently not supported in quota-align.

scalability
since the binary integer programming is np-hard, the worst-case execution time increases exponentially with larger problem size. the size of the integer programming problem is determined by the number of binary variables  and constraints . however, due to the branch-and-bound and other heuristics employed by the solvers, the average running time is often dependent on the structure of particular data and not entirely predictable. we typically screen < <dig> synteny blocks with the integer solver taking at most a few seconds to solve on a single-threaded  <dig>  ghz intel xeon cpu. in all examples used in the results, the screening step was able to finish within  <dig> second .

quota-align can also handle the multiple alignment format  which is often the direct output from blastz/lastz  <cit> . this allows us to perform synteny block selection on the nucleotide alignment blocks as well. however, it is not yet scalable for the solver to solve the problem instance except for small genomes or chromosome pairs, since blastz output between two large genomes are typically on the order of ~ <dig>  blocks even after chaining , which is prohibitively expensive for integer programming solvers on current computers.

we need to point out that the scalability issue is dependent on the integer solver that we used. we rely on open-source integer solvers  in our program, but faster commercial solvers  could be used when available with only minor modifications to the linear programming interface in quota-align. furthermore, when an exact method is too costly, approximate methods could be applied for dealing with large number of synteny blocks and constraints.

CONCLUSIONS
synteny identification and attribution to specific genomic events in an automated fashion remains a nontrivial task  <cit> . quota-align solves the problem of selecting a subset of synteny blocks by using the expected quota known a priori from the inferred occurrences of past wgd events. this permits the user to identify subset of synteny blocks more relevant to a specific evolutionary event . quota-based screening is a good alternative to the ks-based classification methods and is always superior when multiple genomic events cannot be distinguished by ks.

