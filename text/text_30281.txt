BACKGROUND
chip-seq, which couples chromatin immunoprecipitation with high-throughput sequencing, has enabled researchers to investigate protein-dna binding on a genome-wide scale . chip-seq works by cross-linking dna-protein complexes with formaldehyde followed by fragmentation of the complexes into short stretches of 300– <dig> base pairs . the fragments are then immunoprecipitated with an antibody specific for the protein of interest, such as a transcription factor  or a modified histone, in order to enrich for dna fragments bound by the protein prior to next-generation sequencing . since the fragment is much longer than the specific protein-dna binding site , chip-seq “peaks”, representing areas of enrichment for the bound protein, do not directly allow the exact position of protein-dna binding to be identified.

for this reason, chip-exo, an extension of the basic chip-seq method, aims to remove dna segments that surround the binding site of the protein of interest before ngs adapters are attached in order to characterize the exact binding site of proteins more exactly  <cit> . the protocol for chip-exo is similar to the chip-seq protocol with the key difference that a 5’-3’  exonuclease is employed to trim the dna sequences on each strand to within a few bp of the location at which the protein of interest has been cross-linked to the dna. dna sequences located 3’ to the cross-linking point remain intact and thus can be used to identify the genomic location of the binding event if they are sufficiently long and located in non-repetitive areas of the genome; on the other hand, non-cross-linked nonspecific dna is largely eliminated by the exonuclease treatment, which may contribute towards reducing background noise  <cit> .

the chip-exo methodology allows protein-dna binding interactions to be characterized to a level of detail that was not possible with chip-seq. the cross-linked dna-protein complex protects the 5’ ends of bound dna fragments from exonuclease digestion, with the cleavage occurring about 5– <dig> bp upstream of the cross-linking point  <cit> , allowing tf binding sites be mapped at high resolution . additionally, the morphology of the chip-exo mapped read profiles allows one to discriminate between direct and indirect protein-dna binding interactions. profile-based analysis of chip-exo signals can uncover structural and functional clues about the interaction and cooperative nature of genomic tf binding  <cit> .

despite these advantages, the chip-exo methodology has a number of shortcomings, including the need for high amounts of input dna in order to avoid overamplification artifacts resulting from low amounts of starting dna  <cit> . recently, an adaptation of the chip-exo procedure was introduced with the goal of addressing these short-comings. chip-nexus  involves chromatin immunoprecipitation as with standard chip-seq, but then proceeds to ligate adapters that contain illumina-specific sequences, a bamhi site, and a random barcode arranged in such a way that self-circularization can occur following λ-exonuclease digestion, which places the random barcode directly adjacent to the “stop” nucleotide resulting from the cross-linked protein-dna complex. in comparison to the chip-exo protocol, chip-nexus is more efficient, because for a given fragment only one ligation  is needed. following ligase-mediated circularization, an oligonucleotide with sequence complementary to segment with the bamhi site is added, which enables relinearization of the circles by means of bamhi digestion. finally, pcr amplification is performed with primers that match the illumina sequences of the adapter, followed by single-end illumina sequencing. the random barcode allows multiple reads that correspond to independent molecules but map to the same position to be distinguished from pcr duplicates.

there is currently no software designed specifically for chip-nexus, and the computational analysis in the original publication  <cit>  was performed using a number of scripts for preprocessing and macs <dig>  <cit>  for peak calling, which was designed for chip-seq data and does not take into account the specifics of chip-exo and chip-nexus data. although there are software packages specifically developed for chip-exo data  <cit> , they do not provide solutions for the extensive preprocessing of the data before peak calling, which comprises quality trimming, adapter clipping and mapping. for chip-nexus an additional processing of the mapping has to be performed in order to benefit from the random barcodes. for chip-seq the average fragment length is an important parameter for peak calling and downstream analysis and a number of algorithms for estimation have been developed, e.g. the well known cross-correlation method  <cit> . for chip-exo and chip-nexus the relevant quantity is the average width of the regions that are occupied by the protein of interest, which is different from the average fragment length. we will refer to such regions as protected regions, because they are protected from 5’-3’  exonuclease digestion. a number of methods have been developed to estimate the size of the protected region and to call peaks in chip-exo data  <cit> .

in this work, we present a software package, q-nexus, for the analysis of chip-nexus and chip-exo data. our software implements an all-in-one approach for the preprocessing of chip-nexus reads, a novel method for the estimation of the protected-region width and peak calling that can be applied to chip-nexus as well as chip-exo data. we tested our software on the available chip-nexus data and show that our method for the estimation of protected region width provides unbiased signatures that are homogeneous for biological replicates and specific for individual transcription factors. using the idr framework  <cit> , we show that our method for chip-nexus peak calling outperforms competing methods with respect to the reproducibility of the results. the q-nexus software as well as an associated tutorial is freely available at https://github.com/charite/q.

RESULTS
preprocessing and mapping of chip-nexus reads
in standard chip-seq, multiple reads that map to the same genomic position are usually considered to be duplicates resulting from pcr overamplification during library preparation, and are therefore removed before further analysis. in contrast, in the chip-exo and chip-nexus protocols, exonuclease digests multiple distinct dna fragments up to the identical protein-dna binding site, and therefore reads mapping to the same position are not necessarily pcr duplicated. while chip-exo analysis protocols simply do not remove any reads mapping to the same position, chip-nexus employs a randomized barcode in the adapter in order to allow pcr duplicated reads  to be distinguished from reads originating from distinct molecules . we will refer to reads mapping to the same position as identically mapped  reads. furthermore, we will refer to im reads with identical barcodes as imib reads and to those with unique barcode as imub reads. chip-nexus assumes that identically mapped reads with identical barcode  represent pcr duplicates and only imub are utilized for analysis.

existing tools are not able to process these barcodes in the way that is required by the chip-nexus protocol. in the original publication, a set of scripts was used to process barcodes and prepare the data for peak calling  <cit> . we have therefore implemented a preprocessing routine  that processes raw fastq files by extracting the random barcodes from chip-nexus reads and writes them into the sequence id line for downstream analysis. due to exonuclease digestion a certain proportion of the inserts tend to be very short in size, i.e. shorter than the read length. therefore, adapter clipping is performed. following this, alignment of the preprocessed chip-nexus reads is carried out with an aligner such as bowtie  <cit> . the chip-nexus protocol assumes that reads that are mapped to the same genomic position and have an identical barcode result from pcr duplication artifacts. for such reads only one read is retained. the q-nexus software preprocesses a typical chip-nexus dataset in less than  <dig> minutes, where the runtime primarily depends on the number of raw reads to be processed. we compared the results of our preprocessing to those obtained in the original publication  <cit>  and found comparable numbers of imub reads .
fig.  <dig> overview of the q-nexus preprocessing workflow. during barcode preprocessing, barcode tags are removed. subsequently, adapter sequences are clipped and reads that consist completely of adapter  are removed. the clipped reads are mapped to the reference genome. the random barcode tags allow pcr duplicated reads and imub reads to be distinguished from one another. only one of the two pcr duplicated reads mapping to the same genomic position  is kept, while reads with different random barcodes are allowed to map to the same position


we compared the numbers of imub reads of the original analysis  <cit>  and q-nexus preprocessing. by and large, comparable numbers of reads are mapped. the calculations were performed using four threads on a desktop computer with an intel core i7- <dig> . on average, the q-nexus preprocessing can be performed in less than  <dig> minutes




sequence duplication levels and random barcodes
the complexity of sequencing libraries and pcr overamplification are critical points in virtually all ngs applications  <cit> . in many ngs applications, a diverse library in which any given sequence appears only once in the final data set is considered ideal, and high levels of duplication generally indicate pcr overamplification or other forms of bias. for this reason, software tools such as fastqc  <cit>  have been developed that generate plots showing the proportion of the overall library with a given degree of duplication, where the sequence duplication level refers to the proportion of reads in the given duplication level bin. chip-exo presents a unique challenge to this kind of analysis, because the exonuclease digestion step tends to reduce the overall diversity of starting positions in a library, since distinct starting molecules may be digested down to the same stop position. for this reason, the pile-ups of reads at stop nucleotides cannot be distinguished from pcr duplicated reads. chip-nexus was designed to allow pcr duplicates to be identified based on the random barcode  <cit> .

we developed a bespoke plot that determines the levels of duplication with respect to random barcodes . instead of considering only the levels of identical sequences or identically mapped reads, we also determine the distribution of the levels for imib and imub reads. we applied this procedure to all analyzed datasets . furthermore, we use the various level counts to calculate overall duplication levels for a given sample, defined as the ratio of mapped reads with 5’-end depth >  <dig> to all mapped reads. for chip-nexus, we expect pile-ups of imub reads at stop nucleotides, whereas at background positions we expect imub reads to occur as singletons. therefore, the mean per-position depth of imub reads can be used to assess the quality of enrichment. we calculated these values for all analyzed datasets .
fig.  <dig> duplication levels using random barcodes. a toy example of mapped chip-nexus reads and the corresponding counts for identically mapped reads , identically mapped reads with identical random barcodes , and identically mapped reads with unique random barcodes . the number of horizontal bars for a given level corresponds to the number of reads that have the same level of duplication. additional file 1: figure s <dig> provides a detailed example of how im, imib, and imub reads are defined and calculated. b, c duplication level plots for a dorsal dataset with an overall duplication level of  <dig> % and for a max dataset with an overall duplication level of  <dig> %


the overall duplication levels for im, imib and imub reads were calculated as the proportion of reads with 5’-end depth > <dig> as a share of all reads 




binding characteristics: qfrag length distribution with pseudo-control
for chip-nexus and chip-exo the equivalent of the average fragment length is the width of the regions that are occupied by the protein of interest, which we call “protected-region width”. such regions are about 6– <dig> bp, which is much shorter than typically observed average fragment lengths . here, we present a new method for the estimation of the protected-region width in chip-nexus data that uses the distribution of qfrag  <cit>  lengths. a qfrag is defined to be the genomic interval between any pair of 5’ read mapping positions on the forward and reverse strand. we derive the empirical distribution of qfrag-lengths from data by counting the number of qfrags for given lengths. the qfrag-length with the highest number of observed qfrags can be interpreted as the protected-region width .
fig.  <dig> binding characteristics: qfrag length distribution with pseudo-control. a the 5’-3’  exonuclease is employed to trim the dna sequences of a fragment of length ℓ to within a few bp at which the protein of interest has been bound to the dna. this yields shorter fragments of length ℓ
′ and ℓ
″. the width of the protected region  is given by the distance between two 5’ ends on the forward and reverse strand. b schematic representation of the pseudo-control and the corresponding transformation. for mapping artifacts predominantly to be found on chru and chruextra  and for genuine chip-nexus peaks . the pseudo-control is derived from the original mapping data by swapping the strand of each read and subsequently shifting the 5’ end by one read length towards 5’ direction. for artifacts, this has no effect on the qfrag-length distribution in the pseudo-control. c qfrag-length distribution for original data  and pseudo-control . both distributions are are dominated by the phantom peak at one read length. d we use the difference between the qfrag-length distributions as signature and the maximum at a length of  <dig> as estimate for ℓ
′′′





it is a well known problem that fragment length estimation by the cross-correlation method  <cit>  can demonstrate an artefactual, “phantom” peak that shows the maximum correlation at a length of one read length  <cit> , that is thought to mainly arise from pile-ups of mapped reads that are arranged in a way that 5’ ends on the forward and reverse strand have a distance of one read length . such mapping artifacts are most likely caused by repetitive sequences and for the drosophila experiments analyzed here  they occur predominantly on the chromosomes u and uextra. similar to the cross-correlation plot, we found that the qfrag length distribution can also be affected by phantom peaks; we therefore developed a method that attempts to remove the phantom peak from the qfrag length distribution in order to enable more accurate estimation of the protected-region width. our method generates a “pseudo-control” for each chip-nexus dataset in which the the strands of each mapped read are swapped and subsequently the 5’ end of each read is shifted by one read length towards 5’ end . this transformation has no effect on artifacts responsible for the ’phantom peak’, but it abolishes signals from clusters of qfrags smaller than one read length . therefore, our procedure subtracts the qfrag counts of the pseudo-control from the counts of the original data and uses the resulting difference as an unbiased signature to estimate the mean protected-region width .

evaluation: binding characteristics
we applied the method of plotting the 5’ coverage around motif-centered binding sites  <cit> , the cross-correlation method  <cit> , the internal routines of macs <dig>  <cit>  and mace  <cit>  and our q-nexus method to the ten available chip-nexus datasets and compared the estimated distances . the 5’ coverage around binding sites shows maxima on the forward and reverse strand that have distances between  <dig> and  <dig> bp  that appear to be reasonable from a biological point of view and are in line with former analysis of the same data  <cit> . however, we found that the results were unstable and heavily depend on the motif used for selection and centering, as well as the allowed distance between motif and predicted binding site. using standardized parameter settings the method fails to derive a distinctive distribution in four out of ten cases . the cross-correlation method is obviously strongly biased by the phantom peak and  estimates in all ten cases the read length of  <dig> bp . also the optimal border pair size estimates between of mace highly correlate with the read length, indicating a biased estimation. the predicted fragment lengths of macs <dig> are indeed smaller than the read length but disagree with the distances that result from the 5’ coverage around binding sites. our q-nexus method derives estimates for the protected-region width that are largely consistent with distances derived from the 5’ coverage plots . finally, the derived signatures  are very similar for biological replicates, but specific for individual factors .
fig.  <dig> evaluation: binding characteristics. a, b 5’ end coverage around motif centered predicted binding sites for two biological replicates of dorsal. the two peaks on the forward and reverse strand have a distance of  <dig> bp, which is in line with a previous analysis  <cit>  of the same data. c, d using standardized parameter settings for all samples, no characteristic distribution is derived for tbp. see additional file 1: figure s <dig> for further positive and negative examples. e, f difference of qfrag-length distribution between original datasets and pseudo-controls for dorsal replicates  and filtered for reads that map to standard chromosomes ). the estimated protected-region width of ℓ
′′′= <dig> is consistent with the distance derived by the 5’ end coverage around motif centered binding sites. the signatures are independent of whether mapped reads were filtered or not. furthermore, they are reproducible for biological replicates. g, h additional examples for biological replicates of tbp. the signatures are reproducible for biological replicates, but different from the signatures derived for dorsal. see additional file 1: figure s <dig> for further examples


protected-region width estimates from 5’ coverage around motif centered binding sites, cross-correlation plot, macs <dig>  mace , and the width of the protected region estimated by q-nexus. the estimates derived by q-nexus are consistent with those derived by the method of 5’ coverage around motif centered binding sites




chip-nexus peak calling
we implemented an algorithm for chip-nexus peak calling which builds on the previous preprocessing steps and accepts mapped reads in bam format. since pcr artifacts  are already removed, imub reads are kept, assuming that such reads stem from different molecules because they have different random barcodes. our algorithm  implements the method of qfrag-length distribution with pseudo-control in order to estimate the protected-region width ℓ
′′′, which is then used to combine pairs of 5’ ends on the forward and reverse strand by forming qfrags  <cit>  with a minimal allowed distance q
min=ℓ
′′′− <dig> and a maximal allowed distance of q
max=ℓ
′′′+ <dig>  the qfrag-depth at any one position is the total number of qfrags that cover the position. the qfrag coverage has a different depth distribution than the original coverage of reads or 5’ ends. regions with neighboring clusters of 5’ ends on the forward and reverse strand are selectively emphasized by the qfrag method . the qfrag coverage profile along the genome is searched for local maxima that we refer to as summits that are then tested for significance. for each summit position the number of 5’ ends that map to within a radius of q
max is determined. p-values are calculated using the poisson distribution and corrected for multiple testing using the benjamini-hochberg procedure  <cit> . the final candidate list is sorted by p-value and a cutoff can be specified by the user. our algorithm does not require fine-tuning of parameters for typical runs.
fig.  <dig> chip-nexus peak calling  idealized example of a chip-nexus peak. the protein of interest  is bound via one cross-link to the dna. the 5’ ends are trimmed by exonuclease  up to the cross-link position. 5’ end positions of mapped reads, depicted by red and blue arrows, are transformed to a qfrags coverage profile  along the genome. local maxima within the qfrag coverage are taken as summits. for each summit position s
i the number of 5’ end positions within a range of q
max is determined and tested for statistical significance. b comparison of 5’ end and qfrags coverage profiles for dorsal and twist. 5’ end  and qfrags  coverage profiles at the rho nee enhancer for dorsal and twist . this region is also shown in the original chip-nexus publication  <cit> . regions surrounded by clusters of 5’ends on the forward and reverse strand are selectively emphasized by the qfrag method. the qfrags coverage profiles demonstrate two clearly separated peaks for dorsal and twist




evaluation: reproducibility of peak calling
to evaluate the reproducibility of our peak calling algorithm compared to that of macs <dig> and mace, we used a test framework based on the idr procedure  <cit> , which has been heavily used to measure the reproducibility of chip-seq experiments  <cit>  and should also be applicable to chip-nexus data. we performed the comparisons on pairs of biological replicates for five transcription factors . we derived peak sets for each dataset using the three peak calling algorithms . the peak sets were sorted by significance and the top  <dig>  peaks were used for further analysis. the idr procedure is essentially based on peak overlaps. two predicted binding positions from two biological replicates were classified as overlapping, if they have a distance of at most  <dig> bp, which is reasonable given the high resolution provided by the chip-nexus protocol.
a–e show the results of the idr procedure that were obtained for twist. the top  <dig>  peaks derived by q-nexus display substantial larger overlap compared to macs <dig> and mace . it should also be noted that the pearson correlation coefficients for signal scores of overlapping peaks of mace are very low in comparison to that of q-nexus and macs <dig>  the change of correspondence curve  <cit> , which is used to visualize the transition from reproducible to irreproducible signals, shows that q-nexus identifies the largest number of reproducible peaks before the transition occurs . furthermore, according to the idr, q-nexus identifies the largest number of reproducible peaks . for all pairs of biological replicates tested similar results as for twist were obtained .
fig.  <dig> evaluation: reproducibility of peak calling. a-c we applied the peak calling methods q-nexus, macs <dig>  and mace to a pair of biological replicates of twist. the scatterplots show the scores of overlapping peaks of the top  <dig>  peaks for different methods. the number of overlapping peaks and the pearson correlation coefficient is given in the upper-left corner of each plot. q-nexus yields the largest number of overlapping peaks and correlation coefficients of almost  <dig>  d the change of correspondence curve shows that peaks derived by q-nexus remain consistent for  <dig>  more than those of macs <dig>  e q-nexus displays a considerably smaller proportion of irreproducible signals  than macs <dig>  f, g we obtained similar results for the other chip-nexus datasets of the transcription factors dorsal, max, myc and tbp. for more detailed results see additional file1: figures s <dig> to s16




discussion
chip-nexus is an extension of the chip-exo protocol that was shown to outperform chip-exo with respect to resolution and specificity, and additionally requires less input material  <cit> . however, to date no bespoke software for chip-nexus analysis has been published, and the original analysis of the chip-nexus data was performed using scripts and software such as macs <dig> that was originally designed for chip-seq  <cit> . in this work, we present an efficient and easy to use software pipeline for chip-nexus data that includes methods for preprocessing and mapping of chip-nexus reads, estimation of the protected region width, as well as peak calling. we evaluated our methods on ten publicly available datasets.

one of the major advantages of the chip-nexus protocol is the use of random barcodes that allow monitoring of pcr overamplification. our software recognizes random barcodes and selectively removes pcr duplicated reads while retaining independent reads whose 5’ ends map to same position. additionally, the random barcode information is used to generate a plot for duplication levels and calculate various statistics that can be used for trouble shooting and optimization.

for chip-seq, the size distribution of the fragments needs to be estimated for most peak calling algorithms  <cit> . for chip-nexus, it is not the size of the original fragments that is important, but rather the segment of dna that cannot be digested because of steric interference by the formaldehyde cross-linked protein . we present a method for estimating the average width of the protected region that is based on the notion of qfrags  <cit>  and show that, on the chip-nexus data, it yields unbiased signatures that are not affected by the so-called phantom peak  <cit> , which is not the case for the cross-correlation method developed for chip-seq  <cit> . the estimates of the protected region width are in line with distances that were derived in a previous study of same data  <cit>  using integrated 5’ end coverage plots around predicted and motif-centered sites. notably, our method derives signatures that are highly reproducible for biological replicates and specific for different factors.

we have previously developed a method using “qfrag-analysis” to identify candidate peaks in chip-seq analysis  <cit> . here, we adapted that algorithm for chip-nexus analysis. we adopted the peak detection step using the qfrag coverage depth profile along the genome, but for chip-nexus data we keep duplicated reads, assuming that they originate from different molecules, and form qfrags using the average protected region width instead of fragment length. regions bound by the protein of interest are surrounded by pile-ups of 5’ ends reads mapped to the forward and reverse strand and therefore will be emphasized in the qfrag depth profile. this approach differs from previous published peak pairing methods for chip-exo  <cit> , in which peaks are detected separately for the forward and reverse strand and subsequently combined into pairs. the saturation-based method we presented for the evaluation chip-seq analysis involved a statistical analysis of the number of positions within candidate chip-seq peaks to which one or more 5’ read ends mapped. this approach is less suitable for chip-exo and chip-nexus analysis, in which we expected multiple, independent reads to map to the same position because of the exonuclease digestion. we therefore applied a statistical test based on a standard poisson model of the count distribution. with respect to the idr analysis framework applied to biological replicates, our results showed substantially better reproducibility than the other two methods we tested.

CONCLUSIONS
in this study, we present an integrated analysis pipeline implemented in c++ for the analysis of chip-nexus and chip-exo data. the pipeline begins with efficient methods for preprocessing chip-nexus reads to remove pcr duplicates by exploiting information in the random barcodes included in chip-nexus adapters to recognize pcr duplicates. this step is skipped for chip-exo analysis. we introduce an algorithm that creates pseudo-controls from the data with which true signal can be differentiated from pseudo-peaks, which allows us to accurately estimate the width of the protected region. our method then performs an analysis of the qfrag distribution to center candidate peaks and then performs a statistical analysis of the read depth distribution to identify peaks. we demonstrate that our method displays a higher reproducibility than other approaches to chip-nexus analysis. an efficient and easy-to-use implementation of our method is freely available at https://github.com/charite/q.

