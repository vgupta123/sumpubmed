BACKGROUND
tag-based sequencing strategies such as serial analysis of gene expression  are efficient for analyzing dna fragments in transcriptome characterization and genome annotation studies  <cit> . however, the information content in each sage tag based on an anchored restriction enzyme recognition site within the dna segment is limited, and the mapping of sage tags to genome sequences for transcript identification can be ambiguous. despite the recent improvements in tagging 5' terminal signatures of cdna  <cit>  to determine transcription start sites , the most significant advance in this field is the simultaneous tagging of 5' and 3' terminal signatures of dna fragments subjected to study. in this effort, we first developed an intermediate approach that precisely extracts separate 5' and 3' terminal tags from cdna fragments for sequencing  <cit> . with this new capability, we proceeded to design and develop a cloning strategy, called gene identification signature  analysis, which covalently links the 5' and 3' signatures of each full-length transcript into a paired-end ditag  structure  <cit> . in a gis-pet experiment, most of the pets are 36bp in length ; and multiple pets can be concatenated together to form longer stretches of dna fragments for efficient high-throughput sequencing. an average sequencing read  of a gis-pet library clone can reveal 10– <dig> pet units, which is equivalent to  <dig> conventional cdna sequencing reads for  <dig> cdna clones analyzed from both ends. the pet sequences can then be accurately mapped to the reference genome sequences and precisely demarcate the boundaries of transcription units in the genome landscape. with this combined efficiency and accuracy of gis-pet, a mammalian transcriptome can be thoroughly analyzed using hundreds of thousands high quality transcript sequences by a modest sequencing effort as further demonstrated in the comprehensive characterization of mouse transcriptomes  <cit> . the pet-based dna analysis strategy has also been applied to characterize genomic dna fragments generated by chromatin immunoprecipitation  enriched for specific binding targets by given dna-binding proteins, and whole genome chip-pet data has provided global maps of transcription factor binding sites for p <dig> in the human genome  <cit>  and oct <dig> and nanog in the mouse genome  <cit> . pet-based dna analyses  promise to play a significant role in the post-genome efforts to identify all functional elements in the human genome  <cit> , and there is no inherent limit for the pet-based approach to be applied to other dna analyses, such as analyses of epigenetic elements.

to fully appreciate the potential of pet-based sequencing analyses, we have to develop sophisticated informatics capabilities to manage the large volume of specific pet sequences generated from each of the gis-pet and chip-pet experiments. there is a battery of new bioinformatics challenges around how to accurately identify and extract pet sequences embedded in raw sequence reads, how to specifically and efficiently map the paired 5' and 3' signatures of pet sequences in complex genomes such as the human and mouse genome sequences; and how to be user-friendly in managing the immense amount of data generated from gis-pet and chip-pet experiments for effective data mining and analysis. based on the paired end nature of pet sequences generated from gis-pet and chip-pet experiments, the issues are far more complicated than those related to sage-like mono-tags and therefore can not be handled by available software packages previously developed for sage analysis  <cit> .

to accommodate and process pet sequence data, we developed a complete software suite called pet-tool that is designed to provide complete solutions starting from extracting pet sequences from raw sequencing reads, to mapping the pet sequences to the reference genomes. here in this study, we describe the architecture design, technical details of implementation, utility, and robustness of pet-tool by analyzing four datasets generated from two gis-pet libraries and two chip-pet libraries.

the architecture of pet-tool
pet-tool is designed to provide complete solutions for processing and managing the pet data generated from gis-pet and chip-pet experiments. in these experiments, either full-length cdna or genomic dna enriched by chip are converted into pet structures that are further concatenated and cloned into plasmid vector for sequencing analysis  <cit> . the core functions of the tool are to extract pet sequences from raw dna sequence reads and map the pet sequences to the genome sequences. in addition, we want the tool to be able to manage large volume of pet data generated from each pet experiment and provide user-friendly analytic functions to evaluate the quality of each pet dataset. the design of pet tool is comprised of four modules: extractor, examiner, mapper, and projectmanager . in the pet-tool system, extractor uploads raw sequence files and de-convolutes the pet sequence units embedded in each raw sequence read to generate pet sequences, which are stored in a relational database. examiner provides an analytical capability for users to examine and validate the pet extraction results. it provides the basic statistics of pets in each project, library, and plate of sequences. it also presents graphic dissection for each of the input sequence reads and highlights the sequence sections with various color codes to help users to distinguish vector flanking regions, spacer sequences between pet units, and the pet sequences themselves. this ability allows users to identify any potential irregularities in the sequence, and adjust extraction parameters. the mapper module is to map the quality pet sequences to the corresponding genome sequences. for efficient mapping of large volumes of pet sequences, we used a newly developed alignment approach that was based on compressed suffix array , in which the entire genome sequence assembly was indexed as a reference database, and the 5' and 3' signatures of a pet sequence were matched to the genomic index . the projectmanager module organizes the data and analysis results in a hierarchical order, in which multiple projects can be managed at various levels of organisms, libraries, raw dna sequences , pets, and the attributes of each pet.

implementation
pet-tool is implemented for both unix and linux. the web-based user interface is implemented in perl/cgi and hosted by apache web server. the interface of the tool can be accessed by any web-browser that supports the current web standards.

data storage is facilitated by a combination of flat file system and mysql based relational database management system . the mysql database was used for efficient and fast pet data storage, tracking, retrieving, and interfacing with back-end programs through perl:dbi module. we also applied mysql to host various statistical data and mapping results. flat files were used for storage of uploaded sequence data, with the positional indices of all sequences stored in mysql database for quick sequence retrieval. back-end programs were implemented in perl and c languages. compressed suffix array  programs were implemented in c language for high efficiency and robust performance of advanced data structures. programs for pet sequence extraction, statistic computation, data retrieval/storage, web-interaction and other non-intensive tasks were implemented in perl. minimum hardware requirements include pentium iii processor, cpu of  <dig> mhz,  <dig> mega byte ram, and  <dig> giga-byte hard disk drive. a regular  <dig> mhz machine would take about two days to process a library of one million pets. if a computer was equipped with  <dig>  ghz processor, the same job could be done in a few hours.

RESULTS
the current settings of pet-tool can handle gis-pet for transcriptome analysis and chip-pet data for whole genome localization of transcription factor binding sites. we have successfully applied pet-tool to more than  <dig> gis-pet and chip-pet libraries. to demonstrate the data processing workflow, and the functionalities and performance of pet-tool, we analyzed two gis-pet libraries and two chip-pet libraries in this study.

datasets used for analysis in this study
the two gis-pet libraries  used in this study were derived from human cancer cells mcf <dig> and hct <dig>  respectively; and the two chip-pet libraries  were from chromatin immunoprecipitated dna enriched for stat <dig> binding sites in human hela cells with and without interferon-γ treatment, respectively. for each of the pet libraries, more than  <dig>  plasmid clones were sequenced from one direction. in total, over  <dig>  high quality sequence reads were generated for these  <dig> libraries .

pet-tool procedure to process the pet library sequences
the use of pet-tool starts from the projectmanager module, from which new project and library ids were assigned for each new sequence dataset. in the pet-tool system, a project can host multiple libraries, and a library can contain from a few to hundreds of thousands of sequences. the two gis-pet libraries presented in this study were assigned library ids shc <dig> and sch <dig> under the project name "human transcriptome", while the two chip-pet libraries were assigned as sch <dig> and sch <dig> under the project name "human tfbs" . once the entry for a library is created, the library sequence file is uploaded and the pet sequences are extracted from raw dna sequences via the extractor module. the quality of pet sequences can be examined using the examiner module, and high quality pet sequences can be mapped to the corresponding genome sequences using the mapper module .

pet sequences generated from gis-pet and chip-pet libraries
based on library construction methods, specific parameters for pet extraction such as the nucleotide sequences for 5' and 3'spacers flanking plasmid vector, the internal spacers between two pet units, and the expected pet length, were entered into the system in the front page of the projectmanager during library creation and can be modified through the extractor module during sequence file uploading. for the two gis-pet libraries, 'gac' was the 5' spacer, 'gtcggatccgac' was the internal spacer and 'gtcggatccact' was the 3' spacer. for the two chip-pet libraries, the spacers used for library shc <dig> were the same as for the gis-pet libraries, while shc <dig> used a different set of spacer sequences, in which the 5' spacer was 'ac', the internal spacer 'gtcgac', and the 3' spacer 'gtcgatc'. once the extraction parameters were defined, each of the library sequence files in fasta format was uploaded  and stored in the flat file system. in the extractor module, dna sequences were read through, all sequence sections resided in between two spacer sequences were distinguished, and potential pet sequences were extracted. from the  <dig>  raw sequence reads of the two gis-pet libraries,  <dig> , <dig> pets were generated; while from the  <dig>  raw sequences of the two chip-pet libraries,  <dig> , <dig> pets were generated. the overall efficiency of pet production is  <dig>  pets per sequence read for the two gis-pet libraries and  <dig>  pets per sequence read for the two chip-pet libraries.

the spacer-defined raw pets were then subjected to serial steps of filtering to exclude incorrect pets due to imperfect molecular reactions during the molecular cloning process. it is known that the typeiis restriction enzymatic cleavage, dna end polishing, and ligation reactions have a certain level of slippage, and the combination of these reactions would contribute to deviation of actual pet lengths from the predicted pet lengths by one to several nucleotides  <cit> . hence, we have set an empirical range  around the expected size  for true ditags. other ditags that were either shorter than  <dig> bp or longer than  <dig> bp were considered experimental artifacts, and therefore were removed from further analysis. pet sequences with low complexity  were also removed because these pets lack sufficient specificity for mapping to reference genome sequences. as an indication of pet orientation, we kept an "aa" residue of the cdna polya tail in the pet sequences at 3' end in gis-pet libraries. therefore, if any gis-pet ditags did not contain the aa tail at the 3' end, these questionable pets were also removed. after these layers of filtering,  <dig>  high quality pets were collected for the two gis-pet libraries and  <dig> , <dig> high quality pets for the chip-pet libraries. redundant pets were collapsed into unique pets. the copy numbers for each of the unique pets reflect the abundance level of the pet in a given library. in total,  <dig>  unique pets were collected for sch <dig>   <dig>  for sch <dig>   <dig>  for sch <dig>  and  <dig>  for sch <dig> .

evaluation of pet quality using examiner
when the automated process of pet extraction was complete, the pet sequences with related information were organized in mysql tables. the pet extraction results can be viewed using examiner. to add analytical functions for evaluating the library sequencing quality, any particular sequencing plate and individual sequencing wells can be viewed for pet extraction results. furthermore, in the examiner module, the pattern of pets and spacers embedded in the original sequence reads can be displayed with color codes at the nucleotide level . this level of detail in validating the quality of pet library sequences and the accuracy of pet extraction results provide a great convenience for users.

comparison of pet sequences derived from gis-pet and chip-pet libraries
although the methods used to generate gis-pet and chip-pet were similar, the starting dna materials were rather different. gis-pets were derived from cdna, while chip-pets were derived from chip enriched genomic dna fragments. it appears that the quality of gis-pets is lower than that of chip-pets. about 22% of gis-pet sequences as opposed to  <dig> % of chip-pet sequences were rejected after quality filtering. there are several reasons contributing to higher error rates for gis-pets. one of the major differences between gis-pet and the chip-pet was the inclusion of aa-tail as a 3' directional indicator at the end of 3' signature for each gis-pet sequence. we observed that 30% of the rejected gis-pets lacked the appropriate aa-tail. we also observed that the at content in gis-pets was significantly polarized, at 31% for the 5' tag region and 61% for the 3' tag region. this observation is in consistent with our knowledge that in transcripts or cdnas, 5' utr  is gc rich and 3' utr is at rich  <cit> . in contrast, the 3'-prone polarization of at content was not observed in chip-pet sequences because the chip dna fragments were generated by randomly shearing of genomic dna.

mapping of pet sequences to reference genome sequences
once the pet extraction results were confirmed, the pet sequences were ready for mapping to the human genome sequences. using the mapper module, each of the pet sequences was split into a 5' tag and a 3' tag, and the tags were independently searched for matches in of the human genome assembly . when mapped correctly to the genome sequences, a pet sequence from nucleotide position 1– <dig> should be aligned to the 5' boundary and 19-last to the 3' boundary of the corresponding dna segment on a chromosomal locus. however, considering that both reverse transcriptase-derived non-templated nucleotide incorporation and typeiis restriction enzyme slippage could lead to ambiguities at the two ends of individual tags in a pet structure  <cit> , we mandated a minimum 16-nucleotide contiguous match for the 5'  and 3'  tags of pet to accommodate most possible variations. the mapped tags were then mated based on the criteria that the paired 5' and 3' signatures of a pet sequence must be on the same chromosome, in the correct order and orientation , and within appropriate genomic distance. human genes encoded in chromosomes contain intron/exon structures, and many of them could span large distance of the genome for . to accommodate most genes but set a limit to reduce non-specific matches, we decided on an arbitrary cutoff of one million base pairs between 5' and 3' tags of gis-pets. for the chip-pet sequences, since the chip enriched dna fragments were ranged from less than  <dig> base pairs to the up-limit of  <dig> base pairs as estimated by dna electrophoresis on agarose gel, the cutoff for chip-pet mapping span was set at  <dig> bp. this criterion for pairing within a defined size limit greatly increased the mapping specificity of pet to genome sequences, and non-specific mapping of individual tags were most likely not fit in such mating requirement . the final mapping and pairing results were reported in a mysql table format that included the pet nucleotide sequences, the count  for each of the pet sequences, nucleotide positions of 5' and 3' matches, and genome coordinates to which the pet sequences mapped . these data provide detailed information, not only where pet sequences mapped, but also the frequency for each of pets occurred in each library.

as presented in the four pet libraries in this study, more than 70% of pets were mappable. for example, of the total unique pets generated for library sch <dig>   <dig>  pets  were mapped accurately to the human genome assembly hg <dig> . the majority of the mapped pets  mapped to single location in the genome. the rest of the pets mapped to two or more locations in the genome, which may reflect the mapping of pets to duplicated gene segments and repetitive elements in the genome. it is noteworthy that more than 92% of the mapped chip-pets found a unique position in the genome. as we reported in previous studies  <cit> , most pet sequences were accurate in demarcating the corresponding dna elements in the genome. for example, over 98% of the gis-pets mapped accurately to 5' and 3' boundaries of known gene transcripts.

CONCLUSIONS
we have developed a comprehensive computation program package, pet-tool, to accommodate demands for automated processing of large volume of pet sequences generated by pet-based experiments. we demonstrated the utility of pet-tool by analyzing four pet libraries and more than  <dig>  millions pet sequences, and proved that pet-tool can accurately and efficiently dissect pet concatemer sequences, extract, organize pet sequences in a relational database for convenient evaluation of sequence quality and overall experimental integrity, and specifically map the pet sequences to the corresponding reference genome sequences.

availability and requirements
project name: pet-tool; project home page:  operating system: unix and linux; programming language: perl and c languages.

pet-tool is free for non-commercial use. the complete package of pet-tool is available in dvd format to be sent upon request, and downloadable from the pet-tool home page. for users who would like to understand more of the pet methodology, a detailed experimental protocol and a user manual are also available at the pet-tool website.

abbreviations
sage: serial analysis of gene expression

chip: chromatin immunoprecipitation

pet: paired-end ditag

gis: gene identification signature

csa: compressed suffix array

tss: transcription start site

pas: poly-adenylation site

authors' contributions
clw and yr conceptualized the framework of pet-tool. kpc was overall responsible for detailed design and implementation of the programs, and involved in coding some of the perl programs, as well as data curation. chw was responsible for mysql database design and coding of related perl programs. wks and qc developed the csa programs used for pet mapping. pa and hso helped to modify the programs. clw provided user inputs and evaluated the prototype. wks provided computational advice to improve the overall performance. kpc and yr wrote the paper.

