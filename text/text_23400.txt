BACKGROUND
rapid advances in high-throughput dna microarray technology generate a huge amount of time course gene expression data which, in turn, calls for efficient computational models to characterize the network of genetic regulatory interactions. a number of methods have been proposed to infer grns from gene expression data. boolean networks  <cit>  use two states, "on" or "off" to represent the state of each gene, and each state at the next time step is determined by boolean logical rules. bayesian networks  <cit>  infer causal relationships between two genes according to conditional probability functions. the stochastic nature makes them more accurate in modeling the dynamics and nonlinearity of gene regulation in large-scale systems. bayesian networks, however, usually do not include cycles and, thus, are difficult to deal with feedback motifs. ordinary differential equations  models  <cit>  overcome this problem by modeling grns as a set of differential equations. some other models such as signed directed graphs, multiple regression, state space model, etc., are addressed in the survey  <cit> .

whereas most of the existing work focuses on small-sized grns, limited attention has been given to interactions among large scale genes. conventional approaches are usually designed for the network with connectivity less than a small fixed number  <cit> . computational complexity is a major obstacle in reconstruction of large scale grns as determining the parameters in such a network is time-consuming. sparsity is a common assumption used in modeling grns to reduce the computational complexity. typically, in a sparse network, one gene interacts with only a couple of genes  <cit> .

recently, yuan et al.  <cit>  proposed a directed partial correlation  method for regulatory network inference on large-scale gene data. the dpc method combines the directed network inference approach and granger causality concept for causal inference on time series data to reconstruct large-scale grns. although modular discovery was provided by biclustering in gene expression data, the dpc method cannot present multiple sub-networks simultaneously.

we propose the nci method for subnetwork identification by detecting community structures from large-scale gene expression data. usually, grns have community structures: genes in the same groups are found with high density of "within-group" interactions and genes in different groups with low density of "between-group" interactions  <cit> . many algorithms have been proposed to detect community structures by clustering  <cit> . to accomodate the large-scale grn inference, we particularly propose a block principal component analysis  method, which explores community structure information for the nci method.

the nci method repeats two steps:  n-step: identify possible gene regulatory networks;  c-step: estimate community structure. at the n-step, a convex quadratic programming, formulated for the community structure, is solved to infer possible grns. this quadratic programming can be identically divided into n  sub-problems, each of which has a much smaller dimension, and, thus, adapt to large-scale networks. at the c-step, the nci method estimates community structure from the grns identified at the first step. when the algorithm terminates, a network with community structures is obtained.

methods
an ode model for grns
the processes of transcription and translation in a grn consisting of n genes can be modeled as the following dynamic system:

  x˙=cx+srr=f, 

where vector x = t ∈ ℝn is the concentration of mrnas of n genes, c = diag  ∈ rn × n, ci represents the degradation rate of gene i, r = t ∈ ℝn is the reaction rates which is a function of concentrations of some mrnas, and matrix s ∈ rn × n represents the stoichiometric matrix of the biological network. for simplicity, one can assume the reaction rate r is a linear combination of mrnas concentrations. let f∈ rn × n be the coefficient matrix. then,

  r=fx. 

by substituting  into , we have

  x˙=cx+sfx. 

a standard discretization of system  by using the zero-order hold method on m observation points for a given sampling time Δt is

  xk+1=axk, 

where a = ecΔt + c-1sf.

let x ∈ ℝn × m be a matrix of gene expression data, with the columns being the measured gene expression levels at m time points, and n being the number of genes. let x <dig> and x <dig> be the sub-matrices of x made up by the first m -  <dig> columns and last m -  <dig> columns of x, respectively. according to  <cit> , the gene regulatory network can be inferred by solving the following optimization problem:

  minaax1-x222s.t.ais stable, 

where ||·|| <dig> is the euclidean norm. stability is usually used as a criterion to determine the qualification of the inferred grn. for discrete models, a = n × m is stable if

  ∑j=1n|aij|≤ <dig> for alli= <dig> …,n. 

moreover, since the network is commonly recognized as sparse, l <dig> regularization is added to eq.  to obtain a sparse matrix a. hence, with the sparsity and stability conditions,  becomes

  minaax1-x222+γa <dig> s.t.∑j=1naij≤ <dig> for alli= <dig> …,n 

where γ is a positive scalar, ||a|| <dig> = ∑i, j |aij| is the l1-norm of matrix a.

the nci method
since rows of a are independent in the objective function and constraints, problem  can be divided into n sub-problems and solved individually  <cit> . however, such a solution does not consider the information of community structure which implies multiple subnetworks. in this section, we propose the nci method to overcome this problem. an observation is that interactions between genes in a community occur more frequently than those between different communities. we introduce a weighted matrix w = n × m to distinguish genes in the communities with those outside. wij is assigned a small positive value or zero if gene i and j located in the same community; a relatively large value, otherwise.

by adding term 〈w, |a|〉 to , we have

  minax1-x222+γa1+μ〈w,|a|〉s.t.∑j=1n|aij|≤ <dig> for alli= <dig> …,n, 

where μ >  <dig> is a penalty parameter, |a| = n × m, 〈w, |a|〉 = trace  = ∑i, j wij|aij|. all elements of matrix w are nonnegative.

we propose a clustering method, named block pca, to update weight matrix w. with block pca, we can obtain matrix l*, reflecting the community structure of its corresponding network. then, weight matrix w can be updated by

  w=1n,n-l*, 

where 1n,n∈ℝn×n is the matrix with all 1's.

for example, consider a network with five nodes and

 l*= <dig>  

node  <dig>   <dig>  and  <dig> form a community, and node  <dig> and  <dig> form another community. particularly, we apply sparse singular value decomposition   <cit>  on a general l* to identify the communities in grns. the nci method is summarized in algorithm  <dig> 

some additional details about algorithm 1:

 <dig>  stop criteria. the nci algorithm stops when either of the following two criteria meet.  weighted matrix w converges, that is, ||w - w|| ≤ tol for a pre-defined constant tol >  <dig>  where w denotes w at iteration k;  the number of iteration reaches the threshold.

 <dig>  the efficiency of the algorithm mainly depends on the estimation of the community structure of the underlying grn. since matrix a in  provides a base for estimation of community structure l* computed by , a poor estimation of a may result in an inaccurate w. hence, instead of using only one estimation of a, we average out the errors by calculating a series of estimations with different arguments γ in  and combining them together. more specifically, we choose a set of γ <dig>  ..., γq and compute the corresponding solutions a <dig>  ..., aq. then, a in step  <dig> of algorithm  <dig> is set as

 aij=aij,pwithp=argmax{|aiju||u= <dig> …,q},∀i,j. 

after the iteration terminates, model  is solved again to compute the matrix a with γ = γτ, where γτ, is a parameter in algorithm  <dig> 

 <dig>  the complexity of the subproblem is our primary concern about the design of the nci algorithm. since the subproblems may be called iteratively in algorithm  <dig>  the complexity of the nci algorithm is determined by those subproblems. both sub-problems  and the block pca model are convex, and can be efficiently solved by cvx  <cit>  and and the proposed splitting algorithm, respectively. as aforementioned, model  is dividable: rows of a in the objective function and the constraints are independent. hence, it is equivalent to n sub-problems:

  minai∈ℝnx1tai-x <dig> i22+γ〈μ/γwi+ <dig> ai〉s.t.ai1≤ <dig> 

for i =  <dig>  ..., n, where x <dig> it is the i-th row of the matrix x <dig> =t∈ℝn,wit,ait is the i-th row of w and a, respectively. sub-problem  can be transformed into a standard  quadratic programming, and solved by software packages such as mosek or cvx  <cit> .

the block pca model
the block pca model is motivated by robust pca model  <cit> 

  minl,el*+λe1s.t.d=l+e, 

which ||l||* is the nuclear norm of the matrix l, and d is a given matrix.

the block pca aims to seek a block submatrix in d by solving optimization problem

  minl,el*+λ1〈w <dig> |l|〉+λ2e1s.t.d=l+e 

where w <dig> is a weight matrix with all elements nonnegative.

in block pca, d ∈ ℝn, n is set to be matrix 1n,n∈ℝn×n with all 1's, λ <dig> is constantly set as 1/n, and λ1∈. for a network with n nodes, we define weight matrix w <dig> = n × n, where

  w1i,j= <dig>  

pij is the length of the shortest path between the node i and j, p <dig> ≥  <dig> is a parameter less than the diameter of the network.

as in robust pca , the nuclear norm || · ||* usually induces a low rank matrix and the l <dig> norm || · || <dig> induces a sparse matrix  <cit> . the constraint d = l + e enforces to split matrix d into a low rank matrix l and a sparse matrix e. different with robust pca, the block pca adds an extra term λ <dig> 〈w <dig>  |l|〉 = λ <dig> ∑w1ij·|lij| to . the nonnegative weight matrix w <dig> stands for the prior knowledge about low rank matrix l.

splitting algorithm for solving block pca
block pca model  can be transformed to a linear semidefinite programming 

  minw <dig> w <dig> l,e12+λ1〈w <dig> |l|〉+λ2〈1n,n,|e|〉s.t.w1lltw2≻¯0;l+e=d. 

however, this transformation increases the size of the variable matrix from n × n to 2n × 2n. existing sdp solvers such as cvx  <cit>  can not solve large-scale sdp problems. instead, we solve block pca problem  by extending the splitting method  <cit>  for optimization problem

  min∑i=1mθis.t.∑i=1maixi=b. 

where θi: ℝni→ℝ are closed convex functions, ai∈ℝl×ni, b∈ℝl.

note that block pca  can be recast as

  minl,e,ul*+λ1〈w <dig> |u|〉+λ2e1s.t.d0=ll+e0-0u. 

by letting θ1: = ||·||*, θ2: = λ1〈w <dig>  |·|〉, θ3: = λ2||·|| <dig>  and b=d <dig> a1l=ll,a2u=-0u and a3e=e <dig>  block pca  can be treated as a generalized case of  with matrix variables l, e, u and linear operators a <dig> a <dig> a <dig> 

under the framework of  <cit> , we next present an implementable splitting algorithm for the block pca model .

define operator

  sε=t-ε,ift>ε,t+ε,ift<-ε, <dig> otherwise, 

t ∈ ℝ and ε >  <dig>  it can be extended to an arbitrary matrix x ∈ ℝn, n by applying element-wise operation, denoted by sε.

consider the sigular value decompostion  of the matrix x

  x=uΣvt, 

where u and v are orthogonal matrices consisting of singular vectors, and Σ is the diagnal matrix made up of the singular values. for each τ > <dig>  the soft-thresholding operator dτ is defined as  <cit> 

  dτ=usτvt. 

more generally, for a matrix w ∈ ℝn, n with all elements nonnegative, we define

  sw=,x^ij=swij. 

particularly, if w is the matrix with all elements  <dig>  ||x||w degenerates to ||x|| <dig>  and sεw degenerates to sε.

let β> <dig> μ> <dig> Λk=Λ1kΛ2k, where Λ1k,Λ2k∈ℝn,n. then, for the calculated , the steps for each iterative  for solving  are as follows.

step  <dig>  solve lk+ <dig> by the following problem.

  minl||l||*-Λ1k+Λ2k,l+β2||l+ek-d||2+β2||l-uk|| <dig> 

by theorem  <dig>  in  <cit> , the unique solution of  is

  lk+1=dτ, 

where τ=12β,y=12+12βΛ1k+Λ2k.

step  <dig>  update the lagrangian multiplier Λk+12bylk+ <dig> 

  Λ1k+12=Λ1k-β,Λ2k+12=Λ2k-β. 

step  <dig>  solve uk+ <dig>  ek+ <dig> by the following two problem.

 minu{uλ1w1+〈Λ2k+ <dig> u〉+βμ2u-uk2},mine{e1-〈1λ2Λ1k+ <dig> e〉+βμ2λ2e-ek2}. 

by the property of the operator sτ  shown in  <cit> ,

  uk+1=sτλ1w <dig>  

where τ=1βμ,Ũ=uk-1βμΛ2k+ <dig> 

  ek+1=sα, 

where α=λ2βμ,Ẽ=ek+1βμΛ1k+ <dig> 

step  <dig>  update the lagrange multiplier Λk+ <dig> by lk+ <dig>  ek+ <dig> 

  Λ1k+1=Λ1k-β,Λ2k+1=Λ2k-β. 

the algorithm can be terminated when

  d-lk-ek2+lk-uk2d≤ε <dig> 

and

  Δlk2+Δek2+Δuk2≤ε <dig>  

for tolerance ε <dig> > <dig>  ε <dig> > <dig>  where Δlk = lk+1- lk, Δek = ek+ <dig> - ek, Δuk = uk+1- uk.

the splitting algorithm for solving block pca model is summarized in algorithm  <dig> 

in algorithm  <dig>  arguments β and μ are currently set constant. adaptive settings of these arguments may speed up the convergence. the discussion of this issue in a simple case can be referred to  <cit> .

RESULTS
we examine the nci method based on two synthetic gene regulatory networks with different sizes. the grn in first test is a small-sized network consisting of  <dig> genes and  <dig> interactions. there exist two communities in this grn. in the second test, the network consists of  <dig> genes and  <dig> interactions and the data come from the artificial gene network database  <cit> . since the gene network is synthetic, the corresponding matrix a in  is known beforehand. we solve the grn by the nci method and compare it with a to evaluate the performance of the algorithm. moreover, we examine the performance of the proposed splitting algorithm in the third test.

the metric used in the performance examination was introduced in  <cit> . it compares the signs of the estimated matrix ae with a. the accuracy is defined as

  accuracy=/n <dig>  

where r <dig>  r <dig>  and r <dig> are the number of correctly identified positives, zeros and negatives, representing promotions, repressions, and no interaction, respectively.

the algorithm runs on a computer with pentium  dual-core cpu e <dig>  <dig> ghz, and ram  <dig> gb. the parameters of the algorithm are chosen as follows. in test  <dig>  γ in problem  is chosen from { <dig> ,  <dig> ,  <dig> } to find possible grns and γτ =  <dig> . in test  <dig>  γ is chosen from { <dig> ,  <dig> ,  <dig> } and γτ =  <dig> . in the first two tests, μ is chosen as 10γ for problem , λ <dig> as  <dig> λ <dig> in the block pca model, and p <dig> as 14d for eq. , where d is the diameter of the corresponding network. the algorithm terminates in  <dig> iterations.

test  <dig>  a small gene network with  <dig> genes
to show the effectiveness of the nci method at n-step in searching multiple possible grns, we compare the accuracy rates with the results of one iteration at n-step . as shown in figure  <dig>  the average accuracy is improved from  <dig> % to  <dig> % in the  <dig> runs. in noise case ), the average accuracy is improved from  <dig> % to  <dig> %. thus, a number of iterations at n-step is necessary for finding accurate grns with the nci algorithm.

test  <dig>  a gene network with  <dig> genes
the network in the second test consists of  <dig> genes and  <dig> interactions ). network statistics are listed in table  <dig>  the nodes in red in figure 3) form a unique community. the inferred network by nci algorithm contains  <dig> genes and  <dig> interactions. as shown in figure  <dig>  the community identified by the nci algorithm has a very large overlap with the true community. among  <dig> genes in the true community,  <dig> important ones  are successfully identified.

these statistics come from  <cit> .

test  <dig>  the performance of the block pca and splitting algorithm
the following experiments are specially designed to test the efficiency of the block pca method and the performance of the splitting algorithm as well. we randomly generate three clusters with  <dig> points ). three clusters calculated by k-means are shown in figure  <dig>  based on the distances between these points, matrix w <dig> is calculated by eq.  with p <dig> =  <dig> . the results of the splitting algorithm are shown in figure  <dig>  the corresponding three clusters calculated by ssvd are displayed with different colors in figure  <dig>  among  <dig> data points, two points  are outliers, not included in any cluster. the clustering result of the remaining  <dig> points is identical with that of k-means.

to verify the effectiveness of the argument λ <dig>  we choose different values and the calculated low rank matrices l are shown in figure  <dig>  it is shown that the number of nonzero elements of l  decreases, as λ <dig> increases. the numbers of nonzero elements of l are  <dig>   <dig>   <dig> and  <dig>  with λ <dig> =  <dig> λ <dig>   <dig> λ <dig>   <dig> λ <dig>  and  <dig> λ <dig> in figure  <dig>  ,  and  <dig>  respectively.

we compare the performance of the splitting algorithm with cvx and sdpnal  <cit>  by which the block pca model is solved via the sdp formulation . the results are listed in table  <dig>  where "points30" indicates calculating on the data of  <dig> points on a plane, "funval" indicates the calculated objective function value for the block pca model, "split", "cvx" and "sdpnal" indicate splitting method, cvx and sdpnal, respectively. it is shown in table  <dig> that splitting algorithm outperforms others in all the tests.

"points30" indicates the data with  <dig> points on a plane, and similarly for "points50", ..., "points500". "funval" represents the calculated objective function value of the block pca model. "--" indicates out of memory. " <dig> e3" indicates  <dig>  ×  <dig>  the implementation of sdpnal is version  <dig>  <cit>  and cvx is version  <dig>   <cit> . the sdpt <dig> engine is chosen for the cvx solver. the two arguments for the splitting algorithm are set as follows: μ is constantly set  <dig> for all tests, β is set 20/n for points <dig>  200/n for points <dig>  points <dig>  points <dig>  and 500/n for points <dig>  where n is the number of points.

CONCLUSIONS
we have developed the nci method for gene regulatory network reconstruction from gene expression data. based on the convex programming technology, the nci method has shown the capability to identify multiple subnetworks within a large-scale gene regulatory network. the nci method includes two main steps. at the first step, the algorithm infers a gene regulatory network. at the second step, the algorithm estimates potential community structures. these two steps repeat until the algorithm terminates. furthermore, we have proposed an efficient block pca method for exploring communities within a grn and the splitting algorithm for the block pca model. numerical experiments have validated the effectiveness of the nci method in identifying grns and inferring the communities.

abbreviations
grn: gene regulatory network; nci: network and community identification; block pca: block principal component analysis.

competing interests
the authors declare that they have no competing interests.

authors' contributions
xl and zx designed the nci method and wrote the manuscript. xl and lz designed the block pca method and splitting algorithm. xl and fw designed the ode grn model and experiments. all authors read and approved the final manuscript.

