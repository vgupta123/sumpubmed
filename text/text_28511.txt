BACKGROUND
peptide and protein identification in mass spectrometry -based proteomics involves searching tandem mass spectrometry  spectra against a protein database using a search engine. in bottom-up ms, most search engines calculate a similarity score between a spectrum and a peptide and report a best-scoring peptide-spectrum match  for each spectrum . a psm is correct if the spectrum is generated from the matched peptide. it is vital to distinguish correct psms from those incorrect ones.

two main approaches have been proposed to address this problem. in the first approach, a large data set of ms/ms spectra is searched against a concatenated target-decoy protein database to find a best-scoring psm for each spectrum, and the psm is reported if its score exceeds a prespecified threshold. the false discovery rate  of the reported psms is estimated based on the fact that the number of decoy hits and the number of incorrect target hits are approximately the same  <cit> . this approach is simple and powerful when a large population of psms is reported. however, it fails to decide the correctness of single psms. in addition, it is unable to compute accurate fdrs when the target protein database is small  or when only a small number of psms are reported  <cit> .

in the second approach, the statistical significance  of a psm is computed for determining the correctness of the psm. due to the complexity of ms/ms spectra, many statistical models have limited accuracy. by contrast, kim et al. proposed a probabilistic method for computing spectral probabilities and statistical significance of psms  <cit> . this method achieves high accuracy, but it is not obvious how to extend it to psms with post-translational modifications .

with the rapid developments in instrumentation, top-down ms, which analyzes intact proteins or long peptides, has become available in many laboratories. more than a thousand proteins can be identified in a single top-down ms experiment  <cit>  and many methods have been proposed for identification of proteoforms using top-down tandem mass spectra . although the evaluation of psms in bottom-up ms has been intensively studied, no systematic studies have been carried out for evaluating protein-spectrum matches  in top-down ms. similar to bottom-up ms, there is now an increasing demand to accurately estimate the statistical significance of single prsms. for instance, a top-down ms/ms spectrum can be matched to two different proteins: one contains a ptm; the other does not. comparing the e-values of the two prsms can determine which one is better. meng et al. developed a poisson model for the problem, but the model does not include ptms  <cit> . as top-down ms/ms spectra are often mapped to proteoforms with ptms, accurate estimation of statistical significance of prsms with ptms is useful and challenging. we proposed a method for e-value computation of prsms by breaking a protein into several sub-proteins without ptms, but it is extremely time consuming  <cit> . in this paper, we study an extended generating function method for accurately computing spectral probabilities and statistical significance of prsms in top-down ms. our method naturally extends the generating function method in bottom-up ms  <cit> . spectral probabilities reported by the extended generating function method are further utilized for estimating fdrs of identified prsms using a method proposed in  <cit> , in which decoy databases are not needed. experiments show that the extended generating function method achieves high accuracy in computing spectral probabilities and fdrs.

methods
a top-down ms/ms spectrum generated from a protein consists of a precursor mass, corresponding to the molecular mass of the protein, and a list of peaks, corresponding to fragment ions of the protein. each peak represents the mass-to-charge ratio and the abundance of the fragment ion. the residue mass of a spectrum s is defined as m = precursormass − watermass, where precursormass is the precursor mass of the spectrum, and watermass is the mass of a water molecule. because top-down ms/ms spectra are very complex, and the charge states of most fragment ions are high, high mass resolution and high mass accuracy spectra are absolutely required. the first step in top-down spectral interpretation is usually spectral deconvolution, which converts a complex top-down spectrum to a list of monoisotopic neutral masses   <cit> . the neutral masses are further converted to a list of prefix residue masses  corresponding to the masses of protein prefixes  <cit> . for a collision-induced dissociation  spectrum, the prm spectrum is generated as follows:  the residue mass of the experimental spectrum is added to the prm spectrum;  for each neutral mass x extracted from the experimental spectrum, two masses x and precursormass − × are added to the prm spectrum. if mass x corresponds to a protein suffix , then mass precursormass − × corresponds to a protein prefix   <cit> . the proposed extended generating function method can be applied to all types of spectra, such as cid and electron-transfer dissociation  spectra, because all these types of spectra can be converted to prm spectra. all masses in prm spectra are discretized by scaling the masses with a constant and rounding the values to integers  <cit> . for highly accurate top-down spectra, a scaling constant  <dig>  is used  =  <dig>  ×  <dig>  =  <dig>  ≈ 15643) to reduce the rounding error to  <dig>  parts per million   <cit> . in the following analysis, we assume that only prm spectra with integer masses are studied and peak intensities are ignored.

scores of prsms
a prm spectrum s is represented as an ordered list of integer masses, in which the largest one is m. let  be the set of the  <dig> standard amino acids with integer residue masses m for  . the residue mass of r is also denoted as ‖r‖. the residue mass m of a protein p is the sum of the residue masses of all amino acids of the protein. it differs from the molecular mass of the protein by the mass of a water molecule. a protein p with m amino acids is associated with an ordered list of integer masses p1< p2<. . . < pm, where pi is the sum of the residue masses of the first i amino acids and pm = m.

if the residue masses of spectrum s and protein p are the same value n , the mass count score of s and p is the number of shared masses  in s and p, denoted by cscore. the mass shift of a ptm is the mass difference between the modified form  and the unmodified form of an amino acid residue. when a ptm occurs at the ith amino acid of p and the mass shift d of the ptm is positive, the modified form of p is denoted by qi,d = {p <dig>  p <dig>  . . ., pi− <dig>  pi + d, . . ., pm + d}. when the mass shift of the ptm is a negative value −d, qi,−d = {p <dig>  p <dig>  . . ., pi− <dig>  pi− d, . . ., pm− d}. in addition, if a mass in pi− d, . . ., pm− d is negative or not greater than pi− <dig>  the mass is removed from qi,−d. let  be the set of all modified proteins of p with a ptm of mass shift d. when the protein is not ambiguous, we use shortened notations . to identify an experimental prm spectrum s generated from protein p with a ptm, one can find the mass shift d of the ptm by comparing the residue masses of s and p , and compute the mass count score between s and each of the modified proteins in  to find the best match. the ptm mass count score of s and p is defined as  cscore, where d = m − m.

random proteins
let pr be the probability that an amino acid  is observed at a position in a random protein. in practice, the frequencies of amino acids in the swiss-prot database  <cit>  can be used to estimate pr. the probability that a random protein p with amino acids r1r <dig> . . . rm is observed is  

where l represents the length of the random protein. to simplify computation, a uniform probability pr = 1/maxlength is chosen, where maxlength is the length of the longest protein in the swiss-prot database. despite the difference between the uniform distribution and the distribution of protein length in the target protein database, experimental results showed the uniform distribution does not introduce large errors into the computation of spectral probabilities.

spectral probabilities
let  be the set of negative/positive mass shifts of allowed ptms. any number in  is a valid mass shift. let s be an experimental prm spectrum and p a random protein. the residue mass difference between s and p is a random variable d = m − m. the spectral probability of s with respect to a threshold t and one ptm is the probability that the residue mass difference  and pscore ≥ t:  <dig>  

where  <dig> in specprob represents one ptm. from the definition of pscore,  <dig>  

computing specprob accurately and efficiently is a problem that has not been solved. in the following subsections, we propose two upper bounds of specprob. the two upper bounds can be calculated accurately and efficiently using dynamic programming algorithms. the second upper bound is better than the first one and is used for estimating specprob. since the second upper bound is larger than specprob, a constant k is introduced for correcting errors in estimated spectral probabilities. in practice, the value of k can be estimated from training data sets.

the first upper bound of spectral probabilities
based on equation  and the union bound of probabilities,  <dig>  

let q denote the right hand part of the above inequality. the value of q is an upper bound of specprob. next, we describe a dynamic programming algorithm for computing the value of q. the algorithm is an extension of the generating function method in  <cit> . in this algorithm, a spectrum s with a residue mass n is represented as a 0/ <dig> vector s = s1s <dig> . . . sn, where si =  <dig> if the spectrum has a prefix residue mass i and  <dig> otherwise. for example, a spectrum with a prm list { <dig>   <dig>   <dig>  10}  is represented as  <dig>  we first study the case where all mass shifts are positive; negative mass shifts will be discussed at the end of this subsection. a three dimensional table t  is computed to acquire the upper bound, where i is the number of ptms in modified proteins. let s be the subspectrum s1s <dig> . . . sj of s. the residue mass of s is j. the value t  is the probability that m = j and the mass count score cscore = k. let  be set of all proteins with a residue mass j. we define a function: f =  <dig> if cscore = k;  <dig> otherwise. then,  <dig>  

suppose p contains m amino acids and the residue mass of p is j. if the last amino acid of p is r, then j − ‖r‖ is the prefix residue mass of the first m −  <dig> amino acids of p, where ‖r‖ is the residue mass of r. in the vector representation of s, if s contains a prefix residue mass j − ‖r‖, sj−‖r‖ = 1; otherwise, sj−‖r‖ =  <dig>  the recurrence function for computing t was given in  <cit> :  <dig>  

let dj = j − m, the random variable representing the difference between j and the residue mass of random protein p. the value t is the sum of probabilities  <dig>  

suppose the residue mass of protein p is j − d, that is, . let m be the number of amino acids in p and qm,d the modified protein of p whose ptm is on the last amino acid. because the first m− <dig> masses of qm,d are unchanged compared with p,  

combined with equation ,  <dig>  

let r be the last amino acid of p and p' the protein containing the first m −  <dig> amino acids of p. all the m −  <dig> masses in ql,d,  <dig> ≤ l ≤ m −  <dig>  are the same to the first m −  <dig> masses in ql,d. while the m − 1th mass j − ‖r‖ in ql,d is included in the computation of mass count scores, the mass j − ‖r‖ in ql,d is not included because it is the residue mass. thus,  

it follows  <dig>  

combining the fact that pr = prpr and equations  and ,  <dig>  

with equations ,  and , the recurrence function for t is  <dig>  

when ptms with negative mass shifts d are allowed, j − d in equation  is larger than j. the value t has not been computed when t is computed, making equation  invalid. to avoid this problem, a short amino acid sequence g is introduced to guarantee that j − d − m < j. let  be the set of all amino acid sequences g = r1r <dig> . . . rl satisfying m > −d and m ≤ −d . equation  is modified to  <dig>  

where ‖g‖ is the residue mass of g, and  for a sequence g = r1r <dig> . . . rl. the value of q is , where n and n are the residue mass and the number of masses of s, respectively. the time complexity for computing t and t is o, where z is the sum of the sizes of  and all , .

the second upper bound of spectral probabilities
the only difference between two modified proteins qi,d and qi+ <dig> d is the ith mass. if pi in p  does not equal any mass in s, then cscore ≤ cscore. based on this observation, if pi does not equal any mass in s, qi+ <dig> d is removed from . in this way, a new set  is acquired containing q <dig> dand all qi,d satisfying that pi− <dig> equals a mass in s. it follows that . from equation  and the union bound of probabilities,  

let q' denote the right hand part of the above inequality. compared with q, the value of q' is a better upper bound for specprob. similar to the method for computing q, we fill out a three dimensional array t for computing q'. the recurrence function for filling out t is the same to equation . we change the definition of t by replacing  with  in equation . to compute t, the second and third terms of the right-hand part of equation  should be changed so that only the probabilities for the modified proteins in  are summed up.

similar to the proof of equation , consider a random protein . let qm,d be the modified protein of p whose ptm is on the last amino acid, and r the last amino acid of p. if , then j − d − ‖r‖ is a mass in s or j − d − ‖r‖ =  <dig> , and vice versa. therefore, if j − d − ‖r‖ =  <dig> or sj−d−‖r‖ =  <dig>  then pr · f is included in the computation of t.

for a positive mass shift d, we define  as the set of amino acids r ∈ r satisfying that j − d − ‖r‖ =  <dig> or the element sj−d−‖r‖ =  <dig>  for a negative mass shift d, we introduce a set  of amino acid sequences g = r1r <dig> . . . rl satisfying:  m > −d,  m ≤ −d, and  j − d − ‖g‖ =  <dig> or the element sj−d−‖g‖ =  <dig>  then equation  is changed to:  <dig>  

and . the time complexity for computing t and t is similar to the method in the previous subsection.

since the scores cscore for  are not independent, q' is usually larger than the spectral probability specprob. to estimate specprob more accurately, q' is multiplied by a constant value k for correction:  <dig>  

p-values and e-values
let , where n is the residue mass of s. from table t described in the previous subsection, we can compute the probability that the residue mass difference d between s and p is in :  <dig>  

using equations  and , the conditional spectral probability of s with respect to threshold t and one ptm is  <dig>  

intact proteins may have n or c-terminal truncations, e.g., the removal of a signal peptide. if a top-down ms/ms spectrum is matched to an intact protein without n- or c-terminal truncations, the prsm is called a complete prsm. a prsm matched to an intact protein with an n-/c-terminal truncation is called a suffix/prefix prsm. an internal prsm corresponds to an intact protein with both n- and c-terminal truncations.

similar to the e-values defined in blast  <cit> , the e-value of a prsm describes the number of hits one can "expect" to see by chance when searching the spectrum against a protein database of a particular size. suppose a complete prsm contains one mass shift  in  and its ptm mass count score is t. we count the number z of proteins in the target database with a residue mass in . the e-value of the complete prsm is estimated as z · csp. the p-value of the prsm is estimated as  <dig> − )z.

for prefix, suffix and internal prsms, we count the numbers zp, zs, and zi of prefixes/ suffixes/internal sub-proteins in the target database with a residue mass in . because some prefixes/suffixes/internal sub-proteins are not independent, a constant factor cp/cs/ci is multiplied in the computation of e-values of prefix/suffix/internal prsms for correction. for example, if a prefix prsm contains one mass shift  in  and its ptm mass count score is t, the e-value of the prsm is estimated as cp· zp· csp.

multiple ptms
the dynamic programming algorithm for computing the second upper bound can be extended to estimate e-values of prsms with multiple ptms. when multiple ptms are allowed, we replace t and t in equation  by t and t to estimate spectral probabilities with respect to i ptms:  <dig>  

RESULTS
the extended generating function method, td-gf , was implemented in java and tested on a desktop with a  <dig> ghz  cpu and  <dig> gb memory.

data sets
a salmonella typhimurium  data set  <cit>  was used to test td-gf. a protein mixture of st was analyzed using an ltq-orbitrap . ms and ms/ms spectra were collected at a resolution of  <dig>  and  <dig> , respectively. the experiment was repeated using gas-phase fractionation. a total of  <dig>  collision-induced dissociation  ms/ms spectra were acquired. the detailed experiment procedure can be found in  <cit> .

the performance of td-gf on proteoform identification was tested on an escherichia coli  data set. an ec cell lysate was separated by an intact protein reversed phase liquid-chromatography  system and analyzed by an ltq-orbitrap velos . ms and ms/ms spectra was collected at a resolution of  <dig> . a total of  <dig>  higher-energy c-trap dissociation  ms/ms spectra were obtained.

spectral probabilities for prsms with one ptm
the accuracy of td-gf was evaluated using two approaches based on conditional spectral probabilities ) and fdrs.

evaluation based on conditional spectral probabilities
to evaluate td-gf, we generated a set of prsms with "correct" conditional spectral probabilities and compared the "correct" conditional spectral probabilities with those reported by td-gf.

selection of prsms previous analysis results in  <cit>  showed that most prsms identified in the st data set contained no ptms. to increase the number of identified prsms with one ptm, a mutated st protein database was generated by adding a glycine residue to the middle of each protein sequence in the st proteome. when the mutated st protein database is used, a prsm without ptms can be identified as a prsm with one ptm.

all ms/ms spectra in the st data set were deconvoluted using ms-deconv  <cit>  and searched against the mutated st proteome using ms-align+  <cit> . the error tolerances for precursor masses and fragment masses were set to  <dig> ppm, and carbamidomethylation was set as the fixed ptm. by restricting the search space to only complete prsms with one ptm, ms-align+ identified  <dig>  prsms. for each of  <dig>  prsms, td-gf was employed to compute the conditional spectral probability, which was used only for selecting prsms, not for evaluating td-gf. the parameter k in equation  was set to  <dig>  since blind ptm search was used in ms-align+, the allowed mass shifts were set to  and , where α is the mass of a tryptophan  residue. the running time for computing conditional spectral probabilities was  <dig> minutes . for  <dig> of the  <dig>  complete prsms, the conditional spectral probabilities reported by td-gf were in . the  <dig> prsms were selected for computing "correct" conditional spectral probabilities.

computation of "correct" conditional spectral probabilities for each of the  <dig> prsms , a random database of  <dig> proteins was generated. in the random database, the residue masses of all proteins are in , where n is the residue mass of the spectrum. the ptm mass count score between the spectrum and each protein in the database was computed; and the number x of proteins satisfying that the ptm mass count score ≥ t was counted. the conditional spectral probability of the prsm with respect to one ptm and threshold t was estimated as x/ <dig>  since the above method follows the definition of conditional spectral probabilities, the results are treated as "correct" conditional spectral probabilities. finally, one prsm was removed from the list of  <dig> prsms because the estimated conditional spectral probability  was  <dig> 

evaluation of td-gf the  <dig> prsms were randomly divided into a training data set  and a test data set . the training data set was used to estimated the value of k in equation . we set k =  <dig>  and used td-gf to compute the conditional spectral probabilities for the training prsms. let p <dig> and p <dig> be the conditional spectral probabilities of a prsm estimated by the random database-based method and td-gf, respectively. the error of p <dig> is defined as e = | log − log| . to minimize the average error of the conditional spectral probabilities reported by td-gf, the best value of log is the average of the log ratio . using the training data set, k was set to the best value  <dig> . in practice, the default values of k are learned from various types of training data, such as cid and etd data, and are provided so that the users do not need to estimate k for their own data sets. with k =  <dig> , td-gf was employed to compute the conditional spectral probabilities for the test prsms. the errors of these conditional spectral probabilities were obtained by comparing them with the "correct" ones . the errors for  <dig> test prsms  were ≤  <dig> . when the error is  <dig> , there is about a three fold difference between the conditional spectral probabilities reported by the two methods. the results show that the spectral probabilities estimated by td-gf are accurate for most of the test prsms.figure  <dig> 
a comparison of the conditional spectral probabilities  estimated by the random database-based method and td-gf. for each of the  <dig> test prsms, the error of the conditional spectral probability reported by td-gf is computed. for each cut-off of e, the number of prsms with an error < e is counted.



evaluation based on fdrs
with the spectral probabilities reported by td-gf, the "estimated" fdr of a set of identified prsms for a cut-off p-value can be computed using the functions in  <cit> . for the same cut-off p-value, the "correct" fdr can be obtained by the target-decoy approach. because the "estimated" fdr is based on the spectral probabilities reported by td-gf, if the "estimated" fdr is similar to the "correct" fdr, then the spectral probabilities reported by td-gf are accurate.

using all the  <dig>  complete prsms with one ptm, we computed "estimated" fdrs for cut-off p-values in { <dig> ,  <dig> , . . .,  <dig> } based on spectral probabilities. in the target-decoy approach, all spectra were searched against a concatenated target and shuffled decoy protein database. because the fdr reported by the target-decoy approach was  <dig> when the cut-off p-value was smaller than  <dig>  × 10− <dig>  we compared only the fdrs for cut-off p-values greater than  <dig>  × 10− <dig> . the fdrs estimated based spectral probabilities were consistent with those reported by the target-decoy approach. for example, the target-decoy approach and the spectral probability approach reported cut-off p-values  <dig>  and  <dig>  for 1% fdr, respectively. the difference between the two p-values is only  <dig> , which is evidence that the spectral probabilities reported by td-gf are accurate.figure  <dig> 
a comparison of the fdrs of prsms with one ptm estimated by the target-decoy approach and computed based on spectral probabilities. for a given cut-off p-value, the two reported fdrs are compared, and − log  is plotted against − log .



prefix, suffix and internal prsms
in this subsection, we describe the methods for estimating parameters cp, cs and ci introduced in section methods. a substring aiai+ <dig> . . . aj of a string s = a1a <dig> . . . an is denoted by s. to estimate the parameter cp for prefix prsms, a new random protein database was generated for each of the selected  <dig> prsms:  a total of  <dig>  long random protein sequences with  <dig>  amino acids each were generated, and  prefixes s, . . ., s were extracted from each of the  <dig>  long protein sequences. in total,  <dig> prefixes were added to the random protein database. the conditional spectral probabilities estimated using the new random databases are different from those using the random databases in subsection "computation of correct conditional spectral probabilities" because the protein sequences in the new random databases are not independent. parameter cp was estimated as the average ratio  <dig>  between the probabilities computed based on the new databases and the random databases in subsection "computation of correct conditional spectral probabilities" for the  <dig> prsms. parameter cs can be set to the same to cp.

to estimated the parameter ci for internal prsms, a third type of random protein databases were used:  a total of  <dig> long random protein sequences with  <dig> amino acids each were generated, and   <dig>  ×  <dig> substrings s  of the each long protein sequence were added to the random database. using the same method for computing cp, parameter ci was estimated as  <dig> .

spectral probabilities for prsms with two ptms
similar to prsms with one ptm, a mutated protein database was created to increase the number of identified prsms with two ptms. two glycine residues were added each protein in the st protein database: one is at the one-third position of the protein; the other at the two-thirds position. ms-align+ identified  <dig>  complete prsms with two ptms, and td-gf was used to compute the spectral probabilities for the  <dig>  prsms. the running time for computing spectral probabilities was  <dig>  minutes . because it is extreme slow to find the best prsm with two ptms by searching a spectrum against a large random protein database with  <dig> proteins, the evaluation method based on conditional spectral probabilities was not used. only the evaluation method based on fdrs was applied. with all the  <dig>  identified prsms, fdrs based on spectral probabilities and based on the target-decoy approach were computed for cut-off p-values in { <dig> ,  <dig> , . . .,  <dig> }. when the cut-off p-value is smaller than  <dig>  , the fdrs estimated by the two methods are similar. for 1% fdr, the target-decoy approach and the spectral probability approach estimated similar cut-off p-values  <dig>  and  <dig> , respectively. however, the fdrs based on spectral probabilities are not consistent with the "correct" fdrs  when the cut-off p-value is larger than  <dig>  . one possible reason is that the filtering method implemented in ms-align+ fails to keep the best prsms when their p-values are not small enough. from the above analysis, the spectral probabilities estimated by td-gf are accurate when they are smaller than  <dig> .figure  <dig> 
a comparison of the fdrs of prsms with two ptms estimated by the target-decoy approach and computed based on spectral probabilities. for a given cut-off p-value, the two reported fdrs are compared, and − log  is plotted against − log .



comparison with prosightpc
all ms/ms spectra in the ec data set were deconvoluted by ms-deconv  <cit> . the ec proteome database was downloaded from the swiss-prot database; a combined protein database was generated by concatenating the ec proteome database and a shuffled decoy database. to test the performance of td-gf on proteoform identification, ms-align+ coupled with td-gf was applied to search the deconvoluted spectra against the combined database. the error tolerances for precursor masses and fragment masses were set as  <dig> ppm and two unknown ptms were allowed. using 1% spectrum-level fdr,  <dig>  spectra were identified.

prosightpc  <cit>  was also applied to analyze the ec data set. prosightpc provides several search modes for top-down spectral identification, including the absolute mass mode and the biomarker mode. since some spectra in the ec data set were generated from truncated proteins, the biomarker mode was chosen for the analysis of the ec data set. the error tolerances for precursor masses and fragment masses were set as  <dig> ppm. prosightpc identified  <dig> spectra with 1% spectrum-level fdr. all the  <dig> spectra were identified by ms-align+ coupled with td-gf. the test results show that ms-align+ coupled with td-gf outperformed the biomarker mode of prosightpc.

CONCLUSIONS
the experiments showed that the extended generating function method achieves high accuracy in computing spectral probabilities of prsms with ptms. it is a non-trivial extension of the generating function method proposed in  <cit> . with accurate spectral probabilities and e-values, one can easily choose the correct prsm from several candidate prsms for a spectrum, as well as separate correct prsms from incorrect ones identified from a large number of spectra. in addition, it provides a way to evaluate single prsms efficiently.

competing interests

the authors declare that there are no competing interests.

authors' contributions

xl, sl, and sk designed the td-gf method. xl implemented the td-gf method in java. xl and ms did the experiments on tandem mass spectrometry data sets. xl and sl wrote the manuscript. all authors have read and approved the final manuscript.

