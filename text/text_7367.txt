BACKGROUND
complex biological mechanisms such as signaling pathways and metabolic processes are governed and coordinated by numerous protein-protein interactions . in addition to gene expression profiles, ppis provide invaluable information that can be exploited to predict novel functional modules that perform critical biological functions. thanks to recent advances in high-throughput protein interaction measurement techniques, ppi networks for different species have been archived in public databases, where the coverage and quality of these networks continue to improve over time. to translate these protein interaction data into useful biological knowledge – for example, that of the functional organization of cells and the detailed mechanisms of various cellular functions – we need effective means for analyzing the available ppi networks to accurately annotate the protein functions and to identify modules of proteins that may be potentially involved in crucial biological processes conserved across species.

although one can study functions of proteins in ppi networks through biological experiments, it takes a large amount of valuable resources including labor, experimental cost, and time. as we have increasing evidence that various functional modules are conserved across different species, in which orthologous proteins and their interactions are preserved, comparative network analysis based on computational approaches would be one reasonable alternative that can save the cost and time of expensive biological experiments  <cit> . through comparative network analysis techniques such as network querying and network alignment  <cit> , we can identify conserved functional modules as well as functionally similar proteins. by identifying corresponding protein nodes across networks, functional annotations of known proteins in well-studied species could be transferred to matching proteins in the ppi networks of less-studied species, which provides an efficient way of predicting potential functions of unknown proteins.

to obtain biologically meaningful ppi network alignment results, we should take both the molecular-level similarity between proteins as well as the similarity of their interaction patterns into account. the pairwise molecular-level similarity can be measured by comparing the sequence  of the proteins. as shown in  <cit> , interactions between orthologous proteins are often well-preserved in functional modules that are commonly found in multiple species. as a result, it would be desirable to consider the topological similarity between ppi networks, which arises from such conserved ppis, for accruately comparing and aligning networks. hence, an essential first step to construct a reliable network alignment is to accurately estimate the universal similarity measure that reflects the node correspondence across networks by integrating the two types of similarities: pairwise node similarity and topological similarity. however, several factors make the estimation of the node correspondence practically difficult. first, when comparing ppi networks of different species, not all protein nodes are present in all ppi networks, hence the networks are bound to have a large number of inserted/deleted nodes . second, the interaction patterns may significantly vary in different ppi networks, where orthologous proteins in different species may interact with considerably different sets of proteins in the respective networks. as a result, the ppi networks may have a large number of inserted/deleted edges. third, most nodes may have numerous potential matching nodes in other networks. all these factors make accurate prediction of node correspondence quite challenging.
fig.  <dig> illustration of a pairwise network alignment. the blue colored node in network x is deleted in network y, and the pink colored node in network y is inserted. note that an inserted node in one network can be viewed as a deleted node in the other network




several network alignment algorithms have been proposed to identify and predict orthologous protein pairs and conserved functional modules in different networks. the pioneering network alignment algorithms, pathblast  <cit>  and networkblast  <cit> , focus on identifying highly conserved local complexes. however, pathblast can only search for linear paths, and networkblast constructs local alignments where one protein can have multiple matching partners, which may yield ambiguous alignments. isorank  <cit>  estimates the node correspondence using a modification of the widely-known pagerank algorithm  <cit> , where the basic idea is that two proteins have a high probability to be aligned if their neighboring proteins are also matched well. isorankn  <cit>  extends isorank to align multiple ppi networks by adopting pagerank-nibble  <cit> , a spectral clustering method. isorank and isorankn are relatively time consuming and require a huge amount of memory as the size of the network increases. smetana  <cit>  adopts a semi-markov random walk  model to estimate the node correspondence scores. these scores are updated through the intra-network and cross-network probabilistic consistency transformations, which are subsequently used to greedily build the network alignment. smetana-csrw  <cit>  estimates the node correspondence scores using a context-sensitive random walk  model  <cit> , which integrates the node similarity and the topological similarity between networks. then, it constructs the final alignment based on a greedy approach. although smetana-csrw has slightly higher computational complexity as the network size increases, the utilization of the csrw model has been shown to improve the accuracy of the alignment results. pinalog  <cit>  detects dense subnetworks as communities. then, it constructs the initial community mapping and extends the alignment by mapping the neighboring nodes of the core proteins. hubalign  <cit>  first assigns weights to the nodes and edges in the ppi networks based on their topological importance , and then calculates the alignment score for every pair of proteins based on the global topological property and sequence information. then, the algorithm constructs a global network alignment using a greedy seed-and-extension approach. both pinalog and hubalign are more dependent on the topological similarity between networks than node similarity for obtaining the network alignment results, which may degrade the alignment accuracy when handling incomplete ppi networks or networks that may contain a relatively large number of false positive interactions.

in this paper, we propose a novel network alignment algorithm, called cufid-align . the algorithm estimates the node correspondence by measuring the steady-state network flow of a random walk model over an integrated network of the given ppi networks. to accurately estimate the node correspondence based on the steady-state network flow, in a way that effectively captures the biological significance, we design the markov random walk model such that the relative frequency that the random walker makes transitions between a pair of nodes in different ppi networks is proportional to the pairwise node similarity and the topological similarity between the surrounding network regions. the proposed scheme effectively captures the functional correspondence between nodes across different networks and the estimated node correspondence scores can lead to accurate network alignment results, as will be demonstrated through performance assessment based on real ppi networks.

methods
problem formulation
suppose that we have a pair of ppi networks with the graph representations gx=u,d and gy=v,e, in which nodes represent proteins in each ppi network , and edges  indicate that the corresponding protein u
i  binds with the protein u
j . the edge weights in the ppi networks can indicate the strength or confidence of the interactions between the proteins. given a pair of nodes across the ppi networks, we assume that the pairwise node similarity score s, ui∈u and vj∈v can be computed, for example, based on the sequence similarity between the proteins. in this study, we utilized blast bit scores between proteins as the pairwise node similarity scores. however, other types of similarity measurements  could be also used as the pairwise node similarity score in case such measurements can be easily obtained.

given a pair of ppi networks gx and gy, our objective is to derive the optimal one-to-one mapping a
∗ between nodes in different ppi networks. one possible criterion that could be used to find such a mapping is the maximum expected accuracy  criterion, which aims to maximize the expected number of correctly mapped nodes. provided that we can derive a pairwise node alignment probability prui∼vj|gx,gy, ui∈u and vj∈v, the optimal one-to-one mapping can be found by: 
  <dig> a∗=arg maxa∑∀ui∼vj∈aprui∼vj|gx,gy 


according to the mea criterion. this mea approach has been widely used by many multiple sequence alignment algorithms  and it has been shown to be useful for network alignment  <cit>  and network querying  <cit>  as well.

motivation and overview of the proposed method
based on the above problem setting, to construct a confident network alignment, it is crucial to accurately estimate the pairwise node alignment probabilities. to obtain biologically meaningful alignment results, it is necessary that the pairwise node alignment probability is proportional to both the pairwise node similarity  and the topological similarity between the subnetwork regions surrounding the nodes in the respective networks. this is based on the observation that orthologous proteins typically have a high level of compositional similarity and often display similar interaction patterns to their neighboring nodes  <cit> . to accurately estimate the pairwise node alignment probability by effectively integrating these two different types of similarities, we propose to utilize the concept of steady-state network flow . similar concepts have been previously adopted in various engineering applications to find the solutions to similar assignment problems. for example, in digital communication systems, the water-filling algorithm  <cit>  is utilized to compute the optimal allocation of resources. conceptually, it pours ‘water’ into an ofdm  channel, and the ‘water level’ in the ofdm channel is utilized to find the optimal solution of the transmit power for each subcarrier. in digital image processing, the so-called watershed method  <cit>  is used to find edges or contours of objects in the given image. the watershed method assumes that ‘water’ flows along the image gradient  and eventually reaches the local minima so that the ‘water level’ in the image provides the solution for the desired image segmentation.

in the proposed method, we measure the steady-state network flow in an integrated network that is obtained by combining the ppi network pair to be aligned. more specifically, edges are inserted between nodes in different networks that have positive pairwise node similarity, and the pairwise node similarity score is assigned as the edge weight . suppose we pour ‘water’ on the integrated network and that the amount of water flow is proportional to the edge weight. if a given pair of nodes in different ppi networks have higher pairwise node similarity and if their neighboring nodes also have higher pairwise node similarity, there would be a larger water flow between the pair of nodes in the long run. however, if the nodes have a similar topological structure  but if their neighboring nodes are not similar, there will be relatively small water flow between the pair of nodes . as a result, the water flow between nodes across different ppi networks provides an intuitive way of measuring the overall similarity of the nodes – or functional correspondence between the proteins. as will be shown later, the resulting node correspondence score obtained based on the concept of water flow in the integrated network can serve as an effective building block for constructing an accurate and biologically meaningful network alignment.
fig.  <dig> illustration for constructing the integrated network from a network pair. dotted lines in the left figure indicate the pairwise node similarity, in which the thickness of each line is proportional to the pairwise node similarity. to construct the integrated network, we insert an edge between each pair of nodes across different networks if they have positive pairwise node similarity


fig.  <dig> illustration of how node correspondence is measured based on the steady-state network flow. straight lines represent protein-protein interactions, and dotted lines indicate pairwise node similarity. in this example, there is a larger steady-state network flow between the node pair  than the node pair  because the node pair  has higher pairwise node similarity and as the nodes have similar interacting nodes in the respective networks. in contrast, although the node pair  has positive pairwise node similarity, the neighboring nodes in the respective networks are not similar, which leads to a smaller steady-state network flow between the nodes  compared to the flow between 




estimating the node correspondence through a markov random walk model
in order to effectively estimate the node correspondence by integrating both the pairwise node similarity and topological similarity using a markov random walk model, we first construct the integrated network g= by combining gx and gy. nodes of the integrated network g are the union of the nodes of gx and gy , and edges are the union of the edges of gx, gy, and additional weighted edges f, where f=sui,vj|ui∈u,vj∈v . on this integrated network g, we allow the random walker to randomly move from the current node to any of its neighboring nodes at each time step. we define two different types of random moves based on their starting and ending points. first, if the random walker moves from a node in u to a node in u , we define it as an intra-network random move, as the random walk takes place in the same ppi network. second, if the random walker moves from a node in u to a node in v , we refer to this as a cross-network random move. the intra-network random move mainly aims to capture the topological similarity between the two ppi networks while the cross-network random move aims to incorporate the pairwise node similarity between nodes that originally belong to different ppi networks.

the transition probabilities of the resulting random walker are determined as follows. suppose the two networks gx=u,d and gy=v,e have weighted edges, where the respective adjacency matrices are given by: 
 2a axi,j=dij,ui,uj∈d <dig> otherwise, 



 2b ayi,j=eij,vi,vj∈e <dig> otherwise. 


first of all, to compute the transition probabilities of the intra-network random moves, we transform the edge weighted adjacency matrix into a legitimate stochastic matrix by normalizing each row. that is, the transition probability of the random walker is proportional to the weight of the edge that connects the node at the current position of the random walker and the neighboring node  to which it wants to move. the resulting transition probability of any intra-network random move is given by 
  <dig> pki,j=1∑∀jaki,j·aki,j,k=x,y. 


eq.  can be rewritten in a simple matrix form, which is given by 
  <dig> px=dx−1·axandpy=dy−1·ay, 


where d
x is a u×u dimensional diagonal matrix such that dxi,i=∑∀jaxi,j, and d
y is a v×v dimensional diagonal matrix such that dyi,i=∑∀jayi,j.

next, suppose that the transition probability of the cross-network random move between two nodes in different networks is proportional to their pairwise node similarity score. that is, from the current position of the random walker in a given ppi network, the random walker is more likely to move to a node in the other ppi network with higher pairwise node similarity. this will increase the ‘network flow’ between nodes that have higher node similarity. the transition probability for a cross-network random move from a node u
i in gx to a node v
j in gy is then given by: 
  <dig> prvj|ui=px→yi,j=1∑∀vjsui,vj·sui,vj. 


in a matrix form, eq.  can be written as: 
  <dig> px→y=ds−1·s, 


where s is a u×v dimensional matrix for the pairwise node similarity score, and d
s is a u×u dimensional diagonal matrix such that dsi,i=∑∀jsi,j. similarly, the transition probability of a cross-network random move from a node v
i in gy to a node u
j in gx is given by: 
  <dig> pruj|vi=py→xi,j=1∑∀ujstvi,uj·stvi,uj, 


where s
t[v
i,u
j] is a [v
i,u
j]-th element of the transposed matrix of s. equation  can be written in a matrix form as follows: 
  <dig> py→x=st·dst− <dig>  


where s
t is a v×u dimensional matrix for the pairwise node similarity score, and dst is a u×u dimensional diagonal matrix such that dsti,i=∑∀jsti,j. in fact, the transition probability matrices p
x→y and p
y→x are normalized pairwise node similarity score matrices in the row-wise and column-wise manner.

finally, we can get the u+v×u+v dimensional overall transition probability matrix for the markov random walker over the integrated network g, given by 
  <dig> p=pxpx→ypy→xpy. 


based on the proposed random walk protocol, the random walker transits more frequently between the pair of nodes  if the node u
i and the node v
j have a higher pairwise node similarity and also if their neighboring nodes also have higher pairwise node similarity . so, as a result, the random walker will spend more time on an edge that connects a pair of nodes , ui∈u and vj∈v as their overall similarity  increases. hence, we can effectively estimate the pairwise node alignment probability – which should be proportional to the desired node correspondence – by measuring the steady-state network flow through each edge , ui∈u and vj∈v.

to compute the steady-state network flow, we first compute the steady-state probability π of the random walker for every node x∈u∪v in the integrated network. this is equivalent to the long-run proportion of time that the random walker spends at a given node x. the steady-state probability distribution is equivalent to the eigenvector of the transition probability matrix p that corresponds to unit eigenvalue. this eigenvector, hence the steady-state probability, can be easily obtained through the power method, as the transition probability matrix p will be generally sparse for real ppi networks  <cit> . the steady-state probability π can be viewed as the amount of ‘water’ at the node x in the long-run, and since the amount of the water flow is proportional to the edge weight, we can obtain the steady-state network flow along the edge  as follows : 
  <dig> cui,vj=πui·prvj|ui+πvj·prui|vj=πui·sui,vj∑∀vjsui,vj+πvj·sui,vj∑∀uisui,vj. 
fig.  <dig> illustration of the steady-state network flow. note that the red colored arrows indicate the intra-network random moves, while the blue colored arrows represent the cross-network random moves




this equation can be rewritten in a matrix form as follows: 
  <dig> c=πx·px→y+py→xt·πy, 


where c is a u×v dimensional matrix for the steady-state network flow , π
x is a u×u dimensional diagonal matrix such that π
x=π, ui∈u, and π
y is a v×v dimensional diagonal matrix such that π
y=π, vj∈v.

as in smetana  <cit>  and smetana-csrw  <cit> , we utilize the following probabilistic consistency transformation  given by: 
  <dig> c~=α·c+1−α·px·c·pyt, 


to update the estimated node correspondence scores. the above pct assumes that, given a pair of nodes, if their neighboring nodes have high correspondence, the node pair has increased chance to be aligned. that is, updating the estimated node correspondence score by utilizing the neighbor’s node correspondence could increase the overall accuracy of the node correspondence score. however, the pct also has the potential risk of creating or increasing false positive node correspondence. that is, some node pairs with zero  correspondence scores can have positive  node correspondence scores after performing the pct if they have neighboring nodes with positive correspondence scores, because pct propagates the node correspondence scores to neighboring nodes. therefore, to suppress false positive node alignments, we only keep the transformed scores that are larger than the  <dig> percentile . furthermore, we also keep the original scores c even if they are smaller than the threshold β. that is, 
  <dig> c¯i,j=gc~i,j=c~i,j,ifc~i,j≥βorci,j> <dig> otherwise. 


after transforming and removing node correspondence scores lower than a specific threshold using eq. , we obtain the final node correspondence scores c¯, which will be used to construct the network alignment.





constructing the pairwise network alignment
after computing the transformed node correspondence score c¯, we use the scores to construct the network alignment based on the mea criterion, based on the assumption that the pairwise node alignment probability is proportional to the obtained node correspondence score: 
  <dig> prui∼vj|gx,gy∝c¯ui,vj. 


finally, to find the optimal solution of eq.  based on the derived pairwise node alignment probability, we construct the maximum weighted bipartite matching  between gx and gy, using an efficient implementation of the mwbm algorithm included in the gaimc library  <cit> .

RESULTS
datasets and experimental set-up
we assessed the performance of cufid-align based on the isobase dataset  <cit> , which includes ppi networks of five different species: h. sapiens , m. musculus , d. melanogaster , c. elegans , and s. cerevisiae . ppi networks in the isobase dataset were constructed by integrating five different databases: biogrid  <cit> , dip  <cit> , hprd  <cit> , mint  <cit> , and intact  <cit> . in isobase, the h. sapiens network has  <dig>  proteins and  <dig>  interactions; the m. musculus network has  <dig>  proteins and  <dig> interactions; the d. melanogaster network has  <dig>  proteins and  <dig>  interactions; the c. elegans network has  <dig>  proteins and  <dig>  interactions; and the s. cerevisiae network has  <dig>  proteins and  <dig>  interactions.

we assessed the quality of the predicted network alignment based on the following metrics: correct nodes , specificity , gene ontology consistency  scores, conserved interactions , conserved orthologous interactions , and computation time. note that cn, spe, and goc scores assess the biological significance of the alignment, and ci and coi assess the topological quality of the alignment. if the aligned nodes have the same functional annotation based on the kegg orthology  group annotations  <cit> , we considered the node alignment to be correct. cn counts the total number of correctly aligned nodes in a given network alignment. spe is the relative ratio of the total number of correctly aligned node pairs to the total number of aligned node pairs.

to further assess the functional consistency of a given network alignment a, we used goc scores, which can be computed by 
  <dig> goca=∑∀ui∼vj∈agocui,vj=∑∀ui∼vj∈agoui∩govjgoui∪govj, 


where g
o denotes the set of all go terms assigned to the protein x. to compute the goc scores, we downloaded the latest version of go annotations for each species from go consortium  <cit>  . we only used go terms that have experimental evidence . additionally, similar to  <cit> , we removed every go term whose information content  was smaller than  <dig>  in order to compute goc scores based on more informative go annotations. ic is defined as 
  <dig> icc=−log2crootc, 


where |c| is the number of proteins having the particular go term c, and |r
o
o
t| is the total number of proteins under the root go term of the particular go term c, where three root go terms are molecular function , biological process , and cellular component . note that if at least one protein in the aligned protein pair does not have a functional annotation such as ko group annotations or go terms, the aligned protein pair was removed before computing the performance metrics cn, spe, and goc scores.

to assess the topological quality of the constructed network alignment, we counted the number of conserved interactions  as follows: 
  <dig> ∑∀ui,uj∈d1ui,uj∈d·1∈e, 


where  <dig> is the indicator function whose value is  <dig> if the statement in the bracket is true and  <dig> otherwise, and f denotes the corresponding protein aligned to the protein x. however, the conserved interactions may not be necessarily be significant from a biological perspective if the aligned proteins connected by the conserved interactions are not orthologous. considering the large size of typical ppi networks, simply aiming at a network alignment that maximizes the number of conserved interactions may risk overfitting the network topology without clear biological significance, which can be especially problematic when ppi networks are incomplete and noisy. for this reason, in order to assess the biological significance of the topological mapping in a given network alignment, we counted the number of conserved orthologous interactions, which is the number of conserved interactions between orthologous protein pairs . this is given by: 
  <dig> ∑∀ui,uj∈dhui,uj·1ui,uj∈d·1∈e, 


where 
  <dig> hui,uj= <dig> ifgocui,fui·gocuj,fuj> <dig> otherwise. 


we compared the performance of cufid-align against a number of state-of-the-art alignment methods: isorank  <cit> , smetana  <cit> , smetana-csrw  <cit> , pinalog  <cit> , and hubalign  <cit> . additionally, to verify the effectiveness of the network-based approach over the conventional approach that uses sequence similarity alone, we compared the various network-based methods and with a method that finds the best mapping between networks solely based on the sequence similarity between the proteins. more specifically, given a network pair, we tried to predict the network alignment by using maximum weighted bipartite matching based on blast bit scores. since both smetana and smetana-csrw yield many-to-many mappings by default, we used the parameter n
max= <dig> to obtain one-to-one mappings. other than this, the default parameters were used in our experiments . for hubalign, we used the default parameters . for isorank, we set the parameter α= <dig>  as recommend in the original paper. for cufid-align, we set the parameter α= <dig>  and β= <dig> percentile of the transformed correspondence score. we performed all experiments on a desktop computer equipped with a  <dig>  ghz intel i <dig> quad-core processor and  <dig> gb memory.

performance assessment based on the isobase dataset
we assessed the performance of cufid-align by predicting the alignment for every pair of ppi networks in the isobase dataset. cn and spe are summarized in table  <dig>  as we can see, cufid-align and blast-mwbm achieve higher cn in all test cases. this means that cufid-align and blast-mwbm can generally align a larger number of proteins that have the same functional annotations  than the other state-of-the-art network alignment methods. interestingly, the sequence-similarity-based approach can identify a larger number of correct nodes  than most of the other network-based approaches. however, as will be shown later, it is clearly biased and the method performs very poorly in terms of the topological quality of the predicted network alignment. cn for pinalog and hubalign may depend on the average degrees of the ppi networks . that is, if one of the ppi networks has a much lower average degree, the overall quality of the network alignment may be significantly degraded. note that human, yeast, and fly ppi networks have relatively higher average degrees, and mouse and worm ppi networks have relatively lower average degrees. since pinalog and hubalign adopt a seed-and-extension approach, the search space for aligning addition protein pairs is restricted to the neighboring nodes of the seed network. hence, it would be possible that pinalog and hubalign may align proteins even though there is no orthologous protein pair in the search space , which may affect the quality of the final alignment.
 <dig> 
 <dig> 
 <dig> 
 <dig> 
blast-mwbmc
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 

acn: ccorrect nodes


bspe: specificity


cblast-mwbm: maximum weighted bipartite matching of ppi networks only using the blast bit score

in each column, the best performance is shown in boldface




when it comes to the specificity of the alignment results, random walk based methods  achieve relatively higher spe compared to pinalog and hubalign. spe of hubalign appears to be more sensitive than the other methods with respect to the average degrees of the ppi networks. cufid-align, smetana-csrw, and smetana achieve similar spe, often higher than those of pinalog and hubalign. this means that cufid-align can in general more accurately align protein pairs that have the same functional annotations compared to pinalog and hubalign.

since proteins can have multiple functions, we further evaluated the functional consistency of the alignment results based on the goc scores, where higher goc scores indicate that the obtained alignments are functionally more coherent. as we can see in fig.  <dig>  cufid-align achieves higher goc scores than the other compared algorithms in all test cases. again, if the network pairs have higher average degrees, pinalog and hubalign show comparable goc scores. however, probably due to the restricted search space of the seed-and-extend approach, goc scores of pinalog and hubalign tend to be smaller than the other methods when the average degree of one of the ppi networks is relatively smaller than that of the other. in comparison, cufid-align is more robust to the change of topological properties such as the average degrees of the ppi networks to be aligned.
fig.  <dig> goc scores of various pairwise network alignment algorithms




the above results show that cufid-align can accurately predict matching proteins in different species that have similar functionalities, according to the functional annotations of proteins that are currently available. the results also imply that the proposed algorithm may provide a useful tool for predicting the functions of unknown proteins in less studied species through network alignment with species that have been better studied.

next, to assess the topological quality of the network alignment results, we compared the number of conserved interactions  predicted by different methods. table  <dig> shows the ci for all compared methods. as we can see in table  <dig>  cufid-align can identify a larger number of conserved interactions than smetana-csrw and smetana, but it is smaller than hubalign and pinalog. in fact, our results show that pinalog and hubalign outperform the other methods in terms of ci. one interesting observation is that although pinalog and hubalign can identify a large number of conserved interactions compared to cufid-align, goc scores for pinalog and hubalign are much smaller than cufid-align as shown in fig.  <dig>  since both pinalog and hubalign adopt a seed-and-extension approach, the algorithms only align protein nodes if they are connected to the seed network alignment. pinalog and hubalign may have a higher risk for overfitting the prediction outcomes to the topological structure of the ppi networks compared to the other methods, and they may not as effectively deal with the inserted or deleted nodes as the random walk based methods, which may be problematic when handling ppi networks that are incomplete and/or contain many errors . as the goc scores were low for pinalog and hubalign, despite the high ci they attained, we wanted to further evaluate the biological significance of the conserved interactions in the predicted network alignment results. for this purpose, we counted the number of conserved interactions between orthologous protein pairs. table  <dig> summarizes the number of conserved orthologous interactions  predicted by different algorithms. note that, for this experiment, we did not consider the alignment of networks whose average degrees differ significantly, since there will be only a small number of conserved orthologous interactions in such cases. table  <dig> shows that cufid-align achieves comparable or higher coi compared to pinalog and hubalign except for the alignment between the yeast and human ppi networks.




we also compared the network-based approaches with the sequence-similarity-based approach. as we can see in table  <dig> and fig.  <dig>  a simple sequence-similarity-based approach can construct network alignments with high functional coherence, and that the node similarity score may provide useful guidelines for identifying orthologous proteins. however, this results should be taken with a grain of salt, since they are likely due to the fact that the current functional annotations of proteins are often based on sequence similarity between proteins. as shown in tables  <dig> and  <dig>  blast-mwbm – which uses blast bit score and mwbm without using any network information – can identify a much smaller number of cis and cois compared to the network-based methods. these results imply that strong dependence on sequence similarity for constructing a network alignment has the potential risk of getting biased results that may fail to capture important protein interactions that are conserved across different species, which may be critical in deciphering the underlying cellular mechanisms that involve those interactions. in contrast, network-based methods, including cufid-align, that incorporate topological information for constructing network alignments can make accurate and balanced predictions that identify both orthologous proteins as well as conserved interactions. our results clearly show the importance of effective integration of node similarity and topological similarity for effective comparative analysis of ppi networks.

finally, table  <dig> shows the computation time for each method. as we can see in this table, cufid-align needs the least computation time among all compared methods in most test cases. computation time of hubalign largely depends on the average degrees of the ppi networks because hubalign takes a seed-and-extension approach, whose search space is strongly affected by the average degrees of the ppi networks to be aligned. computation time of smetana-csrw is proportional to the size of the ppi networks. the bottleneck for smetana-csrw is the step for constructing the transition probability matrix of the context-sensitive random walker , whose computation time is proportional to the size of the two ppi networks that need to be aligned. pinalog requires a relatively long computation time compared to other methods in most cases, as shown in table  <dig> 



extension of cufid-align for the alignment of multiple networks
in this work, we have focused on the steady-state network flow approach and its application to the pairwise network alignment problem. however, the problem of multiple network alignment has been gaining wide interest in the research community and its practical importance has been increasing as the number of available ppi networks for different species continue to increase. although it is beyond the scope of the current paper, we expect the extension of cufid-align for multiple network alignment will be relatively straightforward. first of all, to this aim, we can modify the transition probability matrix in eq.  by concatenating the normalized adjacency matrices and node similarity score matrices for the multiple ppi networks to be aligned. following the construction of this extended transition probability matrix, the steps for computing the node correspondence scores – shown in eqs.  and  – can be modified by constructing diagonal matrices and inserting corresponding the matrices into the diagonal terms. the extended version of cufid-align for multiple ppi network alignment is expected to have distinctive advantages over other existing multiple ppi network alignment algorithms. first, it may be able to estimate the ‘global’ node correspondence scores more accurately. currently, most multiple ppi network alignment algorithms estimate the node correspondence scores for every ppi network pair in the interest of computational complexity. the estimated pairwise node correspondence scores are later updated based on additional transformations to make them more suitable for multiple network alignment. however, considering that the ultimate goal is in constructing the alignment of multiple networks, it would be preferable to estimate the node correspondence scores  pr[u
i∼v
j|g] considering all networks, rather than just estimating prui∼vj|gx,gy based on the given network pair, where ui∈gx, vj∈gy, and g is the set of all ppi networks including gx and gy. since the aforementioned extension of cufid-align estimates the node correspondence scores based on an integrated network that combines all networks in g, it has the potential to accurately compute the posterior node-to-node alignment probability given all the networks. computation of such ‘global’ node correspondence score may lead to improved multiple network alignment results. second, the extended version of cufid-align will still be computationally very efficient, as most steps in cufid-align only require simple matrix operations even if extended to multiple networks. finally, the extended approach will require relatively low computational resources . for example, suppose that there are n ppi networks, where the number of nodes in the i-th network g
i is v
i. to align the n ppi networks, isorankn will need the pairwise node correspondence scores for each of the n <dig> network pairs, where for each pair, the algorithm will need to construct a |v
i·v
j|×|v
i·v
j| dimensional matrix. however, cufid-align can compute the global node correspondence scores by constructing a single ∑i=1nvi×∑i=1nvi dimensional matrix. we are currently working on extending cufid-align for multiple network alignment.

CONCLUSIONS
in this paper, we proposed cufid-align, a novel network alignment algorithm based on the concept of steady-state network flow of a markov random walk model on an integrated network. given a pair of ppi networks, cufid-align constructs an integrated network and a markov random walk model on the resulting network such that the steady-state network flow between a pair of nodes in different ppi networks increases when the nodes have higher pairwise node similarity  and topological similarity. for this purpose, the markov random walk model is designed to make more frequent transitions between protein nodes that have higher overall similarity, thereby making the steady-state network flow – which reflects the long-run behavior of the random walker – an effective measure of the correspondence between nodes that belong to different networks. as we have shown in our performance assessment results using real ppi networks in the isobase database, cufid-align can accurately align proteins with identical functional annotations at a relatively low computational cost. our results show that cufid-align may provide an effective means of computationally annotating the functions of proteins through comparative analysis of ppi networks.

