BACKGROUND
the receiver operating characteristic  curve has been widely used in various scientific fields, in situations where the evaluation of discrimination performance is of great concern for the researchers. the area under the roc curve  is the most popular metric because it has a simple probabilistic interpretation  <cit>  and consists of two important rates used to assess classification performance: the true positive rate  and the false positive rate . the former is a probability of an affected subject being correctly judged as positive; the latter is that of an unaffected subject being improperly judged as positive. these two rates are shown to be more adequate to evaluate the classification accuracy than the odds ratio or relative risk  <cit> . however, the auc has been severely criticized for inconsistency arising between statistical significance and the corresponding clinical significance when the usefulness of a new marker is evaluated  <cit> . recently, pencina et al.  <cit>  propose a criterion termed integrated discriminant improvement and show the advantage over the auc in the assessment of a new marker. in this context, the partial auc  is paid more attention than the auc, especially in clinical settings where a low fpr or a high tpr is required  <cit> .

dodd and pepe  <cit>  propose a regression modeling framework based on the pauc, and apply this framework to investigation of a relationship between a test result and the patient characteristics. cai and dodd  <cit>  make some modifications to improve the efficiency of the estimation for parameters, and provide graphical tools for the model checking. in regard to classification problems, pepe and thompson  <cit>  propose a method for deriving a linear combination of two markers that optimizes the auc as well as the pauc. however, as recognized by pepe et al.  <cit> , more general approaches are required when the number of markers is large. moreover, the nonlinear combination of markers is necessary to maximize the auc as well as the pauc even in a simple setting such that normality is assumed to the distribution of markers  <cit> . however, the existing methods  <cit>  only deal with the linear combination of markers.

in this paper, we propose a new statistical method designed to maximize the pauc, as an extension of aucboost  <cit> , using a boosting technique and the approximate pauc. the approximation-based method makes it possible to nonlinearly combine more than two markers, based on basis functions of natural cubic splines as well as decision stumps. the resultant score plots for each marker enable us to observe how the markers are associated with the outcome variable in a visually apparent way. hence, our boosting method attaches importance not only to the classification performance but also to the interpretation of the results, which is essential in clinical and medical fields.

this paper is organized as follows. in the methods section, we present a new boosting method for the maximization of the pauc after giving a brief review of the pauc and the approximate pauc. then, we show a relationship between the pauc and the approximate pauc in theorem  <dig>  which justifies the use of the approximate pauc in the boosting algorithm. in the results and discussion section, we compare the proposed method with other existing ones such as sdf  <cit> , adaboost  <cit> , logitboost  <cit>  and gamboost  <cit> . in addition, we demonstrate the utility of the proposed method using real data sets; one of them is breast cancer data, in which we use both clinical and genomic data. in the last section, we summarize and make concluding remarks.

methods
pauc and approximate pauc
partial area under the roc curve
let y denote a class label for cases  and controls , and x be a vector of p markers as x = . given a score function f  and a threshold c, we judge the subject as positive if f  ≥ c, and as negative if f <c. the corresponding false positive rate  and true positive rate  are given as  

where h is the heaviside function: h =  <dig> if z ≥  <dig> and  <dig> otherwise, and g <dig> and g <dig> are probability density functions given class  <dig> and class  <dig>  respectively. note that fpr and tpr are also dependent on the score function f. however, for the sake of simplicity, we abbreviate it when the abbreviation does not cause ambiguity.

then, the roc curve is defined as a plot of tpr against fpr when the threshold c moves on a real number line:  

and the area under the roc curve  is given as  

in this setting, we consider a part of the auc by limiting the value of fpr between α <dig> and α <dig>  with corresponding thresholds c <dig> and c <dig>  respectively:   

where  <dig> ≤ α <dig> <α <dig> ≤  <dig> . in this paper, we set the values to be  <dig> and  <dig> , respectively. however, it is also worth considering to take α1> <dig> and choose α2- α <dig> to be small enough, so that we essentially maximize tpr for the fixed range of fpr. then, the pauc can be divided into a fan-shaped part and a rectangular part:  

its probabilistic interpretation is offered by dodd  <cit>  and pepe  <cit>  as  

given samples from class  <dig>  and class  <dig>  the empirical form is expressed as   

where  and  are empirical values that are the closest to α <dig> and α <dig> respectively;  where  and  are thresholds determined by  and .

approximate pauc
as seen in equation , the empirical pauc is non-differentiable. eguchi and copas  <cit>  use the standard normal distribution function to approximate the auc, and applies an algorithms in order to maximize the auc. ma and huang  <cit>  and wang et al.  <cit>  employ the similar approximation to the auc by a sigmoid function for multiple marker combination. since there is no essential difference between the two approximations, we use the standard normal distribution for the approximation of the pauc:  

where α <dig> and α <dig> are defined in equation , and hσ  is an approximation of h by the standard normal distribution function, that is, hσ  = Φ. similarly, the corresponding empirical pauc is defined as  

where  and . a smaller scale parameter σ implies a better approximation of h.

paucboost with natural cubic splines
boosting
boosting is one of the most popular method for classification in machine learning community. the main concept is that the score function f is constructed based on various simple functions, termed weak classifiers. there exist many boosting methods according to the objective functions  <cit> . the seminal and important one is adaboost, whose objective function is the exponential loss and its algorithm with the iteration number t is as follows.

 <dig>  start with a score function f <dig> =  <dig>  i =  <dig>   <dig>  ..., n, where n = n <dig> + n <dig> 

 <dig>  for t =  <dig>  ..., t

 calculate the weights wt  

for , find the best weak classifier ft   

where ℱada is a set of weak classifiers taking values  <dig> or - <dig>  and i is the indicator function.

 calculate the coefficient βt   

 update the score function as  

 <dig>  finally, output a final score function as  

based on this iterative procedure, we propose the paucboost algorithm after defining the object function.

objective function
we construct a score function f in an additive model for the maximization of the pauc:   

where fk is the k-th component of f, and the plot of fk against xk is called a score plot that describes the association between xk and an outcome variable. the subset of weak classifiers for xk is given as  

where nk, l  is a basis function of xk for representing a natural cubic spline with mk knots, and zk, l is a standardization factor that makes the heights of nk, l's uniform. thus, fk  in equation  has the following expression.  

where βl's are coefficients that are calculated in the paucboost algorithm. then, the set of weak classifiers that we use in paucboost is defined as  

in this setting, the objective function we propose is given as   

where  is the second derivative of fk and λ is a smoothing parameter that controls the smoothness of f. it is rewritten as   

therefore, we have   

we remark that the scale parameter σ in the definition of  in equation  can be fixed to  <dig> because of equation . hence, we redefine the objective function as  

without loss of generality.

the maximum value that is attained by a set of  can take the larger value by replacing the functions with p sets of natural cubic splines. this can be proved in the same way as the result of generalized additive models  <cit> , because the penalty term is the same. hence, we find that the maximizer of the paucboost objective function is the natural cubic spline.

paucboost algorithm
using weak classifiers f 's ∈ ℱ, we construct a score function f for the maximization of the pauc. note that the coefficient β cannot be determined independently of the weak classifier, so we denote it as β in the following algorithm.

 <dig> start with a score function f <dig> =  <dig> and set every coefficient β <dig> to be  <dig> or - <dig>  so that the candidates of the initial score function have positive or negative derivatives.

 <dig>  for t =  <dig>  ..., t

 for all f 's ∈ ℱ, calculate the values of thresholds  and  of ft- <dig> + βt- <dig> f.

 update βt- <dig> to βt with a one-step newton-raphson iteration.

 find the best weak classifier ft   

 update the score function as   

 <dig>  finally, output a final score function as  

the dependency of the  on thresholds  and  makes it necessary to pick up the best pair , ft) at the same time in step  <dig> . this process is quite different from that of adaboost, in which βt and ft are determined independently in equations  and . because of the dependency and the difficulty of getting the exact solution of βt, the one-step newton-raphson calculation is conducted in the boosting process. the one-step newton-raphson update is also employed in logitboost  <cit>  and gamboost  <cit> . the details of the paucboost algorithm are given in additional file 1: details of the paucboost algorithm.

tuning procedure
we conduct k-fold cross validation to determine the smoothing parameter λ and the iteration number t. we divide the whole data into k subsets, and calculate the following objective function.  

where f denotes a score function that is generated by the data without i-th subset, and  is  calculated by the i-th subset only. the optimal parameters are obtained at the maximum value of pauccv in a set of grid points . in the case where the values of the pauccv are unstable, we calculate the pauccv  <dig> times and take the average to determine the optimal parameters. in our subsequent discussion, we set k =  <dig> and explicitly demonstrate the procedure in the section regarding real data analysis.

relationship between pauc and approximate pauc
we investigate the relationship between the pauc and the approximate pauc, which gives a theoretical justification of the use of the approximate pauc in the paucboost algorithm.

theorem  <dig>  for a pair of fixed α <dig> and α <dig>  let  

where γ is a scalar, Λ = g <dig> /g <dig> and m is a strictly increasing function. then, Ψ is a strictly increasing function of γ, and we have  

see additional file 2: proof of theorem  <dig> and corollary  <dig> for the details. note that theorem  <dig> holds for the approximate pauc by a sigmoid function, so it also gives the justification of the auc-based methods of ma and huang  <cit>  and wang et al.  <cit> , as a special case where α <dig> =  <dig> and α <dig> =  <dig>  as proved in eguchi and copas  <cit>  and mcintosh and pepe  <cit> , the likelihood ratio Λ is the optimal score function that maximizes the auc as well as the pauc. in general, the bayes risk consistency has been well discussed under an assumption of convexity for a variety of loss functions  <cit> . theorem  <dig> suggests a weak version of the bayes risk consistency for the nonconvex function in the limiting sense.

we also have a following corollary from theorem  <dig> 

corollary  <dig>  for any score function f, let  

where η is a score function, and γ is a scalar. for a fixed fpr of fγη, the tpr of fγηbecomes a increasing function of γ if and only if η  = m, where m is a strictly increasing function.

see additional file 2: proof of theorem  <dig> and corollary  <dig> for the details. note that the corollary holds for any fpr in the range of . hence, we find that the score function that moves every and all tpr's upward from the original positions, is nothing but the optimal score function derived from likelihood. this fact is not derived from the neyman-pearson fundamental lemma  <cit> , from which m is proved to maximize the auc as well as pauc. this corollary characterizes another property of the optimal score function m Λ.

RESULTS
simulation studies
we compare the performance of paucboost with that of the smooth distribution-free  method proposed by  <cit>  in a two-dimensional setting, and with those of other existing boosting methods: adaboost, logitboost and gamboost in a higher-dimensional setting. the simulation setting is similar to that of  <cit> . suppose that there are four types of sample distributions for each class, y =  <dig> or y =  <dig>  as shown in figure  <dig>  the first panel shows an ideal situation, where we see very little overlap between the two class-conditional distributions. the second situation is of practical interest for disease screening, where fpr must be restricted to be as small as possible, in a case where invasive or costly diagnostic treatments will follow. a small portion of samples from class  <dig>  is clearly distinguishable from the bulk of samples from class  <dig> . on the other hand, in the third situation, cases are completely within the range of controls, and therefore not useful for disease screening. the fourth situation is similar to the second one, but some of the samples from cases deviate from controls clearly on both side of the distribution, rather than only on one side. this situation could be worth consideration in a case where high tpr is required with very low fpr in the same way as in the second situation.

in the simulation study, we apply paucboost with  =  <dig> and  =  <dig> . the training data set contains  <dig> controls and  <dig> cases, and the accuracy of the performance is evaluated based on  <dig> repetitions using test data sets of size  <dig> .

comparison with sdf
we consider the second situation, where we assume normality distributions such as  and  with mixing proportion π =  <dig> , and the last situation: . that is, the conditional probability density function of a class label y given x is given by   

where Λ <dig> is the likelihood ratio:   

and ϕ is the standard normal density function. the resultant mean value  of the pauc based on paucboost turns out to be  <dig>  , and the value of sdf to be  <dig>  . this large difference is because sdf assumes linearity of the score function of f as  

and the coefficient of x <dig> is estimated by sdf to be around  <dig> as shown in figure  <dig> , under the condition that λ <dig> is fixed to  <dig>  on the other hand, paucboost considers the nonlinearity of f as  

as shown in figure  <dig>  the left panel shows the score plot of x <dig>  and the right one shows that of x <dig>  the paucboost clearly captures the nonlinearity of f <dig> , where one of the optimal score function in this setting is derived from equation  as  

note that the roc curve is invariant to a monotone transformation of the score function.

although a nonlinear transformation could be applied to the data in advance, it is not practical to examine all marginal distributions and decide the appropriate transformations in general situations. hence, it is better to take the nonlinearity into consideration in the method itself in this way.

we have also confirmed that the performance of paucboost is compatible with that of sdf, in a setting when linearity of the score function is reasonable. we have averages of  <dig>   and  <dig>  :  

where  

the one of the optimal score function is given by  

it is interesting to note that almost the same results are obtained by these quite different statistical methods. sdf uses the estimated values of pauc to derive a score function; on the other hand, paucboost directly uses the empirical value of the approximate pauc in the algorithm.

comparison with other boosting methods
we focus on only the most practical situation in disease screening such as the second situation in figure  <dig>  pepe et al.  <cit>  show the utility of the use of the pauc, in selection of potential genes that are useful for discrimination between normal and cancer tissues. the point is that the value of pauc reflects the overlap of two distributions of controls and cases, so that we can select genes that are suitable for the purpose of further investigation. for example, some overexpressed genes encourage us to investigate the corresponding protein products. however, the task of how to combine the selected genes for better discrimination is still pending.

suppose we select  <dig> genes by a filtering procedure, which are closely correlated each other, such that 50-dimensional gene vectors for class  <dig> and class  <dig> are distributed as  and , respectively. the covariance matrices are designed as Σ <dig> =  <dig>  × w <dig> +  <dig>  × i and Σ <dig> =  <dig>  × w <dig> +  <dig>  × i, where w <dig> and w <dig> are  <dig> ×  <dig> matrices that are sampled from wishart distribution with the identity matrix and  <dig> degrees of freedom at every repetition of the simulation. the identity matrix i is added for avoiding the singularity of the covariance matrices. these matrices are normalized to have 1's on the diagonal part in the similar way to the simulation setting of zhao and yu  <cit> , and the range of the correlations turns out to be about between  <dig>  and - <dig> . then, we randomly replace  <dig> percent of samples from class  <dig> with those that are distributed as  for each gene, so that each gene is informative in the sense of the pauc as shown in the second situation of figure  <dig> 

next for illustration of the gene selection of paucboost, we added some noninformative genes to the  <dig> genes above, i.e., genes that are assumed to be normally distributed with the same mean and the same covariance matrix: , where ∑ is generated in the same way as above. the results in the left panel of figure  <dig> are the almost the same as those in figure  <dig>  however, we can find a clear difference between the right panels. the performances of all methods except for paucboost go down on a relatively large scale. we can observe that the mean values of the pauc by paucboost are above the upper sides of the 95% confidence bands of those by aucboost after around t =  <dig>  this is mainly because of "false discovery", or selection of noninformative genes by chance. figure  <dig> shows the resistance of paucboost to false discovery. the mean values of percentage of false discovery  are plotted in the left panel; the  <dig> percent confidence bands  are plotted in the right panel, against the iteration number t, respectively. we see that the boosting methods other than paucboost select noninformative genes from the early stage of boosting procedure. the difference of performance of paucboost from the others is 95% significant after around t =  <dig> as shown in the right panel. the upper side bands of the 95% confidence bands reached  <dig> at the very beginning of the iteration for aucboost, adaboost, logitboost and gamboost. the boosting methods other than paucboost clearly suffer from false discovery. paucboost seems to have an advantage because it focuses on the essential part of the sample distribution in the sense of the pauc.

mainly, there are two types of weak classifiers: smoothing splines and decision stumps. buhlmann and yu  <cit>  proposed to use smoothing splines in the l <dig> boost algorithm, and tutz and binder  <cit>  used b-splines in gamboost. however, the way of fitting the weak classifiers in paucboost is different from those methods. our algorithm updates a score function with a basis function of a natural cubic spline for one marker in equations  and . on the other hand, their algorithms update a score function with a set of basis functions for one marker. hence, our resultant score functions have tendency to have simpler forms , which also leads to simple interpretation of the association between the markers and the outcome variable. note that there exists a trade-off between the simplicity and the number of markers necessary for good performance of discrimination. however, the simplicity depends on the number of basis functions used for the selected markers, so the more complicated association can be expressed by increasing the number of the basis functions.

in adaboost and logitboost, decision stumps are used as weak classifiers  <cit> 
. the advantage of using decision stumps is that we can apply the boosting methods independently of the scale of the marker values. hence, the decision stump-based method is resistant to outliers, which often occur in real data. however, it easily suffers from false discovery, as clearly shown in simulation studies. this causes poor performance in a setting where non-informative genes are mixed with informative ones. we have also confirmed that paucboost with decision stumps for weak classifiers shows worse performance than that of paucboost with natural cubic splines. hence, we have to be much careful about which weak classifiers to be employed. it depends on the types of markers or the purpose of the analysis we are engaged in.

application of paucboost to real data
breast cancer data
the breast cancer data of van't veer et al.  <cit>  contains not only gene expression profiles but also clinical markers such as age, age of patients; size, diameter of breast cancer; grade, tumour grade; angi, existence or nonexistence of angioinvasion; erp, er expression; prp, pr expression; and lymp, existence or nonexistence of lymphocytic infiltrate. first, we apply aucboost to these clinical markers and investigate their utility. the weak classifiers we use are natural cubic splines for continuous markers , and decision stumps to discrete or categorical markers. second, we apply paucboost with  =  <dig> and  =  <dig>  to the gene expression data after a pauc-based filtering procedure proposed by pepe et al.  <cit> . the training data set and the test data set are the same as those in  <cit> , that is,  <dig> patients with good prognosis and  <dig> patients with distant metastases for training data, and  <dig> and  <dig> patients for test data, respectively.

next, we analyze the gene expression data as follows. the informative genes were selected, in the same way as  <cit> , from the total of  <dig> genes according to the criteria that the genes are two-fold regulated and that the p-values are less than  <dig>  in more than  <dig> patients. then, the approximately  <dig> filtered genes were ordered based on their values of the pauc with  =  <dig> and  =  <dig> . in order to assess the variability of the top genes, we used the probability of gene selection proposed by pepe et al.  <cit> , that is   

where k was set to  <dig> in this analysis and this probability was calculated by  <dig> bootstrap resampling replications. table  <dig> shows the results of the top  <dig> genes ranked by pg , along with the values of pauc and auc calculated from the original data. we picked up significant genes with pg  >  <dig> , and applied paucboost to the  <dig> genes. the score plots in figure  <dig> describe the nonlinear association between gene expressions and the prognosis. among the  <dig> genes, contig41613_rc showed a nonlinear and nonmonotonic association. that is, the gene expression of the patients with metastases had large variance as shown by the rug plot, compared with that of patients with good prognosis, which had a tendency to take small absolute values and concentrate around the origin. the nonlinearity of the associations can be captured by paucboost in this way. the values of tuning parameter λ and t were determined to be 10- <dig> and  <dig> by 10-cross validation, as described in the left panel in figure  <dig>  the value of a is very small, and it seems to be ignorable. however, since the value of a has an implicit role to control the accuracy of approximation of the pauc as seen equations  and , it should not be set to  <dig>  the right panel in figure  <dig> shows the pauc for training  and test  data, as a function of t with λ = 10- <dig>  we saw that both of the values for training and test data are more than  <dig> times larger than those of van't veer et al.  <cit> :  <dig>  and  <dig> , respectively. finally, we confirmed that the nonlinearity of score function f as shown in figure  <dig> played an important role for the classification performance. see the score plots that are generated by only linear basis functions of natural cubic splines in figure  <dig>  and resultant values of the pauc in figure  <dig>  both the values of the pauc based on training data and those on test data changed for the worse. the results of other boosting methods, and the results for less stringent bounds on the values of  are presented in additional file 3: supplementary results of breast cancer data analysis.

ovarian cancer data
this dataset was analyzed by pepe et al.  <cit>  for illustration of their pauc-based filtering procedure in equation . it consists of  <dig> genes spotted on the glass arrays, and is available from the website of a textbook by pepe  <cit> . it includes  <dig> controls with normal ovarian tissues and  <dig> cases with ovarian cancers. we divided the whole data into training data and test data in the ratio of  <dig> to  <dig>  that is, the first  <dig> controls and  <dig> cases in the original data are used for training data; the others are for test data. using the training data only, we ranked the genes according to the value of the pauc with  =  <dig> and  =  <dig> , and assessed the variability as in the breast cancer analysis above. then, we picked up  <dig> genes that satisfy pg >  <dig>  in the same way as pepe et al.  <cit> . we found that there are  <dig> common genes to theirs, including g <dig> that ranked best in their analysis. for these  <dig> filtered genes, we applied paucboost and had the resultant score plots in figure  <dig>  as seen is figure  <dig>  the paucboost selected  <dig> genes and attained the maximum value of the pauc . finally, we assessed the classification performance based on the independent test data, and had a high value of the pauc . the classification is relatively easy, so the results of other boosting methods also reached the same values of the pauc based on the independent test data.

leukemia data
the third data we analyzed is leukemia data  <cit> . it contains  <dig> training samples and  <dig> test samples with  <dig> genes for acute myeloid leukemia  and acute lymphoblastic leukemia . we repeated the same procedure as the previous two analyses above using the  <dig> filtered genes that satisfy pg >  <dig> . we achieved the perfect classification performance regarding both training and test data sets, and had the score plots in figure  <dig>  the results of other boosting methods produced similar but a little worse values of the pauc. that is, the values are more than  <dig>  but less than  <dig>  on the basis of test data.

CONCLUSIONS
we have developed the paucboost algorithm to maximize the pauc based on the approximate pauc in the additive model. the use of the approximate pauc is justified by showing a relationship with the pauc in theorem

a resultant score function is decomposed componentwise into functions that are useful for understanding the associations between each marker and the outcome variable, as shown in real data analysis. natural cubic splines that give the maximum of the paucboost objective function are used for markers taking continuous values. in addition, using decision stumps for markers that take discrete or categorical values the proposed method enables us to treat various kinds of markers together.

we have also provided a consistent way to analyze gene expression data in the sense of the pauc, as shown in the analysis of the breast cancer data, ovarian cancer data and leukemia data. the pauc is shown to be useful by pepe et al.  <cit>  for selection of informative genes, some of which are overexpressed or underexpressed in cancer tissues. however, how to combine the selected genes and how to discriminate the cancer tissues from normal tissues, have not been addressed. we nonlinearly combined the genes ranked by the pauc in order to produce a score function, by which the classification of controls and cases is done. interestingly, we have found  <dig> genes in common with the  <dig> genes of van't veer et al.  <cit> : contig63649_rc, aa555029_rc, contig40831_rc, nm_l <dig>   <dig> genes among the selected  <dig> genes are related to protein coding. we also applied paucboost to the  <dig> genes for comparison with the result from the  <dig> genes. we found that it yielded a poor result, especially about the value of pauc for test data. hence, paucboost with fpr restricted to be small should be applied to the genes or markers that have gone through a pauc-based filtering procedure beforehand. in the usual analysis setting, in which markers do not have especially high values of the pauc, aucboost is preferable because of the stable performance due to the comprehensive information it can take into the algorithm.

authors' contributions
ok carried out the simulation study and the real data analysis. ok and se are responsible for the algorithm of proposed method, the proof of theorem  <dig> and corollary  <dig> in additional file  <dig>  they drafted the manuscript and approved the final manuscript.

supplementary material
additional file 1
details of the paucboost algorithm. gives the details of the paucboost algorithm.

click here for file

 additional file 2
proof of theorem  <dig> and corollary  <dig>  contains the details of the proof of theorem  <dig> and corollary  <dig> 

click here for file

 additional file 3
supplementary results of breast cancer data analysis. describes the supplementary results of breast cancer data, where the range of fpr is more relaxed.

click here for file

 acknowledgements
the authors would like to express acknowledgement to professor john copas who kindly gave us some useful comments and suggestions to this paper. we also note that this study is supported by the program for promotion of fundamental studies in health sciences of the national institute of biomedical innovation .
