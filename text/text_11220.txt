BACKGROUND
genes are homologous if they share a common evolutionary origin. homologous genes in different species are defined as orthologs if they descend from a single gene in the last common ancestor  <cit> , and outparalogs, if they diverged via duplication before this ancestor. for two orthologous genes, if either has duplicated since the speciation event that separated them, the resulting copies in one species will all be inparalogs with respect to each other, and co-orthologs to the corresponding gene in the other species. all the genes in two species which descend from a single gene in the last common ancestor of those species form a set of genes called an ortholog cluster or group  <cit> .

the more genomes are sequenced, the more important orthology identification becomes. this is because orthologs often have the same or closely related functions in the extant species and therefore can be used for the transfer of functional information. for example, the functions of human genes can be identified by studying their orthologs in other organisms. likewise, transfer of functional information between orthologs is important for annotation of newly sequenced genomes  <cit> . however, while there is significant evidence that orthologous proteins generally have similar functions  <cit> , the assumption that orthologs are functionally more conserved than other homologs at the same separation has not been systematically evaluated  <cit> .

protein domains are modules of protein architecture, typically made of independently folding subsequences that can be found in different arrangements in different proteins. the pfam database  <cit>  contains assignments of domains to the proteins in the major protein databases. these pfam-a domains are made using hidden markov models  trained on manually curated seed sets of biologically relevant protein domains. we define a domain architecture as the sequential arrangement of pfam-a domains along a protein sequence, in n- to c-terminal order.

proteins evolve by point mutations, insertions, and deletions. the latter two can occur locally, involving a few residues, or affect one or more entire domains  <cit> . domain-level mutations often occur through gene fusion events or because new stop codons truncate or split genes. one expects domain-level mutations to be more common towards protein termini because these are less buried and therefore more replaceable than domains towards the middle. such a bias towards architecture changes at the termini rather than in the middle has indeed been observed in several studies  <cit> . it should, however, be noted that the frequency of terminal domain architecture change events could be overestimated in some datasets, because the risk of error occurring in gene detection is higher by the edges of proteins. furthermore, it has been shown that the function of a protein can be affected by changes in its domain architecture  <cit> , or predicted from its domain content  <cit> .

previous work suggests that orthologs tend to have the same domain architecture. lin et al.  <cit>  investigated the degree to which pfam domain architectures are conserved within kog  <cit>  ortholog clusters and found that 81% of all domain architectures were found in a single kog only, and that 65% of all kogs included no more than one distinct domain architecture. it is thus clear that orthologs tend to have the same domain architecture. but are they more similar in this regard than paralogs at the same degree of evolutionary separation? orthologs are generally expected to experience stronger evolutionary pressure to maintain the same function than paralogs. if the functional roles shared by orthologs are filled by means of the proteins possessing a specific domain architecture - that is, if domain architecture is an important vehicle of protein function - then we should see this greater pressure expressed through higher conservation of domain architecture. if orthologs have relatively more conserved domain architectures than paralogs at the same evolutionary distance, such conservation may also be useful to distinguish between the two relationships for specific proteins. to test the above hypothesis, we compared the degree of domain architecture conservation between pairs of orthologous and paralogous proteins relative to their evolutionary divergence.

various measures of domain conservation have been suggested  <cit> . lin et al  <cit>  introduced a composite metric for architecture similarity with separate contributions from domain content and domain order. the parameters of this metric were optimized for resolving homologs versus non-homologs. because of this, it is relatively complex and less ideal for applications where the primary purpose is to compare domain architectures for its own sake, rather than as an indicator of homology. the edit distance based method of björklund et al  <cit>  is more straightforward for this purpose, but it is a distance measure rather than a similarity measure, and also not independent of the number of domains in a protein. because of these limitations, we constructed a metric using an edit distance-based framework similar to that of björklund et al  <cit> , but inverted and normalized to produce a similarity measure, with some additional steps taken to handle phenomena such as variable-length repeat/motif domain stretches.

in the present paper, pairs of orthologs from inparanoid  <cit>  were compared to pairs of outparalogs and inparalogs with regards to domain architecture conservation, relative to the conservation of primary sequence. the human proteome and the proteome of  <dig> other species spanning the entire range of evolutionary distances, were considered. for each species comparison, pairs of orthologous and and non-orthologous proteins were generated. where differences in domain architecture were found, the domain swapping events that best explained each case were inferred. we also reassessed previous findings that domain change events are more common at the ends of proteins than in the middle. to explore domain architecture conservation among co-orthologs where gene duplication has occurred following the divergence of the two species, we also performed the same analysis for pairs of inparalogs and outparalogs. this large-scale study provides solid conclusions about the effect that orthology has on domain architecture conservation.

methods
species and sequences
proteomes were downloaded for all the species in version  <dig>  of the inparanoid database http://inparanoid.sbc.su.se <cit> . these are nonredundant in the sense of containing only the longest protein sequence for each gene, regardless of the existence of alternate spliceforms. additionally, proteomes for the bacteria mycobacterium tuberculosis and mycobacterium leprae as well as for the archaea aeropyrum pernix, methanococcus acetivorans, pyrobaculum aerophilum and sulfolobus acidocaldarius were downloaded from the cogent database  <cit> . these files were downloaded on february  <dig> and february  <dig>   <dig>  respectively, and the proteomes, being prokaryotic and hence lacking a splicing machinery, were assumed to be non-redundant. protein domain architectures were assigned under version  <dig>  of pfam  <cit> . additional file  <dig>  table s <dig> shows the full selection of species, as well as the number of clusters and proteins that were included in each species analysis.

construction of ortholog clusters
version  <dig>  of the inparanoid algorithm was used to generate ortholog clusters for the set of species included. ortholog and inparalog pairs were defined as pairs of proteins that are part of the same cluster in the same or different species, respectively. such clusters are generated by scoring each inparalog to the seed ortholog, but not to each other. the missing inparalog-inparalog scores therefore had to be generated. for  <dig> out of  <dig>  protein pairs considered, blast failed to align and score an inparalog pair in one or both directions; these pairs were excluded from the analysis.

identification of closest outparalogs
for all ortholog clusters in each species comparison made in this study, we identified the closest outparalogous proteins in the same and the other species. the former was defined as the sequence for which the blast bit score was highest out of all sequences in the same species that were not in the same ortholog cluster as a. the latter was defined similarly as the highest-scoring of all sequences from the other species that fall outside the ortholog cluster. the blast files generated when running inparanoid were used for the pairwise sequence scores. inparanoid default parameters were used: a score cut-off of  <dig> bits, an overlap cut-off of 50%, and a segment cut-off of 25%. if no significant matches remained after the removal of sequences clustered in the same cluster, the sequence was considered to lack a closest outparalog in that comparison.

pfam domain architectures
in this work, the term "domain architecture"  specifically means the sequential arrangement of known pfam-a domains along a protein, in n- to c-terminal order. pfam-a protein domain architectures were determined using the hmmer  <cit>  software under version  <dig>  of pfam. where proteins contained several consecutive domains of type motif or repeat, these were collapsed into a single pseudo-domain, following the approach used previously  <cit> . differences in repeat number of this type are considered evolutionarily and functionally less relevant because of how easily the number of repeats change relative to other domain architecture changes. stretches of consecutive pfam-a domains of type family or domain were retained without collapsing. pfam domains belonging to the same clan were considered equivalent with regards to the degree of domain architecture conservation. the analysis was limited to proteins with at least one pfam-a domain assigned.

domain architecture comparisons
domain architectures were compared by using pairwise domain architecture alignments. four different protein pair categories were analyzed. ortholog-ortholog  pairs are comparisons of proteins, one from each species, which are part of the same cluster. inparalog-inparalog  pairs are comparisons of proteins from the same species that are part of the same cluster. closest cross-species outparalog  pairs are comparisons of proteins, one from each species, where one of the proteins is part of a given orthology cluster, and the other is the closest protein in that species which is not part of the cluster. closest same-species outparalog  pairs are comparisons of proteins from the same species, one of them part of a given cluster, and the other the closest same-species protein which is not part of the cluster.

pairwise domain architecture alignment creation
we used a variant of the needleman-wunsch algorithm  <cit>  to align the pfam-a domain architectures of proteins. a domain match was given a score of  <dig>  a gap was given a score of  <dig>  and a mismatch was assigned a score of  <dig>  the high mismatch score was used to avoid aligning different domains with each other; that is, there is no biological reason for this specific choice of scores. affine gap penalties were not used.

scoring of domain architecture alignments
for each alignment, a domain architecture similarity score  was computed. this is based on the dcs  score described by song et al  <cit>  and adapted to take domain numbers and positions into account. the da-score is defined as follows:

  da-score=a <dig> 

where n <dig> is the number of domains in protein p <dig>  n <dig> is the number of domains in protein p <dig> and a <dig> is the number of domains in p <dig> and p <dig> which are aligned against an identical domain or a domain from the same pfam clan. another way of scoring domain architecture similarity in this framework would have been to use the needleman-wunsch score of the optimal alignment. we decided against this for several reasons. first, the impact on the result of the scoring scheme parameters would be larger, meaning that the already difficult problem of finding a biologically sensible scoring scheme would become more acute. assuming that our present scheme produces sensible alignments, the above score is insensitive to our choice of scoring scheme parameters. second, the da-score as defined above has the useful property that it ranges from  <dig> for proteins with disjoint domain sets to  <dig> for proteins with identical architectures.

a total da-score representing all alignments and clusters in a comparison was calculated. some clusters are large and therefore generate large numbers of alignments when all-versus-all ortholog or inparalog pair comparisons are made. averaging of scores for each cluster was done to ensure equal weight for each cluster. total scores were calculated by averaging the mean scores for all clusters. the final similarity scores are therefore means of mean scores. each protein pair will contribute only once, with one exception: where two proteins in different clusters are both each other's closest non-clustermate homolog, that pair will contribute to the mean score of both clusters.

protein sequence divergence
sequence identity across all pairs of proteins was computed by aligning the two proteins against each other using version  <dig>  of kalign  <cit> , with default settings. the sequence identity was taken as the ratio of identical residues to aligned residues, and the p-distance d equivalently becomes the ratio of residue differences to aligned residues. for the analysis of the sequence divergence dependence of the da-score, the p-distances were converted into evolutionary distances using the jukes-cantor correction for amino acid sequences  <cit> ,

  djc=-1920ln1-2019d. 

annotation of pairwise domain architecture alignments
all alignments that were not classified as identical or wholly dissimilar were annotated further. all differences between the aligned domain architectures were annotated as repetition differences, insertions/deletions of new domains, insertions/deletions of existing domains, segment duplications/deletions or domain shufflings. an unaligned domain could not have more than one annotation and all unaligned domains were given one of the five different annotations. figure  <dig> shows situations where the five different annotations are used. as previously stated, all domains belonging to the same pfam clan were considered identical.

a segment duplication/deletion  is defined as an unaligned segment of domains that is placed next to an identical aligned segment. a segment must be at least two domains long and must consist of domains of at least two different types. the unaligned segment can be longer than the aligned segment, but must then consist of repeats of the aligned segment.

assigning domain swapping event classes to protein pairs in order to explain their architectural differences was done by testing for the different events 1- <dig>  in that order of priority . there is thus an implicit precedence order when multiple possible events could explain the differences. the precedence order chosen here, while ad hoc, was considered to be reasonable with regards to how difficult each type of event might be for evolution to accomplish. in particular, changes in domain content were considered more uncommon than mere changes in order.

classifying the position of a domain architecture change event
for two aligned architectures, a difference between them, which was considered an architecture change event, was classified as being in the middle of the protein if there were aligned  domains both n-terminal and c-terminal to it. if there were aligned domains only n-terminal to the change event, it was classified as a c-terminal change, and if there were aligned domains only c-terminal to the change event, it was classified as an n-terminal change.

normalization by cluster size
the sizes of ortholog clusters vary extensively, either due to lineage-specific expansion of gene families or because of multiple splice forms sometimes being included. this variation could potentially bias the analysis in favor of a subset of proteins, particularly for analysis of inparalog-inparalog pairs. consequently, in the analyses that involved averaging over clusters, as well as in the analysis of the positional bias of architecture changes, we computed the average similarity of the pairs formed by each cluster, then the average similarity of these scores across all clusters.

binning analysis
the protein pairs from each category were divided up into bins based on jukes-cantor corrected amino acid distance. the thresholds for each bin were selected individually for each comparison of two pair types using the following procedure. pairs in each category were sorted on the binning variable, and, separately for each category, divided into n consecutive bins containing an equal number of points. the binning variable thresholds corresponding to these bins were then averaged across the two categories. sometimes, this left certain bins with too few protein pairs in either category. because of this, bin sizes were iteratively refined. first, the bin and category that contained the smallest number of pairs was identified. each bin has a lower and upper threshold . the distance these thresholds must shift to make the number of pairs of this category in the bin the same as in the neighbor bins was estimated, approximating each bin as having uniform pair density. if performing this shift in bin thresholds increased the size of the then-smallest bin × category combination, the change was accepted and another iteration started. if it was rejected, or if the smallest bin and category contained at least one percent of the total number of pairs in the dataset as a whole, the bin threshold set as a whole was accepted and the iteration procedure stopped. in some rare cases when dividing into n =  <dig> bins, this algorithm may yield a bin for which one category contains no points. in this case, no analysis is performed for that particular bin.

statistical significance tests
to test whether pairs from two categories  differed significantly with respect to mean da-score within a bin, we performed a randomized permutation test  <cit> . the protein pairs from both categories were pooled, and new sets of protein pairs, equal in size to the two categories, were drawn from this pool. this process was repeated  <dig> times, and the number of times that the difference in mean between the two sampled sets was at least as large as that between the two categories in the original dataset was tallied. the frequency with which that occurred then corresponds to the p-value for the null hypothesis, that the two categories would stem from a common distribution. within each experiment, these raw p-values were corrected for multiple tests  using bonferroni  <cit>  correction. the categories were thus considered to be significantly different if the raw p-values were below  <dig> /n, where n is the number of bins.

significance test for protein pair difference categories
to test whether the two homology types  differed with regards to how common the different domain architecture similarity classes and domain swapping event types were, we performed a variant of pearson's χ <dig> test  <cit> . for each species comparison, the number of pairs falling into each category was tabulated . the χ <dig> statistic was computed using a custom perl script  for the goodness-of-fit relative to a distribution of points across difference or architecture change categories estimated from both pair types together. the resulting statistic was then compared to a χ <dig> table of the respective number of degrees of freedom .

the χ <dig> is not recommended if any cell has an expected count lower than  <dig>  because of this, the difference category notsame and the architecture change categories domain shuffling and segment duplication/deletion were excluded from the respective analyses, making f =  <dig> in both cases. even so, in the architecture change comparison, expected counts went below  <dig> for the prokaryote comparisons, meaning that the test cannot be considered reliable for those species.

RESULTS
characterizing protein pair types
we computed the levels of domain architecture and primary sequence conservation for pairs of orthologous proteins, and compared these with corresponding figures for paralogous proteins at the same evolutionary divergence. we considered sets of ortholog clusters as defined by inparanoid, between homo sapiens and  <dig> other species. from these clusters, we extracted protein pairs falling into four types depending on their orthology status. see figure  <dig> for an illustration of how the orthology status of a protein is defined. ortholog  pairs contain one protein from homo sapiens and one orthologous protein from another species. inparalog  pairs are pairs of proteins within either homo sapiens or another species, which are part of the same ortholog cluster, and which thus have arisen through a gene duplication following the divergence of the two species. outparalog pairs of two types were considered: closest cross-species  and same-species  outparalogs. the former pairs consist of a protein from one species and the protein in the other species to which it is the most similar outside of the ortholog cluster. the latter, analogously, consist of a protein in one species and the most similar protein in the same species outside the cluster.

we would expect function to be more often conserved in o pairs than in other pair types because in other pair types, gene duplications would have relaxed pressure on one of the copies to retain the ancestral function. we further subdivided the o pair category into pairs from clusters with only a single member in each species , and pairs where gene duplication has occurred in either species. in the non-duplicated case, function conservation should be more frequent than in the case with duplication, as the latter offers more opportunity for undergoing and retaining functional shifts .

absolute domain architecture conservation
we developed a method to score the degree of domain architecture conservation between two proteins, called the da-score. this extends the dcs score of song et al  <cit>  by not only considering the domain content but also the actual alignment of domains . this way the domain order is taken into account. in this, it is similar to the domain architecture distance used by björklund et al  <cit> , but inverted and normalized to form an actual similarity measure. as previously stated, while the method of lin et al  <cit>  also provides a similarity measure for domain architectures, it is less straightforward and optimized for detecting homology rather than for describing the degree of architectural differences between proteins.

to avoid biasing the results towards large clusters we calculated the average score for all protein pairs of a given pair category in each cluster first, and then calculated the average of these average cluster values for each category. this is equivalent to normalizing by cluster size, which makes sense as an approach to avoid biasing the results in favor of trends exhibited by only a few large clusters. as our analysis is pairwise, the presence of a small number of large clusters, either artifacts or consequences of intensive gene duplication within some gene families, could lead to a relatively small number of genes completely dominating the results of the analysis. this might hide general trends, as well as bias the analysis unfairly towards certain gene functions or families.

as seen in figure 3a, increasing evolutionary distance is related to an increase in architectural differences, although there is a type of plateau behavior since sequences cannot grow too different and still be recognized as homologs. it is noticeable that outparalog pairs to exhibit higher domain architecture conservation in prokaryotes than in plants. possibly this is a consequence of prokaryotic proteins in general having fewer domains  <cit> .

the analysis was also done for orthologs split into 1- <dig> orthologs and duplicated orthologs, as shown in figure 4a. as expected, 1- <dig> orthologs have more conserved domain architecture. supplementary table  <dig> shows the fraction of these two pair types that have identical domain architectures. notably, for 1- <dig> ortholog pairs, the fraction of pairs with identical architectures is on average  <dig> % higher than for duplicated orthologs.

while the overall trends in figures  <dig>   <dig> are clear, neither the da-score nor the sequence divergence changes perfectly smoothly as we move to more distant species comparisons. this is to be expected for several reasons. the ncbi taxonomy is not perfect, and species that all share the same last common ancestor with human cannot be internally ranked. furthermore, evolutionary rates may vary between lineages, so that distance and branching order in a rooted topology will not always correspond perfectly.

domain architecture conservation relative to primary sequence conservation
given that inparanoid assigns orthology status using relative blast  <cit>  scores, it is not surprising that orthologs on average should exhibit lower sequence divergence than paralogs.

we therefore analysed how da-score is affected by sequence divergence, and whether this effect is the same for protein pairs of different orthology status. data from all species comparisons were pooled, and the clusters were divided into bins based on average sequence divergence for each pair type. this can be seen as way to normalize the da-score with sequence divergence, to determine whether there are differences between orthologs and non-orthologs with respect to how well architecture is conserved as primary sequence diverges. average da-score was first calculated for all pair types within each cluster, and then these values were averaged across all clusters. the first step was done to avoid biasing the results towards large clusters.

are differences between categories significant in a bin analysis of this type? sparsely populated bins might yield spuriously large differences between the mean values for the two categories just by chance. to avoid this we performed a randomization test for a significant  difference between the category means within each bin.

conceivably, an analysis of this type may yield errors if the categories have a significantly different distribution of data points  within each bin with respect to the variable which is binned on. false positive trends resulting from such conditions should increase in proportion if bins are made broader, and diminish or disappear if bins are made narrower. to investigate this we repeated the analysis using  <dig>   <dig>  and  <dig> bins, which all showed the same trend . this indicates that differences in sequence divergence distribution within individual bins cannot explain the significant differences in da-score we see between the categories.

these results, which appear to hold for ortholog and paralog pairs above an evolutionary separation of about  <dig> - <dig>  expected substitutions per site, indicate that conservation of domain architecture and of primary amino acid sequence are semi-independent properties, in the sense that protein pairs at the same level of sequence conservation will often vary predictably in architecture conservation depending on their orthology status. we interpret this as a higher relative conservation of function for orthologous protein pairs, which in turn confers a higher relative conservation of domain architecture than for other homologs. this in turn provides support for the widespread assumption that the domain architecture of a protein is informative with regards to its function.

comparison with previous work
as stated previously, lin et al  <cit>  investigated kogs  <cit>  clusters and found that 81% of architectures in their dataset belonged to a single kog only, and that 65% of the kogs in their dataset contained only a single architecture. additional file  <dig>  table s <dig> presents equivalent results for inparanoid clusters in our dataset. the overall trend across species appears to be similar. however, using inparanoid clusters, slightly fewer architectures  are found only in a single cluster, and significantly more clusters  contain only a single architecture. the differences between the study outcomes could stem either from our approach using pfam clans and collapsing repeat/motif families, which was not used by lin et al  <cit> , or it might reflect differences between kogs and inparanoid in that the former tends to merge clusters which are distinct in the latter  <cit> .

degree of architectural similarity
in order to analyse the nature of architecture differences between proteins, we defined four basic classes of domain architecture similarity. protein pairs with identical domain architectures belong to class identical. protein pairs with the same domain set but without all domains perfectly aligned  belong to class samecontentnotaligned. protein pairs with overlapping but not identical domain sets belong to class diffcontent, and protein pairs with disjoint domain sets belong to class noshared.

we compared how the ortholog  and cross-species outparalog  pairs fell into these classes. the overall trend across all species is shown in figure 6a. o pairs generally have more identical domain architectures  while opx pairs more often have different domain content . it is worth noting that it is very rare for two proteins to have the same domain content but not have identical domain architecture . in fact, this is substantially less frequent than having different domain content. apparently, when functional divergence is allowed, this normally happens by also changing the domain content rather than merely shuffling the existing domains.

the numbers for individual species comparisons are listed in supplementary table 5a. we did a statistical test  to assess the whether the distribution across the three classes identical, samecontentnotaligned and diffcontent  was significantly different between o and opx pairs. for  <dig> of the  <dig> species, the distributions were found to be significantly different . all of the non-significant results were in prokaryotes.

characterizing domain swapping events
for protein pairs in the classes samecontentnotaligned and diffcontent , we further analysed the presence of the five different types of domain swapping events described in figure  <dig> .

the overall averaged results are shown in figure 6b, and the per-species details in additional file  <dig>  table s5b. again, we compare the distributions among these categories for o versus opx pairs. for  <dig> of the  <dig> species, the distributions among the categories repetition differences, insertion/deletion of new domains and insertion/deletion of existing domains were found to be significantly different  under a χ <dig> test. . the non-significant species were all prokaryotes. additionally, for two prokaryotes where the difference was significant, the applicability of the χ <dig> test is questionable because at least one expected cell count was less than  <dig>  mainly, this difference seems to occur in opx pairs having fewer repetition differences than o pairs  and more often undergoing insertion/deletion of new domains .

for both pair types, it is striking how rarely segment duplication/deletion, domain shuffling, and insertion/deletion of existing domains is observed. almost all architectural differences can be explained by repetition differences or insertion/deletion of new domains. the fact that opx pairs have a higher degree of insertion/deletion of new domains supports their generally more relaxed functional constraints.

position bias of domain architecture change events
as previous work  <cit>  has shown that domain architecture changes preferentially seem to occur  at protein termini, we investigated whether such a trend holds true for this dataset as well. the change events within each orthology cluster were tallied, and the ratio of each position was taken for each cluster, then averaged across all clusters. additional file  <dig>  table s <dig> shows the distribution of events across the n-terminal, middle, and c-terminal categories. the results are basically in agreement with previous studies  <cit> : terminal events are more common than architecture changes in the middle of proteins, with some bias towards the n-terminal end. the same pattern held across distributions between different pair types.

discussion
we defined a measure for domain architecture conservation, the da-score, which together with our use of pfam clans for increased sensitivity and collapsing of repeat/motif-type families, allowed us to compare degrees of architecture conservation in a functionally and evolutionarily sensible way. by taking the da-score for inparanoid-defined orthologs, we were able to study in detail the degree of domain architecture conservation and variance exhibited by orthologous and other sequence pairs across a wide variety of species.

the central observation we make is that orthologs diverge more slowly in domain architecture than paralogs, relative to their divergence in primary sequence. this is consistent with higher selective pressure on orthologs to retain their ancestral domain architecture, and that orthologs are relatively more conserved with respect to function given that the particular domain architecture of a protein is required for its function to be carried out.

these conclusions are clear from the data for protein pair comparisons involving more distantly separated homologs, but not for close homologs. similar observations were made by peterson et al.  <cit>  who reported higher structural similarity between orthologous domains than between paralogous domains at equivalent evolutionary separation, but only throughout the range of 30-70% sequence identity. since no other strong and significant trends are present in the graphs, we view the strikingly higher relative conservation of orthologous architectures for distantly separated homologs as the most notable observation. why do we not observe it for shorter sequence separation ranges? some form of methodological or dataset artifact cannot be ruled out, but it could also correspond to a genuine biological difference between processes taking place over different timescales.

kondrashov et al.  <cit>  suggested, on the basis of a large-scale analysis of evolutionary rates in recent paralogs, that recently duplicated genes may in fact, despite seeming redundant, contribute to fitness through dosage effects. under this model, this fitness benefit would maintain a duplicated paralog in the population under weak purifying selection. once it has diverged sufficiently, mutations shifting its overall function may take place to fix it. if such functional shifts are associated with changes in domain architecture, our observations would match this model well. initially, duplicated paralogs resist domain-architecture changing mutations as retaining the ancestral function still provides increased relative fitness. as time goes by, sequence changes accumulate such that eventually an architecture changing mutation results in a novel protein variant which is more, or at least not less, favored by selection, resulting in two distinct stages of paralog, but not ortholog, evolution.

we observe that orthologous sequences detected using inparanoid share most if not all of their domains. what are the functional implications of a domain architecture alteration between orthologs? inparanoid, just like all other ortholog predictors, uses evolutionary criteria to assign orthology, and no functional information. the definition of orthology by fitch  <cit>  is also purely based on evolutionary relationships, and does not require that orthologs have exactly the same function. it may thus be the case that a fraction of the orthologs detected by inparanoid have undergone functional changes, and this fraction is likely to coincide with the orthologs altered in domain architecture. unfortunately, the present functional annotation is too coarse to assess whether this is indeed the case.

some insight into this issue can be provided by looking at the distributions of da-scores for different pair types. in figure  <dig> the average da-scores are shown, but the distribution in each sequence identity bin is relatively complex and difficult to represent well using standard measures. the majority of pairs for most bins and pair types have identical domain architectures . this fraction is higher for orthologs, especially non-duplicated ones, than for paralogs. for the pairs with a da-score <  <dig> , the trend across pair types is mostly reversed ; i.e. the mean da-score of non-identical orthologs is lower than that of non-identical paralogs. it is not immediately obvious how this surprising observation should be interpreted. this pattern would be consistent with a scenario where function conservation  dictates complete domain architecture preservation, yet when the function starts to diverge, the domain architecture does so too. for paralogs this dichotomy between identical/non-identical architectures would be less pronounced, as the requirements for function conservation are weaker.

one concern about the results presented here, is that inparanoid, like other schemes for systematically finding orthology relationships, is based on degrees of similarity between sequences, which might change as the domain architectures do. as long as inparanoid assignments are correctly made, there should be no problem. however, errors in cluster assignments, to the extent that they occur, are more likely to produce ortholog pairs with similar architectures and paralog pairs with dissimilar architectures, than the reverse. this risk for bias applies equally to any sequence- or structure-based method for orthology assignment, which includes all methods that could conceivably be used for a large-scale analysis of domain architecture evolution under orthology versus paralogy. in the absence of ways to evaluate the extent to which this factor impacts the result, it should be noted as a potential error source. however, to the extent that inparanoid itself is reliable, it should not strongly affect the outcome of this study.

we noted that both average sequence divergence and domain architecture conservation change noticeably as we cross the vertebrate-invertebrate border. this might be interpreted either as a consequence of high evolutionary rates early in the vertebrate lineage, a bottleneck effect where most sibling species of the early invertebrates did not survive, or an artifactual bias in the set of fully sequenced genomes available at this time. another interesting option might be rapid evolution following two consecutive whole-genome duplication events, which have been inferred to have taken place early in the vertebrate lineage  <cit> . given that we consider as many as  <dig> species, we feel confident that this phenomenon is biologically relevant rather than an artifact of the dataset.

CONCLUSIONS
this study has employed large scale data analysis to investigate the hypothesis that orthologs have a higher level of domain architecture conservation relative to their evolutionary divergence than other homologs. strong support for this proposition was found, at least for protein pairs that have diverged beyond a certain point. we conclude that it is possible to infer that orthology is accompanied by a selective pressure to retain domain architecture, and that the specific order of domains seems to be important to the function carried out by a set of orthologous proteins. further work should address the lack of this trend for recently diverged homologs.

authors' contributions
es conceived the study and developed the da-score together with ip. ip wrote most of the underlying software and performed some initial analysis. kf introduced the sequence divergence compensation procedure, carried out the main analysis, and performed all statistical tests. kf and es wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary tables. this file contains the following tables: table s1: this table shows the full selection of species, as well as how many clusters and proteins were included in each species comparison analysis. table s2: this table shows the fraction of ortholog pairs from clusters with and without duplications, respectively, that have identical domain architectures. table s3: bin borders, averages, number of clusters falling into each bin, and permutation test p values underlying figure 5a-c. note that these p-values should be measured against a bonferroni-corrected threshold, so for p <  <dig>  and n =  <dig> samples, significance requires that the value in the cell is smaller than  <dig> . table s4: spread of distinct architectures across clusters. table s5: a. distribution of protein pairs across domain architecture similarity classes in the various species comparisons. b. distribution of protein pairs where architectures differed across domain architecture change event classes in the various species comparisons. table s6: this table shows the distribution of domain architecture change events across the n-terminal, middle, and c-terminal domain position categories.

click here for file

 additional file 2
supplementary figure s1a-c. this file contains the following figure: figure s <dig>  a. domain architecture conservation across all species averaged within ranges  of sequence divergence, for pairs of orthologs versus closest cross-species outparalogs. the scores for each pair category were first averaged within each cluster so that each cluster contributes equally to the average scores regardless of size. error bars show the standard error of the means for each pair category. the triangle markers indicate significant difference between the category means within each bin. in these plots, the data was divided into  <dig> bins. b. the same analysis for inparalogs versus same-species outparalogs. c. the same analysis for orthologs versus inparalogs.

click here for file

 additional file 3
supplementary figure s2a-c. this file contains the following figure: figure s2a-c. same as s additional file  <dig>  figure s1a-c but with  <dig> bins.

click here for file

 additional file 4
supplementary figure s3a-c. this file contains the following figure: figure s3a-c. same as additional file  <dig>  figure s1a-c but with  <dig> bins.

click here for file

 additional file 5
supplementary figure s4a-c. this file contains the following figure: figure s4a-c. same as figure 5a-c but excluding clusters where all pairs have a da-score of  <dig> , to specifically consider clusters where architectures are not perfectly conserved.

click here for file

 acknowledgments and funding
es and kf were funded by the department of biochemistry and biophysics at stockholm university. ip participated in the project as a master's student.
