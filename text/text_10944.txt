BACKGROUND
cell migration is a highly complex process that integrates many spatial and temporal cellular events
 <cit> . it plays important roles in embryonic development, tissue repair, cancer invasion and atherosclerosis
 <cit> . recent advances in live-cell imaging yield vast amounts of image data
 <cit> , and a number of image analysis algorithms with high throughput capability have been developed
 <cit> . these were applied for example to characterize mutants that lack the ability to sense gradients of a chemoattractant, or contract their cell body less efficiently while moving.

our current view of moving cells is mostly based on 2d cross-sections through the centre of cells or evanescent wave imaging of the substrate attached cell surface. similarly, software developed for cell migration studies focuses primarily on migration in 2d. although treating cells as 2d entities has proven effective in understanding some aspects of cell locomotion and in identifying defects in a variety of mutants
 <cit> , neglecting the third dimension
 <cit>  results in several misconceptions
 <cit> . two-dimensional cross-sections give the wrong impression of cells being flat and uniformly attached, which in first approximation is adopted in many models of cell polarity and organization, although it is clear that the differences between the front and rear of a cell are as big as those between the ventral and dorsal sides. secondly, we falsely tend to assume that small shape changes in 2d cross-sections are accompanied by similarly small changes in the third dimension. thirdly, we often ignore that in vivo cells may crawl through complex 3d environments which can dramatically change cell behavior and the way that cells polarize when compared to 2d movement in a dish
 <cit> .

recent advances in live cell microscopy have made it possible to acquire high quality 3d+time volumetric images of cell migration. currently, the most widely applied 3d fluorescence imaging technique is fast spinning disk confocal microscopy which can typically acquire a stack of  <dig> slices within a few seconds and is therefore capable of imaging cellular deformations on the second timescale
 <cit> . since large and complex data sets typically consist of  <dig> – <dig>  single images
 <cit> , analysis tools with high throughput capability are needed.

although cell images can be visualized by methods of volume and surface rendering, both lack descriptive power. ideally we want to characterize global and local shape features by a manageable number of parameters. a concise description should allow for accurate comparison of object shapes in order to find dissimilarities, and for matching objects to predefined models, as well as for efficient reconstruction and manipulation of objects
 <cit> . the ultimate goal is to develop automated, efficient and objective methods that can create spatio-temporal maps of signaling transduction and corresponding cell surface deformations in order to further our functional understanding of cell motility in a quantitative way.

the most advanced software for analysing cell shape and motility of amoeboid cells such as neutrophils or dictyostelium is 3d-dias
 <cit> , which is commercially available. models of cell surfaces are mathematically reconstructed by beta-spline functions. 3d-dias allows visualization of 3d dynamics of cell surfaces, but since it works with lower contrast dic images and not fluorescence the resolution of the generated surface models is not optimal. also, it lacks automated analysis of cell surface deformations and fluorescence. current commercial software for quantifying 3d fluorescence images include meta-morph , volocity  and imaris , but they offer little in terms of cell shape analysis. advanced software has recently become available for analyzing simple cell shape changes of plants in 3d
 <cit> .

inspired by the previous works of
 <cit>  and
 <cit> , we present a new framework for 3d shape analysis of highly dynamic cells. in
 <cit> , 2d time-lapse images of moving cells were mapped onto the unit disk, which served as a reference frame both for registering cells across time and comparing different cells with varying shapes. here, we use spherical parameterization to map cell surfaces onto the unit sphere. spherical parameterization has been used extensively for brain cortex shape analysis
 <cit> . several open source software toolboxes are available such as spharm-pdm 
 <cit>  and spharm-mat 
 <cit> . since brain images from different time points or even from different individuals are quite similar, a normalized template is often used for shape analysis. in our application, however, cell shapes of moving cells usually vary greatly between different time points, and there is no common template. although spinning disk confocal microscopy allows acquiring time series of 3d stacks within seconds, short exposure times result in low signal-to-noise ratios. further complications can be inhomogeneous labelling , and ambiguous boundaries, making segmentation non-trivial.

our proposed framework includes five major steps: cell segmentation, topology fixing, spherical parameterization, shape representation, and shape comparison as illustrated in figure 
 <dig>  in this work, we will mainly focus on the first four steps while only briefly describing the final step for completeness. we extend our work for segmentation of individual cells
 <cit>  by adding an automatic seed detection method. a novel topology fixing method is then developed to create simply connected 3d objects required for spherical parameterization. both cell segmentation and topology fixing are formulated using a laplacian approach. we use the spherical parameterization method proposed in
 <cit> , and represent cell shape with spherical harmonics , which are very popular methods in brain cortex shape analysis. the techniques used for spherical parameterization and shape representation are again closely related to the laplacian operator. based on the above four steps, measurements of cell membrane deformations can be finally conducted. historically, a variety of solutions have been proposed for each of the above-mentioned steps. we here employ a common laplacian approach. although currently we are unable to exploit this feature to connect the different steps in an operative manner, we believe that a unified approach will help working towards this goal in future.

methods
segmentation
the segmentation of volumetric cell scans yields a partitioning in the form of binary 3d stacks. we begin by briefly explaining notations. given an image with n voxels, a weighted undirected graph g
s
 =  with vertices v ∈ v and edges e ∈ e is constructed. each voxel corresponds to a vertex v, and each pair of neighbouring vertices is connected by an edge e. the connectivity is  <dig> or  <dig> for 3d images. a
s
 ∈ r
n×n
 is a weighted adjacency matrix, which maps changes in the image structure to edge weights. the weighting function is defined as

  aijs=exp-ǁsi-sjǁ2/σs-ǁii-ijǁ2/σi 

where i
i
 is the image intensity value at vertex v
i
, and s
i
 indicates its spatial position. the graph laplacian matrix is then given by l
s
 = d
s
 - a
s
 where d
s
 is a diagonal matrix with elements given by the degree of vertices
dis=∑j∈vaijs.

care should be taken if the voxel spacing in z is different from that in x and y, and any anisotropy should be corrected by appropriate scaling factors. as we work with images which are downsampled in x and y  voxel spacings in x, y and z are almost identical and no correction is applied. when imaging dynamic processes, voxels within a given z-plane are theoretically more likely to be correlated since planes are acquired sequentially with some delay. in principle this could result in higher affinity values within a single plane, but as it is unclear how to quantify this effect we ignore it for now.

it is worth to note that the graph laplacian matrix l plays a key role in our framework. by building problem specific l, such as l
s
 the laplacian matrix for segmentation, and exploring its intrinsic eigenstructures, not only segmentation but also the subsequent steps including topology fixing, spherical parameterization, and shape representation can be performed.

random walker method
the random walker method proposed in
 <cit>  is a semi-automatic method, which requires the user to provide seeds indicating foreground or background. it has many nice characteristics, including trivial generalization to simultaneous multi-region and 3d segmentation, robustness to noise, weak boundaries detection, a sound theoretical basis, and a probabilistic output that can be employed to identify areas of uncertainty. the probabilities of unseeded nodes are found by

  minxxtlsx=∑eij∈eaijsxi-xj <dig> 

where x
i
 represents the probability of pixel i being foreground or background. based on the provided seeds, eq.  can be decomposed into

  minxxmtxutlmsbbtlusxmxu 

where the nodes in l
s
 and x are ordered such that seed nodes come first and unseeded nodes second, x
m
 and x
u
 correspond to the probabilities of seeded and unseeded nodes respectively, b is a submatrix of l
s
. the optimization problem of eq.  can be solved by the following linear equation:

  lusxu=-btxm 

this is a large linear system for 3d segmentation of a cell image. although eq.  is a sparse, symmetric and diagonally dominant system, solving it directly will still be slow requiring o running time, u representing the total number of unseeded nodes.

downsampling
obviously, if we reduce the number of unseeded nodes, the time for solving eq.  can be reduced. the problem is how to reduce the number of equations without sacrificing accuracy. we first downsample the image using the bilinear method to make it substantially smaller. since the resolution in z is much lower than in x and y, we do not downsample in z. the random walker method is then applied to the downsampled stack, with many fewer equations to be solved.

automatic seeds detection
both the original random walk
 <cit>  and our previous method
 <cit>  require manual seeds for segmentation. here we propose an automatic seeding method, which is inspired by the recent advances on saliency detection via fourier domain analysis
 <cit> . working in the frequency domain is simple and fast, but more importantly these methods usually involve downsampling the image which is in line with our segmentation approach.

the downsampled image i
d
 is firstly transformed into the fourier domain f. amplitude a
i
) = |f| and phase p) = angle) spectra are then calculated. the log spectrum is obtained by

  lsid=logaifid 

a gaussian kernel h is used to smooth out the spikes in the log spectrum

  asfid=lsid*h 

the saliency map of the downsampled image i
d
 can then be computed as

  sid=f-1expasfid+ipfid2*h 

where the smoothed log spectrum in eq.  and the original phase spectrum are combined to compute the inverse fourier transform.

the motivation behind the above approach is that if we divide the image into small patches, the majority of them will consist of background with similar patterns, which show up as spikes in the log spectrum after transforming the image into the frequency domain
 <cit> . these spikes, and with it the background, are suppressed by applying a low-pass gaussian filter.

based on the saliency map obtained in eq. , a simple two-level threshold method is proposed to detect foreground and background seeds, respectively. the first level threshold values for foreground and background are calculated as

  tf1=meansid+2stdsid 

  tb1=meansid+stdsid 

the first level foreground and background are obtained below

  f1i=idiifsi>tf10otherwise 

  b1i=idiifsi<tb10otherwise 

the second level threshold values for the foreground and background are

  tf2=meanf1i 

  tb2=meanb1i+2stdb1i 

the second level foreground and background are computed via

  f2i=1ifidi>tf20otherwise 

  b2i=1ifidi<tb20otherwise 

which are used as the input of seeds for the cell segmentation in eq. .

the above method for seed detection works well for cell images with only one stain. we threshold the saliency map by estimating an initial foreground and background as deviations from the mean intensity and then refine these estimates. instead of using a single threshold value for the segmentation, we use two clearly separated threshold values, one for foreground and the other for background to be on the safe side. this is used as input for a more accurate segmentation employing the random walker method. the threshold selection is not sensitive in our algorithm. using otsu’s method
 <cit>  for the initial estimation of foreground and background of eqs.  similar results were obtained.

the proposed method has also been applied to a different cell type . in this case we need to slightly tune the second level threshold values of eqs.  as the standard deviation of the combined two channel images is much bigger than that of the single labelled neutrophil images.

edge-preserved upsampling
the random walker method of eq.  is applied to the downsampled image i
d
 with automatically detected seeds. the obtained downsampled probability is extrapolated by a cubic method to the original image size. the upsampled probability
qic at pixel i is calculated in the following form:

  qic=1neighbi+1∑k∈neighbi,iwii,μseedcpic+η 

where c is the class indication of cell or background, i
i
 is the intensity at pixel i of the original image,
μseedc is the mean intensity of seeds,
pic is the extrapolated probability of class c at pixel i, and η is a scalar parameter to balance the importance of the weight
wii,μseedc given by

  wii,μseedc=1-ii-μseedc/τ22ii-μseedc≤τ0otherwise 

where τ is a scale parameter in the intensity domain to control the influence of i
i
. eq.  gives higher weight to pixels with intensities similar to the mean intensity of seeds. if the intensity difference is bigger than τ, the weight is set to zero. the final segmentation is obtained by assigning the pixel i to the class corresponding to
maxcqic.

the effect of eq.  is similar to tukey’s biweight edge-stopping function introduced in
 <cit>  for robust anisotropic diffusion. the discrete diffusion equation governing the value
iit+ <dig> is

  iit+1=iit+αneighbi∑k∈neighbigikt-iitikt-iit 

where t is the time step, the constant α is a scalar value that determines the rate of diffusion, and g is an edge-stopping function. the choice of g can greatly affect the extent to which discontinuities are preserved. a variety of edge-stopping functions have been used such as lorentz, gauss, and tukey’s biweight function
 <cit> , which are plotted in additional file
2: figure s <dig>  it is helpful to understand how an edge-stopping function deals with outliers. we can see that the lorentz function gives more influence to outliers than the gauss and the tukey functions. more robust results can be achieved by tukey’s biweight function, as it completely prevents diffusion across edges.

in
 <cit> , the intensity difference is calculated between the pixel i and its neighbouring pixels as seen in eq. . for regions of piecewise constant intensity, anisotropic diffusion is equivalent to averaging intensities of neighbour pixels. for an image region that includes boundaries, the influence of "outliers" is low as the value of g is small for large intensity differences. however, our method computes intensity differences between pixel i and the mean of seeded pixels, instead of its neighbouring pixels. to make it more clear, eq.  can be rewritten as

  qic=1neighbi+1seedc∑k∈neighbi,i∑j∈seedcwii,ijcpic+η 

where |seed
c
| is the cardinality of the set seed
c
, the seeds of class c. here, the edge-stopping property is nicely kept, and "outliers" can be explained explicitly as pixels belonging to a class other than c.

the final segmentation result will contain some small spurious objects due to a few high intensity pixels in the background. the morphological close operator can be used to remove those falsely detected small objects.

topology fixing
the subsequent step of spherical parameterization requires cell surfaces to have spherical topology, i.e. a genus zero surface
 <cit> , the value of a surface’s genus is equal to the number of "holes" it has. the surface of an ideal cell can be considered as genus zero. limitations in practice are that cells often exhibit thin protrusions, which can cross, or fluorescent markers are not distributed evenly, each of which can result in holes in the segmentation.

the two open-source spharm softwares, spharm-pdm
 <cit>  and spharm-mat
 <cit>  provide tools for fixing the topology of 3d binary objects. our results show however that these tools fail to fix the topology of cells with complex protrusions. we also tried morphological operators such as dilation and close, which can fix topology to some extent, but at the expense of altering the original binary volume significantly. all the methods mentioned above fix topology based on binary volumes.

here we present a new method for fixing cell topology which minimizes aliasing artefacts. instead of operating on the binary volume directly, we treat it as a set of hard constraints imposed on the separating surface that encompasses the centres of all foreground voxels. a non-binary underlying embedding function is obtained by solving a constrained convex optimization problem. based on the embedding function, protrusions are detected and those causing ill topology are identified. the identified ill protrusions are then fixed, while leaving other parts of the volume unaffected. such a strategy has several advantages over using the binary volume directly, including the ease of fixing topology as well as minimizing aliasing artefacts.

non-binary embedding
we are looking for a continuous embedding function, the zero-isosurface which is compatible with the original binary volume. there are many choices of the embedding that meet the hard constraints imposed by the binary volume. the work of
 <cit>  took a constrained area minimization approach in the implicit level set framework. lempitsky 
 <cit>  suggested a method that operates within the implicit framework as well and minimized a higher-order smoothness criterion imposed on the embedding function. here we follow the idea of imposing the first-order smoothness on the embedding function for image segmentation as outlined in the last section. given a binary volume, we build a graph g
t
 from the discrete grid domain of the binary image. a graph laplacian matrix l
t
 of g
t
 is constructed in a similar way to the last section. however, each element
aijt of the adjacency matrix a
t
 of the graph g
t
 is computed differently as

  aijt=1ifvivj∈e0otherwise 

first-order embedding
a general optimization-based regularization formulation for finding the embedding function f with first-order smoothness minimizes the following p-dirichlet integral functional

  min∫Ω1p∇fpdΩs.t.vijkfijk≥ <dig> 

where f
ijk
 ∈ r denotes the value of f on each vertex of the graph. the value on each vertex v
ijk
 is + <dig> if it belongs to foreground, otherwise - <dig>  minimizing the integral of the p-power of the variation forces the embedding function to remain smooth. the set of hard constraints enforces its fidelity, so that the function is compatible with the original binary volume. the different values of p lead to different formulations for optimizing the energy of eq. .

for p= <dig>  eq.  becomes

  min∫Ω∇fdΩs.t.vijkfijk≥ <dig> 

where
∇f=∂f/∂x2+∂f/∂y2+∂f/∂z <dig> is the ll norm of the gradient magnitudes. eq.  corresponds to the total variation minimization of the embedding function f in a domain Ω. in this case, the area of the zero-isosurface is minimized, leading to "shrinking bias", i.e. bias towards smaller surfaces
 <cit> . eventually, the optimizer converges to an empty surface, which is the unique global solution of such regularization.

if we substitute p= <dig> into eq. , it minimizes the dirichlet integral defined as

  min12∫Ω∇f2dΩs.t.vijkfijk≥ <dig> 

a combinatorial formulation of eq.  using the graph laplacian matrix l
t
 has the following form

  min12ftltfs.t.vijkfijk≥ <dig> 

the regularization and the hard constraints of eq.  would lead to a trivial optimal solution of f ≡  <dig>  we use a similar method as in
 <cit>  where we add a margin m
ijk
 to separate the resulting embedding function from the zero solution. thus, eq.  changes to

  min12ftltfs.t.vijkfijk≥mijk 

where the margin m
ijk
 is calculated as the euclidean distance to the set b of boundary nodes in v:

  mijk=minx,y,z∈bi-x2+j-y2+k-z <dig> 

implementation
to solve the convex quadratic problem of eq.  we applied a simple optimization scheme based on projected jacobi iterations similar to
 <cit> . the matrix l
t
 is factorized into the diagonal part d
t
, where
diit=liit, and
dijt= <dig> for i ≠ j, and the off-diagonal part c
t
 = d
t
 - l
t
 with zero diagonals. the iterations are based on the following formula:

  fjacobik+1=-dt-1ctfk 

  fstepk+1=λ⋅fjacobik+1+1-λfk 

  fk+1=minh,maxl,fstepk+ <dig> 

where the scalar λ is the step length set to  <dig>  in our experiments, parameters l and h are the lower and higher bounds on the values of f derived from the margin inequality that are taken element-wise. to speed up the algorithm, we define a narrow band s of vertices obtained by thresholding the margin m
ijk
:

  i,j,kmijk<t 

where the threshold t is the half-width of the band. the computation is confined to the narrow band s, i.e. only those vertices near the surface within a certain distance are considered instead of performing the computation on the full grid.

fixing ill topology
the goal of the non-binary embedding is to estimate a continuous function from binary segmented data that retains fine details presented in the original segmentation. to fix any ill topology, we suggest to proceed in a reverse manner with respect to the non-binary embedding. we treat the binary volume as a threshold of a discrete sampling of the obtained embedding function f, and recover it in a divide and conquer approach. here, we first propose a method for protrusion detection based on the embedding function f, and then those protrusions that cause the ill topology are fixed.

protrusion detection
the assumption we make here is that ill topologies are caused by cellular protrusions. we observe cells that undergo spreading, which mean they are initially spherical when attaching to a coverslip, and correspondingly the segmented binary volumes have a well defined spherical topology. however, when cells start adhering more firmly to the substrate and start migrating they develop thin protrusions, more precisely filopodia and retraction fibres. these often create holes when crossing each other so that topology fixing is required before one can proceed with further processing, such as spherical parameterization.

the embedding function f we obtained is similar to that in
 <cit> , where the constrained minimal area optimization problem is solved in the implicit level-set framework. as seen in figure 
 <dig>  the estimated embedding function f is in the form of a level set of a grey-scale volume. the benefit of interpreting the embedded function as level-set implicit representation is the elegant handling of changes in topology such as detecting or filling-in of holes. thus, we are able to evaluate the topology of a given cell from inner layers  to outer layers . the basic idea is to march through the level sets and progress towards a desired one whose thresholded binary volume has a spherical topology.

we start initially outside, with low level sets, where f is thresholded with a value of  <dig>  yielding a binary volume. to ensure it has spherical topology, its topology is evaluated by computing the euler-poincaré characteristic. if not, we increase the threshold and repeat the above procedure. we obtain a binary volume a that can be considered as a shrunk version of the original volume. after that we gradually enlarge the surfaces of the binary volume a via simple morphological dilation. the size of the structuring element is related to the narrow band width s as defined in eq. , initially set as  ×  × , and could be changed adaptively. protrusions are detected by simply subtracting the dilated binary volume from the original one. we only keep subtracted results with values higher than  <dig> to make it consistent with the original binary volume. besides protrusions, we also obtain the remaining binary volume b, which consists of the main cell body.

the above procedure in some ways mimics low-pass filtering, such as gaussian filtering. the volume b can be considered as low frequency content, while protrusions represent high frequencies. however, our method is fundamentally different from the gaussian filtering approach. it is unknown how to choose the kernel size for the gaussian filtering approach, so that the filtered binary volume has spherical topology. furthermore, since the filtered result is incompatible with the original binary volume, it is unlikely that the fine details smoothed out by the filtration contain all portions that cause ill topology.

fixing ill protrusions
in general, only a few protrusions contribute to ill topologies. we evaluate them one by one by adding them back to the binary volume b. if a protrusion does not violate the genus zero topology requirement, we merge it back into the binary volume b. in this way, we identify those protrusions that cause the topology change and a binary volume c that is the combination of the binary volume b and those protrusions with spherical topology.

after the identification of ill protrusions, we treat each individual one as a single binary volume. again, we embed each protrusion into a non-binary function using the method detailed before. thanks to the level set form of the obtained embedding function it is easy to fix the topology. we simply expand each protrusion by using a low level set, - <dig> -sets to start with. we check the topology of the expanded binary volume, and decrease the threshold value if the binary volume still violates spherical topology.

as protrusions are usually very small compared to the original volume, the fixing procedure is very efficient. once protrusions are fixed, we merge them back to the binary volume c. finally, we obtain a binary volume with spherical topology, where only a small portion containing fixed protrusions has been modified, while the majority of the binary volume is unchanged.

spherical parameterization
the objective of spherical parameterization is to embed the cell surface in the unit sphere while minimizing the distortion of the surface net in the mapping. generally, a good mapping attempts to either minimize length, angle, or area distortions. for comparisons between cell shapes acquired at sufficiently close enough time points we assume the total cell surface area to change only minimally, and consider an equiareal mapping as justifiable: here, a particular region on one cell surface is always compared with the corresponding region at a subsequent point in time, where both regions have the same area
 <cit> .

spherical parameterization creates a continuous, uniform mapping from the cell surface onto the unit sphere. the result is a bijective mapping between each point p on the cell surface m and a pair of spherical coordinates:

  pθ,φ=xθ,φ,yθ,φ,zθ,φt 

where the polar angle θ ∈  is the angle between the positive z-axis  and the vector corresponding to p. φ ∈  is the azimuthal angle between the positive x-axis and the projection of p onto the x-y plane. we have tried to use several different spherical parameterization methods
 <cit> , among them the method presented in
 <cit>  turned out to perform best for our application. here we briefly describe the key idea behind the algorithm and highlight that the method is closely related to the graph laplacian matrix l.

the topology fixed binary volume is converted into a voxel surface, which is the input for the spherical parameterization. based on the surface graph, two laplacian matrixes are constructed for initial parameterization of two polar coordinates, latitude θ and longitude φ, respectively. after the initial parameterization of latitude and longitude, a non-linear constrained optimization method is used to minimize the area and topology distortions of the surface net in the mapping. additional file
3: figure s <dig> shows how a distinctly labelled protrusion is mapped onto the sphere.

shape representation
let Ω be a unit sphere, embedded in ℝ
3
. the spherical laplacian Δ
Ω
 operator on Ω satisfies

  ΔΩylm=-ll+1ylm 

where
ylm are spherical harmonics . eq.  indicates that spharm are the eigenfunctions of Δ
Ω
 with eigenvalue of λ
l
 = - l
 <cit> . denote the space of square integrable functions with respect to Ω as l <dig>  define
spharml=spanylmm=-ll as a subspace of all spharm of the same degree l, and let
spharm <dig> …n=⊕l=0nspharml. then it can be rigorously proven that the closure of spharm <dig> …n
 converges to the space l <dig> as n → ∞
 <cit> . therefore, spharm form a complete set of orthonormal basis functions in space l <dig>  analogue to unit basis vectors. similarly as vectors can be described by projections onto each axis , expansion coefficients  can be used for the description of functions
 <cit> . any spherical function can be expressed by an infinite series of spharm coefficients.

the cell surface m defined on l <dig> can be expressed as a set of spharm coefficients. each function on the right side of eq.  can be independently decomposed in terms of spharm as

  xθ,φ=∑l=0∞∑m=-llclxmylmθ,φ 

  yθ,φ=∑l=0∞∑m=-llclymylmθ,φ 

  zθ,φ=∑l=0∞∑m=-llclzmylmθ,φ 

this expansion is exact, but errors are introduced when restricting spharm <dig> …n
 to a finite space with a certain degree of l, which is required in numerical implementations. a truncated spharm series can be effectively used to fit relatively smooth functions and model surface protrusions and intrusions
 <cit> .

in constructing the spharm representation of eqs. , we need to estimate the coefficients
clxm,
clym, and
clzm. there are three major techniques for estimating those coefficients: the simplest method is to numerically integrate the fourier coefficients over a high resolution triangle mesh
 <cit> , which is computational expensive. the second method is based on the fast fourier transform
 <cit> , in which a predefined regular grid system is required. the most widely used method is based on solving a system of linear equations that minimize the least square problem
 <cit> . the estimated coefficients approximate the full underlying surface, and can be used to represent and reconstruct the surface.

shape comparison
the concise representation of cell shape using spharm allows for local measurements of cell membrane deformation. however, there are two additional issues to be addressed, one is registration, and the other is re-sampling. in order to obtain more accurate results, it is usually necessary to register two cell surfaces before the comparison can be conducted. the registration process removes arbitrary rigid motions and brings each cell into the same coordinate system. the surface registration step is an optional one depending on the application, which can be performed before the segmentation, directly on the intensities of image voxels, or after the shape representation on the mesh. there are a variety of registration methods available in the literature
 <cit> .

normally, the size of the cell mesh varies. it needs to be re-sampled to make the number of vertices in the model for each cell the same. this can be achieved by using the regular mesh in the parameter space for reconstruction. subsequently, pairwise comparisons between different surface models can be conducted. the correspondence between spharm models is implied by the underlying parameterization: two points with the same parameter pair  on two surfaces define a corresponding pair.

spharm allows cell shapes to be well-characterized, both in a static and a dynamic manner
 <cit> , and is able to extract a wide range of qualitative and quantitative parameters, such as individual outliers, most commonly occurring shapes, and spatiotemporal patterns of surface deformations. temporal analysis of spharm coefficients has been used to detect major deformation phases, and to identify temporal events of interest such as the formation of blebs as well as patterns of deformation
 <cit> . fundamental features of cell shape dynamics can be extracted from time series images, which is essential to understand the biophysical mechanisms of cell migration. for the purpose of illustration, we use coefficients to identify five major phases of deformation as shown in additional file
4: figure s <dig>  and estimate the temporal local deformations  of the cell membrane by subtracting cellular models at different time points.

RESULTS
the experiments were performed using unoptimized matlab code running on an intel core  <dig>  ghz with  <dig> gb of ram. in principle, the proposed framework can be used for any 3d cell shape analysis. to demonstrate its performance, ten neutrophil cell sequences were acquired, which were labelled with cell mask orange dye to stain the plasma membrane. the neutrophils are quiescent, then stimulated by application of fmlp which prompts cell spreading and movement. cell movements are imaged by spinning disk confocal microscopy. the acquisition speed is about  <dig> ms per slice . the size of the stack is 180×283× <dig>  and its scale is  <dig> x <dig> x <dig>  microns per voxel.

cell segmentation
we use raw data to test our segmentation method, which are more challenging than deconvolved data. although deconvolution usually generates smoother data, it is prone to generate artefacts. we compared both the segmentation quality and the time complexity of our method with the random walker
 <cit>  and the level set method
 <cit> . for the random walker method, the seeds are detected automatically similarly to the method described in section  <dig>  using the original image without downsampling. we extended the code from
 <cit>  to 3d image segmentation. for the level set method, we manually set a region of interest with a right prism and then run the algorithm with  <dig> iterations using the code from
 <cit> . we use the subsampling rate of 1/ <dig> for all the test image stacks.

figure 
 <dig> shows the results for the segmentation of one of the example stacks , the saliency map , and its ground truth . compared to the raw image, the saliency map is much less noisy, which facilitates thresholding. the random walker method was unable to obtain a proper result , possibly because of the noise in the image and the inhomogeneous intensity distribution. we also tried to use the bilateral filter to denoise the slices first before segmentation, but still without much improvement. our method  is comparable to the level set method  with respect to dealing with noisy cell boundaries. regarding efficiency, our method took only  <dig> s, while the random walker method and the level set method took  <dig> s and  <dig> s, respectively. in
 <cit> , we manually entered seeds in the middle of the cell image, and similar segmentation results were obtained. figure 
 <dig> shows segmentation results of three other stacks using our method. it can be seen that currently our method struggles to segment very fine cell processes , which deserve further study.

the global f-measure
 <cit>  is calculated to evaluate the segmentation results quantitatively. the ground truth of the whole cell was obtained by using the semi-automatic software itk-snap. firstly, we imported a real cell image into the software for semi-automatic segmentation. an initial segmentation result was obtained by using the active contour method. the binary segmentation was subjected to manual post-processing to fill holes and remove artefacts. ten segmented cell stacks and corresponding original images are available on the authors’ website
 <cit> . as the random walker method cannot segment the entire cell, we only compare our approach with the level set method. our method achieves a better f-measure value of  <dig> , when compared with the level set method . visual inspection of more than  <dig> sequences with  <dig> time points each, showed that the obtained automated segmentation is well within the limits of expected interobserver error.

topology fixing
seventy-two stacks of neutrophil cell images were randomly chosen and segmented. among them  <dig> had no spherical topology. an example stack with ill topology is shown in figure 
 <dig>  whose euler number is - <dig>  three holes that can be seen from this viewpoint are highlighted by red circles. we embed the binary volume into a function with first-order smoothness .

theoretically, the p value in eq.  can be varied from  <dig> to ∞. however, the p = ∞ case is more complex and computational expensive, and will be a matter of future work. in this paper, we fix the p value to  <dig> since it has been demonstrated in
 <cit>  that the p= <dig> case achieves better results with less "shrinking bias". furthermore, the convex quadratic problem of eq.  can be solved easily and efficiently by using a number of convex optimization algorithms. the final result of topology fixing should be similar with respect to the choice of different p values. we also employed the embedding function with second-order smoothness in our experiments, and find that there is not much difference for the current application.

figure 
 <dig> shows the binary volume a that is  <dig> -sets of the embedding function f. our experiments show that the choice of the threshold value of the level is not sensitive in this application. the remaining binary volume b without fine protrusions is shown in figure 
 <dig>  it has spherical topology. initially, protrusions that possibly violate topology are not detected accurately and contain many false positives as shown in figure 
 <dig>  however, that will not affect the final result of topology fixing in our application. nevertheless, it might serve as a good starting point for protrusion detection. the key point here is that the detected protrusions must contain everything that causes a topology violation. figure 
 <dig> can be considered as the largest volume we can obtain, which has spherical topology without fixing. in comparison with the original volume of figure 
 <dig>  it can be seen that only a very small portion of the volume contributes to topology violation. we will leave figure 
 <dig> as it is, and only modify a few small protrusions. as demonstrated in figure 
 <dig>  the modification is almost negligible in the final result with only  <dig> % difference between the fixed and the original volume.

figure 
 <dig> shows the topology fixing results obtained by two open-source softwares, spharm-pdm
 <cit>  and spharm-mat
 <cit> . the spharm-mat method introduced  <dig> % artefacts, which is better than our method  and the spharm-pdm method . however, none of the holes has been filled by the spharm-mat method ), while only two of them were filled by the spharm-pdm method ). we compare the average rates for successful topology fixing of the  <dig> binary volumes without spherical topology, which are 69%, 4%, and 95%, for spharm-mat, spharm-pdm and our proposed method, respectively. the amount of introduced artefacts are  <dig> %,  <dig> % and  <dig> %, respectively.

spherical parameterization and shape representation
we have compared the performances of several spherical parameterization methods
 <cit>  and their results of shape representation using spharm. the method proposed in
 <cit>  and implemented in
 <cit>  performed best in our application , and will be used in the rest of this paper. the root mean-squared error  was utilized to quantify the performance of shape representation results. the rmse is computed by

 rmse=∑i=1nmpi-m˜pi2n 

where m indicates a true cell surface and
m˜ its spharm representation, which is evaluated at n sampling points
pii=1n. the average error for all the tested cell images is reported for each method.

an important aspect of measuring a cell’s migratory behaviour is the quantification of local cellular protrusions and retractions. in order to evaluate our method’s ability as regards to what extent small local shape variations can be detected, we artificially synthesized a cell by introducing a controlled local shape deformation using the open source software itk-snap
 <cit> . we imported the ground truth segmentation of a real cell image into the software and manually added a ball to simulate a cellular protrusion by using the paintbrush tool of itk-snap .

from the mesh and its spherical parameterization, the spharm description can be computed according to eqs. , which is essentially a set of coefficients weighting individual spherical harmonic basis functions. this description is then sampled into a triangulated surface via an icosahedron subdivision of the spherical parameterization. we ask how many coefficients are necessary to represent local deformations for a given cell shape. figure 
 <dig> shows spharm models of the simulated stack with degrees of  <dig>   <dig>   <dig>  and  <dig>  respectively. as we expected, it is not sufficient to use degrees up to  <dig>  from the models with degrees  <dig> onwards, we can easily identify the artificial ball. however, the models with degrees  <dig> and  <dig> are unable to represent the details exhibited in the simulated stack. the spharm models of one of the real cell images is shown in figure 
 <dig>  with high degrees up to  <dig>  similarly, the performance is improved as the degree increases. for good quality results we suggest to use models with degree  <dig> for typical cell shapes, which requires solving  <dig> fourier coefficients in total.

table 
 <dig> reports the average values of rmse, and the average expansion and reconstruction times for shape representation of cell images using spharm. the typical mesh size in the current study is  <dig>  rmse decreases from  <dig>  to  <dig>  as the degree increases from  <dig> to  <dig>  theoretically, rmse can be reduced further by using high enough degrees of spharm. however, the running time will be enormous as the number of coefficients to be estimated will increase quadratically. the total running time increase from  <dig>  s to  <dig>  s when the degrees of spharm increase from  <dig> to  <dig>  where the majority of time is consumed for expansion, i.e. to obtain the coefficients.

discussion
in this paper, we develop algorithms for different steps in our framework in a formalized way using laplacian approaches. each method can be viewed from the perspective of exploring eigenfunctions of the laplacian matrix. although different affinity matrices are used for the first three steps, i.e. the weights defined are application-driven, all of them are symmetric  = a), positive preserving  ≥ 0) and positive semi-definite . in addition all minimize a quadratic distortion measure, naturally leading to the eigenfunctions of laplacian-type operator
 <cit> . in the fourth step, we use spharm for shape representation, which are eigenfunctions of the spherical laplacian Δ
Ω
. therefore, all the techniques used in the first four steps are closely connected. indeed, it was shown in
 <cit>  that the laplacian of a graph is the discrete analogue of the laplace-beltrami operator on manifolds. the spherical laplacian Δ
Ω
 is the laplace–beltrami operator on the unit sphere Ω.

as the affinity matrix for cell segmentation satisfies the conditions of symmetry and pointwise positivity, the pairwise similarities can be interpreted as edge flows in a markov random walk on the graph
 <cit> . to perform the random walk segmentation, instead of solving the linear system of eq. , one may precompute several eigenvectors of the laplacian matrix and use this information to produce an approximation of the random walker segmentation algorithm
 <cit> . the approximation can be viewed from the standpoint of distance in the "spectral coordinates" space defined by the weighted generalized eigenvectors.

furthermore, all the methods used in the four separate steps are closely related to the problem of heat diffusion. the random walk segmentation method can be considered as a diffusion approach
 <cit> , where the seeded pixels are treated as the heat sources and the background acts as a sink. after reaching equilibrium the image can be segmented according to the temperature at each pixel.

the top eigenfunctions of markov matrices  permit a low-dimensional embedding, so that the ordinary euclidean distance in the embedding space measures intrinsic diffusion metrics on the data
 <cit> . the non-binary embedding approach for the topology fixing can be viewed as a diffusion process subject to the hard constraints. an iterative scheme is used, where the constraints are enforced and diffusion restarted using the new solution.

the initial parameterization of the latitude and longitude are obtained from heat diffusion
 <cit> . latitude grows smoothly from  <dig> at the north pole to π at the south pole. in a physical analogy, the south pole is heated up to temperature π, while the north pole is cooled down to temperature  <dig>  the parameterization results are obtained as the stationary temperature distribution on the heat conducting surface.

fourier series have long been used for solving diffusion problems analytically. similarly, the spherical diffusion equation kΔ
Ω
u = ∂ 
t
u can be solved by expressing u as spharm expansion. spharm can be used in isotropic heat diffusion via the fourier transform on a unit sphere as a means of hierarchical surface representation
 <cit> .

such a perspective can help the reader to better understand the commonalities behind seemingly different techniques. it can also open a door for further improvement of the methods. by exploiting structural similarities of the different approaches, it should be possible to integrate for example the topology fixing step into the cell segmentation process, which will be a future work of our research.

as an illustration of the technique, we have applied it to neutrophil cell shape analysis. the presented methods can be used for modelling arbitrarily shaped but simply connected 3d objects. they are suitable for surface comparison and are able to detect protrusions and invaginations, and quantify their dynamics. shape plays important roles in many biological processes, such as bimolecular recognition and the problem of protein binding pocket and ligand comparison
 <cit> , where the presented methods have potential to extract functional information from protein structures, locally and globally.

one of the limitations of the framework is that it can only be used to represent genus-zero objects, which is true for the cell surface, but not for more complex intracellular structures like the endoplasmatic reticulum. as of now segmentation and spherical parameterization of our method are unable to cope with very thin protrusions.

currently, we process every frame independently irrespectively of prior knowledge of previous time points, which could be used to initialize segmentation of the current frame. however, since in our application cells moves quite fast, the overlap between the membrane marker at consecutive time points is too low.

CONCLUSIONS
this report presents a framework for 3d+time cell shape analysis, which includes five major steps: cell segmentation, topology fixing, spherical parameterization, shape representation, and shape comparison. we formalize the algorithms for the first four steps using laplacian approaches. all the methods can be viewed from the perspective of exploring eigenfunctions of the laplacian matrix, and are closely related to the problem of heat diffusion. we developed a fast random walker method for cell segmentation, which is based on the laplacian matrix generated from the discrete grid domain and the affinities defined by a gaussian kernel. it is faster than the other two popular methods with comparable segmentation quality. the novel topology fixing method we proposed is also based on the laplacian matrix generated from the discrete grid domain, but the affinity matrix contains unit weights. it is able to fix the topology of complex cells with a high success rate while introducing only minor artefacts. the spherical parameterization method we applied is based on the laplacian matrix generated from the surface graph and unit weights are assigned to each entry of the affinity matrix with some special modifications. for the shape representation, we directly explore the eigensystems of spherical laplacian without constructing the laplacian matrix explicitly. the spherical parameterization and the shape representation methods are used for both simulated and real cells, achieving satisfactory results. by analyzing the temporal fourier spectrum, we are able to identify major deformation phases. the temporal local deformations of the cell membrane can be estimated by subtracting cellular models at different time points. in the future, we will apply our framework for 3d+time neutrophil cell shape analysis to study in detail how dynamic distributions of phospholipids correlate with membrane dynamics.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
cjd and tb developed and discussed the methods. cjd developed all software. pth, lrs, and tb conceived and discussed the project. cjd and tb wrote the publication. pth, lrs provided data for testing the algorithms. all authors have read and approved the final manuscript.

supplementary material
additional file 1: figure s1
segmentation results using our method for a dictyostelium cell labelled with two markers for lim  and coronin . row 1: original images . row 2: segmentation results. columns 1 –  <dig> are the 11st, 17th, and 23rd slices of the image stack. for segmentation the two channels have been combined into one.

click here for file

 additional file 2: figure s2
comparison of edge-stopping functions. a variety of edge-stopping functions have been used such as lorentz, gauss, and tukey’s biweight function. the lorentz function enhances outliers when compared to the gauss and the tukey functions. more robust results can be achieved by tukey’s biweight function, as it prevents diffusion across edges completely.

click here for file

 additional file 3: figure s3
spherical parameterization of a cell surface with protrusions. nodes within the protrusion are highlighted by red markers  to demonstrate how a particular region is mapped onto the sphere .

click here for file

 additional file 4: figure s4
temporal analysis of spharm coefficients can be used to distinguish different phases of cellular deformations.  temporal spharm coefficients of a sequence with l =  <dig>  m = ± <dig>   characteristic deformation phases at time points  <dig>   <dig>   <dig>   <dig>  and  <dig>  which differ in cell roundness and symmetry.

click here for file

 additional file 5: figure s5
visualising dynamic local deformations for time points  <dig> to  <dig> in corresponding additional file
 <dig>  cell deformations are estimated by subtracting surface reconstructions at different time points. the distance between surfaces is colour coded .

click here for file

 additional file 6: figure s6
synthesized cell with local shape deformation  using the open source software itk-snap. after importing the ground truth segmentation  of a real cell image a ball  was manually added by using the paintbrush tool to simulate a well defined protrusion and assess the quality of surface reconstructions.

click here for file

 acknowledgements
the authors would like to thank the associate editor and the anonymous reviewers for their time and efforts. this work was supported by the biotechnology and biological sciences research council .
