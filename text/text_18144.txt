BACKGROUND
organisms ranging in complexity from bacteria to higher eukaryotes are able to react and adapt to environmental and cellular signals. these responses are often encoded as complex gene regulatory networks. in these networks the expression of a gene's products is regulated by the activity of other genes. although regulation can occur at many levels, we focus on transcriptional regulation, one of the most important and pervasive methods of regulation in eukaryotes. transcriptional regulation occurs when certain gene products, transcription factors , bind to the dna at binding sites  and affect the transcription of the regulated gene by modulation of the rna polymerase complex. tfbss often appear in clusters or cis-regulatory modules , presumably to enable interactions between tfs binding there.

combinatorics of transcriptional regulation
tfs do not work in isolation from each other. particularly in higher organisms, combinatorial operations are often necessary for the response of a cell to external stimuli or developmental programs. such a response is frequently implemented as a transcriptional switch where a combination of presence or absence of certain tfs regulates the expression of a certain gene. several well characterised examples of the coordination of tfs are known. for instance, a set of well studied tfs in drosophila melanogaster that govern spatial patterns of development in its embryo is described in  <cit> ; higher eukaryotes are known to use crms to integrate cellular signalling information  <cit> ; the development of the anterior pituitary gland is regulated by combinatorial actions of specific activating and restricting factors  <cit>  which determine cell type.

conversely, cellular processes often involve the coordinated expression of sets of genes. hence there is reason to suppose that not only do particular sets of transcription factors regulate particular genes but that these sets are also reused across the genome: that is, co-regulated genes are often targets of the same tfs. genomic data commonly available today, such as sequence data, expression data or tf localisation data, do not permit direct inference of the higher order structure in transcriptional regulation. most analyses of these data operate at the individual tf level. when the data permit it and the biologist is interested in this level of detail, it is certainly appropriate. however, genomic data is often noisy or incomplete. in this case a summary or view of higher order structure in transcriptional regulation is easier to interpret.

identification of binding sites by sequence analysis
the databases transfac  <cit>  and jaspar  <cit>  hold the most widely used collections of position specific scoring matrices . each pssm is a probabilistic model of the dna binding specificities of a particular tf: given the pssm and a stretch of dna the likelihood of that tf binding to different positions in the sequence can be computationally predicted. there are several problems with this approach: algorithms that find putative binding sites are known to generate many false positives; the regions in which regulatory tfbss are located are not normally known in advance; and, unfortunately, jaspar and transfac do not contain pssms for all tfs of interest. we chose to use the pssms in transfac for our analysis.

our model
our model aims to discover cooperative effects between transcription factors in noisy sequence analysis data. we use a model that has had success in the field of document modelling where the task is to infer the latent topics that best summarise a corpus of documents. each document is modelled as a mixture of several topics drawn from a shared pool of unknown topics and each topic is modelled as a collection of words. only the documents are given as input to the model.

to explain the use of this model in the context of transcriptional regulation we draw an analogy: in our model a document is analogous to a gene; a word is analogous to a transcription factor and the occurrence of a word in a document is analogous to a binding site in a gene's crm. to complete the picture, a topic is analogous to what we term a transcriptional program . a tp captures the notion of a set of transcription factors that act in a coordinated manner across a set of target genes. so in the same way that a document's topics define its context, a gene's transcriptional programs summarise its transcriptional regulation. figure  <dig> shows how transcriptional programs can summarise regulatory relationships.

hierarchical dirichlet processes  are a natural framework to use in document-topic modelling and hence for our work in transcriptional regulation. in our framework, transcriptional programs are modelled as distributions over transcription factors. each gene's transcriptional regulation is modelled as a mixture of these programs. dirichlet process mixtures  are a non-parametric technique for modelling mixtures where the number of components is unknown. we use dpms to model the mixture associated with each gene's transcriptional regulation. in order to share transcriptional programs between genes we use a common base distribution for the dpms which is itself a dpm. this step makes our model hierarchical. an extensive review of hdps is given in  <cit> .

previous work
quite a few approaches have been suggested in the literature to identify groups of tfs that co-regulate genes, often called transcriptional modules . they all differ from our approach in several respects. one major difference is that our concept of transcriptional programs  is slightly more abstract than tms. a tm is often defined as a set of tfs that physically bind next to each other in the vicinity of the regulated gene. many approaches either enumerate all possible combinations of tfs up to a certain number  as potential tms and search for over-representation of tms in various groups of genes  <cit> . there is usually a computationally intensive post-processing step involved in clustering tms according to ad hoc rules in these combinatorial approaches to reduce the number of highly similar tms. alternatively, an incidence matrix  is calculated linking each tf to the genes it regulates  <cit>  .

in contrast, a transcriptional program, as we define it, comprises tfs as well as genes  and does not necessarily require a physical vicinity of binding sites for all the tfs in the program. for example, if two transcriptional modules have some common tfs, not necessarily sharing all of them, they might be merged into one transcriptional program by our algorithm. whether this happens depends on the amount of overlap and the number of co-occurrences of their tfs. in a way, transcriptional programs generalise both transcriptional modules and tf-gene incidence matrices and provide a higher-level summary contained in these structures. to our knowledge, the only other work defining transcriptional programs in a similar way is by tanay et al.  <cit> . in contrast to their work, where such programs are found by enumeration, scoring and filtering, we model transcriptional programs explicitly within a comprehensive probabilistic model.

some work, as discussed below, insists on clusters of co-regulated genes or groups of co-regulating tfs to be disjoint. our approach is open to the possibility that genes as well as tfs can be members of several tps simultaneously. a further difference is that many approaches require a positive gene set, for example, by co-expression, as well as a background, set to detect tms that characterise one set against the other. our approach is essentially an unsupervised one, where tps are discovered from one sequence set. this is a more challenging problem but it requires less input from the user and avoids problems of mis-identification of the positive set.

to our knowledge, our approach is the first application of a document topic model to transcriptional regulation. such models have the distinct advantage of using very few free parameters that need to be specified.

being more specific about previous work, creme  <cit>  uses a sliding window to look for combinations of transcription factor binding sites that are over-represented in promoters of the genes of interest. only combinations whose sites are physically close to one another can be detected in this way. the user must specify the maximum number of factors in a promoter. opossum <dig>  <cit>  looks for pairs and triplets of transcription factors that are over-represented in the promoters of the genes. tremor  <cit>  is similar but uses the mahalanobis distance to distinguish between similar pssms that represent different members of the same family of transcription factors. it also removes some dependence on arbitrary p-value thresholds.

all of these methods discriminate between a positive user-specified set of genes and a negative  set. our method differs in that it fits a model of the entire set of genes at once.

kreiman  <cit>  looks for over-representation of combinations of up to  <dig> tfs in co-expressed genes. bluethgen et al.  <cit>  use cluster-buster  <cit>  to identify groups of potentially co-regulating tfs which are then further filtered by statistical enrichment of classes of regulated genes in the gene ontology  catalogue  <cit> . there is some work that integrates more than one data source. some combination of chip-chip, binding site analysis  and expression data are commonly used. heuristics or probabilistic models are used to search for consistent structure amongst these data sources. almost all this work has been carried out in saccharomyces cerevisiae. remodiscovery  <cit>  builds on the apriori framework in a two-step procedure which examines expression profiles and chip-chip data. mofa  <cit>  combines binding data with time-series microarray data to build transcriptional modules and explicitly models which tfs up or down-regulate which genes. samba  <cit>  is a biclustering framework that analyses gene expression, protein interaction, growth phenotype, and tf binding data. in cogrim, chen et al.  <cit>  use gibbs sampling in a bayesian hierarchical model to integrate expression data, pssm analyses and chip-chip data. they model uncertainty in each data source independently but each module is associated with exactly one transcription factor. as discussed above most of this work is reconstructing pair relationships of tfs and regulated genes.

segal et al.  <cit>  have integrated a motif search algorithm and gene expression data to find motif profiles  in saccharomyces cerevisiae. their model partitions the genes into a fixed number of mutually exclusive sets which have the same expression pattern across experiments. each gene is the target of exactly one motif profile, hence their model does not allow so much structure in the latent profiles/programs. also, the number of partitions must be fixed somewhat arbitrarily in advance by the user. they focus on saccharomyces cerevisiae which has a simpler transcriptional code than mus musculus, the focus of our study.

various other probabilistic models that require specification of the number of modules by the user have been implemented. xu et al.  <cit>  build on the module networks of segal et al.  <cit> . these models also partition the gene set to find transcriptional modules. our model allows genes to be the target of more than one transcriptional program.

other algorithms also use non-parametric probabilistic models to obviate the need to specify the number of modules. gerber et al.  <cit>  use hierarchical dirichlet processes to discover expression programs in human microarrays. they use a similar model to ours, except their data are discretised expression levels rather than putative tfbss. they use a markov chain monte carlo  method for inference which takes an order of magnitude longer than our variational approach. the mcmc method produces a posterior distribution over the unknowns in their model. one of the latent variables in their model is the structure of the gene hierarchy. identifiability issues force them to use a complex set of heuristics to summarise this hierarchy. liu et al.  <cit>  use a bayesian hierarchical model to examine yeast gene expression and chip-chip data. their extension of an infinite mixture model limits each program to represent binding data for at most one transcription factor. it is difficult to see how cooperative effects are estimated by the model.

RESULTS
we analysed the promoter regions of  <dig>  mus musculus genes using pssms from transfac. this generated  <dig>  putative tfbss of  <dig> tfs which scored above a stringent threshold . we ran our model on these putative tfbss and it discovered  <dig> latent transcriptional programs.

the number of tfbss explained by each of the  <dig> programs varied considerably. most of the tfbss were explained by the largest  <dig> programs . as demonstrated in the go enrichment validation  our model was able to find significant signals in those programs that accounted for many tfbss as well as those that accounted for few.

we present the factors of the transcriptional programs highlighted in the validation section of the results.

as the model associates each tfbs with a program, even those tfbss for which co-operative effects cannot be found must be associated with a program. the model uses the largest two programs  for these tfbss: their distribution over factors is vague and they target many genes. to some extent, the programs that explain more binding sites are less likely to represent true cooperative effects. we looked at the number of target genes of the programs in this context. that is, we analysed the total number of target genes of all programs smaller than a given size . including the first two vague programs, a total of over  <dig>  genes are associated with our programs. most of the binding sites are explained by the first  <dig> programs and using this as a cut-off we can see that the remainder of the programs still target over  <dig>  genes. this is a sizable proportion of the genome that can be strongly associated with the cooperative combinations of factors defined by our programs.

in general, we found a good separation between the programs, in that any given tf or gene is unlikely to be associated with many programs and conversely that most programs were associated with a small number of tfs and genes . this was confirmed by our analysis of the intersection between pairs of programs' tfs and the overlap between their target genes .

validation
in order to test whether the transcriptional programs capture real biological structure we validated the tps using an analysis of enrichment for go terms  <cit> , signalling pathways from the kegg database  <cit> , tissue specific co-expressed genes from symatlas  <cit> , and groups of known interacting tfs from the literature. we present those transcriptional programs that were noteworthy in the validation in table  <dig>  all of the factors and targets associated with all the programs are presented as additional file  <dig> 

go term enrichment
each program is associated with a set of transcription factors and a set of target genes. we tested the genes and the factors in each program for enrichment of terms in the biological process go ontology. we used a standard hypergeometric test in conjunction with the weight method implemented in the top go r-package  <cit>  as a significance test. table  <dig> shows the result of the go enrichment analysis.

we tested each of the factors and target genes associated with each of the  <dig> transcriptional programs for enrichment of go terms across the three go ontologies: biological process , molecular function  and cellular component . the number of factors  associated with the program is displayed followed by information about the go term. 'annotated' shows the number of factors  annotated with the term in the program compared to the total numbers of factors  annotated with the term. the p-values are not corrected for multiple testing. based on a bootstrap analysis described in the methods section any p-value below 1e- <dig> might be deemed significant at the  <dig>  level.

kegg pathway enrichment
we tested the genes and the factors in each program for enrichment in signalling pathways defined in the kegg database. after bonferroni correction for multiple testing, we found no significant results. however, we did find a significant result in conjunction with our analysis of known interacting tfs from the literature.

symatlas enrichment
we tested the target genes in each program for enrichment in tissue-specific co-expressed genes from the symatlas dataset. genes over-expressed in embryonic tissues were significantly enriched in the targets of transcriptional program  <dig>  program  <dig> accounts for fewer than  <dig> binding sites out of the  <dig>  sites, yet was strongly predictive of membership of the group of over-expressed genes. this demonstrates the ability of our method to find small signals in large datasets.

literature
we took well known sets of interacting transcription factors from the literature and looked for programs that contained them. we looked for sets of tfs associated with the liver, muscle development, and the cell cycle. the three factors in transcriptional program  <dig>  contain two of the three transcription factors in our analysis that are known to regulate the cell cycle .

when we tested the targets of program  <dig> for enrichment in the kegg cell cycle pathway  we obtained a p-value of 9e- <dig>  the extra tf in program  <dig> that is not in our literature derived set, mtf <dig>  has been implicated in the cell cycle  <cit>  and as a co-regulator with e2f  <cit> .

biological interpretation
several of the discovered programs have well defined biological meanings. not many of the factors of the transcriptional programs were significantly enriched for go terms. however, program  <dig> did contain  <dig> of  <dig> tfs that are annotated with the term "liver development" in its nine factors.

several of the target sets of the programs were strongly associated with different go terms. in particular, program  <dig> was particularly enriched for genes with nuclear products and those that are involved in nucleosome assembly. program  <dig> appears to be associated with the sense of smell as it has strong enrichment for "olfactory receptor activity" and "sensory perception of smell".

CONCLUSIONS
discovering structure in sequence analyses is a difficult task. we are limited by the set of pssms available, our inability to predict regulatory genomic regions and the high false positive rate of pssm scanning. out of the three sets of interacting tfs that are most cited in the literature, we only recovered one of them. however, our method is looking for structure in a much larger dataset than other methods and does not have a positive set and a negative set of genes with which to discriminate.

our model does find significant structure in these analyses and it is reasonable to suppose that this structure underlies some mechanisms of transcriptional regulation. this is to be expected given our understanding of the underlying biology. a valuable property of our method is that it finds structure at both large and small scales.

we are working on expanding our model to include other data sources. we anticipate using chip-seq and chip-chip data when it is available for enough tfs, either in conjunction with sequence analyses or other data sources related to regulation such as expression data.

we have shown that non-parametric probabilistic models are useful tools for unsupervised learning in this context. techniques for genomic data integration are just starting to be applied with success to higher eukaryotes and we believe hdpm models are useful non-parametric tools for this task.

