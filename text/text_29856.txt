BACKGROUND
with the advent of dna microarray technology, it is allowable for simultaneously measuring the expression level of thousands of genes under different conditions in a single experiment. in this way the scientific community can collect a huge amount of gene expression datasets. in recent decade years, microarray technique has been widely used in several contexts such as tumour profiling, drug discovery and temporal analysis of cell behaviour  <cit> . applications of these microarray data contain the study of gene expression in yeast under different environmental stress conditions and the comparisons of gene expression profiles for tumour from cancer patients. in addition to the enormous scientific potential of dna microarrays to help in understanding gene regulation and interactions, microarrays have important applications in pharmaceutical and clinical research  <cit> . by comparing gene expression in normal and disease sells, microarrays may be used to identify disease genes and targets for therapeutic drugs.

mining patterns from those microarray dataset is an important research problem in bioinformatics and clinical research. these patterns relate to disease diagnosis, drug discovery, protein network analysis, gene regulate, as well as function prediction.

clustering techniques have been widely applied in gene expression analysis. it can identify set of genes with similar profiles. however, clustering methods assume that related genes have the similar expression patterns across all conditions, which is not reasonable especially when the dataset contains many heterogeneous conditions. these algorithms such as k-means  <cit> , hierarchical clustering  <cit> , self organizing maps  <cit>  work in the full dimension space, which consider the value of each point in all the dimensions and try to group the similar points together. however, relevant genes are not necessarily related to every condition, so fail to group subset of genes that have similar expression over some but not all conditions. so biclustering is proposed for grouping simultaneously genes set and condition set over which the gene subset exhibit similar expression patterns. cheng and church  <cit>  introduce first biclustering to mine genes clusters with respect to a subset of the conditions from microarray data. up to date, a number of biclustering algorithms for microarray data analysis have been developed such as δ-biclustering  <cit> , pclustering  <cit> , statistical-algorithmic method for biclustering analysis   <cit> , spectral biclustering  <cit> , gibbs sampling biclustering  <cit> , simulated annealing biclustering  <cit> , etc. see  <cit>  for a good survey.

among the various clustering approaches, many methods are based on local search to generate suboptimal solutions. in recent years heuristics optimization has become a very popular research topic. to order to escape from local minima, many evolutionary algorithms  have been proposed in  <cit>  to discover global optimal solutions in gene expression data. these methods apply single-objective ea to find optimal solutions. if a single objective is optimized, the global optimum solution can be found. but in the real-world optimization problem, there are several objectives in conflict with each other to be optimized. these problems with two or more objective functions are called multi-objective optimal problem and require different mathematical and algorithmic tools to solve it. moea generates a set of pareto-optimal solutions  <cit>  which is suitable to optimize two or more conflicting objectives such as nsga-ii  <cit> , paes  <cit>  and spea <dig>  <cit> .

when mining biclusters from microarray data, we must optimize simultaneously several objectives in conflict with each other, for example, the size and the homogeneity of the clusters. in this case multi-objective evolutionary algorithms  are proposed to discover efficiently global optimal solution. among many moea proposed the relaxed forms of pareto dominance has become a popular mechanism to regulate convergence of an moea, to encourage more exploration and to provide more diversity. among these mechanisms, ϵ-dominance has become increasingly popular  <cit> , because of its effectiveness and its sound theoretical foundation. ϵ-dominance can control the granularity of the approximation of the pareto front obtained to accelerate convergence and guarantee optimal distribution of solutions. at present, several algorithms  <cit>  adopt moeas to discover biclusters from microarray data.

recently particle swarm optimization  proposed by kebnnedy and eberhart  <cit>  is a heuristics-based optimization approach simulating the movements of a bird flock finding food. the most attractive of pso is that there are very few parameters to adjust. so it has been successfully used for both continuous nonlinear and discrete binary single-objective optimization. with the rapid convergence and relative simplicity, pso becomes very suitable to solve multi-objective optimization named as multi-objective pso . in recent years many multi-objective pso  approaches such as  <cit>  has proposed. the strategy of ϵ-dominance and crowding distance  <cit>  are introduced into mopso speeding up the convergence and attaining good diversity of solutions  <cit> . there are currently over twenty five different proposals of mopsos presented in  <cit> . we propose the algorithm mopsob  <cit>  to mine biclusters.

in this paper, we modify the fully connected flight model and incorporate ϵ-dominance strategies and crowding distance into mopso, and propose a novel mopso biclustering framework to find one or more significant biclusters of maximum size from microarray data. three objectives, the size, homogeneity and row variance of biclusters, are satisfied simultaneously by applying three fitness function in optimization framework. a low mean squared residue  score of biclusters denotes that the expression levels of each gene within the biclusters are similar over the range of conditions. using the row variance as fitness function can guarantee that the found biclusters capture the subset of genes exhibiting fluctuating yet coherent trends under subset of conditions, therefore reject trivial biclusters. therefore, we focus on finding biclusters of maximum size, with mean squared residue lower than a given δ, with a relatively high gene-dimension variance.

RESULTS
to determine whether the proposed methodology is able to mining better biclusters from microarray data, we have used two common gene expression datasets. in the next sections we describe an overview of the methodology and the detailed results of its application to the analysis of two real datasets.

cmopsob algorithm
in this paper, we incorporate ϵ-dominance, crowding distance and the nearest neighbour search approach into mopso framework, and propose cmopsob algorithm to mine biclusters from the microarray datasets. in the solution space, after the initialization of the particle swarm, each particle keeps track of its position which is associated with the best solution achieved so far. the personal best solution of a particle is denoted by pbest and the best neighbour of a particle by nbest. the global optimal solution of the particle swarm is the best location obtained so far by any particle in the population and is named as gbest. the proposed algorithm consists of iteratively changing the velocity of each particle toward its pbest, nbest and gbest positions. the external archive  records non-dominated set of the particle swarm  that is the final optimal solution set. our algorithm is given in the following different steps.

initialization of the algorithm
we implement the search of optimal solutions in a discrete binary space inspired by  <cit> . the value of a particle on each dimension  is only set to zero or one. we define the velocity of particle as the probability which a binary bit changes. for example each vid represents the probability of bit xid being the value  <dig>  therefore vid must be assigned to the interval  <cit> . personal best position of each particle i found so far is maintains in pbesti whose value of each dimension d  is integers in { <dig>  1}. initialization process first initializes the location and velocity of each particle, and then external archive is initialized. lastly we initialize global bests  of each particle.

step- <dig> initialize the particle swarm  with size s

the particle swarm is initialized with a population of random solutions

for i =  <dig> to s 

   for d =  <dig> to n 

      initialized xid and vid randomly

   endfor

   evaluate the i-th particle xi

   pbesti = xi 

   nbesti = xi 

endfor

step- <dig> initialize external archive and the global bests  of each particle

non-dominated set of initialized ps is constructed depending on ϵ-dominance relation, which is reserved in the external archive . then global bests  for each particle in the ps is selected randomly from a. lastly, the crowding distance of each particle in a is computed.

iterative update operation of the algorithm
each iteration consists of the following three processes. the first is evaluation of each particle. secondly, the velocity vid of each particle is updated based on particle i's best previous position , the best neighbour of particle i and the best previous position of all particle . lastly each particle flies its new best position, and global bests of each particle and external archive is updated.

step- <dig> update velocity and location of each particle

in discrete search space, a particle may fly to nearer and farther position of the hypercube by changing various numbers of bits. thus update process of the particle is implemented to generate new swarm as the following rule.

  vid=w∗vid+c1r1∗+c2r2∗+c3r3∗ 

  if<s) then xid=1;elsexid= <dig> 

where c <dig>  c <dig> and c <dig> are three constants which are used to bias the influence between pbest, nbest and gbest, and we assume c <dig> = c <dig> = c <dig> =  <dig>  the parameter w is inertia weight, and we set w =  <dig> . two parameters r <dig>  r <dig> and r <dig> are random numbers in the range  <cit> . the parameter pbestid, nbestid and gbestid are integers in { <dig>  1}, and vid  must be constrained to the interval  <cit> . the function s  is a logistic transformation and rand () is a quasi-random number selected from a uniform distribution in  <cit> .

step- <dig> evaluate and update each particle in ps

each particle in ps has a new location, if the current location is dominated by its personal best, then the previous location is kept, otherwise, the current location is set as the personal best location. if they are mutually non-dominated, we select the location with least crowding distance.

step- <dig> compute crowding distance and update external archive

based on ϵ-dominance relation, the non-dominated set of ps is constructed and combined into the current external archive and then get a bigger set leader. after computing crowding distance in leaders, a new external archive is got by selecting the s particles with least crowding distance.

step- <dig> update global bests of each particle

update the global bests of each particle in ps that are selected randomly from a which mainly aim at searching in whole space for global optimization solutions.

the algorithm iteratively updates position of the particle until user-defined number of generations are generated and lastly converges to the optimal solution, or else, implements iteration go to step- <dig> 

step- <dig> return the set of biclusters

the particles in external archive a are the optimal solutions that present the set of biclusters.

testing
our algorithm cmopsob is implemented on two well-known datasets, yeast and human b-cells expression datasets. to compare the performance of the proposed algorithm with moea  <cit>  and mopsob  <cit> , a criteria the coverage is defined as the total number of cells in microarray data matrices covered by the found biclusters.

yeast dataset
this table shows the number of genes and conditions, the mean squared residue and the row variance of ten biclusters out of the one hundred biclusters found on the yeast dataset.

human b-cells expression dataset
this table shows the number of genes and conditions, the mean squared residue and the row variance of ten biclusters out of the one hundred biclusters found on the human dataset.

comparative analysis
among the different moeas algorithms, nsga <dig> are the best multi-object optimization algorithm. mitra and banka  <cit>  incorporates nsga <dig> with local search strategies to solve biclustering problem denoted as nsga2b.

in this section, we compare the proposed cmopsob with two well known moea biclustering and mopsob  <cit>  on the yeast data and the human b-cells expression data. parameters are set to same as mopsob  <cit> . we use a crossover probability of  <dig>  and a mutation probability of  <dig>  for nsga2b. for mopsob and cmopsob, we set ε =  <dig> . comparative analysis of three algorithms is shown in table  <dig> 

this table compares the performance of three algorithms, and gives the average of mean squared residue, the average number of genes and conditions, the average size and maximal size of the found biclusters

in total it is clear from the above results that the proposed cmopsob algorithm performs best in maintaining diversity, achieving convergence.

analysis of biological annotation enrichment of gene clusters
the gene ontology  project  provides three structured, controlled vocabularies that describe gene products in terms of their associated biological processes, cellular components and molecular functions in a species-independent manner. the enrichment of functional annotations in genes contained in biclusters is evaluated using onto-express tool  <cit> . to determine the biological relevance of the biclusters found by cmopsob on the yeast dataset in terms of the statistically significant go annotation database, we feed genes in each bicluster to onto-express  and obtain a hierarchy of functional annotations in terms of gene ontology for each bicluster. here only categories with p-values less than  <dig>  were considered statistically significant.

the degree of enrichment is measured by p-values which use a cumulative hyper-geometric distribution to compute the probability of observing the number of genes from a particular go category  within each bicluster. for example, the probability p for finding at least k genes from a particular category within a bicluster of size n is given in .

  p=1−∑i=0k− <dig> 

where m is the total number of genes within a category and g is the total number of genes within the genome  <cit> . the p-values are calculated for each functional category in each bicluster to denote how well those genes match with the corresponding go category.

this table lists the significant shared go terms which are used to describe genes in each bicluster for the process, function and component ontology. here, only shows the terms whose p-values are smaller than  <dig> .

discussion
although there is the amount of information in large and diverse databases of genome-wide expression profiles, mining of meaningful biological knowledge from those datasets remains enormous challenges. multi-objective evolutionary biclustering is a global search heuristic approach, and demonstrate better performance as compared to existing various greedy biclustering methods proposed in the literature  <cit> . but this approach need spend too much computation time in order to achieve better convergence and diversity. pso is initialized with a population of random solutions which the point is same as genetic algorithm . the difference is, however, each potential solution of pso named as particle is also assigned a randomized velocity, and then flown to the optimal solution in the solution space. another important difference is the fact that pso allows individuals to benefit from their past experiences whereas in an evolutionary algorithm, normally the current population is only retained solution of the individuals. this paper introduces a new global search framework for biclustering based on mopso approach. because pso method does not use the filtering operation such as crossover and mutation and the whole swarm population maintains constant during the search process. so in addition to attaining better convergence and diversity, our approach proposed here offers great advantages over evolutionary methods of biclustering. our method can also speed up the process of search. in the future, we will adapt various types of biological methods such as immune system to mining biclusters from microarray datasets. at the same time, we will combine the advantage of those evolutionary computations to propose hybrid biclustering methods for biclustering of microarray dataset.

CONCLUSIONS
in this work, we have provided a novel multi-objective pso framework for mining biclusters from microarray datasets. we focus on finding maximum biclusters with lower mean squared residue and higher row variance. those three objectives are incorporated into the framework with three fitness functions. we apply mopso to quicken convergence of the algorithm, and ϵ-dominance and crowding distance update strategy to improve the diversity of the solutions. the results on the yeast microarray dataset and the human b-cells expression dataset verify the good quality of the found biclusters, and comparative analysis show that the proposed cmopsob is superior to nsga2b and mopsob in terms of diversity, convergence.

