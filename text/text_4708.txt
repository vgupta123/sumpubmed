BACKGROUND
microarray techniques produce large amounts of data in many different formats and experiment sizes are growing with more samples analysed in each experiment. samples are collected over long time and microarray analysis is performed asynchronously and re-analysed as more samples are hybridised. systematic use of collected data requires tracking of biomaterials, array information, raw data, and assembly of annotations. particularly for microarray service facilities, where researchers deposit samples for experimentation, information tracking becomes vital for a subsequent data delivery back to the researchers. to meet the information tracking and data analysis challenges involved in microarray experiments we reimplemented the obsolete base version  <dig>    <cit> .

base  is a miame   <cit>  compliant application designed for microarray laboratories looking for a single point of storage for all information related to their microarray experimentation. base is a multi-user local data repository that features a web browser user interface, laboratory information management system  for biomaterials and array production, annotations, hierarchical overview of analysis, and integrates tools like multiexperiment viewer   <cit>  and genepattern  <cit> .

the utility of base as a local repository managing all data and annotations in experimentation in itself merits the applications existence but on top of the repository capabilities there are analysis tools available for different experimental techniques. the current list of plug-ins is biased towards preprocessing of expression and comparative genomic hybridisation  data but there are ongoing efforts to provide snp and methylation array analysis plug-ins, and more techniques and experimental setups will be supported as needs emerge.

implementation
the current base is a complete rewrite of base <dig> and introduces major enhancements and extensions to support storage of all data produced in microarray experimentation. importantly, base <dig> was inherently targeted for 2-channel data. thus, 1-channel data had to be tweaked into the base <dig> database model because of requirements to store raw data in database tables expecting 2-channel data. base now supports any microarray data and the requirement of storing raw data in database tables is removed - raw data can be stored in files or in database tables depending on data type, user needs, and expected utility. base accommodates common array platforms such as illumina, affymetrix, and agilent, and has the potential to be extended to support future technologies like ultra high-throughput sequencing gene expression data. base supports the inevitable trend in the microarray field to use vendor produced stock or customised arrays but retains the base <dig> array production lims feature useful for groups that fabricate in-house spotted arrays.

base is written in java and uses hibernate  <cit>  for object/relational persistence in a mysql  <cit>  or postgresql  <cit>  database. base is a web application residing in a tomcat container  <cit>  and features an integrated ftp server to simplify batch import/export of data.

to avoid user interface lock-up during potentially time consuming operations a job handling system was implemented where job servers checks for tasks at regular intervals. many of the tasks requested by the user in base, such as import and normalization of data, are from user perspective seamlessly added to the job queue. jobs are executed in batch mode on the server side under control of the job queue system. the base job handling allows the user to log off or continue to work with other tasks in base while the requested tasks are executed. information about job execution is reported by the job handling system, e.g., current job status and start/stop time, is shown in appropriate views. the operation performed by a job is normally supplied as a plug-in, and the job queue is configurable for tuned execution of jobs.

the base programming interface aims at facilitating developers to write extensions and plug-ins. extensions are additions to the user interface that perform direct actions like generating quality control plots, while more complex and time consuming work is performed by plug-ins that work through a job queue. some extensions like mev are java web start enabled applications where the user can spawn an mev process for further analysis and visualization. data are automatically transferred to the mev process running locally on the user computer and analysis can be stored in base or on the local file system. 

base development is transparent and can be followed through the project web site at http://base.thep.lu.se. the base team uses trac  <cit>  for project management where trac provides an enhanced wiki and issue tracking system for software development projects. the base development is divided into milestones where short and long term milestones are announcement through the project web site. user and developer talk-back is also provided through the wiki or mailing lists set up for base users and developers. sample code and instructions for extension development are available through the base co-project site http://baseplugins.thep.lu.se along with many extensions and plug-ins readily available for download and use.

RESULTS
the base application features many components; miame compliance, multi-user, data sharing, data access management, array and biomaterial lims, multiple array platforms, extensibility, configurable plug-ins, annotation customisation, streamlined access to analysis tools, integration of mev and genepattern, web services api, and more. to support all components the underlying relational database has grown to become very large and complex, especially since base itself works with objects posing additional database tables to keep track of objects stored in a relational database. in figure  <dig> we present an overview over the base data layer modules and how they interact with each other. rather than trying to describe every module in detail we highlight some of the more important features made possible by the underlying base design.

information and annotation management
base features a biomaterial lims tracking biological material from its source to hybridisation and ultimately to raw data and analysis. all events throughout sample handling are tracked and information on used and remaining quantities, physical sample locations, quality control information, and sample relations is stored in base. plates with biomaterial can be created and plate events are easily performed for extraction or labelling events. although becoming less commonly used the array production lims of base <dig> is retained to support researchers with spotting facilities, e.g., protein array production and bac array printing that may not be commercially available.

events in biomaterial and array lims are annotable with protocols and event dates, and most items can be annotated with customisable annotation types such as floats, integers, dates, and boolean flags. annotations are either free form or from a preset list of values, and can be marked as required for miame compliance. the annotation system is searchable and the user can select any annotations to be experimental factors in analysis.

data sharing and privacy
one of the important features of base is its usefulness as a local data repository. the repository functionality is amended with data grouping, sharing, and privacy policies. a base project is used to group items  into a logical entity, and a base experiment is a collection of bioassays  grouped logically together for further analysis. all items can co-exist in several projects and experiments without any unnecessary copying of information. 

data privacy is guarded by the data owner and base allows the owner to set data access rules. to this end, each item in base is owned by a user enabling him to share data with colleagues. the grouping of data in projects allows the data owner to simply include other users in a project in order to share data. each item can have different access levels even within a project, and project members can have different privileges. the data access rules are very flexible and can be overwhelming since access levels on almost any item can be individually set. however, using projects, the proper access levels can be set at a single point of interaction.

file and directory structure
base has an integrated file system to provide a possibility for researchers to collect all data files related to a project in one single storage location. data files are uploaded using a web browser or an ftp client. the file storage is an integral part of a strategy to store all microarray experimentation relevant data in base, even data types not already supported in analysis. collecting all data allows future reuse of the data as more data are produced, and new analysis tools becomes available.

supported platforms
there are many types of microarrays, techniques, and brands available for researchers; one- or two-channel hybridizations, spotted cdna/oligo arrays, affymetrix , illumina , acgh, snp, tiling arrays, and many more. data are produced in different file formats that must be treated differently depending on type. nevertheless any type of microarray data can be stored in base.

today, many platforms and experimental setups are supported in downstream analysis but some microarray techniques cannot currently be analysed within base simply because lack of support in available plug-ins. the problem is resolved by creating new, or extending available, plug-ins that add analysis capabilities of platforms and techniques not readily supported in analysis. extending analysis capabilities to new technologies is only a matter of local needs and resources. we add support for platforms in use at the lund university microarray facility and make our tools freely available to the community. even though analysis of all technologies is not readily supported in base the repository feature merits use of base.

analysis, extensions, and plug-ins
base features a hierarchically organised analysis interface that allows data filtering, normalisation, transformation, and other analyses. parameters and settings are automatically stored for each step in the analysis. the selection of analysis tools depends on array type and available plug-ins where a wide range of tools are pre-installed with base, and optional plug-ins can be downloaded from the base plug-in site http://baseplugins.thep.lu.se. base capitalise from other software tools, such as mev and genepattern, by integrating them into the user interface. such integrations provide streamlined access to analysis modules in external tools. base even features a rudimentary manual transform creator that enables researchers to add analysis steps within the hierarchical overview of analysis performed independently of base. the transform creator enables storage of result files and parameter information for archival, tracking, and sharing purposes.

the analysis of microarray data is continuously evolving with new methods and techniques. to this end base provides extensions and plug-in programming interfaces  to enable straightforward additions of new analysis tools. the use of the apis is well documented and there are numerous examples on how to create extensions. the mev, genepattern, and ftp-server integrations all utilise the extension mechanism, and the automatically generated overview plots available in the experimental analysis view are also extensions. the plug-in api is used for all data imports and exports, and most analysis tools, providing new developers a lot of example code to examine when they create base plug-ins.

batch upload and download of data
file, annotation, and item upload can be done asynchronously as data are generated or information becomes available. to relieve researchers from the tedious task of entering data one by one a set of batch import tools was created. the information generated throughout the experimental work is uploaded to base in plain tab-separated files. these files are supplied to batch importer plug-ins that parse the files and create items and associations according to the information in the files. the same plug-ins can be used to batch update many items. similarly, annotating items is done by creating tab-separated files with annotation information, uploading these to base, and loading the file content into the database using annotation importers. if needed, annotations are easily updated with the same mechanism.

files uploaded to base are stored in the directory structure within base and multiple files are easily transferred to base either packaged in compressed files with a single upload action, or by using an ftp client supporting transfer of file structures. similarly, downloading multiple files is straightforward either using an ftp client or by a single click in the base web interface. download of items is done through item listing views enabling users to filter and select what information should be downloaded.

repository and standards
the microarray gene expression data society  develops and maintains standards for data acquisition, representation, and interchange such as the miame guidelines  <cit> , the mage-tab interchange format  <cit> , and the mged ontology for microarray experiments  <cit> . base does not enforce the use of the mged standards but support storage of information required by miame. base has an experiment item overview functionality useful for validating information related to experiments. the validation level is user selectable of which the option regarding miame compliance is most relevant here. when users or server administrators create annotation types in base these annotation values can be marked as required by miame and optionally defined to be a list of pre-defined values from a controlled vocabulary. validation will check for inconsistencies and report errors, and give the user an opportunity to fix issues immediately or later. after resolving the issues raised by the validation, data can be exported for submission to public repositories such as arrayexpress  <cit> , gene expression omnibus  <cit> , and cibex  <cit> .

comparison with other similar tools
in parallel to the evolution of microarray technology several software solutions have been created to manage and analyse the large amounts of data generated in microarray experimentation. we have made a non-exhaustive comparison of selected software that provides both data management and analysis capabilities, are free of charge to use for non-commercial and academic use, and where active development was shared to the community within the last two years.

in table  <dig> we indicate which features are available in the tools we compared. all tools are web browser applications with the exception of arraytrack  <cit>  that is a java web start enabled java client/server application, i.e., it can automatically be started over the internet. all tools provide user and group management, data sharing and analysis capabilities, and all but ezarray  <cit>  are miame compliant. ezarray, mimas  <cit> , and sbeams-microarray  <cit>  support a few array platforms each whereas arraytrack, base, and smd  <cit>  aim at being multi-platform supporting most of the major array techniques. mimas singles out as the only tool to support storage of processed ultra high-throughput dna sequencing data together with affymetrix data in the same database. base and smd both provide spotted array production lims and base is the only program to also feature a biomaterial lims. installation is straightforward for most of the tools but for sbeams-microarray and smd installation is claimed by the projects themselves to be non-trivial.


                              feature
all compared tools are web browser based except for arraytrack which is a java web start enabled java application. an 'x' character denotes supported feature. see main text for a discussion about the different software.

all tools have their positive and negative traits depending on what the tools try to achieve. the tool should carefully be selected to fit current and future needs, and on the expected development and maintenance of the software.

CONCLUSIONS
base is an annotable microarray data repository and analysis application providing researchers with efficient information management and analysis. base stores all microarray experiment related data, biomaterial information, and annotations regardless if analysis tools for specific techniques or data formats are readily available. as new techniques becomes available software applications should be expendable and modifiable to support changed needs. the base team is committed to continue improving and extending base to make it usable for even more experimental setups and techniques, and we encourage other groups to target their specific needs leveraging on the infrastructure supplied by base.

availability and requirements
base is gnu public license version  <dig>  <cit>  licensed open source software. all software required to run base is freely available. users can use any standards compliant web browser to access base, and a demonstration server is available for anyone who wants to try base before installing it locally.

project name: base

web site: http://base.thep.lu.se

demo server: http://base <dig> thep.lu.se/demo

operating systems: platform independent

programming language: java version 6

other requirements: apache tomcat servlet container version  <dig>  mysql or postgresql.

license: gnu public license version 3

authors' contributions
jvc participated in the design of the presented software application. nn is the lead software developer, designed and implemented the software and plug-ins. ms implemented the software and plug-ins. jh participated in design of the application, implemented plug-ins, and coordinates the base project. jvc and jh wrote the manuscript. all authors read and approved the final manuscript.

