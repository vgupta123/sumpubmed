BACKGROUND
deoxyribonucleic acids  are macromolecules that hold genetic information in almost all of the organisms. the bulk of existing dna molecules is assumed to form a right-handed double helical structure called b-dna  <cit> , where each constituent bases a and c selectively bind to bases t and g, respectively, between two strands arranged in the antiparallel way. in contrast, several in vitro experiments reveal the existence of non-b-dna structures caused by particular sequence motifs and dna-protein interactions. well investigated examples include g-quadruplex , z-dna, cruciform and triplex. recent advances in providing in vitro evidence of these specific structures develop the hypothesis that these structures are considered to have some functional roles in living cells  <cit> .

a g <dig> structure is one of the topological conformations that dnas can adopt, where g-quartets, hydrogen-bonded square planar substructures between four guanines , are stacked onto each other . at the sequence level, a g <dig> sequence can be represented by four regions of consecutive gs that form g-quartets, called g-runs, and three regions of nucleotide subsequences that connect g-runs, called loops, which can have varying length including lack of loop  <cit> . note that consecutive gs may stretch over g-run and loop regions, making the problem of predicting g-run regions somewhat complex. loops are known to play an important role in stability of g <dig> structures  <cit> . in addition, it is pointed out that the loop length affects therapeutic selectivity to target a g <dig> instead of the topology of the g <dig> structure  <cit> . g <dig> structures are also stabilized by monovalent cations, especially k+, located in the central cavities in the stack.

eukyariotic telomeric sequences include g-rich regions and they can form g <dig> structures in vitro. however, the question of how many such g-rich regions can actually form g <dig> structures in vivo has not been resolved. the potential to form g <dig> structures in telomeric sequences in vivo can be shown by in vitro dna binding experiments with those sequences  <cit> . for example, telomere end-binding proteins in ciliates can control the formation of g <dig> dna structures at telomeres  <cit> . interestingly, however, a recent study suggests that endogenous g <dig> structures in human cells are present largely outside the telomeres  <cit> . another work reports that protruding nucleotides in human telomeric sequences destabilize the g <dig> structure and overhanging sequences influence the folding of the quadruplex  <cit> . other examples of g-rich regions in genomes are transcriptional start sites, mitotic and meiotic double strand break sites. although g <dig> structures have stability with higher temperature than that of canonical double helix structures, many functional regions in genomic sequences have not a few g-rich motifs  <cit> , motivating us to investigate further the functional roles of g <dig> structures.

since little is known about the functions of g <dig> structures and genome-scale wet-lab experiments with nuclear magnetic resonance  spectroscopy for structural analysis  <cit>  are not feasible, several computational efforts have been made on identifying the locations of potential g <dig> sequences in genomic dnas and inferring their functions by comparative sequence analysis using related genes with known functions  <cit> . in principle, g <dig> motifs can be represented by a regular expression g+n ∗g+n∗g+n∗g+, where 'n' shows an arbitrary base including g, '+' denotes at least one repeat of the preceding symbol and '∗' means at least zero repeats. due to this simple pattern of g <dig> motifs, several in silico methods have been proposed to detect g <dig> sequences in genomes using pattern matching with regular expression  <cit> . moreover, regular expression-based methods that incorporate a simple scoring scheme are proposed  <cit> . another computational study focuses on thermodynamic stability of g <dig> structures using gaussian process regression  <cit> . although the pattern matching approaches can detect many g <dig> motifs in genomic sequences quite fast, it is pointed out that the majority of these motifs may be false positive g <dig> sequences  <cit> .

in this contribution, we present more elaborate computational models than regular expression to represent g <dig> motifs, employing hidden markov models . hmms are so flexible in modeling linear dependence that they are widely used in bioinformatics including protein secondary structure prediction  <cit>  and sequence motif search  <cit> . to model g <dig> motifs, we provide four hmm-based models from the viewpoint of the number of hidden states that describe g-runs and loops, and compare with each other in three computational experiments. the first preliminary experiment in predicting g-run regions in a set of  <dig> real g <dig> sequences in the literature  <cit>  indicates that each hmm-based model can represent actual g-run regions well. the subsequent experiment in discriminating real and shuffled g <dig> sequences by using hmms shows that the models considering detailed distributions of g-run and loop lengths can outperform the simple probabilistic extension of regular expression. in the third test with statistical analysis in discriminating highly likely g <dig> structures from putative g <dig> motifs in the human pre-mrna sequences  <cit> , the results show that the hmm-based model that can represent elaborate length distribution of g-run regions outperforms the other three models presented in this work. moreover, the above model can be specialized to detect g <dig> sequences whose functional roles are expected to be involved in dna transcription. finally, this model in conjunction with pattern search is applied to g <dig> screening in the whole human genome, producing a considerably smaller number of g <dig> candidates with statistical significance than that of g <dig> sequences predicted by pattern matching alone.

here we would like to emphasize the significance of our research findings as follows:

• as compared with the regular expression-based approach, our method can assess g <dig> motifs quantitatively by a probabilistic measure. indeed, g <dig> motifs can be detected first by the "discrete" regular expression-based method and then may be scored to judge their thermodynamic stability using energy parameters for g <dig> structures. however, to the best of our knowledge, elaborate energy parameters for g <dig> structures have not been available so far. under these circumstances, probabilistic models including hmms are useful in not only evaluating predictions quantitatively but also training the model parameters from experimentally verified data.

• our results show that hmm-based models are statistically reliable enough to detect a more specified motif among general g <dig> structures in genomic sequences, narrowing down potential g <dig> sequences predicted by the existing pattern matching method. this means that the combination of the regular expression-based approach and our probabilistic method will help reduce expensive and laborious wet-lab experiments more than the regular expression method alone will do to exhaustively analyze a given set of g <dig> motifs of interest. we believe that our research findings can boost understanding of functional roles of g <dig> structures in genomes, as well as helping to design therapeutic drugs that target specific g <dig> structures.

RESULTS
we develop four hmms to see how well the models can represent real g <dig> sequences and can reduce false positive g <dig> sequences from putative ones. to put it simply, the hmms developed have four sets of hidden states for g-runs linked by three sets of hidden states for loops . in addition, the parameters of hmms were trained by experimentally verified data in the literature  <cit> .

predicting g-run regions
stegle et al.  <cit>  provide a dataset of  <dig> g <dig> structures, which were experimentally verified with varying salt concentrations. note that the corresponding sequences are of the form g+n∗g+n∗g+n∗g+ in regular expression. in our test, we used  <dig> sequences out of  <dig> because the original dataset contains duplicate sequences with different salt concentrations.

we predicted g-run regions of each sequence in the dataset using the viterbi algorithm for each hmm. evaluation measures that we used are tp , the number of correctly predicted gs in g-runs, fp , the number of incorrectly predicted gs that are not in g-runs, and fn , the number of correct gs in g-runs that are not predicted. in addition, the following measures were calculated:

 sen=tptp+fn,ppv=tptp+fp,f=2×sen×ppvsen+ppv, 

where sen, ppv and f denote sensitivity, positive predictive value and f-measure, respectively.

results of predicting g-run regions are shown in table  <dig> where 10-fold cross validation was carried out for training and testing. it should be noted that training was carried out using the baum-welch algorithm for each hmm. as the table shows, every model achieves high ppv, meaning that few fps are found in the predictions. the hmm-based model  <dig> achieves perfect sensitivity, although it produces the most fps. this tells us that the model  <dig> considers all consecutive g regions as g-runs. on the other hand, the models  <dig> and  <dig> yield few fps, but the model  <dig> outputs the most fns, degrading sensitivity. all things considered, the model  <dig> seems better to predict g-run regions.

in this test, we evaluated predictive performance of four hmm-based models using 10-fold cross validation. time shows the total execution time to run the viterbi algorithm on a machine with intel core i7- <dig>  <dig> ghz cpu and  <dig> gb ram. the best performance is shown in boldface.

discriminating g <dig> sequences
we first investigate the discriminative performance of the four hmm-based models between real and shuffled g <dig> sequences. more specifically, we first randomly split the set of  <dig> real g <dig> sequences in stegle et al.'s dataset  <cit>  into two sets of  <dig> positive sequences, where one set is for training and the other is for validation. next, a set of  <dig> negative sequences for validation was created by doing trinucleotide shuffling  <cit>  of  <dig> positive sequences in the validation set. note that use of trinucleotide shuffling comes from the observation that g <dig> structures often have at least three consecutive gs as each g-run to make their structures stable. in total, we have  <dig> sequences in the validation set where  <dig> sequences are positive and the other  <dig> sequences are negative.

here we elaborate on the evaluation of the full probability p  of a sequence x given an hmm with a set θ of parameters, which can be calculated by the forward algorithm. note that the parameters of each hmm were trained on the training set of  <dig> g <dig> real sequences in the training set. since the full probability values for hmms are usually small and the naïve log likelihood scores are strongly length dependent, we used the log-odds score l relative to a random model r defined by

 l=logpp=p∏β∈{a,c,g,t}qβ, 

where qβ is the frequency of a base β ∈ {a, c, g, t } in all training sequences. finally, we converted the log-odds score of the sequence x into the z-score over all validation sequences calculated by

 zx=lx-l ¯s, 

where l ¯ and s denote the average and the standard deviation, respectively, of all validation sequences.

with the total number of  <dig> positive and negative sequences stated above, we computed z-scores for log-odds scores of validation sequences in each hmm model, and drew receiver operating characteristic  curves and calculate area under the roc curve  to judge the discriminative power. figure  <dig> shows the roc curves as well as auc for each hmm-based model, indicating that the models  <dig>   <dig> and  <dig> perform good discrimination, whereas the model  <dig> yields the worst auc. this means that the model  <dig> that can be considered as a simple probabilistic extension of regular expression is not enough to discern real g <dig> sequences from shuffled ones, and the models that considers detailed distributions of g-run and loop lengths can outperform the regular expression-based methods.

reducing potential g <dig> sequences in database
we next aimed to screen highly likely g <dig> structures out of putative g <dig> sequences predicted by pattern matching. to this end, we used g-rich sequence database version  <dig>    <cit>  that contains information on composition and distribution of putative g <dig> sequences mapped in the eukaryotic pre-mrna sequences. we should notice that the sequence data stored in this database are computed by the regular expression-based approach named qgrs mapper  <cit> . in this test, we retrieved  <dig>  putative non-overlapping g <dig> sequences in  <dig> pre-mrna genes with refseq status validated in the human genome . this time the parameters of each hmm were trained on the full dataset of  <dig> g <dig> sequences in stegle et al.'s dataset.

these are actually to be pre-mrnas compiled in the guanine rich sequence database version  <dig>    <cit> . note that # putative g4s indicates the number of g <dig> candidates stored in the database.

figures 3- <dig> show the distributions of z-scores of respective hmm-based models. we can see in figures  <dig> and  <dig> that the distribution of z-scores in the model  <dig> is very similar to that in the model  <dig>  looking more carefully into the shapes of these distributions, variance of each peak in the model  <dig> is smaller than that in the model  <dig>  moreover, the rightmost peak of higher z-scores contains many putative g <dig> sequences in the model  <dig>  in figure  <dig>  the frequency of z-scores is roughly said to rise steadily from left to right and there seem to be a few peaks in the model  <dig>  this means that unlike the models  <dig> and  <dig>  we cannot separate the distribution clearly in the model  <dig>  the distribution in the model  <dig> shown in figure  <dig> has several peaks, indicating that we can separate the distribution into multiple groups.

let us now evaluate the z-scores statistically. when we cut out z-scores under - <dig>  of lower-tailed 5% point of the standard normal distribution, the distribution in the model  <dig> can be perfectly separated into two groups as shown in figure  <dig>  in contrast, figures  <dig> and  <dig> show that we cannot separate the distributions in the models  <dig> and  <dig> perfectly by the significant z-score threshold. note that in the model  <dig> the leftmost peak includes this cutoff and thus the distribution can only be partly separated . to investigate the difference in the number of g <dig> candidates that can be reduced by the cutoff between four hmms, we drew the graph that shows the ratio of putative g <dig> sequences reduced by the threshold in each gene . as we can see, the model  <dig> reduces the most g <dig> sequences, whereas the model  <dig> leaves the most. therefore, we will compare the model  <dig> with the model  <dig> below.

functional analysis of putative g <dig> sequences
here we focus on the putative g <dig> sequences with significant z-scores in the hmm-based models  <dig> and  <dig>  computing the ratio of the number of g <dig> sequences in a gene x to the length of that gene, called g <dig> density for the gene, defined as

 dx=gxx, 

where g is the number of g <dig> sequences in the gene x and |x| shows the length of x. for the original g <dig> candidates in the grsdb <dig> database and their reduced g <dig> sequences computed by the hmm-based models  <dig> and  <dig> with the cutoff of lower-tailed 5% point of the standard normal distribution, we calculated g <dig> density of each gene and converted it into the z-score in each case. it should be noted that the z-scores were calculated over all genes in each case. we should also notice that the point here is to make clear which gene can be considered to have significantly many g <dig> sequences.

tables  <dig> and  <dig> show the results of g <dig> density in the models  <dig> and  <dig>  respectively. these results indicate that the model  <dig> can narrow down the number of genes by one in statistical interpretation as compared with the reference candidates and reductions by the model  <dig> with the significant z-score threshold. looking more carefully into the genes with significantly many g <dig> sequences computed by the model  <dig>  they are likely to be involved in transcriptional regulation . therefore, the hmm-based model  <dig> can be helpful in detecting g <dig> sequences whose functional roles are related to dna transcription.

the column of z shows the z-score for g <dig> density dpred of each gene that contains g <dig> sequences reduced by the cutoff of lower-tailed 5% point of the standard normal distribution. the column of z indicates the z-score for g <dig> density dref of each gene that contains original g <dig> candidates in the grsdb <dig> database. a significantly large z-score at the significance level  <dig>  is shown in boldface.

a significantly large z-score of g <dig> density at the significance level  <dig>  is shown in boldface.

process: activation of mapkkk activity, positive regulation of mapkkk cascade, protein ubiquitination, regulation of apoptosis, regulation of transcription, dna-dependent, transcription.
process: apoptosis, biological_process, multicellular organismal development.
note that in the gene ontology column, the words "molecular_function," "biological_process" and "cellular_component" are used to show that details are unclear.

applying hmm to whole human genome
the third experiment stated above focuses only on pre-mrna sequences in the human genome, leaving further potential g <dig> sequences over the whole genome. thus, we demonstrate here how many potential g <dig> sequences the regular expression-based method can detect in the whole human genome and how many our method can reduce.

the human genomic sequence named hg <dig> was retrieved from the ucsc genome browser database  <cit> , where we used  <dig> regular chromosomes along with x, y and m chromosomes. in the regular expression g+n∗g+n∗g+n∗g+ that we used as prefilter, the length of a g-run is between three and five and that of a loop is between one and seven. this assumption comes from the majority of existing pattern matching-based methods  <cit> . after running regular expression-based search for non-overlapping g <dig> motifs on the set of genomic sequences, we attempted reducing the resulting putative g <dig> sequences by using the hmm-based model  <dig>  more specifically, we calculated z-scores over all putative g <dig> sequences as in the third experiment, and discriminated the g <dig> sequences with z-scores by two cutoffs that indicate lower-tailed and upper-tailed 5% points of the standard normal distribution, respectively. figure  <dig> shows the distribution of z-scores in the model  <dig>  whose shape is similar to that of the normal distribution. in table  <dig>  we can see that the run-time of regular expression-based search followed by hmm screening is short enough to handle genomic sequences of huge size. comparing the ratios of reduced g <dig> sequences using the two cutoffs, discrimination by upper-tailed 5% point yields more drastic reductions than that by lower-tailed 5% point. accordingly, the remaining g <dig> candidates with significantly high z-scores reduced from those detected by pattern matching are expected to be highly likely to form g <dig> structures in vitro and in vivo.

note that re+hmm represents the re-based search followed by hmm screening. in addition, % reduction shows how many g <dig> motifs the re+hmm model can reduce from the results of re only. we used two cutoffs to remove less significant potential g4s, where the cutoff  <dig> of - <dig>  and the cutoff  <dig> of  <dig>  mean lower-tailed and upper-tailed 5% points of the standard normal distribution, respectively. run-time was calculated on a machine with intel core i7- <dig>  <dig> ghz cpu and  <dig> gb ram.

discussion
from our experimental results, the following two points on the constitution of hmms become clear:

• increasing the hidden states for representing g-runs in an hmm can lead to small variance of the probability distribution over input sequences given the model.

• increasing the hidden states for describing loops can make the hmm flexible.

the first point can be explained by figures  <dig> and  <dig>  while figure  <dig> gives a good account of the second point.

here we will look closely at g-runs and loops in g <dig> sequences. recall that g-run is a region of consecutive gs involved in g-quartets and loop is a single strand consisting of arbitrary bases that connect g-runs in front and behind. since the hmm-based model  <dig> as well as the model  <dig> is specialized to represent consecutive gs, each g in g-runs will be strictly discriminated in the model, affecting the sharpness of the probability distribution over the set of input sequences. on the other hand, the model  <dig> has more hidden states that can represent any base, and thus it can output an arbitrary sequence in a more flexible framework and show multi-modal probability distribution. viewed in this light, we may say that the model  <dig> has the broader distribution of z-scores due to increase in hidden states for representing loops, and several groups of peaks because of increase in hidden states for describing g-runs . although the different peaks in score distributions may tell us which potential g <dig> sequence actually forms g <dig> structure in vitro and/or in vivo, experimental verification in wet-labs is still awaited.

CONCLUSIONS
we presented the hmm-based modelings for g <dig> motifs in anticipation of reducing false positive g <dig> sequences in genomic dnas detected by simple pattern matching with regular expression. the discrimination test with the hmms was indicative of high discriminative power of elaborate models between positive and negative g <dig> sequences. our computational experiments with statistical analysis on potential g <dig> sequences in human genomes make it clear that the hmm-based model that considers detailed distribution of g-run length can discriminate well between g <dig> sequences that match the model and those that do not. moreover, another experimental results suggest that the above hmm-based model can be specialized to detect genes whose functional roles are expected to be involved in transcription, which include significantly many g <dig> sequences. furthermore, this model in conjunction with use of regular expression can detect a considerably smaller number of g <dig> candidates in the whole human genome with statistical significance. therefore, we may reasonably conclude that the hmm-based approach together with the conventional pattern matching method can contribute to reducing costly and laborious wet-lab experiments to exhaustively analyze a given set of g <dig> motifs of interest.

in this work, we proposed the hmm-based models where each g-run has variable length. in contrast, applying hmms that deal only with a specific fixed length of g-runs to genomic sequences may yield more accurate discrimination of g <dig> sequences. in addition, change of the training sequences that should be verified experimentally may have a certain effect on prediction results. in this sense, collaboration between in silico, in vitro and in vivo experiments will be even more important to advance functional analysis of g <dig> structures in genomes of various organisms.

