BACKGROUND
the development of high-throughput sequencing  technologies has lead to major biomedical discoveries in recent years  <cit> . the power of these technologies comes from the repeated sequencing of genomic regions of interest, such as exons  <cit>  and protein binding sites  <cit> , and requires processing millions of sequencing reads contained within raw data files sized between several hundred megabytes to over twenty-five gigabytes  <cit> . reads are typically mapped to a reference genome via specifically designed alignment programs  <cit> . mapped read counts are subsequently used for quantitative analysis, such as allele frequency of dna mutations  <cit> , abundance of mrna in a tissue of interest  <cit> , and frequency of protein-dna binding  <cit> .

the large amount of hts data challenges the development of more efficient, robust, and reproducible data analysis workflows. one of the most successful efforts to standardize hts workflow was the development of the sequence alignment/map  format for the storage of aligned sequencing reads, along with a corresponding set of utility programs operating on sam files  <cit> . sam and its more practically utilized binary companion, bam , have been generally accepted as a standard to store and exchange aligned reads by the genomics community, including sequencing facilities and large-scale hts projects such as the  <dig> genomes  <cit>  and encode  <cit>  projects. bam files can be further sorted and indexed to support random access to reads mapped to any genomic location.

version  <dig>  of the sam format has eleven mandatory fields that can be classified into two categories. each of the per read fields represents one aspect of each aligned read with a single value. for example, the "pos" field stores the mapped location of a read within a reference sequence, and the "mapq" field corresponds to a score assigned by the alignment program to indicate the confidence of the mapping. per base fields "seq" and "qual" respectively record the base calls and sequencing quality scores of all bases in each read. these two fields account for the majority of the size of sam/bam files. the "cigar" field is a special case. it uses a compact character string to depict the actual base pair alignment. for example, "75m" means there are  <dig> bases of the read aligned to the reference sequence without gap, whereas "20m1d55m" means there is a single base deletion between the twentieth and twenty-first bases of all  <dig> bases.

the creation of bam files is a milestone that typically marks the transition from raw data generation/processing to specific downstream analysis of hts data. once provided with the bam files, researchers often need to evaluate data quality and identify potential issues that might affect downstream analysis. examples of common questions are whether the sequencing quality and depth are sufficient to support robust quantitative analysis, and which lessons are learned from the current data to optimize future experiments. close inspection of the bam files is necessary to address these needs.

programs systematically evaluating hts data are available but scarce. fastqc summarizes sequencing quality, nucleic acid bias, and other information about the sequencing reads themselves, but does not provide information related to read alignment and sequencing coverage  <cit> . rna-seqc is used to specifically summarize read count, coverage, and expression correlation of rna-seq data, but is not applicable to other types of hts data  <cit> .

the r programming language provides an ideal platform for summarizing hts data due to its extensive functionality in scientific computation and data illustration  <cit> , as well as its support of bioinformatics data analysis through the bioconductor project  <cit> . sweave is a framework that integrates r code within latex documents  <cit> . sweave enables the insertion of dynamic content, such as project-specific outputs, in a preformatted template, enabling highly efficient reporting of data analysis results.

to address the need for a more comprehensive evaluation of hts data, we used the r framework to create an automated assessment method that was implemented in the bamchop program. bamchop retrieves information from bam files and reports a series of statistical matrices related to assorted aspect of hts data.

implementation
hardware and software
bamchop was developed and tested on a unix server  with two 6-core xeon cpus and  <dig> gb of ram using the r environment . the software requires several extension r packages  that are mostly available through the bioconductor project. for example, the rsamtools package is an essential element of the program by providing the interface to access bam files. bamchop also depends on a tex installation to generate pdf formatted documents from latex intermediates.

inputs
bamchop has a very simple command line user interface. the program requires only two inputs: a bam file and an r data object containing information about the reference genome to which the sequencing reads were mapped. examples of such information are base frequency of each chromosome and exon/intron locations. bamchop does not require any information about how the bam file was generated, which makes it applicable to any experimental protocol, sequencing platform, or alignment program. however, bamchop does require the bam file to be sorted and indexed.

system architecture
the major components of bamchop include a "main" program, a set of utility functions used to calculate statistics, a set of plotting functions used to generate illustrations, a database of genome-related information, and a sweave reporting template.

the workflow of a bamchop run is described in figure  <dig>  first, the scanbam() function implemented by the rsamtools package loads mapping locations of all reads and all sam fields of a randomly selected subset of reads from a bam file. the latter is a necessary compromise to reduce system requirements and runtime . an r data object storing the genome metadata will also be loaded. bamchop includes pre-compiled information related to human and mouse genomes  that are stored in an internal database, but users can also prepare their own genome/build metadata using a utility function. once the main program loads the input data into the r environment, it calls a series of utility functions that statistically summarizes various aspects of the hts data and saves the results in a structured "bamchop" data object. the object is then passed to a sweave template to generate illustrations in a latex document. this document is then converted to a pdf file as the final step.

the overall architecture of bamchop is straightforward and flexible. the main program and the utility functions are responsible for the generation of statistical matrices by performing most of the computational tasks, while the sweave template transforms results into a report. these two layers communicate through a single "bamchop" object. this object can be saved and reused when the sweave template is updated. furthermore, its contents can be extended to include additional information, such as strand-specific sequencing depth, for downstream analysis without affecting the generation of the report.

outputs
the primary output of bamchop is an indexed pdf file with several sections corresponding to assorted aspects of the hts data. the detailed contents of this report are described in the results. optionally, metadata and statistical results generated during the process can be written to the disk for re-use.

RESULTS
estimate statistics with random subset of sequencing reads
the large and ever-increasing size of hts data will be a continuous challenge to any hardware and software. loading multi-gigabyte bam files into r environment is a time-consuming task even for powerful server systems. to explore methods of alleviating potential data load bottlenecks, we investigated whether a subset of randomly selected sequencing reads serves as a precise proxy for generating global statistics, especially those based on the per-base sam fields.

a resampling procedure was performed to randomly select  <dig> to  <dig> million aligned reads and import all sam fields of these reads from a bam file. a set of summary statistics were compiled from each of these random subsets, such as position-specific sequencing quality, base frequency, insertion size of paired reads, and mapping quality. this procedure was repeated  <dig> times. the distributions of summary statistics obtained from these repeats are displayed in figure  <dig>  the results indicate that for random subsets of  <dig> or more reads, the estimation of global statistics closely approached the true values. for example, the iterated estimates of the average insertion size of paired-end reads ranged between  <dig>  and  <dig>  bp when  <dig> random reads were used; whereas the global average of a total of over  <dig> million reads was  <dig>  bp. we concluded that  <dig> reads are sufficient to precisely and consistently reproduce global statistics. conversely, mapping locations of all reads are imported from bam files into bamchop because they are relatively lightweight and required by most downstream analyses. the storage of minimal mapping information  takes less than one gigabyte of memory for  <dig> million reads.

report content
the primary output of each bamchop run is a pdf document composed of the following components:

• overall landscape of sequencing depth. the first page of the report depicts a graphical index of sequencing depth on a chromosomal basis . the graphic is generated in low resolution to reduce processing time but provides a quick way to identify large genomic regions with atypical sequencing depth.

• summary statistics. this section provides a quick review of single-value global statistics , such as the total read number of reads and the mean sequencing score.

• read count and sequencing coverage. one of the most frequently asked questions about hts data is whether the data provides sufficient sequencing depth to support downstream quantitative analysis. this section lists the proportions of the whole genome satisfying a number of pre-configured depth thresholds , as well as the mean depth of different genomic features  and chromosomes .

• sequencing quality. information about overall sequencing quality is essential for estimating the reliability of sequencing data. sequencing quality usually decreases as the sequencing extends, so bases close to the end of reads are more error-prone. this section lists the proportions of bases satisfying given thresholds of quality scores  as well as position-specific distributions of quality scores .

• reference genome mapping. this section summarizes the "flag" field of sam format , mapping quality score  assigned by the alignment program to each read, the frequency of reads with mismatches , and the extent of duplicated mapping . if paired-end sequencing is utilized, summary of paired mapping and distribution of insertion size is also reported .

• base frequency. bamchop reports both frequency of ns among all base calls and percentage of reads including any n bases . frequency of regular nucleic acid bases in sequencing reads is compared to the background frequency of bases in reference sequences . in addition, frequency of single bases , di-base combinations , and k-mers  at both ends of reads is also summarized to detect sequencing bias or primer contamination.

• alerts. this section lists potential problems indicating low quality or suggesting adjustment of downstream data analysis. for example, an alert will be issued if the overall frequency of uncalled bases is higher than  <dig> % or more than 55% of the reads are mapped to one strand.

an example of a complete bamchop report is available as additional file  <dig> 

validation
bamchop was validated on a variety of bam files originated from local targeted resequencing, rna-seq, and chip-seq projects and the  <dig> genomes project. these data were generated by different sequencing machines, including genome analyzer iix ,  <dig> solid  and  <dig> , and aligned by different programs, such as lifescope , novoalign , and maq  <cit> .

part of the test runs was summarized in table  <dig>  interestingly, these results showed that the runtime of bamchop had stronger correlation to the total number of mapped reads than to the size of bam files or to the total number of mapped bases. indeed, the total number of mapped reads and runtime significantly fit a linear regression model  as shown in figure  <dig>  based on this model, every  <dig> million extra reads in bam files will take bamchop  <dig>  more minutes to run. therefore, bamchop is a robust and sustainable program that will be capable of handling different types and sizes of bam files in foreseeable future.

bam files generated by local projects or  <dig> genome project using different sequencing instruments and alignment programs were tested with bamchop. the average mapping length, total number of aligned reads and bases, bam file size, and time taken to finish each run were summarized in this table, which showed that the number of reads is the primary factor determining runtime.

CONCLUSIONS
we developed a user-friendly software for biomedical researchers to rapidly and intuitively assess hts data. the robustness of this software has been validated on bam files of various sizes and generated by a variety of hts experimental paradigms and sequencing workflows. bamchop is being implemented as a core component of a workflow our group has developed for identification of sequence variations in clinical diagnostics and research samples via targeted resequencing technologies. we plan to continuously improve the functionalities of bamchop with new features and faster performance. specifically, we plan to expand bamchop with individual modules that summarize information related to specific hts applications, such as rna-seq and chip-seq. additional new functions will also include detailed information about selected genomic regions of interest and comparison of multiple bam files.

availability and requirements
contact: zhangz@email.chop.edu

source code repository: https://github.com/cbmi-big/bamchop

system requirements: unix system with at least  <dig> gb of ram

software dependency: r/bioconductor and latex documentation system

license: free for academic use

competing interests
the authors declare that they have no competing interests.

authors' contributions
zz designed and programmed the software, and drafted the manuscript. jl and psw revised the manuscript. psw oversaw the project. jl provided the original sweave template and support to developing environment. amy tested the program. other co-authors participated in designing and testing the program.

supplementary material
additional file 1
this pdf file is an example of bamchop report. it was generated from a whole exome sequencing sample.

click here for file

 acknowledgements
we thank drs. avni santani, marni falk and john maris for kindly making their hts data available for the development and testing of bamchop. this project was partially supported by nih/nichd grant p30-hd <dig> 

declarations
the publication costs for this article were funded by the david lawrence altschuler chair in genomics and computational biology to dr. peter white.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2013: selected articles from the second workshop on data mining of next-generation sequencing in conjunction with the  <dig> ieee international conference on bioinformatics and biomedicine. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/14/s <dig> 
