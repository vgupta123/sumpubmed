BACKGROUND
comparative sequence analysis is fast becoming a standard method for discovering cis-regulatory modules  <cit> . the technique relies on the signatures of conservation left by functional genomic regions as the background sequence evolves. it is often the only way to computationally discover cis-regulatory modules in animal genomes when definite knowledge of upstream regulators is lacking, and it can serve as an excellent complement to experimental techniques.

paircomp, familyrelationsii , and cartwheel are an integrated system for comparing two bac-sized  genomic sequences, viewing the comparison, manipulating thresholds and views, and extracting the results. these tools and their predecessors, seqcomp and familyrelations, have been used extensively in the years since we first made them available  <cit> . however, the addition of cartwheel, a web server system for performing, storing, and revisiting analyses, makes this combined toolkit considerably more useful to the experimental biologist.

the first analysis done with familyrelations was a comparison of the otx region between two sea urchins;  <dig> of the  <dig> conserved blocks were shown to drive expression of a reporter  <cit> . kirouac and sternberg  <cit>  showed that features conserved between c. elegans and c. briggsae encode functional regulatory regions. romano and wray  <cit>  used familyrelations to show that primary sequence identity was conserved in only part of the previously identified endo <dig> cis-regulatory region, when the l. variegatus sequence was used as a partner to the s. purpuratus sequence. leung et al.  <cit>  used frii to analyze regions in which nfkb bound to verify that the regions were conserved between mouse and human. and, most recently, revilla-i-domingo et al.  <cit>  identified a small conserved region in the delta genomic locus as a cis-regulatory element responsible for localized expression of delta in s. purpuratus. similar analyses of the regulation of gatae, krox, wnt <dig>  brachyury, tbrain, foxa and deadringer in s. purpuratus are forthcoming from this lab. while most published use of frii and cartwheel has been in sea urchins and nematodes, users have reported that the tools accurately identify regulatory regions in vertebrates and plants.

frii and cartwheel are specialized for identifying conservation within relatively small genomic regions, and can be used for comparing bac sequences between organisms for which no whole genome assembly exists . the exhaustive "dot-plot"-style search algorithm used  assumes nothing about the relative positioning or orientation of regulatory regions and can be used to detect rearrangements that might be missed by a global alignment algorithm . because of these features, frii and cartwheel are particularly useful in targeted searches for regulatory regions.

in this paper, we present these effective tools for comparative sequence analysis to the wider biological community.

implementation
paircomp is a program for doing windowed comparisons of two sequences. it is an expanded reimplementation of the seqcomp program  <cit> . paircomp contains several algorithms for doing exhaustive fixed-width-window sequence comparisons, optimized for different parameters. the default algorithm uses a sliding window to do a "rolling comparison" and runs in time o for two sequences of lengths n and m. paircomp is written in c++ and has a python interface.

familyrelationsii  is a graphical viewer for sequence analyses. it is a c++ reimplementation of the original java/jython familyrelations  <cit> . frii uses the cross-platform fltk windowing toolkit to present a common interface on windows, mac os x, and linux/x <dig> 

cartwheel is a server-side system that presents a uniform interface for job coordination and execution. it has several components, including a web interface through which users can establish analyses; a remote interface for programs to retrieve analysis data; and a batch job queueing system based on a method of parallel processing known as a linda tuple space. all of the components are built on top of a postgresql database. cartwheel is written in python and provides libraries in python, java, and c++ for remote access.

a technical history of the design decisions made in the implementation of these tools has been published online .

availability
frii is freely available for download in a binary distribution for mac os x and windows  <cit> ; frii will also run under most unix distributions but must be compiled individually. the center for computational regulatory genomics at caltech maintains a public cartwheel server  <cit> . a tutorial for frii is available online  <cit> , and an example homework assignment for an undergraduate class is also available. the source code for paircomp, frii and cartwheel and all their components is freely available under the l/gpl through the above web sites. paircomp, familyrelationsii and cartwheel are copyright © 2001– <dig> the california institute of technology.

RESULTS
paircomp
several different classes of algorithms are available for comparing two genomic sequences. windowed comparisons do an exhaustive comparison of two sequences with a fixed-width window, and record strict  sequence identity within that window  <cit> . local alignment algorithms such as blast search for common "words" of dna in a pair of sequences and build a gapped alignment around these words  <cit> . these gapped alignments are often scored by overall length, so that e.g. a  <dig> bp match at 90% is ranked higher than a  <dig> bp match at 90%. global alignment algorithms such as avid  <cit>  and lagan  <cit>  seek to build a start-to-end gapped alignment of syntenic genomic regions. windowed comparisons and local alignment algorithms usually search for matches in both forward and reverse complement directions, while global alignment algorithms typically try to build an alignment without inversions. implementations of all three strategies for genomic comparisons have been publicly available for some time: dotter and seqcomp implement windowed comparisons  <cit> ; pipmaker uses a local alignment algorithm, blastz  <cit> ; and vista relies on a global alignment generated by avid  <cit> . all three comparison strategies have been successful at finding regulatory regions  <cit> .

of the three general classes of algorithms, we chose to use windowed comparisons in our search for cis-regulatory modules. our decision was based on several criteria. first, these comparisons report matches based solely on strict sequence identity with no gapping, unlike alignment algorithms. this is a good ab initio requirement when comparing sequences in search of cis-regulatory modules, whose evolution is still poorly understood; in particular, binding sites could be sensitive to indels, which are somewhat elided in gapped alignments. moreover, we had no a priori expectation for the locations, sizes, or degrees of similarity of conserved regions, necessitating an exhaustive search strategy that did not bias scores based on the length or position of matches. and, finally, from a user-interface perspective the parameters for paircomp – windowsize and threshold – are simple and intuitively linked to the results. our success with this basic approach means that we have not needed to move to alternative algorithms.

paircomp is a standalone program that executes windowed comparisons . it searches for matches in both the forward and reverse complement directions. paircomp runs within cartwheel; the results are stored in a database and communicated to frii.

cartwheel
cartwheel is a web site through which analyses are executed and from which analyses are loaded into familyrelationsii. it provides an easy-to-use interface through which to establish a set of analyses on a pair of sequences. cartwheel also allows the annotation of sequences with a variety of features; features can be uploaded to cartwheel in the standard gff format. a tutorial for setting up pairwise comparisons is available online  <cit> .

familyrelationsii
familyrelationsii, or frii, displays comparisons of bac-sized genomic sequences of lengths ~ <dig> kb. it is a graphical program that runs directly from a desktop and loads data from the cartwheel server. from within frii, users can zoom in to look more closely at features, alter scoring thresholds for comparisons, change the color of features, and turn on or off the display of specific analyses. frii can also display closeup views of comparisons and alignments against dna and protein sequence.

the comparison shown is a paircomp comparison performed with a  <dig> bp window at 90% and then displayed at a 95% threshold. the general colinearity of the matches suggests that the majority of the similar regions are conserved with respect to size, orientation, and relative distance from the exons. this colinearity is typical of conserved features in our comparisons. the diagonal lines crossing the comparison often identify low complexity regions such as simple sequence repeats present throughout both genomic regions. this pairwise mapping view is one of the two large-scale views in frii; the other large-scale view is a dot-plot view, shown in figure  <dig> 

in both the dot-plot and pairwise mapping view, multiple comparisons done with different parameters can be displayed in different colors. the threshold for the matches shown can be adjusted until the desired view is obtained, and sequence can be exported from any of the views via a pop-up menu.

once a threshold is chosen, the user can expand the view of a particular region. figure  <dig> shows a closeup view of the region outlined in blue in figure  <dig>  the sequence shown in figure  <dig> is a small patch of conservation upstream of the first exon, displayed at a 19/ <dig> threshold. here the user scans along the sequence and visually compares both the boundaries of the matches and the complexity of the sequence. sequences are directly exported to other applications via the "paste" buffer.

frii also performs searches for motifs using the iupac notation in which e.g. w represents a or t. this feature allows users to search for matches to known "consensus" binding sites for transcription factors. searches are either stored on the cartwheel server and displayed as individual features on frii views, or executed directly in frii. one particularly convenient feature is the ability to ask for motifs that have mismatches in up to  <dig> positions; this lets users search for weaker matches to known consensi.

other analyses
frii displays a variety of analyses. in addition to paircomp windowed comparisons, frii displays and manipulates vista-style comparisons, blast and blastz comparisons, blast database searches, cdna and protein comparisons, and the results of several different gene finders . all of these analyses may be executed directly on the cartwheel server, excepting only vista comparisons using the  avid alignment program. the data for vista comparisons must be uploaded from the results returned by the vista web site; however, vista-style comparisons with the lagan global alignment tool are executed directly on cartwheel.

discovering and analyzing regulatory regions
we and others have successfully used paircomp, frii, and cartwheel to discover a number of regulatory regions . once we have a pair of genomic regions to compare, the steps we follow are essentially invariant from region to region:

 <dig>  we set up two to three paircomp analyses at the following windowsizes and thresholds:  <dig> bp/90%;  <dig> bp/80%;  <dig> bp/60%.

 <dig>  we match the cdna or protein of interest against both regions, to determine where the coding regions lie.

 <dig>  we also compare the refseq database from ncbi against both regions, to find other genes in the region.

 <dig>  we load these analyses into frii and zoom in to a view that includes as much intergenic sequence around the gene as is possible without also including other genes. we then adjust the thresholds on the  <dig> bp and  <dig> bp analyses until we obtain a roughly collinear pattern of conserved blocks. typical values for these thresholds are 80–100% for a  <dig> bp windowed comparison, and 60–80% for a  <dig> bp windowed comparison.

 <dig>  we use the closeup view to extract the conserved blocks, and design pcr primers to isolate all of the contiguous blocks of conserved sequence. we then individually subclone or fuse them into a gfp reporter construct together with a basal promoter. these constructs are then introduced into the sea urchin by microinjection and analyzed for appropriate spatiotemporal expression.

in our experience, we have always been able to identify the relevant enhancer elements using this procedure. a similar procedure in which putatively negative elements are fused with a ubiquitous driver of expression often identifies necessary repressive elements. also note that one caveat of these procedures is that for some genes, e.g. transcription factors, there are often many regions that appear to do nothing. these may be regulatory regions that affect expression at times or in places that are not under consideration, or could be other genomic features not relevant to gene regulation.

CONCLUSIONS
paircomp, familyrelationsii, and cartwheel are an effective, easy-to-use set of tools for analyzing conservation in bac-sized genomic regions. over  <dig> people are currently using them, and they have been effective in finding regulatory regions in a variety of organisms. in this paper we have described the tools and provided an introduction for biologists who wish to use them.

availability and requirements
see implementation, above, for information on server-side software.

project name: familyrelationsii

project home page: 

operating systems: mac os x, windows nt/xp, unix/linux 

programming language: c++

license: gpl/lgpl

no restrictions placed on use.

authors' contributions
ctb designed and implemented the majority of the functionality described. yx implemented a significant portion of the xml-rpc functionality used for client-server interaction. ehd laid out the design requirements, aided in writing the paper, and supervised the development of frii. rac is responsible for running the servers and did the majority of bug testing, and also contributed to the paper.

