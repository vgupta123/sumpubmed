BACKGROUND
in the last few years the methodology of biochemical research has undergone tremendous changes. various massively-parallel techniques have been developed, generating ever-increasing amounts of experimental data, from which a top-down view of the biochemistry of an organism is made possible. these methods include metabolite profiling  <cit> , transcript profiling  <cit> , and automatized enzyme assays  <cit> . the interpretation of the data is usually limited by analysis and visualization procedures. the central task of data visualization is to bring large amounts of data into a form that shows the data with reasonable precision, while at the same time being readable and understandable. often the data generated by the methods described above is presented in complex tables that do not include additional biological information such as the network structure of underlying biological processes.

several tools have been developed to represent, visualize, and analyze biological networks and data. initially there were databases such as kegg  <cit>  that store information about the structure of metabolic networks. secondly, tools for the visualization of biological networks were developed  <cit> . the third generation consists of tools to visualize experimental data in the network context  <cit> . most of these data visualization tools follow a similar procedure: as a source for the networks they either rely on a built-in pathway collection or they make use of publicly available pathway databases. in some of the tools it is possible to edit and layout the networks. then, imported experimental data is mapped onto the network, in most cases by applying a false color code to the nodes or edges of the network according to observed changes between two experiments. this kind of colored map is also called a heatmap. the mapping of experimental data is often restricted to expression data, the mapping of metabolite data is rarely also supported. some of the tools additionally allow statistical analysis of the data. examples of such data visualization tools are cytoscape  <cit> , mapman  <cit> , kappa-view  <cit> , pathwayexplorer  <cit> , and probably most prominently the omics viewer included in metacyc-related databases  <cit>  such as aracyc  <cit> . a detailed description of these tools is given in the discussion section. however, with the exception of pathwayexplorer  <cit> , none of these tools support the direct comparison of more than two data sets with each other, for example data from different transgenic lines or time series. furthermore, several data visualization tools rely on static maps, which means the data is mapped onto pictures which cannot be modified by the user or dynamically changed depending on database entries.

to address the restrictions in existing systems we developed vanted, a tool for the visualization and analysis of networks with related experimental data. it is the extended stand-alone successor of the prototypic data exploration module of the dbe-information system  <cit> . vanted is designed to help scientists with the interpretation of large-scale biochemical data sets. it allows the import of any type of biochemical data  from different growth conditions and time-points, network loading and editing, and the mapping of the data on the corresponding dynamic networks . the system offers a variety of new functionalities for visual exploration, statistical calculations , data clustering with self-organizing maps, and more. vanted is a java web start application and thus platform-independent. it is available free of charge. 

the remainder of the paper is structured as follows. first the vanted system is described in the implementation section. then we will discuss the main features of vanted, which was used to visualize recently published mid-scale biochemical data sets. finally new biological insights are discussed and the system is compared to existing tools.

implementation
vanted is based on the extensible graph library and editor gravisto  <cit> . gravisto is a system which follows the model-view-controller  paradigm. it is designed to be extensible via a plugin mechanism. vanted is implemented in java and is therefore platform-independent. the application uses the java web start technology for easy installation and automatic updates. as an alternative a windows setup file is provided for situations where the application needs to be used on computers with no internet connection.

the system is extensible with java scripts  and ruby scripts . this enables the user to dynamically extend vanted with new algorithms for analysis, graph layout, data exchange, and other functionalities. example scripts as well as documentation for this functionality are available from the vanted website.

in the following subsections we briefly explain the methods used in vanted. more detailed descriptions can be found in the user's guide available from the vanted website.

visualization
the basic graph visualization routines for displaying and layouting graphs in vanted are based on the underlying gravisto implementation  <cit> . with additional view plugins and by using the jfreechart library  <cit>  the display of experimental data in the graph view is made possible.

statistical tests
the student's t-test and the welch-satterthwaite t-test are implemented by using the jakarta mathematics library  <cit> . the nonparametric u -test  is implemented according to  <cit> . the david quick-test for normal distribution and the grubbs' test for outliers are performed as detailed in  <cit> .

correlation analysis
for the calculation of pearson's product-moment or spearman's rank correlation coefficient a list of value pairs needs to be extracted from the data set. a value pair between two substances to be correlated is created if three annotations correspond:  the plant/genotype name,  the time value ,  the replicate number. the result of these lookup and filter operations are two lists of values . the significance of a particular correlation factor is checked with an approximation to the student distribution  <cit> .

self-organizing maps for the clustering of time series data
for the self-organizing map  algorithm first a training phase is performed in which clusters of common input patterns in the data are identified. secondly, a lookup phase assigns each input vector to the best fitting cluster. the principle of the som-algorithm is described in  <cit> . in the following the data preparation as well as the processing of the algorithm results are outlined.

the training phase as well as the lookup-phase make use of normalized input vectors, which are created from an ordered set of average sample values. the ordering is determined by the superset of covered time points for all measured substances. during the lookup phase target clusters are determined by the minimum distance between the input vectors and the model vectors which are part of the som. further layout-, filter-, and coloring-operations on the clustered graph nodes are then possible.

RESULTS
summary of vanted's features
the work-flow of a typical session in vanted is shown in figure  <dig>  experimental data can be loaded into the system via a microsoft excel-based input form . this step can be repeated if additional data sets should be included for comparison. depending on whether the kegg database  <cit>  contains a pathway that is suitable for the data mapping,  this pathway can be imported directly,  a network given in a standard network file format such as gml  <cit>  or sbml  <cit>  can be imported, or  a network can be created via a built-in graph editor and each node can be assigned to a metabolite, transcript or enzyme. the previously imported biochemical data can then be automatically mapped onto the nodes of the generated or imported network. the mapping creates a diagram for each node of the network for which experimental data is available. see figure  <dig> for a user-created network and figure  <dig> for a network imported from kegg, both containing mapped data. if desired, the correlation between different substances can be calculated and visualized, either in the form of different node background colors if one substance should be correlated to the others, or in the form of new color-coded edges if all substances should be correlated against each other. the correlation can be either studied together with the network structure, or the original network can be removed as shown in figure  <dig>  also, the substances can be clustered according to similar behavior over time using a self-organizing map  algorithm. to determine whether an observed difference of the sample mean is significant in comparison to the control data, different t-tests can be performed. if desired, automatic graph layout algorithms can be applied for better visualization of the network topology. furthermore, changes can be made to the elements of the network with respect to diagram type, size, color, title, legend, and other characteristics. finally, the resulting image can be stored as a gml file  <cit>  if it should be edited later, or as a jpeg or png file for use in presentations or publications.

the graphical user interface of vanted can be seen in figures  <dig> and  <dig>  the main display window is surrounded at the top by the main menu and a toolbar, at the left side by the buttons for graph editing, at the right side by a side panel allowing further activities for data analysis, and at the bottom by a status bar. in the following sections, we discuss the features and typical work-flow of vanted in detail and then apply vanted to two experimental data sets.

main functions of vanted in detail
data mapping and visualization
the data input of measurement values into vanted is supported by an excel input form . in addition to information about the general setup of an experiment, the form supports data from different -omics areas for different time points and for different genotypes or environmental conditions. this way the template acts as a single source for the input of multi-dimensional measurement data, which simplifies data handling.

vanted allows the mapping of measurement data from different experiments onto arbitrary networks, which can be edited with the built-in graph editing functions. in addition to general graph editor functions such as node/edge selection, modification or deletion, an algorithm for the removal of node overlaps  <cit> , and layout algorithms such as circular, tree-shaped and force-directed are available. as alternatives to network creation, networks may be loaded with the built-in importer from the kegg pathway database  <cit> , or from the standard file formats gml  <cit> , sbml  <cit> , and pajek .net  <cit> .

the data mapping procedure will be done automatically if the substance name in the input form is equal to a target node label. the mapping procedure also considers any synonym or identifier defined in the kegg ligand database  <cit>  or in the sib  enzyme nomenclature database  <cit> . if no automatic mapping is possible a user-defined mapping may be performed, in which a data subset for a measured substance needs to be assigned manually to a node. additionally vanted allows automatic creation of new nodes for all measurement data subsets which do not map onto the given network. the mapping of data onto  kegg pathways is facilitated by a function which counts the number of possible automatic mappings of the measured substances onto the list of kegg pathways .

the visualization of experimental data within the networks is done by including line or bar charts in the network nodes. experimental data of different genotypes or plants may be shown within a single diagram inside each substance node, or shown in separate diagrams. the drawing style of the diagrams may be modified with a number of parameters such as series colors, the display of range or category labels, and line widths. as the system supports replicate measurement values in the data input form, the standard deviation  or the standard error of the mean  may be shown as an error bar in both kinds of diagrams. for the line chart a polygon around the line may also be used to illustrate the variability of the data.

computational data analysis
vanted offers a variety of statistical functionalities for data analysis. at first, outliers in the data set may be identified and removed with the help of grubb's test  <cit> . to compare experimental data from different plants or genotypes, a t-test can be used to determine whether the means of these data sets differ significantly or not. depending on the assumption of equality of variances, student's unpaired t-test or the welch-satterthwaite t-test can be carried out. both t-tests assume the data to be normally distributed, that is, to follow a gaussian distribution. this may be checked within vanted with the david quick-test  <cit> . in the case that the data is not normally distributed a nonparametric rank-sum test  should be performed instead of a t-test.

relationships or common patterns in the data can be found by plotting the measurement values for a defined set of substances inside a scatter plot matrix . this matrix displays the measurement values for all combinations of the selected substance nodes. the pearson correlation coefficient is visualized with a color-coded diagram frame . in case of a significant correlation, the border width of the diagram is increased. alternatively, spearman's rank order correlation coefficient may be used, which is more robust against outliers. for the interactive analysis a reference node is selected and the correlation with all remaining nodes is visualized by different node colors. significant correlations are again highlighted by an increased border width. a gamma correction may be used to emphasize strong correlations.

to create a correlation network from a number of selected substance nodes, the correlation between all possible pairs of nodes can be calculated, and a new edge is created between two nodes if this correlation is significant . different edge colors are used to visualize positive and negative correlations. a built-in force-directed graph layout algorithm may now be used to visually group significantly correlated graph nodes.

in addition to the statistical functions a neuronal network algorithm  is included in the system. the som is a powerful method for visualization and classification tasks. it has been used for speech recognition, robotics, process control  <cit> , and to cluster gene expression data  <cit> . in vanted the som is used as a tool for the extraction of common measurement patterns over time. at first a training phase of the som needs to be performed. during this phase the som adapts itself to common input patterns, a process that can be influenced by various parameters. subsequently all nodes are assigned to clusters, based on the best matching som node. as a result the substances are grouped according to similar patterns. these clusters can be color-coded . similar patterns are easily discovered visually even if they are widely spread over the picture.

experimental case studies
metabolite and enzyme data from genetically modified potato tubers
the regulation of sucrose to starch conversion in the potato tuber has been extensively studied in the last few decades . in an attempt to better understand the importance of sucrose mobilization in this pathway, a yeast invertase was expressed in an inducible manner in growing potato tubers  <cit> , and the metabolite changes were monitored by a metabolite profiling approach coupling mass spectrometry to gas chromatography  <cit> . this method allows the measurement of the relative concentrations of more than  <dig> metabolites simultaneously. the resulting mid-scale data sets have to date mostly been presented in complex tables  <cit> . with vanted, the values can now be analyzed in the context of the underlying pathways, which allows a more comprehensive picture of the processes taking place in metabolism upon transgene expression.

in figure  <dig>  a metabolic network of plant central metabolism that was drawn using the graph editor function of vanted is shown. the example data set that was mapped on the nodes consists of  <dig> relative metabolite concentrations from developing tubers of eight potato genotypes , each from six replicates, giving a total number of close to  <dig> values  <cit> . the network was drawn especially for this data set, however it can be adapted to any other data set from central metabolism, depending on which substances were measured and are to be displayed. for a better understanding of the pathways, some metabolites that have not been measured were additionally included. with this visualization it becomes evident that some metabolites and even whole sections of the displayed part of plant metabolism seem to be coupled, while others show different behavior. for example, some, but not all, carbohydrates are massively increased upon expression of the constitutively expressed yeast invertase, while they do not show large changes upon an inducible expression of the same enzyme. the intermediates of the citrate cycle are only in some cases significantly increased, while it is known that invertase expression leads to a large increase in the flux through glycolysis  <cit> . finding these coherences from a large table of numbers would require comprehensive knowledge and the capability to intuitively handle the metabolic maps, which is of course desirable, but not always possible, for researchers. 

for a subset of this metabolite data set consisting of amino acids, sugars, and sugar derivatives, a correlation network has been generated with vanted . the strongest correlations were observed between glucose 6-phosphate and fructose 6-phosphate, and between leucine and isoleucine, which can also be seen from the scatter plot matrix shown on the right side of figure  <dig>  this observation is in accordance with a previous study in which these correlations were shown to be the strongest ones in a different data set  <cit> . from the network image it can be seen that the amino acids form a highly connected cluster, the sugars and sugar derivatives form a loosely connected cluster, and there are only a few links between these clusters: a negative correlation between hexose phosphates and glycine, and positive correlations between inositol 1-phosphate and the amino acids glutamate, arginine and ornithine. these findings are consistent with another study in which it has been shown that glucose and mannitol are negatively correlated to a highly connected amino acid cluster  <cit> .

in the study mentioned above, in addition to metabolite levels the activities of several glycolytic enzymes were also measured  <cit> . for the image shown in the main display window in figure  <dig>  a subset of the original data was mapped onto map  <dig>  from the kegg pathway database. one goal in the development of the kegg import was to achieve an appearance similar to the kegg pictures. now, in contrast to the static kegg pictures, the network can be further edited by the user. in the data visualization shown in figure  <dig> it is immediately visible that the constitutive expression of the yeast invertase leads to massive increases in hexoses and hexose phosphates, while the activity of the corresponding enzymes are not significantly altered. a reason for this might be that the corresponding enzyme levels are high enough to cope with temporally, but not constant, increases in hexose levels.

time series metabolite data from developing barley seeds
cereal seeds accumulate starch and proteins as storage products. despite extensive studies on the biochemistry of cereal seeds  <cit> , the regulatory mechanisms underlying their high storage capacity remain largely unknown. in an attempt to elucidate the control of the cell's energy state on starch accumulation, a large data set was created containing the dynamic changes of about  <dig> metabolite concentrations determined from barley caryopses  in the middle of every second day over a growth period of about  <dig> days post anthesis  <cit> . the network edited for figure  <dig> was modified to be appropriate for the mapping of this data set . after data mapping, a self-organizing map  <cit>  with  <dig> neurons was trained using all nodes to find similar patterns in the behavior of the metabolites over time. from the resulting  <dig> cluster prototypes,  <dig> clusters have been created that show  a decrease or  an increase over time, or  either high levels in the middle of the time frame or no significant pattern. the three different clusters were then automatically visualized by three different node colors . it can be seen that metabolites close together in a pathway tend to fall into the same group, as for example hexose phosphates and glycolytic intermediates all belong to the cluster in which the concentration increases over time, which is in accordance to the observation that glycolytic genes are also induced at the onset of storage  <cit> .

discussion
the increasing size of data sets generated in biological research creates a strong need for automatized data analysis and visualization tools. therefore we designed vanted, a platform-independent tool that allows the visual analysis of mid- and large-scale biochemical data sets in the context of relevant networks. in the following we will describe other existing tools in comparison to vanted.

there are a number of tools which facilitate the editing and visualization of biological networks, among them biominer  <cit> , pavesy  <cit> , visant  <cit> , patika  <cit> , and osprey  <cit> . in most cases standard layout methods such as force-directed  <cit>  and hierarchical layouts  <cit>  are used to visualize biological networks. patika extends the force-directed layout to deal with application specific requirements in biological research, especially for cellular compartmentation. osprey allows manipulation and visualization of interaction networks and supports search and filter operations. biominer and pavesy are both equipped with an internal pathway database. biominer facilitates finding possible paths from one metabolite to another. pavesy uses the network analysis toolkit pajek  <cit>  to visualize the pathways. the vanted system presented in this paper supports several layout algorithms and thus can be also used as a tool for the editing and visualization of biological networks.

all the general visualization tools mentioned above are usually restricted to visualization and manipulation of the biological network, and thus do not support mapping and visualization of experimental data. for this task, there are a number of tools available which display data on static or dynamic networks with the focus on gene expression data. probably the most prominent example is the omics viewer which allows large scale data from experiments such as microarray expression profiling, proteomics, and metabolic profiling to be overlaid onto a metabolic map from the metacyc databases  <cit> , e. g. aracyc  <cit> .  concentration differences are shown by color gradients . multiple experiments can be compared in that the different colored maps are displayed one after the other in an animation. however, in contrast to vanted, with this tool it is neither possible to edit the network, nor to visualize multiple data sets in a single image.

similar to the omics viewer, many other tools are linked to databases. in the case of metnet  <cit>  and topnet  <cit> , the database is included in the tool itself, but only topnet also allows editing and layout of the pathways. mapman  <cit>  and kappaview  <cit>  both rely on libraries of pathways that are stored in the tool as pictures. this strategy, however, is of limited use because the pathways can not be edited and layouted dynamically. instead the user needs to modify the picture manually and inform the tool about the new position of the nodes. it should be noted that the main intention of these two projects is the annotation of the genes present in the expression profiles to functional groups, and not the provision of a computational framework for mapping data onto general networks. in other tools such as pathwayexplorer  <cit> , pathmapa  <cit>  , and pathwayanalyser in the pathwayprocessor software package  <cit>  the pathways are loaded from the kegg pathway database  <cit> , a procedure that is also available in vanted. pathwayexplorer  <cit>  is a versatile web-based tool that also makes it possible to display time series expression data in the enzyme nodes of kegg pathway maps by applying color gradients to stripes of the node, but it is neither possible to dynamically modify the pathway maps, nor does it support the mapping of metabolite data.

nearly all of these data visualization tools allow the display of gene expression data on the network, but only the omics viewer  <cit> , cytoscape  <cit> , and mapman  <cit>  are designed to also display metabolite or other data. with the exception of metnet  <cit>  and, as mentioned before, omics viewer and pathwayexplorer, all of the tools are limited in that they only allow the display of the data from two experiments in comparison as a color code . however, metnet groups the data into pathways and is thus not able to display the data of single enzymes on the pathway structure. hence, to our knowledge, vanted is the first tool to display -omics data from multiple experiments superimposed on a network in one picture.

only a few tools for data visualization also include statistical analysis. for example, with pathmapa  <cit>  and pathwayexplorer  <cit>  it is possible to perform fisher's exact test to determine whether the expression of the genes in a given pathway is affected by a specific experiment. to our knowledge, in contrast to vanted no other data visualization tool allows direct determination of correlations within the data set, construction of correlation networks from these, and clustering of data with machine learning methods such as self-organizing maps.

in particular the creation of correlation networks from biochemical data is currently of great interest. several recent studies have shown that valuable additional information can be derived from large-scale transcript  <cit>  and metabolite  <cit>  data sets. as vanted provides researchers with the possibility to generate and visualize correlation networks in the context of theoretical pathway networks, it is a valuable tool to support these recent developments.

one limitation of vanted is that with the current version it is not practicable to visualize genome-wide data sets. typically analyzed data sets should contain up to a few hundred items  from up to a few dozen conditions  with a large number of replicates. however, it has to be noted that vanted offers great flexibility. there is no limitation on the type of networks and data: the networks for example could also consist of tree-like hierarchical structures such as the mapman bins  <cit> , and instead of enzyme activity data as shown in this study it is possible to display gene expression data.

with the experimental case studies, we have shown that with vanted it is possible in relatively short time to find previously known relationships between substances, and to observe new relationships.

future perspectives
vanted is a state-of-the-art tool for the visual analysis of biological data in the context of relevant networks. after making it publicly available for academic use, we anticipate that it will find wide acceptance in the scientific community. we are collaborating closely with researchers to improve vanted, especially to add new functionalities depending on user needs. furthermore, any comments and suggestions from the research community are greatly appreciated. in the future we are planning to offer a heatmap functionality and the possibility of hierarchical network representation to allow the visualization of genome-wide data sets.

CONCLUSIONS
we have developed vanted, a platform independent tool, available free of charge to the scientific community. it helps scientists to interpret their biochemical data sets by analyzing and visualizing them in the context of the underlying metabolic pathways or other networks. a large number of data visualization tools for various purposes have been created in the last few years, but vanted is unique in its combination of numerous features of which other data visualization tools provide only a subset: dynamic network editing and layout, mapping of medium- to large-scale experimental data sets from different time points or conditions on networks, statistical tests, generation of correlation networks, and clustering of similarly behaving substances. furthermore, it allows the display of data in a so far unequaled level of detail. these features in combination with the simple and intuitive graphical user interface should make vanted a valuable tool for a broad range of researchers.

availability and requirements
• project name: vanted

• project home page: 

• operating system: platform independent

• programming language: java

• other requirements: java version  <dig>  or higher, screen resolution of  <dig> ×  <dig> or higher, mouse,  <dig> mb ram recommended

• license: vanted is available free of charge.

• any restrictions to use by non-academics: commercial users need to adhere to the kegg license terms in case the kegg related functions are used.

authors' contributions
ck and fs designed the architecture of the system. ck implemented the system. all three authors evaluated the system and participated in its final design. bhj contributed the experimental case studies. bhj and ck drafted the manuscript. all authors read, revised and approved the manuscript and are listed in alphabetical order.

