BACKGROUND
with the assembly of the first whole genome sequences in the mid-1990s  <cit> , it became possible to identify all gene products involved in biological processes of an organism  <cit> , and soon it became obvious that a holistic approach can provide answers to relevant mechanistic questions, i.e. by simultaneously studying all processes and dynamic interactions at molecular level in order to define entire pathways and predict the behavior of the investigated systems. the molecular activity of cell components is strongly interconnected and needs to be investigated using a system-level approach to explain physiological characteristics and dynamic behavior  <cit> . over and above, recent development of next generation sequencing platforms considerably reduces analysis time and financial effort, which allows a far wider use of genome sequencing in biological and biotechnological research. the task at hand is now to integrate the large amount of data about biological systems into models in order to gain novel insights into their interconnected functionality  <cit> .

a well-established approach to analyze high-throughput results of complex cellular systems is genome-scale metabolic modeling, as it provides a new way for investigating molecular processes  <cit> . a metabolic model aims at assessing the physiological states of an organism by describing it as the sum of all chemical reactions of a particular system  <cit> . due to the growing number of sequenced organisms, genome-scale metabolic models are compiled for more and more organisms, including over  <dig> manually curated bacterial species, yeast and several fungi, as well as components of mammalian cells  <cit> . genome-scale metabolic models have already proven to be valuable for strain engineering which aims at improving production yield and stability  <cit> . their ability to predict the outcome of gene deletions and prognosticate the adaptation of an organism to new nutritional environments makes them a useful instrument to determine the characteristics of alternative flux distributions  <cit> . future applications of metabolic models will contribute to the understanding of microbial genomes and may lead to better diagnostic tests and therapies for human diseases  <cit> .

the reconstruction of a new model can be supported by protein homology comparisons with already existing networks. therefore, several repositories were created which provide access to established metabolic models . however, while these databases and web applications allow researchers to download and query metabolic models, none of them provides support for the laborious reconstruction process. assembling the final version of a model is an iterative process involving many manual steps that generate multiple intermediate versions. the possibility to review all changes, extract previous versions, and use an intuitive interface to create new entries would greatly enhance the construction of new models. hence, an application supporting the development of a model would be of great help to the community.

basic requirement for such a model development application is the support of data standards. the most prominent standard to describe biological models is the systems biology markup language   <cit> . it provides a common intermediate format that can be used to define models in regulatory networks, signaling pathways, gene regulation networks, and metabolic pathways. the work of herrg√•rd et al.  <cit>  focused on combining existing yeast models into one consensus reconstruction and published a sbml compliant model where they laid special emphasis on referencing model components to persistent databases or using database-independent annotations, such as smiles  <cit>  or inchi  <cit>  strings. these annotations allow the unambiguous identification of components and solve the problem of comparing models where an inconsistent naming schema was applied. therefore, enzymes should be assigned to distinct enzyme commission classification numbers  and may be further linked to established and manually curated databases like kegg  <cit> . moreover, metabolites should be annotated with unique identifiers as defined in the chebi database  <cit>  and the kegg compound database  <cit>  to enable unambiguous component identification.

the existence of a unified bioinformatics platform which supports researchers in the construction of new genome-scale metabolic models and offers sophisticated query mechanisms accessing the complete developmental history would be of great interest to the metabolic research community. therefore, we have developed a new application combining all above mentioned functionalities to support research and development of genome-scale metabolic models. the platform provides customizable data exchange mechanisms using the sbml format, an integrated version control system, and it currently holds six microbial genome-scale metabolic models.

implementation
the memosys system was implemented in java, a platform independent and object-oriented programming language  <cit> . the application is based on java enterprise edition  <dig>  and uses the jboss seam framework  <cit> . it features a three-tier architecture consisting of a presentation-, logic-, and database- layer. a relational database  is used as the persistence backend which is accessed by the hibernate  <cit>  persistence framework. the logic layer consists of ordinary java objects  and enterprise java beans  deployed on a jboss  <cit>  application server. the presentation layer is based on java server faces   <cit>  and the jboss richfaces  <cit>  component library.

the schema of the memosys application has been designed using the unified modeling language   <cit>  . the use of a uml representation improves maintainability as the application architecture is outright visible and provides an important part of the system documentation. after finishing the definition of a database layout the reverse engineering mechanism of the seam framework has been used to create a first scaffold of memosys. the resulting application components were used as a starting point to implement the required functionality.

envers  <cit>  has been used to provide basic functionality for the version control mechanism. the framework allows easy versioning of persistent classes and is well integrated into hibernate. for each annotated entity, envers creates an additional table to store its revisions. a unique revision number is used for all entities to allow retrieving a view of the database at a certain revision. the framework provides a rich api which is used by memosys to search for archived data. in addition, hibernate native sql queries are used to fetch versioned entities where the api provided by envers could not be used.

the libsbml library  <cit>  is used to read and create sbml files. furthermore, it has been modified to include attributes which were not present in exported files under certain conditions . the modifications included customizing the libsbml source code files and adapting several libsbml wrapper classes.

the application uses the resource description framework  and the "minimum information requested in the annotation of biochemical models"   <cit>  notation to annotate components with external references. each miriam identifier is a single unique string, which unambiguously references an object in an external resource .

stored data is secured by a user management system which allows the definition of different user access levels and offers concurrent access in a multi-centric environment  <cit> . permission checks are performed at all layers of the application guaranteeing a fine grained and secure authorization mechanism.

RESULTS
memosys is an application for managing, developing, and storing genome-scale metabolic models of microbial organisms. it is a database-centric java ee application including a web front-end, a version control system, comparison functionality, and data exchange mechanisms. in the following, the major features of the application are described.

data model
memosys has been designed to map and store all properties of a metabolic model in a database. reactions are the essential part of a model and their main attributes are name, reactants, and their reversibility. each reactant is made up of a metabolite, the stoichiometric coefficient for that metabolite, and is assigned to a compartment. compartments are arranged in a hierarchy which is mapped to the database using references to their parent compartment. reactions can be assigned to a subsystem which is a representation of a certain metabolic pathway. to support users in the creation or adaptation of reactions, memosys provides a balance check mechanism that validates the elemental composition of consuming and producing reactants .

in addition to general properties like name and ec number, reactions are linked to citations in order to provide primary literature evidence. genes and their relationship to other genes and reactions can be described using boolean operators and hierarchical structures . for genes having a reference to the uniprot database  <cit> , the system provides a mechanism to download the amino acid sequence of the transcribed protein and display additional information.

the model is represented in the database by a name, its unique model id, and containing reactions. it specifies an organism and may contain references to an image that graphically represents the metabolic map. compartments, metabolites, genes, and reactions may include several references to external databases using the miriam notation. memosys automatically transforms miriam annotations to web addresses and displays links to the external references. moreover, the application includes a mechanism to easily define additional external databases which can be referenced by components. the reference itself can be provided either as a miriam annotation or as plain hyperlink.

version control
the development of a metabolic model is an iterative task producing several intermediate versions until the final model is established. therefore, the application includes an automatic version control system that stores each modification as a new revision. except for static information like file uploads, all entities and their references are included in the version control system. this allows researchers to retrieve the complete model at any revision and query, compare, and export previous versions of a model. memosys provides a function to display the history of all version controlled entities including a list of modifications between each version, which allows researchers to track development changes . the home screen  of the application lists the latest modifications for metabolites and reactions which gives users a first overview about recent updates.

model selection
the home screen of the application displays a list of all available models and allows the selection of specific versions. since each reaction belongs to a model, the system allows users to restrict reaction queries to currently selected models and examine reactions of only one model or several models at once. the model selection is taken into account by all reaction queries and the quick search functionality.

quick search
the quick search field, located beneath the navigation menu on the start page, queries for several entities at once:

‚Ä¢ reactions are searched for abbreviation, name, ec number, enzyme, orf, and kegg id.

‚Ä¢ metabolites are searched for abbreviation, name, formula, chebi id, and kegg id.

‚Ä¢ genes are searched for abbreviation, name, ec number, kegg id, and uniprot id

‚Ä¢ organisms are searched for name.

for each entity type the result page displays lists of found items and provides links to referenced objects.

data exchange
memosys features import and export of metabolic models that are stored in the sbml format.

memosys allows export of all available versions of a model and supports restricting the exported reactions by either including only reactions that are in certain subsystems, or using the result of a reaction query as input for the export mechanism. furthermore, the export functionality defines three different ways to assign reactions and metabolites to compartments :

‚Ä¢ completely compartmentalized - reactions and metabolites are assigned to compartments as they are stored in the database.

‚Ä¢ partially decompartmentalized - reactions and metabolites assigned to compartments which are within the cytoplasm  are reassigned to the cytoplasm. all other compartments are still present in the exported model.

‚Ä¢ fully decompartmentalized - the exported model contains no compartments resulting in an unsegregated system.

currently, memosys supports export of models into valid sbml files that contain either all stored information about a model or are optimized for usage in the cobra toolbox  <cit> . in addition to the sbml export functionality, metabolite and reaction lists can be exported into excel or pdf files for further use.

model comparison
great attention has been paid to the implementation of a model comparison functionality. the application allows researchers to compare any version of two different models. moreover, it is possible to compare two versions of the same model to identify development changes. reactions are compared based on their kegg id if available for both reactions. otherwise the system uses the chemical equation  for comparison. metabolites are compared based on their chebi id, kegg id, and their name. genes are compared based on their uniprot id and their name.

the first section of the comparison result displays a summary of the detected differences  and shows venn diagrams for reactions, metabolites, and genes. next, restrictions on the used models can be applied to limit the results to selected compartments and subsystems. in addition to the graphical representation, the application shows detailed lists of equal and unique entities for each model and provides tabs to switch between reactions, metabolites, and genes. furthermore, reactions, metabolites, and genes are linked to the corresponding pages which display detailed information about the components.

user access
memosys is designed as a multi-user application which is capable of handling concurrent accesses due to the used enterprise application framework. it defines four different user classes to control data access . unregistered visitors are allowed to view only accepted, publicly available versions of a model. registered users are able to browse in addition to publicly available models, accepted versions of assigned models. furthermore, for registered users certain user settings are persisted in the database to increase the usability of the application. editors are able to create, update, and delete entities of assigned models in the database. moreover, they have access to their unpublished models, are allowed to upload files to the web server, and import sbml models into the database. administrators are editors, which have access to all models, are able to accept modifications of entities, and change the public availability of models.

supervision
each modification of an object is at first marked as pending and needs to be confirmed by an administrator. the system provides a clean user interface to accept pending changes. every time an administrator approves modifications, a new version number is assigned to the model. in addition to the internal revision number provided by the auditing system, models contain a user defined version number which can be set by administrators. memosys differentiates between two access types for models:  public available models are visible to all visitors and contain only accepted modifications;  assigned models are only visible to registered users and editors of the particular models.

web board
the integrated web board allows researchers to create general threads and attach discussions to stored entities. on every entity page a list of currently attached threads is shown, and new discussions can be added to the object. the latest comments of all discussions are displayed on the home screen to quickly update users about new topics. administrators are able to mark threads as sticky to permanently display them on top of the thread list.

model integration
the developed application has been filled with several well-annotated reconstructions of metabolic models. each reconstruction was manually reviewed in accordance with the model developers and has been improved to be stored as a valid sbml file.

the following models are currently stored in the system:

‚Ä¢ iwv1314- aspergillus oryzae  <cit> 

‚Ä¢ ima <dig> - aspergillus niger  <cit> 

‚Ä¢ ihd <dig> - aspergillus nidulans  <cit> 

‚Ä¢ iff <dig> - saccharomyces cerevisiae  <cit> 

‚Ä¢ iin <dig> - saccharomyces cerevisiae  <cit> 

‚Ä¢ ymn2_ <dig> - saccharomyces cerevisiae  <cit> 

additional models will be included in the future. moreover, authors are encouraged to provide their models in order to enlarge the repository.

discussion
we have developed a bioinformatics platform for the management, development, and storage of metabolic models. memosys is aimed at the metabolic research community to facilitate the study of existing metabolic models and ease the collaborative development of new ones.

blazeck and alper  <cit>  and risso et al.  <cit>  state that the development of new metabolic networks is an iterative process where the possibility to reproduce each development step is an important prerequisite. therefore, memosys features a built-in version control mechanism that automatically stores the complete history of a model. the system allows querying and displaying previous versions of a model and provides the possibility to display the complete history of each component. since certain use cases demand access to specific versions of a model, the memosys export mechanism is fully integrated into the version control system and provides researchers access to the complete history of a model.

as more and more metabolic models are being generated, the future development of genome-scale models will strongly rely on already existing reconstructions of related organisms. hence, a flexible and intuitive mechanism to assess the similarity between models is of great importance. for this reason, memosys offers a comparison tool to get an overview of the differences between two models featuring venn diagrams and allowing restricting the comparison to a selection of subsystems or compartments. as the unique identification of components in metabolic models is a prerequisite for model comparability and scientific collaborations  <cit> , special emphasis has been laid on annotating components with external references using the miriam notation.

over the past years, numerous methods and toolboxes have been developed to analyze large-scale metabolic networks  <cit> . in order to make use of these tools, the application provides sophisticated data exchange mechanisms that allow the export of models into valid sbml files, which can be, for instance, directly imported into the widely-used cobra toolbox. furthermore, the application is easily extensible to include file formats of new analysis tools. memosys supports several different ways of compartmentalization which allows researchers to directly use exported models in analysis tools that do not support a fine-grained assignment of reactions to compartments.

the development of new metabolic models is facilitated by using previously inserted, well annotated components that were created during prior reconstruction processes. furthermore, due to the flexible export mechanism certain parts of existing models can be used as a scaffold for new models. as the development of a new model is often a collaborative task between several different institutes, specific prerequisites are required by the used software. memosys meets these demands by providing many useful development and collaboration features. the application supports the definition of user roles to guarantee that unpublished data is only visible within a specific group. furthermore, the application offers a feature rich editing system and includes a supervision mechanism which enforces that modifications are approved by a key researcher to maintain a high model quality. the integrated web board facilitates the collaborative development as researchers can create either global threads to discuss general topics, or attach threads to individual objects to debate specific issues of a model or its components. moreover, memosys supports concurrent access by multiple users and offers an adjustable user management system for data access control.

in contrast to the pathway tools  <cit>  software system, which has also been used for the reconstruction of metabolic pathways  <cit> , memosys offers a rich web-based editing functionality for all components and covers change management for relevant model elements by a built-in version control system. moreover, its specific focus lies on supporting the research and development of metabolic models opposed to the breadth of functionality provided by pathway tools. therefore, memosys is able to offer interfaces and functionalities specifically optimized for the work with genome-scale metabolic models.

the developed bioinformatics platform for genome-scale metabolic models offers a sophisticated version control system, includes a flexible user management system, and is free of charge. currently existing systems like the bigg database or the biomodels database do not actively support researchers during the reconstruction of novel metabolic models by providing an automatic auditing system and a customizable authentication and authorization system. furthermore, the developed application features a state-of-the-art web front-end and versatile search functionalities, which allow researchers to perform complex search queries on the stored models. memosys is not restricted to a particular organism and is therefore able to manage any metabolic model. it currently contains six well annotated models which have been manually curated to be compliant with the sbml specification.

CONCLUSIONS
in conclusion, the implemented application memosys provides researchers a tool to store, manage, and develop metabolic models. the web interface and the included version control system greatly facilitate the development of new metabolic models and support the study of existing one. furthermore, the authorization system and the clear definition of user roles allow collaborations across departments and institutions. due to the flexible and modular software architecture additional tools and new methods can be easily integrated into the application.

availability and requirements
‚Ä¢ project name: memosys

‚Ä¢ project home page: http://www.icbi.at/memosys also available through http://sysbio.se/biomet

‚Ä¢ operating system: solaris, linux, windows, mac os x

‚Ä¢ programming language: java

‚Ä¢ other requirements: java jdk  <dig> .x, oracle‚Ñ¢ 9i or postgresql‚Ñ¢  <dig> .x, a server with at least  <dig> gb of main memory available to the application

‚Ä¢ license: gnu affero general public license

‚Ä¢ any restrictions to use by non-academics: none

the application can be used either by requesting for an account on the existing server or by performing a local installation.

the setup of the application should be completed within a few hours provided the necessary database access rights are granted. we recommend installing the application on a central server by a system administrator. step-by-step instructions are provided at the project's web site together with the necessary files.

authors' contributions
sp designed the application and drafted the manuscript. he was responsible for the design of the database schema, the development of the logic layer, and the implementation of data presentation. rr contributed to conception, design, and implementation of the application and helped drafting the manuscript. ra was responsible for converting models into a valid sbml format and helped designing the application. jn and zt were responsible for the overall project coordination. all authors gave final approval of the version to be published.

supplementary material
additional file 1
memosys database diagram. depicted is the uml database diagram of memosys.

click here for file

 acknowledgements
this work was supported by the austrian ministry of science and research  and the christian-doppler society. we thank wanwipa vongsangnak for valuable discussions.
