BACKGROUND
the problem of structure comparison and protein fold classification is important but also computationally challenging. the structure comparison and structure alignment is inherently more difficult than sequence alignment. in last years, significant progress has been made towards designing algorithms to carry out this task and currently a number of fold comparison methods are known  <cit>  and several reviews on these methods have appeared  <cit> . fold comparison methods can be roughly divided into two groups: slow methods that attempt to compute 3-dimensional alignment with atomic precision and fast screening methods that quickly assess fold similarity without attempting precise alignment. increasingly hybrid algorithms are applied which use a fast but not accurate method as a preprocessing step which is subsequently followed by a slower but more accurate algorithm that is applied only to the structures selected in the first step. such two-phase methods become more important as the number of protein structures deposited in pdb  <cit>  approaches  <dig> ×  <dig> and steadily increases.

there are two basic approaches that are used in the fast structure similarity scoring methods: indexing/hashing methods  <cit>  and linearization/dynamic programming methods  <cit> . these two approaches are quite different in nature. typically indexing/hashing methods are looking for spatial features of the protein structures that can be easily extracted and compared. similarity between two structures can be then measured in a number of ways, for example by counting the number of common features. in contrast, linearization methods represent 3d structure as a sequence of segments  listed in the order of their appearance in the polypeptide chain. such linear sequences can be aligned using dynamic programming. an obvious shortcoming of this approach is that there is no guarantee that such alignment is consistent with a structural alignment. however, a number of studies indicate that even secondary structure information alone provides a valuable similarity scoring function  <cit> . additional attraction of this method is that while it is likely to produce false positive  it is rather unlikely to give false negative . this makes it a good candidate for a screening method in a hybrid approach discussed above. another advantage of the linearization method is its applicability to alignment of predicted structural segments  <cit> . currently there is a number of algorithms that predict secondary structure segments and the accuracy of these algorithms is quite high  <cit> .

although these algorithms cannot predict orientations of such secondary structure segments in space, several research groups have begun addressing prediction of supersecondary structures  <cit> . of important supersecondary structures, one that has attracted most attention is a hairpin which is ubiquitous among the beta folds. it would be expected that adding information about hairpin positionwould significantly increase the power of linear methods at least for β-fold class.

with this motivation in mind we extend the linear structure similarity method based on secondary structure  <cit>  by indicating which loops form parts of hairpins .

given a protein structure we represent it as a sequence of letters from alphabet {e, h, l} denoting respectively strand, helix, and loop. each residue has assigned one letter according to the secondary structure in which it is located and thus the length of the sequence is equal to the length of the protein. additionally, we add "annotations" that indicate the length and the position of closed loops. we use the term secondary structure sequence to refer to those annotated sequences.

we developed a new algorithm for secondary structure recognition based on graph theoretical representation of protein structure.

the annotated secondary structure sequences are then compared by computing maximum score local alignments and subsequently clustered by structural similarity. however, rather than using a specificclustering method, we constructed a tree using weighted pair group method and used tree cluster evaluation method based on  <cit> . we complement the scoring method proposed in  <cit>   by providing a closed mathematical formula for statistical relevance of the scores andprovide a rigorous log-odds score.

the alignment parameters are optimized using a genetic algorithm. on average, we observe a noticeable improvement over the method that does not distinguish between loop types, but the benefits vary between fold families. this suggests that fold or family specific approaches should be more accurate than one size-fit-all alignment method.

RESULTS
our results are summarized in tables  <dig> and  <dig>  the test set consists of  <dig> non-redundant  beta proteins where each protein was identified by fold number as assigned by scop . the test protein belonged to  <dig> different folds. the pairwise similarity has been computed based on secondary structure and loop information using two scoring functions: cl and ncl. cl scores are computed taking into account loop annotation while ncl scores without them. the precise description of the scoring function designed to obtain an accurate alignment is provided in the methods section.

in table  <dig>  we compare the impact of the secondary structure definition on the results produced by cl and ncl. here we additionally use our cl and ncl alignments methods in conjunction with the dssp secondary structure annotation  <cit> . the results obtained are consistent. adding loop annotation in each case leads to the same level of improvement. in both tables we also include results from a related algorithm, ssea  <cit> . in this algorithm, dssp secondary structure definition is used and no loop topology information is included. thus it is expected to have a performance closely related ncl results. this indeed is observed, although each method fails for some folds.

the scores obtained with the information about closed loops depend on the limit on the allowed size of closed loops . as demonstrated in fig.  <dig>  while the best length threshold was  <dig>  we got a marked improvement already for the threshold as low as  <dig> 

discussion
we used a large non-redundant set of proteins to create a difficult case for the clustering of folds. while folds represented in the test data by one protein only must have the maximum clustering score, we kept them because they make it more difficult to group other folds in the separate clusters. we used the set of beta proteins because the information about loops in beta hairpins is most relevant for these proteins. the improvement in the clustering accuracy upon adding loop information is independent on the secondary structure recognition algorithm used.

it was not obvious how to score the additional loop information. incorrect scoring may actually worsen the alignment relative to what can be obtained without the loop annotation. therefore, we used a hybrid, piecewise linear formula, that that gives "full credit" to closed loop up to a certain length threshold and gradually decreases the score for longer loops. then a genetic algorithm was used to select parameters for this alignment algorithm. usually in such a case, there is a concern of overfitting. there are several reasons for which this is not a potential problem in our parameters adjustment. first, we have a very small number of parameters relatively to the number of proteins and number of folds. second, we used only about half of the proteins in the set for the training purpose. finally, for the fairness of the comparison between cl and ncl we optimized also the parameters for the ncl version of the program. this allowed us also to compare the results of so optimized ncl alignment with the alternative alignment method implemented in the program ssea  <cit> . ssea uses dssp to recognize secondary structures and has no information about loop topology. the results of ssea, our alignment program with dssp structure determination and our alignment program with our own structure determinations were almost identical – on the average. we also cross-validated the results using randomly selected protein sets.

CONCLUSIONS
we studied the question how much secondary structure based fold recognition can be improved by adding the information about the loop topology. here by the loop topology we understood simple classification of loops between closed loops  and open loops . the information about loop length was also included. we observed noticeable improvement over an algorithm that only uses secondary structure types and lengths for l as small as four. in practice, this corresponds to including hairpin information. the full improvement is obtained when we take into account only the loops of length up to  <dig>  which means that only the loops of length up to  <dig> get "full credit". it appears that the improvement was dominated by hairpins, but considering loops of larger length does not decrease the improvement.

the improvements resulting from including loop topology information did not distribute uniformly among protein folds. indeed, large improvements were experienced by ca. 20% of the folds, while ca. 3% of them got worse. furthermore, different families responded best to a different set of parameters . this suggests that fold specific approach is more accurate than one-size-fit all approach. to perform the study, we developed a number of new algorithms including a new graph theory based secondary structure recognition algorithm, genetic algorithm for parameter optimization and, most importantly, complemented existing cluster evaluation method with more rigorous scoring.

in a future work, we plan to extend this approach to add other supersecondary structure elements like beta-alpha-beta motif, greek key motif etc.

