BACKGROUND
introduction
gene expression analysis using microarrays opened new insights into the living cell, revolutionizing biological research in many fields. gene expression of a whole system can be measured at once, yielding information about the mrna level of every gene. microarrays have become a standard tool for gene expression measurement in biology and medicine. their application ranges from identification of gene expression changes in different states of the cell cycle over the classification of disease types to drug development. although microarrays are widely used, a fundamental challenge is to cope with the immense amount of data generated. therefore special software packages have been developed, capable of handling the analysis of microarray data. still, we think that many of the existing tools are not optimal in respect of usability and integration. to date, most freely-available programs split the data analysis into two parts: in the first, statistical methods are used to identify lists of 'interesting' genes, in the second these lists are searched for biological relevance. although these two steps are dependent on each other and should be highly interconnected, currently most analysis tools lack an integration of these steps. in the following, we will give an overview of selected tools.

existing tools
one of the most sophisticated software for microarray data analysis is the bioconductor toolkit  <cit> , based on the r statistical programming language  <cit> . most algorithms developed for microarray data analysis are available within this package. unfortunately, bioconductor is a text-driven command line tool and does not provide an easy-to-use graphical interface. therefore, it offers advanced analysis methods and the possibility of easy extension only for professional users, and is difficult to use for people unskilled in r. results could be misinterpreted if people are not understanding the data they are working with or the way to perform the analysis. to solve this problem, different tools were developed wrapping the bioconductor toolkit for an easier usage. amda  <cit>  is an r package, providing a graphical user interface and a workflow for the analysis of affymetrix microarray data. carmaweb  <cit>  acts as a web-based user interface, making the bioconductor modules available for data analysis over the internet.

besides bioconductor, other data analysis tools are available. expression profiler  <cit>  offers an integrated, web based approach for microarray data analysis. various normalization, filtering, between-group-testing, clustering, cluster comparison and go term enrichment analysis methods are available. expression profiler integrates analysis methods in an application-like web interface. gepas  <cit>  is also a widely used web-based approach for microarray data analysis. in addition to the functionality of expression profiler, it also offers class prediction methods, survival analysis and multiple tree viewers. gepas functionality is split up into a number of tools, connected by the same file format. the user interface is more web-styled than expression profiler, making the usage more complicated for untrained users.

other tools are not web-based, but installed on the local machine. expander  <cit>  includes biclustering methods and analysis methods regarding regulatory elements. tm <dig>  <cit>  is a collection of  <dig> programs, covering all computational steps for microarray analysis. tm <dig> includes spot detection/image analysis, data normalization and data analysis, linked together by the same file format. the data analysis part includes, beside other analysis methods, support vector machines, gene shaving and relevance networks.

all these programs share the focus on the data analysis part, but most of them lack tools for the interpretation of the results. only gepas offers with babelomics  <cit>  an approach into data interpretation. on the other hand there exist tools focusing on the interpretation of analysis results. besides many others, webgestalt  <cit>  offers biological term enrichment analysis, protein domain tables, tissue expression analysis, links to chromosome location and textmining analysis. the widely used david  <cit>  allows an enrichment analysis for go categories, pathway enzymes, protein domains and other biological terms. cytoscape  <cit>  supports the integration of network information with microarray gene expression data. other tools for acquiring gene set information are mappfinder  <cit> , gfinder  <cit>  and pathway explorer  <cit> . the ensembl  <cit>  annotation system ensmart allows the user to perform a genome information search and retrieval for sets of genes, but does not help in exploring the information associated with the gene set. all these tools provide annotation ability, the drawback of these tools is the inability of an integrated analysis. they require precalculated gene sets as input, needing other tools for normalization, clustering and subset determination.

gepat
for interpreting microarray analysis results with the tools described above, researchers need first to obtain a list of differential expressed genes from an analysis program, and use this list in an interpretation program to get biological information for the results. this might prove feasible for smaller number of experiments, but is time-consuming and complicated if used for larger numbers.

as we were unhappy with the separation of analysis and interpretation, we developed our own tool, gepat. gepat offers combined genome-, expression- and pathway analysis and interpretation methods. our idea was the integration of gene expression data evaluation with the cellular regulation and interaction network. therefore, we provide gene annotation for the probes on the microarray and allow the visualization of analysis results on metabolic pathways and gene interaction networks. gepat includes different biological databases, making them directly usable in data analysis and interpretation. as a large number of databases require lots of disk space and the analysis methods demand much computation power, we developed gepat as a web-based toolkit. gepat offers an application-like user interface with menu bar and dialog boxes for easy usage. the installation as server system allows either installation and usage on a single computer, installation on a web server for use within a workgroup, or installation on a web server connected to a computer cluster for large user groups. gepat is distributed under lgpl and can be freely downloaded  <cit> , an installation on our server can be used by academic users  <cit> . for an easy start, gepat provides a video tutorial for the basic steps, and offers online help for most functions. for a first impression of gepat, a guest login is available, preloaded with microarray data from cancer type classification  <cit>  and cancer subgroup profiling of diffuse large b-cell lymphoma  <cit> , including chromosomal alteration information  <cit> . all figures in this paper are based on the b-cell lymphoma dataset.

implementation
web server
gepat is implemented in the java programming language  <cit>  and requires a j2ee-compatible servlet container to run. our server installation uses apache tomcat  <cit>  as base. the javaserver faces technology is used for the generation of web pages. this technology offers a model-view-controller-based programming approach for internet applications, allowing application development similar to desktop applications. access control and image generation are implemented using java servlets. all databases used and algorithms implemented in gepat are wrapped in modules. the program itself provides only user management and data management capabilities, all other functionality is modularly implemented. this allows an easy extension with new databases or new analysis methods. modules are used for import of gene expression data, subset selection of probes or samples, gene information, analysis and interpretation methods. the currently implemented modules for data analysis can either run calculation on the server itself or calculation can be directed to a computer grid running a drmaa-compatible grid engine  <cit> . in our case, the computation scripts are run on our 10-node cluster system, based on the sun grid engine  <cit> . for data analysis, we used the powerful abilities of the bioconductor toolkit combined with an easy-to-use interface. for graph layout and visualization, the jung  <cit>  graph library is used.

databases
the modular approach of gepat allows the usage of any database by developing new modules. we have already integrated modules for the access of some important biological databases as ensembl  <cit> . as the format of most databases was not suitable for our purposes, we reformatted these databases for our needs. for storage a mysql  <dig>  <cit>  database server is used. gepat provides scripts for the creation of the database tables and the conversion of already existing databases into these tables.

for gene annotation, we found no available database for all clone identifier mapping purposes needed. therefore we created our own database. we used the unigene database   <cit>  to provide a mapping from cdna clone identifiers  and genbank ids to unigene clusters, and used the unigene information for ensembl gene entries to map each probe to an ensembl gene id. affymetrix probe identifiers are directly annotated with the information provided from the ensembl database . at the moment, our database is focused on human datasets, support for other organisms will follow in the future.

unluckily, ensembl-identifiers do not exist for all probes, as some probes are derived from est tags for which no gene is annotated, or some probes may bind to more than one mrna. if an ensembl identifier is available for a probe, the ensembl database entry is used to gain information about gene name, chromosomal location, proteins, go annotation and enzymatic activity. all data annotation in gepat is performed via the ensembl identifier. the identifier used for annotation is selected automatically out of the array files, or can be selected by the user for tabular file input.

linking a probe to a gene is necessary for interpretation of the results, but may lead to various problems. microarray probes may not only hybridize with one specific mrna, but crosshybridize with mrnas of different genes. it is also possible that a probe detects only one specific splice variant of a gene, while another probe detects all splice variants. different probes may hybridize more or less efficiently with the mrna they were designed for. and at last, it is not always sure if the probes contain the cdna-material they are supposed to. therefore it is necessary to compare the sequence of somehow interesting probes with a sequence database, to make sure annotation was right, and to verify the results of the microarray analysis by other experimental methods.

RESULTS
microarray experiments generate a large amount of data in a very short time. in most cases it is not desirable to work with all these data at once. only few probes may be differentially expressed, so in some cases it is useful to limit data interpretation to only these probes. the array dataset may consist of numerous subsets of somehow different samples. for the probe and sample set, subsets may be used to focus only on a specific group, or to compare two groups. defining and working with different subsets for any kind of analysis and interpretation is one of the main concepts of gepat. for visualization purposes, a working set can be defined, and all output is generated for this working set. for example, as it is not always desirable to have all data mapped to a metabolic pathway map, by limiting the working set to a subset of all probes, the amount of displayed probes shown on a pathway map can be limited.

the subsets used in gepat can be selected by different characteristics. for an easy access in analysis, a subset can be named and stored as "group". for example, in a clinical study, all samples belonging to a specific type of disease may be stored in a group with the disease name. this allows quick data analysis by just selecting the desired disease groups. as source for the selection of subsets, either the whole dataset or subsets defined as a group can be used. it is also possible to use a previous subset as source for the selection, allowing to subset subsets. an overview of possible criteria for subset selection is given in table  <dig>  as an example, it is possible to select all differentially expressed genes, to limit this set to all genes located in the nucleus, and to limit this set further to all genes that originate from a specific chromosome. any other combination of subset selection criteria is possible. the probe and sample subset selection process is handled modular, allowing an easy extension with yet unimplemented selection modules for other criteria.

gepat includes the following processing steps for microarray data:

• import and normalization of microarray gene expression data

• information for specific genes in the dataset

• various analysis methods for microarray data, including a moderate t-test and clustering

• interpretation methods for subsets of the data

the analysis and interpretation steps can be performed in any order, allowing the usage of interpretation results as a start for further analysis. the following text describes the processing steps in detail.

data import
data input
data input is an important step in data analysis. most existing programs require processed data in a specific format, frequently tab-separated tables, or support only a limited amount of formats. to allow broad usage of different input file formats, we decided to use a modular system allowing the extension for any type of file format. all input files are handled by a specific module, and following the import the data is stored in an internal, format-independent and fast-accessible format on the server.

at the moment, three different modules are available for data import. the first module enables data import for tab-separated data files, containing either already normalized data or unnormalized single- or dual-channel data. the other two modules allow the import of oligonucleotide and cdna microarray data. affymetrix oligonucleotide arrays are handled by read.affybatch, the cdna-import uses read.maimages r methods. all formats supported at the moment are listed in table  <dig> 

for saving bandwidth and mouseclicks, multiple array files are imported wrapped in a zip-file. this allows the upload of a large amount of arrays without separate uploading of each single file. upload of tab-separated microarray files provides an easy selection of identifier and data columns, shown in figure 1a. after upload, the data channels of the arrays and the data characteristics can be inspected visually to allow a quick identification of blurred or otherwise erroneous arrays. the microarray selection process is shown in figure 1b. here arrays can be skipped, removing them from further processing. after the selection of microarrays, data normalization methods can be applied to the data.

normalization
normalization of microarray data is needed to remove variations in gene expression levels caused by the measurement process, enabling the comparison of different microarrays with each other. it aims to remove the systematic effects while keeping the most of the signal, and brings the data from different microarrays onto a common scale.

before normalization, missing value imputation can be performed to fill outmasked probes with the k nearest neighbors averaging method provided by the impute package  <cit>  of bioconductor. missing value imputation offers an established method to compute values for flagged probes. this allows the usage of analysis methods not capable of handling unknown data values, but may lead to false results, as imputed values may not reflect the real gene expression levels.

after missing value imputation, a normalization method must be chosen. most normalization methods distinguish between within- and between-array normalization. within-array normalization normalizes the expression log-ratios of two-color spotted microarray experiments so that the log-ratios average to zero within each array or sub-array. between-array normalization normalizes expression intensities so that the intensities or log-ratios have similar distributions across a series of arrays. figure 1c shows the normalization configuration page of gepat.

gepat uses the package limma  <cit>  for normalization of two-color microarrays. different methods are available: one method combines loess within-array normalization  <cit>  and scale between array normalization. the loess method fits the arrays to a polynomial surface, the scale-method scales the log-ratios to have the same median-absolute-deviation across arrays. the other methods use quantile  <cit>  to ensure that the intensities have the same empirical distribution across arrays and across channels or vsn  <cit>  for a robust estimation of variance-stabilizing and calibrating transformations for microarray data. background correction can be performed via the normexp-method. this method results in a smooth monotonic transformation of the background subtracted intensities such that all the corrected intensities are positive.

for the normalization of affymetrix arrays the expresso-function of the affy-package is used. perfect match adjustment ensures that only perfect match oligonucleotides are used for further calculation. for the calculation of the expression values, medianpolish is used. no background-correction is performed. as normalization methods loess, quantile and vsn can be chosen. after normalization, annotation is performed, and data is ready for further analysis. after import, the dataset is shown in an overview table, giving annotation information for the spots and showing the gene expression values for the samples. figure 1d shows an overview table of the b-cell lymphoma test dataset.

gene information
to gain insight about the biological function of the genes on the microarry chip, different sources can be used for gene information. we include some of the most important sources in gepat. gene information is available in most analysis and interpretation views. a click on a probe or gene opens a new window, giving all available gene information. a tab-bar at the top of the page can be used for changing between the different types of information. gene information is also modularized and therefore easily expandable with additional information.

gene information
for each gene in gepat a quick overview showing gene information can be accessed. we offer a subset of the ensembl gene information, and link to the corresponding ensembl page for further information. besides gene name a short description of gene function, chromosomal location, expression values, go identifier and enzymatic activity are shown if available and link directly to the corresponding pages in gepat. an example of an ensembl information page for the myc gene is given in figure 2a. the information given on the dataset overview page is a subset of the information given on the gene information page, and is modularly expandable.

gene associations
the string database  <cit>  provides an overview of the physical and functional associations and interactions between proteins. string integrates known and predicted protein interaction data from a variety of sources. these associations can be shown in a summary network, displaying the genes as nodes, and different kinds of associations as edges. in gepat, we adopted this kind of view. a local instance of the string database can be used with gepat, and we provide a mapping from ensembl genes to string proteins.

to give an overview of genes interacting with the selected gene, a graph view displaying associated genes can be generated. similar to the string database, possible gene associations are gene neighborhood, gene fusion, co-occurrence, co-expression, experiment, databases and text mining. to keep the graph understandable, the maximal count of nodes can be limited by score and number. for an easier interpretation of the data, differential expression results can be overlaid. a mouse click on a node selects the new gene as center of the graph, allowing browsing through the gene interaction network. the gene association graph for myc is shown in figure 2b.

literature references
literature about genes can be found in various journals. to give a quick overview of scientific articles related to a gene, we implemented a literature reference view. we used the refseq  <cit>  database from ncbi and the ensembl refseq annotation for the genes to find literature references. for each reference, journal, author and title are provided, and a pubmed outlink offers quick access to abstract and full text. if available in refseq, a short summary of the gene function is given, as shown in figure 2c for the myc gene.

protein information
although microarrays designed for resolving different splice variants of genes  <cit>  are starting to get available, most actual microarray techniques provide information on gene level. nevertheless, sometimes it is necessary to gain information about the proteins derived from these genes. this information is provided in the protein information table. the protein information is drawn out of the ensembl database, a direct link to the ensembl website is provided for each protein. the protein information table shows the different possible transcripts of a gene, and provides information about the features, e.g. protein domains, of each protein build out of these transcripts. figure 2d shows the protein information page for myc.

data analysis
a wide variety of data analysis methods is available for gene expression data. we decided to implement differential expression analysis, clustering methods and an analysis of chromosomal alterations in gepat. as all analysis methods are implemented as modules, new analysis methods can be added quite easily. with our subset-selection procedure, it is possible to take any probe or sample subset as input for the data analysis methods. the results of the analysis can again be used as criteria for subset selection.

differential expression
an important analysis of microarray data is the comparison of expression profiles from different sample groups. different kinds of tests are available; one of the most advanced is the moderate t-statistics, as it provides stable results even for experiments with small numbers of arrays. we use the limma package of bioconductor for this analysis  <cit> . two sample subsets can be specified and compared. for each probe, the log <dig> fold change and p-value are calculated. benjamini-hochberg and benjamini-yekutieli multiple testing adjustment methods can be applied on raw p-values. these multiple testing correction methods control the false discovery rate, the expected proportion of false discoveries amongst the rejected hypotheses. the false discovery rate is a less stringent condition than the family wise error rate, so these methods are more powerful compared to other methods, e. g. the bonferroni correction.

the results can be visualized in an m/a-plot, allowing an overview of the data distribution. the y axis shows the m value, the log2-fold change of probe values in the different groups. the x axis shows the a value, the average expression level for the probe across all the arrays and channels. additional information is provided via mouse cursor tooltips; a click on a spot provides full information for a probe. an example of an m/a plot is given in figure 3a.

the fold change of differential expression of the compared groups can be mapped onto the visualization components on gepat. this allows a direct view of the differential expression on pathways or interaction networks. an important aspect of the t-test is its usage in testing a hypothesis, as it provides error probability values for each tested probe.

clustering
clustering means the partitioning of data into subsets , so that each element of the subset shares a common feature. clustering methods allow visual insight into the data and can be used for class discovery, e.g. for finding disease categories among experiment samples. gepat offers the widely used hierarchical clustering, principal component analysis  and k-means clustering as unsupervised clustering methods.

the hierarchical clustering method is based on the dist and hclust commands of r. clustering methods include the widely used unweighted pair-group method using arithmetic averages , single linkage, complete linkage and ward's algorithm. the single linkage method, closely related to the minimal spanning tree, adopts a 'friends of friends' clustering strategy, the complete linkage methods finds similar clusters, whereas ward's minimum variance method aims at finding compact, spherical clusters. figure 3b shows an example of hierarchical clustering results.

pca is a technique for retrieving information out of a dataset by dimensionality reduction, retaining those characteristics of the dataset that contribute most to its variance. gepat can perform pca on the sample data of the dataset. the samples are shown in a two-dimensional plot, where the principal components for each direction can be chosen freely. a lasso-like selection function provides easy subset selection based on the clustering results. the results of pca clustering are shown in figure 3c.

the k-means clustering requires a user input, the expected number k of clusters. gepat uses the kmeans command of r to perform a clustering based on the hartigan-wong algorithm. as a result, k clusters are returned, and can be used in subset selection for further analysis. these subsets can even be used as base for further clustering, allowing the analysis of complex datasets step by step.

value calculation
other characteristics of the microarray data can be calculated using the expression values. median and variance can be calculated for all probes and samples, or only for specific subsets of the data. this allows using probes with the highest variance across samples for further analysis.

cgh data analysis
gepat not only handles microarray data, but is also able to handle additional information for each sample. in cancer datasets, most samples not only differ by gene expression, but have a specific profile of genetic alterations. comparative genomic hybridization  is a well-established method that allows the detection of chromosomal imbalances in entire genomes. this technique is widely used in routine molecular diagnostics  <cit> , and many experiments combine cgh and microarray data. we developed a data analysis module capable of comparing the cgh-profile of two sample groups. an unpaired wilcoxon-rank test is performed on each chromosomal segment, for comparison of both sample groups. the resulting p-value is plotted directly on the chromosome view, along with the cgh profiles of every group, allowing a quick identification of differing parts. figure 3d shows a cgh profile comparison example for the lymphoma test dataset.

data interpretation
while performing the analysis steps on the data, sets of interesting genes will be found. methods for correlating these data with prior biological knowledge are necessary. we developed different modules to facilitate the interpretation of these genes and gene sets in a cellular context. the modules are fully integrated with the analysis steps described above and with each other. therefore, an interpretation can be performed on any subset of data. this integration is a major focus of gepat and distinguishes it from many other available tools for the analysis of gene expression data. data interpretation in gepat is modularly extensible, allowing implementation of any yet unimplemented interpretation method. out of each data interpretation view, gene information can be provided for each probe.

go term enrichment analysis
at the moment, an automatic ontological approach is one of the most popular methods to gain insights into a set of differentially expressed genes. the gene ontology project  <cit>  provides a set of structured vocabularies to describe molecular function, biological process, and cellular component in a hierarchical manner. for interpretation of the data, the go profile of a subset of genes is compared to the go profile of a reference set, in most cases all genes of the microarray. the change in the relative frequency of go terms is used to measure enrichment of go terms in the subset. a large number of tools exists for performing these analysis for a given list of genes  <cit> . out of the different statistical tests used by these tools, we chose an analysis based on a hypergeometrical distribution for gepat, as it is an appropriate model for the probability that a certain category occurs x times just by chance in the list of differentially expressed genes. because of the directed acyclic graph structure of go multiple testing correction for go term enrichment analysis is not easy to perform and is still discussed  <cit> , and therefore not provided at the moment.

the results of the go term enrichment analysis are shown in a tree, representing the direct acyclic graph organization of go. the tree view of the graph is clearer and enables an easier navigation, but leads to multiple entries of go categories in different branches of the tree. the tree can be searched for go identifiers or go category names. for each node, the number of genes belonging to the category in the subset, in the reference set, the ratio and p-value is shown. an example for the go term enrichment view is given in figure 4a. we additionally provide a results table for a quick, sortable overview over all categories.

pathway analysis
the go term enrichment analysis provides information about the biological process genes are involved in, but does not tell how genes interact. therefore, another important task in microarray analysis is the identification of regulated pathways. the kegg pathway  <cit>  database represents networks of molecular interactions and reactions in the cell in a graphical manner. the available pathways provide key information of the functional and metabolic systems within a living cell. we use this database and color differential gene expression of the current working set onto a pathway, allowing the exploration of functional relationships between genes. the enzymatic activity, described by ec numbers  <cit>  in ensembl, is used for connecting kegg maps to the probes on the chip. as an enzymatic activity can be catalyzed by more than one gene the pathway view shows different expression values for each different enzyme. if multiple probes exist for one gene, the median value is calculated and used for coloring. figure 4b shows an example of a kegg map overlaid with differential expression results. to give a fast overview on which maps are containing what amount of genes for the selected working set, a sortable overview table can be displayed.

for each probe on the microarray all kegg maps associated with this probe, if there exist some, can be listed. on the other hand, all probes given on a specific map can be used as probe subset in analysis. all enzymes and genes on a kegg map can be selected by mouse click, giving detailed information about the corresponding genes in the dataset.

graph view
kegg pathway information is not available for all genes in a gene subset, because they are not part of a specific pathway, or they are part of a pathway not included in kegg. however, information about functionally relevant protein interactions is essential for understanding cell behavior. therefore, an automated display of a string summary graph for a subset of genes is implemented in gepat. for an easier understanding the differential expression of genes can be mapped onto the graph, giving a fast overview of the expression profile of connected genes. if more than one probe exists for a given gene in the current working subset, the median value is used for visualization. the summary graph can be limited by different types of associations and by the association score provided by string.

for each node in the graph, tooltip information is available, and a mouse click on a node provides more information of the selected gene. however, because of the scale-free properties of the gene interaction graph the view is not suitable for larger subsets, as too many nodes do not allow a proper graph layout. an association graph example is shown in figure 4c.

chromosome location
to investigate the relationship between gene expression changes and physical gene location, a combined view of gene expression and chromosomal location of the probes is available. the mouse cursor can be used to zoom into a specific genomic region. inside the zoom view, tooltips are provided for each gene, allowing a quick detail investigation at interesting points of the genome, as shown in figure 4d.

CONCLUSIONS
despite the availability of many programs for microarray data analysis, most of them lack an integration of analysis and interpretation. to understand the effects of differential gene expression an isolated look at genes is not sufficient. it is rather necessary to interpret the results in the context of the cellular network. with the analysis of metabolic or signaling pathways integrating differentially expressed genes, the effects of gene expression on the conditions of cells or tissues can be understood.

gepat serves as a toolkit capable of handling the whole progress of microarray data analysis and interpretation in one program. it provides algorithms for the main steps in data analysis, as data import, clustering and differential expression analysis, and offers different methods for data interpretation and visualization, as gene set enrichment analysis or gene association overview. a modular probe and sample selection system allows the usage of analysis and interpretation results as start for new analysis or interpretation methods, facilitating an easy validation of hypotheses or the development of new ones. these integrated capabilities and the build-in annotation support for human microarrays makes gepat a powerful tool for microarray data analysis.

it is necessary to be open for new technologies, as biological research develops at fast pace. we implemented large parts of our software in a modular way. data handling functions serve as a framework that can be extended with various modules for data import, data analysis, data interpretation, subset selection and gene information. as nearly any analysis method can be implemented in this framework, we hope for a future growth of our open-source system. modules focusing on micrornas and drug development are currently worked on.

we developed an internet application, focused on easy usage, with a desktop-application like design. this allows a platform-independent remote usage with no need of installation on a local system. with the free availability of the web server, local workgroup installation is possible. to support users untrained in gepat, a video tutorial, an online help and test datasets are provided.

availability and requirements
project name: gepat

project home page: 

operating systems: platform independent, tested on windows and linux

web browser: tested with internet explorer  <dig> and mozilla firefox  <cit> 

programming language: java >  <dig> , r >  <dig> 

other requirements: mysql  <dig> , apache tomcat  <dig> , jsf  <dig> 

licence: free for academic or commercial users under the gnu lesser general public licence 

example webserver home page: 

authors' contributions
mw created the software and web interface and wrote the manuscript. je created the data analysis r scripts and gave advice in microarray analysis. js supervised the project and revised the manuscript. all authors read and approved the final version of the manuscript.

