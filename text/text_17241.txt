BACKGROUND
blast  <cit>  is a popular and effective tool for finding significant alignments between a biological query sequence and a database of subject sequences. blast has several modes of operation, one of which aligns an amino acid query sequence to a database of nucleotide sequences, where the nucleotide sequences are often either fragments of a genome or cdnas representing expressed genes. this mode of operation is known by the name tblastn. tblastn operates by translating database nucleotide sequences to hypothetical amino acid sequences in all six reading frames and then aligning the hypothetical amino acid sequences to the query.

tblastn is widely used as associating proteins with chromosomes or with mrnas is useful in many biological studies. despite this popularity, a performance evaluation of tblastn has never been published. blastx, a related variant of blast that aligns a dna sequence to a protein database, was described in gish and states <cit> . the description of blastx in <cit> , written in  <dig>  is out-of-date; the paper predates the implementation of gapped alignments in blast. we present, in this paper, the first description of the modern implementation of tblastn.

an issue of particular concern is the accuracy of the statistics reported by tblastn. blast prints statistics, most notably an expect value , to help users evaluate the significance of alignments. these statistics are often used as thresholds to distinguish alignments likely to be due to a biological relationship from alignments that occur simply by chance. it is known, however, that when unrelated amino acid sequences with unusual composition are aligned, alignments with high score occur with implausibly high frequency. in the context of blastp, a program that aligns a protein query to a protein database, schäffer et al.  <cit> , yu et al.  <cit> , and altschul et al. <cit>  describe how to generate amino acid scoring matrices based on the composition of the amino acid sequences being compared. yu et al. <cit>  show that these compositionally-adjusted matrices yield more accurate statistics for comparing the significance of protein to protein alignments than do the standard matrices.

for tblastn, the problem of sequences with biased composition is even worse than for blastp. not only can the hypothetical amino acid sequence contain translations of coding regions for biased proteins, it can also contain regions of compositional bias that are translations of noncoding regions or out-of-frame translations of coding regions. applying composition-based statistics when one of the sequences is a hypothetical amino acid sequence, however, presents a challenge not present when both sequences are proteins – it is not obvious which parts of the hypothetical sequence to use when computing the composition. for this reason, until recently composition-based statistics have been available only for blastp. in this paper, we present methods for adapting composition-based statistics to tblastn. we show that these methods improve the statistical accuracy of tblastn without unduly affecting retrieval accuracy.

RESULTS
we have developed techniques and implemented software for applying composition adjustment that takes into account the differences between performing a search against a protein database and performing a search against a translated nucleotide database. we provide a high-level overview of these techniques and their motivation here, but defer a detailed description of the algorithms to the methods section. we tested the effectiveness of our implementation of composition-based statistics for tblastn in two ways. first, we compared the statistical accuracy of several variants of tblastn, some of which adjust the scoring system to reflect the composition of the sequences, others of which do not. second, we performed a roc  analysis <cit>  of the different variants of tblastn to test the retrieval accuracy of the variants.

compositional adjustment and tblastn
there are three critical differences between using a translated nucleotide database and using a database of known proteins or protein fragments. first, each sequence stored in a nucleotide database may contain more than one coding region in the same or different translation frames. second, the majority of the hypothetical amino acid sequence data generated by translating a nucleotide sequence does not correspond to any protein at all, due to the fact that the location of open reading frames  in the nucleotide database is not provided to tblastn. one is therefore often either translating a noncoding region or translating a coding region in the wrong frame. third, the split of a genome into distinct database sequences is performed at sometimes arbitrarily chosen locations, for example when bacterial artificial chromosomes  are used to obtain the sequence data. thus, while for blastp we use each database sequence in its entirety when computing composition, it would be counterproductive to do so for tblastn.

for tblastn, we consider "windows" of hypothetical amino-acid data when applying composition based statistics. each window contains part of a hypothetical coding region for a protein, specifying a substring of nucleotide data and a translation frame. blast identifies windows that contain likely coding regions and then uses these windows to compute the composition of the hypothetical proteins. by focusing on smaller regions of the database and frames most likely to contain true amino acids, we capture enough information about the composition of the hypothetical protein to accurately assess the significance of the alignment.

variants tested
we tested the statistical and retrieval accuracy of three variants of tblastn. all three variants use exactly the same heuristics, as described in the methods section, to produce a set of windows likely to contain a significant alignment. then, within each window, the hypothetical subject amino acid sequence is filtered using the seg <cit>  algorithm, one of three forms of score adjustment is performed, and alignments are recomputed.

where the three variants differ is in what type of compositional adjustment is applied. the first version, which we denote here by b-tblastn, provides baseline behavior; it ignores the composition of the sequences and merely scales the blosum <dig> <cit>  matrix to have five more bits of accuracy before rounding. this is performed so that the scores from all three variants tested have comparable scale. the second version, which we denote s-tblastn, performs compositional scaling as described in schäffer et al. <cit> . the third version, which we denote c-tblastn, performs compositional matrix adjustment <cit>  conditionally as described in altschul et al. <cit> .

tests of statistical accuracy
to evaluate the effect of composition-based statistics on statistical accuracy, we performed a series of tests using randomly permuted sequences. one thousand protein sequences were randomly selected without replacement from the mouse  genome for use as queries. the sequences were permuted using their genbank identification number as a seed to a random number generator; the permuted sequences are provided as additional file  <dig>  a permuted sequence necessarily has the same composition as the original sequence, so the query set has the same range of compositions as a sample of true proteins.

the p-value of the highest scoring alignment between each query and the human  nuclear genome was computed. p-values are related to the e-values reported by blast, through the formula

p =  <dig> - e-e

a p-value represents the probability that an alignment of equal or greater quality will be found when the query and database sequences are unrelated. figure  <dig> is a log-log plot of the distribution of p-values for each of the three variants of tblastn. the x-axis of the figure is a p-value, and the y-axis is the number of queries whose best match had p-value less than or equal to x. for a distribution that matched theory perfectly, the plot would be the straight line that is shown on the figure. for this query set, b-tblastn finds many more alignments that have low p-value than theory would predict. for s-tblastn and c-tblastn, the situation is much better. the plots for both these variants lie mostly to the right of the ideal line, indicating that the statistics are somewhat conservative, but otherwise track the ideal line well.

roc analysis of retrieval accuracy
to compare the retrieval accuracy of the three methods, we performed a series of tests using a yeast  genome. we generated roc curves and scores by taking a test set, first developed for the study in  <cit>  and later modified and used in  <cit> , updating it to a newer version of the yeast genome, and adapting it for use in tblastn. this test set contains  <dig> protein domains to be used as queries against the yeast nuclear genome. lists of true matches for each domain against a database of yeast proteins are used to distinguish true from false positive alignments. the lists of true positive matches are human curated. because the locations of coding regions in yeast dna are well annotated, we were able to convert the list of true positive protein matches to lists of true positive locations on yeast chromosomes, as described in the methods section.

discussion
we have integrated composition-based statistics into recent versions of tblastn. another contribution of our work is the development of a test set for translated searches  <cit>  contain "single-pass" cdna sequences that frequently contain frameshift errors. each distinct alignment reported by tblastn uses only one of the possible reading frames of the dna sequence; tblastn does not explicitly consider the possibility that an alignment could be extended in another frame. the local algorithms used by blast also do not search for splice sites or explicitly try to distinguish introns from exons.

tblastn includes heuristics that indirectly address the issues of frame shifts and introns, without compromising speed. tblastn uses a greedy algorithm to link nearby distinct alignments and computes an e-value for these linked sets <cit> . alignments are eligible to be linked if they are in any of the three reading frames on the same strand of dna. therefore, some cases of frameshifts can be found. moreover, an option may be set so that the algorithm links alignments separated by relatively long stretches of unaligned dna. if this option is set, tblastn is sometimes able to link exons of a gene together. however, frameshifts and exons are not labeled as such by tblastn, and the only evidence that the sets are correctly linked is that they are in a consistent order and yield a lower e-value than each alignment would if taken on its own.

by contrast, there are other software packages that do make a special effort to handle frameshifts and possibly introns. to our knowledge, the earliest translated search algorithm is described by peltola et al. <cit> , which explicitly treats frameshifts and introns as part of a dynamic program. several other methods based on dynamic programming have been proposed  <cit> . these methods generally make frameshifts or introns, or both, part of the dynamic programming formulation.

the fasta package <cit>  has for some time implemented a version that aligns a protein to a nucleotide sequence translated in either three or six reading frames. the methods described in <cit>  and <cit> , which are able to align through frameshifts, have been incorporated into the fasta package. the relevant dynamic programs are approximately solved using the fasta heuristics.

references  <cit>  do not discuss the statistics reported by the algorithm, and we are not aware of any reference to what statistics they propose to report. none indicate that they wish to take the composition of the sequences into account when evaluating significance. the method described in <cit>  is based on bayesian probabilities, but does not take amino acid composition into account. references describing translated searches in fasta <cit>  do not describe the statistics reported, but the use of statistics in fasta is well documented <cit> . fasta does not use any notion similar to composition-based statistics, but rather uses a posteriori statistics based on the actual scores of alignments found for a particular query. therefore, the composition of the query indirectly affects the statistics reported, as it affects the observed distribution of scores. we prefer an a priori approach explicitly using the composition of the sequences being compared, particularly because this approach can take the composition of regions of the subject sequence into account.

hein <cit>  and gelfand et al. <cit>  describe algorithms that handle introns and frameshifts by linking multiple distinct alignments. tblastn is similar in that it also uses linking, though the algorithms used to perform the linking are quite different. hein describes an algorithm similar to blastx <cit>  that joins ungapped alignments. there is no explicit treatment of frameshifts. gelfand et al. use a set of heuristics, based in part on the presence of splice sites, to create a collection of ranges in the nucleotide sequence that they consider most likely to be coding exons of a gene. they translate each block in one reading frame and perform a gapped alignment to a query protein. then, they link distinct blocks together to predict a complete gene. neither <cit>  or <cit>  discusses statistics or make any mention of using composition when evaluating the significance of alignments.

another approach to aligning a protein to a nucleotide sequence is to use hidden markov models . this is the approach taken by birney et al. <cit>  in the package genewise and halperin et al. <cit>  in the package frameplus. both packages use hmms to model nucleotide sequences, and explicitly include states and transitions that model frameshifts and intron-exon structure. durbin et al. <cit>  explain how to use the transition probabilities in a profile hmm to arrive at a p-value for an alignment.

there has also been interest in aligning nucleotide sequences by translating both sequences in all six reading frames and aligning the resulting amino acid sequences. blast, blat <cit>  and mummer <cit>  all have modes of operation that align nucleotide sequences in this fashion. blat also has modes of operation that align protein sequences to translated nucleotide sequences, though these modes are not described in <cit> . blat is designed to find high percent identity matches quickly, whereas blastx and tblastn are designed to perform a thorough search for homologs. because of its different purpose, blat finds many fewer alignments than does tblastn. in default mode on the yeast test, blat finds only  <dig> true positives in total, whereas b-tblastn finds  <dig> before the first false positive. to our knowledge, neither blat nor mummer takes any special action to handle introns or frameshifts when operating in translated mode. mummer does not report p-values or e-values for alignments, nor adjusts scores to account for composition. blat does not report e-values in its default output format, but provides e-values in alternate output formats that roughly mimic output formats provided by blast.

the lack of explicit treatment of frameshifts and introns must be considered a disadvantage of tblastn. further research into how tblastn can be modified to handle these issues is indicated. we emphasize, however, that the improvement in statistical accuracy reported in this paper is a step toward that goal. accurate statistics improve reliability in any application in which an e-value cutoff is used. this reduces the number of possibilities that must be considered when evaluating intron-exon structure or testing for the presence of frameshifts.

other ways to improve the quality of tblastn results are under investigation, including the algorithm and data structure used to find the initial short matches, sometimes called "seeds". for example, brejová et al. <cit>  proposed various discontiguous seed patterns with "don't care" positions and did a large-scale test to suggest that these would improve performance of blastp .

CONCLUSIONS
we present here the modern implementation of tblastn and describe how composition-based statistics, previously available only for protein searches against a protein database, has been made available for tblastn. we show that composition-based statistics improve the statistical accuracy, and therefore the reliability, of tblastn results, with only a small loss in retrieval accuracy.

tblastn is widely used, as it is common to wish to compare proteins to chromosomes or to libraries of mrnas. the primary advantages of tblastn are that it is well-supported, widely and freely available, under active development, and integrated with other ncbi tools. tblastn may be used from ncbi's web page <cit> , where it is linked with ncbi databases and other resources. blast is supported by the ncbi help desk and a dedicated group of software engineers and information technology specialists. ncbi provides on-line tutorials and face-to-face workshops on the use of blast and other ncbi resources; see <cit> . details of the algorithms used by tblastn, however, have not previously been published and are not widely known.

the test sets and methodology discussed in this paper may be useful in other studies of translated nucleotide search algorithms. we have made the data used to perform the roc analysis of tblastn available as additional file  <dig> 

the advances described in this paper have been integrated into the ncbi c and c++ software distributions; the computational modules involved are mirrored between the two distributions. options for applying composition-based statistics with tblastn are available on ncbi's blast web page <cit> . a command-line executable, blastall, that has tblastn as one of its modes of operation, is available for download from the same url. source code and precompiled executables for some platforms are provided. we describe the options required to make blastall run tblastn with composition-based statistics in the methods section.

