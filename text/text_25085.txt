BACKGROUND
in recent years, information about protein structure and function is described in a large amount of articles by the progress of the study on the protein structure analysis. in order to use these huge amount of articles as information repository, the system in which the articles are collected and arranged suitable for retrieval is required. however, a naive full-text search by specific keywords often fails to find desired articles, because the articles involve the ambiguous and complicated concepts that cannot be described with uniform representation. for retrieving articles on protein structure and function, it is important to consider the relevance between structural and/or functional concepts. in addition, since an article can be treated from various aspects , it is also important to identify the user’s intention for the retrieval requirement in order to find out appropriate articles based on the input articles as a query.

in this paper, we propose a new method of supporting the retrieval of the related articles taking into account the user’s intention. in our method, one or more articles are treated as an input query, and the relevance between articles are evaluated from various viewpoints such as protein structure and function involved in the articles. the relevance between articles is calculated by using their concept hierarchy.

especially, in order to clarify user’s individual intentions of retrieval, the value of relevance is modified adaptively using more than one articles  as an input query. that is, the relevance between any two concepts that are linked through the path between the concepts described in the initial article and the additional articles is updated to be regarded as more similar.

in addition, we have implemented the method mentioned above to develop a system for retrieving related articles from the dynamically identified user’s intention. in this system, the user can input some articles as a query, and the related articles are retrieved and displayed on the 2d map to understand the relation between retrieved articles visually.

there are many methods for retrieving the similar articles, such as google scholar  <cit> , citeseer  <cit>  and gopubmed  <cit> , etc. google scholar is a website which can retrieve the academic articles easily, and can show the most related articles in the index. the related articles are sequentially displayed from the article that has many features shared with the key article, and the mutual relativity between the articles is also considered. citeseer is a system which retrieves the information of the reference from academic articles, and can extract the co-citation relation between the articles  <cit> . gopubmed is a retrieval method based on the relevance between the keyword and the go, and it can make the results which are easy to understand for users because of the categorizing by go  <cit> .

in such systems, although keywords are the primary input as a query, the related articles can also be retrieved based on the retrieved article. however, these systems cannot understand the user’s intention that should be considered for the effective retrieval. in our method, the relevance between articles is evaluated based on multiple aspects, and the user’s intention is dynamically specified by extracting the related features between input articles given as a query.

methods
in this paper, we deal with retrieval of the articles referred from each entry of the pdb , because we will use the structural information related to the article. if you need not attach great importance to structural aspect, this restriction is not always required. for each article, based on the corresponding pdb entry, the structural and functional information on the objects , concepts, themes, and so on described in the article is referred from various bio-databases as follows,

• a database of protein structure information 

• a database of protein structural classification information 

• a database of gene ontology 

• a database of protein sequence information 

• a database of biomedical article 

the related articles can be retrieved based on the relevance between input articles and the target articles, which is evaluated using the information and conceptual hierarchies obtained from these databases.

calculation of the relevance based on the concept hierarchy
evaluation of relevance using the concept hierarchy
before defining the relevance between articles, we define d, the relevance between two concepts t <dig> and t <dig> on a concept hierarchy h as   

where d represents the depth of the concept hierarchy and cp represents the lowest level ancestor common to t <dig> and t <dig>  p) is the path length between t ∈ t <dig>  t <dig> and cp defined as follows.

p) = min{|e| | e ∈ pmin)} 

where pmin) is the set of the shortest paths from t to cp. the length of each edge is assumed to be a fixed value, namely  <dig> , to make understanding easier, but we redefine the equation  by giving weight to each edge in order to reflect the user’s intention to the relevance evaluation process. the redefinition by giving weight to update the edge length is described later.

calculating the relevance between concepts from the functional viewpoint
the relevance between concepts in go is evaluated based on the idea that “the gene product related to the lower concept has to be related to the higher concept”. first, the functional concept included in the article is identified by finding the functional information such as keywords or protein names from the go hierarchy  <cit> .

two types of relation, namely “is_a” and “part_of” are used together in one concept hierarchy in go. because the relation “part_of” has the ambiguity, only the relation “is_a” is considered for the calculation of relevance in the concept hierarchy. figure  <dig> shows an example of hierarchy extracted by tracking back the relation “is_a” based on the concept hierarchy of go from a term corresponding to a concept in the article to the top of the hierarchy.

if more than one functional concepts  are included in one input article, the retrieval results may change depending on which concept is important for the user. therefore, we introduce the weight that should be assigned to the concept, which is given by the user. we define dgo, the relevance between articles d <dig> and d <dig> for the functional concept hierarchy in go as follows.   

where ωt <dig> is the weight that is assigned to the concept  t <dig> in the article d <dig> given by the user, and go is the set of the functional concepts  in the article d.

calculating the relevance from the viewpoint of the protein structure
the protein structures are classified at six levels  in the scop database hierarchically. dscop, the relevance between two articles d <dig>  and d <dig>  based on the protein structural concept hierarchy h is defined as   

where scop is the set of the structural concepts, namely the classification results of the protein described in the article d <dig> 

calculating the relevance from the viewpoint of the medical term
the hierarchy consisting of the medical terms can be obtained from pubmed. the mesh  terms corresponding to the article are extracted by referring pubmed. mesh is the national library of medicine’s comprehensive controlled vocabulary thesaurus, in which the descriptors are arranged in a hierarchy. because about ten mesh terms are related to each article, the same manner in case of go can be applied for calculating the relevance. in other words, the calculated path length on the hierarchy of the mesh term for each related articles is used for evaluating the relevance in the input article. and we define the relevance for the viewpoint of the medical term between the articles as the sum of the relevance calculated from each mesh term.

dmh, the relevance between two articles d <dig> and d <dig> based on the protein functional concept hierarchy h is defined as   

where ωt <dig> is the weight of the concept added if the term t <dig> is a major topic in the article d <dig> 

calculation of the relevance for the related article by the update of the edge length
outline
generally, in information retrieval system, multiple keywords  are often used to specify the user’s requirement. in the proposed method, the user’s intention for retrieval of related articles is specified using more than one articles as inputs . in other words, the length of the path between concepts, which is calculated using the initial article first, is updated based on the similarity between initial article and additional articles. note that we use the term ‘relevance’ for evaluating the relation between a concept in query articles and a concept in retrieval targets, whereas we use the term ‘similarity’ for evaluating the relation between concepts in query articles  to distinguish them.

calculating the similarity between concepts in query articles
for the concept hierarchy, the attempt to evaluate the similarity between concepts has been well studied. one of the most primary method is to evaluate the length of the path on the graph representing the concept hierarchy with nodes and edges, which is similar manner to our relevance measure mentioned above. but it is difficult to give a weight to the path systematically from only the path length between the concepts. in addition, such a method cannot consider the depth of the common ancestor of two concepts in hierarchy, that is, the similarity is evaluated independently whether the common ancestor is located near the root or remote from the root. similarly, the method in which the similarity is evaluated based on the entropy focusing on the common ancestor of the concepts has been proposed  <cit> . this method can calculate the similarity considering the location of the common ancestor, but it is not enough to give weight to the path between the concepts which is required for updating the relevance in our method. therefore, in this study, the method proposed in  <cit>  that can measure the similarity between the concepts considering both the path between the concepts and the common node is applied to weighting the path between the concepts.

giving the weight to the edge in the concept hierarchy
the user’s intention, from which the related articles are retrieved, should be specified by the initial article and the additional articles. by considering the path between the concepts described in the initial article and the additional articles, the article including a lot of concepts similar to the common concepts in them has to be more related to the input articles. therefore, the weight of the edges connecting the concepts in the initial and the additional articles is given by using the similarity measure described in  <cit> .

we define the weight ω of the edge e, called edge weight, using the concept hierarchy as   

where t <dig> is the concept in ta, the set of concepts in the initial article a and t <dig> is the concept in tl, the set of concepts in the additional article l. s is similarity between two concepts t <dig> and t <dig> calculated by using the method described in  <cit> , and e  is the set of edges connecting the concepts t <dig> and t <dig> 

updating edge weight by more than one additional articles
and-search or or-search by using more than one additional articles updates the edge weight by using the concept involved in each additional article.

let w e be a set of edges, which the edge weight should be assigned to by the input article a and the additional article l, as follows.   

if the additional articles l <dig> …,lm are given instead of one additional article l, only the common edge  is the edge which the edge weight is assigned to in case of the and-search. if the different edge weight is assigned to the same edge, the smallest one is selected.

on the other hand, the edge  is the edge which the edge weight is assigned to in case of the or-search. and in the same way as the and-search, the smallest edge weight is employed in case of adding the different edge weight to the same edge.

in figure  <dig>  the concept “i” is the concept in the initial article and the concepts “g” and “h” are the concepts in the additional articles. the edge weight is assigned to each of the common edge  in the intersection of the set of the edges connecting ‘i’ and ‘g’ and the set of the edges connecting ‘i’ and ‘h’ for the and-search.

evaluating the relevance between two concepts based on updated edge weight
we have defined the calculation of the basic relevance as the equation  introduced in the previous section. by adding the edge weight to the path between the concepts based on the additional articles, the definition of p) and p) in the equation  has to be modified. that is, the equation  is redefined as  

where ω is the edge weight from the equation  and pmin) is the set of the shortest paths connecting t and cp.

the equation  is applied to each calculation of the relevance between concepts. in other words, the relevance of the equation  is modified by the equation , consequently the edge weight reflecting the user’s intention for the equations , ,  is applied.

implementation
the input of pdb_id provides the information of the article such as the bibliographic information, the classification of the protein structure from scop, the functional information from go, and mesh term and the summary from pubmed, and shows them on the browser. each concept in the initial article can be weighted by user’s manual weight assignment to focus on his explicit interest. in addition, additionally input articles help understand the user’s implicit interest, namely the user’s intention. evaluating the relevance based on the updated edge weight quantifies the relation to other article and shows the related articles on a map.

RESULTS
for evaluation of the proposed method, we compare the retrieval results by the proposed system with the pubmed search, very popular retrieval system for biomedical articles. in this experiment, the correct article is defined as the article which is cited by one or more articles co-citing two given articles that play a role of the query. figure  <dig> illustrates the precision-recall curve  <cit>  arranged from the retrieval result for two articles “1c4z”  and “1fxt”  as one of the example of the experimental results.

this graph shows that the proposed method using the additional query article gives very good result in comparison with pubmed search. the related articles can be detected before giving the additional article, but the correct articles are not really retrieved on high ranking. adding the new article improves drastically the accuracy of the retrieval.

we evaluate the retrieval accuracy for the combination of other query articles by using average precision . table  <dig> summarize the results. the proposed method gives better results than the pubmed search for most input pairs. the map  values, which can be calculated from the ap values in table  <dig>  are  <dig>  and  <dig>  for the proposed method and the pubmed search respectively. these results show that updating the relevance by adding new articles achieves retrieval of the related articles reflecting user’s intention, which suggests the effectiveness of the proposed method.

CONCLUSIONS
in this paper, a new method for retrieving related articles from multiple query articles and the implemented retrieval system have been presented. in our system, the user can easily retrieve the articles based on the user’s individual intention. in addition, the system can display the retrieval results on the 2d map and it is easy to catch that relation from various viewpoints.

because the evaluation approach is not enough, one of our future work is making a corpus manually, and then we will evaluate the accuracy using the corpus through the comparison with other methods. another future work is to target the article which is not referred from pdb, so we will introduce the techniques to extract the sentences describing the functional information from the articles automatically  <cit> .

competing interests
the authors declare that they have no competing interests.

authors' contributions
rk carried out the arrangement of the data set and the experimental results and drafted the manuscript. rf carried out the implementation of the algorithm and performed experiment. to participated in the algorithm development and the design of the study. to conceived of the study, and participated in its design and coordination and helped to draft the manuscript. all authors read and approved the final manuscript.

