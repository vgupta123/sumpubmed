BACKGROUND
in this paper, we test the semantic integration capability of pathway data for e-science. in particular, we explore the utility of the biopax ontology for providing a common conceptualization for the semantics of pathway data and as the mechanism for querying these data. in many aspects, pathway data form the nexus of industrial scale in silico biology, and therefore are a microcosm of bioinformatics within e-science. we use the biopax initiative as an exemplar of the kind of semantic activity that enables e-science to happen and we explore biopax's ability to deliver on the requirements of e-science via use of its biopax ontology. the term e-science is used to describe both the pursuit of global, collaborative in silico science and the computational infra-structure to support it. there are several factors present in the development of e-science. typically, such endeavors are computationally intensive and are carried out in highly distributed network environments that tend to use large, heterogeneous data sets  <cit> . the infrastructure that supports such science is often referred to as the grid and promotes virtual laboratories that allow scientists to collaborate and share resources without requiring the location of the scientists or the resources to be in physical proximity. e-science is intimately linked to grid computing and bioinformatics is one example of the kind of science that e-science encompasses  <cit> .

it is easy to see how bioinformatics fits into this paradigm; it has highly distributed and heterogeneous data, along with communities of people working together on biological problems  <cit> . indeed, bioinformatics is moving into a more computationally intensive era, with high-throughput experiments being coupled with large-scale systems biology simulations. the scale, in size and complexity, of bioinformatics in silico experiments necessitates a transition from hand-crafted single sequence analyses towards systems level approaches. e-science is bringing about the industrialization of bioinformatics by providing the infrastructure to support these kinds of in silico experiments. 

in  <dig>  stein  <cit>  called for the formation of a "bioinformatics nation" through the adoption of technology such as web services. e-science exploits these programmatic interfaces to data and uses access to distributed computational resources, often using workflow technology  <cit>  to automate the systematic operation of large scale analytical processes.

this kind of industrialization, a result of the high-throughput processing of data and the supporting infrastructure, has already been seen, in particular in the 'omics. the catalogues of the genes present in an organism that are now available for many species in this post genomic era has provided the foundation for modeling the interactions of genes and their products in the whole cell. in addition, transcriptome analysis through microarray experiments has produced large volumes of data which have been used effectively and have transformed the field of experimental biology. coupled with the catalogues of genes, the further layers of 'omic data has begun to provide enough information for the systems approach to molecular biology.

pathways and systems biology
the factors described above, computationally intensive research, highly distributed network environments, catalogues of organisms' genes, heterogeneous data sets, etc., have come together to create a situation where information about biological networks, of which pathways are fragmentary views, is both the goal of biology and the means through which biologists ask questions.

for most biologists, these networks are conceptualized as fragments or views of parts of the in vivo cellular network. these fragments are the commonplace pathways seen in numerous papers, presentations and text-books. it is important to remember, however, that they are a conceptualization; simply a way that biologists describe the cellular molecular domain. nevertheless, they form a point at which genes, gene products, small molecules, reactions, etc. all come together in a virtual organization. pathways are the fundamental form that knowledge must take for the needs of systems biology; the entities in pathways and the data, such as equilibria, rate constants, etc. are all vital for the pursuit of systems biology.

the move towards systems biology has begun to capitalize on the availability of genomic and other information to start mathematically modeling genetic, metabolic and macro-molecular  networks. data on these networks are recorded as pathways. these pathway models emphasize systems of components rather than the components themselves. it is possible only because the information that has been gathered by molecular biologists over the past twenty years is now readily available.

pathways are the nexus, the semantic communication point in this endeavor. if we are to model genetic, metabolic and macromolecular networks, then we have to assemble our knowledge from pathway data to reform these networks. e-science infra-structure is necessary for an industrial approach to systems biology, but it is not in itself sufficient. unless the data can be co-ordinated, especially at a semantic level, the wealth of biological data will not offer up its knowledge to biologists. it is vital, therefore, that we can reliably interpret the semantics of molecular biological data, particularly at the pathway level.

unfortunately, pathway information is scattered across many disparate database resources and tends to be conceptualized in different ways, each with its own semantic and syntactic representation. metabolic pathways capture the precise way in which one molecule is converted into another in a series of biochemical reactions; molecular interaction databases are typically binary relationships, such as protein-protein interactions, or protein-dna interactions; gene regulatory networks will represent the connections between transcription factors and the genes whose transcription they activate or repress. signaling pathway representations, which capture the ways in which cells respond to their environment can range from vague or general representations of the form "there's an activation chain in which a activates b activates c" to specific and detailed representations involving a series of complex binding reactions and protein post-translational modifications.

for all these pathway data to be of use to systems biology efforts and e-science, the following requirements must be met:

• common conceptual framework. a common model of the entities and their relationships is needed so that all the elements of pathways  are all interpreted in the same way.

• common instances. once a common conceptualization of the things within the domain of pathways and the relationships among these things is made, the model must be populated. each resource will have its own conceptual framework that holds data. the same data instances will appear in different resources. when united in one resource it is necessary to know that instances are not redundantly represented in any manner. in database terms this refers to referential integrity.

• common vocabulary. both the conceptual framework and the instances it holds need a common vocabulary with which to refer to 'things' in the model. this will include common terms for pathways, small and large molecules; atoms and ions; etc.

• common format. all the data must have the same format. all resources must present the data model and the values within that model in a common form with a common interpretation. xml, rdf, owl and csv are all different formats which to a greater or lesser degree can represent data. this refers to the syntax of the language.

if all pathway resources had these aspects in common, it would mean that data from any pathway resource, be it metabolic, regulatory or signaling, could be integrated and interoperated in order to pose research questions.

a large proportion of the concepts that make up the broad definition of the systems biology approach are outlined above. there is, however, no one resource for the network of macro- and small-molecules, together with genes. the numerous databases holding subsets of these data need to be integrated at each level in order to enable systems biology in an e-science context. in the next section, we describe the biopax initiative which aims to define a conceptual framework, or semantic model, that spans these conceptual domain boundaries and includes the definition of the requisite common terms and common data format. this common language would facilitate the exchange and aggregation of pathway knowledge initially, and the assembly of this knowledge in new ways in order to increase the body of scientific knowledge ultimately.

biopax
the biopax initiative was undertaken to address the issues of interoperation between pathway data resources. a biopax workgroup oversees the creation of a formal, open-source standard for the representation of biological pathways in a form that can support all pathway data; thus to provide a common conceptual framework, a set of common terms and a common format for exchange and integration. this means that access to all pathway databases in biopax format can be achieved with a single parser. alternatively parsers would be needed by each user for each pathway database. the biopax initiative also sought to provide a representation for new data providers and thereby eliminate the mapping of concepts and terms from a native database format to biopax.

in support of future uses of pathway data, the biopax workgroup included machine computability among its design principles  <cit> . this resulted in the choice of owl-dl. owl-dl enables full use of reasoners  <cit> , which are software programs that perform inferences based on description logics , a subset of first order logic  <cit> . furthermore, owl-dl enables sound and complete inferencing when used by these software reasoners  <cit> . reasoners can read an owl file and based on the logical axioms of the owl ontology, decide whether that set of axioms are logically consistent and, in addition, infer subsumption relationships that are not explicitly encoded in the ontology, for example, it can infer that a certain molecule is a protein. this is a significant advantage over the other representations in the management of knowledge  <cit> .

as owl was soon to become a w3c recommendation for the standard web ontology language  <cit> , owl satisfied another biopax design goal, namely compatibility. biopax, wherever possible, would employ existing standards. in addition, and of great concern to the biopax workgroup was the expressivity of the language. that is, its capacity to represent complex relationships such as those found in biology. for example, in xml-schema  <cit>  or rdf  <cit>  it is not possible to express that two classes are disjoint, i.e. that a molecule of dna cannot be a molecule of rna. it is not possible to express that two classes cannot contain any members in common; that instances that are of the class dna are not and cannot be of the class rna. on the contrary, owl has, for a description logic, a wide range of expressivity for describing constraints on class membership by instances  <cit> .

to understand the needs of pathway research within e-science and the issues that arise in meeting these requirements, we present an example at each level of pathway integration mentioned above: conceptual framework, instances, vocabulary, and syntax. first we show how pathway database sources differ at each level, then illustrate how biopax addresses these requirements at each level.

different pathway conceptualizations
to illustrate the semantic difference in database conceptualizations, consider the insulin signaling pathway and the glycolysis pathway shown in figures,  <dig> and  <dig>  from biocarta  <cit> . interactions in signaling pathways are described in terms of a cascade of interacting molecules  resulting in a change in some cellular process in response to some stimuli. each step in the pathway involves a different molecule or molecular complex. signaling pathways respond to environmental stimuli, either internal or external to the cell, and carry a message that causes  a change in the cell's functioning. contrast this with a metabolic pathway such as the glycolysis pathway, where one chemical, through a series of precise steps, is transformed into another chemical. in the glycolysis pathway, glucose is transformed into pyruvate. in metabolic pathways, the end product is a transformed chemical molecule, in signaling pathways it is the activation or inhibition of a process.

while the difference at a conceptual level may be expected between such different categories of pathway types, there are also differences between conceptualizations of pathways of the same type, but defined by different researchers. because biocarta does not make a machine readable format available, we will exemplify this with the glycolysis pathway in kegg  <cit>  and humancyc  <cit>  . just observing the visual representation, it is clear that the pathways start with different molecules and in fact for kegg there is no obvious starting point. this is one fundamental conceptual difference; the researchers themselves have recognized substantial conceptual differences which have resulted in extensive discussion in the literature  <cit> .

to illustrate the issues at the instance, vocabulary, and syntax levels, we focus on the representation of a single reaction, e.c. #  <dig> . <dig> , and compare its representation in these two databases. one database, humancyc, uses the vocabulary term β-d-glucose-6-phosphate while the other database, kegg, uses the vocabulary term β-d-glucose-6p. it is clear that we are referring to the same molecule, i.e. the same real world class of instances, but the vocabulary term used to name these instances differs and while this difference is insignificant for a human reader it is significant for computational processing. the syntax in kegg is xml and a biochemical reaction is defined as an xml element. in kegg reaction elements have two components, a substrate and a product. the substrate and product elements each have one required attribute, a name which is a kegg identifier. the data instances in the two resources, for example the representation of β-d-glucose-6-phosphate, obviously refer to the same thing. it is, however, hard to do this automatically at the computational level. this semantic integration of data instances  is one of the deepest problems in the industrialization of bioinformatics.

in biocyc, a collection of organism-specific pathway genome databases , including humancyc, a biochemical reaction is represented as an enzymatic-reaction in ocelot  <cit> . ocelot is a frame-based system which uses two slots, namely left and right to represent the reactions participants. the ocelot syntax is an ascii flat-file format.

although there is a clear difference in visual design between the kegg and biocyc glycolysis pathway, fundamentally, these are both representations of a biochemical reaction within a metabolic pathway, and as such, the underlying conceptualization of the pathway data they include is very similar, with largely comparable details accessible by clicking through on the interface.

in this section, we have given an example to show what we mean by biochemical reactions being represented differently by different databases at the four levels, conceptualization, instances, vocabulary and syntax. now we will describe biopax followed by an example of how to represent one of the biochemical reactions from humancyc in biopax. following this example, you should be able to do the same for a biochemical reaction from kegg or one of the other databases.

mapping a reaction from humancyc to biopax
there are two top level classes in the biopax ontology: entity and utilityclass. entities describe the biology while the utility classes are there to record knowledge about the pathway data such as cross references to other databases, evidence codes, and experimental conditions. pathways are a subclass of entity, along with two sibling classes, interaction and physicalentity. a pathway has components, pathway-components. the pathway-components will be instances of the class pathwaystep, a utility class. each pathwaystep contains a set of step-interactions that describe the physical interactions, such as catalysis, modulation, biochemical reaction, complex assembly, and transport that make up that step in the pathway, or another pathway. a pathway, such as glycolysis, mapk, or apoptosis is composed of instances of interactions. interactions can occur between entities so that interactions of interactions and interactions of pathway can be represented. a note on notation: classes in biopax use camel-back notation; properties are all upper case with a hyphen separating each word.

pathways in biopax
in the previous section we describe how a reaction within a pathway is represented in biopax. in this section we look at how pathways are represented. in biopax, pathways are defined by their components . the components of pathways are defined to be any of the classes of interaction, pathwaystep or pathway. pathway steps are defined as a subclass of utilityclass. the utilityclass is defined in the biopax documentation to be a meta-class to assist with the description of pathways, see the discussion section for more on this topic. each pathwaystep defines a property called next-step which provides the order in the pathway and a list of properties that define the set of interactions that occur at that step. this property is named step-interactions. the interactions at each step can be any subclass of the class physicalinteraction  each of these physical interactions has participants which are instances of the one of the subclasses of physicalinteraction or instances of the class physicalentityparticipant. the class physicalentityparticipant is also a utilityclass and is used to describe a physical entity in the context of an interaction. a physicalentityparticipant specifies the physicalentity in the context of an interaction by adding the properties cellular-location and stoichiometric-coefficient. figure  <dig> shows the glycolysis pathway from biocarta  <cit>  with the aforementioned isomerase reaction highlighted and separated into biopax classes  <cit> .

biopax class, instance, vocabulary and syntax
above we presented the biopax class hierarchy and pathway representation. now we will look at it from the perspective of the levels of integration required for e-science. first we want to make clear that the conceptualization as described above defines biopax as an owl ontology in terms of its conceptual framework, the instances , the vocabulary terms and the syntax. the syntax used for biopax is rdf/xml which is a serialization of owl. owl and rdf are graph representations, xml is a tree structure. rdf and owl must be serialized when written for export. it is important to note that biopax defines the classes in which to represent pathway data, the instances are provided by the databases.

the major contribution of biopax to e-science is that it provides a single conceptual framework for the various multiple conceptualizations of pathway databases, i.e. metabolic, molecular interaction, signal transduction and regulatory pathways. it also provides a common format. while the biopax ontology has a common terminology at the class level, there is no attempt to provide a common view of instances within those classes. the question then is, now that we have data from different conceptualizations of pathways into the biopax representation, can we do in silico science? can we deliver pathway information to industrial scale analyses? does biopax fulfill the requirements set forth in the introduction?

an experiment with biopax
in this section, we present some experiments using the biopax ontology; its instance data and description logic reasoning machinery in order to answer questions about pathways. we shall see if biopax can match the needs of e-science outlined in the introduction and the goals of biopax itself.

we now have the biopax ontology that acts as a common conceptualization for a large quantity of data. these data are encoded as instances of the classes in the biopax ontology. in the ontological sense, these are not really instances. for example, we have atp as an instance of the class smallmolecule. the instance in this case and all others in biopax data should be classes. we will see later that we have to perform some tricks with biopax data because classes are treated as instances.

in owl, a class represents a set of instances. classes of instances are described by placing what owl calls restrictions upon classes through combinations of properties and the instances of other classes that act as successors to those properties. restrictions are aptly named as they restrict what instances can be members of a class. these restrictions or conditions take two forms:

 <dig>  conditions can be simply necessary conditions; that is, any instance must fulfill that condition in order to be a class member. it is not true, however, that fulfilling that condition is enough to recognize an instance as a member of that class. for example, all hexokinase proteins phosphorylate glucose, but the ability to phosphorylate glucose is not enough to recognize an enzyme as a hexokinase.

 <dig>  conditions can be both necessary and sufficient conditions for class membership; that is not only must any instance of a class hold that condition, but any instance holding that condition or combination of conditions can be recognized by a software reasoner to be a member of the class. for example, the class enzyme can be defined to be any protein that catalyses a reaction.  thus, the ability to catalyze a reaction is enough to recognize a protein as an enzyme and all enzymes must catalyze reactions.

as owl classes describe sets of instances, we can use classes to ask questions of the instance data. description logic ontologies have been used in this manner before in systems such as tambis  <cit> . here, we wish to ask questions about pathways. indeed, once we have sets of pathways, we can perform further manipulations upon them to ask further questions. some example questions a biologist might wish to ask are:

 <dig>  what pathways include the vitamin d receptor? that is, what are the pathways that include a step in which the vitamin d receptor participates?

 <dig>  what pathways are implied by the gene products of a set of genes? that is, what is the set of pathways that have steps in which a gene product from a set of genes participates?

 <dig>  what pathways involve cholesterol? that is, what is the set of pathways in which there is a step that involves cholesterol?

 <dig>  what pathways would i expect to see invoked when i add 9-cis-retonic acid to a macrophage? that is, what set of pathways are used in a macrophage and are induced by addition of 9-cis-retonic acid?

 <dig>  what pathways exist in a particular cell? that is, what is the set of pathways known to exist in a particular cell type?

 <dig>  what pathways exist within particular types of tissues? that is, what is the set of pathways that is the union of all sets of pathways seen in the range of cell types in a tissue?

 <dig>  what pathways involve retinoic acid or any of its derivatives ? that is, the set of pathways in which retinoic acid or any of its derivatives is a component of a pathway step?

 <dig>  what databases do these instances come from? that is, what is the set of databases from which any of the instances in a set of pathways originate?

 <dig>  we have a phenotype, what are the pathways which involve a specified metabolite that might be linked to this effect? that is, what is the set of pathways that is known to be linked to a particular phenotype?

 <dig>  what are the metabolites that a set of pathways has in common? that is, what is the set of small molecules that participate in a step of a set of pathways?

 <dig>  what is the set of pathways that are active in the particular time interval?

this list is by no means exhaustive, but provides a sample of the kind of questions that one might ask of pathway data. other researchers who have attempted to ask such questions have used the biopax data in its rdf form and used rdf technology, such as rdf stores and rdf query languages to ask these questions  <cit> . here we wish to explore the utility of the ontology itself for not only providing some kind of common conceptualization for these data but also as the mechanism for querying these data. current use of the biopax ontology does not take advantage of what owl can do. rather than a static artifact, we can use the biopax ontology as a dynamic, flexible software component. we can use it to recover sets of pathways based on biological descriptions inherent in the biopax ontology itself.

RESULTS
for testing, we used a small subset of the biocyc biopax data, the argobacterium tumefaciens c <dig>  glycolysis pathway. we chose a subset where we could count the number of instances we expected to retrieve. the following are defined classes, we created, which function as queries over the instance data :

 <dig>  atpsmallmolecule

 <dig>  atpphysicalentityparticipant

 <dig>  atpbiochemicalreaction

 <dig>  atpcatalysis

 <dig>  atppathwaystep

 <dig>  pathwayinvolvingatpbiochemicalreaction

each of these classes is described such that instances are retrieved based on the involvement of atp. so, small molecules that are atp, reactions involving atp, pathway steps involving atp and finally pathways involving atp are all retrieved from the database. the following list shows what was returned for each of the classes defined above:

atpsmallmolecule

returns:

   smallmolecule <dig> 

atpphysicalentityparticipant

returns:

   phys-ent-participant127589

            

atppathwaystep

returns:

   pathwaystep <dig> 

   pathwaystep <dig> 

   pathwaystep <dig> 

atpcatalysis

returns:

   catalysis <dig> 

   catalysis <dig> 

atpbiochemicalreaction

returns:

   biochemicalreaction127530

            

   biochemicalreaction127468

            

   biochemicalreaction127378

            

pathwayinvolvingatpbiochemicalreaction

returns:

   pathway <dig> 

note: the string value of the biopax property name is shown in parentheses for the readers' convenience. the owl file used in this example is additional file  <dig>  all files used in this paper needed to be altered from their original version. the modified files are made available on the empwr.org website. please see the section on debugging the biopax ontology in the methods section for details about the modifications. having shown that our approach succeeded with these tests, we wished to query the humancyc biopax instance data with questions that are more biologically appealing. we developed classes that described the following instances and used data from  <dig> pathways that were extracted from humancyc, the cholesterol biosynthesis pathway and the superpathway of glycolysis, pyruvate dehydrogenase, tca, and glyoxylate bypass pathway. the files used in this example are additional file  <dig> and additional file  <dig> 

 <dig>  pathwayinvolvingatpbiochemicalreaction or pathwayinvolvingh2obiochemicalreaction or pathwayinvolvingnadplusbiochemicalreaction or pathwayinvolvingoxygen2biochemicalreaction

• pathway <dig>  pathway <dig> 

 <dig>  cholesterolsmallmolecule

• smallmolecule <dig> 

 <dig>  atpcatalysis

• catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis17353

 <dig>  h2ocatalysis

• catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis17801

 <dig>  nadpluscatalysis

• catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis17826

 <dig>  oxygen2catalysis

• catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis <dig>  catalysis80125

the following used the entire humancyc data set, which can be found at  <cit> . as we are working with various builds of protege4alpha, performance was an issue and made it impractical to use the entire data set for much of this work.

 <dig>  class: pathwayinvolvingcholesterolbiochemicalreaction

• pathway106063

 <dig>  class: noradrenalinepathwaystep

• pathwaystep <dig> pathwaystep106054

 <dig>  class: pathwayinvolvingnoradrenalinebiochemicalreaction

• pathway106051

 <dig>  class: pathwaysinvolvingh2obiochemicalreaction 

• pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway106634

 <dig>  • pathwayinvolvingnadplusbiochemicalreaction 

pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway106634

 <dig>  pathwayinvolvingh2obiochemicalreaction and pathwayinvolvingnadplusbiochemicalreaction 

• returns the  <dig> pathways that contain both h2o and nad+

pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway <dig> pathway106634

our results are correct for the data used. we retrieve all and only those described in the classes. it might seem unusual that only one human pathway involves cholesterol, but that is the only pathway in humancyc that appears to involve cholesterol. these results were checked by hand inspecting the rdf data and via the humancyc web site  <cit> . we also see that once we have sets of pathways, we can quickly derive further sets, for instance by forming the intersection of two sets. this in itself forms a sophisticated way of manipulating pathway data. ideally, we would like to have used more than one biopax compliant resource. unfortunately, the size of these data running only in memory in the protégé tool is unsustainable. to combine data from more than one source would mean more work at the start of this process. when defining physicalentityparticipant, we would have to make more sophisticated definitions of the small molecules and other physical entities that participate in biological processes. we see only one pathway, but humancyc contains a series of "reactions without pathways." these reactions map to the following pathways that do appear in kegg . were we to use both resources at once, we might well retrieve all the appropriate answers.

discussion
our experiments show that we can use the biopax ontology to describe sets of pathways. these pathway sets can be further manipulated to derive new sets of pathways. using the ontology, we can describe these sets according to biological phenomena. this means we can formulate descriptions along the lines of "the set of pathways implied by these genes"; "the set of pathways implied by these up-regulated genes"; etc. this gives a direct link back to the kind of questions described in the section 'an experiment with biopax'. we can answer the majority of the example biological questions outlined in the section 'an experiment with biopax'. the biopax ontology has no notion, as yet, of gene. this means any question with gene as the basis cannot be answered. the development of biopax level three should include the notion of gene, so it is likely that this range of question will be able to be formed. the other notable questions that cannot be asked are those involving some temporal aspect. time intervals are not part of the biopax ontology and are absent from much of the data biopax attempts to reconcile. the other of our example questions can be answered, even though somewhat clumsily. any query that is predicated upon using terms from external controlled vocabularies  are somewhat ugly . we have not, as yet, explored whether we can answer questions asking for pathways that involve a small molecule or any of its derivatives.

in these experiments we did not actually integrate any data from more than one resource. we only queried data from one resource. proper integration is our next step. we know this is possible by writing more complex definitions in the current style. this would simply use constructs such as hasname . this is performing the instance reconciliation we stated as one of the necessary steps for true integration. this approach obviously has its scalability issues. until such reconciliation is done by the bioinformatics as a whole it will remain as a significant barrier to analytical work.

the points for discussion arising from this work are not so much that it worked, but what we had to do in order for it to work. examining what we had to do in order to make our approach work, an approach that should be inherent to biopax due to its use of a description logic, is informative to the future directions of biopax.

first, however, a question that should be asked is whether this approach is at all useful or justified? scalability is an issue. we performed these experiments in memory and this limits the number of instances that can be queried. tools such as the instance store  <cit>  would limit number of individuals to disk space and be, therefore, to all intents limitless. we are aware the current released version of instance store does not support roles between individuals. prototype versions do, however, exist that support such constructs. a significant advantage of our approach is the manner of describing the class of instances to be retrieved. directly modeling the query in the ontology allows the model to be used directly to make the query  <cit> . the major barrier we encountered in achieving our goal was the ontology itself. as already pointed out  <cit> , the biopax ontology conflates descriptions of biology and descriptions of the data about biology  <cit> . it is not that modeling the data is wrong, but doing both at the same time and place in a model makes it difficult to use the description to ask questions. the real issue, however, is exemplified by pathwaystep which is a kind of utilityclass used for purposes of pathway visualization, but also as a real step in a real pathway. if a class is necessary for modeling the data then it should be a utility; if it is needed for describing biology, then it should be in the "biological" part of the ontology. as many of these classes are disjoint  then it becomes very difficult to formulate questions .

our definitions are in terms of the data about reality, not the reality itself. we have already observed that defining a class atpsmallmolecule as an instance that has the name "atp" is not elegant to say the least . atp is really defined by a certain chemical structure of atoms and covalent bonds. using the name, however, was one of only two ways we could use the biopax instance data to define atpsmallmolecule. in this experiment, we are restricted to what the biopax instance data allowed us to do.

biopax allows for use of other controlled vocabularies to label things in its instance data. for example, locations are given by an instance of controlledvocabularyterm. this sort of works, but what we are stating is that a molecule's location is a term of a controlled vocabulary, not some part of a cell. much better, in modeling terms, would be to include or refer to external ontologies and use them as ontologies. so, for physical entities, portions of the obo version of the chemicals of biological interest  dictionary  <cit>  would be introduced. proteins, rna and dna, etc. might have cellular locations provided by the go's cellular location ontology  <cit> . in such a case, the actual biopax ontology would be very small, but very large by its use of other ontologies. finally, biopax's use of external controlled vocabularies as data items means that the semantic structure of those external vocabularies cannot be exploited. when we ask for pathways involving cholesterol, we retrieve only those involving cholesterol and only cholesterol. this is, of course, fine if that's all we want. in the current situation, asking for cholesterol, kinds of cholesterol or cholesterol derivatives is nigh-on impossible.

what effect would inclusion of external ontology as ontology have? we could, for example, very easily make a class cytosolickinaseprotein by simply referring, via restrictions, to instances of kinase activity and cytosol from go's molecular function and cellular component ontology respectively. similarly, atpsmallmolecule, instead of being defined by the name of an individual, would simply be an instance of the chebi class for atp, namely chebi: <dig>  similarly, we could describe a class of pathways by describing it as performing a biological process of, for instance go's glycogen biosynthesis.

as we describe for the case of defining atp, we have used what are known as nominals  to make class definitions  <cit> . it would be better modeling practice to put the class atp as the filler of the definition. in this way we would be saying that, for example, that any instance of a small molecule that has an instance of the structure of atp is an atp small molecule. it would be even better to have an ontology of small molecules underneath the biopax ontology's smallmolecule class.

mappings to such an ontology would have to be performed as part of the conversion from client resource to the biopax ontology target. not only would this make the ontological modeling easier, but perform reconciliation at the level of values/instances at the same time.

what are described as "instances" in biopax are really classes. all the nominals we used are really classes: atp; reactions; interactions; pathway steps are really entities that describe sets of instances in the biological world. as described, working at the class level might actually make this work easier. again, biopax has taken a database view of instances. humancyc, for example, contains a data instance of atp. this view has been propagated into the biopax ontology and instance data.

we moved pathwaystep to be a kind of pathway. in these experiments this worked. there is an issue, however, of whether a pathway step is a kind of pathway or a part of a pathway. if, in our conceptualization of pathways, we can have a single step pathway, then it is legitimate that a pathwaystep is a kind of pathway. it would also be legitimate  that any one step pathway is part of a greater pathway. in the end, such a choice probably does not make any practical difference.

this brings in some upper level ontology issues. most upper level ontologies  <cit>  make the distinction between continuant and occurant . pathways are processes that have physical objects as their participants. distinctions made at the upper level can sometimes seem a little abstruse, but it helps make basic distinctions, choose one's properties appropriately. it can cause many arguments, but simply sticking to an upper level ontology can aid consistency in modeling decisions.

based on these discussions and on points raised during this paper, we would advocate the following changes be made to the biopax ontology:

 <dig>  the use of an upper level ontology to draw distinctions between classes of instances, such as continuants and occurants, independent and dependent continuants etc.

 <dig>  that the biopax ontology separates descriptions of data from descriptions of biology.

 <dig>  the explicit inclusion of other ontologies to provide classes needed to describe the data about pathways.

 <dig>  that the instances of biopax more reliably represent actual instances rather than classes .

 <dig>  that a more careful use of owl's disjoint axiom be used throughout the ontology. the biopax ontology has the basis for a well structured ontology based on trees of primitive classes  <cit> . along with the other recommendations given here, a combination of pulling apart conflated notions and systematic use of disjunction would give a solid foundation for querying biopax data.

 <dig>  careful use of owl semantics could make explicit some of the semantics held within the comments of the biopax ontology.

 <dig>  careful use of owl semantics, such that there is one biopax ontology standard, not two and possibly more with each level release.

CONCLUSIONS
in this paper we have explored the potential for the biopax initiative and its ontology to deliver the pathway data necessary for systems style bioinformatics enabled by e-science. in particular we have looked at the semantics of such integration and how owl-dl can be used to represent those semantics and be exploited to ask semantically rich questions. we have used the biopax ontology to ask questions that deliver sets of pathways. these pathways themselves can then be manipulated to deliver new sets of pathways. the ontology, using its biological aspects, allows sets of pathways or their various components to be described biologically. these sets of pathways can be used as parts of approaches to many analyses. furthermore, until the biopax ontology includes the notions of gene, sequence, chromosome and location, it will not be possible to describe pathways in some of the important ways needed for biological investigations.

the biopax initiative succeeds in its basic goal of allowing pathway interoperation. there are now multiple pathway databases, increasing in number, whose data are compliant with the biopax ontology. as we described, pathways form a data nexus for modern bioinformatics in an e-science setting, so this is a significant achievement. the biopax ontology acts as a model that allows a wide variety of pathway data to be assembled according to one common conceptualization of the domain and in one common syntax. it does, however, fail at the level of reconciling pathway instances. biopax almost provides for this by its inclusion of external controlled vocabularies, but not in the way really desired by this approach to data. of course, biopax does not even attempt to reconcile the labels used for all the entities appearing within pathway data. this is a task beyond its means. we have, however, the technical means to achieve this goal, if not the will and financial means. the current reconciliation makes it possible to query across resources, but a deeper reconciliation would make such querying across resources easier and significantly powerful. another conclusion to be drawn from this work are ontological conclusions about the biopax ontology:

 <dig>  the biopax ontology conflates modeling of data and modeling of biology.

 <dig>  by modeling each separately, a cleaner and easier formulation of queries and description of data would be possible.

 <dig>  raising most instance data to the class level would be a more true reflection of the biological world, but have no absolute effect on the queries possible. in fact, much of the technology would be more effective and modeling would be easier if class things were class things.

 <dig>  a modular approach to other ontologies would again reflect the biological world and engender easier queries. rather than modeling other ontologies as data, importing them as ontologies at the class level would enable richer descriptions to be made during queries. this would have no effect on mapping contributing resources into biopax. there are, however, issues of maintenance and synchrony of versions.

 <dig>  a closer attention to owl semantics would make possible a greater range of queries. problems were caused by the misuse or lack of use of features available in the owl semantics.

 <dig>  publish one biopax ontology; currently there are two separate biopax namespaces, one for biopax level one and another for biopax level  <dig> 

we would advocate, therefore, a re-modeling of the biopax ontology. this has to, of course, take the current data providers along. interestingly, however, much of the re-modeling can be accomplished with little disruption. many of the current classes are the ones needed. the changes made in these experiments did not necessitate any changes to the data. simple re-arrangements of the classes are simply reflected automatically in the instance data. new asserted classes would, however, mean changes in instance data encoding.

the biopax initiative is an exemplar of the needs of modern, systems level bioinformatics in an industrial, e-science form. it is typical of bioinformatics data in being highly distributed and highly heterogeneous at all levels. the biopax ontology, despite flaws, makes it possible to deliver sets of pathways, described and queried based on biology to bioinformatics analyses.

