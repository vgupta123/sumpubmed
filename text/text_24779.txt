BACKGROUND
high throughput experiments such as sequencing projects, microarrays and proteomic methods produce huge amounts of data, usually in the form of long lists of genes or proteins. proper annotation of such lists is crucial for understanding and interpretation of experimental results.

the best annotation quality is still generated by curators who manually review the existing literature. this approach for describing genes and/or their products is utilized by most large projects like flybase  <cit> , uniprot  <cit>  and others. the best known and most widely used public annotation database is gene ontology   <cit> , which maintains a controlled vocabulary  organized into three hierarchies: biological process, molecular function and cellular component. these go terms are utilized by e.g. the goa project  <cit>  that provides gene ontology annotations for the uniprot database, international protein index  and other major databases such as ensembl and ncbi. all go annotations can also be searched by gene/protein name or go term using the amigo  <cit>  official browser.

beside gene ontology annotations, manual descriptions are also generated by a number of other projects. examples include kegg  <cit>  which is focused on metabolic pathways, and uniprot which provides, in the comments section, biological knowledge usually directly linked to publications.

the existing manual annotation systems, despite their undoubted importance, are also acknowledged to have serious limitations. one of the main obstacles of using manually curated descriptions is that high coverage is available mostly in very broad categories. in the case of go, diving deeper into their dag structure shows the annotations are not of equal quality and a large proportion of them come from automatic computer predictions   <cit> . broad protein classes  are assigned and are automatically inherited if a "new" protein has a domain with a go label attached. as manually curated annotation databases are notoriously incomplete  this raises the problem of using more specific go terms for statistical analysis of gene datasets.

another hindrance is that many genomes are poorly, or not at all covered by go terms , even for such prominent species as gallus gallus or the slime mold  <cit> . computational methods have been developed to at least partially overcome the coverage problems mentioned. blast2go  <cit>  or kaas  <cit>  both based on sequence similarity, help "transfer" annotations between orthologious genes/proteins. another way to circumvent the coverage problem is to use published information about genes/proteins and automatically categorize them based on specific features . some services that analyze texts in this aspect include gocat  <cit>  which can categorize any text according to its similarity to go vocabulary, or goannotator  <cit>  which acts similarly by fetching possible text evidences for electronic go annotations.

such approaches generally give quite good results and are currently intensively being developed. better performance is reached by introducing new aspects in the scoring methods, such as proximity between words in text and weighing words according to the amount of information they carry  <cit> . it is possible to compare various computational approaches in a contest organized by the biocreative initiative  <cit> .

unfortunately using annotations based on go terms has one more serious disadvantage, which is the paucity of the language used. gene ontology categorizes language in order to decrease its complexity and to provide a unified way to describe certain biological aspects. although in some cases this controlled vocabulary brings significant advantages, it also de facto means that annotators have to discard specific information or features present in publications in order to comply with a go term  <cit> . this becomes a highly visible problem when one tries to differentiate between proteins with similar but not identical functions â€“ . also not all of the concepts are covered by the go thesaurus .

nevertheless, go terms are frequently used to analyze sets of genes to discover over-representation of particular functions or categories in the dataset. dedicated software such as genemerge  <cit>  or genetools  <cit>  is available for this type of analysis.

we still lack annotation services, which could annotate genes/proteins using sequence homology and multiple sources of information . popular services like smart  <cit> , pfam  <cit>  or prosite  <cit>  can be searched using sequence homology but they gather only manual annotations . interpro  <cit>  from ebi combines most of the different protein signature databases into one sequence analysis service. with intepro2go  <cit>  one can additionally associate go terms with different interpro entries. the main problem with this system is the contrasting specificity of intepro signatures: some of them are very frequent in nature and associated with very broad molecular functions, while others are highly specific. also all these services/databases use manually curated information more or less shared among them.

taking into account the decreasing costs of high-throughput experiments and the increasing number of organisms studied, there seems to be an expanding gap between available manual annotations and the demand to describe novel genomes, proteomes, etc. a promising way to bridge this gap is to develop and/or improve methods for automatic annotation generation. such methods should be based both on available manual curation and on automatic information extraction from other sources. also a recent publication by jaeger et. al.  <cit>  shows other types of data such as conserved networks  can be utilized to create functional annotations based on literature analysis.

taking the literature into consideration brings advantages to the annotation process: publication abstracts are currently the vastest source of biological data available, which grows almost exponentially and contains information not yet found or described by manual curators. it is also valuable that various statistical approaches can be applied to extract informative and specific textual features from a set of documents  <cit> . additionally, by processing the "raw" texts we omit the language paucity problem and enrich the retrieved knowledge with additional keywords like frequently used synonyms of gene names, chemical compounds, functionally interacting proteins, etc.

there are services implementing this idea. medblast  <cit>  is a simple web-based application which can gather medline abstracts connected with a given gene. it uses blast to find abstracts linked to homologous sequences but can also find abstracts with the gene and organism name derived from annotated protein entries. the output is a set of medline documents which should be read by the user. a more sophisticated approach was proposed by attwood and co-workers. metis  <cit>  also uses blast homology search to gather literature , but the collected text is passed into two sentence classification components . they find and categorize informative sentences, relating them to: structure, function, disease and localization categories. metis also calculates simple statistical properties, i.e. n-grams of word distribution and frequently occurring words. unfortunately metis is unable to annotate more than one protein during one run. it also displays only frequently occurring words, which often appear in the whole medline, thus are neither very informative nor specific, e.g. cell, protein, etc.

to help automate the annotation of a large set of proteins using literature derived knowledge we created ht-sas . it brings homology search and textual feature extraction from literature together and is easily operated through a user friendly web interface. the input for ht-sas are protein sequences. homology search is performed using blast algorithm  <cit>  against the uniprot database. ht-sas utilizes links between uniprot protein entries and medline to gather publication abstracts. the obtained sets of abstracts are searched for statistically important words using a modified tf-idf approach. this feature extraction approach is more informative than simple word frequency and provides specific keywords aiding the annotation task. it can often provide significant keywords even for a limited number of abstracts, which is usually the case for poorly described or unknown proteins.

the interactive web interface allows easy access to source publications, homology results, and also gene ontology and uniprot manual annotations, if available. the results page is generated in the form of sortable tables for fast result overview and comparison. the url is: 

implementation
aim of the system
the aim of the algorithm is to find biologically significant information  in freely available literature by combining a sequence similarity search with a statistical analysis of textual features. this idea is based on the assumption that words appearing frequently in abstracts linked with a set of proteins, and which rarely appear in the whole abstract database, are specific to these proteins and thus can have biological meaning. our algorithm uses a probabilistic approach to evaluate statistical significance of word appearance.

statistical approach
every protein  has its own document frequency , i.e. the number of abstracts which are linked to this protein. sequence similarity is used to define sets of proteins related to the user provided protein sequence . ht-sas identifies protein homologs using the blast algorithm. the sensitivity of the search, i.e. the cutoff of accepted homology, is defined by the user with the blast e-value parameter.

using blast we obtain a set of homologous proteins  and count the number of documents that relate to this set of proteins . next we calculate the document frequency of all documents linked to a set of proteins and containing a given word .

to properly estimate the background probability of a given word  we created a subset of medline , which stores only abstracts that are linked to uniprot proteins. this ensures that we avoid word bias by including documents not referring to proteins. in our approach the background probability  is the number of documents in mudb containing a given word , divided by the total number of documents deposited in mudb. this is in fact similar to a classical idf-like approach  <cit>  which discriminates words occurring frequently .

now we can finally calculate the probability of word occurrence  using the following formula:

   

by using such an approach we are able to extract interesting, specific textual features, but there is also a significant amount of "noise" present. by "noise" we mean very broad and not very useful words such as yeast, two-hybrid, etc. we found this effect to be caused by documents pointing to a huge number of proteins, e.g. publications describing sequencing projects or other high-throughput experiments â€“ in the majority of cases such abstracts do not contain specific information. to resolve this problem abstract weight was introduced. it is calculated by dividing one by the number of proteins an abstract points to. therefore dfsp and dfwsp become in fact the sum of document weights  and are rounded to an integer. this normalization parameter ensures that documents linked to many proteins  are discriminated and have lower impact on the calculation.

   

the last modification is based on keyword frequency distribution observed in documents deposited in mudb. the number of analyzed abstracts linked to a set of homologous proteins in the majority of cases is not greater than  <dig>  this is significantly smaller than the total number of abstracts deposited in mudb which is in the order of  <dig>  we assume that biologically significant and specific words occur in abstracts not more frequently than 10-2- 10- <dig> . this implies a small background probability which allows the following approximation shown below:

   

without the need of extensive calculations  we are able to annotate faster and provide a more pleasant user experience with a snappier interface.

database details
we created a subset of medline abstracts linked to uniprot entries  called mudb. mysql database has been used to store various information regarding this subset. the most important are the number of proteins linked with a publication, word frequency  and information derived from uniprot <protein>, <comment> and <dbreference type="go"> fields.

to keep mudb up-to-date, medline and uniprot files are updated twice a month.

obviously publications linked to uniprot protein entries are only a fraction of the full list of literature concerning a particular protein. nevertheless they are carefully chosen manually to provide comprehensive and non-redundant knowledge. it is also important that ht-sas uses all abstracts linked with the homolog list, so overall the gathered literature should cover the majority of knowledge about a protein set, and thus be sufficient to annotate a new sequence.

web interface
the service is designed for a wide range of users, including those who are not involved in protein research. the user is asked to provide protein sequence in fasta format. the system automatically checks if user data is properly formatted and if it is likely to be a protein. if errors are encountered at this stage, ht-sas allows the user to correct the data and resubmit. otherwise a temporary file is saved and the user can adjust the blast e-value parameter. the e-value parameter is essential in this literature mining approach. it defines the level at which proteins are considered similar and therefore directly influences the number of abstracts to be analyzed. theoretically if high values are chosen  then the system recognizes even very distantly related proteins as homologous, and as such, should analyze a larger set of abstracts. the downside is it will report information that might be somewhat "noisy". if smaller e-values are chosen, ht-sas will find fewer homologs, resulting in a smaller set of analyzed abstracts.

after the blast e-value is chosen the user can start the literature mining engine and monitor the annotation progress through the web interface. when all of the sequences are annotated a results page is displayed which shows separate tables for each protein sequence submitted. each table has the sequence name in its title and a list of words associated with it . each keyword is associated with its "score" which describes how specific and significant it is . through these tables the user can access more specific data such as lists of  publications where the word was present, lists of homologous proteins  with alignments, lists of uniprot words and gene ontology descriptions if present.

if the user submitted multiple sequences, ht-sas allows comparing annotations. the web interface will show which words are shared between which sequences, helping the researcher to quickly group them based on the occurring terms.

RESULTS
evaluation by precision and recall
we have conducted test experiments to assess the quality and usefulness of keywords obtained by ht-sas. in the first experiment we checked if our algorithm can sufficiently recreate knowledge available in a manually curated database. we used proteins deposited in the saccharomyces genome database  as the majority of s. cerevisiae genes are well described and could be used as reference annotations. we have randomly drawn  <dig> sequences from sgd which were next automatically annotated using ht-sas with a default "mining threshold" value  <cit> .

from this set  <dig> sequences had been annotated by ht-sas with at least  <dig> keywords which had "score" â‰¤ - <dig> . this keyword scheme was sufficient to manually recreate the original annotations , indicating a recall of 63%. we also measured the precision of obtained annotations. one of  <dig> keywords from each sequence was randomly chosen and manually evaluated. in  <dig> cases these keywords were correct and accurate, giving an overall precision of over 85% .

we also asked the question what would happen to our automatic keyword extraction if these random proteins did not have any close homologs. we conducted the same experiment, filtering out homologs with more than 50% sequence identity. in this case recall  dropped to 42% but precision stayed high  .

in case of  <dig> proteins ht-sas provided keywords suggesting interesting hypotheses that:

a) uncharacterized protein ynr065c is a hydroxysteroid dehydrogenase

b) protein of unknown function yjr134c is a myosine like protein

c) kinase ymr291w is a calmodulin dependent kinase

d) ynr065c is related to sortilin receptor like protein

these results show that ht-sas correctly selects words which are important and specific for protein description  and that the keyword extraction algorithm works properly, even if the number of homologous proteins is limited .

case study: annotation of genes expressed exclusively during blood stages of plasmodium bergei
to further assess the usefulness of ht-sas service we conducted a test analysis of a protein set from a poorly described organism. this would mimic one of the major applications of ht-sas â€“ a service designed to enhance information associated with protein sequences deposited in databases. if the user has a set of interesting proteins and some of them are poorly characterized, they can be searched with ht-sas for additional/novel keywords derived directly from literature.

in this case study we have used a set of  <dig> genes identified exclusively during blood stages of p. berghei  <cit> . plasmodium proteins are generally poorly annotated compared to other model organisms, although there is much ongoing research and published literature. manual annotations associated with these proteins were taken from two sources: plasmodb  <cit> , which is the primary source of information about p. bergei genes and uniprot.

using ht-sas we obtained annotation keywords for  <dig> genes . in this set we were able to improve the plasmodb and uniprot annotations using novel keywords provided by ht-sas for  <dig> proteins. also using literature-derived keywords we were able to build new annotations for  <dig> proteins which are termed "hypothetical protein", "putative uncharacterized protein", etc. . this result shows that for over 20% of proteins in this set ht-sas was able to provide information which was sufficient to augment existing annotations or create novel ones. this demonstrates the usefulness of our approach not only to manual curators but also to regular users which can test whether ht-sas can augment annotations of their protein.

CONCLUSIONS
both sources of information â€“ manually curated annotations and literature can complement each other and can both provide significant information helping to describe genes/proteins. the software presented here provides a way to quickly generate an overview of the relevant literature in a form of keywords which are directly linked to source abstracts. our automatic keyword extraction approach gives good precision and recall and could be useful for those who are working with sparsely annotated genomes and large genome datasets.

availability and requirements
project name: ht-sas

project home page: 

operating system: platform independent

programing language: perl/cgi

license: gnu gpl 

this service is freely available. due to the limit of our infrastructure one user can annotate  <dig> sequences per day. if there is a need for more computation power please contact the authors directly.

authors' contributions
both sk and ps have equally contributed to the work. ps has designed the web interface. pz has made substantial contributions to conception, design and interpretation of data. all authors read and approved the manuscript.

supplementary material
additional file 1
evaluation of ht-sas using  <dig> random proteins from sgd. data provided represents the evaluation of ht-sas annotations compared with manually curated descriptions from sgd.

click here for file

 additional file 2
evaluation of ht-sas using  <dig> random proteins from sgd. query homologues with sequence identity > 50% were excluded. data provided represents the evaluation of ht-sas annotations when close homologues were excluded, compared with manually curated descriptions from sgd.

click here for file

 additional file 3
annotation of genes expressed exclusively during blood stages of plasmodium bergei using ht-sas. data provided compares plasmodb, uniprot and ht-sas annotations of plasmodium genes, expressed exclusively during blood stages.

click here for file

 acknowledgements
financial support from the ministry of science and higher education grants 1/0-pbz-mnii-2/1/ <dig> and 47/pgs/2006/ <dig> are gratefully acknowledged.
