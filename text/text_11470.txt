BACKGROUND
identifying regulatory modules  and their interaction networks has been an important challenge in functional genomics and bioinformatics  <cit> . given a microarray gene-expression matrix, comprised of the rows of genes and the columns of samples , biclustering has been the most common method extracting rms defined as a bi-set of co-regulated genes and coregulating conditions  <cit> . biclustering simultaneously performs row–clustering and column–clustering, according to the similarities among expression profile vectors of genes and of samples, respectively.

biclustering has two favorable properties to conventional clustering. first, a gene can be assigned to multiple clusters. this property is well fit to complex biological processes, i.e. a gene can participate in more than one biological process. second, only the selected conditions are considered for clustering. this property is also in suit with biological implication since genes are only co-regulated under specific conditions. there have been various approaches for biclustering according to the variety of homogeneity definition and search strategy  <cit> . cheng and church  <cit>  define a bicluster as a submatrix having a low mean squared residue score. a bicluster is found from a random seed per iteration and the entries of the cluster are replaced with a random number. since the biclusters are identified separately in a random fashion, the result may represent an arbitrary subset of all biclusters depending on iterations. furthermore, the random replacement may interfere with the subsequent identification of biclusters.

floc  algorithm improves cheng and church ’s algorithm by avoiding the random interference and simultaneously discovering a set of k-possibly–overlapping–biclusters  <cit> . the number of biclusters, k, however, is arbitrarily specified without considering the inherent characteristics of input data. ben-dor et al.  <cit>  focus on the relative order of gene expression values. they define an order-preserving bicluster as a group of genes whose values induce same linear ordering across the samples in a sample subset. they proposed a search algorithm  based on a probabilistic model for a single order-preserving submatrix. the opsm method, however, is also limited to find each bicluster separately and does not show enough sensitivity to find hidden biclusters.

recently, there has been an approach to identify order-preserving biclusters using sequential pattern mining , which has been intensively studied in the field of data mining  <cit> . spm is to discover frequent sub-sequences as patterns in a sequence database. in search for order-preservation, it provides an advantage of sensitivity through exhaustive enumeration of all possible patterns. however, spm is highly time– and memory–demanding especially under gene expression data. its complexity grows exponentially with the length of sequence whereas linearly with the number of sequences  <cit> . note that a typical microarray data has a large gene–wise dimension and can have a large sample–wise one in case of combined datasets, therefore, it can easily be computationally intractable to apply the standard spm algorithms to the huge-sized gene expression data in practice. another difficulty with spm is related to inherent noise in microarray data. spm attempts to find an exact order of genes  according to the magnitude of the expression value. however, there almost always exists experimental noise in microarray data, which may cause trivial changes in ordering the expression values. in such a case, the current version of spm can easily fail to detect significant biological patterns since some of the genes are not in due exact order.

in this paper, we propose a novel sequential pattern mining algorithm. this algorithm has several attractive features comparing with the related work: it is scalable in the size of microarray data and robust with respect to noise. when applied to the microarray data of yeast, the proposed algorithm successfully found long order-preserving patterns, which are biologically significant but cannot be found in randomly shuffled data. the resulting patterns are well enriched to known annotations  and are consistent with known biological knowledge. among the patterns, the biologically significant patterns were used to infer rms. there can be more interesting relationships on the level of module, and so the inter-relations between the resulting rms were further examined. they were categorized into one of four types including  independent;  conditionally co-regulated;  separately co-regulated; and  similar. the respective types of inter-module relations were exemplified with biological inferences via enrichment study.

RESULTS
comparison with other methods in sequential pattern mining
the proposed sequential pattern mining, sequential pattern mining with search windows  is compared to previous techniques. candidates for comparison are the opsm method of ben-dor et al.,  <dig> and the naïve application of sequential pattern mining without search windows   <cit> . other biclustering methods are not considered since they are not targeting order-preserving patterns. for performance comparison, the algorithms are tested on simulation data with embedded sequential patterns. spm-based algorithms perform better than opsm in terms of the sensitivity to hidden patterns . basically, spm-naive misses no patterns since it performs an exhaustive enumeration of all possible patterns. the perfect sensitivity of spm, however, comes with the cost of complexity. the time complexity of spm is more than exponential and easily becomes intractable as data get larger. lowering the time complexity is inevitable when one wants to search real-sized gene expression data. as can be seen in fig.1b and fig.1c, spm-window is more efficient than spm-naive finding as many patterns as its naive counterpart while searching much less. for the reality of microarray condition, the algorithms are tested with addition of noise to simulation data. the sensitivity of spm-naïve decreases quickly as the noise increases while spm-window shows better sensitivity and efficiency within a reasonable range of noise . we used bicat for the implementation of opsm  <cit> . further details of benchmark, such as the generation of simulation data and the parameter selection, are shown in additional file  <dig> 

searching of sequential patterns
we applied the proposed sequential pattern mining algorithm to an expression matrix e consisting  <dig>  genes and  <dig>  samples by combining all available yeast cdna datasets from the stanford microarray database   <cit> . we found  <dig> , <dig> sequential patterns, |p| =  <dig>   <dig>   <dig>  the p comprises  <dig> unique genes out of  <dig>  and  <dig>  unique samples out of  <dig> . table  <dig> shows the distribution of the sequential patterns with respect to the length δg and the support δs. the parameters  were set u =  <dig>  l =  <dig>  wf =  <dig>  and wb =  <dig>  the number in each cell indicates the frequency for the corresponding combination of  where δg =  <dig>  . . . ,  <dig> and δs =  <dig>  . . . ,  <dig>  the minimum support threshold u was set to 3% of the total number of samples, and the size of backward lookup wb was set to 10% of wf . the minimum length threshold l and the size of forward lookup wf were empirically set. to validate the significance of resulting sequential patterns, we re-ran the same algorithm to the same data but the data elements were re-shuffled. as a result, no pattern was found all through the ten times of experimental replications. this indicates the sequential patterns only exist in biological data, which justifies the biological significance of our results.

distribution of sequential patterns with respect to length δg and the support δs

functional validation of sequential patterns
significance test by enrichment study
rms, co-regulated and their co-regulating samples were identified from the sequential patterns. biological relevance of the rms was evaluated by enrichment study. first, a set r of random sequential patterns was generated as a competitor against p. for each cell of  in table  <dig>  the δg – sequences of randomly permuted gene-names were generated as the same quantity of . second, all the rms, both mp ’s from p and mr’s from r, were enriched to known annotations by calculating hypergeometric distributions in regard to go-slim terms and smd-sample categories, respectively. the genes were annotated by  <dig> gene ontology  slim terms  defined by sgd. and, the samples were annotated by  <dig> smd categories which describe the experimental context of microarray samples. more details of go-slim terms and smd-sample categories are shown in additional file  <dig>  then, among the terms  corresponding to the genes  of a rm, the p–value of the most significant term  was allocated to the regulatory module  <cit> . third, the p-values of mp and mr were compared. fig.  <dig> presents the quantile-quantile plot of the p–value distributions of both mp and mr. the large departure toward vertical axis from the diagonal line indicates mp is more significantly enriched than the competitor mr. the circle stands for the p–value of gene annotation, whereas the cross stands for the p–value of sample annotation.

biological implication of regulatory modules
from  <dig> , <dig> rms,  <dig>  modules were selected, each of which has a p-value less than  <dig>  with respect to the most significant annotation  is about 8%). only  <dig>  mr’s were significant in the randomly generated modules whereas  <dig>  mp ’s in the modules by sequential pattern mining. table  <dig> shows biological implication of the selected rms by relating the gene context  and the sample context . each cell contains the number of the rms belonging to the specified context by both aspects. for simplicity, trivial go-slim terms  having no rm were removed from the table. note the two prominent couplings: “ generation of precursor metabolites and energy–  rna processing,” and “ cell homeostasis –  oxidative stress,” which imply the existence of co-regulation under a specific biological condition.

regulatory modules: the cell contains the number of the rms belonging to the specified context by both go-slim term and smd category

identification of inter-module relations
distribution of module overlap
given different rms, m and m′, we can infer the inter-module relation between them based on the two dimensional degrees of overlap, xg and xs.. for the sake of representational convenience, we sampled  <dig> representatives out of the original  <dig>  rms;  <dig> centroids from k-medoid clustering  were selected as the representative modules. the k-medoid clustering is based on the distance between rms, defined as an inverse of the proportion of overlap area to the area sum of two rms. among the representative modules,  <dig> were most significantly enriched to ‘response to stress’ of go-slim term,  <dig> to ‘carbohydrate metabolism’,  <dig> to ‘generation of precursor metabolites’ and energy’,  <dig> to ‘biological process unknown’, and  <dig> to ‘cell homeostasis’. fig.  <dig> shows the plot of ’s for all possible pairs of . most of the pairs belong to either similar or independent type since the gene sets of two modules are similar , and the sample set are highly likely to be similar  as well. however, in the viewpoint of biology, it will be more interesting to investigate the remaining two types of inter-module relations, conditionally co-regulated and separately co-regulated. the relationship of conditionally co-regulated may be observed when a gene set is controlled by different regulation mechanisms, and maybe at different biological states. on the other hand, the relationship of separately co-regulated may happen if distinct gene sets are co-regulated separately under same samples.

typical examples of four inter-module relations
fig.  <dig> visualizes the inter-module relations of the representative modules. for the ease of representation, the modules were rearranged in order that similar samples within an identical go-slim term were grouped together. in the plot, the coordinate  in the lower diagonal where i >j  represents the gene overlap  between mi and mj , on the other hand, the coordinate  in the upper diagonal where i <j represents the sample overlap . the gray-scale indicates the degree of overlap; the darker the higher overlap. the square roughly groups the modules which belong to the same type of inter-module relation. the following describes group-wise characteristics of the modules.

type  <dig> / type  <dig> : the modules in the square tagged independent or similar correspond to type  <dig> or type  <dig>  respectively. a module in the square has independent relationship with external modules–the modules outside the square. both the gene set and the sample set of the module are exclusive from those of external modules, leading to small values of xg and xs. on the contrary, modules within the square are similar with other internal modules. they highly share the gene set and the sample set, thus the values of xg and xs are large. both aspects of independent and similar are represented as darker gray-values within the square but lighter ones outside the square. they share the genes, ygr254w, ygr192c, ykl060c, and yjr009c , which all participate in ‘glucose metabolism’. these genes are not included in the external modules. the sample context, on the other hand, is characterized by the ‘rna processing’; 96% of the samples in internal modules are related to ‘rna processing’ while only  <dig> % are in external modules. therefore, it is suggested that the four genes associated with ‘glucose metabolism’ are bound by ‘rna processing’.

type  <dig> : the modules in the square tagged conditionally co–regulated belong to type  <dig>  the darker gray-values of the lower diagonal matrix contrast to the lighter ones of the upper diagonal matrix. this implies that they are highly overlapped in genes but little in samples. more than half of the modules include ymr105c, ybr126c, and yfr053c, which are all related to ‘carbohydrate metabolism’ as ‘phosphoglucomutase’, ‘trehalose-6-phosphate synthase’, and ‘hexokinase i’, respectively. however, the sample contexts are as diverse as ‘oxidative stress’,‘dna damage’, ‘nutrient effects’, ‘chemical effect’, and so on. therefore, it is suggested that those three genes related to ‘carbohydrate metabolism’ are conditionally co-regulated depending on different conditions.

type  <dig> : the modules in the square tagged separately co–regulated belong to type  <dig>  opposite to type  <dig>  the square is light gray-valued in the lower diagonal contrasting to the dark ones in the upper diagonal. this represents that the modules are highly overlapped in samples but little in genes. the samples are dominated by ‘stress or calcium’. however, the representative context of genes is hardly identified.

discussion
in this paper, we successfully demonstrated the existence of sequential patterns in gene expression data and validated their biological significance. furthermore, we inferred inter-module relations based on module overlap and illustrated the examples of condition-specific co-regulations. module groups in overlap plot also suggest the hierarchical organization of module where genes are grouped into modules that are clustered into supermodules  <cit> . our approach could be improved for identifying modular structure in biological system, regarding following several points.

first, we can score the strength of gene order instead of binary decision of their order. this scoring can be achieved by testing the hypothesis that the differential expression of gene a is same to the differential expression of gene b. second, samples can have different weights. each biological condition set has different sample resolution: some conditions are studied with large number of microarrays while others are rarely observed due to several reasons including technical difficulty. although it is difficult to get equal resolution as we integrate more datasets, alternative approaches may be applied. for example, with a weighting scheme of samples - higher weight for rare samples and lower otherwise, patterns can be represented in more diverse biological conditions.

although our approach has several advantages it still needs more improvements. the first one is the scalability of algorithm. we used yeast expression data of which the size is not relatively large in order to demonstrate the efficiency of our algorithm. in further study, we will try to deal with the pattern mining problem using huge microarray dataset consisting of human and mouse gene expression profiles in diverse conditions. to solve this problem, more memory-efficient algorithm is needed. the second is about running speed. in this study, we mainly focused on the ability of finding modules without considering the running time. however, the running time can be significantly decreased using efficient data structure such as suffix tree.

CONCLUSIONS
in this paper, we presented a sequential pattern mining algorithm to identify rms from microarray data. the existing definition for sequential pattern was relaxed so that the algorithm can fit into the biological implication in hand. the searching method was also modified to be more scalable and flexible than previous one. the biological meanings of the resulting rms were enriched through known annotations for genes and samples as well. in addition, the types of relations between modules were further investigated; based on the degree of overlap between two modules, the relation was categorized into one of the four types: 1) independent, 2) conditionally co-regulated, 3) separately co-regulated, and 4) similar. our approach enables a systematic study of inter-module relations beyond the identification of single module in gene regulation. the research on modular relations in gene expression will be valuable for revealing the mechanism of gene regulation.

