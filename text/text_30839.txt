BACKGROUND
the explosive growth of data describing the natural genetic and phenotypic variation within species, and the corresponding emergence of populations genomic  <cit>  and population phenomics  <cit>  as nascent fields of research demands new or improved methods for exploring genotype-phenotype relationships. in a recent proof of concept study, we introduced multivariate analysis in the form of soft-thresholding partial least squares   <cit>  for the mapping of genotype and phenotype interactions in the yeast, saccharomyces cerevisiae <cit> , which has been at the center point for this development. multivariate approaches have the potential to provide superior statistical power, increased interpretability of results and a deeper functional understanding of the genotype-phenotype landscape as it pays attention to relationships between multiple genotypes and multiple phenotypes, without producing an excessive number of hypotheses to test. hence, it could provide decisive advantages over classical univariate analysis  <cit> . a caveat is the sensitivity of multivariate approaches to parameter estimation and this remains a serious challenge, partially because variables tend to show extensive collinearity, which can destroy the asymptotic consistency of the pls estimators for univariate responses  <cit>  and partially because signal-to-noise ratios are often low. a possible solution to the challenge of estimating parameters correctly is to guide these estimations by including background information on variable relationships at the modeling stage  <cit> . for genotype-phenotype mapping, such information could encompass the location of genes in the genome, the degree of shared regulatory elements, functional relatedness in terms of biochemical activity, molecular process or subcellular localization of gene products or physical interactions between gene-products. also, for biological interpretation of the results, focus in relational studies is getting shifted from the selection of genes towards the selection of groups of genes listed as background information  <cit> , but the selection of groups of genes can be missed if only few of the corresponding genes are significant  <cit> ; hence a powerful structure extraction tool is required.

indeed, the analytical implications of including background information to optimize parameter estimation in multivariate analysis, in the context of a three block partial least squares based method named l-pls regression, has recently been considered  <cit> . the mapping of genotype-phenotype relations through l-pls requires a variable selection step. we recently  <cit>  introduced a backward stepwise elimination procedure in pls for identifying codon variations discriminating different bacterial taxa, where significant number of variables were eliminated at the cost of a marginal decrease in model accuracy. this approach was found to be superior to other multivariate procedures with respect to the understandability of the model and the consistency of the estimates. here, we investigate whether inclusion of background information in the parameter estimation step of a multivariate analysis can increase the stability and understandability when applied in the context of mapping genotype-phenotype relationships in large data sets. applying l-pls and a stepwise backward elimination procedure, we find the inclusion of background information to enhance both stability and understandability in an automatic way and thus to constitute a promising way forward.

methods
approach
data
simulated data
to demonstrate the efficacy of the proposed procedure for variable selection when background information on the variables is available, simulation data from the following known model, also used by  <cit> , is considered. e=xβx, having kx vector follow the multivariate normal distribution with mean-vector μ= <dig> and covariance-matrix Σx. response vector ywas assumed to follow a standard normal distribution, and joint distribution of h=x⊤y~⊤ is 

  h=xy~∼mvn <dig> Σxσxy~σxy~⊤1=mvn 

where σxy~ is the covariances vector between x and y~. by imposing a block diagonal structure on Σxgroups of correlated x-variables were constructed by l blocks: 

  Σx=Σk10··00Σk2··0······00··Σkl 

suppose kl is the number of variables in group l . a total of l= <dig> groups of variables were simulated with group sizes k <dig> …,k14=, and uniform correlation structures in each Σkl were assumed internally with correlations equal to ρ <dig> …,ρ14=, respectively. as the defined correlation matrix  indicates variables in different groups that are uncorrelated, we also set the variance of each variable equal to  <dig>  which makes the Σx a correlation matrix. we assume all variables in each group were equally relevant for prediction, and the covariances used in the simulation were =, and simulated response vector was transformed to a binary variable, coded as − <dig> and  <dig>  only the four first groups of variables were relevant for classification due to their non-zero values of the covariance with y. since variables are grouped, variable grouping information was used as background information, and z was coded as given in  <cit> .

real data
the data set is identical to that used in a recently conducted study  <cit> , which did not utilize background information for parameter estimation. the data set contains  <dig> saccharomyces cerevisiae strains, including the reference strain s288c  <cit> . each strain has  <dig> chromosomes and a mitochondrial genome. in total  <dig> protein-coding sequences, excluding dubious genes, were used as reference sequences. each genome protein coding gene element, was converted into a vector of numeric features by sequence alignment of that element in a particular strain to the corresponding sequence element in the reference genome s288c. to achieve this, all reference sequences were first aligned against themselves, and for each reference sequence, the maximum alignment score, representing some coding gene of the s288c genome, was obtained. then each individual s. cerevisiae genome was blasted against this reference set, using tblastx . hence for each genome sequence a maximum bit-score was obtained, providing a measure of to what extent the reference sequence was found in each individual genome. since this score depends heavily on the length of the aligned sequences, numeric features were finally translated by jukes-cantor evolutionary distances. numeric features were then assembled into a matrix x with n= <dig> rows and k= <dig> columns, one column for each reference sequence element. data for each phenotype was assembled into a column vector y of length n= <dig>  where the phenotype data were obtained by micro-cultivation of yeast strains in  <dig> different environments  <cit> . high density growth curves were parameterized  <cit>  into measures of the reproductive rate  and the reproductive efficiency  and this results in  <dig> phenotype responses.

the genome of the yeast reference strain s288c is exceptionally richly annotated on a functional level, reflected in that data on functional relatedness in terms of shared gene ontology  annotations  <cit>  exists for a vast majority of its gene products. in its most extreme form, this annotation denotes genes as essential or not essential for viability. furthermore, information on strain specific genetic variations with a potentially large effect on phenotypes has recently been extracted from population genomic data  <cit> . this information takes the form of the presence or absence of specific gene amplifications, reflecting potentially phenotype changing gain-of-function mutations, and the presence or absence of premature stop codons and frameshifts, reflecting likely loss-of-function mutations with potential negative effect on phenotypes. these information elements, taken together, serve as background information classifying genotypes in the study. background information was assembled into a matrix z with k= <dig> columns and l= <dig> rows, where each column represents a gene and each row represents a go term  or a specific sequence variation . each entry in zis denoted ‘1’ if the corresponding gene is associated with the respective go term and denoted ‘0’ if not.

genotype-phenotype relations
the data set consists of the column vector yrepresenting each phenotype one at a time, the matrix xof genotypes based on jukes-cantor evolutionary distances and the matrix z of background information on genes containing annotated levels. to mine for relations between phenotypes and genotypes, we implemented an l-pls approach  <cit>  utilizing the background information in the modeling stage. we employed a pls based algorithm for parsimonious variable selection  <cit>  which is implemented here for multivariate feature selection in two stages, first for selection of genotype variables xand then for the selection of background information variables z. in essence, we are looking for combinations of columns of x and rows of z capable of explaining the variations in each y, .

algorithm
l-pls supervised learning
the association between each phenotype vector yand several genotype vectors x, where background information zon xis also given, was assumed to be explained by the linear model e=xβwhere βare the k× <dig> vector of regression coefficients. least square fitting was no option because the number of samples  was much smaller than the number of features . pls resolves this by searching for a set of components, ‘latent vectors’, that performs a simultaneous decomposition of x and ywith the constraint that these components explain as much as possible of the covariance between x and y. a large number of components indicates a complex relation is modeled and vice versa. however, in the standard implementation, it does not utilize background information z in modeling. l-partial least squares   <cit>  regression provides a way to include background information in the modeling, which is also similar to the bifocal-pls of eriksson et al <cit> . the algorithm utilizes the nipals algorithm for the extraction of latent vectors, where relevancy of background information z in modeling the  relation is presented by α, as explained below. a large value of αindicates that zis relevant for explaining genotype-phenotype relations. the algorithm starts by centering as 

  y0=y−1ny¯⊤x00=x−1nx¯k⊤−x¯n1k⊤+x¯¯1n1k⊤z0=z−z¯1k⊤, 

in the following manner where y¯ is the column mean vector of y, x¯k, x¯n and x¯¯ are the column-, row- and overall means of x, respectively, and z¯ the row means of z. the sequential l-pls algorithm as given in  <cit> :

choose a value of αfor a= <dig> …,acomponents 

find latent v-vectors vx2a  and vz1a  by the nipals algorithm as shown in figure  <dig>  cycling through ya− <dig>  xa− <dig> a−1and za− <dig> 

for chosen α set wx as a linear combination of vz1a and vx2a and normalize to length equal to  <dig>  

  wxa=αvz1a+vx2awxa←wxa/||wxa|| 

construct score-vectors for xand z, as: 

  txa=xa− <dig> a−1wxatza=wxa 

let tx= and tz= . that is, the weights for x are used as scores for z.

compute y–, x– and z– loadings 

  pya=ya−1⊤txa−1pxa=xa− <dig> a−1⊤txa−1pza=za−1tza− <dig> 

let py=, px= and pz=.

deflate the data matrices to form residual matrices 

  ya=ya−1−txapya⊤xa,a=xa− <dig> a−1−txapxa⊤za=za−1−pzatza⊤ 

end

in step 1) above αcan be determined through cross-validation and the data driven choice of αindicates the relevancy of background information in modeling the genotype-phenotype relation. a large value of α indicates that background information, z, is highly relevant for explaining genotype-phenotype relations.

in essence, the l-pls estimate of the regression coefficients for the above given model based on acomponents can be derived from the weights and loadings by: 

  β^=wx−1py 

two stage variable elimination
selection of variables based on variables importance on projection   <cit>  is an accepted approach in pls. we  <cit>  recently suggested a stepwise estimation algorithm for parsimonious variable selection, where a consistency based variable selection procedure is adopted, and data has been split randomly in a predefined number of subsets . for each split, a stepwise procedure is adopted to select the variables. stable variables that are being selected by stepwise elimination from all split of data are selected finally. this algorithm was also implemented here, but multivariate feature selection was performed in two distinct stages, first for selection of genotype variables from xand then for the selection of background information variables from z. in both cases, ‘the worst’ variables were iteratively eliminated using a greedy algorithm. the algorithm required the ranking of column-variables of x and row-variables of z. for this vipxk and vipzl are defined, measuring the importance of the column-variable kof x and the row-variable lof zrespectively. 

  vipxk=k∑a=1apya⊤pyatxka/∥txa∥2/∑a=1apya⊤pya 

 and 

  vipzl=l∑a=1apya⊤pyatzla/∥tza∥2/∑a=1apya⊤pya 

the vip weights the contribution of each variable according to the variance explained by each pls component, and presents a combined effect of all components. variable kcan be eliminated if vipxk<u and similarly variable l can be eliminated if vipzl<u for some user-defined threshold u∈[ <dig> ∞).

the stepwise elimination algorithm can be sketched as follows: let u0=x. 

for iteration grun yand ugthrough cross validated l-pls. the matrix ughas kgcolumns, and we get the same number of criterion values, sorted in ascending order as vipx,…,vipx.

there are mcriterion values below the cutoff u. if m= <dig>  terminate the elimination here.

else, let s=⌈fm⌉ for some fraction f∈〈 <dig> ]. eliminate the variables corresponding to the smost extreme criterion values.

if there are still more than one variable left, let ug + 1contain these variables, and return to 1).

the fraction fdetermines the ‘step length’ of the elimination algorithm, where an fclose to  <dig> will only eliminate a few variables in every iteration. elimination of variable in xmeans an automatic elimination of the corresponding column variable in z as well, because x and z must have the same columns. once the first stage elimination is completed, the above procedure can be repeated by considering u0=z and vipzk for sorting row-variables of zfor second stage elimination. an overview of variable elimination in both stages is given in figure  <dig>  the fraction f and threshold u can be obtained through cross validation. the fractions ucan be obtained separately for each stage, but experiments revealed no big difference if we use the same value in both stages.

from each iteration gof the elimination, we get a cross validated root mean square error  from training data, here denoted by eg. for both stages of the elimination, the number of influencing variables decreases at each iteration, and eg will often decrease until some optimum is achieved, and then increase again as we keep on eliminating. a potentially much simpler model can be achieved by a relatively small increase in rmse  <cit> . this means we need a rejection level d, where for each iteration beyond optimum root mean square error  e∗ we can compute the t-test p-value between the optimum model response and the selected model response, to give a perspective on the trade-of between understandability of the model and the rmse. hence with a non-significant deviation from the optimum rmse, a significant reduction in variables, and hence better understandability, can be achieved; for details, see  <cit> .

choice of variable selection method for comparison
two variable selection methods, where background information was not used in modeling, were compared with our suggested procedure, where background information was used in the modeling step. hence,in total three models were considered, one was our suggested l-pls with 2-stage stepwise elimination of genes and background information , the second was ordinary pls with stepwise elimination  <cit>  of genes only , and the third was a soft-thresholding pls   <cit>  . we have recently used the latter approach for mapping of genotype to phenotype information  <cit> .

all methods were implemented in the r computing environment http://www.r-project.org/.

the split of data into test and training and parameter tuning
in the proposed algorithm it is possible to eliminate non-influential variables based on some threshold on u and also based on the statistical significance of d. fixing the threshold ua priori could affect the performance of the algorithm. thus, we performed variable elimination exclusively based on d, obtaining an optimum when using an upper limit of u= <dig>  we also considered three step lengths ). in the first regularization step, we tried different rejection levels ; hence, in each iteration, variable elimination was based on statistical significance. model performance was computed in the l-pls fitting and regularized elimination fitting stages. for accurate model estimation and to avoid over fitting, the data was split at three levels. figure  <dig> gives a graphical overview of the procedure. at level  <dig>  we split the data into a test set containing 25% of the genomes and a training set containing the remaining 75%. this split was repeated  <dig> times, each time sampling the test set at random, i.e. the  <dig> test and training sets were partially overlapping. these splits were used for model evaluation, where in each of the  <dig> instances, selected variables were used for classifying the level  <dig> test set, and rmse was computed. in the regularized elimination fitting, there are two levels of cross-validation, as indicated by the right section of figure  <dig>  first, a 10-fold cross-validation was used to optimize the fraction f and the rejection level din the elimination part of our algorithm. second, at the final stage, leave-one-out cross-validation was used to estimate all parameters in the l-pls method. these two procedures together corresponds to a comprehensive ‘cross-model validation’  <cit> . note that the above split of the data was done on y and x, while the full zwas used. also note that this approach should not be used if dealing with very small sample sizes. in this situation, it is preferable to use predefined parameters.

RESULTS
simulated data
for the simulation data, a power analysis was conducted and results are presented in figure  <dig>  here, the power of selecting the correct variables as function of the information content of z in l-pls αis presented. the power analysis shows that as the information content of z in l-pls i.e. αincreases the ability to select the relevant variables also increases.

real data
to study the impact of background information on explanatory variables for genotype-phenotype relations in yeast, a 2-stage stepwise backward elimination procedure in l-pls was used. we modelled each phenotype separately. the algorithm was illustrated using melibiose rate as an example. however, the performance was very similar also for other responses , as presented in table  <dig>  in total, we fitted  <dig> models, one for each phenotype. first, a genotype predictor matrix was derived by blasting the genes of each genome to a s. cerevisiae reference genome, and the best hit scores were used as numerical inputs to a genotype matrix  <cit> . gene ontology terms, reflecting functional relatedness with regards to the gene product participation in similar molecular processes, together with data on gene dispensability  and data on the number of gene paralogs present in founder genome, were used as background information. this data essentially reflects gene relationships in the s288c reference genome; relationships which may or may not be conserved in the species as a whole. we also included population genomic data reflecting the presence or absence, in each specific strain, of genetic variations with a potentially large impact on phenotypes. gene copy number variations reflect potential gain-of-function mutations in particular lineages, whereas frameshift and premature stop codon mutations reflect potential loss-of-function mutations in respective lineages. the proposed model was fitted to each of the  <dig> phenotypes, and results are summarized in table  <dig>  figure  <dig> exemplifies the progression of the 2-stage variable elimination for the phenotype melibiose 2% rate, representing the rate of growth of the set of yeast strains when supplied with carbon exclusively in the form of the melibiose. the number of genotype variables, x, and background information, z, remaining after each iteration is given in the figure. in the first stage, variable reduction with respect to x, was carried out in eight iterations. in the second stage, the remaining three iterations eliminates the variables inz. we refer to this procedure, including both gene and background information, in an l-pls approach, as method  <dig> . we compared m <dig> to a similar pls approach, m <dig>  which implements stepwise variable elimination on genes, with no background information included, and m <dig> i.e. st-pls, again on genes exclusively with no background information utilized. hence, m <dig> utilizes background information in the modeling while m <dig> and m <dig> do not. in figure  <dig>  the distribution of the information content of z, indicating to what extent zis relevant for explaining genotype-phenotype relations, in m <dig> is presented, together with a comparison of the complexity of the models, the number of selected variables and the root mean square error on training and test data. for each split of the data, the information content of z in m <dig>  the number of used components and the number of x-variables were obtained. in the upper left panel, the degree of influence of zmatrix in mapping genotype-phenotype relations is presented. the degree of influence, α, range from  <dig> to  <dig> where a higher value indicates a high influence of background information in genotype-phenotype mapping. with an average α= <dig> , this indicates that the background information, in general, have a very considerable impact on genotype-phenotype mapping. in the top right panel, we see that the genotype-phenotype mapping, when applied using the stepwise elimination procedure adopted in m <dig> and m <dig>  requires a lower number of pls components than m <dig> to explain the phenotype pattern. hence, m <dig> and m <dig> constitute less complex models than m <dig>  because m <dig> ends with a higher number of components and a higher number of chosen variables. the lower left panel indicates that m <dig> selects a significantly lower number of genes for the genotype-phenotype mapping than m <dig> and m <dig>  this means that noise, in terms of genes that do not actually contribute to explaining the phenotype, is substantially reduced when background information is included in the modeling step. the lower center panel shows that for the training data there was no significant difference in rmse between m <dig> and m <dig>  but both were lower than the rmse for m <dig> . when applied on test data, all methods resulted in acceptable and similar rmse, indicating that overall methods perform equally well , lower right panel). however, m <dig> could achieve this performance using a much smaller number of variables. the number of variables required is a measure of the understandability of the model; hence, we conclude that m <dig>  including background information in the pls modeling, should allow for easier and more straight-forward interpretation of results. 

the suggested approach select the model parameters at each level of 10-fold cross validation, hence the measure of central tendency is used to summaries the results. for each fitted model mode of selected step length , mode of rejection level , mode of model complexity , mean of rmse on test data, number of selected genes and number of selected background variables are listed.

a key requirement of any multivariate analysis is the stability and selectivity of the results. to evaluate model stability and selectivity, we  <cit>  recently introduced a simple selectivity score: if a variable is selected as one out of m variables, it will get a score of 1/m. repeating the selection for each split of the data, we simply add up the scores for each variable. thus, a variable having a large selectivity score tends to be repeatedly selected as one among a few variables. in figure  <dig>  the selectivity score is sorted in descending order and is presented for x-variables  in the upper left panel for m <dig>  the upper right panel for m <dig> and the lower left panel for m <dig>  the selectivity score indicating the stability of the selected z-variables  obtained from m <dig> is presented in the lower left panel. m <dig> indeed selected many genes in a stable way, which is a fundamental requirement for any further analysis. a selectivity score above  <dig>  for x-variables and above  <dig>  for z-variables is significantly larger than similar scores obtained by repeated fitting of models using random permutation on the phenotypes. since traits are controlled by subsets of distinct genes  <cit> , and some genes in the genome are of overall importance for handling variations in the external environment and affect a disproportionate number of phenotypes  <cit> , we expect any method extracting relevant biological information to have a higher selectivity score than any random selection of genes. this was indeed the case for our proposed method m <dig>  in fact, using the two-step l-pls procedure, only  <dig> genes were selected from m <dig>  corresponding to substantially higher selectivity than m <dig> and m <dig>  not surprisingly, these genes oli <dig>  yeh <dig>  atp <dig>  psy <dig>  ifm <dig>  suv <dig>  car <dig>  erg <dig>  ils <dig>  ydr374c, sho <dig>  ydr476c, glo <dig>  apl <dig>  rix <dig>  gpr <dig>  var <dig>  tti <dig>  ylr410wb, ydl211c, ydl218w, ehd <dig>  mrpl <dig>  rpt <dig>  cox <dig>  ste <dig>  sur <dig>  yap <dig>  mrpl <dig>  ynl320w, were involved in cellular functions directly relating to variations in the environment: transport, stress response, response to chemical stimulus and metabolism. they also tended to be affected by both strong loss-of-function  and gain-of-function  mutations, as presented in table  <dig>  we found  <dig> % genes overlap between m <dig> and m <dig> and  <dig> % genes overlap between m <dig> and m <dig> for melibiose 2% rate. the selection of background variables can be missed if only a few of the corresponding genes are significant  <cit> , but the powerful structure of l-pls, coupled with 2-stage stepwise elimination procedure, yields a stable list of genes and background information variables, which maps the genotype-phenotype relation. finally, we have listed the mapped background information and genes for all  <dig> phenotypes in table  <dig> and additional file 1: table s <dig> respectively.

selected variables from the background information matrix zthat have a selectivity score above  <dig>  for each phenotype obtained through the proposed model. variables correspond to the presence or absence of specific gene amplifications, and the presence or absence of premature stop codons and frameshifts.

assuming that phenotypic variation within the species is controlled by either or both of lineage specific adaptive mutations, emerging as a consequence of lineage specific positive selection, or neutral variation, emerging as consequence of lineage specific relaxation of selective pressure that allow loss-of-function mutations to accumulate, we expected phenotype defining genes to show faster evolution than non-influential genes. this corresponds to a prediction of a higher ratio of nonsynonymous versus synonymous mutations since the split between s. cerevisiae and its closest relative saccharomyces paradoxus <cit> . indeed, we found genes identified as influential through m <dig> to have been evolving 29% faster than non-influential genes . this indicates that these genes, as a group, have been subjected to either stronger positive selection or somewhat relaxed negative selection during the recent yeast history and supports that m <dig> extracts biologically relevant information.

CONCLUSIONS
we have suggested the use of background information in the modeling step for genotype-phenotype mapping through l-pls and a stepwise elimination procedure. we note that the derived results could give a slight decrease in rmsep when background information is used, but more interestingly, this comes with more stability in the selection of variables  used for genotype-phenotype mapping. we conclude that the approach is worth pursuing, and future investigations should be made to improve the computations of genotype signals, and variable selection procedure within the pls framework.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
tm initiated the project and the ideas. ss has been involved in the later development of the approach and the final algorithm. tm has done the programming and computations, with assistance from ss. tm has drafted the manuscript, with inputs ss, jw and ls. all authors have read and approved the final manuscript.

supplementary material
additional file 1
table s <dig>  selectivity score based selected genes. genes selected for each phenotype for genotype phenotype mapping by using 2-stage variable elimination and having selectivity score above  <dig> .

click here for file

 acknowledgements
tahir mehmoods scholarship has been fully financed by the higher education commission of pakistan, jonas warringer was supported by grants from the royal swedish academy of sciences and carl trygger foundation.
