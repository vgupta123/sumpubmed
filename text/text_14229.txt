BACKGROUND
gene ontology
the gene ontology  is a useful resource in bioinformatics that provides structured and controlled vocabularies to describe protein function and localization according to three general categories: biological process , molecular function , and cellular component   <cit> . each of these three annotation categories is structured as its own rooted directed acyclic graph . an rdag is a treelike data structure with a unique root node, the relationships between nodes are directed , and the structure is non-recursive, i.e. without cycles.

the go consortium updates on a regular basis a go annotation   <cit>  database with new go terms that are linked to genes and gene products by relevant studies. go is widely used in several bioinformatics applications, including gene functional analysis of dna microarray data  <cit> , gene clustering  <cit> , disease similarity  <cit> , and prediction and validation of protein-protein interactions  <cit> .

each go annotation is assigned together with an evidence code  that refers to the process used to assign the specific go term to a given gene  <cit> . all ecs are reviewed by a curator, except ecs assigned with the inferred from electronic annotation  code.

semantic similarity
measuring similarity between objects that share some attributes is a central issue in many research areas such as psychology, information retrieval, biomedicine, and artificial intelligence  <cit> . such similarity measures can be based on comparing features that describe the objects, and a semantic similarity measure uses the relationships which exist between the features of the items being compared  <cit> . blanchard et al. have established a general model for comparing semantic similarity measures based on a subsumption hierarchy  <cit> . they divide tree-based similarities into two categories: those based only on the hierarchical relationships between the terms  <cit> , and those combining additional statistics such as term frequency in a corpus  <cit> .

in a biological perspective, the functional similarity term was proposed to describe the similarity of genes or gene products as the similarity between their go annotation terms. to establish a suitable functional similarity between genes has become an important aspect of many biological studies. for example have previous studies shown that there is a correlation between gene expression and go semantic similarity  <cit> .

since go terms are organized as an rdag, the functional similarity can be estimated by a semantic similarity. pesquita et al. have proposed a general definition of semantic similarity between genes or gene products  <cit> . here a semantic similarity is a function which, given two sets of terms annotating two biological entities, returns a numerical value presenting the closeness in meaning between them. this similarity measure is based on comparing all possible pairs of the two sets of go terms, or selective subsets of them.

comparing terms
in general measuring the similarity between two terms can be divided into three main categories: edge-based, node-based and hybrid methods. the edge-based approaches are based on counting the number of edges in the specific path between two terms. in most edge-based measures, a distance function is defined on the shortest path  or on the average of all paths  <cit> . this distance can easily be converted into a similarity measure. such approaches rely on two assumptions which are seldom true in biological reality. first that nodes and edges are uniformly distributed, and second that edges at the same level in the go graph correspond to identical distances between terms. node-based measures are based on the information content  of the terms involved. the ic value gives a measure of how specific and informative a term is. the ic is relying on the probability of terms occurring in a corpus, and resnik  <cit>  used the negative logarithm of the likelihood of a term to quantify its ic.  <dig> ict=−logpt 

this definition leads to higher ic for terms with lower frequency. obviously, ic values increase as a function of depth in the go graph . resnik used the maximal value among all common ancestors between two terms as a similarity measure, i.e., the ic of the lowest common ancestor   <cit> . since the similarity value of resnik’s measure is not limited to one , lin  <cit>  and jiang  <cit>  proposed their methods to normalize the similarity value between  <dig>  and  <dig> . most node-based methods are based on resnik’s measure which only considers the ic of a single common ancestor and ignores the information on paths in subgraphs composed from common ancestors and pairs go terms. so, hybrid methods have been proposed to account for both nodes and edges in the subgraph. for example wang et al. introduced a similarity measure combining the structure of the go graph with the ic values, integrating the contribution of all terms in a go subgraph, including all the ancestors  <cit> .

comparing genes or gene products
genes are normally annotated using several terms within a particular go category . thus, with an available measure function to compute similarity of terms, it is necessary to define an aggregated similarity measure to compare sets of terms. generally these measures can be divided into two categories: pairwise and groupwise methods  <cit> .

pairwise approaches measure similarity between two genes by combining the similarities between their terms. some approaches apply all possible pairwise combination of terms from the two sets, whereas others consider only the best-matching pair for each term. the final similarity between two genes is then defined by combining these pairwise similarities, mostly by the average, the maximum, or the sum  <cit> .

groupwise methods are not based on combing similarities between individual terms, but rather compute gene similarities by one of three main approaches: set, graph, or vector. in set approaches the similarity is computed by set techniques on the annotations. graph-based similarity measures calculate similarity between genes using graph matching techniques where each gene is presented as subgraphs of go terms. and finally, in vector approaches each gene is represented in vector space with each term corresponding to a dimension. similarity can be estimated using vector-based similarity measures, mostly cosine similarity  <cit> .

existing measures
for presentation of some existing methods we introduce the following definitions. suppose g <dig> and g <dig> are two given genes or gene products annotated by two sets of go terms {t <dig>  t <dig>  …, t1n} and {t <dig>  t <dig>  …, t2m}. the first measure we will introduce is intelligo  <cit> , which is a vector-based method. each gene is represented as a vector g = ∑iαiei where αi = wifa, and where w represents the weight assigned to the evidence code between g and ti, and ifa is the invers annotation frequency of the term ti. here ei is the i-th basis vector corresponding to the annotation term ti. the dot product between two gene vectors is defined as in  and .  <dig> g1*g2=∑i,jαiβjei*ej   <dig> ei*ej=2depthlcaminsplt1it2j+2depthlca 

here depth is the depth of the deepest common ancestor for t1i, t2j and minspl is the length of the shortest path between t1i, t2j which passes through lca. the similarity measure for two genes vectors g <dig> and g <dig> is then defined using the cosine formula .  <dig> simintelligog1g2=g1*g2g1*g1g2*g <dig> 

the second measure presented here was introduced by wang et al.  <cit> . they considered for the different contributions that terms are related by is_a and part_of. the semantic contribution that ancestor terms make to a child term is estimated by .  <dig> svt=∑x∈anctstx 

here st =  <dig> and st = max{we * st|ti ∈ childrenof}, where we ∈  is a value that corresponds to the semantic contribution factor for edge e, and childrenof returns the immediate children of x that are ancestors of t and stti=∏x∈ptti−1maxwk where p is the path between t and ti −  <dig>  they used the weights wis_a =  <dig>  and wpart_of =  <dig> . then they defined the similarity of two terms as in .  <dig> st1it2j=∑x∈comanct1it2jst1ix+st2jxsvt1i+svt2j 

finally the wang measure uses a best-matched approach  to calculate similarity between two genes according to .  <dig> simwangg1g2=∑i=1nmaxjst1it2j+∑j=1mmaxist1it2jn+m 

the third measure is lord’s measure  <cit> , which is based on resnik’s similarity. the resnik similarity is defined as in .  <dig> simresnikt1it2j=iclcat1it2j 

the lord measure is estimated as the average of the resnik similarity over all t1i and t2j.  <dig> simlordg1g2=∑i=1n∑j=1msimresnikt1it2jn×m 

the next measure was introduced by al-mubaid et al.  <cit> . first they calculate the length of all shortest paths  for all  pairs. then the average on the pls defines the distance between two genes g <dig> and g <dig> as in .  <dig> plg1g2=∑i=1n∑j=1mplt1it2jn×m 

finally they use function  to convert the distance to a similarity value.  <dig> simmubaidg1g2=e− <dig> ×plg1g <dig> 

the last measure presented here is simgic  <cit> , which also is called the weighted jaccard measure. let g <dig> and g <dig> be the go terms and their ancestors for two genes g <dig> and g <dig>  respectively. the simgic is defined as the ratio between the sum of the ics of terms in the intersection and the sum of the ics of terms in the union .  <dig> simgicg1g2=∑t∈g1∩g2ict∑t∈g1∪g2ict 

we will now describe the implementation and testing of a new method, topoicsim, and compare it to the measures introduced above using several different test data sets. in this measure we have tried to decrease any bias induced by irregularity of the rdag. in particular, topoicsim examines all common ancestors for a pair of go terms, and not only the last  common ancestor, which is the case for the measures introduced above. details regarding the evaluation measures, the datasets and approaches that were used for benchmarking and the actual implementation are given in methods.

methods
intraset similarity and discriminating power
to evaluate topoicsim relative to existing methods we first used two different benchmarks based on the go properties studied by benabderrahmane et al.  <cit> . for the kegg benchmark they used a diverse set of  <dig> human kegg pathways. the assumption when testing the kegg dataset is that genes belonging to a specific pathway share a similar biological process, so the estimated similarity was based on bp annotations . they also defined a pfam benchmark, using data from the sanger pfam database  <cit>  for  <dig> different pfam human clans. the assumption when testing pfam clans is that genes belonging to a specific clan share a similar molecular function, so the estimated similarity was based on mf annotations .table  <dig> list of human kegg pathways and pfam clans used for benchmarking

these datasets were obtained directly from  <cit> 



they used two measures, intraset similarity and discriminating power on the benchmark datasets to evaluate their method. let s be a collection of genes where s = {s <dig>  s <dig>  …, sp} . for each sk, let {gk <dig>  gk <dig>  …, gkn} be the set of n genes in sk. intraset similarity is a measure to calculate the average similarity over all pairwise comparisons within a set of genes .  <dig> intrasetsimsk=∑i=1n∑j=1nsimgkigkjn <dig> 

interset similarity can be estimated for two sets of genes sk and sl composed of n and m genes, respectively, as the average of all similarities between pairs of genes from each of the two sets sk and sl .  <dig> intersetsimsksl=∑i=1n∑j=1msimgkigljn×m 

the ratio of the intraset and interset average gene similarities can be defined as the discriminating power  .  <dig> dpsimsk=p−1intrasetsimsk∑i= <dig> i≠kpintersetsimsksi 

it is important to have high intraset similarity and at the same time high discriminating power for a measure. therefore we decided to define a new measure, intraset discriminating power , using the following formula .  <dig> idpsimsk=intrasetsimsk×dpsimsk 

the idp value estimates the ability to identify similarity between gene sets in a dataset, and at the same time discriminate these sets from other genes in the dataset.

we compared the results obtained with our topoicsim method with the five existing state-of-the-art similarity measures described in the introduction. for the benchmark datasets, intraset, dp, and idp values were calculated by our method and compared to those estimated using the other measures.

expression similarity
many recent studies have shown that genes that are biologically and functionally related often maintain this similarity both in their expression profiles as well as in their go annotations  <cit> . to test this assumption we selected three sets of genes from the hallmark datasets, which is a collection of  <dig> gene sets representing specific well-defined biological processes  <cit> . these three gene sets are labeled as g2m_checkpoint, dna_repair, and il6_jak_stat3_signaling, with  <dig>   <dig>  and  <dig> genes respectively. the expression values for the genes across multiple cell types and experiments have been obtained from fantom <dig>  <cit>  using the “cage peak based expression table  of robust cage peaks for human samples with annotation” file. the expression values were listed according to clusters of transcriptional start sites, therefore some genes were initially assigned multiple expression values, corresponding to unique clusters of start sites. we combined expression values for each gene and then transformed the total expression by log <dig>  each gene could then be represented as a vector with  <dig> expression values.

we used three expression similarities ), against the three annotation similarities  that showed the best performance during initial testing .

previous studies have shown that in most cases there is no meaningful correlation when pairs of individual genes are used to estimate correlation between expression and annotation similarities, but that this can be improved by grouping methods, comparing groups or clusters of genes  <cit> . in these methods, the gene pairs are split into groups of equal intervals according to the annotation  similarity values between the gene pairs. then correlation between expression and annotation similarities is defined as correlation between the average of these similarities on the splits  <cit> . there are many reasons for poor correlation when interactions between individual genes are considered. for example, genes may be involved in multiple and different processes across a dataset. comparison of individual genes will underestimate similarity due to these differences, whereas grouping methods can highlight shared properties within groups. we therefore decided to group results by using a self-organizing map  algorithm on  pairs, where r and s are one of the expression and annotation similarities respectively. a som is a topology-preserving mapping of high-dimensional data based on artificial neural networks. it consists of a geometry of nodes mapped into a k-dimensional space, initially at random, which is iteratively adjusted. in each iteration the nodes move in the direction of selected data points, where the movement depends upon the distances to the data points, so that data points located close to a given node have a larger influence than data points located far away. thereby, neighboring points in the initial topology tend to be mapped to close or identical nodes in the k-dimensional space  <cit> . we calculated correlation between expression and annotation similarities for all clusters and then identified clusters showing good correlation. final correlation is reported as average correlation of individual expression and annotation similarities within these clusters. this approach was applied to all possible combination of  values, i.e.,  <dig> combinations in total.

distance correlation
distance correlation  as introduced by székely and bakirov  <cit>  is a method to estimate the dependency between two random variables. it measures the discrepancy between the joint function and the product of its marginal functions in a specific weighting scheme in l <dig> space. more strictly, let  be a pair of random variables with joint function f and marginal functions fx and fy. the distance covariance can be defined as the root of the following eq. .  <dig> dcov2x,y=∫fx,yt,s−fxtfys2wt,sdtds 

this is on rp + q where p and q are the dimension of x and y respectively and w is the weight function. now, the dc can be defined by distance covariance as in .  <dig> dcorx,y=dcovxydcovx,xdcovy,y 

it has been shown that the empirical dc for an iid sample {, , …, } can be estimated as in .  <dig> dcxy=s1+s2−2s <dig>   <dig> s1=1n2∑k,l=1nxk−xlpyk−ylq   <dig> s2=1n2∑k,l=1nxk−xlp1n2∑k,l=1nyk−ylq   <dig> s3=1n3∑k=1n∑l,m=1nxk−xlpyk−ymq 

some previous studies have applied dc on the expression level of gene sets  <cit> .

evaluation by cessm
collaborative evaluation of go-based semantic similarity measures  is an online tool  <cit>  that enables the comparison of a given measure against  <dig> previously published measures based on their correlation with sequence, pfam, and enzyme classification  similarities  <cit> . it uses a dataset of  <dig>  protein pairs involving  <dig>  unique proteins from various species. protein pairs , go , and uniprot go annotations  were downloaded from cessm. the similarities for the  <dig>  proteins pairs were calculated with topoicsim and returned to cessm for evaluation.

implementation
the r programming language  was used for developing and running all programs. we used all the ec codes as annotation terms. the ppipre , genesemsim , and csbl.go  packages were used to calculate intelligo, wang, and simgic measures . the dc values were estimated using the energy  package  <cit> . the som algorithm was performed with the sombrero  package  <cit> . all these packages are available within r bioconductor  <cit> .

RESULTS
the topoicsim measure
here we introduce a new similarity measure which accounts for the distribution of ic on both shortest path between two terms and longest path from their common ancestor to root. a weighting scheme in terms of length of the paths is used to provide a more informative similarity measure. in the current version we do not use any weight scheme on the ecs codes. we use definitions of relevant concepts as follows.

a go tree can be described as a triplet Λ = , where g is the set of go terms, Σ is the set of hierarchical relations between go terms   <cit> , and r is a triplet , where ti, tj ∈ g and ξ ∈ r and tiξtj. the ξ relationship is an oriented child–parent relation. top level node of the go rdag is the root, which is a direct parent of the mf, bp, and cc nodes. these nodes are called aspect-specific roots and we refer to them as root in following.

a path p of length n between two terms ti, tj can be defined as in .  <dig> p:g×g→g×g⋯×g=gn+1;p= 

here ∀ s, i ≤ s < j, ∃ ξs ∈ Σ, ∃ τs ∈ r, τs = . because g is an rdag, there might be multiple paths between two terms, so we represent all paths between two terms ti, tj according to .  <dig> atitj=∪pptitj 

we use inverse information content  values to define shortest and longest paths for two given terms ti, tj as shown in .  <dig> sptitj=argminp∈Αtitjiicp   <dig> lptitj=argmaxp∈atitjiicp   <dig> iicp=∑t∈p1ict 

we used a standard definition to calculate ic as shown in   <dig> ict=−loggtgtot 

here gt is the number of genes annotated by the term t and gtot is the total number of genes. the distribution of ic is not uniform in the rdag, so it is possible to have two paths with different lengths but with same iics. to overcome this problem we weight paths by their lengths, so the definitions in  and  can be updated according to  and .  <dig> wsptitj=sptitj×lenp   <dig> wlptitj=lptitj×lenp 

now let comanc be the set of all common ancestors for two given terms ti, tj. first we define the disjunctive common ancestors as a subset of comanc as in .  <dig> discomanctitj=x∈comanctitj|pxroot∩cx=∅ 

here p is the path between x and root and c is set of all immediate children for x.

for each disjunctive common ancestor x in discomanc, we define the distance between ti, tj as the ratio of the weighted shortest path between ti, tj which passes from x to the weighted longest path between x and root, as in .  <dig> dtitjx=wsptitjxwlpxroot   <dig> wsptitjx=wsptix+wsptjx 

now the distance for two terms ti, tj can be defined according to .  <dig> dtitj=minx∈discomanctitjdtitjx 

we convert distance values by the arctan.π <dig> function, and the measure for two go terms ti and tj can be defined as in .  <dig> stitj=1−arctandtitjπ <dig> 

note that root refers to one of three first levels in the rdag. so if discomanc = {root} then d = ∞ and s =  <dig>  also if ti = tj then d =  <dig> and s =  <dig> 

finally let s = n × m be a similarity matrix for two given genes or gene products g <dig>  g <dig> with go terms {t <dig>  t <dig>  …, t1n} and {t <dig>  t <dig>  …, t2m}, where sij is the similarity between the go terms t1i and t2j. we use a rcmax method to calculate similarity between g <dig>  g <dig>  as defined in .  <dig> topoicsimg1g2=rcmaxs=max∑i=1nmaxjsijn,∑j=1mmaxisijm 

we also tested other methods on the similarity matrix, in particular average and bma, but in general rcmax gave the best performance for topoicsim .

the topoicsim algorithm
the topoicsim algorithm was implemented to estimate the similarity between two genes, taking their gene id  as input, together with parameters: a go annotation type , a species, and an ec specification . the output is the similarity between the two genes. pseudocode for the topoicsim algorithm is presented in fig.  <dig> fig.  <dig> pseudocode for the topoicsim algorithm



the ics used to weigh the go terms were calculated using the gosim package   <cit> . for each disjunctive the shortest path between the two go terms was calculated by the dijkstra algorithm in the rbgl package   <cit>  according to . also the longest path between the disjunctive and root was calculated by the topology sorting algorithm  <cit>  according to .

a simple example
to exemplify how topoicsim computes the similarity between two given go terms, we will illustrate the similarity between the two go terms go: <dig> and go: <dig> as shown in fig.  <dig>  using the bp ontology of go. according to , these go terms have two disjunctive ancestors: go: <dig> and go: <dig>  for go: <dig> there are unique paths from go: <dig> to root and from go: <dig> and go: <dig> to go: <dig> . therefore, according to  the distance between these go terms will be:fig.  <dig> sample go structure illustrating the main computations used in topoicsim

 d=×4×2= <dig>  

for go: <dig> there are two paths from go: <dig> to root  and two paths from go: <dig> and go: <dig> to go: <dig> . according to  and  and the ic values in fig.  <dig> l <dig> and p <dig> are longest path and shortest path respectively, so distance for this case will be: d=×3×2= <dig>  

obviously the second value is the minimum, so the similarity between go: <dig> and go: <dig> according to  will be: s=1−arctanπ/2= <dig>  

benchmarking of topoicsim
with the growing number of similarity measures, an important issue is comparison of their performance. for this, in particular the five similarity measures presented in the introduction were considered for comparison with topoicsim in several tests.

intraset similarity
the intraset similarity is the average similarity over all pairwise comparisons within a set of genes. the intraset values were calculated with topoicsim and five other algorithms, namely intelligo, wang, lord-normalized, al-mubaid, and simgic, using data sets defined by pfam clans and kegg pathways. the performance results obtained with the pfam clans using mf annotations are shown in fig.  <dig>  for  <dig> out of  <dig> pfam clans, the topoicsim measure showed generally higher intraset similarity compared to the other measures, and only for the cl <dig>  case did it show lower performance. the results for the kegg pathway datasets based on bp annotations were very similar . again the topoicsim measure had in general higher performance compared to the other measures .fig.  <dig> 
intraset similarities for the pfam clan dataset using mf annotations. the intraset similarity is estimated for all pairs of genes within in each clan using mf annotations over all considered similarity measures

fig.  <dig> 
intraset similarities for kegg pathways dataset using bp annotations. the intraset similarity is estimated for all pair genes within each kegg pathway using bp annotations for all considered similarity measures



discriminating power
the discriminating power  is defined as the ratio of the intraset and interset average gene similarities, where interset similarities are between gene sets, rather than within. the calculated dp values for all methods on the two benchmark datasets used for intraset similarity are plotted in figs.  <dig> and  <dig>  for the pfam clans and mf annotations topoicsim measure was superior compared to the other methods. the minimum and maximum dp values generated by the topoicsim were  <dig>  for cl <dig>  and  <dig>  for cl <dig> , respectively. for the kegg pathway dataset the wang measure provide better performance compared to intelligo and topoicsim, which came second and third.fig.  <dig> comparison of the discriminating power of six similarity measures using pfam clan and mf annotations. the discriminating power values estimated using all considered similarity measures are plotted for all pfam clans

fig.  <dig> comparison of the discriminating power of six similarity measures using kegg pathway and bp annotations. the discriminating power values estimated with all considered similarity measures are plotted for all kegg pathways



intraset discriminating power
intraset discriminating power  represents a combination of the instraset similarity and dp, as both should be high for an optimal measure. the idp values were estimated for all measures in the study using formula . the results are plotted in figs.  <dig> and  <dig> for mf and bp annotations respectively. for the mf annotations for pfam clan data topoicsim shows a generally better performance compared to the other measures. for the bp annotations for kegg pathway data the best performance was seen for the topoicsim, intelligo, and wang measures. the topoicsim had best performance  for  <dig> out of  <dig> cases. it therefore shows a very good and robust performance in this part of the evaluation.fig.  <dig> comparison of the idp values of six similarity measures using pfam clan and mf annotations

fig.  <dig> comparison of the idp values of six similarity measures using kegg pathways and bp annotations



evaluation versus expression similarity
for evaluation of topoicsim with respect to annotation similarity associated with expression similarity we used three subsets of human genes from  <cit> , namely g2m, dna_repair, and stat <dig>  for each subset both expression and annotation similarities were calculated using pearson and spearman correlations and dc for expression similarity based on cage data  , and topoicsim, intelligo, and wang for semantic similarity . the self-organizing map  algorithm was used to cluster all interactions into three subsets based on  values. a 6 ×  <dig> square topology was selected to set up the som computation. the correlation was computed for each cluster and the clusters with r > = <dig>  were used to estimate final correlation between expression and annotation similarities as an average on the correlation values within these selected clusters. table  <dig> presents the correlation values for each of the three subsets and the considered  pairs. for the three sets of genes that were tested the maximum correlation was seen when we used the dc correlation and topoicsim measures for the expression and annotation similarities . also, the calculated correlations with the topoicsim measure were higher than the correlation values calculated by the two other measures for all cases except the dna_repair set when using the spearman and intelligo combination .table  <dig> correlation between expression and annotation similarities

 <dig> 
 <dig> 
 <dig> 
numbers in bold indicate the best correlation for each subset when comparing topoicsim, intelligo and wang



evaluation by cessm
the topoicsim measure was used to calculate similarities for the benchmark set of protein pairs downloaded from the cessm website  <cit> . the benchmark set represents three different types of similarities, based on sequence similarity , enzyme classification , and protein domains . the results obtained  are presented in table  <dig>  when we used the mf annotations, the correlation coefficients range from  <dig>  for the seqsim dataset to  <dig>  for the ecc dataset. the topoicsim correlation coefficient for the ecc dataset is higher than all other methods. for the pfam dataset topoicsim is at a similar level as simgic . for the seqsim dataset the value obtained with topoicsim is beaten by four other methods .table  <dig> results obtained with the cessm benchmarking tool

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
pearson correlation coefficients are shown for the ecc, pfam, and seqsim datasets. the mf and bp annotations are used. numbers in bold show the best correlation for each dataset. the column headings represent the following methods: simgic similarity graph information content, simui union intersection similarity, ra resnick average, rm resnick max, rb resnick best match, la lord average, lm lord max, lb lord best match, ja jaccard average, jm jaccard max, jb jaccard best match



for the bp annotations, the performance was generally higher than for mf annotations. for the ecc and pfam datasets the topoicsim correlation coefficients are higher than for any of the other measures. for the seqsim dataset the score obtained by topoicsim is beaten by three other measures .

annotation length bias
annotations are not uniformly distributed among the genes or gene products within an annotation corpus, and some studies have indicated a clear correlation between semantic scores and the number of annotations  <cit> . wang et al.  <cit>  used randomly selected pairs of term groups to evaluate the increase in protein semantic similarity score that resulted only from the increased annotation length, regardless of other biological factors. first, they randomly selected  <dig>  pairs of term groups with the same sizes  ranging from  <dig> to  <dig>  then, using each of  <dig> semantic similarity scores, they calculated the semantic similarity scores for random term group pairs, and analyzed whether these scores increased as the group size increased using the spearman rank correlation coefficient. all the  <dig> semantic similarity methods tested by wang et al. showed a perfect or close to perfect spearman correlation . we used their approach and got a spearman correlation of r =  <dig>  with p-value =  <dig> . although there still is a significant correlation, it is smaller than all reported correlations in wang et al.

the shallow annotation problem
genes that are annotated at only very shallow levels  can lead to very high semantic similarities  <cit> . for example, consider the two human genes akap <dig>  and bbs <dig> . the first gene is a trans-membrane protein that has  <dig> go terms associated with the mf ontology. the second gene is poorly understood and has only two go terms, including go: <dig> , which it happens to share with akap <dig>  despite this weak link, some node based methods like lin and jiang not only predict high similarity, but actually return a maximum score . the similarity of these genes according to intelligo and wang is  <dig>  and  <dig> , respectively, whereas topoicsim generates a more appropriate low similarity of  <dig> .

running time
table  <dig> shows the running times for topoicsim compared to intelligo and wang, using calculation of the similarity values of all gene pairs in three gene sets that were used for benchmarking. it is not surprising that the wang method has very short running times compared to topoicsim and intelligo, as wang does not spend time on finding longest and shortest paths. however, the results also show that topoicsim actually has shorter running time than intelligo in each of the tree cases.table  <dig> running time

running times in minutes for calculating similarities over all genes pairs in each of the gene sets



discussion
semantic similarity measures rely upon the quality and completeness of their assigned ontology and annotation corpus. the irregular nature of go annotation data, for example variable edge lengths , variable depth , and variable node density  should be taken into account by semantic similarity measures.

most existing methods use in the first step the last  common ancestor to define similarity between two go terms, which does not guarantee the shortest path between terms that pass from this common ancestor . to overcome this issue topoicsim measures similarity between two go terms for all disjunctive common ancestors with the described criteria, and the final similarity measure is returned as the best among them according to . although there are other studies that use disjunctive common ancestors  <cit> , they are node based methods that only use shared information on the disjunctive common ancestors and they do not deal with optimal paths in a subgraph of nodes. another advantage of the topoicsim measure is the weighting scheme, which is used according to . it leads to a better ability to distinguish between terms with the same semantic similarity but at different levels.

various strategies have been applied to test the validity of semantic similarity measures  <cit> . for example, in a gene product interaction network, a functional module is a set of interacting gene products that share a biological process or pathway  <cit> . based on this they should display similar mf or bp annotations. this hypothesis was tested by lord et al. by estimating the correlation between gene annotation  and sequence similarity in set of human proteins  <cit> , since sequence similarity often is associated with functional similarity. also guo et al. performed an analysis on all pairs of proteins belonging to the same pathway, which showed higher similarity scores than expected when using bp annotation  <cit> .

for evaluation of the topoicsim similarity measure in this paper, two benchmarking datasets based on kegg pathways and pfam clans were used. these datasets have been obtained directly from  <cit> . the intraset similarity, discriminating power, and intraset discriminating power values were used for the evaluation. for all quality measures used to evaluate the estimated semantic similarity for these two benchmarking data sets topoicsim had the best result, except for dp values for the kegg dataset where the wang method had best performance.

another common scenario for testing the validity of semantic similarity measures is by testing their correlation with gene expression data. two gene products with similar function are more likely to have similar expression profile and share same or similar go terms. therefore a correlation between gene expressions of two gene products versus the semantic similarity measures can be used as a performance test. wang et al.  <cit>  compared semantic similarity to expression profile correlation for pairs of genes from the eisen dataset  <cit> . they showed that for all the considered measures, high semantic similarity is associated with high expression correlation. also sevilla et al. showed correlation between semantic similarity and expression profile, but they dramatically improved it by using grouped data  <cit> . we took this one step further by applying a som algorithm to clustering of gene products by expression and semantic similarities to select clusters with high correlation. the topoicsim was superior on the three tested datasets compared to all other similarity measures. finally, the evaluation with cessm showed that the topoicsim is a competitive measure relative to simgic, which is superior to all other similarity measures in the cessm test. however, in the other tests simgic had a more variable and sometimes very low performance, which means that topoicsim in general is a more robust similarity measure with a very good overall performance.

the robust performance was confirmed when we tested for annotation length bias, which has been identified as a potential problem for semantic similarity methods  <cit> . the analysis showed that although the score still showed some dependency on the number of annotations, the dependency in topoicsim was clearly lower than for other semantic similarity methods that have been tested. another potential problem is related to shallow annotation, where high-level go terms may lead to an overestimation of the similarity between genes. here topoicsim should be more robust to such bias than most other methods, due to its design. we have illustrated this with a simple example. finally, a benchmarking of running time for topoicsim showed good performance compared to intelligo.

CONCLUSIONS
in this study we present an improved method for semantic similarity which counts distribution of ic on the shortest paths between go terms and longest path from root to the common ancestors, weighted by their lengths. several strategies were applied to evaluate the topoicsim similarity measure. our results show that the topoicsim similarity measure is robust, in particular since it was among best similarity measures in all benchmarking tests performed here.

abbreviations
bp, biological process; cc, mf, cellular component; dc, distance correlation; dp, discriminating power; ec, evidence code; go, gene ontology; goa, gene ontology annotation; ic, information content; lca, lowest common ancestor; mf, molecular function; rdag, rooted directed acyclic graph; som, self-organizing map; sp, shortest path

