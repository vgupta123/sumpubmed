BACKGROUND
in the area of microarray data analysis, inferring gene-gene interactions involved in biological function is a relevant task. over the past few years several statistical and machine learning techniques have been proposed to carry out the inferring task of gene-gene interactions or gene regulatory networks. clustering algorithm represents one of the first approaches to support the identification of regulatory modules  <cit> . these approaches are motivated by a simple idea which is still widely used in functional genomic. it is called the guilt-by-association heuristic: co-expression means co-regulation, i.e. if two genes show similar expression profiles, they are supposed to follow the same regulatory regime.

in order to formalize the idea of similar expression, several statistical measures have been proposed as solution. in correlation methods, interactions are inferred using correlation statistics as pairwise similarity measures between gene expression profiles over multiple conditions, as for example in  <cit> . in this kind of methods, if the correlation between gene pairs is higher than a threshold value, then it is considered that these gene pairs interact directly in a signaling pathway and are relevant in a biological way  <cit> . these methods build gene co-expression networks, also known as gene association, gene interaction or gene relevance networks. these networks provide a framework for assigning biological function to group of genes as it was argued in  <cit> . correlation coefficient is widely used as a way of obtaining an association measure between two random variables but does not provide a causal measure between them. however, correlation is still informative about the underlying structure  <cit> . the causal properties that can be inferred from correlations have been investigated in  <cit> .

correlation-based methods are very useful to determine whether two genes have a strong global similarity over all conditions from the data set. this is an important constrain as there might exist a strong local similarity over a subset of conditions, which could not be detected with global similarity measures. in addition, many pairs of genes show similar behavior in gene expression profiles by chance even though they are not biologically related  <cit> , i.e. the significance of the results should be assessed in interaction networks.

on the other hand, gaussian graphical models  are a full conditional independence model. these models try to explain the correlation between two genes by the rest of the genes and they are a popular tool to represent gene association network  <cit> . recently,  <cit>  has proposed estimating partial correlations to attach lengths to the edges of the ggm, where the length of an edge is inversely related to the partial correlation between a gene pair. as a drawback, these models are hard to estimate if the number of samples is small compared to the number of variables. in contrast to ggms, other models try to explain the correlation between two genes not by the rest of the genes, but only by single third genes. this idea can also be implemented using sparse gaussian graphical model based on partial correlation  <cit>  or conditional mutual information to test for first-order independence  <cit> .

bayesian networks try to explain the dependence between genes if there are no subset of other genes that explain the dependency  <cit> . an example of bayesian networks can be found in  <cit>  where a stochastic expectation and maximization algorithm is used to learn a probabilistic model, and regression trees are used to learn graph topologies that maximize bayesian scores. recently,  <cit>  has revised the approach before using an ensemble method, and  <cit>  has incorporated prior knowledge from literature on bayesian networks. also, several approaches have been developed to build boolean networks  <cit> , or to infer regulatory rules  <cit>  using machine learning principles.

in this paper, we present a novel method inspired by model trees as a way to detect linear dependencies between genes and to set a group of gene-gene dependencies. from that set, our method provides as gene-gene interactions all those significant dependencies in a statistical sense. then, it builds undirected dependency graphs  from these gene-gene interactions. furthermore, our method analyzes which dependencies between genes are considered as a discovery by means of the benjamini and yekutieli procedure  <cit> . this statistical procedure enables the control of the expected proportion of false discoveries among all the discoveries made. one of the main contributions of our approach is that it addresses the issue of searching for local similarities arising from conditional regulatory relationships -instead of global similarities.

the remainder of this paper is organized as follows. in section method, a detailed explanation of the methodology and the algorithm are presented. in section results and discussion, experimental results tested on an in silico benchmark suite of datasets, yeast and e.coli data are provided. finally, section conclusions summarizes the most relevant conclusions and future research directions.

method
correlation methods are focused on the global match of two gene expression profiles, analyzing each possible pair of genes. instead, our approach analyzes each gene in an iterative way. at each iteration a gene is taken as target gene and the remaining genes as input for splitting the search space. in each subspace generated by that division, a linear model is built to identify a linear dependency between the target gene and a subgroup of genes, i.e. the target gene expression values are estimated by this subgroup of genes involved in that linear model. as a consequence, the dependency between the genes is not calculated for the complete gene expression profile, but for a localized subspace of the profiles using m5' model tree algorithm.

our method consists of three steps as it is depicted in figure  <dig>  the first step involves building m5' trees. m5' is a model tree algorithm, an extension of regression tree algorithms  <cit> , which has several linear models, each one of them built in a leaf of the tree. the aim of this step is to obtain a set of genes associated to other genes from their prediction ability by means of linear regression functions. we use model trees because these representations work like several linear regression functions at the same time, each of them identified by a leaf in the tree. the main advantage of this methodology is that each regression is specialized in a specific area of the search space, i.e. in a local subspace of gene expression profiles, hence the model tree is generally more accurate than a global linear regression.

the second step implies the extraction of the set of gene-gene dependencies from the forest of trees obtained by the previous step. specifically, our approach considers which hypothetical evidences of gene-gene dependency exist between the target gene and every gene participating in the linear regression functions of the target gene.

finally, the third step involves learning a graph model of gene co-expression network by assessing the significance of the set of hypothetical evidences. many sets of genes show similar behavior in expression profile by chance even though they do not share the same biological function. therefore, the aim of this step is to minimize the number of false discoveries among all those discoveries made in the previous step. for that reason, we apply a statistical procedure to control the false discovery rate instead of the increase of type i error when a family of hypotheses is being tested simultaneously. the reliability of our method is strengthened by applying the benjamini-yekutieli statistical procedure to assess the significance of the results.

building model trees
the first work on regression trees dates from  <cit> , although the most popular reference is the seminal work of  <cit> . later on,  <cit>  introduced the system m <dig>  it builds multivariate trees using linear regression functions at the leaves. m5' is introduced in  <cit> , a rational reconstruction of quinlan's m <dig> algorithm. throughout the description of model tree, we will refer to gene as attribute, and sample as instance space.

the algorithm m5' is divided into two phases. first, a tree is built by a decision-tree induction algorithm, and second, a pruning procedure is applied. given a gene as a target, m5' constructs a tree by recursively splitting the instance space. in this decision-tree induction algorithm the splitting criterion is based on treating the standard deviation, i.e. the attribute which maximizes the expected error reduction is chosen. after the tree has been built, a linear regression function is obtained for every internal node of the tree and the regression models are reduced by dropping attributes to minimize the estimated error on future data. the number of attributes in the linear regression functions decreases and the average error will offset over the training example. after this has been done, every subtree is considered for pruning. pruning takes place if the estimated error for the linear regression function at the root of a subtree is smaller than or equal to the expected error for this subtree. after pruning is done, m5' applies a smoothing process to compensate sharp discontinuities that occur between adjacent regression models at the leaves of the tree. finally, m5' has an associated relative error Îµ that will be used to reject some of the trees, those with low precision. the result is a forest of trees . this algorithm is described in  <cit> .

our approach takes each gene as a target gene and builds a model tree to predict the target gene expression values. by construction of model tree, linear regression functions are built to infer localized similarities over a more global similarity. figure  <dig> presents a hypothetical example, the correlation between the target gene and two other genes is weak, however we can observe two strong local dependencies between them.

extracting gene-gene dependencies
this step extracts a set of dependencies between the target gene and the genes involved in the linear regression functions from each tree. correlation-based methods extract gene-gene dependencies by computing a similarity score for each pair of genes. these methods are based on the assumption that two genes show similar expression profiles if they follow the same regulatory regime, i.e. coexpression hints at coregulation  <cit> . our approach analyzes each gene as a target by taking into account the remaining genes as inputs to obtain linear models that estimate the expression value of that target gene. we assume that the genes involved in these linear models control or influence the target expression value and they follow the same regulatory regime. this influence can be explained when several genes fit a specific area of the space, which leads to an evidence for dependency.

let lm be a multivariate linear model of a m5' tree defined by lm:gx=âiÎ»igyi, where gx belongs to the set of target genes, gyi, is a gene involved in the linear regression that belongs to the set of genes, and Î»i is a coefficient of the linear model. our approach considers that an hypothetical evidence of dependency or expression pattern exists between gx and every gyi, which will be statistically tested in the next step.

the output of this step is a set of gene-gene dependencies  that are potential interactions for the problem under study.

building the gene regression network
after obtaining the set of gene-gene interactions, the significance of these results must be assessed. the authors in  <cit>  have shown that for microarrays studies, the expected proportion of false discoveries among all the discoveries made  is more important than the low number of false discoveries or the small probability of making at least one false positive . for this reason we apply a statistical procedure in order to control the number of type i errors  among the number of discoveries when a family of hypotheses is tested simultaneously.

once the set of gene-gene dependencies  has been provided, our approach builds a graph q of interactions defined as a tuple  of |n| nodes and |e| edges. we will denote by gx~gy an hypothetical gene-gene dependency. our approach takes several gx~gy from d and the genes gx and gy are mapped as two nodes in the set of nodes n, and the dependency is mapped as an edge of the set e. this step, to decide which gx~gy is mapped onto an edge, i.e. which dependency is considered as a discovery, is carried out by means of the benjamini-yekutieli  procedure.

the by procedure is applied in order to test m null hypotheses h <dig> h <dig> ...,h0m. let p <dig> ..., pm be the corresponding p-values to m null hypotheses. let p â¤ p â¤ ... â¤ p be the ordered p-values. this procedure defines k as detailed in eq.  <dig> and rejects all hypothesis h <dig> h <dig> ...,h0k.

  k=max{i:pmiâk=1m1kâ¤Î±} 

if no such i exists, none of the hypotheses will be rejected. this procedure controls the proportion of false discoveries  among all the discoveries.

in this context, we will say that gx~gy is not an interaction in q* if and only if there is not any significant monotonic relationship between the two variables, i.e. h <dig> : Ïxy â  <dig> , taking into account the subspace of the input data identified by the leaf of the linear model in the m5' tree. if this null hypothesis is rejected at the significance level represented by Î±, this dependency is mapped into the graph. to test whether a significant monotonic relationship exists, we use the kendall's Ï  as non-parametric measure of association  <cit> .

algorithm
in order to formalize the algorithm, named regnet, several definitions are required.

definition  <dig> 
let m be the microarray data, defined as m=, where c={c <dig> c <dig> ...,cn}is a finite set of experimental conditions, g={g <dig> g <dig> ...,gm}is a finite set of genes, and â=is a n Ã m gene expression matrix, where vij = â  given by the level function â:cÃgââ.

definition  <dig> 
a partition Î  of a set s is a non-empty collection of non-empty subsets of s, Î  = {Ïi}i =  <dig> ..., p such that âÏi = s and Ïi â Ïj = â when i â  j for i, j =  <dig> ..., p. the set of partitions of s is denoted by part.

definition  <dig> 
a model tree mtj is aimed at estimating the values of the level function â for the column j, i.e. for the target gene gj , mtj = {}i= <dig> ..., q, where âªÏiâpart, and Ïi is a linear function defined on a subset of genes Î©iâgâ{gj}, i.e., Ïi:Î©i â â. therefore, each function Ïi will be applied in a subspace of conditions Ïi to locally estimate the level function of the gene gj.

given a relative error threshold for the model tree Î¸, then mtjÎ¸defines a non-empty model tree when its relative error Îµ is smaller than Î¸.

 mtjÎ¸={mtifâÎµ<Î¸âifâÎµâ¥Î¸ 

definition  <dig> 
the forest of model trees ft is the collection of every model tree mt generated from each gene gj,  <dig> â¤  j â¤ m, ft = {mt <dig>  mt <dig> ..., mtm}, where each mtj is built by minimizing the error Îµ at estimating the level function for gene gj and the conditions within Ïi by means of the functions Ïi.

definition  <dig> 
a gene g is potentially associated with the gene gj  if g appears in any of the Î©i of the corresponding functions Ï <dig>  Ï <dig> ..., Ïq defined at the leaves of the model tree mtj , whose target gene is gj . each function Ïi involves a set of genes Î©i related to gj , and therefore, all the genes associated with gj , represented as â³=âªi=1qÎ©i, constitute potential associations.

given a threshold Î¸ there is an association between two genes, gx~Î¸gy, if and only if gx belongs to the set of genes that form the regression of gy.

 gx~Î¸gyâgyâtgÎ¸â§gxâÎ 

where tgÎ¸ is the set of target genes

 tgÎ¸={gjâg|mtjÎ¸â â} 

definition  <dig> 
a gene regression network is a graph q defined for a given Î¸ as:

 q= 

where lg is the set of associated genes

 lgÎ¸={gâg|gâÎ,gjâtgÎ¸ 

and d is the set of dependencies

 dÎ¸={|gx~Î¸gy} 

the input is the gene expression matrix m, a threshold value Î¸ to prune the model trees generated, and the significance level Î± for the benjamini-yekutieli procedure. the output is a graph of interactions q* among the genes in g.

regarding the computational complexity of regnet, the cost of building the forest of trees is m times the cost of building a m5' tree, i.e. o), where m is the number of genes and n the experimental conditions; extracting the hypothetical dependencies is an iterative process which has a linear complexity o; and finally, the by procedure involves sorting the p-values calculated before, i.e., o). consequently, the overall cost of the algorithm is o).

RESULTS
the robustness of the methodology is shown by means of the analysis on an in silico benchmark suite of datasets, the saccharomyces cerevisiae cell cycle and the e. coli data set.

in silico benchmark suite of datasets
we tested our approach on a published in silico benchmark suite of datasets  <cit> . the goal is the prediction of network structure from the given in silico gene expression dataset. we use this suite as a blind performance test to compare our approach regnet against several benchmark methods.

we used the simulated steady-state gene expression datasets reported in dream <dig>   <cit> . the challenge is to infer  <dig> networks of size  <dig> hidden in  <dig> different experiments of microarray. for each network, the gnw tool  <cit>  is used to simulate three different experiments of microarray: the steady-state levels of single-gene knockouts ; knockdowns experiments by reducing the transcription rate of the corresponding gene by half; multifactorial experiment where each expression profile could be extracted from a patient.

for network inference, we applied several benchmark methods:

â¢ a heuristic algorithm for learning high-dimensional dependency networks from genomic data. we used the genenet r package to infer causal networks based on partial correlations. genenet implements the methods of  <cit>  and  <cit>  for learning large-scale gene dependency networks.

â¢ weighted-lasso for structured network inference implemented in the simone r package  <cit>  and  <cit> . this algorithm uses the glasso procedure to estimate a sparse inverse covariance matrix using a lasso  penalty.

â¢ for learning bayesian networks  we used the r package named deal  <cit>  and the r package named g1dbn http://cran.r-project.org/web/packages/g1dbn.

results reported here were obtained from genenet, simone and g1dbn. the task of learning bayesian networks  from data is np-hard with respect to the number of network vertices, i.e. bayesian methods are computationally intractable for a huge number of genes. the deal algorithm for learning bn was unsuitable to obtained networks because of the number of genes in the input microarray . the g1dbn was suitable to obtain networks because this algorithm performs dynamic bn inference using first order conditional dependencies as heuristic.

results reported by regnet and the benchmark methods are shown in figure  <dig>  in this graphic, the accuracy is represented for each of the fifteen synthetic data sets. m, o and d represent the microarray data set obtained from a multifactorial, knockout and knockdown experiment, respectively. results reported here by regnet were obtained with Î± =  <dig> .

our approach outperformed the results reported by g1dbn and simone in all the data set . in general, our approach showed higher accuracy. only in five out of fifteen data sets, out approach did not outperform the results obtained by genenet.

saccharomyces cerevisiae dataset
we use saccharomyces cerevisiae cell cycle expression data set  <cit> , which contains  <dig> genes and  <dig> experimental conditions. in the first experiment, the effect of pruning and non-pruning the forest of model trees is compared. simplifying the forest involves rejecting all the m5' trees that have a relative error greater than a threshold. for both experiments a level Î± =  <dig>  is fixed for the statistical by procedure. to analyze the biological coherence of the results we use gene ontology attributes to characterize the resulted genes derived from our algorithm. we use funcassociate  <cit>  to provide a measure  that determines whether the set of genes obtained is due to chance, or instead, to common biological behavior. furthermore, this tool calculates appropriate corrections for multiple hypothesis testing, such as westfall-young  <cit> .

the resulted genes are functionally enriched for go attributes and the great majority of these go attributes are related with ribosome cellular component, as we can see in table  <dig>  this table reports these go attributes, the number of genes in the subgraph with this attribute and the adjusted p-value less than Î± =  <dig>  provided by the funcassociate tool  <cit> . in the first subgraph, there can be seen several genes related with the small subunit of the ribosome that is found in the cytosol  of the cell. there are several genes that contribute to the structural integrity of these small ribosomal subunits which are involved in translation. specifically, our approach has found genes related with the biological process of aggregation, arrangement and bonding together of constituent rnas and proteins to form and maintain those small ribosomal subunits. in addition, there are several genes that are involved in the process of assembly and maintenance of the large subunit of the ribosome.

gene ontology attributes are used to characterize the genes obtained by our method from the yeast data set. it shows the biological analysis of the biggest subgraph i . the first column represents the number of genes in the subgraph with this go attribute, the second column is the adjusted p-value by westfall and young corrections and the third column is the name of the go attribute.

we run our algorithm again but we introduce a variation that involves rejecting all the m5' that has a relative error greater than 50%. this variation restricts the number of linear models taken into account in the learning process of gene-gene interactions. figure  <dig> shows the biggest subgraph obtained, which has  <dig> nodes and all of them belong to the first subgraph mentioned in experiment i.

the main contribution of this variation is that the size of the subgraph is reduced more than 50% with respect to experiment i, but the biological information is the same, as it can be noticed in table  <dig>  this table reports the biological study provided by go database, that relates most of genes to ribosome cellular component . in fact, all the go attributes in experiment i have remained in experiment ii, and they are obtained from the simplified forest .

biological analysis of the biggest subgraph from experiment ii .

in summary, the use of constrains to provide more accurate model trees does not have negative influence on the quality of results. selecting the best m5' trees from the forest reduces the size of the gene network without decreasing the quality of the results from a biological perspective.

escherichia coli dataset
the predictive performance of our approach was tested using escherichia coli  gene expression database from  <cit> . the e.coli gene expression database m3d  is used and e_coli_v3_build_ <dig> from t. gardner lab is built. this dataset consists of  <dig> arrays from  <dig> different collections corresponding to various conditions. the experiments were carried out on affymetrix genechip e.coli antisense genome arrays, containing  <dig> gene probes. a rma normalization procedure was performed on the data prior to the application of our approach and the benchmark method.

our approach regnet and a gene relevance network method based on partial correlation were applied. firstly, regnet was applied several times with different values as a threshold of pruning phase: 25%, 50% and 100%. second, the method proposed in  <cit>  is used to provide partial pearson and spearman correlations . partial correlation coefficients quantify the correlation between two variables when conditioning on one or several other variables, which seems closer to causal relationships.

we chose the e.coli k <dig> transcriptional network in the regulon database, version  <dig>   <cit>  as true gene interaction network. from this transcriptional network we derived a gene association graph of  <dig> interactions.

in absolute terms, there is a huge number of edges which does not correspond to any true edge from the ecoli k <dig> transcriptional network. this situation shows the complexity of the gene expression regulation system. however, if we focus only on relative terms, i.e. the number of true positives divided by the size of the inferred network, we can observe that regnet produces better results than the partial correlation-based methods. figure  <dig> depicts the low proportion of true positives for each method. however, regnet is much more selective, and builds smaller networks. for example, while  <dig> true edges are found in the regnet network with  <dig> interactions , the smaller network obtained by a partial correlation-based method had  <dig> true edges in the network with  <dig> interactions , when using the first-order pearson partial correlation. for zeroth-order partial correlations, the number of edges surpasses four millions of interactions.

CONCLUSIONS
inferring any type of relationship from data is a difficult task, particularly when non-linearity is present. gene networks provide a framework to analyze regulation and causality.

our approach, named regnet, generates new hypothesis of interactions among genes from gene expression data, and differs from correlation-based methods in that the relationship between one gene and others is calculated simultaneously, and statistically validated when all these genes show linear dependency only in a region of the space. our method is based on the idea that, given some control genes which define subspaces of the input data, multivariate linear models can be estimated for the target gene. regnet strongly favours localized similarities over more global similarity, which it is one of the major drawbacks of correlation-based methods.

experimental results show the good performance of regnet. the first experiment, with yeast cell cycle data, is consistent with gene ontology. the aim of the second experiment is to check the ability of finding true gene associations from gene expression data in comparison with e.coli transcriptional network from regulon database.

in general, regnet is a powerful method to hypothesize on unknown relationships, and therefore, on genes potentially related to biological functions.

authors' contributions
in refined the method and designed the experiments for testing the performance of regnet. jar conceived the method and leaded the project. jrs critically revised the computational and statistical steps of the method. all authors read, edited and approved the final manuscript.

supplementary material
additional file 1
yeastsubnet1- <dig> xls. gene-gene associations resulting from our approach using saccharomyces cerevisiae data as input. the correlation measure between pair of genes from the network is reported, together with the number of weak correlated genes detected by our approach focus on localized similarities.

click here for file

 acknowledgements
this research work is partially supported by the ministry of science and innovation, projects tin2007-68084-c02- <dig>  pci2006-a7- <dig>  and by the junta de andalucia, projects p07-tic- <dig> and tic- <dig>  we are grateful to the anonymous reviewers who provided valuable feedback on our manuscript.
