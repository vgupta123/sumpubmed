BACKGROUND
chromothripsis is a type of complex genomic rearrangement first characterized in  <dig>  <cit> . stephens et al. described a phenomenon wherein a chromosome appeared to shatter into hundreds of pieces, then haphazardly stitch itself back together. the resulting chromosomes possess a very high number of structural variations  including duplications, deletions and translocations  <cit> . the most striking feature of these derivative chromosomes is pronounced clustering of translocations and copy number aberrations to specific regions.

the exact mechanisms driving chromosome shattering remain unknown, however aberrant mitosis producing micronuclei  <cit>  and premature chromosome compaction   <cit>  have been implicated. similarly, the mechanisms driving the stitching process have yet to be determined, but recent work suggests that dna repair mechanisms such as non-homologous end joining , fork stalling and template switching  and micro-homology mediated break induced repair  are involved  <cit> .

recent genome sequencing studies have identified several classes of complex genomic rearrangements that appear to be derived from a single catastrophic event rather than numerous incremental steps. in  <cit> , zhang et al. discuss these phenomena, summarize current models, and consider the impact of massive chromosomal change on the development of diseases such as cancer. since the evolutionary processes that cause chromothripsis are unique, it is likely that chromothriptic genomes produce phenotypes quite distinct from genomes whose svs arise gradually over time. as such, identifying patients with signs of chromothripsis may lead to improvements in classification and thus help guide clinical decision making.

studies have indicated that there exists a certain amount of heterogeneity with respect to the genotypes of genomes resulting from chromothripsis. the complexity of the variations found in chromothriptic genomes vary somewhat between reported cases, however studies have also revealed a set of hallmark characteristics that are present in almost all cases, including: 

 <dig>  localization of structural variations to a few chromosomes  <cit> 

 <dig>  localization of structural variations within a chromosome to a specific region 

 <dig>  a low number of copy-number states, usually only two. typically, one of these is the normal copy number  state and the other is a deletion state indicating fragments of the genome that have been lost  <cit> 

 <dig>  a high number of transitions from the normal copy-number state to the aberrant one  <cit> 

 <dig>  in regions of normal copy-number, heterozygosity is preserved  <cit> 

 <dig>  chromosomal translocations demonstrate a high level of clustering in particular regions  <cit> 

 <dig>  short insertions at translocation breakpoints  <cit> , indicative of both nhej and mmbir 

 <dig>  the tp <dig> gene is nonsynonymously mutated  <cit> 

these hallmarks have been discovered in 2%-3% of all cancers  <cit>  and in approximately 25% of bone cancers  <cit> . more recent investigations have discovered chromothripsis in medulloblastomas  <cit> , acute myeloid leukemia  <cit> , in 5% of prostate cancers  <cit>  and in 18% of neuroblastomas  <cit> . additionally, chromothripsis has been discovered in the germ lines of a number of individuals suffering from developmental and congenital defects  <cit> . thus far, chromothripsis has been primarily identified using ad hoc methods which annotate a chromosome as having undergone chromothripsis if one or two of the chromothriptic hallmarks are detected. however, these methods are only employed after chromosomes are identified to be suspicious, typically by visual inspection. additionally, the criteria used to annotate a chromothriptic event vary between investigators, making comparisons cumbersome and casting doubts on relative frequency statistics. as such, there is an urgent need for standardized and unbiased metrics to quantify chromothriptic events.

we present a new approach, called shatterproof, that aims to address these shortcomings. shatterproof enables the efficient identification and quantification of chromothriptic events in next-generation sequencing data without the need to pre-screen for suspicious samples. shatterproof quantifies the degree to which chromothriptic hallmarks are expressed. the precise definition of chromothripsis including all of its features remains a contentious topic and until a single clear definition is decided upon, analyzing sequencing data with respect to the current set of hallmarks will enable further investigation and improved detection.

when provided with sv calls from next generation sequencing data, shatterproof generates metrics describing each of the chromothriptic hallmarks and analyzes these to identify locations in the genome where chromothriptic events have most likely occurred.

a standardized report that is both human readable and machine parseable is created. this report contains all of the metrics and probability values for potential chromothriptic events, enabling easier analysis and comparison across studies.

implementation
shatterproof is implemented as a perl module that processes input files and produces output files in both tab-delimited and yaml format  <cit> . perl version  <dig>  or greater is required. shatterproof was designed to be highly modular. this allows for sub-methods to be easily re-used and enabled robust testing of all stages of the pipeline. additionally, due to the very large range of input values, many design decisions focused on error-resilience. pre- and post-condition checking were employed to ensure correctness of calculations and processing. unit and regression testing consisting of  <dig> test cases ensure that correct behaviour of input parsing and score-generating methods is maintained.

input and workflow
shatterproof bases its analysis of genomic data on calls of svs, including translocations, copy number variations , loss of heterozygosity  and short insertions. currently, there is no gold standard tool for producing any of these. accordingly, shatterproof has been designed to work with output produced by any sv tool. in this way shatterproof will always be able to leverage the improving capabilities of newer identification tools in a seamless way. because different tools produce output in a different format, shatterproof requires that these be converted into simple tab delimited input file formats that contain only the information needed for chromothriptic analysis. input file formats were specified for each type of sv that would be analyzed: translocations, cnvs, loh events and short insertions. scripts to convert the output of some common sv tools to the input file formats required by shatterproof are provided with the shatterproof distribution. translocations are recorded in.spt files which contain the following fields: 

 <dig>  source chromosome

 <dig>  start position on source chromosome

 <dig>  end position on source chromosome

 <dig>  destination chromosome

 <dig>  start position on destination chromosome

 <dig>  end position on destination chromosome

 <dig>  quality of the call 

cnvs are recorded in.spc files which contain the following fields: 

 <dig>  chromosome

 <dig>  start position

 <dig>  end position

 <dig>  copy number

 <dig>  quality of the call 

loh events are recorded in.spl files which contain the following fields: 

 <dig>  chromosome

 <dig>  start position

 <dig>  end position

 <dig>  quality of the call 

additionally, shatterproof accepts insertion calls in vcf version  <dig>   <cit>  files. shatterproof analyzes the chrom, pos, ref, and alt fields of these files.

examples of each input file format can be seen in additional file  <dig> 

figure  <dig> illustrates the shatterproof work flow that produces the data structures containing the processed input data. shatterproof will generate the most accurate results if all four types of input files are provided, but can accommodate significant missing input data: only translocations and cnvs are required.

the data structures containing the sv calls, produced from parsing the input files, are then subjected to a sliding window analysis to compute metrics of sv density across the genome. the size of the sliding window is a user definable parameter. a smaller window increases base pair resolution but also increases running time and total memory consumption. a default window size of  <dig> mbp where each window overlaps with the previous one on  <dig>  mbps was selected as it produced calls with useful resolution in a reasonable running time . the metrics produced from the sliding window analysis are used to identify highly mutated regions by comparing region-specific sv density to genome-wide density using a z-scale approach. a chromothripsis score is then calculated for each highly mutated region as outlined below.

scoring
for each highly mutated region, a numerical score between  <dig> and  <dig> is calculated to indicate the likelihood that chromothripsis has occurred. this score is: 

  ∑n=1n 

where, n is the total number of hallmarks, hallmark weightn is a numerical representation of how significantly the hallmark indicates chromothripsis  and hallmark scoren is a measure of the degree to which the region exhibits this hallmark.

hallmark weights
certain hallmarks are more indicative of chromothripsis than others. for example, the localization of translocations and cnvs to a specific region in the chromosome is a stronger indicator than is the presence of a tp <dig> mutation or the presence of short insertions at translocation breakpoints. indeed, localization of translocations and cnvs to a specific region of a chromosome was found in all cases of chromothripsis whereas this was not the case for the tp <dig> mutations  <cit> . to account for the varying significance of hallmarks when generating the chromothripsis score, multi-criteria analysis   <cit>  was used to calculate hallmark weightings. this process produces values that quantify the relative importance of qualitative attributes. libreoffice  was used to perform the mca calculations . intermediate values can be found in appendix a . the resulting weights are shown in table  <dig> 

the value of these weightings can be user customized depending on the relative quality of input data that is being given to shatterproof. for example, if very high quality translocation calls are produced, a user can choose to increase the weight of the translocation hallmark so that it makes a larger contribution to the final score.

hallmark scores
shatterproof calculates hallmark scores for each highly mutated region by performing statistical analysis on the sv data for that region. each score is in  <cit> , where  <dig> indicates that the hallmark is strongly represented in the region and  <dig> indicates the hallmark is not represented at all. figure  <dig> illustrates the shatterproof work flow that produces the hallmark and final chromothripsis scores for each highly mutated region. the following sections describe the equations used to calculate the score for each chromothriptic hallmark.

genome localization
the density of svs in each chromosome is determined by summing the number of translocations breakpoints and cnv breakpoints, scaled by the total chromosome length. a translocation breakpoint is defined as one end of a translocated region, therefore all translocations are comprised of four breakpoints, two from the originating chromosome and two from the destination chromosome. a cnv breakpoint is defined as one end of an amplified or deleted region, therefore all cnvs are comprised of two breakpoints. if translocations or cnvs occurs at the end of a chromosome  a breakpoint is inserted after the last base pair of the chromosome. if a sv occurs at the start of a chromosome, a breakpoint is placed before the first base pair of the chromosome. the genome localization score for a highly mutated region is calculated from the z-score for the sv density of the chromosome in which it is found. this z-score is converted to a right-tailed p-value via the standard normal distribution, giving a genome localization score as: 

  genomelocalizationscore= <dig> −p <dig>  

to avoid multiple-testing, scores will only be calculated for chromosomes whose sv density is greater than the mean of all chromosomes, resulting in z-scores always being greater than  <dig>  as such, the right-tailed p-value  will have a maximum value of  <dig>  and a minimum value of  <dig>  a genome localization score near  <dig>  indicates that the sv density of the suspect chromosome is much greater than the mean of the sv densities of all the chromosomes, and a score near  <dig>  indicates that the sv density of the suspect chromosome is close to the mean and thus is insignificant.

chromosome localization
to calculate the chromosome localization score for a highly mutated region, the sv density of the region is compared to the overall sv density of the chromosome using pearson’s chi-squared test with one degree of freedom. the test statistic is calculated as: 

  χ2=2svdensitychromosome 

low number of copy-number states and high number of copy-number state oscillations
chromothripsis is characterized by a low number of different aberrant cn states and a high number of cn state oscillations  <cit> . to quantify this, a higher cnv score is given to regions that have only one or two aberrant cn states and a high density of cn state oscillations. for example, a region with  <dig> different aberrant cn states, each contributing  <dig> cn state oscillations to the region, would receive a lower cnv score than a region with only  <dig> aberrant cn state that contributed  <dig> cn state oscillations. to achieve this sensitivity, we calculate: 

  cnvscore=1nsignificant1−11+log <dig> 

nsignificant is determined from the standard deviation of the number of regions at each aberrant cn level. the z-score for each value is then calculated and nsignificant is set to the number of values that have a z-score greater than - <dig> . this is done to filter noisy calls that incorrectly add cn states to the region. as such, the first term in the equation reduces the aberrant cn score as the number of cn states that contribute a significant number of events increases. the second term increases the aberrant cn score as the number of region contributed by significant cn states increases and gives more power to cn state oscillations contributed by a single cn state versus those contributed by many cn states.

translocation localization
the equations that are used to calculate this hallmark score aim to give a high score to regions that have a high number of localized translocations and give a low score to regions with only a few translocations that are not localized. for each highly mutated region, chromosomes involved in a translocation with the region are identified and, for each of these, a list of translocation breakpoints is generated. for example, if in a highly mutated region found in chromosome  <dig> there exists an inserted fragment that matches a sequence in chromosome  <dig>  then the breakpoints on chromosome  <dig> that delimit the translocated fragment will be recorded. additionally, if in the same highly mutated region there exists a sequence that matches an inserted fragment on chromosome  <dig>  then the breakpoints on chromosome  <dig> that delimited this fragment will be recorded. the translocation score is then:

  spread=∑i=1cbi+1−bic 

  spread factor=log−log 

  weighted sum=∑n=1nsigcn <dig> 

  translocation score=1− <dig> ×1−1log <dig> 

the value of nsignificant in equation  indicates the number of chromosomes that share a significant number of translocation with the highly mutated region. nsignificant is determined by calculating the standard deviation of the number of translocations between each chromosome and the region, and then calculating the z-score of each value. nsignificant is the number of z-scores that are greater than a user definable value. by default this value is - <dig>  which serves to remove the chromosomes with translocation counts in the bottom 3% of all the counts. this prevents low-value outliers from over influencing the translocation score. if nsignificant is greater than  <dig>  then the value of the first term in equation  and thus the entire translocation score is set to  <dig>  the default cut-off value of  <dig> reflects our observation that most documented cases of chromothripsis only had translocation between a small number of chromosomes. if the value of nsignificant is  <dig> then the value of the first term is set to  <dig> 

the second term in equation  increases the score as the total number of translocations to or from the highly mutated region increases. the weighted sum is a scaled sum of the translocation counts of each significant chromosome. this value is calculated in equation . cn is the number of translocations from significant chromosome n and ct is the total number of translocations from all significant chromosomes. thus the translocation count for each chromosome is scaled by the fraction of the total number of translocations that are contributed by that chromosome. additionally, the count from each chromosome is scaled according to the spread of the translocation breakpoints along that chromosome. the larger the spread, the more the translocation count is reduced and the smaller the spread the greater the count is amplified. to determine the spread factor, the calculated spread is compared to the expected spread in equation .

the spread for each chromosome is determined by first calculating the difference between adjacent terms in an ordered list of the breakpoints on the chromosome. these breakpoints correspond only to translocations that are to or from the highly mutated region. the standard deviation of the separation values is then determined and values that are found to have a z-score greater than  <dig>  are disregarded. high-value outliers are removed from the calculation in order to not penalize cases where there are multiple small groups of localized translocation breakpoints, each separated by some relatively large distance. the spread is then calculated in equation  as the mean of the remaining separation values. the combination of these equations gives a high score to regions with very localized translocations between one or two chromosomes.

regions of retained heterozygosity
to calculate the heterozygosity score for a highly mutated region, shatterproof first makes an estimate about how much heterozygosity should remain in the mutated chromosome. shatterproof assumes that all the regions between any cnv are heterozygous, then using any experimental loh data, it calculates the percentage of predicted heterozygous regions that overlap with regions of loh. the heterozygosity score is:

  heterozygosityscore=1−amountoflohoverlapamountoforiginalheterozygosity 

high loh overlap indicates a large loss of heterozygosity, resulting in a low score. limited overlap indicates that most heterozygosity between cnvs is preserved, resulting in a high score.

short insertions at breakpoints
the breakpoint insertion score is calculated by determining the fraction of translocation breakpoints in a highly mutated region where short insertions are found within  <dig> base pairs of the breakpoint.

  shortinsertionscore=numberofbreakpointswithinsertionstotalnumberofbreakpoints 

the greater the fraction, the higher the score.

tp <dig> mutations
the tp <dig> mutation score is simply a  <dig> or  <dig> depending on whether or not the user indicates that a non-synonymous mutation is present in the tp <dig> loci. this feature can be used if tp <dig> mutations are identified via non-sequencing techniques. additionally, shatterproof will scan input data and determine if any mutations are present in the  <dig>  - <dig>  mbp region of chromosome  <dig>  if mutations are found, shatterproof will note in the final output file that tp <dig> mutations were discovered, however these mutations will not affect the chromothripsis scores.

output
shatterproof produces a number of different output files which summarize the analysis that it performs. the output files can be divided into three categories: final report, intermediate data, and tp <dig> mutations.

the final report file lists the regions where shatterproof has found strong indications of chromothripsis. for each suspect region, the output file contains the chromosome, start and end position of the region, the chromothripsis score, and additional statistics about each of the chromothriptic hallmarks. yaml was chosen as the output format so that it would be both human readable as well as easily machine parseable. a sample final report file is shown in appendix b .

the intermediate data output files contain: 

•the results of the sliding window analysis of the sv clustering

•the number of cn state oscillations on each chromosome

•the overall sv density of each chromosome

•a list of the number of aberrant cn states present on each chromosome

•a list of the number of translocations that occur between each and every chromosome

intermediate data output files are tab delimited so that they can easily be graphed using software such as r or matlab. for example, the data from the sliding window analysis of a sample chromosome was visualized using r .

RESULTS
validation
to validate the accuracy of shatterproof, we ran the tool against  <dig> separate whole-genome sequences .

all sequences were aligned using novoalign . translocation calls were produced using breakdancer   <cit> . only translocation calls that had a confidence score greater than  <dig> were considered. when running both the pre-processing and main phase of breakdancer, no command line options were supplied. control-freec   <cit>  was used to produce cnv calls for all of the samples. see additional file  <dig> for the configuration file used to run control-freec.

we first ran shatterproof on  <dig> normal reference samples. shatterproof produced an average of  <dig> calls  per sample with a median score of  <dig>  . the low number of calls produced and their low scores are consistent with the fact that these samples contain few svs that are not highly localized. this provides a background distribution for shatterproof.

next, we ran shatterproof against data from the  <dig> samples from the living tumor lab . four replicate libraries were provided for each sample, previously described by wu et al. <cit> . the samples were found to bear both the translocation and cnv hallmarks of chromothripsis on chromosomes  <dig>   <dig>   <dig>  and  <dig>  with translocation breakpoints clustered very closely to the cnv breakpoints resulting in a few localized regions of very high sv density on those chromosomes. wu et al. utilized data from both rna and dna sequencing to produce accurate sv calls which they then further analyzed to call chromothripsis  <cit> .

to produce the translocation and cnv calls that were given to shatterproof, we provided breakdancer and control-freec with dna sequencing data from each of the  <dig> replicate libraries. running shatterproof with these sv calls produced an average of  <dig> chromothriptic calls  per replicate with a median score of  <dig>  . the regions which were scored highest by shatterproof, with scores ranging from  <dig>  to  <dig> , correspond to those previously identified as highly chromothriptic  <cit> . specifically, shatterproof produced  <dig> calls with scores greater than  <dig> , all of which came from chromosomes  <dig>   <dig>   <dig>  or  <dig>  these results demonstrate shatterproof’s ability to accurately call chromothripsis from dna sequencing data alone. see additional files  <dig> and  <dig> for diagrams of translocation and cnv calls.

we also acquired the colorectal adenocarcinoma and sclc data sets used in the first description of chromothripsis  <cit>   and performed our own analysis on these samples.  <cit>  identified chromothripsis as having occurred on chromosome  <dig> of the colorectal adenocarcinoma sample and on chromosome  <dig> of the sclc sample. providing shatterproof with translocation and cnv calls from the colorectal adenocarcinoma sample produced  <dig> chromothriptic calls  with a median score of  <dig>  . see additional file  <dig> for a diagram of translocation and cnv calls. similarly, when shatterproof was used to analyze the sv calls from the sclc sample,  <dig> chromothriptic calls were produced  with a median score of  <dig>  . see additional file  <dig> for a diagram of translocation and cnv calls. in both cases, the highest scoring calls identified the regions of these genomes that were described as bearing hallmarks strongly indicative of chromothripsis  <cit> .

additionally, we ran shatterproof against  <dig> primary prostate adenocarcinoma samples, which have not previously been described. shatterproof produced an average of  <dig>  calls per sample with a median score of  <dig>  . while these samples had a higher total number of svs than samples from other sets, a lack of clustering of translocations and cnvs resulted in low chromothripsis scores. to ensure the robustness of these results, we validated our predictions using pcrbased analysis of the breakpoints . we also verified that similar score-distributions and conclusions were obtained using diverse sv-callers , providing confidence that our conclusions are independent of the sv-calling algorithm.

the results from the analysis of the prostate adenocarcinoma samples that had not previously been described, demonstrates the important fact that shatterproof produces scores which primarily reflect the organization and clustering of svs as opposed to simply the absolute counts of translocations and cnvs. figure  <dig> illustrates how the chromothripsis scores that shatterproof produces are in fact uncorrelated with the absolute counts of translocations and cnvs.

we see in figure  <dig> that shatterproof scores are not simply a measure of the number of svs in a sample. rather, the scores produced by shatterproof reflect the extent to which a sample exhibits the hallmarks of chromothripsis. figure  <dig> also demonstrates the fact that many cancer samples with very high rates of genomic instability will produce low scores that are similar to those of normal samples if chromothriptic hallmarks are not discovered. figure  <dig> illustrates how the hallmark scores for the highest scoring region in each sample contributed to the final score for that region.

we found that the calls shatterproof produced for the blood normal samples had a maximum value of  <dig> . figure  <dig> illustrates how the samples that were known to be chromothripsis positive  all produced multiple calls with scores that were greater than  <dig> . furthermore, it is the case that all of these high scoring calls correctly identified regions that had been identified in other studies as being chromothriptic.

based on these two findings, we suggest that when running shatterproof with the default hallmark weightings, a call with a score that exceed  <dig>  identifies a region of the genome in which it is likely that chromothripsis has occurred. using this cut-off we analyzed the results that shatterproof produced for the  <dig> prostate adenocarcinoma samples which had not been previously analyzed for signs of chromothripsis. we found that  <dig> calls with a score that exceeded  <dig>  were produced. this strongly suggests that none of these tumor samples have experienced any chromothriptic events.

performance
shatterproof performance is most dependent on the genome bin size parameter. this parameter defines the size of bins into wich the genome is divided. a smaller bin size will require shatterproof to consume more memory and cause the sliding window analysis to take longer. specifically, memory consumption and runtime are inversely realted to bin size ). additional file  <dig> illustrates this relationship. changing the window size or number of input lines  has a limited effect on performance relative to changing the bin size. however, in general, increasing the window size decreases the time required to perform the sliding window analysis and increasing the number of input lines increases run time as well as memory consumption. testing was performed using a single core  xeon cpu e <dig> @  <dig>  ghz) with  <dig> gb of physical memory. when shatterproof was run using the default config file supplied with the shatterproof distribution , it consumed  <dig> mb of memory and its run time was on average  <dig> seconds with a standard deviation of  <dig>  seconds across  <dig> trial runs.

discussion
use of shatterproof will mitigate the shortcomings of ad hoc characterization by generating a wide range of detailed metrics which allow for more accurate identification and precise quantification of chromothriptic events. shatterproof relies on sv calls that are produced by other tools and as such its output is dependent on the tools chosen as well as their parameterization. consequently, shatterproof scores are not directly comparable if different tools were used to produce input data. additionally, if the hallmark weightings used to produce scores are different between projects, then direct score comparisons will be ambiguous. however, shatterproof provides a standardized pipeline that allows researchers to quickly identify chromothripsis in large amounts of data and produce detailed metrics which can be easily reproduced by others.

the definition of chromothripsis, including what exactly are its hallmarks, remains controversial. at time of writing there is no singular and clear definition of chromothripsis, and as such shatterproof must rely on heuristics in order to identify chromothriptic candidates. realizing that the definition of chromothripsis may change over time, we designed shatterproof to use many user-definable parameters so that as the definition of chromothripsis evolves, the tool could be easily adapted to continue to provide accurate analysis of data.

indeed, we hope the data produced by shatterproof will help lead to a more detailed and concrete characterization of chromothripsis by giving a common and extensible language for describing this phenomenon. future development work planned for shatterproof includes augmenting the scoring equations to consider the quality values of sv calls when calculating hallmark scores. additionally, we are investigating using machine learning to improve the precision of identification. as sequencing of additional chromothriptic tumours happens, training sets can be created and used to obviate the need for hallmark weightings and lead to a better characterization of chromothriptic events.

CONCLUSIONS
the discovery of chromothripsis has revealed a new mechanism by which cancer genomes evolve. the wide variety of cancers in which chromothripsis occurs speaks to the importance of further investigation. shatterproof accurately and efficiently annotates occurrences of chromothripsis in genomic data and can easily be integrated into existing sequence analysis pipelines. use of shatterproof will enable researchers to quickly screen a large number of samples and thus improve the detection rate of chromothripsis. as the prevalence of whole-genome sequencing increases, the need for tools such as shatterproof which allow the rapid and accurate analysis of large-scale data will continue to increase.

availability and requirements
project name: shatterproof

project home page:http://search.cpan.org/~sgovind/shatterproof

operating system: platform independent

programming language: perl

other requirements: perl version> <dig> 

license: gnu gpl v <dig> 

any restrictions to use by non-academics: none

abbreviations
sv: structural variation; cnv: copy number variation; vcf: variant call format; cn: copy number; loh: loss of heterozygosity.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
the project was initiated by pcb and skg. the analysis algorithm and software were designed and implemented by skg with assistance from az. sample tumor data was provided by mf, tvdk, aww, ccc and by rgb. input data was produced by skg, az, and phh. data visualization was performed by skg and ca. shatterproof was run and the results were analyzed by s.k.g. the initial paper was written and figures were produced by skg. jdw performed pcr validation of a subset of the translocation calls. all authors approved final draft of the paper. pcb, rgb, ccc, and jdm provided project supervision. all authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary figure  <dig> - example input file formats. examples of the three types of input file formats that shatterproof reads.

click here for file

 additional file 2
mca calculation matrix. spreadsheet document used to calculate hallmark weightings.

click here for file

 additional file 3
appendix. the appendix includes a more detailed description of the mca process as well as a sample final report file.

click here for file

 additional file 4
freec configuration file. configuration file that was used to run control-freec.

click here for file

 additional file 5
supplementary figure  <dig> - clustering of svs to chromosome  <dig> , <dig>  and  <dig> of prostate adenocarcinoma genome . circos plot of prostate cancer adenocarcinoma genome . from outermost ring going inward each ring indicates: cytogenetic bands, genetic density, histogram of cnv locations, and link diagram of translocation data . the plot demonstrates clustering of structural variation to chromosomes  <dig> , <dig>  and  <dig> 

click here for file

 additional file 6
supplementary figure  <dig> - clustering of svs to chromosome  <dig> , <dig>  and  <dig> of prostate adenocarcinoma genome . circos plot of prostate cancer adenocarcinoma genome . from outermost ring going inward each ring indicates: cytogenetic bands, genetic density, histogram of cnv locations, and link diagram of translocation data . the plot demonstrates clustering of structural variation to chromosomes  <dig> , <dig>  and  <dig> 

click here for file

 additional file 7
supplementary figure  <dig> - clustering of svs to chromosome  <dig> of colorectal cancer genome. circos plot of colorectal cancer genome. from outermost ring going inward each ring indicates: cytogenetic bands, genetic density, histogram of cnv locations, and link diagram of translocation data . the plot clearly demonstrates a clustering of structural variation to chromosome  <dig> 

click here for file

 additional file 8
supplementary figure  <dig> - clustering of svs to chromosome  <dig> of sclc genome. circos plot of sclc genome. from outermost ring going inward each ring indicates: cytogenetic bands, genetic density, histogram of cnv locations, and link diagram of translocation data . the plot clearly demonstrates a clustering of structural variation to chromosome  <dig> 

click here for file

 additional file 9
pcr validation methods and data. this document contains the methods used to perform pcr validation on a subset of the translocation calls presented in the paper as well as the specific primer sequences and the validation results.

click here for file

 additional file 10
supplementary figure  <dig> - run time and memory consumption. these plots illustrate the inverse relationship between run time/memory consumption and bin size. the error bars on the run time vs bin size plot indicate the range of times that were observed across  <dig> trial runs. no error bars are present on the memory consumption vs bin size plot as we found memory consumption to be consistent between trial runs using the same bin size.

click here for file

 acknowledgements
this study was conducted with the support of movember funds through prostate cancer canada and with the additional support of the ontario institute for cancer research to p.c.b. and j.m. through funding provided by the government of ontario. dr. boutros was supported by a terry fox research institute new investigator award.
