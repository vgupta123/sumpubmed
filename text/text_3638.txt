BACKGROUND
in recent years, the inference of protein interaction networks from various sources of data has become an important topic of both systems and computational biology. protein networks can be represented as a graph with vertices formed by proteins and edges connecting two proteins representing the relationship between them. the interaction can be either direct, where two or more proteins form a functional complex, or indirect – biochemical or regulatory. the biochemical interaction can be, for example, the participation of two enzymes catalyzing two successive biochemical reactions in a pathway. regulatory interaction represents binding of a transcription factor to a promoter site, which initiates transcription of a particular gene precursor of a protein.

the diversity of protein "interactions" implies also diverse types of data ranging from literature references and sequence database annotations, through biophysical and biochemical data to the data from microarray and proteomics experiments. the type of data predetermines also the type of interaction studied. in this paper we focus on the gene expression networks, where a regulator protein controls expression of a gene precursor of the corresponding protein.

in the last few years, several approaches to the integration of various data sources into one computational framework for inference of network structures have been reported. particularly suitable for this approach is the concept of kernels  <cit> . the concept allows for transformation of various data types into kernel matrices, in which each element represents an interaction between two proteins. as an example of use of kernels in computational biology can serve the methods for the prediction of protein-protein interactions from sequences  <cit> . the kernels can be weighted and combined according to the kernel rules, in order to integrate various diverse sources of information, which can be used to predict protein interaction networks. in  <dig>  yamanishi et al. <cit>  introduced a supervised approach inspired by spectral clustering for inference of protein networks from multiple data sources, e.g. expression data, protein interaction data, localization data and phylogenetic profiles. they rose an important assumption that interacting proteins  share similarities in the data. based on this assumption, they created a kernel representation of the multisource data of partially known genetic network of saccharomyces cerevisiae. this representation was used as a training set, which was projected onto a conceptual feature space where interacting proteins were grouped. unknown interactions of the proteins of the training network with other candidate proteins were inferred using canonical correlation analysis. thus, the authors were able to make new biological inferences about unknown regulatory interactions; they were also able to predict missing enzymes in biochemical pathways.

another approach using kernels for protein interaction network inference, also based on a kernel matrix completion problem, was proposed by kato et al. <cit> . missing entries, i.e. protein regulatory interactions, other than those used as a training set, were predicted according to the rules derived from the known entries of the training set. in addition, they introduced a system for estimation of the weights assigned to the individual datasets, which differentiated among the levels of influence of the different data types. the obvious drawback of any kernel method for the interaction network prediction is the limitation to the prediction of undirected interactions. however, besides others, the greatest advantage of the kernel methods is the possibility of integrating the data sources of different character into one mathematical framework.

the supervised interaction network prediction is based on the assumption that the rules which define connections between proteins in the interaction network can be extended to the proteins of an unknown network. the unknown network is then an expansion of the training network. figure  <dig> illustrates this concept.

our algorithm focuses on identification of missing interactions in a transcriptional regulatory network. we assume that it is possible to project a protein  to a feature space where the proteins connected in a network are close to each other. projecting other proteins into the same space can reveal the unknown searched interactions. we assume that the features of an incomplete network can be extended to other, as yet unknown, interactions among proteins of the incomplete network and other proteins . for the projection of the incomplete network to the conceptual feature space we use its representation by the diffusion kernel combined with kernel principal component analysis . for the projection of proteins with unknown interactions with the sub-network, we use their gene expression profiles over time and a function representing relations within the kernel. the function is derived using genetic programming .

our method was applied to two already known transcriptional regulatory networks of the saccharomyces cerevisiae cell cycle  <cit>  using microarray time series data published by spellman et al. <cit> . other possible interactions, such as protein protein interactions, or indirect biochemical interactions, are in this study ignored; therefore the results obtained here are valid exclusively for regulatory interactions in gene expression.

RESULTS
from eq.  <dig>  we see that the projection onto the feature space depends deeply on the approximate functions fi created by gp. therefore, the control parameters of gp are determined in such way that eq.  <dig> is best satisfied using the fitness function defined by eq.  <dig> 

the details of derivation of the control parameter values can be found in the supplementary materials . the parameters used are listed in table  <dig> 

experiments
we used the data from the database of the gene expression profiles of saccharomyces cerevisiae  <cit>  and two protein networks inferred by lee et al. <cit>  to test the algorithm. lee et al. in their work identified dna protein interactions for a set of transcriptional regulators in the genome wide location analysis and inferred interactions for five functional gene groups , and, all together,  <dig> genes.

the spellman's database was collected using dna microarrays and samples collected from growing yeast cultures synchronized by three independent methods: alpha factor arrest , elutriation , and arrest of a cdc <dig> temperature-sensitive mutant . the database is available at  <cit> . although both of these datasets are relatively old, they have been extensively studied in the literature on regulatory networks, thus providing an excellent benchmark for model validation and comparison.

two protein networks, namely cell cycle and dna/rna/protein biosynthesis identified by lee et al., served here as a template for comparison with the results of the algorithm we have now presented. parts of the networks were used as training sets  and the remaining interactions were inferred using the trained algorithm and the genes presented in the work of lee et al. such arrangement simulates a situation where only a very limited part of a network is known. in reality, such sub-network can be inferred either from measurements or from a literature surveys. here we identify the rest of the network using the presented algorithm. in this test example, the complete network is known a priori . the prior knowledge allows us to assess the performance of the algorithm by comparison of predicted interactions and interactions inferred from the independent source, the work of lee et al. for this reason the same set of genes as in the work of lee at al. was used ). the trained algorithm was applied to the expression profiles of these selected genes. the networks inferred by lee et al. and the selected training sub-networks are plotted in figure  <dig>  the results, i.e. predicted interactions, are listed in table  <dig> and figure  <dig> . for the independent verification of the results of our algorithm and the experimental results of lee et al., information about the documented and potential interactions among yeast genes and gene products from the yeastract database was used. the yeastract  represents one of the most comprehensive data sources about regulatory interactions in yeast. it is a curated repository which, in the time of publication of this paper, comprised more than  <dig> regulatory associations between transcription factors and target genes in saccharomyces cerevisiae, based on more than  <dig> bibliographic references. it also included the description of  <dig> specific dna binding sites for more than a hundred characterized transcription factors.

for the cell cycle network, the interactions were inferred using the presented algorithm for the following arbitrarily chosen genes – ace <dig>  skn <dig>  swi <dig>  swi <dig>  while from the dna/rna/protein biosynthesis network, two genes were chosen – abf <dig> and rap <dig>  table  <dig> shows the result of application of the algorithm. figure  <dig>  shows the graph of interactions for the two networks suggested by lee et al. and a comparison of the lee et al. and our results for the selected genes. in the majority of cases, both methods gave similar results. however, our algorithm suggested some more interactions and did not infer some which were predicted by lee et al.  <dig> interactions which were not predicted by lee et al. were suggested by our algorithm. out of them  <dig> were confirmed by comparison with yeastract database. remaining  <dig> are considered here as false positive. these interactions remain to be confirmed or rejected by future studies.

for the abf <dig> gene, our algorithm suggested additional interactions with fzf <dig> and hap <dig>  a hap <dig> interaction was also confirmed by yeastract. for rap <dig>  new interactions with sum <dig>  hap <dig> and gat <dig> were suggested but not confirmed by yeastract. on the other hand, both methods inferred self control of rap <dig> which was not found in the yeastract database. for the cell cycle gene ace <dig>  our algorithm did not find interactions with yap <dig> that were suggested by lee et al., consistently with the yeastract, which also did not record any regulatory interactions between this gene and ace <dig>  for skn <dig>  in contrast with lee et al., an interaction with sfl <dig> was not identified by our algorithm. an interaction of skn <dig> with fkh <dig>  found in yeastract, was also suggested by our algorithm. for swi <dig>   <dig> additional interactions were suggested by our algorithm, out them  <dig> were confirmed by yeastract. for the other interactions, predicted by our algorithm, comparison with literature did not confirm them. the interaction with ndd <dig> suggested by lee et al. was not found, in accordance with the yeastract database, which also did not report any regulatory interactions between these two genes. for swi <dig>  our algorithm did not identify interaction with gat <dig> and sfl <dig> reported by lee et al. these interactions were also not found in yeastract. in contrast both methods suggested an interaction between swi <dig> and ndd <dig> which was not confirmed by yeastract.

we run the algorithm with a smaller training network ) for each of the control networks mentioned above. even in this case the algorithm found 40% of genes in agreement with the yeastract database. overall overlap with the results obtained with the original training network was 37%. the results suggest that –  <dig>  that the algorithm can give acceptable results even in the case of relatively small training network  and –  <dig>  in order to improve the reliability of the results it is advisable to run the algorithm several times for different training networks of similar sizes and select genes which are identified in all or most of the runs. such approach is common in any evolutionary algorithm based methods.

it can be concluded that the two results  obtained by principally two different method gave in most cases identical results. our algorithm provided suggestion of additional interactions which were not found by the lee et al's. experiments. suggested interactions which were not confirmed remain for future verification.

discussion and 
CONCLUSIONS
gene control is a time evolving process initiated by binding of a particular regulator  to the promoter region of the regulated gene. after that, transcription is initiated and the particular mrna is synthesized. recording of the changes of ideally all mrna amounts over time therefore encodes the information about the regulatory event and, in principle, allows reverse identification of the interactions. in the literature concerning the regulatory network inference, it is frequently assumed that the dependence between protein and mrna concentration is linear. therefore, transcriptional control networks have been inferred from gene expression time series. although this assumption is coarse, the protein concentrations of transcriptional regulators are difficult to measure, and the microarray data are the best available.

here, we assume that unknown regulatory interactions of proteins sharing similar function can be deduced from a known sub-network  and the gene expression time series. in order to infer the unknown interactions, the known sub-network, that is a part of a complete hypothetical network, was projected to a feature space where the interactions among the nodes of the network are easier to identify. the projection of the sub-network was made using kernels. functions describing the relations in the sub network kernel rows were identified using genetic programming. the functions are required for projection of the unknown potential regulators to the space of the sub-network. interactions of the proteins of the training network with the potential regulators were inferred by application of the trained algorithm to the expression profiles of the potential transcriptional regulators.

here, we used a set of proteins whose interaction network was independently identified previously  <cit>  and compared our results with the lee's et al. predictions. both methods were verified by comparison of the results with independent databases of regulatory interactions yeastract. results show that our algorithm gives, in most cases, results identical with the experiments made by lee et al., when compared with the yeastract data, our algorithm suggests additional interactions which were not found in literature. most of the differences between our results and the results of lee et al. are concentrated into two genes , when our algorithm gives predictions of interactions which are neither listed in the work of lee et al. nor in the yeastract database . we have made a medline search in the attempt to find other possible literature references, but among the thousands of records, we were not able to find those confirming the predicted interactions. here we consider them as false positives. nonetheless, as the method proved to be very efficient in the prediction of gene control, they can also be considered as suggestions for further experimental verification. it is necessary to emphasize that the networks reconstructed using kernel methods are in general undirected.

the results of the network reconstruction generally depend on the size of the training network; the bigger it is the more reliable are the predictions. also, as for the other evolutionary algorithms, the reliability of prediction can be increased by running the algorithm several times for different training networks.

although this work utilizes the time series and a diffusion kernel, other data sources, such as promoter sequence similarity, literature information and others can be used to create individual kernels and combine them into a single kernel, using the kernel combination rules. this representation can be used further for training of the algorithm and for the inference of additional interactions.

in recent years, a repository of gene expression profiles recorded using either microarrays or the proteomic approach during time evolving processes, has grown rapidly, therefore, large amounts of data containing the information about the regulatory interactions controlling the given process are available. the algorithm suggested here can serve for their identification.

