BACKGROUND
accessing genetic information in environmental bacteria has been considered challenging, as >99% of currently known microbes cannot be cultivated using current standard cultivation techniques. however, understanding these uncultivable bacteria has been made possible by the whole genome amplification  techniques that enable the amplification of dna from as low as several femto-grams. thus far, wga methods, particularly multiple displacement amplification , have promoted the sequencing of bacterial genomes at the single-cell level  <cit>  and have assisted in elucidating the characteristics of several uncultivable taxonomic groups .

despite its advantages, wga of single cells is extremely sensitive and is easily affected by dna contamination from the surrounding environment. efforts to eradicate or avoid these contaminants include the use of clean rooms or clean-up techniques , but it remains difficult to completely remove these contaminants. the presence of contaminating dna may cause the misinterpretation on the characteristics of the target bacterium. therefore, quality control of whole genome amplified bacterial genomes, known as single-cell amplified genomes , to identify and remove sequences derived from contaminating constituents is critical for subsequent sag analyses.

currently, two main approaches are used for the quality control of sags. these include approaches dependent on  similarity searching and  sequence composition. the first approach excludes sequences highly similar to sequences that originated from contaminant species  <cit> . these methods are highly effective when the target or contaminant species belong to taxonomic groups whose genome information is substantially available. however, these methods are not appropriate when the targets belong to minor taxonomic groups that have not been well-studied. the second approach clusters sequences based on sequence compositions such as tetramer frequencies and then extracts clusters corresponding to the target genome sequences  <cit> . in contrast to the similarity searching-based approach, this approach enables the removal of contaminant sequences independently of existing information. several composition-based methods have been proposed for binning of metagenomic information . however, even if sequences are grouped into clusters based on sequence composition, there is a difficulty and uncertainty to determine whether the clusters correspond to the target bacterium.

prodege is the first system that achieved fully automated quality control of sag information  <cit> . this tool utilizes both similarity searching and sequence composition. however, performance of the tool depends on the results of the similarity search. there are still limitations when a target belongs to a minor uncultivable taxonomic group and there is no sequence of closely related species in a reference database.

in this study, we introduce sag-qc, a software aimed for the quality control of bacterial sag sequences. both approaches based on similarity searching and sequence compositions are available in this application. unlike the methods for binning of metagenome sequences based on sequence compositions , sag-qc identifies clusters of target sequences by utilizing “non-target sequences” that can be acquired experimentally. the non-target sequences are acquired from sequence libraries subjected to experimental processes without template dna. therefore, this tool is applicable for minor taxonomic groups for which limited information is available because the function is only dependent on the non-target sequences. additionally, this application provides a user-friendly graphical user interface, supporting users to remove contaminant sequences intuitively and rapidly. we believe this application enables users to examine various types of sag sequences.

implementation
sag-qc is a user-friendly graphical user interface application developed using python. all of the executable files and the source codes are available in https://sourceforge.net/projects/sag-qc. this application is available for mac os x.

overview of quality control with sag-qc
sag-qc is designed to exclude contaminant sequences from contigs. sag-qc includes three steps for the quality control of the input contig sequences . the first step is the identification of contaminant constituents based on 16s rrna gene sequences or with a k-mer-based taxonomic classification tool  <cit> . in the second step, contaminant sequences can be removed by similarity searching against the genome sequence if the genome sequences of the contaminant constituents were determined previously. the third step is a quality control that includes binning based on sequence composition. this step removes contaminant sequences that were not identified in the second quality control step. in this step, contaminant sequences are removed by comparison of the sequence composition to non-target sequences. non-target sequences can be acquired by sequencing of samples subjected to experimental processes  without using cells as a negative control. therefore, this step removes contaminant sequences even when target or contaminant sequences belong to taxonomic groups with limited available genetic information.fig.  <dig> overview of sag-qc sag-qc. uses contig sequences generated by de novo assembly. decontamination of the contig sequences involves three steps: identification of contaminating constituent, annotation-based decontamination, and binning-based decontamination. the output can be reliably utilized for subsequent downstream analyses such as gene annotation




description of the use of sag-qc
input files for sag-qc are contig sequences in fasta format. sag-qc divides the input sequences into small fragments  and projects them onto a scatterplot based on sequence composition . the colors of the plots can be changed based on other information  using the color control panel. importantly, sag-qc has a function to extract sequences at any region within the scatterplot by manually clicking and gating the region of interest. this feature allows users to specifically select the region of interest and focus on these regions for downstream analyses.fig.  <dig> graphical user interface of sag-qc. contigs are plotted as dots in the scatterplot based on sequence properties such as gc contents and k-mer frequencies. users can enclose any regions manually and extract/remove contigs inside the region. statistics of the enclosed contigs is in the “contig information” panel. colors of the plots can be edited in the “color control” panel. users can modify the parameters for drawing the scatterplot in the “parameter control” panel




identification of contaminating constituents
the subsequent sections include detailed descriptions of the three quality control steps of sag-qc. in the first step, sag-qc identifies contaminating constituents using two methods. the first method uses kraken  <cit> , which is a tool that assigns taxa to sequences based on their characteristic k-mers. kraken identifies whether the query file includes sequences from contaminating constituents . based on the classification results, users are able to exclude sequences to which unexpected taxa are assigned. the second method is based on the annotation of 16s rrna gene sequences. sag-qc utilizes hmmer to predict 16s rrna gene sequences in the input contigs. the 16s rrna gene sequences are then annotated by blast searching against the silva database  <cit>  . this step also enables users to identify clusters of target and contaminant sequences by setting the colors of the plots according to the classification results .fig.  <dig> detection of contaminating constituents. a users can identify contaminating constituents using a k-mer based annotation tool kraken  <cit> . b contaminating constituents also can be detected by annotation of  <dig> rrna gene sequences. c colors of plots can be set based on classification. users can extract sequences in a cluster of some specific bacterial species




quality control based on similarity search
in the second step, sag-qc removes contaminant sequences based on similarity searching against the genome sequence of contaminating constituents determined in the previous step. this step is applicable if a sag sample is contaminated with bacterial dna whose information is available. sag-qc uses the similarity search tool blat  <cit>  to identify and exclude sequences that show high homology to sequences of contaminating constituents. any sequence files can be loaded as a database for the similarity search.

quality control based on binning with sequence compositions
in the third step, sag-qc excludes contaminant sequences by comparing sequence compositions with those of non-target sequences. the sequence compositions utilized by sag-qc are gc contents, principal components of k-mer frequencies, and those of codon frequencies. we used relative synonymous codon usage frequencies as an indicator of codon usage  <cit> . this implies rij=njxij∑k=1njxik where r
ij is relative synonymous codon usage frequency for codon j of sequence i. n
j is the number of codons synonymous with codon j, x
ij is the number of codon j observed in the sequence i. the frequency is calculated for coding sequences predicted using metageneannotator  <cit> .

in sag-qc, multiple sequence files can be projected on a single scatterplot. thus, clusters of target sequences can be determined by projecting non-target sequences onto the scatterplot together. additionally, if the genome sequence of species that is closely related to a target bacterium is available, a target cluster can also be identified by loading the genome sequence onto the scatterplot.

for example, we used sag sequences from escherichia coli. we simultaneously performed wga without a sorted cell and acquired non-target sequences. these sequences were assembled and projected using the genome sequence of e. coli downloaded from refseq onto a scatterplot together. consequently, we found that the distribution of the sag sequences was composed of two clusters: a cluster of target sequences and a cluster of non-target sequences . this observation suggests that sequences of either closely related species or non-target sequences can be utilized for identifying the distribution of the target sequences.fig.  <dig> detection of target clusters using non-target sequence and genome sequence of related species. a scatterplots of contigs generated from single amplified genome  sequences of escherichia coli. b scatterplot of published genome sequences of e. coli in refseq. c scatterplot of non-target sequences. d scatterplot in which all sequences are overlapped




estimation of confidence scores by utilizing non-target sequences
we established a method utilizing non-target sequences to extract sequences derived from target bacterium with high probability. similar to the above observation, distributions of sag sequences can be decomposed into distributions of target and non-target sequences . sag-qc possesses a function for predicting where target sequences are distributed on a scatterplot by subtracting the distribution of non-target sequences from that of sag sequences. based on the predicted distribution of target sequences, sag-qc assigns the sequences confidence scores, which are probabilities indicating whether the sequences originated from the target species. these scores help users extract sequences derived from target species with high probability.


f
, f
, and f
denote functions for the probability density of sag sequences, target sequences, and non-target sequences, respectively. the probability density function of the sample sequences f
 can be decomposed into that of target and non-target sequences. this implies fsx=ptftx+pnfnx 
 pt+pn= <dig> where x represents the coordinates in the scatterplots. p
 and p
 are proportions of target and non-target sequences in the sample sag sequences.


f
 and f
 are approximated from the scatterplots. the scatterplot is divided into m × m blocks . thereafter, a density matrix d is computed based on gaussian kernel distribution estimation . this implies d'ij=1nh∑k=1nkxij−xkh 
 kx=12πexp−12x <dig> 
 dij=d'ij∑m=1m∑n=1md'nm 
n corresponds to a number of plots on the scatterplot. x
ij denotes a coordinate at the center of block . d
ij denotes the density of the plots in block and is represented by the probability density at coordinate x
ij. the probability density function f is approximated with the density matrix d.fig.  <dig> inference of highly confident region on scatterplot using non-target sequence. a scatterplot based on sequence composition. b heat map showing density of the plots. the densities were calculated by gaussian kernal distribution estimation. c sample sequences were composed of two constitutions target sequences and contaminating sequences. the distribution of target sequences ideally can be estimated by subtracting the distribution of non-target sequences. d estimated distribution of target sequence. e example of confidence map. the map shows confidence, an indicator reflecting whether a sequence was derived from a target sequence. users can extract highly confident regions based on this information


 x∈blockij⇒fx=dij 


the bandwidth h for kernel density estimation is calculated according to scott’s rule  <cit>  as follows. h=n−1d+4=n− <dig> 


sag samples ideally include fewer contaminant sequences than samples subjected to experimental processes without template dna . this is because the sag sequences contain target sequences other than the non-target sequences. p
 and p
 are estimated as follows. pn=∑i,j|dnij>dsijdsij/∑i,j|dnij>dsijdnijpt=1−pn 
d
 and d
 correspond to the distribution of sag sequences and that of non-target sequences, respectively. the distribution of target sequences d
 is estimated by subtracting distribution d
 from that of d
 as follows . dtij=dsij−pndnij/pt 
 x∈blockij⇒ftx=dtij 


based on these parameters, confidence c is calculated as follows. confidence score c denotes a probability that a sequence plotted on x is a target sequence. cx=ptftxptftx+pnfnx 


based on the confidence scores, users can draw a confidence map . a confidence map indicates regions that are highly dense with target sequences on a scatterplot. let x
ij denote the coordinate of the j
th fragment of sequence i, confidence scores of the sequence c
i are calculated as follows. n
i is the number of fragments originated from sequence i. ci=∑j=1nicxijni 


confidence scores can be utilized as thresholds for the extraction of sequences. if confidence score of  <dig>  is set as a threshold, we can extract sequences originated from target bacterium with a probability of more than 80%. additionally, the scores can be utilized to support the results of subsequent genome analyses. for example, genes found on sequences with high confidence scores are more reliable than those on sequence with low scores.

methods
sequencing sag of e. coli

escherichia coli k- <dig> were cultured overnight at 37 °c in lb broth. escherichia coli cells were washed with nuclease-free water and stained with syto <dig> green fluorescent nucleic acid stain . single cells were sorted using facs aria ii  with a 488-nm laser and forward scatter light. genome extraction and mda were conducted using the genomiphi v <dig> amplification kit  according to the manufacturer’s protocol. the amplified products were screened by sequencing the 16s rrna genes. pcr amplifications of 16s rrna genes were performed using universal primer 27f-338r. the pcr products were sequenced by sanger sequencing. taxonomic classifications were conducted by blast searching against the ncbi nr database. we have prepared three mda products whose 16s rrna genes are annotated as e. coli were selected for the following steps. in the meantime, to acquire non-target sequences, we performed mda without template dna of e. coli.

the mda products were purified with zymo research genomic dna clean & concentrator- <dig> . debranching was conducted on the purified samples with s <dig> nuclease . thereafter, the samples were purified again using the zymo research genomic dna clean & concentrator- <dig>  sequence libraries were prepared with nextera xt . the libraries were sequenced on an illumina miseq in 2 × 300 bp mode. we sequenced three sags of e. coli and single no-template mda product in this experiment.

preprocessing of sag sequences
the sequence reads were preprocessed through several steps. we first removed reads whose half of quality scores was below  <dig> using the fastx-toolkit . sequence regions with quality scores below  <dig> were trimmed from the 3′ end by using prinseq   <cit> . sequence reads including ambiguous bases  more than 1% of the whole were also discarded using prinseq . sequence reads shorter than half of the average read length were removed using an in-house python script. finally, we excluded reads whose pair-reads were discarded using the above steps with an in-house r script.

de novo assembly of sag sequences
we conducted de novo assembly of the preprocessed sequence reads using spades  <cit> . we set options recommended for assembling from sequences amplified through mda . contig sequences shorter than 500 bp were discarded from subsequent analyses.

performance test with simulated sag sequences
sag sequences were simulated using publicly available genome sequences. two bacterial species, e. coli and magnetospirillum magneticum, were used as target species in this simulation. these bacteria were selected to examine whether this method is applicable to wide variety of species because their genomes exhibit quite different gc contents. their genome sequences nc_ <dig>  and nc_ <dig>  were downloaded from the ncbi genome database . contigs of the target bacteria were simulated by sampling sequence fragments randomly from the genome sequences. we also downloaded all genome sequences of genera pseudomonas and delftia, which are commonly observed as contaminants in sag sequences  <cit> . non-target sequences were simulated by randomly sampling sequence fragments from the genome sequences of pseudomonas and delftia. the average and standard deviations of the sampled sequence lengths were set 3000 bp and 500 bp, respectively. subsequently, the datasets simulated as target and non-target sequences were mixed in several different proportions to simulate contaminated sag sequences . total numbers of simulated sag sequences were set to  <dig> for all proportions of contamination.table  <dig> number of target and non-target sequences in simulated sag data


e. coli/m. magneticum
pseudomonas
delftia
we utilized public bacterial sequences to simulate sag datasets. we defined escherichia coli and magnetospirillum magneticum as target species in this simulation. we mixed their sequences with sequences of pseudomonas and delftia to simulate sequences of contaminated samples. the sequences were mixed in several proportions to simulate datasets with different contamination levels.




using the simulated sag sequences, we examined the accuracy of estimating the contamination rate p
, distribution of target sequences f
, and confidence scores. the simulated sag sequences, target sequences , and non-target sequences  were respectively divided into fragments of 1000 bp and projected on a single scatterplot. the proportions of non-target sequences p
 and distributions of target sequences d
 were predicted by subtracting the distribution of non-target sequences d
 from that of sample sag sequences d
. the accuracy of predicted proportions p
 was evaluated by examining the correlations with simulated contamination rates. the accuracy of the predicted distribution d
 was evaluated from the correlation with the distribution of the simulated target sequences. thereafter, we calculated confidence scores based on the predicted distributions d
 and distributions of the non-target sequences d
. to assess the potential of the confidence score to distinguish between target sequences and contaminant sequences, receiver operating characteristic  curves were generated and areas under curves  were calculated with r package proc  <cit> . we constructed simulated datasets and conducted performance tests  <dig> times.

performance test using real sag sequences
we evaluated the accuracy of predicting the distribution of target sequences d
 by utilizing real sag sequences that were acquired from e. coli experimentally. non-target sequences were simultaneously collected from sequence libraries that were amplified by mda without template dna. contigs of both e. coli sag sequences and non-target sequences were divided into fragments of 1000 bp and mapped onto a scatterplot together. additionally, we randomly sampled  <dig> sequences from a published genome sequence of e. coli and projected them onto the scatterplot. the average length and standard deviation of the sequence lengths were set to 3000 bp and 500 bp, respectively. the distribution of target sequences d
 was predicted based on the sample sag sequences and non-target sequences. the accuracy of the prediction was evaluated by comparing the predicted distribution d
 and the distribution of the published genome sequence.

to evaluate the performance of the confidence score, we attempted to identify target sequences from the contig sequences. contigs of the sag sequences were aligned with the genome sequence of e. coli using mummer  <cit> . we regarded contigs as target sequences if the regions that aligned with the e. coli genome were longer than the half-length of the contigs. based on the alignment results, the performance of the confidence score was evaluated. confidence scores were computed from the predicted distribution d
 and the distribution of non-target sequences d
. we generated roc curves to examine whether the confidence scores correctly reflected the annotation results.

RESULTS
performance test using simulated sag sequences
the accuracy of our method for predicting the proportion of non-target sequences p
 and distribution of target sequences d
 was evaluated from simulated sag sequences. from the simulated distribution of sag sequences and non-target sequences, the proportions of non-target sequences p
 in the simulated sag sequences were predicted. the predicted proportions were strongly correlated with the true proportions in both e. coli and m. magneticum  . these results suggest that our method can be used to accurately predict the proportion of contaminant sequences in sag sequences and cope with various types of target bacteria.fig.  <dig> results of performance test using simulated sag. a, d plot representing performance of estimating contamination rate. b, e plot showing capacity for predicting distribution of target sequences. the vertical axis represents pearson’s correlation with true distribution. c, f roc curve showing accuracy for the prediction of a target sequence




we also predicted the distributions of target sequences d
 by subtracting the distribution of simulated non-target sequences from that of the simulated sag sequences. when the proportions of the target sequence were more than 20% in the datasets, the predicted distributions were strongly correlated  with true distributions, although the raw distribution represented much lower correlations . therefore, sag-qc can predict the distribution of target sequences accurately unless the sag sequences are extremely contaminated.

confidence scores were estimated based on the predicted contamination rate p
 and distribution of target sequences d
. to examine the performance of the confidence score for predicting target sequences, we generated roc curves and calculated the auc. we created roc curves for confidence scores calculated from the samples simulated with 90% contamination. the auc was quite high  in both e. coli and m. magneticum. therefore, these results suggest that our method can be used for the quality control of sag sequences.

performance test with real sag sequences
we evaluated the performance of sag-qc using real sag sequences derived from e. coli. we firstly run kraken and performed taxonomic classification of the sag sequences. pseudomonas, delftia, serratia, stenotrophomonas and several other taxa were confirmed as contamination from the sags of e. coli . those taxa were commonly detected in sequences of no template control, indicating that the contaminating constitients were identical among the sags and the no template control.

therefore, we predicted the distribution of target sequences d
 by subtracting the distribution of non-target sequences from that of sag sequences . the predicted distributions showed high correlations  with the true distribution. since the correlations were low  before subtracting the distribution of non-target sequences, these results suggest that the method enables the accurate prediction of the distribution of target sequences.fig.  <dig> result of performance test using real sag data distribution of  raw single-cell sequences,  sequence of negative control,  target distribution predicted from single-cell sequence, and  true target distribution calculated based on publicly available genome sequence. e pearson’s correlation between predicted and true target distributions. f roc curve representing accuracy for predicting sequence of the target bacterium




additionally, we calculated confidence scores based on the predicted distribution d
 and the distribution of non-target sequences. roc curves were generated based on the scores for evaluating their potential to distinguish target sequences from non-target sequences . the target and non-target sequences were determined by alignment to the genome sequence of e. coli. the target sequences denote sequences aligned to the genome. we observed that confidence scores correctly worked as an indicator . the performance was inferior to the results observed in the test using simulated datasets. this may reflect that the real sag sequences included artifact sequences produced through mda. however, our method still showed good performance for extracting target sequences from sags without any existing information.

we extracted contigs with confidence scores higher than  <dig> and evaluated sensitivity and specificity. the sensitivities, proportions of target sequence retained after the selection, were  <dig>  –  <dig> %. the specificities, proportion of non-target sequences discarded by the selection, were  <dig>  –  <dig> % . thereafter, we run prodege on the datasets with a mode not dependent on similarity search and estimated its sensitivity and specificity. although prodege demonstrated high specificities , its sensitivity was much lower  than that of our method . we believe this result also promises performance of our method when the target belongs to unexplored taxa and similarity-search-based method is inapplicable.

limitation of the method
we used kraken and confirmed that non-target sequences were derived from various bacterial species . the species were distinct from e. coli in order-level , class-level  and genus-level  respectively. confidence scores were calculated for the non-target sequences. we found that the averages of confidence scores in non-target sequences derived from different class and order were  <dig>  and  <dig> . they were remarkably low compared to target sequences since its average score was  <dig>  . on the other hand, score of non-target sequences originated from different genera were relatively high. the average and third quantile of the scores were  <dig>  and  <dig> . those results indicate the limitation of our approach to distinguish sequences of closely related species. however, the performance would be enough to discriminate non-target sequences derived from different order and class.

in this study, we performed quality control of sag sequences by using sequences of no template control. it was feasible because contaminating constituents were almost identical between sags and no template control . the performance of our tool will be influenced when the contaminating constituents are different between them. the contaminating constituents are possible to be different if no template control was processed independently. therefore, we strongly recommend users to acquire no template controls in parallel with sags under the same experimental conditions  as possible.

CONCLUSIONS
we presented sag-qc, a computational tool for the quality control of bacterial sag sequences. sag-qc possesses functions for both similarities search-based and binning-based quality control methods. in binning-based quality control, sag-qc utilizes no template control sequences to assign a confidence score to sag sequences. the confidence score indicates whether the sequence is derived from the target bacterium and can be used as a threshold for extracting sequences during binning. based on the results of the test using both simulated and real sag sequences, we demonstrated that the score can be used to distinguish target sequences from sag sequences. unlike the conventional metagenomic binning methods  <cit> , our approach can determine bins of target sequences without any existing information. therefore, the method is available even when a target bacterium belongs to a minor taxonomic group that has not well-studied.

availability and requirements

project name: sag-qc


project home page:
https://sourceforge.net/projects/sag-qc/



operating systems: mac os x


programming language:  python


licence: none

additional files

additional file 1: table s <dig>  sensitivity and specificity of our approach to discriminate non-target sequences. ﻿


additional file 2: table s <dig>  list of taxa confirmed from contigs of e. coli sags and no template control. 


additional file 3: figure s <dig>  confidence scores for the non-target sequence of different genus, order and class. box plot representing confidence scores of the non-target sequences derived from e. coli, taxa different from e. coli in genus-level, order-level and class-level. lower and upper hinges correspond to the first and third quantiles. 




abbreviations
aucareas under curves

mdamultiple displacement amplification

rocreceiver operating characteristic

sagsingle-cell amplified genome

wgawhole genome amplification

the supercomputing resource was provided by the human genome center, the institute of medical science, and the university of tokyo.

funding
this work was supported by a grant from the core research for evolutionary science and technology project  for the “establishment of core technology for the preservation and regeneration of marine biodiversity and ecosystems”.

availability of data and materials
sequence data are accessible in the ddbj sequenced read archive under the accession numbers dra <dig>  this software is written in python and able to work under mac os x. the software and the source codes are available in https://sourceforge.net/projects/sag-qc/.

authors’ contributions
tma developed the software and implemented all performance tests. tmo and ky performed sequencing sag in e. coli. ht and tmo guided this research. tma and ht wrote the manuscript. all authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
