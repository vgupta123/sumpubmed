BACKGROUND
dna microarrays were first developed to simultaneously quantify the expression of large numbers of genes. they are now commonly used for a variety of genetic analyses such as alternative splicing, microrna regulation, and snp detection. many dna microarray platforms have emerged but their fundamental design has remained relatively standard; they consist of arrayed dna oligonucleotides  that are complementary to specific dna sequences  <cit> . since the majority of biomedical journals require that raw and normalized microarray data be accessible to the public at the time of publication, a significant number of datasets are publically available. turning this huge trove of accessible data into useful conclusions is becoming increasingly problematic for scientists.

currently, several types of microarray instrument platforms and their associated data formats are available, including: illumina, affymetrix, and agilent. these datasets, once quality controlled and normalized, provide significant opportunities for conducting novel intra- and inter-dataset comparisons. though only  <dig> of the roughly  <dig>  microarray platforms currently found in the ncbi gene expression omnibus , are affymetrix gene chips. affymetrix platforms currently comprise ~ <dig>  among total ~ <dig>  datasets . this provides oppportunities to conduct meta-analyses minimizing platform biases from combining data from different array platforms, which can complicate meta-analyses  <cit> .

gene-set enrichment analysis , such as gene ontology and pathway enrichment, is a common method for microarray data analysis  <cit> . improved functional annotations of multiple genomes, increasing numbers of experimentally determined protein-protein interactions and improved pathway level relationships have dramatically increased the quality and scope of results from gse analyses. reanalysis of old datasets with the updated gene-set enrichment tools such as gene ontology and the molecular signatures database  is likely to identify new signaling networks associated with the analyzed dataset  <cit> . however, the analysis of microarray data involves multiple steps: data organization, quality control, normalization, differential gene expression calling, clustering and pathway analysis. therefore, significant bioinformatics skills are required to properly conduct such microarray analyses. the development of a software-based workflow to automate these procedures would improve the efficiency and serve to standardize the multiple inter- and intra-dataset analyses.

advances in computational techniques have also increased the number of open-source bioinformatics analysis tools for genomic analysis. gricia et al. developed a workflow generator for microarray and sequence data  <cit> . pelizzola et al. developed an r-based package to automate microarray analysis  <cit> . more r-based bioconductor packages such as geoquery are now available, however running packages in r requires, for the most part, comfort in command-line interface since guis are not available for most r packages. salomonis et al. developed an open source python-based software called altanalyze for microarray and rna sequencing analysis with the integrated gene-set enrichment software go-elite  <cit> . altanalyze can also be run from a user-friendly gui or compiled binaries can be run with simple command lines. these features combined with the increasing number of analysis options available in altanalyze facilitate its use by both general bench biologists and bioinformaticists wishing to incorporate its many i/o functions into analysis pipelines.

scientific workflow systems provide an environment to aid the scientific discovery process through the combination of available tools for scientific data management, analysis, simulation, and visualization. moreover, they provide a comfortable and intuitive graphical interface for designing and modifying workflows  <cit> . kepler is open-source software that supports user-customized scientific workflows. stropps et al. has developed an automated workflow in kepler utilizing pelizzola’s package for affymetrix microarray data analysis  <cit> . stropps’ workflow conducts the normalization, differentially expressed gene analysis , clustering analysis, and gene ontology statistics for one affymetrix data set. in this study, we sought to develop a scientific workflow to facilitate and standardize the meta-analysis of multiple affymetrix microarray datasets, regardless of species, utilizing state-of-the-art open-source bioinformatics programs: altanalyze and r/bioconductor packages. maamd is designed to encapsulate all steps involved in analyzing raw affymetrix data files available in the geo repository. maamd automates multiple dataset downloading, data organization, data quality control as well as normalization, several statistical methods for differential gene expression determination, mutltiple testing adjustments, clustering, and go-elite pathway and gene set enrichment analysis into a single, easy to use workflow. maamd is then expanded by enabling across-experiment/species comparisons extending the traditional intra-dataset differential analysis to rapid inter-dataset comparisons.

figure  <dig> shows the conceptual view of maamd. briefly, the targeted datasets were selected from the online database and the corresponding information was collected and input into excel files. the excel files were then parsed and the targeted datasets were downloaded to a local computer and organized locally according to the parsed information. the data quality was analyzed and then assessed by the user. sample groups for deg analysis were assigned. the selected data were then normalized and deg was conducted alongside clustering and gene ontology analyses. the targeted datasets were analyzed individually. after all datasets had been analyzed, the users were allowed to select datasets to conduct a comparison of the differentially-expressed genes across datasets and species using a homologue database incorporated in maamd. maamd implements the above conceptual workflow in kepler and simplifies user’s actions by only requiring modification of local excel files and selecting listed options. the function of across-experiment/species comparison in maamd expands the traditional intra-dataset differential analysis to inter-dataset comparisons. the utilization of maamd was validated by an across-species hypoxia and hyperoxia dataset comparisons.

implementation
software components of maamd
kepler is a free, open-source software system for designing, executing, reusing, evolving, archiving, and sharing scientific workflows  <cit> . it has been widely used in many areas of science that require sequential and parallel manipulation of large and complex datasets  <cit> . the free availability, the capacity of multiplatform development, and the capability of utilizing existing packages or tools developed by r and python make kepler ideal for academic applications. in addition, kepler presents workflows in a graphical format which promotes rapid comprehension of inputs, data flow and data processing  <cit> . all components in kepler are easily customizable, which leads to a fast and efficient extension and modification of the kepler workflow. a new platform, “biokepler”, developed for bioinformatics, will be available soon . decades of available bioinformatics tools will be embedded in biokepler and hence simplify the development and scalability of scientific workflows for bioinformatics in kepler.

altanalyze is a python-based open-source, cross-platform, free application for microarray and rna sequencing analysis  <cit> . it is packaged with an intuitive easy to use gui, but has also been compiled on various platforms to enable users to run it in command line. altanalyze is a multi-functional software package that can summarize, organize and filter exon and junction-level data, calculate statistical scores for alternative splicing, alternative promoter selection or alternative 3′end processing, annotate regulated alternative exon events, and assess downstream predicted functional consequences at the level of protein domains, microrna binding sites, and biological pathways . altanalyze has its own up-to-date relational database structure that stores the information of platforms, probesets, and species. affymetrix library and annotation files are automatically identified and downloaded by altanalyze for a large variety of existing affymetrix array platforms and species. altanalyze can also conduct data normalization and pathway analyses for a variety of other platforms . this software is also compatible with user-provided affymetrix library files and supports the processing of non-affymetrix normalized or raw tab-delimited expression files, including proteomics and metabolomics data.

the data resulting from running altanalyze include a series of text files that can be easily opened and further analyzed with standard spreadsheet programs. graphical qc plots, hierarchical clustering heat maps, principle component analysis  and pathway diagrams can be produced using the operating system-specific compiled versions of the source code. a large set of ontologies and other gene sets, including transcription factor targets, are available for gse from altanalyze via the integrated go-elite analysis tool  <cit> . the latest version of altanalyze incorporates a multi-threading technique, which improves the processing speed. with these rich features, altanalyze can conduct an analysis of microarray data comprehensively and efficiently  <cit> , even for those new to such analyses.

the maamd workflow
as designed, maamd has functions such as downloading available online data, re-organizing data, estimating data quality, grouping data, conducting a differential gene-expression analysis, and inter-dataset comparisons. the implementation of maamd is shown in figure  <dig>  the workflow was represented as a network of actors, which were the basic components for task execution. it was executed by a director, which was used to manage and schedule the execution of actors. the data was delivered between the actors with the connections between basic actors and the input/output ports in comprehensive actors.

a. kepler workflow
briefly, this workflow consists of one ddf director, five customized actors, one loop control, and two display actors. five string inputs are required: the number of targeted datasets, the location of the maamd workflow file, the location of the altanalyze executable file, the working directory, and the location of the file containing information for targeted datasets. the output is a folder with a fixed structure containing original data files, meta-analyses results by altanalyze, and the comparison results across the datasets. once initiated, minimal user-interactions are required to complete the workflow.

figure  <dig> indicates the detailed implementation of maamd workflow. the input information for the targeted datasets was parsed by module a, followed by the downloading and uncompressing of targeted data in module b. then the information of individual datasets was parsed one by one in module c, controlled by an index control loop. the parsed information of an individual dataset was delivered to a composite actor module d, which conducts data quality estimation, data selection, normalization, and analyses. when the analyses of all datasets finished, a comparison among the results of these datasets was then executed in module e.

among these modules, module d , which analyzes individual datasets, is a central module. this module is a composite kepler actor containing five basic actors. briefly, the sample information in a single dataset was parsed in module a. the data was re-organized to facilitate the data identification and operation in module b. the data quality was then estimated by a composite actor, module c, whose structure was represented in figure 2d. based on the quality report, the user selects the qualified data in module d. the selected data was then normalized and analyzed by altanalyze in module e. when module e finishes its processing, it sends out a “done” signal to trigger the next step.

here are the brief introductions of each module in maamd.


module a: readsets

the module “readsets” is the first module of maamd that is used to parse the dataset information contained in “datasets.csv” file. this module is an r-based kepler actor. the input of this module is a string parameter that describes the location of csv file which is the parameter “datafile” in figure 2a. the output is the parsed information.


module b: downloaddata

the module “downloaddata” is also an r-based kepler actor that downloads and decompresses targeted datasets. the inputs of downloaddata are the parsed information from module a and the path of work directory. its output is the uncompressed.cel files that are stored in a folder named as the assigned “dataset” value in the work directory assigned by the parameter “workpath”.


module c: readset

the module “readset” is designed to get the information for one dataset record, controlled by an index loop. the inputs of readset are the parsed total information for all datasets listed in “datasets.csv” from module a and a trigger signal from module b. the output of readset is the parsed information for one dataset.


module d: aamd

the module “aamd” is a composite actor containing  <dig> child actors. the inputs of aamd are the parsed information from module b, the location of altanalyze, and the working directory. the output of aamd is a “done” signal and a folder containing analyzed results. the following are the child actors involved in aamd.


readcsv

the actor “readcsv” reads information of samples in the targeted dataset including the original sample names and the corresponding customized names as well as group information. an altanalyze command is generated based on the input information. the inputs of readcsv are all inputs of aamd module. the outputs are the parsed sample information and an altanalyze command.


reorganizecelfiles

the actor “reorganizecelfiles” renames the cel files with its corresponding customized names. the inputs are the old file names, the new file names, and the location of files. the output of reorganizecelfiles is a “done” signal.


qualitycontrol

“qualitycontrol” is a composite actor that consists of four basic actors. the detailed structure of qualitycontrol is shown in figure 2d. this actor allows the user to select cel files and estimate the quality of the selected data. the bioconductor packages “arrayqualitymetrics” and “affyqcreport” were utilized through r. the inputs of qualitycontrol are a trigger signal, the location of sample data, the folder to store results, and the customized sample names. a file named “celllist.html” is created. the quality report is saved as a webpage. figure  <dig> shows the summary section of the resulting webpage, which includes array intensity analysis, principle component analysis, distance analysis and so on.


analysisprepare

“analysisprepare” allows the users to select cel files for further analysis based on the quality control report. the actor creates a “groups.txt” file describing group information and a “comps.txt” file describing the selected comparisons for further altanalyze analysis. a web page listing all possible comparisons between groups is created to allow users to select specific group comparisons. the inputs of analysisprepare are parsed sample information and a trigger signal. the output is a “done” signal.


runaltanalyze

“runaltanalyze” calls altanalyze by a command line and then analyzes the data in altanalyze. the inputs of runaltanalyze are the command line and the location of selected data. a “result” folder is created to store the analysis results in the folder named by its corresponding dataset name. the output is a “done” signal.


module e. multicomparison

the module “multicomparison” is a composite actor to compare the differential gene expression among datasets across experimental conditions or species. the detailed structure of multicomparison is shown in figure 2b. this module is independent and can run without other modules as long as altanalyze has performed the analyses of targeted datasets. multicomparison collects the analyzed results of targeted datasets and converts them into orthologous genes. the orthologous genes existing in all targeted datasets are summarized in a “comparisonsets.txt” file. the inputs of multicomparison are “datasets.csv”, the location of analyzed results, and the location of maamd workflows. a kepler display pops up at the end of the analyses to show the summary of the comparison results or to remind the user if no gene orthologue can be found across multiple datasets.

b. input of maamd
the inputs of maamd workflow are five string parameters as showed in figure 2a. the parameter “datafile” assigns the location of the file containing the information of targeted datasets. table  <dig> is an example of the related file. briefly, this file is a csv file containing four columns: “dataset”, “species”, “probesets” and “datainfo”. the columns in table  <dig> are fixed, but the user is allowed to edit the table content. the column “dataset” describes the name of targeted dataset. “species” and “probesets” describe the corresponding animal species and the probesets used to acquire the data, respectively. “datainfo” is a path linking to a csv file that describes the samples in the individual dataset. table  <dig> is an example of a csv file assigned by “datainfo”. “datainfo” contains three columns: “samplename”, “newname”, and “group”. “samplename” describes the original sample names of the downloaded dataset. “newname” is a customized file name containing proper information such as animal species, tissue, and experimental conditions to identify samples. “group” assigns samples to a specific group. at least two groups are expected in one dataset. thus, beside the five string parameters, maamd also requires a datasets csv file along with corresponding csv files for each dataset.

listed in table  <dig> is the content of “datasets.csv” that describes the targeted datasets for the study case.

listed in table  <dig> is the content of “datainfo-gse <dig> csv” that supplies information for the samples in gse <dig> dataset.

c. the work and output folders of maamd
the output folder of maamd is a folder assigned by “workpath”. figure  <dig> is an example of work and output folders. figure 4a shows the content of the result folder where, “gse9400”, “gse12160”, “gse14981” and “gse15879” store the original data and analysis results for corresponding datasets. a text file “comparisonsets.txt” contains orthologues between datasets. figure 4b shows the content of “workflow” folder which contains the kepler workflow files and required resource files “homologene.txt” and “taxonomy.txt”. figure 4c shows the detailed structure of folder “gse9400”. the detailed structure of the “result” folder is shown in figure 4d. the differential gene expression results with statisical evaluation are summarized in a file named “dataset-gse <dig> txt” in the “expressionoutput” folder as shown in figure 4e. more details about the outputs of altanalyze are available on the altanalyze’s website http://www.altanalyze.org/help_main.htm.

d. software requirements of maamd workflow
the following software programs are required to run maamd: kepler  <dig>  or higher; java run-time environment ; r  <dig> . <dig> to support the r actors in kepler; altanalyze  <dig> . <dig> or higher. when running the source version of altanalyze, rather than compiled, additional dependencies are required as described here: http://code.google.com/p/altanalyze/wiki/standalonedependencies. several bioconductor r packages including geoquery, affyqcreport, and arrayqualitymetrics must be installed in advance. detailed instructions with illustrations for how to set up a computer environment to run maamd are described in supplement a.

a minimum of 1gb of ram and at least a 2ghz cpu are required to run this workflow. the required disk space for the workflow outputs depends on the size of selected targeted datasets. additional ram  and hard-drive space  are recommended for large microarray datasets or splicing-sensitive platform studies.

e. a case study of maamd performance: preliminary analysis for a comparative hypoxia study
we conducted a case study of maamd to test the speed at which it was able to download, qualtity control, analyze and compare multiple expermiments across diverse species . hypoxia, exposure of cells and tissues to o <dig> levels below ~5%, is widely associated with many diseases and its effects contribute to millions of clinical cases every year in the united states  <cit> . the underlying conserved cellular responses to hypoxia are poorly understood. a study of orthologues responding to different hypoxic conditions or in different species could identify potential conserved genes and help further understand conserved cellular adaptations to hypoxia. thus, we used maamd to identify transcriptional responses to hypoxia that are conserved in multiple hypoxia experiments and between mice and drosophila.

affymetrix microarray data was downloaded from the ncbi gene expression omnibus , a publicly available functional genomics data repository. we selected the affymetrix datasets gse <dig>  gse <dig> <cit> , gse <dig> <cit> , and gse <dig> <cit>  consisting of profiling data from flies or mice exposed to a range of hypoxic or hyperoxic conditions. specifics about each of these datasets can be found at the geo website.

a summary csv file “datasets.csv” and four csv files for individual datasets “datainfo-gse <dig> csv”, “datainfo-gse <dig> csv”, “datainfo-gse <dig> csv”, and “datainfo-gse <dig> csv” were prepared based on the experimental description by the user as the input files of maamd. the input parameters were set as the locations of input files, altanalyze, maamd, and the total number of targeted datasets. then, maamd was executed using a computer configured with intel i7-3517u cpu  <dig>  ghz, 8 gb ram, 120 g disk space, and a windows  <dig>  <dig> bit os.

the entire process, including computer analysis and user operation, took ~45 min to analyze all four datasets. the analysis, including data downloading and data meta-analysis took maamd a total of ~41 min. among these processes, the data downloading took ~2 minutes with the high-speed campus internet; the meta-analysis for all four datasets including data quality estimation, differential gene expression, and go-elite analysis took ~37 minutes; the cross-species comparison of results for all four datasets took ~2 minutes . the requird time may vary due to the differences in hardware configuration or internet speed. conducting this analyisis independently and by hand could take upwards of 4–5 hours for an experienced user implimenting the exact same set of independent programs. this time would be spent providing repeated user inputs to create and navigate folders, check results, rename files, select criteria, formatting i/o files and so on.

the column “compared datasets” lists the detailed comparisons. the column “significance” states the biological meaning to make such a comparison. the column “common regulated genes” lists the total number of common regulated genes, the detailed conserved genes and the detailed differential genes.

maamd generated about 850 mb of results including the downloaded data for above four datasets. visualizations such as heatmaps for clustering analysis, pathway maps for pathway analysis were generated based on the resulting values automatically. the detailed values along with statistical evaluation were stored in files in “expressionoutput” folder and “go-elite” folder of each dataset. moreover, we were able to make multiple comparisions across all datasets quickly and automatically.

the results indicate highly conserved gene responses to whole-animal exposure to hypoxia or hyperoxia in all datasets. gse <dig> contained profiles of soleus muscles from c57bl/ <dig> mice exposed to gradient 8% o <dig> for 2 weeks revealed  <dig> differentially expressed probesets . gse <dig> contained profiles of flies exposed to a decreasing levels of hypoxia for 16 days displayed  <dig> probesets using the same fold and p-value cutoffs. in the two drosophila datasets,  <dig> probesets were signficantly changed in gse <dig>  and  <dig> probesets were changed in gse <dig> .

given the related yet significantly different experimental conditions, inter-set comparisons were still able to identify conserved gene expression responses between different inter-set comparisons. table  <dig> summarizes the comparisons made and corresponding findings. based on the results, genes hsp <dig> and cg <dig> are conserved in responding to chronic hypoxia, acute hypoxia and chronic hyperoxia in drosophila. this result is consistent with the knowledge that heat shock proteins encoding hsp genes are conserved proteins responding to diverse environmental stresses  <cit> . little is known about cg <dig>  suggesting that using this meta-analyis in maamd can identify novel conserved functionally-uncharacterized genes that are regulated by divergent yet related  stress conditions. depending on the comparisons made, maamd was able to rapidly identify subsets of genes that were regulated both in the same directions and in opposite directions across different hypoxic stresses, tissues and species very quickly .

in summary, these results highlight the orthologue comparison function of maamd, the dramatic savings in time to properly conduct a cross-species meta-analysis and identify highly conserved gene responses.

RESULTS
the “maamd” workflow was developed and demonstrated to work efficiently for affymetrix microarray data, the predominant plaftorm currently represented in geo. because of its design in kepler, it can be easily adapted to analyze other platforms. this workflow improves the effeciency of microarray analysis and significantly minimizes the required computational and bioinformatic knowledge for the user, especially once installed. the extended function, which compares the analyzed results from multiple microarray datasets across species, further simplifies the work required by the user and significantly broadens its utility.

maamd improves the analysis efficiency by linking together previously separate tasks of data flow and avoiding the repeated memory or cpu resource allocation since the resources are assigned once it starts to run. furthermore, the embedded tools such as altanalyze, r-based comparison codes are efficient in data processing. for example, the cross-species analysis between the datasets took only 3 minutes, which could be a very complicated and time-consuming process. the factors which affect maamd running time include the size of dataset, the type of species being analyzed and internet speed. the size of the dataset being downloaded and analyzed has a large effect on workflow execution time at almost every step from data downloading to data quality control and data analysis. the speed of the internet connection can significantly impact the time required for data downloading considering a single affymetrix cel file is on average ~10 mb in size. the species analyzed will also have an impact on the performance time, as a result of genome complexity and degree of annotation.

as an automated workflow, maamd avoids random operational mistakes such as a misclassfication of data files or erroroneous group comparisons due to simple human error. maamd minimizes the required user interaction by only occassionally pausing to recieve user inputs. to improve the flexibility and feasbility of maamd, there are several user interactions included in this workflow, such as the selection of data files before and after quality control. some microarray datasets contain cel files acquired by different platforms. this usually causes errors if a user analyzes them as a single batch. data selection for further analysis after sample qc and proper selection of similar control types between datasets should avoid these kinds of errors. all of the required user interactions appear to the users as a web page with listed options which are direct and easy to understand and control.

the inputs of maamd are csv files summarizing the information of targeted datasets. since the inputs are text-based tables and selectable options in lists, use of maamd does not require advanced computational skills. additionally, maamd provides a standard and easily modifyable workflow for genetic data analysis such as rma normalization, differential expression analysis, and clustering analysis with its built-in tools, bioconductor and altanalyze.

another important feature of maamd is that it can identify and download the required library files and annotation files automatically. this feature was inherited from its embedded tool, altanalyze. there are many microarray platforms which have different probeset libraries. thus, matched library and annotation files are required to analyze a microarray dataset when starting with raw data files. it takes time for the users to find the proper resources, to understand the library and annotation files, and to interpret the raw microarray data with the matched library and annotation files. maamd automatically downloads library files and generates results with gene symbol and pathway information which can be easily understood. moreover altanalyze is able to automatically download the most current gene id information, pathway and ontology databses with just a few clicks and supports every species in these analyses for which affymetrix provides a microarray for.

extending maamd to other profiling platforms and considerations for meta-analyses
as a kepler-based workflow, maamd can be easily extended or modified in kepler. for example, maamd can be easily separated into several independent workflows which are available in the website http://www.biokepler.org/use_cases/maamd-workflow-standardize-meta-analyses-affymetrix-microarray-data. the workflow “maamd-comparison” separates “datacomparison” module from maamd and can run as an independent workflow as long as the analyzed data are ready. the workflow “maamd-download” allows users to download all targeted datasets independently from the data analysis. the workflow “maamd-altanalyze” can run the data analysis for the downloaded data independenty. these separated workflows allow users to use maamd in a more flexible way, as long as the users ensure the correct inputs for each workflow. users who have programming skills can readily add more modules into the workflow or modify the workflow according to their own requirements.

currently, maamd works for affymetrix microarray datasets. it can be expanded to support more microarray datasets such as roche and illumia as both altanalyze and arrayqualitymetrics are able to analyze such data platforms. since altanalyze supports the meta-analyses of aligned junction and exon sequences, this makes it possible to extend the workflow for the meta-analyses of rna sequencing data, integrating it with the proper pre-processing tools for sequencing data. however, due to the many differences in analysis steps between microarray data and sequencing data, significant additional modifications would be required to extend maamd for sequencing data, e.g. base-level quality control, adapter trimming, alignment, alignment quality control and exon bed file generation.

there are many important caveats that must be considered when drawing conclusions from meta-analyses and inter-dataset comparisons that can compound false-discovery rates  <cit> . a number of factors to consider are biologically related , technically related  and those that arise from increasing the numbers of repeated measures and sample sizes. while it is impossible to correct for many of these, we have designed the workflow in such a way to enable the user to at least be aware of potential issues related to some of these. the quality control measures were designed to flag issues with samples that would cause major intra- and inter-group variability. altanalyze can also conduct intra-dataset combat analysis, which employs a both parametric and non-parametric empirical bayes frameworks to remove batch effects  <cit> . missing values for orthologues can be expected when conducting meta-analyses and approaches for imputing these values, if necessary, could be explored  <cit> . moreover, one must always be wary of drawing extensive conclusions from experiments that do not contain experimental replicates, however there are strategies for dealing with these issues  <cit> . one advantage of our approach is that maamd defines differentially expressed genes within each experiment first before making inter-dataset comparisons. in our experience this serves to control well for many technically related biases such as biases introduced by array type and sample preparation.

CONCLUSIONS
maamd standardizes, simplifies, and dramatically decreases the amount of time required to analyze affymetrix microarray datasets and to make intra- and inter-dataset comparisons. the minimized computer skills and bioinformatics knowledge required to run maamd makes it an attractive tool for biologists with limited programming skills and bioinformatics background. the extensibility of maamd means it could be a solid starting point for those researchers who have advanced programming skills and want to expand and/or modify the workflow for additional purposes.

availability and requirements
home page:http://www.biokepler.org/use_cases/maamd-workflow-standardize-meta-analyses-affymetrix-microarray-data.

operating system: windows and mac osx.

requirements: r and altanalyze are required. the installation instructions and application instance are available in above website.

other requirements: internet connection.

license: free for non-commercial and academic use.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
zg, az, am and ia contributed to the design of the workflow. zg contributed to workflow implementation. zg, az, am contributed to the design of study case. jw developed kepler components and ns updated altanalyze to support maamd workflow. all authors contributed to manuscript preparation and read and approved the final manuscript.

