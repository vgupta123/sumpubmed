BACKGROUND
automated analysis of cytometry data
flow cytometry  is a leading technology for cell analysis, allowing rapid evaluation of heterogeneous cellular populations in a single-cell setting, i.e., interrogating separately every individual cell in a sample. the analysis process uses fluorescently labeled antibodies to tag cellular epitopes known from their association with a specific cell function or state. this methodology in combination with various probes for cell viability, structure, and function can provide information-rich data sets describing the phenotypic effects of various natural physiological phenomena or the impact of external perturbants on characteristics of cell populations
 <cit> . fc-based single-cell analysis is employed in various fields of life sciences ranging from immunology, hematology, and oncology to environmental studies and oceanography
 <cit> .

fc plays a key role in diagnosis of immunological disorders, including hiv, as well as in cancer research
 <cit> . when used in a diagnostic role, cytometry analysis is typically performed on patient blood or bone-marrow samples. the subsequent data-processing analysis is usually done manually, by delineating various cellular populations using 2-d scatter plots and reporting the presence or absence of cellular populations and the proportional composition of the sample
 <cit> .

recently there have been a number of attempts to automate the tasks of interpreting fc measurements
. although the methods published vary in their underlining philosophy, the prevailing strategy offered by the researchers cited is strikingly consistent. the algorithms propose various custom modifications of state-of-art clustering techniques ranging in complexity from k-means to mixture modeling.

however, with the exception of the recent report by cron et al.
 <cit> , the published methodology attempts to perform clustering one sample at a time, ignoring the fact that multiple samples can be considered as different realizations of a single underlying model reflecting the biological reality. for samples containing abundant and well-separated biological populations this limitation is of no practical consequence. the individual samples may be clustered, and the biological populations present in multiple samples can be aligned and matched post-clustering in order to perform a secondary analysis . multiple efficient methods have been proposed to accomplish this task
.

this conventional approach will fail if some of the cellular classes are represented by a low number of cells, if the population locations significantly vary from sample to sample, or if populations disappear or appear between samples. indeed, researchers have offered ingenious methods to alleviate some of these problems. for instance, azad et al. developed a procedure for matching corresponding clusters across samples in order to produce meta-clusters and to construct a high-dimensional template as a collection of meta-clusters for each class of samples
 <cit> .

thus, one of the major problems in the characterization of fc samples is the identification of global, biologically relevant clusters  corresponding to distinct cell types. existing methods can be adapted to this problem in two different ways. first, all sample data can be pooled before an algorithm is used to cluster these data. subsequently, the cell proportions in the recovered clusters may be used to characterize individual samples. flowpeaks
 <cit> , flock
 <cit> , flowmeans
 <cit> , swift
 <cit> , and dpgmm
 <cit>  are among many clustering techniques that belong in this category. such an approach will have limited success with many real-world fc data because in the presence of random effects, local clusters belonging to a given global cluster may significantly overlap local clusters of another meta-cluster. as a result, the meta-clusters recovered this way are unlikely to possess a well-defined biological meaning.

alternatively, a technique such as flame that performs joint cell clustering and cluster matching can be used for sample characterization
 <cit> . flame first identifies local clusters in each individual sample and then matches them across samples to recover meta-clusters. although this approach may indeed perform better compared to the first set of techniques that operate on pooled data, cluster matching in the presence of random effects will remain a big challenge. as a result, extraneous clusters may be generated and global clusters corresponding to distinct cell types may be split into multiple sub-clusters. these extraneous clusters appear as feature noise during sample characterization, affecting the robustness of the system.

hierarchical clustering models
an alternative model can be envisioned for processing large collections of fc samples. instead of considering every sample as a separate entity, we explicitly model samples as being specific manifestations of a more general underlying model. in this hierarchical setting, the individual sample is just a noisy realization of a latent, more general biological population mixture. this reformulation has more than just a semantic consequence. it allows us to build a statistical model that takes under consideration all the available information simultaneously, rather than building a single independent model for every sample.

herein, we present a non-parametric bayesian algorithm called aspire  that identifies biologically significant phenotypes across a batch of samples in the presence of random effects. we do not assume a priori the number of cell types  present in the biological samples analyzed, whether they are normal or anomalous. we assume, however, that samples share common characteristics, as they represent snapshots of the same underlying biological phenomenon . therefore, we expect that certain cell types would occur in multiple samples, forming noisy realizations of global clusters. our goals are  to infer the most likely organization of cell clusters defining normal samples and  to detect the presence of anomalous samples.

a related, although simpler, approach has been presented recently by cron et al.
 <cit> . the authors utilized a hierarchical version of a dirichlet-process gaussian-mixture model , extending their previous work
 <cit> . our proposed approach also belongs to the category of non-parametric bayesian models using dirichlet processes. however, in contrast to the method offered by cron et al. we explicitly model random effects to allow for sample-to-sample variability and subject-specific effects. we provide a complete mathematical framework allowing other researchers to use our methodology, as well as matlab and c code demonstrating in practice the implementation of the technique.

anomaly detection
the presented results demonstrate that the hierarchical model with random effects is superior to traditional per-sample clustering techniques such as flame, flowpeaks, and dpgmm as well as to the hierarchical model proposed by cron et al. in our report we specifically focus on the area of anomaly detection, which is rarely addressed in a systematic manner in the field of cytometry.

an anomaly detection process is extremely difficult to automate using traditional sample-clustering methods. however, an automated anomaly-detection system would provide practical value for computer-aided diagnostics. the majority of results observed in clinical fc are considered "normal," and detecting relatively rare "anomalous" samples requires the immense experience and practice of a well-trained fc practitioner .

by dictionary definition an "anomaly" is an oddity or abnormality, hence a case difficult or impossible to classify into any predefined category. in the context of clinical fc data analysis a sample is considered to be anomalous if the phenotypes that it represents do not conform with those expected in the case of a healthy patient. thus, a sample obtained from a sick patient would be labeled as anomalous. obviously there could be many possible abnormalities, resulting in a possibly very large number of phenotypic manifestations. moreover, if a fc measurement is perturbed by the presence of artifacts due to instrument errors or by biological sample-processing or handling errors, the results would also be recognized as anomalous. consequently, anomalous samples can be as different from each other as they are from normal cases. although from the biological perspective anomalous cases are extremely important and carry significant biological information, from the machine-learning perspective these samples typically offer only very limited informational value. because of their rarity it is difficult, and often completely impossible, to model them.

the challenging setting of the anomaly detection framework limits the applicability of traditional supervised methods. a training set may contain a large number of normal cases and just a few anomalous cases, each of which is different from the others. additionally, those anomalous samples may not be representative for a large and heterogeneous landscape of possible abnormalities. in the context of fc anomaly detection, our technique can be considered semi-supervised as it uses normal samples containing known  cell types in order to recognize anomalous samples that may contain additional unknown, often rare cell types.

methods
data model
fc measurement allows researchers to characterize individual cells present in a biological sample in terms of the abundance of functional markers, such as surface proteins. a data matrix obtained from a fc system upon sample analysis contains measurements of cells organized in rows. the columns represent so-called cytometric parameters, which are typically fluorescence intensities of labels attached to the markers of interest. the data matrix for a typical fc sample may comprise several thousand to a million cells , and several fc parameters .

each biological sample contains multiple, functionally distinct cell types, or "cell populations" in fc vernacular. these populations form multidimensional clusters in the space defined by measured biological features . although the characteristics  of cell populations present in normal samples are generally known, the number of populations and the proportions of cells present in them could be substantially different in anomalous samples.

we model the data from each sample by a mixture of a potentially infinite number of dirichlet-process gaussian-mixture models , with each individual dpm modeling the local distribution of a single class. under fairly weak assumptions and given enough components, finite mixtures of gaussian distributions can model any given density arbitrarily closely
 <cit> . the dpgmm itself is a mixture of a potentially infinite number of gaussian distributions, with the actual number of mixture components determined directly from the data during inference. thus, modeling local class distributions by dpgmms offers the flexibility needed to accommodate skewed or multi-modal distributions. in this context global clusters or meta-clusters refer to functional cell populations, and local clusters or local distributions refer to local realizations of global clusters . each local cluster is modeled by a dpgmm, i.e., a mixture of a potentially infinite number of gaussian distributions.

we introduce dependencies across multiple samples by placing a hierarchical dp prior over the base distributions of individual dpgmm models
 <cit> . this hierarchical prior provides a sharing mechanism across samples and allows for sharing of global mixture components across different samples. in fc data analysis, sharing models across multiple samples is a desirable property: a hierarchical prior captures the underlying biological pattern manifested across multiple samples.

we also recognize that limited precision of fc instruments as well as natural biological variability may affect the reproducibility of fc measurements. therefore, we expand the dpgmm model by postulating the presence of random effects. to account for various sources of sample-to-sample heterogeneity we presume that local cell clusters  are generated from noisy versions of corresponding global clusters. inspired by the random-effects model introduced by kim and smyth, we address the random effects by probabilistically modeling the deviations of local cluster means from the means of corresponding global clusters
 <cit> .

we provide the technical details of our data model in four stages, following the increasing complexity. in the first stage, we assume that each sample is modeled by a single dpgmm and that dpgmms across multiple samples are independent. in the second stage, we introduce dependencies across dpgmms and impose exact sharing of mixture components corresponding to classes across samples. this is equivalent to the hdpgmm model by cron et al.
 <cit> . in the third stage, we tackle the random effects problem by relaxing the exact sharing of mixture components, allowing local clusters to inherit noisy realizations of classes in individual samples. this approach is equivalent to the hdpgmm-re model by kim and smyth
 <cit> . finally, in the fourth stage we describe our proposed aspire framework, which models each sample by a potentially infinite mixture of dpgmms.

independent modeling of samples
as mentioned above, the aspire algorithm models each sample by a dpgmm, a gaussian-mixture model  with a dirichlet-process  prior defined over mixture components
 <cit> . the traditional approach to fitting a gaussian mixture model onto the data involves using the well-known expectation-maximization algorithm to estimate component parameters
 <cit> . the major limitation of this technique is the need to define the number of clusters in advance. although there are several ways to estimate the number of clusters in an off-line manner, these methods are in general suboptimal as they decouple two interdependent tasks: predicting the number of clusters and predicting model parameters.

unlike traditional mixture modeling, dpgmm predicts the number of clusters across multiple samples while simultaneously performing model inference. a dp prior belongs to a group of non-parametric bayesian models. it is considered "non-parametric" because the number of clusters can arbitrarily grow as needed to accommodate the data. however, the dp prior contains other parameters, the first of which is the precision parameter controlling the prior probability of producing a new cluster and thus indirectly influencing the total number of clusters. the second parameter – the base distribution – defines the bayesian aspect of the dpgmm. one can utilize the base distribution to encode the existing knowledge of the domain by defining prior distributions over the mean vectors and covariance matrices of components.

we denote cell i in sample j by xji ∈ ℜd, where i = { <dig> …,nj.} and j = { <dig> …,j}, nj. is the number of cells in sample j, and j is the total number of samples. in the dpgmm model xji is associated with a mixture component defined by θji = {μji,Σji}, which in turn is generated i.i.d. from a dp as follows:
  <dig>  

gj are random probability measures distributed i.i.d. according to a dp with a base distribution g <dig> and a precision parameter α.
  <dig>  

using the stick-breaking construction according to ishwaran and james
 <cit> , we can express gj as
 where
,
, and ψjt ∼ g <dig>  the points ψjt are called the atoms of gj. note that unlike a continuous distribution, the probability of sampling the same ψjt twice from gj is not zero and is proportional to βjt. thus, gj is considered a discrete distribution and offers a clustering property, as the same ψjt can be sampled for different θji. in this model α is the parameter that controls the prior’s probability of assigning a cell to a new cluster and thus plays a critical role in determining the number of clusters generated.

for the base distribution g <dig>  from which ψjt are drawn, we define a bivariate prior:
  <dig>  

where μ <dig> is the prior mean and κ <dig> is a scaling constant that controls the deviation of the cluster means from the prior mean. the smaller the κ <dig>  the larger the separation between the cluster means. the parameter Σ <dig> is a positive definite matrix that encodes our prior belief about the expected Σ, i.e., . the parameter m is a scalar that is negatively correlated with the degrees of freedom. in other words, the larger the m, the less Σ will deviate from e, and vice versa.

introducing dependencies across samples
in the previous section we introduced a clustering property across cells in an individual sample by placing a dp prior over gj as in equation . since gj is a discrete distribution, this prior enables sharing of the same cluster parameter by different cells. when dealing with multiple samples a higher level of sharing occurs. each local cluster in an individual sample is associated with a global cluster  representing a specific cell phenotype. thus, as we cluster cells in each sample, we also group local clusters into appropriate meta-clusters. this grouping can be achieved by placing a hierarchical dp prior over g <dig>  which introduces dependencies across individual dpgmms. the hierarchical dpgmm  for cell clustering and cluster matching across multiple samples becomes
  <dig>  

where γ is the precision parameter for the higher-level dp prior and h has the same form as in .

using the stick-breaking construction we can express g <dig> as
, where
,
, and ϕk = {μk,Σk} ∼ h. with this update, instead of letting g <dig> be distributed according to  as in the independent modeling of samples, we let h be distributed according to , and let the atoms of g <dig> be distributed according to h. the distinct set of parameters ϕk corresponding to global clusters is sampled from h and local cluster parameters are sampled from gj. since gj is a discrete distribution with its atoms sampled from g <dig>  and g <dig> is a discrete distribution with its atoms sampled from h, each local cluster in turn inherits one of the ϕk, i.e.,  and
, where k is the number of global clusters and mj. is the number of local clusters in sample j.

therefore, this model not only groups data points  within each sample into clusters, but also groups the local clusters across samples into global clusters . in other words, clustering and cluster matching are simultaneously addressed and depend on one another.

modeling random effects
in the standard hdpgmm the same parameters are inherited by all local realizations of a global cluster. however, owing to potential random effects caused by biological variability and limited instrument precision this simple framework may be unrealistic. therefore, to account for random effects we further presume that sample data are generated by noisy versions of the parameters defining global clusters. this change can be incorporated into the data model by updating the model in  as follows:
  <dig>  

where
 is a discrete distribution whose atoms are noisy versions of the corresponding atoms in g <dig>  with this correction to the model each individual sample now inherits different noisy realizations of global parameters, i.e., .

modeling individual sample data with multiple dpgmms
both hdpgmm and hdpgmm-re assume that local distributions of classes can be closely approximated by a single gaussian distribution. this assumption is quite restrictive for many practical settings, as local class data, which are produced subject to random effects, may emerge in the form of skewed as well as multi-mode distributions. as a result, fitting a single gaussian distribution for local class distributions creates artificial classes that may not be easily distinguished from other significant classes.

aspire uses a potentially infinite mixture of dpgmms to model each sample’s data, where individual dpgmms are linked together through a hierarchical dp prior. this hierarchical prior not only identifies local dpgmms associated with the same class through sharing of a global parameter, but also models the specific subset of classes present and their proportions in each sample.

we update our indexing notation and introduce an additional subscript k to account for multiple dpgmms in each sample. we denote point i of class k in sample j by xjki ∈ ℜd, where i = { <dig> …,njk.}, k = { <dig> …,k}, and j = { <dig> …,j}, njk. is the number of points from class k in sample j, k is the total number of classes, and j is the total number of samples. the proposed aspire data model becomes
  <dig>  

where ϕk are global parameters each of which is associated with a different class. individual dpgmms associated with the same class inherit the same ϕk across samples. the notation
 indicates a distribution f centered at ϕk and defines class-specific base distributions of individual dpgmms. although
 is same for all dpgmms associated with the same class, local clusters between samples are generated i.i.d. given ϕk of corresponding dpgmms. thus, each local realization of a given class is modeled by a different dpgmm, allowing us to account for sample-to-sample variations in a systematic manner.

for the sake of simplicity and to preserve conjugacy we assume that the covariance matrices of all local clusters associated with the same class are identical and limit the susceptibility of local clusters to noise with their mean vectors. more specifically, μjki ∼ gjk, Σjki = Σk, and
 is defined as
  <dig>  

note that the covariance matrix of the base distribution
 is a function of Σk; hence conjugacy of the model is preserved. conjugacy of the model is important since it enables us to implement a collapsed version of the gibbs sampler as discussed in the next section. the scaling constant κ <dig> adjusts the degree of deviation of local means from the corresponding global mean. a smaller κ <dig> results in a situation where local realizations of global means deviate significantly from one sample to another, suggesting significant random effects. on the other hand, a larger κ <dig> value limits these deviations, resulting in few to no random effects.

model inference
posterior inference for the proposed model in  can be performed by a gibbs sampler by iteratively sampling local-cluster indicator variables
, class indicator variables
, and local-cluster parameters
 given the state of all other variables. including ψ in the gibbs sampler significantly increases the size of the state space and severely retards the convergence of the gibbs sampler to the equilibrium distribution. fortunately, our model uses a conjugate pair of h and p, which allows us to integrate out ψjkt analytically. thus, we omit the discussion of sampling of ψ and describe the sampling process for t and c only.

when sampling the local-cluster indicator variable tjki for xjki we first remove xjki from its current cluster and update the corresponding predictive distribution
. then, we evaluate the likelihood of xjki’s belonging to an existing cluster by computing
 for all local clusters associated with global cluster k in sample j, and its likelihood of originating from a new cluster by finding the predictive distribution for an empty cluster, i.e., p. finally, we sample tjki based on the normalized values of the product of prior probabilities and the corresponding likelihood values. this can be expressed by the following equation:
  <dig>  

where t-jki is the set of all cluster indicator variables, excluding the one for point i of class k in sample j, d… denotes the set of all points across all samples,
 denotes the subset of points sharing class cjkt across all samples,
 denotes the subset of points in sample j belonging to cluster t of class k, excluding point i, mjk is the number of clusters associated with class k in sample j, and
 is the number of data points in cluster t of class k in sample j, excluding point i.

as we model local clusters by gaussian distributions with gaussian and inverted wishart priors defined over their mean vectors and covariance matrices, respectively, the predictive distribution
 turns out to be in the form of a student-t distribution, the derivation of which is provided in additional file  <dig> 

when sampling the class indicator variable cjkt for cluster t of class k in sample j we remove points djkt from
 and update the parameters of the predictive distribution for class cjkt. then, we evaluate the joint likelihood of cell data in djkt for existing classes as well as for a new class. finally, we sample cjkt based on the normalized values of the product of prior probabilities of classes and the corresponding joint likelihood values. this can be expressed by the following formula:
  <dig>  

where
 denotes the subset of points across all samples associated with class k, excluding points in cluster t in sample j. the predictive distribution p is also in the form of a student-t distribution and can be readily obtained from
 by setting djkt an empty set.

sampling both tjki and cjkt requires evaluating the predictive distribution for a new, i.e., an empty, cluster. the predictive distribution for a new cluster is denoted by p in  and . this distribution can be obtained from p by setting d.k. an empty set.

during a single run of the aspire algorithm one sweep of the gibbs sampler involves two main iterative loops. in the first loop, tjki are sampled for all points across all samples. in the second, cjkt are sampled for all local clusters across all samples. the gibbs sampler is run for thousand sweeps. the first  <dig> sweeps are ignored as burn-in, and five samples drawn one every  <dig> sweeps are saved for final evaluation. herein we used an approach similar to the one proposed in cron et al. to deal with label switching
 <cit> . the mode of cluster labels computed across five samples is assigned as the final cluster label for each data instance.

as the first loop iterates over all cell data across all samples it is far more computationally expensive than the second loop. fortunately, during the sampling process involving tjki global cluster parameters are fixed. this allows us to sample tjki independently for each sample during a single sweep and leads to significant improvement in processing time on multi-processor machines. for fc data containing  <dig>  cells across  <dig> samples, the current version of the aspire algorithm implemented in c++ runs in less than thirty minutes on an eight-core computer.

strategy for tuning model parameters
the aspire model has seven free parameters , each reflecting a different aspect of the underlying data-generating process. although data sets resulting from a wide range of experimental settings can be more flexibly modeled by tuning these parameters, an excessive number of free parameters increases the risk of overfitting in addition to affecting the computational time of model optimization. the following describes our strategy to tune these parameters effectively.

as the sample batch may contain anomalous samples, prior information about the potential number of local and global clusters may not exist for most real-world fc data. thus, for α and γ we use vague priors by fixing their value to  <dig>  we set m to the minimum feasible value, which is d +  <dig>  to achieve the maximum number of degrees of freedom. by doing this we let the actual covariance matrices of local and global clusters deviate significantly from the expected covariance matrix, which is
. the prior mean μ <dig> is set to the mean of the entire data. the scale matrix Σ <dig> is set to i/s, where i is the identity matrix and s is a scaling constant.

this leaves κ <dig>  and κ <dig>  and the scaling constant s of Σ <dig>  as the three free parameters that require tuning. we used the flowcap  <dig> competition lymphoma dataset
 <cit>  to tune s and κ <dig> values empirically. the remaining parameter κ <dig> is selected from the set of { <dig> ,  <dig> ,  <dig> ,  <dig> , 1} to optimize gibbs likelihood, which is measured by the joint sampling likelihood of all data points.

one-class classification by resampling
once global clusters are identified we can derive a feature vector of global-cluster proportions characterizing each sample. these feature vectors are used for training and testing a one-class classifier. we used the resampling technique to train the classifier
 <cit> . in this approach, a large number of samples is uniformly drawn from the support of the data distribution and all these samples are considered as "positive". normal cases are considered as "negative". a binary classifier is trained to separate the positive samples from the negative ones.

in the described setting, each sample is characterized by a feature vector of global-cluster proportions whose elements add up to one. if k denotes the number of global clusters and pjk, k = { <dig> …,k} is the proportion of component k in sample j, the support of such a data distribution is confined to a simplex of the form 0 ≤ pjk ≤  <dig> 
. uniform sampling from this simplex is equivalent to drawing samples from a k-variate dirichlet distribution with all its parameters set to one.

we draw  <dig>  samples this way and use this set as the positive class. the feature vectors of normal cases are set as the negative class. using these data as a training data set we optimize a binary support vector machine  with a linear kernel and evaluate this classifier on test data containing both normal and anomalous cases. the cost parameter of svm is tuned by a hold-out approach using a subset of the training data set as a validation set.

RESULTS
benchmark techniques
in order to evaluate aspire and compare it to state-of-art approaches, four other techniques were experimentally tested for the purpose of this study: conventional dpgmm
 <cit> , flowpeaks
 <cit> , flame
 <cit> , and hdpgmm recently published by cron et al.
 <cit> .

although both dpgmm and flowpeaks are more suitable for clustering single-sample data, they can be used in a batch setting by clustering data pooled from all samples. using this approach, global clusters can be readily identified without the need for clustering individual samples, finding local clusters, and matching them with one another. local proportions of global clusters recovered this way can then be used to characterize biological samples. among many algorithms that can cluster fc data in a pooled setting, dpgmm was our preferred benchmark choice because it originates from the same family of non-parametric bayesian models as does aspire. the flowpeaks algorithm is also a highly relevant method, as it has recently shown great promise not only in clustering
 <cit>  but also in classification of fc samples in a supervised setting
 <cit> .

dpgmm fits a gaussian mixture model with a potentially infinite number of components onto pooled data, with the number of actual components determined during model inference. as each component in the dpgmm is gaussian, non-gaussian clusters in the pooled data are unlikely to be captured as a single cluster by dpgmm. aspire is conceptually different from dpgmm – instead of fitting a single gaussian mixture on pooled data, aspire fits one gaussian mixture for each individual sample and treats these individual mixture models as noisy realizations of a latent global mixture model.

the flowpeaks algorithm initially partitions data into a large number of clusters using the k-means algorithm and then merges the clusters by exhaustively searching local peaks. although this agglomerative process in flowpeaks makes capturing non-gaussian clusters possible, it has significant limitations in the presence of random effects; when the locations of local clusters in the feature space deviate from one sample to another, it is unrealistic to expect all local clusters within a meta-cluster to have a single peak in the pooled data.

unlike dpgmm and flowpeaks, which cannot perform cluster matching, joint clustering and cluster matching is possible with the flame and hdpgmm models.

flame fits onto the data from each sample a mixture model with four possible choices of density functions  available for individual mixture components. local modes are pooled and then clustered to obtain a global template of meta-clusters. local clusters are then assigned to these meta-clusters using graph-matching techniques. flame is similar to aspire in the sense that both techniques model individual sample data by a mixture model. however, there are significant differences in model learning. flame divides model learning into three tasks: clustering data in individual samples, finding the optimal number of local clusters in each sample, and matching local clusters across samples to recover global clusters. these three tasks are performed by flame independently and in a sequential manner.

unlike flame, model learning by aspire is performed as a single unified process. thus, aspire can take advantage of recurring patterns of similarities across samples. for example, groups of isolated cells forming rare populations that would be ignored as outliers by clustering followed by cluster matching can be successfully identified as rare populations when these two tasks are performed simultaneously. model learning aside, the major limitation of flame occurs when anomalous samples are present in the data set. the flame algorithm clusters local modes to generate a template of meta-clusters. this template is unlikely to capture global clusters unique to cell types in anomalous samples, as many of the local modes will be isolated and will likely be clustered with local modes from one of the more dominant cell types.

the hdpgmm by cron et al. is similar to aspire in certain ways. both hdpgmm and aspire model individual sample data by a dpgmm and link different dpgmm models through a hierarchical prior. thanks to the non-parametric nature of these models, the number of local and global clusters can arbitrarily grow in both to accommodate data as needed. despite these similarities, however, there are important conceptual and algorithmic differences.

the model by cron et al. does not recognize the presence of random effects and assumes that local clusters are exact realizations of global clusters. in the presence of random effects this assumption is not realistic and leads to the creation of several extraneous global clusters. cron et al. tackle this problem by post-processing the results to combine global clusters sharing a common mode
 <cit> . this step is very similar to the mode-clustering technique described above for flame and relies on two important assumptions:  local clusters of a given global cluster share the same mode, and  each global cluster has several local realizations. the first assumption is not realistic when random effects are present. the second is not realistic when the data set contains anomalous samples characterized by isolated, phenotypically abnormal cell types.

unlike hdpgmm, aspire assumes that local clusters are noisy realizations of global clusters, and probabilistically models the deviations of the local cluster means from the corresponding global cluster means. as random effects are already taken into account during model learning, no post-processing is required with aspire. apart from these conceptual differences there are also algorithmic differences between aspire and hdpgmm. the state space of hdpgmm contains cluster parameters. this slows down convergence of the sampling process. aspire uses a conjugate data model that makes possible the implementation of a collapsed gibbs sampler as a result, the state space of the aspire model does not contain cluster parameters. eliminating cluster parameters from sampling speeds up convergence.

for testing flame performance we used the version implemented in genepattern
 <cit> . when running the flame algorithm for the simulated data, we fit each sample by a gaussian mixture model since the cluster data were generated by gaussian distributions. for the real fc data, we fit each sample by a skewed-t mixture model as suggested in the original flame report
 <cit> . for hdpgmm testing we used the software provided by the authors
 <cit> . the flowpeaks algorithm was tested using the r version available through bioconductor
 <cit> . the dpgmm method was tested utilizing our own implementation of the algorithm by cron et al. the performance of the models tested is evaluated by the area under the receiver operating characteristics  curve, in short the auc value.

experiment 1: synthetic data containing three types of anomalies
the purpose of this in silico experiment is to illustrate the ability of aspire to recover global clusters and identify anomalous samples. we generated twenty-five samples, each with one thousand data points in a two-dimensional feature space. ten of the samples were considered normal, and global clusters associated with samples in this group were treated as normal clusters. fifteen anomalous samples were generated in three groups, each group simulating a different anomalous effect.

the samples in the first group were associated with the same set of global clusters found in the normal samples. an anomaly effect was produced by creating samples with different relative proportions of points belonging to these clusters.

the generative model associated with samples in the second group involved six global clusters, three of which were normal clusters and another three of which contained different rare populations. each rare population consisted of only five data points. the relative proportions of points in the normal clusters were the same as those in normal samples.

the samples in the third group were generated to simulate measurement artifacts. to achieve this effect, three global clusters were derived from normal clusters by shifting their mean vectors and reducing standard deviations in each dimension by half. to introduce random effects into the generative process the points in each sample were generated from the local clusters using κ1 =  <dig> . distribution of global and local clusters and the data points corresponding to events for all twenty-five samples are shown in figure
 <dig>  ellipses in the figures correspond to data distributions that are at most four standard deviations from the mean.

we applied all five techniques  to this data set and plotted recovered distributions of global clusters for each case in figure
 <dig> along with the pooled data from all twenty-five samples. the results demonstrate that all techniques but aspire failed to recover accurately the distributions of global clusters owing to large inter-sample variance affecting local clusters.figure  <dig> 
global and local clusters for twenty-five simulated samples. plots in the top two rows correspond to normal samples. rows three through five show plots of anomalous samples produced by introducing rare populations or by distorting distributions of normal clusters. solid and dashed ellipses indicate distribution of global and local clusters, respectively. individual instances are shown by black points. distributions sharing the same global cluster  across different samples are identified by the same color.
distributions recovered by competing techniques. solid- and dashed-color ellipses indicate global and local clusters, respectively. solid-black ellipses show recovered distributions of global clusters. a. pooled data. b. aspire. c. dpgmm. d. flame. e. flowpeaks. f. hdpgmm.



aspire not only correctly predicted the true number of global clusters but also recovered their corresponding distributions with fairly good precision. between the two techniques operating with pooled data  flowpeaks seemed to handle random effects better as it accurately recovered distributions for two of the nine global clusters. of the two techniques, other than aspire, operating with individual sample data , hdpgmm suffers significantly from random effects. although it accurately recovered distributions of local clusters, it failed to consistently match local clusters across samples, and as a result substantially overestimated the actual number of global clusters. compared to hdpgmm, flame performed relatively well and accurately recovered distributions of four of the nine global clusters. however, flame failed to process all five samples containing rare clusters. the errors generated during the mixture-modeling stage suggest that the flame process cannot properly initialize cluster centers when there are isolated clusters with very few data points. additional experimental results with aspire investigating the effect of isolated rare classes and limited random effects on simulated data are provided in additional file
 <dig> 

experiment 2: purdue healthy subjects  data set
the phs data set contains fc results of a 5-parameter blood analysis performed using samples collected from five healthy donors. in each sample five fluorescent labels – pc <dig>  fitc, pe, pc <dig>  and ecd – are used to identify cells expressing cd <dig>  cd <dig>  cd <dig>  cd <dig>  and cd <dig> markers, respectively.

the sample collection and data acquisition were performed over a number of days. in accordance with standard fc data-analysis procedures, samples were pre-processed by performing linear spectral unmixing 
 <cit> . in order for the compensation to return approximate abundances of the labels used, one must employ the correct spillover matrix obtained from single-stained controls run under identical experimental conditions. however, in post-processing, it was discovered that a small subset of samples had been compensated using the wrong controls. these samples are readily identifiable by trained cytometrists . we consider the improperly unmixed samples to be anomalous. the task for the algorithm was to find the anomalous samples automatically. this task mimics a typical data-quality check step performed on a large collection of flow cytometry data.figure  <dig> 
examples of a normal and an anomalous sample in the purdue data set. 2d scatter plots of cells expressing cd <dig>  cd <dig>  cd <dig>  cd <dig>  and cd <dig> markers. a. anomalous sample. b. normal sample.



we used a total of  <dig> samples, five of which were anomalous. the data set obtained by subsampling ten percent of the cell data from each sample contained  <dig>  data points. data corresponding to each marker were transformed logarithmically and standardized to have unit variance. with this data set flame failed to properly process nine of the normal cases, which were excluded from subsequent analysis of flame performance. the other four techniques were evaluated on the entire data set. an anomalous sample along with a typical normal sample is shown in figure
 <dig>  the experimental settings used in experiments for all five techniques are summarized in additional file
 <dig>  the trace plot obtained by aspire is shown in additional file
 <dig> 

the numbers of global clusters identified for the phs set by each of the five algorithms are shown in table
 <dig>  we characterize the samples with feature vectors of global-cluster proportions produced by the five algorithms. since the feature vectors describe composition of the samples , we visualize the results with 2-d scatter plots representing compositional principal component analysis rather than standard pca 
 <cit> . after processing with the aspire algorithm, the anomalous samples are clearly isolated and can be easily identified in figure
 <dig>  for the other four algorithms the distinction between normal and anomalous cases is not obvious.table  <dig> 
number of global clusters identified by each algorithm after excluding small clusters containing less than  <dig> % of the total number of cells across all samples


reported values are modes of ten repetitions. flame results for the aml data set are not included as flame produced errors on many of the samples in this data set.
2d scatter plots obtained by the robust compositional pca algorithm using cell-type proportions predicted by each of the five algorithms on the purdue healthy subjects data set with anomalies. properly compensated samples are shown by blue circles and those with compensation artifacts by red circles. a. aspire. b. dpgmm. c. flame. d. flowpeaks. e. hdpgmm.



next, we used samples from three subjects for training  and samples from the remaining two subjects along with five anomalous samples  for testing. we trained a one-class dirichlet-svm classifier described previously under the methods section and evaluated it on the test set. we repeated this process ten times, each time with a different set of positive samples drawn from the dirichlet distribution. auc values obtained by all five techniques are included in the first column of table
 <dig>  aspire achieved the perfect auc value. the flowpeaks algorithm and flame produced comparable auc values of  <dig>  and  <dig> , respectively. dpgmm achieved an auc value of  <dig> . with an auc of  <dig>  hdpgmm cannot compete with the other techniques.table  <dig> 
auc values achieved by each algorithm on the purdue and aml data sets


numbers in parentheses are standard deviations across ten repetitions of the corresponding one-class classifiers. flame results for the aml data set are not included as flame produced errors on many of the samples in this data set.



experiment 3: dream6/flowcap-ii acute myeloid leukemia  data set
this data set, which was originally made available for the dream6/flowcap-ii molecular classification of aml challenge, contains samples from  <dig> aml-diagnosed patients and  <dig> healthy patients
 <cit> . each subject sample was subdivided into  <dig> tubes and analyzed for the presence of different marker combinations . in addition to the five markers, the forward scatter  and side scatter  of each sample were also measured for each tube. we exclude the two control tubes  and report results on the remaining six. the data for side scatter  and for all the fluiorescent markers were transformed logarithmically, whereas the data for forward scatter  remained linear. data for each channel are also standardized to have unit variance.

although the dream6/flowcap-ii contest was designed for traditional supervised classification of aml and healthy cases, we are using this data set in a considerably more challenging setting. unlike the contest, where participants had access to aml cases during both training and testing, we did not include any aml cases in the training. instead, we tried to find whether the proposed aspire model can identify anomalies even when they are not defined or demonstrated a priori. our training data set contained samples from  <dig> normal subjects, whereas the testing data set contained samples from  <dig> normal subjects and  <dig> aml-positive patients. the data set for each tube was subsampled to contain  <dig>  cells from each sample for a total  <dig>  ×  <dig> cell data points across  <dig> samples.

we first report our results separately for each tube and then report results for the combined data by concatenating feature vectors of global-cluster proportions for the six tubes. the number of global clusters and the auc values achieved by each technique for individual tubes and for their combinations are included in tables
 <dig> and
 <dig>  respectively. since the flame algorithm produced errors during processing of many samples in the aml data set, no results are reported for flame performance on this data set. the experimental settings used in experiments for all five techniques are summarized in additional file
 <dig>  trace plots obtained by aspire are shown in additional file
 <dig> 

among the four remaining algorithms tested, aspire achieved the highest auc values for all individual tubes as well as for the combined data. the auc values given by aspire exceeded  <dig>  for all tubes, with an auc of  <dig>  achieved for three of the six tubes. the average number of global clusters recovered per tube by aspire was  <dig> .

dpgmm and flowpeaks produced aucs above  <dig>  for two of the six tubes. the average number of global clusters recovered per tube for these two algorithms was  <dig>  and  <dig> , respectively. results obtained by hdpgmm were not promising. the auc values achieved by hdpgmm suggest that the model did not perform better than random chance for most of the tubes. hdpgmm also produced a large number of extraneous global clusters.

the auc values obtained by combining data from all the tubes were lower than the maximal auc values achieved for the individual tubes for all four techniques. this was expected, as feature noise present in the feature vectors describing individual tubes accumulates with concatenation
 <cit> . among the four techniques aspire suffered the least from this noise effect and showed the least degradation in the maximum auc value after all the tubes were combined.

although the main objective of this experiment was to demonstrate that global clusters discovered by aspire are useful for identifying anomalous samples in a one-class classification setting, aspire can also be used in a fully supervised classification setting with both normal and anomalous classes represented in the training data set. to show that aspire is also competitive in a traditional supervised classification setting we followed the procedure adopted in the dream6/flowcap-ii challenge to train and test a supervised classifier. the results in table
 <dig> suggest that in a supervised mode aspire can match the best-performing techniques listed in the flowcap-ii report
 <cit> .table  <dig> 
supervised-classification accuracies for aspire on the aml data set


numbers in parentheses are standard deviations across ten repetitions.



discussion
the unrealistically large number of meta-clusters and poor auc values generated by hdpgmm suggest that the cluster-matching aspect of this algorithm suffers significant problems with sample heterogeneity. techniques that operate with pooled data  performed better compared to hdpgmm in terms of meta-cluster numbers and classification results. results from all three experiments suggest that flowpeaks tends to underestimate whereas dpgmm typically overestimates the number of global clusters. flame positions itself in the middle, seemingly handling the more abundant cell populations well but failing to identify rare cell types. the presence of multiple spurious meta-clusters generated by flame in experiments  <dig> and  <dig> indicate that the mode-clustering algorithm employed by flame is not very effective in the presence of random effects.

compared with the benchmark techniques, aspire is more effective in capturing the phenotypic patterns linked with anomalies in biological characteristics. in fact, in experiments with synthetic data , aspire not only correctly inferred the number of meta-clusters but also identified all the anomalous samples with perfect accuracy. in experiments with real-world fc data aspire produced reasonable numbers of global clusters and achieved almost perfect auc values .

in terms of computation time , flowpeaks – a k-means–based technique – was by far the fastest algorithm. it takes less than a minute to run flowpeaks on the subset of the aml data set containing  <dig>  data points across  <dig> samples . in contrast, the processing time for a single tube from the aml data set takes about  <dig> hours for hdpgmm, 3- <dig> hours for dpgmm, and less than  <dig> hours for aspire. the processing time for flame  was also close to  <dig> hours.

the processing time required by hdpgmm and aspire can be significantly reduced by running the algorithms in a multi-core mode. although we were not able to test the multi-core version of hdpgmm by cron et al. owing to operating system restrictions, about four-fold improvement in run time was observed for aspire executed on an eight-core machine.

CONCLUSIONS
we introduced aspire as a new method for sample characterization in fc that performs joint cell clustering and cluster matching in the presence of random effects. the algorithm operates in a batch setting, discovering global clusters in collections of fc data. by utilizing a non-parametric clustering approach paired with a hierarchical model, aspire addresses the issue of anomaly detection in a way both unique and original. in contrast to established fc processing techniques, aspire provides higher robustness and the ability to incorporate experimentally acquired notions of biological and technical  variability.

the reported experimental results obtained from analyzing synthetic and real data favor aspire over other benchmark techniques considered for anomaly detection. results also indicate that by modeling potential random effects aspire is able to produce a realistic number of meta-clusters that are interpretable in the biological context. this contrasts with the unexpectedly large number of meta-clusters generated by dpgmm and hdpgmm, the other dirichlet process–based methods. the impressive auc values demonstrate the unique capability of aspire to detect and identify anomalous samples in the complete absence of information regarding the characteristics of anomalies. in other words, aspire is able to form a reasonable generalization on the basis of normal cases, and – like experienced cytometrists – use this generalization to locate suspicious and abnormal cases.

in the proposed approach anomalies are detected by a two-stage process involving the discovery of meta-clusters followed by one-class classification of feature vectors of cluster proportions characterizing samples. these two stages can be combined into one by a nested dirichlet-process model
 <cit>  that can cluster not only events and populations but samples as well. another avenue for future research involves incorporation of partial knowledge about anomaly characteristics. the reported model assumes that anomalies are completely unknown; however, one can envision a setting in which a reasonable approximation of anomaly characteristics can be hypothesized. our model can account for such a framework by employing a restricted version of the gibbs sampler.

aspire is implemented in c++ and is available as stand-alone executable software. matlab®;  scripts are also provided for using aspire within the matlab platform. the software is freely available from
http://cs.iupui.edu/~dundar/aspire.htm.

electronic supplementary material
additional file 1:
evaluation of the predictive distributions for local and global clusters.


 additional file 2:
additional experimental results with simulated data.


 additional file 3:
model settings used in experiments with phs and aml data sets.


 additional file 4:
trace plots of cluster proportions in experiments with phs and aml data sets.


 competing interests

the authors declare that they have no competing interests.

authors’ contributions

md, fa, and br developed the aspire algorithm. md, fa, and hzy developed the aspire software. md and hzy ran experiments. md and br wrote the paper. all authors read and approved the final manuscript.

this research was sponsored by the national science foundation  under grant number iis- <dig> , by the national institute of biomedical imaging and bioengineering  under grant number 5r21eb <dig>  and by the phrma foundation . the content is solely the responsibility of the authors and does not necessarily represent the official views of nsf or nibib.
