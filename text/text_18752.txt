BACKGROUND
dna microarrays enable the simultaneous measurement of expression levels for many thousands of genes at a given instant in any biological system, revealing the expression state of those features as determined by statistical significance inference  <cit> . by taking many such snapshots over a number of experimental conditions and applying the appropriate analyses , groups of genes with similar expression profiles can be detected to suggest the function or regulation of uncharacterised genes. analysis of such transcriptomic datasets, or compendia  <cit> , allows the expression patterns for particular genes to be compared, offering an ideal way to reveal the higher levels of organisation in an organism by a 'systems'-level approach.

dual experimental approaches have been used for two-colour transcriptomic microarrays: one makes a direct comparison between complementary dna  samples , and the other uses a common reference in one channel of every microarray   <cit> . babar was developed to improve the value of data generated by the common reference design which uses the same genomic dna , or pooled rna, hybridized to every microarray  <cit> . the power of this design is that it enables the easy comparison between, or within, microarray datasets  <cit> . the investigator can assemble any combination of data derived from microarrays, making it possible to test new hypotheses. the common reference design is also ideal for 'systems'-level analyses. for example, the context likelihood of relatedness  algorithm infers prokaryotic transcriptional regulatory networks from this type of compendium of gene expression profiles, or other one-channel designs such as affymetrix arrays, collected under various experimental conditions  <cit> .

for analytical purposes, we consider common reference experiments to be of a pseudo-direct design such that if the intensity values for a pair of common reference microarrays are plotted on a graph of condition  <dig>  versus condition  <dig> , where gx is the reference channel, then non-differentially expressed genes should map onto a line of slope / ~  <dig>  however, experimental data are usually more complex: the data points can diverge from the ideal line in an intensity-dependent manner resulting in a 'banana-shaped' distribution with a non-zero intercept, with non-differentially expressed genes showing considerable scattering around this line and the scatter patterns varying between microarray slides. the intensity relationship between the microarrays is best seen in an ma-plot  <cit> , which is a scatterplot of the intensity log-ratio m = log <dig> {/} versus the mean log intensity a = log <dig> √{ × }. the focus of the ma-plot is on the symmetrical distribution about the line where m =  <dig> , but such a plot for a pair of common reference microarrays can show little symmetry due to intensity and spatial variation. such systematic bias arises from several factors: background effects on the microarray, experimental variation, sample preparation and the fluorescent labelling and printing processes. one example of experimental variation that is of particular relevance to this study involves microarrays that utilize rna isolated from a challenging environment, such as from bacteria within a mammalian cell. the amount of rna extracted in such cases is typically small   <cit>  and the resulting labelled cdna can give rise to considerable variation between replicate spots on different microarrays. this phenomenon manifests itself as low intensity signals, a high background, or both, and results in a reduction of the distribution of log-ratios of expression. a likely reason for the aberrant labelling is the presence of contaminants associated with the rna sample  that can inhibit enzymatic reactions and lead to poor cy-dye incorporation  <cit> .

normalisation is the process of removing systematic bias from microarray data. this is achieved by transforming the data values as prescribed by a given algorithm applied 'within' microarrays  or 'between' microarrays. two-colour microarrays are often normalised by applying locally estimated scatterplot smoothing  to the ma-plot for an entire microarray  or to the ma-plot for each print-tip group of dna elements upon a given microarray . in both cases the algorithm fits a line to the local neighbourhood of each data point and combines these lines to generate a loess curve that follows the central trend across the data. given the assumption that the majority of genes do not respond to a given experimental condition and should therefore be centred about m =  <dig>  the loess curve is used to adjust the values for each feature accordingly. however, the loess normalisation assumes that the m-value is independent of the a-value. this is not true for common reference microarrays because while the signal for the cdna channel can vary greatly for each feature, the signal for the gdna reference channel is more or less constantly high. this results in small m-values corresponding to small a-values, and large m-values corresponding to large a-values; hence the loess cannot be applied to individual common reference microarrays.

therefore, a useful modification of the loess is the cyclic loess normalisation which performs the loess on each unique pair of microarrays in a dataset in order to form the normalising relation  <cit> . it has been applied to affymetrix datasets but in principle is equally applicable to pairs of spotted cdna microarray datasets  <cit> . such a 'complete data method'  <cit>  appears ideal for simultaneously normalising data across large, heterogeneous common reference datasets, where individual microarrays can show very different spreads and distributions of m-values.

however, consider the example of a pair of microarrays  each with a median m-value close to zero but with very different spreads in their respective m-values. is this due to technical or biological variation? if the same gene was the most highly expressed feature on both microarrays then without normalisation it would be incorrectly interpreted as being differentially expressed, but imparting identical distributional measures to these microarrays may remove the biological variation in which we are interested.

the method of normalisation must be carefully chosen and a number of 'between arrays' normalisation methods are available. such methods include scale-normalisation which scales the m-values so that each microarray has the same median absolute deviation, quantile-normalisation which makes the distribution of m-values for each microarray identical, and cyclic loess normalisation  which is less aggressive in its normalisation.

excellent free software exists for the normalisation and analysis of microarray data; for example, bioconductor  <cit>  is a collection of r  <cit>  packages and includes the limma package  which implements global loess, print-tip loess, quantile and scale normalisation. however, working with multiple gene microarray layouts in limma is very difficult; for example, given a number of genepix files described by just two gene array layout  files, each .gal file and its associated microarray results files must be input and normalised separately. then prior to merging the two resulting malist objects, the datasets must be aligned by gene id, must be of exactly the same length and should contain the same gene ids.

there is a real need for an application that can automatically  handle heterogeneous datasets in a robust way. babar implements the cyclic loess algorithm, normalising each unique pair of microarrays across the whole dataset. we developed babar to simplify the normalisation process for such datasets by providing a combination of 'within' and 'between' microarray normalisation steps, allowing scientists without a background in statistical programming to focus on the interpretation of results.

implementation
running babar
babar is a software package implemented in r and is available as a zip file . its only dependency is on the limma package. as well as the documentation provided with the package, full instructions and an example of running babar are given in additional file  <dig> 

input and handling of microarray data files
babar simply requires the unprocessed microarray data files generated by genepix  and/or bluefuse  microarray image analysis software as its input. for genepix files, only the median background and median foreground columns are read for both channels, along with the corresponding block, column and row data. for bluefuse files, the ampch <dig> and ampch <dig> columns are read along with the corresponding block, subgridcol and subgridrow data. in this way, the use of gene array layout files is avoided and babar is able to handle any combination of genepix and bluefuse files. to ensure that mixtures of genepix and bluefuse files were handled correctly, a test-set of microarrays was scanned independently by both imaging software packages. combinations of genepix and bluefuse-derived microarray data were run through babar and the results compared. no significant differences were seen between genepix-only, bluefuse-only, and datasets that were mixtures of these formats; the few small discrepancies simply reflected the different spot-finding software algorithms used by genepix and bluefuse and not the babar normalisation itself .

the babar algorithm
here we describe the algorithm and the rationale for normalisation via a number of steps carried out 'within' microarrays  and 'between' microarrays :

 <dig> - background correction
 intensity values for each gene are background-corrected by subtraction of the median background from the median foreground for both channels. in addition, any feature where the background lies within a user-defined number of standard deviations of the foreground is 'flagged' by babar . the bluefuse scanning software automatically carries out background correction via bayesian statistical methods.

 <dig> - removal of 'flagged' features
features are excluded from the normalisation process if:  they are identified in 'step 1' or were flagged by the software as either - <dig>  - <dig> or - <dig> ;  features have names like 'empty', 'empty', 'ctrl-' and 'ctrl-';  they are flagged as 'e' .

 <dig> - automatic reference channel detection 
the same reference sample is used across our datasets. in our hands, for any given microarray, the reference  channel always has a higher median value compared to the signal channel. this enables the log2-ratios to be automatically calculated in a consistent fashion, even when dye-swaps are present by accident or design.

 <dig> - block-by-block median centering
log2-ratios  are calculated for each sub-array and the median value set to zero as our assumption is that the majority of genes are unchanging. as different gene microarray layouts may be employed, the requisite spatial information is retrieved from the microarray files themselves.

 <dig> - average any multiple features
where there are multiple copies of an identical sequence  on a given microarray, the average of the log2-ratios is calculated so that any given feature appears just once in the dataset derived from that microarray.

 <dig> - cyclic loess normalisation 
global loess normalisation is carried out on each pair of microarrays using limma. the 'span' parameter  may also be user-defined; the default 'span' is  <dig> , or 30%.

 <dig> - average the normalised log2-ratios
the average normalised log2-ratio expression value for each feature across the dataset is calculated . babar also handles the case where, inevitably, the fluorescent signal representing a given gene may not appear on every microarray .

 <dig> - correct medians to m =  <dig> 
the averaged, normalised log2-ratios undergo a final correction such that the median log2-ratio of expression for each microarray is set to m =  <dig> . results may be outputted as a text file for the convenience of the user.

to better explain the steps following pre-processing of the data and especially the cyclic loess normalisation step, consider steps 6- <dig> in more detail with an example where babar is applied to a dataset comprised of three microarrays . for each feature on a microarray let r be the fluorescent signal channel and g the reference channel. a pair-wise ma-plot global loess normalisation is carried out on the first pair of microarrays  such that for each feature  

the normalised log2-ratio  for each feature is calculated as nab = mab - loess , where loess is the global loess curve. the reverse comparison  is simply given by nba = - nab.

the global loess step is repeated for the other pair-wise comparisons  followed by calculation of the reverse comparisons .

the normalised log2-ratios for each feature are averaged such that  

where n is the number of pair-wise comparisons involving microarray a for which the feature was present. if the feature were present on all three microarrays, then n =  <dig> as two pair-wise comparisons can be made ; the reverse comparisons are not counted . if the feature were only present on microarrays a and b then n =  <dig>  as only one pair-wise comparison was made, and the normalised log-ratio for this feature on microarray c would be assigned na.

the averaging of the normalised log2-ratios step is repeated for the other comparisons to obtain b  and c .

finally, as it is our assumption that the majority of features are not differentially expressed, the averaged, normalised log2-ratios from each microarray undergo a final correction such that the median log2-ratio of expression for each microarray has an m- value of zero.

RESULTS
babar was developed primarily to automate the normalisation of heterogeneous datasets . it handles 'problem' datasets  so they can be directly compared to 'good' datasets .

validating the babar algorithm
we first normalised a heterogeneous 'problem' dataset and compared our babar- normalised log2-ratios of gene expression to published rt-pcr experimental data. normalising such a dataset with existing methods, if even possible, would have required substantial additional programming. second, we applied babar to a non-heterogeneous 'good' dataset and compared the performance of the software in determining differentially expressed genes compared to a combination of limma-implemented 'within' and 'between' arrays normalisation. finally, we applied babar to a modest, non-heterogeneous simulated dataset so as to compare its performance  with the limma-implemented methods.

assumptions
to achieve the simplification of the normalisation process via babar three key assumptions were made: that the majority of genes are not differentially expressed between experimental datasets , that the same reference is employed throughout such that values in the gdna channel always have a higher median than the signal channel  and that it is always appropriate to background-correct the microarray spots . regarding the latter assumption, our approach was to statistically filter the spots, background-subtract those that pass the filter  and discard those spots that fail. low-intensity spots become more prone to variability as their measured signal values approach background. for our analyses we only used spots with intensities that were significantly different to the background; at  <dig> % confidence, spots to be included in the analyses possessed intensities in excess of three standard deviations above the background, exceeding the recommended two standard deviations  <cit> .

handling missing normalised data
the results file outputted from babar is in the form of a matrix of log <dig> normalised gene expression values for genes  under a variety of experimental conditions . it is inevitable that there will be missing values due to either experimental issues or the different gene array layouts employed between conditions. missing value reconstruction is therefore necessary as many of the microarray analytical algorithms cannot handle missing values; they are typically replaced with zeros or with a row average. we used a better approach: the k-nearest neighbours impute algorithm   <cit> . this considers the correlation structure of the data, finding and using those genes with the most similar expression profiles to the gene under investigation to impute any missing values.

putting a 'problem' dataset through babar
babar was applied to a heterogeneous 'problem' dataset from a study describing the transcriptomic changes for salmonella enterica serovar typhimurium internalised within mammalian host cells  as they adapted to the intracellular environment for different post-infection times  <cit>  . this dataset was derived from rna samples of varying quality, and generated from  <dig> common reference design genepix-scanned microarrays described by a total of three gene microarray layouts. the unprocessed microarray data files are available as additional file  <dig> 

babar was run with the three normalisation steps enabled: block-by-block centering of the medians around m =  <dig>  cyclic loess and a final correction of each microarray's median to m =  <dig>  four boxplots plotting m-value versus microarray id were generated to represent the data prior to processing and after each of the three normalisation steps .

prior to babar processing, the microarray data exhibited considerable variation around m =  <dig> . clearly, without normalising these data any gene expression comparisons made between microarrays would be meaningless.

the first steps implemented by babar in normalising the dataset were background correction and block-by-block data centering  for all microarrays . however, differences in the scale and distribution of m-values between arrays still remained, and were particularly pronounced between the macrophage  and control experiments . another potential problem highlighted in figure 1b concerned microarrays 1- <dig> . even though these data are log-transformed and pre-processed, they exhibit a  skewed distribution nearly double that of the other microarrays . clearly these data must be further transformed before robust comparisons between microarrays can be made.

after applying cyclic loess normalisation to ma-plots for all unique pairs of common reference microarrays, babar averages the log2-ratios . as a result, the scale of the normalised m-values and the degree of skewness were made more comparable across the whole dataset; the macrophage  and control experiments  now had typical standard deviations of s.d. =  <dig>  and s.d. =  <dig> , respectively, and the typical skewness values for microarrays 1- <dig> and the remainder of the microarrays were sk =  <dig>  and sk =  <dig> , respectively .

as it is assumed that the majority of genes are not differentially expressed , babar carries out a final data centering  as it may be seen that there has been a slight shift in the medians across the dataset away from m =  <dig> .

loess normalisation is a 'within' microarrays normalisation method that is used to normalise two channels on the same microarray . as described previously, we have conceptualised the comparison of a pair of common reference microarrays to be pseudo-direct; the loess algorithm is used here to normalise each unique pair of common reference microarrays. the ma-plots of figure  <dig> are typical of those obtained from pairs of common reference two-colour microarrays. figure 2a shows just one of the  <dig> /2) unique comparisons that babar made for this dataset, and figure 2b shows that the overall effect of the babar algorithm on the same pair of microarrays is to improve the symmetry of the data around m =  <dig> 

the requirement for the microarrays in a dataset to have a similar spread and distribution prior to analysis is often seen as a 'must'. however, this is an assumption and the question of how best to normalise heterogeneous datasets without removing biological variation is an important one. it has been shown above that babar, by implementing the cyclic loess algorithm , improves the symmetry of the ma-plot for microarray pairs and makes the distributional measures such as standard deviation and skewness closer over the dataset as a whole. therefore validation was required to demonstrate that babar's transformation of these data allowed for their correct interpretation. the babar-normalised results were outputted as a .txt file and the expression levels for  <dig> key genes were compared with the corresponding rt-pcr data from salmonella cells internalized in epithelial cells at  <dig> h and  <dig> h post infection  <cit> . these genes, possessing a wide range of expression levels, are representative of those involved in iron uptake , invasion , metabolism , the flagellar system , and included a control . it may be seen from figure  <dig> that the microarray and rt-pcr data are in good agreement .

additional validation was obtained at the level of protein expression. the results of immunogold and immuno-fluorescent labelling showed that the flagellin proteins flic and fljb were indeed present in infected epithelial cells at detectable levels  <cit> , and a two-fold increase in flic protein was observed inside epithelial cells  which compared to ~three-fold increase for the microarray  and rt-pcr data . these findings validated the babar-normalisation of the original dataset because the protein data supported the transcriptomic findings.

though modest in scale, this dataset presented a real challenge to other existing software because the constituent microarrays were described by three gene array layouts and showed considerable m-value variation. we are unaware of any software that automatically handles such data. our findings validate the babar algorithm for the normalisation of heterogeneous datasets prior to further analyses.

babar vs. standard techniques
we next compared the performance of babar in determining differentially expressed genes with standard methods as implemented by another r package, limma . we applied both packages to a dataset describing the transcriptomic changes for virulence-related genes at different phases of growth for the wild-type  s. typhimurium compared to mutants deficient in one or both subunits of the dna- binding protein integration host factor , ihfα and ihfβ  <cit>  . as the bacteria were grown in vitro, rna quality for this dataset was good. this dataset was generated from  <dig> common reference design genepix-scanned microarrays described by a single gene array layout . babar was run with the main normalising steps enabled and generated the boxplots seen in figure  <dig> 

although still requiring normalising, the ihf dataset is an example of a 'good' non-heterogeneous dataset that was derived from rna that was of a consistently good quality. compared to fig 1a, there is a reduction in the variation about m =  <dig>  skewness  and variance of the microarrays m-values . following babar's three normalisation steps  these data were ready for analysis. for limma normalisation we applied background correction  and a 'within arrays' method for data centering  followed by a 'between arrays' method, either quantile or scale normalisation. the slight median shift away from m =  <dig> that was apparent after babar's cyclic normalisation step  was also seen following quantile  or scale normalisation . this was not 'corrected' for in the latter two methods as an equivalent step is not implemented by the limma package.

the published ihf study focused primarily on the comparison between the wt and the ihfab double mutant, with one of the key findings being that the loss of ihf had strong negative effects on virulence genes  <cit> . our focus here will therefore be on down-regulation of gene expression. to determine the differentially expressed down- regulated genes for babar- and limma-normalised log2-ratios, the outputs from these methods were analysed via the qlucore gene expression explorer  software . the qgee software was used to impute any missing values via its implementation of the knnimpute algorithm   <cit>  and to identify those down-regulated genes that could separate the wt and double mutant samples with a high degree of confidence  for each method.

interestingly, despite the suggestion from the boxplots , the results from the qgee software analyses after scale or quantile normalisation were very similar. from figure  <dig> it may be seen that at p ≤  <dig>  both methods detected  <dig> down-regulated genes with  <dig> genes  common to both. comparably, babar detected  <dig> down-regulated genes with  <dig> and  <dig> genes in common with scale and quantile normalisation, respectively. for the genes that were the focus for the original ihf study , the quantile normalisation method detected two genes that were absent from the scale normalisation results . therefore, for simplicity only the quantile data was considered further and will be referred to as the limma data.

our comparison of normalisation methods focused on differences in expression between the wt and double ihfab mutant for genes encoded by the four salmonella pathogenicity islands , chemotaxis and flagellae genes. a summary of the results for the differential gene expression analysis of virulence-associated genes shows excellent agreement between babar and limma . for example, for the  <dig> genes encoded by the spi <dig> pathogenicity island, both babar and limma determined  <dig> genes to be down-regulated, with  <dig> of those genes common to both. closer inspection showed the qgee software analysis detected slightly more down-regulated genes for the babar-normalised data  compared to the limma-normalised data .

the number of down-regulated genes detected by the qgee software  for the ihf dataset  <cit>   following either babar or limma quantile normalisation. the number of genes in each group is given in brackets . chemotaxis genes include che and mot genes; flagellae genes include flg, fli and flj genes.

these results show that the babar algorithm can be successfully used to normalise datasets prior to further analyses.

comparison of methods using simulated data
to further validate babar we compared its performance against the limma-implemented methods for normalisation using a simulated dataset. with such datasets, the number of differentially expressed genes is known making it possible to calculate the power of detection and type i errors. simage was used to simulate two-colour dna microarray data  <cit> , generating  <dig> simulated microarrays each with  <dig> genes arranged in  <dig> ×  <dig> blocks; simage default settings were otherwise used. due to the difficulty described previously in analysing heterogeneous datasets these simulated data were treated as consisting of single format result files described by a single array layout. the output files were converted to a .gpr format and normalised via babar, print-tip loess, quantile and scale normalisation. significance analysis of microarrays  was carried out using the freely accessible samr r package   <cit>  to calculate power  and type i error  rates for each normalisation method.

it may be seen from table  <dig>  that for  <dig> differentially expressed genes the performance of babar  was comparable to scale normalisation , and was considerably better than quantile  or print-tip loess  normalisation. at higher numbers of differentially expressed genes, scale normalisation appeared to perform best but babar continued to outperform both quantile and print-tip loess normalisation. it was also seen that the three 'between arrays' methods outperformed the print-tip loess 'within arrays' method. one issue with simulated datasets is that they can't inform upon what level of power is required to still obtain the correct biological interpretation for a given dataset; perhaps detecting only the 10% most regulated genes, a power as low as  <dig> , may be sufficient for some datasets  <cit> . when comparing normalisation methods it is important to analyse real and simulated data, and our findings have shown babar's effectiveness in highlighting differentially expressed genes from real datasets. the performance of babar is impressive given that it was designed with large, heterogeneous datasets in mind  and makes limited use of any spatial information.

the power and proportion of type i errors for a dataset consisting of  <dig> simulated microarrays  <cit>  were calculated via the samr r package  <cit> . analysis followed one of four methods of microarray data normalisation for different numbers of differentially expressed genes. for babar, analyses were run after background correction  with 'within arrays' block-by-block centering of the medians, 'between arrays' cyclic loess with averaging of the log2-ratios, and final median centering of the data. for the other methods, analyses were run after the data were background corrected  with a 'within arrays' method for data centering , followed by the appropriate 'between arrays' method .

normalisation comparison summary
we have demonstrated babar's ability to transform microarray data compares well with the standard methods investigated so as to allow for their correct interpretation. as babar implements an algorithm which normalises each unique pair of microarrays, the impact on the running time of the analysis was investigated. for a pc running windows xp with a  <dig>  ghz intel®core™  <dig> duo cpu with  <dig> gb ram, babar analysis of the ihf dataset  took 40s compared to 15s via the limma-implemented methods. cyclic loess is still preferred to quantile normalisation, for example, as it is not as aggressive in its normalisation, but if run time issues are a concern then a faster cyclic loess technique has been developed  <cit> .

in using real and simulated datasets for a direct comparison of babar with limma-implemented methods of normalisation, it has been necessary to use non-heterogeneous datasets. this is due to the fact that the latter methods are unable to handle the heterogeneous datasets for which babar was developed. to handle such datasets babar makes some assumptions about the data it will receive, but babar's real value comes from handling those datasets that other applications cannot.

present and future applications of babar
following babar-normalisation, it is possible to compare the data derived from any microarray with any other for a given dataset with confidence. other studies have employed very different approaches to the challenge of combining different microarray data into a single dataset which may then be subjected to further analysis. one study used multivariate linear regression to create a fused and cleaned dataset from data for  <dig> experiments , downweighting microarrays of poor experimental quality  <cit> . another study used statistical discrimination to merge two datasets from different microarray platforms   <cit> . however, both of these methods require the microarrays to have been normalised prior to merging. in contrast, a further study  <cit>  employed a novel three-step strategy to normalise and integrate data arising from five affymetrix microarray generations. using a different strategy babar also normalises and merges microarray data but is applied to common reference two-colour microarrays with different file formats or array layouts.

our focus in this paper has been on differential gene expression, which is important for many experimentalists. we believe that great benefit will be also be obtained when applying babar to datasets prior to 'systems'-level analyses which, for instance, utilise large transcriptomic datasets to infer regulatory or metabolic networks. like many research groups we have amassed a vast collection of transcriptomic data into a gene expression compendium and network inference techniques are now being used to extract high-level information from these data  <cit> . however, the initial normalisation of these data is critical if meaningful interpretations are to be made.

we are not aware of any software that would handle the heterogeneous datasets that can comprise such gene expression compendia without considerable additional programming. our recent network analysis of a compendium of heterogeneous two-colour transcriptomic data demonstrated the value of the babar algorithm. at present babar accepts only  genepix and bluefuse microarray data files; a useful adaptation would allow other data file formats to be processed. in addition, enabling babar to handle tables of  data, as might be retrieved from repositories such as arrayexpress or the gene expression omnibus, would greatly extend the reservoir of data for analysis.

CONCLUSIONS
the development of dna microarrays for transcriptomic analysis has revolutionised many areas of biology and has facilitated the generation of a mass of transcriptomic datasets. the normalisation of such datasets remains a challenge as many factors can contribute to the variability that occurs between microarrays, confounding the biologically-correct interpretation of these data. the challenge is compounded by the heterogeneous datasets that may be compiled for 'systems'-level analyses. the surge in interest in deep-sequencing techniques  may seem to have heralded the 'death of microarrays'  <cit> . however, given the amount of transcriptomic data that await analysis, microarrays will remain to be a powerful analytical technique for some time. as this is an ideal tool for facilitating robust gene expression and network inference analyses, to obtain maximum insight from valuable transcriptomic data use babar.

availability and requirements
project name: babar

project home page: http://www.ifr.ac.uk/info/science/foodbornepathogens/index.htm

operating system: windows xp and red hat enterprise linux  <dig> 

programming language: r

other requirements: r- <dig> . <dig> or newer, and limma  <dig> . <dig> or newer.

license: gnu general public license

babar is available as a zip file  with detailed installation and running instructions .

authors' contributions
js wrote the source code and created the package. mja tested the package, analysed and interpreted the data, drafted the manuscript and assisted js. sl supplied the test data and with jcdh was involved in the conception of this research and finalising the manuscript. all authors read and approved the final version of the manuscript.

supplementary material
additional file 1
babar software. the babar r package.

click here for file

 additional file 2
babar documentation. vignette detailing the installation and running of babar.

click here for file

 additional file 3
dataset  <dig>  the unprocessed microarray data files from a heterogeneous 'problem' dataset describing the transcriptomic changes for salmonella internalised within mammalian cells.

click here for file

 additional file 4
dataset  <dig>  the unprocessed microarray data files and the associated .gal file for a non-heterogeneous 'good' dataset describing the transcriptomic changes of virulence genes for wild-type salmonella and ihf mutants.

click here for file

 acknowledgements
this work was funded by the bbsrc core strategic grant to jcdh and a bep ii bbsrc oasis database grant  to js. we are grateful to isabelle hautefort for furnishing the salmonella gene expression data from  <cit>  and to jack dainty for assistance with the samr package.
