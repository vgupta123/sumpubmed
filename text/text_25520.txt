BACKGROUND
computational methods for discovering dna functions typically seek similarities with sequences of known genes  <cit> . numerous methods used to assist in the annotation of nucleotide and peptide sequences rely on a "most-similar known feature" principle  <cit>  cross-referencing to information from public databases .

annotating or discovering more complex patterns in sequences which arise from the assembly of multiple discrete sequence units requires a different approach. for example, the genes involved in conferring bacterial resistance to antibiotics are found in structures that are repetitive, mosaic and follow patterns governed by molecular processes , and are subjected to evolutionary selection pressures  <cit> . the difficulty in finding such patterns is that they are functionally similar but have quite different base-pair sequences. integrons, for example, were initially identified from repeated manual observations of a similar sequence pattern  flanking a variety of antibiotic resistance genes  <cit> .

understanding the biological "rules" that govern pattern assembly should allow for the automated analysis of complex structures that can systematically reveal new motifs. formal computational grammars have found some application to complex sequence analysis in the past  <cit> . for example, gene promoters have quite variable base-pair sequences but knowledge of the molecular mechanisms they participate in allows a general definition of promoter structure to be formalised  <cit> . similarly, unrelated self-annealing regions of rna can be analysed to indicate interesting secondary structures  <cit> .

the method presented here uses a context-sensitive deterministic grammar to parse higher order dna structures, i.e. assemblies of genetic features. such features may be known dna sequence units identified via homology-based annotations or compositions of such units into more complex structures. by analogy with human language, such a grammar focuses on the ways in which words assemble into phrases and sentences, rather than current sequence methods which focus on how letters assemble into words.

we evaluate this approach on the task of discovering bacterial gene cassettes associated with class  <dig>   <dig> and  <dig> integrons  <cit> . a typical gene cassette consists of little more than a single promoter-less gene,  and a dna recombination site . many genes that confer resistance to most classes of antibiotics  are found in gene cassettes, along with many open reading frames of as yet unknown function  <cit> . these gene cassettes thus form a large gene pool of major importance in antibiotic resistance management.

an integron is a gene cassette capture and expression element that is characterized by another dna recombination site , an integrase gene  and a promoter . interaction between atti and attc, catalysed by the inti protein, results in the insertion of the corresponding gene cassette into the integron. an arbitrary number of cassettes may be inserted into the same integron, always in the same orientation, to create an array. class  <dig>   <dig> and  <dig> integrons are important as they contribute to the movement of antibiotic resistance genes between dna molecules, e.g. into mobile plasmids that can then travel between bacteria, including different species, facilitating spread of resistance.

class  <dig> integrons are the most clinically important and usually include two conserved segments  flanking a variable region consisting of the inserted gene cassettes. in some examples the 3'-cs is not present and a tni transposition region instead marks the end of the cassette array. equivalent conserved flanking regions are also present in class  <dig> integrons and the few class  <dig> integrons that have been identified to date. these easily recognisable flanking regions allow amplification of the variable cassette arrays by the polymerase chain reaction  with subsequent dna sequencing to identify the gene cassettes present. this has resulted in the submission of large numbers of cassette arrays to the genbank database. unfortunately, many of the annotations are incomplete. most notably, in many gene cassettes only the gene is annotated, without the flanking regions, attc site, or array context. manually re-annotating cassette arrays and compiling results to look for patterns that might help to predict spread of multi-antibiotic resistance is both difficult and time-consuming. annotation algorithms for cassette arrays need to be flexible enough to accept a variable number of cassettes and truncated features from errors in the cassette insertion process, random deletions, insertions of other mobile elements and artifacts from the amplification and/or sequencing process.

the task of annotating integrons may be supported by several classes of computational tools:

metagenomic annotators  <cit>  use open reading frame  and gene prediction tools  and gene and protein function knowledge repositories such as uniprot  <cit> , the kyoto encyclopedia of genes and genomes  <cit>  and the gene ontology  <cit>  to label genes and assign functions to them. while such tools do not label integrons automatically, one can use them to find inti genes to anchor searches for atti and attc sites.

integron annotation support tools and databases provide reference repositories for integrons and their components. the databases are searchable using keywords or blast queries. compilation of the databases is a manual or semi-automatic process. integrall  <cit>  depends on user submissions for database updates. ardb  <cit>  is a manually curated reference for antibiotic resistance genes including those found in integrons. acid  <cit>  include a set of tools that include models of attc, atti and integron structure to accurately annotate the integrons down to the level of attc and atti site subparts. xxr  <cit>  is a tool that predicts attc sites and orfs using regular expressions and other heuristics and can help curate and verify gene cassettes in such databases. because these databases are curated by human experts and provided as reference tools, their accuracy has not been reported in the literature.

automatic integron structure model annotators are tools that automatically label integrons and their parts , and when possible, assign higher order annotations such as gene products and function. in this paper we present what we believe to be the first implementation in this class of annotators. the mosaic nature of integrons means that using existing similarity-based algorithms  to annotate an integron would require comparison with every possible cassette combination. however, the number of different cassettes  <cit> , and therefore the number of possible combinations, is too high for this to be feasible.

other approaches to annotating larger-than-gene regions in dna rely on comparative genomics to find commonalities among sequences from different species but none is used for the annotation of integrons or other mobile genetic elements. it is yet unclear how they would handle the wide variations observed in integrons  <cit> . mauve  <cit>  is a global alignment tool that identifies regions common to multiple species and aligns their assemblies. it is primarily used in phylogeny of eukaryotes. metamine  <cit>  is an automatic annotation tool for multi-gene clusters in bacterial chromosomal dna. given a target gene, metamine examines dna sequences from multiple species to find other genes that frequently co-occur with it. it then uses meta-genomics to hypothesize a function fulfilled by the cluster.

the datasets and annotations used in this study as well as the software and source code are available for download for free for non-commercial purposes from the authors'. web site: http://www <dig> chi.unsw.edu.au/attacca/

methods
sequence annotation
we manually assembled a test set of  <dig> features associated with integrons from the literature into a feature database . each feature comprised of a unique identifier, a name, a type , a model sequence and a minimum identity criterion. minimum identity criteria were assigned to each feature and varied between 95% and 100%. features representing gene cassettes included the gene and the attc parts and, following common practice, were named after the gene they carry. a complete list of features and a description of how they were selected is in  <cit> .

a complementary test set of  <dig> unique sequences from the genbank corenucleotides database that contained at least one of these integron features, into a sequence database . genbank entries with the word "vector" or "synthetic construct" in their organism field, a few cassette array sequences with long stretches of ns representing un-sequenced regions  as well as refseq entries were excluded.

to ensure we had a uniform annotation of sdb for our experiments, fdb was used to annotate the sequences in three stages.  <dig>  blast  <cit>  was used to tag all occurrences of the features in sdb. matches that met a minimum percent identity and length criteria were kept. the minimum length criterion for all matches was  <dig> bases, as a lower limit introduced spurious annotations of short fragments irrelevant to the annotation.  <dig>  manual annotation was used to tag  <dig> features in sdb not recognised by blast. in most cases , less than  <dig> bases of the feature were sequenced. the manual annotations were based on the sequence annotation in genbank or on information published in the literature that accompanied the sequence .  <dig>  any remaining annotation gaps in sdb were then used as queries in fdb, using blast. this allowed occurrences of truncated features to be identified. features truncated at both ends were not considered.  <dig>  the parser may re-label annotations assigned using blast given new context information .

annotations using the fdb were stored in a relational database for analysis by the grammar. this step allows other annotations sources, including genbank annotations, to be used independently or in conjunction with our annotation system. the exact position of feature annotations does not affect the structure annotation as long as their order is not changed.

grammar
the first and third authors manually developed a 21-rule grammar to describe the structure of cassette arrays  based on known molecular mechanisms for integron assembly  published in the literature  <cit> . the grammar is a direct formal representation of the model proposed by hall and collis  <cit>  with some modifications, for example, to accommodate non-cassette insertions.

grammar rules have the form c <dig> x c <dig> ::= c <dig> y <dig> ... ync <dig>  which implies that x, when occurring in the context {c <dig>  c2} is a structure that consists of a sequence of tokens y <dig> ... yn. for example, a rule to identify an array as a structure consisting of a sequence of three lower level features might be:  

the rules were used by a context-sensitive deterministic parser which reads token sequences from left to right, and builds its parse tree bottom-up, from the leaf nodes  of the grammar, and which allowed incomplete parses . we found that using a context-sensitive grammar  notation in which multiple symbols are allowed on the left hand side of the rule operator  allowed us to map biological knowledge to grammar rules more easily. while a csg was not strictly necessary, it required fewer and simpler grammar rules than a context-free grammar would have. the relatively small number of rules  and the relatively short number of annotations in each sequence  made the added computational complexity of parsing with a csg was insignificant.

structures can occur in opposite directions even in the same sequence . structure direction is ensured by the parser which checks that component features are oriented appropriately or match specified rules. for example, a sequences such as  will not be ambiguous and thus incorrectly recognised as an array structure because the arrayend is not oriented from left to right.

a special class of rules, called discovery rules, that can predict unannotated cassettes occurring in specific contexts, were derived from the 21-rule grammar. for example, for the array rule above, the following discovery rule is generated:  

where λ represents a gap in annotation i.e. an unannotated sequence fragment.

this discovery rule is used to hypothesise that a gap in annotation occurring between the start and end of an array is a cassette. in this way, discovery rules allow the parser to find only specific contexts in which gaps should be tested as new cassettes. this reduces the number of gaps identified to only those that can create an array from two incomplete array parts separated by the gap. seven such cassette discovery rules were developed and added to the basic 21-rule grammar . an argument was added to λ tokens so that sequences too short to be considered cassettes or long gaps between different cassette arrays were not hypothesised to be cassettes. the minimum  and maximum  were calculated based upon the lengths of the longest non-cassette insertion, features that occur in arrays but are not cassettes and don't interrupt the integrity of the array, and the longest cassettes in fdb.

if a feature is identified using a discovery rule, and the feature is not present in fdb, then we can hypothesise that this is a new example of the feature class, and add it to fdb as a potential new discovery. the feature is then available for subsequent sequence analyses, allowing the feature lexicon to grow adaptively as the system encounters new features.

rediscovery experiments
to evaluate the ability of our method to discover previously unseen gene cassettes, we randomly excluded known cassettes from our fdb, and tested the method's capacity to rediscover them from instances in sdb. ten omission proportions were tested from 5% to 50% at 5% increments. in each experiment a random subset of cassettes was omitted from the fdb. whenever features were rediscovered from sdb they were incorporated into the fdb and the annotation was repeated until no new discoveries were made. of the  <dig> gene cassettes in fdb, ten were not present in the sdb, two only appear without context  and eight never appear in an array context . in such cases, context based discovery is impossible and so these features were not tested in the experiments.

in this experiment gaps that were labelled as cassettes by discovery rules are counted as true positives if the gaps corresponded in position to cassettes in the gold standard. all other gaps identified as cassettes were considered false positives. gaps that corresponded to cassettes in the gold standard but which were not identified as such were counted as false negatives, and all remaining features where the annotation agreed with the gold standard were counted as true negatives.

statistical analysis
sample size calculations for each omission proportion were calculated from a pilot study of  <dig> experiments . the number of experiments required for each class was calculated for a confidence interval of α ≥  <dig> , and error margin of e ≤ 1%. normal distribution for the pilot study was verified using the anderson-darling test  <cit> . due to the 100% upper boundary limit for rediscovery, the kolmogorov-smirnov test for a truncated normal distribution  with the estimated mean and sd  was used. the ks test could not reject the null-hypothesis that the distribution of rediscoveries at the 5% omission proportion was normal.

the anderson-darling values, adjusted for sample size  greater than  <dig>  rejects the null-hypothesis that sample is normally distributed. for the 5% omission proportion, a truncated normal distribution was tested using the ks test which gave a p-value > 5%.

RESULTS
new cassette discoveries
we let the discovery system annotate  <dig> unique sequences from genbank with the  <dig> features associated with integrons. we then ran the context sensitive parser with both structure and discovery rules on the annotated sequences. the system detected two putative gene cassettes. we manually verified that they were indeed gene cassettes that had not previously been reported  <cit> :

the first was found in ef <dig> , submitted to genbank in  <dig>  and encoded a protein 81% identical to qace, which is associated with resistance to antiseptics  <cit> ; the cassette was designated qack . the other was found in dq <dig> , submitted to genbank in  <dig>  and encoded a protein related to dfrb proteins , which confer resistance to trimethoprim  <cit> ; the cassette was designated dfrb <dig> .

gold standard agreement
a sample of  <dig> sequences  containing  <dig> integron features was selected randomly from our test set. three microbiologists were given the name and location of each feature and were asked to independently classify them into one of five categories: cassette, array start marker, array end marker, a non-cassette part of an array, or a non-cassette feature occurring outside an array. a gold standard annotation was created based upon the majority expert classification for these features.

the automated system also attempted the same classification task. each expert completed the task independently. agreement between the three experts, measured using fleiss's kappa  <cit> , was κ =  <dig> . agreement between the experts and the grammar was κ =  <dig> . a value of κ ≥  <dig>  is considered very strong agreement  <cit> .

the gold standard annotation consisted of  <dig> features including cassettes, conserved sequences and non-cassette insertions covering  <dig>  mb. the annotation also included  <dig> gaps covering  <dig>  mb.

cassette rediscovery
in a further trial, we automatically annotated the genbank sequences with all of the features in the feature database  and conducted  <dig> experimental runs, deleting a randomly selected subset of cassette annotations, to test the ability of the method to rediscover the deleted cassettes based upon their local context alone, and without recourse to cassette sequence information. we included in the experiments  <dig> cassettes that appeared within an array context in the genbank sequences, and excluded  <dig> cassettes which had one or more context elements missing from the sequences, as these are not discoverable with our method.

in total we deleted  <dig>  cassette instances in the  <dig> experimental runs. we correctly relabelled  <dig>  cassette deletion instances as a cassette, yielding an average of  <dig> %  of unannotated cassettes that were successfully rediscovered. when the annotations were compared to the expert gold standard annotation, the algorithm had a mean specificity of  <dig> and specificity  <dig> , achieved an overall f-score  <cit>  of  <dig>   and had no false positives. there was little variation in discovery rates with different sample sizes of randomly omitted cassettes, but confidence intervals in the discovery rate narrowed with increase in the number of deleted cassettes, as expected .

on average, we found  <dig>  true positives,  <dig>  false negatives,  <dig>  true negatives and zero false positives per million base-pairs.

if the  <dig> excluded gene cassettes not possessing flanking contexts are considered, then the discovery system was able to correctly annotate   <dig> % of the sequences. all of the  <dig> theoretically discoverable cassettes were rediscovered at least once.

to the best of our knowledge, there are currently no available tools to automatically annotate integrons that these results can be compared against. we identified  <dig> unique cassette arrays each occurring between  <dig> and  <dig> times , hence repeated blast searches for the known arrays would be ineffective. for the same reason, a gene clustering approach such as metamine  <cit>  would not identify the majority of arrays as they are not found often enough to be recognized as a cluster. manual annotation of novel gene cassettes involves blast searching for the known start and end markers, predicting genes between them, for example using orf finder  <cit> , and then identifying the attc sites that flank those genes by manual inspection  <cit> . alternatively, gene cassettes can be found by repeated blast searches with the  <dig> known gene cassettes. however, this method is limited to finding homologs only. both methods are labour intensive, time consuming and error prone.

error analysis
in  <dig>  of the cassette deletions, the algorithm missed the presence of a cassette in a sequence, resulting in an apparent false negative rate of  <dig> %. detailed examination of these false negatives suggest that in each instance two cassettes occurred side-by-side in the genbank sequence, resulting in the following error cases:

type i
two adjacent cassettes are identified as a single cassette. this error occurred in  <dig>  of the deletion instances and if these were to be reclassified as true positives  then the overall algorithm performance increases by  <dig> % to produce an overall  <dig> % discovery rate, a specificity of  <dig>  and f-score of  <dig> . use of some additional sequence information should eliminate this type of error entirely e.g. searching for attc sites  <cit> .

type ii
two adjacent cassettes are missed because the combined sequence length of both cassettes exceeded  <dig> bp, the maximum length currently used by our algorithm to identify candidate cassettes. this error occurred for  <dig>   of the deletions. the upper limit was determined based on the length of the longest cassette occurring in fdb. setting a higher limit would begin to introduce false positive errors, usually annotation of long regions between fragments from separate integrons. our current algorithm setting is thus optimised to minimise false positives at the expense of generating type ii errors, and different settings are possible depending upon specific task requirements.

type iii
two cassettes are missed because no other complete features such as flanking regions were present on the sequence, which typically contained only the cassettes themselves, and so no context was available to trigger cassette discovery. this error occurred in  <dig>  deletions . our grammar requires at least one annotated feature to be present on a sequence, i.e. one of a pair of consecutive cassettes must be annotated so it can act as a bounding context for the other. common genetic approaches truncate array start and end markers in dna sequences and our method would not detect a cassette or array without these contextual elements as identifiable bounding features. this may also be overcome by adding a specific search for features such as attc sites.

the results show that a grammar approach to sequence analysis can identify genetic features like gene cassettes, hypothesising their functional role by examining the context within which they occur, and without recourse to sequence analysis. although some low level grammars have been used in the past, based upon sequence patterns, to our knowledge this is the first demonstration of the existence and use of a higher order feature grammar. it is important to note that the grammar method is complementary to existing automatic annotation systems which operate at the sequence level. in particular, our error analysis identified specific circumstances in the integron recognition task where our grammar could not resolve whether cassettes existed or not, because of incomplete information about context in the sequence fragments we analysed, but where some lower level sequence information such as the existence of an attc site may be able to resolve feature identity or role.

consequently, our results reinforce the view that the "language of dna" supports formal grammatical contracts of a higher order, which can decode genetic function at a higher level of abstraction than base sequence patterns, and even gene patterns. in the domain of integrons, the grammar is demonstrated to unambiguously identify between 84-95% of cassettes, with an upper bound of about  <dig> % set by type iii errors. the method is likely to be easily generalisable to any other higher-order dna structures that can be expressed using rules in a grammar. the evolutionary and biological basis for the development and role of such grammars is likely to be a fruitful level of enquiry for some time to come.

future work
the work reported here represents a proof of concept for using heuristic grammars to model high-order structures in dna. in this work we labelled cassette using a single consistent nomeclature system, but there remain disagreements in the biology community about the best nomenclature to use. in a future implementation multiple nomeclature systems would be supported. this may have implications for some features as their defining sequences may have slight differences between systems. while the parser is not restricted to a particular annotation source or nomeclature system, the algorithms to integrate annotations from a variety of sources, detect and resolve conflicting annotations and mapping between semantic types of features are yet to be defined.

extension of the grammar to cover a comprehensive set of structures responsible for antibiotic resistance transmission will require new features in the fdb and additional rules in the grammar. other mechanisms, such as transposons and composite transposons, are present in fewer sequences in genbank than gene cassettes and validation of the grammar would require a different approach. the validation method might consist of comparisons of the method's annotations with a random guessing baseline, and/or a database of "synthetic" sequences. in our experiments, ten of the unique  <dig>  cassettes found in sdb were not discoverable because they lacked sufficient context. further evaluation is required to test if less context is sufficient to accurately predict the presence of cassettes so that this rate can be reduced.

the discovery rules presented here all rely on contextual information to be present on both sides of the discovered feature. in almost  <dig> naturally occurring sequences, this resulted in no false positives and hence a specificity of  <dig> . rules using only single sided contexts can be used to increase the sensitivity of the algorithm, but at a cost to specificity.

CONCLUSIONS
we have shown that using a grammar to represent heuristic background knowledge allows feature identification based on local context alone, without recourse to feature sequence data. we were able to automatically annotate bacterial mobile elements and achieve a high level of agreement with a panel of experts. significantly, the grammar also facilitated discovery of putative new antibiotic resistance gene cassettes through inspection of the contexts at which gaps in the annotation occur. up to  <dig> % of genetic features in our domain appear to be discoverable by context-driven discovery using a grammar.

authors' contributions
gt designed and implemented the annotation and discovery algorithms, implemented the grammar and drafted the manuscript. ec participated in system design, guided the experimental design and helped draft the manuscript. srp constructed the feature database, provided the biological background to the grammar and contributed the biological background to the manuscript. js conducted the pilot study and rediscovery experiments. jri participated in the design of the system. all authors read and approved the final manuscript.

supplementary material
additional file 1
cassette array grammar. the grammar used in this work.

click here for file

 acknowledgements
the authors wish to thank belinda roychoudhry, andrew ginn and agnieszka wiklendt for providing the expert annotations used to establish the gold standard structure annotation.

this work was supported by separate new south wales health capacity building and infrastructure grants awarded to the centre for health informatics and the centre for infectious diseases and microbiology.
