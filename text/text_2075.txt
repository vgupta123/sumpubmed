BACKGROUND
text for this section. metagenomics is the study of an entire community of microorganisms from an environmental sample. high-throughput next-generation sequencing  provides an opportunity to sequence and analyze genomes of multiple species from an environmental sample without cultivation. during the last several years, researchers have done many successful metagenomic projects on different samples based on ngs, such as human gut  <cit>  and cow rumen  <cit> . one of the important functions in metagenomic ngs analysis is to annotate to what species or what taxonomic group the metagenomic data belongs. this provides information on what kinds of species exist in the sample for further downstream analysis.

there are two existing fundamental types of tools for metagenomic data analysis, namely assembly and binning. assembly tools try to reconstruct the genomes that exist in the sample. binning tools try to group the ngs reads of similar species together.

in the ideal case, if we can assemble each species in the metagenomic sample, we can solve the annotation problem relatively easily. however, existing assembly tools are far from the ideal case and assembling metagenomic data is still a challenging and unresolved problem, although metagenomic assemblers can construct longer contigs.

on the other hand, advances have been made for binning. existing binning strategies can be divided into two categories: supervised methods  and unsupervised methods .

supervised binning methods  <cit>  are the most common approaches for analyzing metagenomic samples. they make use of known genomes and sequence similarities among reads or contigs . some supervised methods use generic features, such as 16s rrna small subunit, reca and rpob, to classify fragments. however, a large percentage  of reads  do not have these features  <cit> . moreover, one species may have multiple markers and multiple species may share the same marker  <cit> .

unsupervised methods, which do not rely on known genome information, are usually group reads/contigs together based on three observations:  the k-mer frequency of reads, where k ≅  <dig>  is generally linearly proportional to the abundance of the corresponding species  <cit> ;  sufficiently long w-mers, where w ≥  <dig>  have very high probability to be unique in each species  <cit> ; and  sufficiently long reads/contigs from the same or similar species tend to have similar short q-mer distributions, where q =  <dig> or  <dig>  .

abundancebin  <cit> , which is based on observation , cannot separate reads from species with similar abundance. a recent tool, improved-toss  <cit> , uses observation  to group reads together if they are from species with similar abundance, and then uses observation  to separate reads from different species for each group. improved-toss has good sensitivity performance for small datasets. metacluster  <dig>   <cit>  is composed of three phases: phase  <dig> groups reads according to a probabilistic model based on observation ; phase  <dig> derives q-mer distribution; and phase  <dig> further merges groups together with k-means clustering based on observation . metacluster  <dig>   <cit>  uses an extra round whose approach is based on observation  to handle species of extremely low abundance in noisy samples. the metacluster software solves some important issues in unsupervised binning methods such as processing large datasets with many species and dealing with species of different abundance. when the number of species increases , metacluster  <dig>  achieves better precision and sensitivity.

despite the recent advances in binning, to solve the annotation problem, we still rely on the approach of aligning each read to the taxonomic structure  <cit> . in particular, megan <dig>  <cit> , which is widely used in metagenomic analysis, is based on this approach. common annotation approaches, like megan <dig>  can be classified as 'nearest neighbor' methods  <cit> , as they usually assign reads to the lowest common ancestor  from the taxonomy of most similar sequences in the database. if the read can only be aligned to a single genome in the database, the read will be annotated to the species/subspecies of that genome. if the read can be aligned to many genomes, depending whether these genomes are within a species/genus/family, the read will be annotated to that species/genus/family.

this procedure is time consuming and many reads cannot be aligned to any known sequences because many sequences for microorganisms remain unknown  <cit> . for better results, contigs after assembly, instead of reads, are used for annotation  <cit> . as the reads contributing to a contig are likely to belong to a single genome, using contigs for annotation has several advantages:  contigs can be aligned and annotated to a genome more readily than reads because contigs  are much longer than reads, and  annotating a contig is equivalent to annotating all reads contributing to this contig, even though some of these reads cannot be aligned individually.

to summarize, this approach of annotating metagenomic data by aligning each read/contig to the reference genomes in the taxonomic structure has the following shortcomings.

1) unable to annotate many reads - methods that rely on alignment of reads/contigs to known genomes still fail to align a large number of reads if they are from unknown species. failure to align means that the read cannot be annotated. contigs which are longer can be used instead of reads  <cit>  as they can be aligned to known genomes with higher confidence and thus, more reads which are associated with the contigs can be annotated. but the improvement is limited due to the limited success in the assembly problem for producing long contigs.

2) less precise annotation for reads and more incorrect annotation for contigs - even though the reads/contigs are from a particular species, they may be aligned to similar but different species under the same genus or family and thus be assigned to a higher taxonomy level. this means less precise in annotation. this problem can be slightly alleviated for contigs as contigs are longer and the alignment can be more precise, thus resulting in a more precise annotation. however, since contigs are still short when compared with the length of a genome and can only capture some local information of the unknown genome, the problem of imprecise annotation cannot be solved completely. even worse, there are cases that these contigs can be easily aligned to multiple genomes locally  that make the annotation incorrect.

3) inefficient or time-consuming annotation - annotating reads/contigs based on genomes of known species in the database may take a long time when certain errors are allowed during alignment. even when the reads are assembled into contigs, there are still many contigs to align and annotate.

our contributions
in this paper, we extend the simple idea that contigs have better annotation performance than reads by using binning results, i.e., clusters, to perform annotation. assembly is used to produce longer contigs which help annotation, but also better binning results indirectly. we try to align each cluster to a taxon. to achieve this, we introduce the novel concept of virtual contigs, which are longer than traditional contigs because they are not, strictly speaking, contigs but functionally help to connect related reads together as a single unit for binning purposes, e.g. reads/contigs are binned together by paired-end reads or substantially-overlapped regions. thanks to long virtual contigs, clustering by means of q-mer distribution can be more sensitive and precise since 5-mers for contigs of length longer than  <dig> k bp can be used to yield better clustering results than the 4-mers used in metacluster  <dig> . note that contigs/virtual contigs can only contain local information of a genome. however, reads/contigs merged into a cluster through q-mer distribution can be far apart and thus can capture some global information of a genome. unsupervised binning can cluster together reads from unknown species and such a cluster could be potentially annotated by the species/genus/family to which many of the reads/contigs in the cluster belong.

the introduction of the virtual contig and binning techniques, which produces better clustering results for annotation, has further benefits:
more annotated reads - an otherwise-unaligned read can be binned and annotated together with the other reads of the virtual contig  to which it belongs.

more accurate annotation - the virtual contigs, which cover longer regions, can be better aligned to the genome of a particular species, reducing the likelihood that reads would be inaccurately assigned to a higher taxonomy. furthermore, reads in a cluster are annotated together through the information of reads/contigs/virtual contigs in the cluster. the annotation is more precise, because clusters are much larger in size  and contain global information. the problem of horizontal gene transfers or housekeeping genes can be resolved because they only affect relative short regions .

more efficient annotation - efficiency can be gained by annotating fewer clusters, instead of many individual reads/contigs. the number of clusters is usually about the number of species in the dataset, which is far smaller than number of reads/contigs.



RESULTS
we compared the performance of metacluster-ta with metacluster  <dig>  and megan <dig>  since metacluster  <dig>  is the most advanced unsupervised binning tool and megan <dig> is a widely-used supervised binning and annotation tool. all the experiments were run on a unix machine with 4cpu of intel xeon x5650@ <dig> ghz.

in practice, reads from genomes of known species in the database can be annotated easily by alignments, e.g., blastn in megan <dig>  the main problem is those reads from unknown species. reads from an unknown genome are usually annotated according to their similarity  to the known genomes. in order to simulate the metagenomic environment of unknown species, instead of using the ncbi complete genome database , a set of genomes, called target genomes, which represent the set of unknown species, were selected and removed from the database. at the same time, we have to ensure that genomes of some related/similar species exist in the database . we say that the set of reads/contigs of an unknown  genome has species-reference if there exists at least one reference genome of the same species in the database as the unknown genome. similarly, if there exists at least one reference genome in the database from the same order as the reads/contigs of the target genome and there does not exist any reference genome in the database that belongs to a lower taxonomy level of that order, i.e., same as the target genome's species, genus or family level, we say that these reads/contigs have order-reference.

in our experiments, the testing datasets were generated from ncbi complete genome database . based on the set of target genomes, we randomly generated a set of length- <dig> paired-end reads with 1% sequencing error and  <dig> ±  <dig> bp insertion distances according to some specified abundance. three datasets, a <dig>  a <dig> and b, were generated and detailed information about these three datasets such as number of selected genomes, selected genome names, coverage and reference genomes used in our experiments can be found on our website http://i.cs.hku.hk/~alse/metacluster/files/datalist_of_metacluster-ta.

improvement on annotation
one important advantage of this method is its effectiveness in annotating more species. to evaluate the performance, we generated two testing datasets, one with high coverage  and the other with low coverage .

a total of  <dig> target genomes were picked from different species to generate testing data. in addition to the removal of these  <dig> genomes from the reference database for simulating the scenario of the unknown species, we also remove genomes from the reference database so that reads from  <dig> genomes have species-reference  and the other  <dig> genomes have order-reference only . reads sampled from these  <dig> genomes are used to generate the two datasets a <dig> and a <dig>  high coverage dataset a <dig> is generated by sampling reads from the  <dig> species with coverage of about 15×. another low coverage dataset a <dig> is generated by sampling reads from the  <dig> species . in each group of  <dig> species,  <dig> are of coverage ≤  <dig> and  <dig> are of coverage  <dig> 

two experiments on megan <dig> were performed for each dataset, one on metagenomic reads directly and the other on contigs after assembly using idba-ud  <cit> . as all reads contributing to the contig will be annotated with the taxonomy of the contig, more reads might be annotated. reads that cannot be assembled will be treated as a single contig for annotation. in this section, we will compare metacluster-ta with megan <dig> on these two approaches, namely megan <dig>  and megan <dig> , on two datasets, a <dig> and a <dig>  as megan <dig> takes blastn results as inputs, default parameters were used to run blastn and megan <dig>  annotation performances on datasets a <dig> and a <dig> are shown in table  <dig> and table  <dig> respectively.table  <dig> annotation result on high-coverage dataset a1

accurate
higher
incorrect
unassigned
accurate
higher
incorrect
unassigned
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
* "accurate" corresponds to the percentage of species-reference/order-reference reads annotated correctly, i.e., their correct species/order names of the target genomes; "higher" corresponds to the percentage of species-reference/order-reference reads that are correctly annotated, but to taxonomy of higher levels than species/order of the target genomes ; "incorrect" corresponds to the percentage of reads which are annotated incorrectly; "unassigned" corresponds to the percentage of reads that cannot be annotated to any taxonomy.

* running time of metacluster-ta is about  <dig> hours; running time of megan <dig>  is about  <dig> days; running time of megan <dig>  is about  <dig> day.

* about 80% reads can be aligned to contigs of length >  <dig> bp with <5% mismatches.

accurate
higher
incorrect
unassigned
megan4


we compared the performance of the annotation algorithms based on four aspects: "accurate" annotation, "higher" annotation, "incorrect" annotation and "unassigned" reads. "accurate" annotation refers to the reads annotated to the correct taxonomy, i.e. reads sampled from species-reference and order-reference genome annotated to the correct species level and order level respectively. "higher" annotation refers to the reads annotated correctly but to higher taxonomy than the target genome, e.g. reads sampled from species-reference target genome are annotated to the family or higher taxonomy level of the target genome; similarly, reads sampled from order-reference target genome are annotated to the class or higher taxonomy level of the target genome. "higher" annotation is considered as a correct but less precise annotation. "incorrect" annotation refers to the reads annotated to wrong taxonomy. "unassigned" reads are the reads that cannot be annotated by the corresponding software. since a read can be annotated "accurate", "higher", "incorrect" or "unassigned", the sum of the percentages in the corresponding part of each row in table  <dig> and  <dig> should be 100%.

assume read r from target genome g is annotated with taxonomy t. we say r is correctly annotated if g is in taxonomy t . an annotation tool with good performance would be able to correctly annotate more reads, has less incorrect annotation and have less unassigned reads, i.e. more "accurate" or "higher" and less "incorrect" or "unassigned" reads.

for reads with species-reference in the high-coverage dataset a <dig>  metacluster-ta has about 20% more "higher" reads and slightly more "accurate" reads than megan <dig> . since the target and the reference genomes are similar, all methods have high and similar "accurate" annotations as many reads are from their common regions and are aligned to reference genomes correctly. for those reads from not-so-similar regions, they can only be annotated as a group together in a cluster and contig with more information. thus, metacluster-ta and megan <dig>  have more assigned reads. megan <dig>  has about 20% more unassigned reads than the other two. according to table  <dig>  megan <dig>  does not have more "higher" annotation as expected because the blastn alignment algorithm based on the default parameters might only depend on the matching of some short patterns in the contigs and this might result in the wrong annotation. metacluster-ta generates much longer sequences to do alignment, and the alignment result is supposed to be more accurate. thus, this explains why even though megan <dig>  can assign more reads than megan <dig> , it has about 20% more "incorrect" reads than the other. as megan <dig>  annotates each read independently and cannot dig out taxonomic information for unaligned reads, megan <dig>  has the most "unassigned" reads.

as for reads with order-reference, since the reference and target genomes are less similar, fewer reads will be aligned. consider megan <dig> ,  <dig> % are "unassigned" and only  <dig> % are "accurate" annotated. metacluster-ta and megan <dig>  have more "accurate" annotations in the order that the former has more information  than the latter  for alignment; similar arguments for explaining why the numbers of "unassigned" annotation are in the reverse order. note that megan <dig>  has the largest number of "incorrect" annotation score with more serious errors  partially because of the previous explanation about the blastn alignment algorithm and because the genomes are not-so-similar which leads to incorrect annotations. specifically when compared to megan <dig>  metacluster-ta has much less "incorrect" or "unassigned" reads, about 20% more "accurate" reads and about 25% more "higher" reads. note that the incorrect percentage is based on all reads. if we only consider the annotated reads, the incorrect percentage for megan <dig>  will be much higher since it annotates much fewer reads, thus the precision of megan <dig>  is not high.

accurate
higher
incorrect
unassigned
megan4


for the low-coverage dataset a <dig> , megan <dig>  has similar performances to the high-coverage dataset in all situations as each read is aligned and annotated independently without taking coverage into consideration. megan <dig>  can only have slightly better performances than megan <dig>  and have much lower "incorrect" annotation because the coverage is too low for assembly. metacluster-ta has the best annotation performance in terms of the numbers  of "accurate" and "higher" reads because clusters can still be formed with low coverage reads as metacluster  <dig>  can handle low coverage binning reasonably well. for reads with order-reference, metacluster-ta has >20% more "accurate" reads and >10% more "higher" reads than megan <dig>  since species in a <dig> has low coverage, fewer and shorter contigs are formed and fewer reads can be associated with contigs. thus, both metacluster-ta and megan <dig> have more "unassigned" reads for the low-coverage dataset than for the high-coverage dataset. nevertheless, metacluster-ta has the least number of "incorrect" and "unassigned" reads.table  <dig> annotation result on dataset a2

accurate
higher
incorrect
unassigned
accurate
higher
incorrect
unassigned
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
*running time of metacluster-ta is about  <dig> hours; running time of megan <dig>  is about  <dig>  days; running time of megan <dig>  is about  <dig> hours.

* about 40% reads can be aligned to contigs of length >  <dig> bp with <5% mismatches.



accurate
higher
incorrect
unassigned
megan4
accurate
higher
incorrect
unassigned
megan4


another important advantage is that metacluster-ta is much more efficient. megan <dig>  and megan <dig>  take about  <dig> days and  <dig> day respectively to complete a run, while metacluster-ta takes about  <dig> hours, including the time for assembly.

improvement on clustering
another important contribution of metacluster-ta is its clustering performance. in our hybrid approach, clustering takes advantage of taxonomy information.

assume a binning method outputs m clusters ci  and there are n genomes in the sample. let rij be the number of reads in ci that belong to genome j. cluster cj represents genome j <dig> iff rij0= maxjrij. following the definition of precision and sensitivity of the clustering results as given in  <cit> , we have:    

metacluster  <dig>  is designed to overcome binning difficulties like extremely-low/low-coverage species, uneven coverage, and dataset containing too many species. to make fair comparison with metacluster  <dig>  on clustering, we generated testing dataset b with reads sampled from genomes with different coverages.

we randomly picked  <dig> species and selected one genome from each species. their coverages vary from  <dig> to  <dig> and there are  <dig> genomes for each coverage. thus, there are  <dig> species with ≥ 10× coverage,  <dig> species with [6×,10×) coverage and  <dig> species with <6× coverage.

consider all reads sampled from a species s. if there exists a cluster c such that >50% reads sampled from s are in c and >50% reads in c are from s, we say that s is discovered by c.

the results are shown in table  <dig>  for high coverage species , these two methods discovered the same number of species , but metacluster-ta has better sensitivity. for low coverage species [6×,10×), metacluster  <dig>  discovered  <dig> out of  <dig>  while metacluster-ta discovered  <dig> more. metacluster-ta also achieves higher sensitivity. overall, hybrid approach gets 6% higher precision and 8% higher sensitivity. since the hybrid approach needs to annotate clusters, metacluster-ta requires reasonably more running time.table  <dig> clustering performance on dataset b

≥10×
[6×, 10×)
<6×
≥10×
[6×, 10×)
precision
sensitivity
memory
time


discussion
for metagenomic projects, clustering and binning/annotation remain difficult problems. existing methods consider these two processes separately. however, better binning results can assist better annotation and an accurate annotation can improve the quality of annotated clusters. by considering them together, hybrid methods may achieve better results for both clustering and binning.

CONCLUSIONS
metacluster-ta can outperform widely-used megan <dig> and can annotate more reads with higher accuracy and higher efficiency. it also outperforms metacluster  <dig>  as a binning tool.

