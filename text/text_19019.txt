BACKGROUND
homology inference has been an active research topic of computational biology for several decades and is employed as a starting step for many studies in, for example, phylogeny inference, protein structure prediction  <cit> , and function prediction  <cit> . our interest comes from the desire to define complete and suitable gene families for evolutionary studies on a genome-wide scale, i.e., when manual curation is out of the question, and homology inference is then the first step. homology is mainly inferred from sequence similarity and there are issues that makes this seemingly easy problem inherently difficult . divergent families can be hard to infer correctly due to weak similarity, even when combined with clustering methods, resulting in split families. increasing search sensitivity to gain a larger number of homologous genes risks including non-homologs to gene families, for clustering methods based only on sequence similarity. convergent evolution, causing similarity between two genes that do not have a common evolutionary origin  <cit> , may not be the worst obstacle in general but can confuse inference  <cit> . low-complexity regions are a further source of high local similarity between non-homologous proteins. similarly, sequences of homologous proteins sometimes evolve at a fast rate and can not be identified by similarity-only based methods. multidomain proteins, in particular those involving promiscuous domains  <cit> , pose a special challenge for homology inference and have even been referred to as a problem . shared domains are common and can link two proteins through a strong local similarity. hence, multidomain proteins may be the main obstacle in homology inference and clustering as they break simplifying assumption on evolution. inferring protein homology using local  <cit>  or global  <cit>  similarity depends on a model that does not take insertion of domains into account. this was recognized by song et al.  <cit> , who suggested a definition for “multidomain homology”. they stated that homologous proteins follow vertical inheritance and inserted domains  should be discounted for. explicitly identifying vertical inheritance is difficult, but they proposed a proxy based on a statistical analysis of conserved domain architecture.

complementing a similarity-based method with additional information can improve analysis, as has been demonstrated for orthology inference, see  <cit> , and we believe it valuable for homology inference as well. for orthologs, it is expected that genes’ locations are conserved at speciation, but rearrangements occur with time, so closely related species will display similar gene order. the same should also hold for many duplications. a chromosomal duplication retains gene order and although a duplication due to unequal crossing over disrupts gene order, copies in tandem retain almost the same neighborhood of genes. on the other hand, duplications due to retrotransposition often yield paralogs in new gene neighborhoods and reciprocal gene loss following large-scale duplications  <cit>  break gene order. however, break in gene order for some duplications should not prevent us from making use of the conservation that is present and which provides a supportive signal for vertical inheritance. signs of conserved gene order should boost the identification of potential homologs with weak similarity in general, and multidomain homologs in the sense of song et al.  <cit>  in particular. hence, we wanted to investigate how conserved gene order may improve homology inference.

a brief account of prior work
the primary, and recurring, tool for inferring homologs has been blast  <cit> . for example, blastclust  <cit>  uses single linkage clustering on blast results to compute clusters of homologs or gene families, and psi-blast  <cit>  uses an iterative procedure and position specific scoring matrix to infer remote homologs  from blast hits. other gene family inference approaches are guided by multiple sequence alignment  likelihood , profile hidden markov models , and protein structure classification . hcluster_sg  <cit>  is a graph-based algorithm that performs hierarchical agglomerative clustering on all-vs-all blast results. it is the clustering component of ensembl compara  <cit>  and earlier versions of treefam  <cit> . other algorithms have employed network structure and the transitive property of homology to infer gene families, e.g., markov clustering   <cit> , protomap  <cit> , tribemcl  <cit> , proclust  <cit>  and phyrn   <cit> .

an elegant solution to the multidomain homology problem, named neighborhood correlation , has been proposed  <cit> . nc avoids explicit identification of protein domains and architecture by looking at statistics of blast scores. it classifies two proteins as homologous if they have highly correlated blast scores when compared to a reference database, thereby avoiding the need for thresholds for alignment length, similarity, etc. the major advantage of nc over blast is its homology inference accuracy for diverse multidomain architecture proteins  <cit> .

algorithms have also combined other information with similarity to aid them in homology and/or orthology inference. gene order conservation has been shown to be important information in homolog and ortholog validation as shown for fungi  <cit>  and prokaryotes  <cit> . the soar and msoar algorithms have used synteny to assign orthologs by minimizing recombination distance between two genomes  <cit> . han and hahn  <cit>  have utilized local synteny information  to identify parent-daughter relationships among duplicated genes. synergy  <cit>  uses gene order conservation  and species tree information alongside similarity to infer phylogeny and orthogroups, where an orthogroup for a specified node in the species tree is a set of genes that descended from or below the given node and is by definition a subset of homology. syns  <cit>  and jin et al.  <cit>  use local synteny to infer homologs and orthologs.

in our earlier work  <cit> , we presented a pipeline that builds on nc and combines its sequence similarity graph structure with gene order information to assess homology relationships. we showed that this approach, called genfamclust , was more accurate than nc  <cit> , which in turn has been shown to be better than blast scores  <cit> .

present study
we performed a rudimentary accuracy check for homologs inferred from gfc and nc in our previous study  <cit>  and nc has been compared with blast for accuracy  <cit> . gene families inferred by applying clustering algorithms on homologs inferred from blast, nc or gfc have not been checked for other cluster properties. therefore, we wanted to measure effects of different homology inference components on accuracy of gene family inference using selected clustering algorithms for simulated data and for a dataset with known gold standard. we also wanted to explore properties such as dependence, similarity, and latent class analysis between gene families. we wanted to quantify the effect of using synteny in addition with similarity for homology inference at the level of gene families using diverse biological datasets representing different branches in tree of life as well as on synthetic datasets.

gfc was evaluated in comparison with nc. we applied single, average and complete linkage clustering algorithms on homologs inferred from nc and from gfc, and applied mcl, hcluster_sg, silix   <cit>  and hifix on blast scores to determine gene families. we calculated accuracy, similarity, dependence and other characteristics of gene families inferred from clustering algorithms on complete genomes of selected metazoan species, and validated the accuracy on synthetic datasets. we compared clusters inferred from applying clustering algorithms on homologs from gfc with semi-manually curated pillars, sets of orthologs and ohnologs  determined by yeast gene order browser   <cit>  on complete genomes of a fungal dataset. we determined agreement and disagreement between gfc and ygob. our results suggest that gfc is a more reliable, accurate, informed and comprehensive pipeline to infer homology than most other similarity-based homology inference approaches as seen in diverse biological datasets as well as the synthetic datasets, and that the local synteny module of gfc adds biologically relevant and useful information to identify homologs.

methods
the gfc method
the gfc method  <cit>  takes two  sets of sequences as input: query data q and reference data r. q should consist of genes for which we want to infer homology and r is only used when computing similarity and synteny correlation scores. in case we do not have reference data, the query data will be used as reference data. figure  <dig> shows an overview of each module of gfc. gfc uses nc as its similarity measure and introduces a synteny correlation score, syc, which in turn is inferred from a local synteny score, sys as its synteny measure. we refer to the original work  <cit>  for further details on parameter settings, method, comparison with nc, and other details.
fig.  <dig> a brief introduction to genfamclust that shows the modules and brief experimental settings of each module. the figure depicts the different modules, their functions, expected input, expected output and the author recommended software settings for each module



in the previous study, we showed that gfc can work with data, where q and r are disjoint and used query versus reference blast-scores as input. in the current study, input to gfc is all-versus-all blast scores. for two genes g <dig> and g <dig>  the score nc is  
 nc=∑i∈n−s¯)−s¯)∑i∈n−s¯)2∑i∈n−s¯) <dig>  where s is the normalized bit score of the optimal local alignment of query sequence g <dig> and database sequence i, n is the number of sequences in database, and s¯ is mean of s over all sequences i.

the synteny scores sys between genes g <dig> and g <dig> are computed from nc scores. we define synteny score sys between two genes g <dig> and g <dig> as 
 sys=max{nc:a∈n,b∈n}  where n represents the set of neighbor genes, upstream or downstream of g, at most at distance k, on a chromosome or contig. in our previous study  <cit> , we determined that k= <dig> is a suitable number of neighbouring genes upstream or downstream to consider for estimating local synteny between genes of metazoa.

synteny correlation score syc between genes g <dig> and g <dig> is defined as 
 syc=∑i∈h−sys¯)−sys¯)∑i∈h−sys¯)2∑i∈h−sys¯) <dig>  where nchits={i|i∈q∪r,nc≥β} and h=nchits∩nchits.

synteny correlation scores are calculated for each gene pair  with acceptable nc score, i.e., g <dig>  g2∈q and nc>β . syntenic correlation score  is more robust than syntenic score  because sys scores are negatively correlated to divergence times and conservation in gene order, and syc is supported by evidence from a range of homologous regions from possibly multiple species with a range of divergence times. this gives empirical support to syc scores as well as compensates for varying divergence times between species.

we use a heuristic decision boundary h for a gene pair  as 
 h=nc2+ <dig> ∗syc2− <dig>   where a positive value for h indicates that g <dig> and g <dig> are homologous, otherwise g <dig> and g <dig> are classified as non-homologous. this decision boundary was determined and evaluated in the previous work  <cit>  on the multispecies dataset and the specifics of evaluation are mentioned in the additional file  <dig> of the same work.

data
for validating each homology inference method, we generated six synthetic datasets with known species tree, homology relationships, gene families and completely observable evolutionary history.

two sets of biological data were collected comprising selected metazoan and fungal species. for these datasets, the genomes, proteomes, gene order information , and the species tree are known. for genes with multiple protein isoforms , we have selected the longest protein as a representative to maintain a single protein per gene representation. both datasets have been taken from publicly available sources , and no experimentation was conducted on animals or humans.

synthetic dataset
we generated the synthetic data using artificial life framework   <cit> , which simulates major evolutionary forces at gene and genome level. we generated six datasets with varying synteny and similarity. mus musculus chromosome  <dig> was used as ancestral chromosome due to its medium size of  <dig> genes and lower percentage of paralogs as compared to most other mouse and human chromosomes. maximum indel size was set to  <dig>  indel rate was set to  <dig> , and indel model was set to zipfian distribution with distribution parameter s equal to  <dig> . duplication rates and loss rates were set so that total number of genes in each dataset was around  <dig>  for each simulation run, we varied substitution rate and translocation rate to alter evolutionary distance for similarity and synteny . for simplicity, rates of all other evolutionary events, e.g., fusion, fission, neofunctionalization, etc., were set to zero. for further documentation on generation of simulated data, refer to section  <dig>  in additional file  <dig> 
each dataset has a different substitution rate and/or translocation rate to show changes in gene sequence and order conservation. datasets  <dig>   <dig> and  <dig> have lower sequence conservation while datasets  <dig>   <dig> and  <dig> have higher sequence conservation. similarly, datasets  <dig> and  <dig> have low,  <dig> and  <dig> have medium and  <dig> and  <dig> have high gene order conservation



metazoan dataset
the metazoan dataset consists of genomes from  <dig> species that range from primates and rodents, e.g., homo sapiens, pongo abelii and mus musculus to simpler metazoans such as ciona intestinalis. the genomes of this dataset have been extracted from ensembl v.  <dig>  <cit>  and the general properties and names of species present in this dataset are shown in table  <dig>  model organisms representing major evolutionary branches in metazoa with annotated and high quality genome assembly were selected from ensembl’s metazoa genome browser. the gold standard for this dataset consisted of  <dig> genes divided into twenty function-based protein families from human and mouse taken from song et al.  <cit> . these families were hand-curated and selected by a detailed literature study and other information such as domain and structure architecture. for each family, song et al.  <cit>  used pfam and/or interpro codes from publications by family experts, and reports from standards committees, such as the hugo gene nomenclature committee  <cit> . table  <dig> enumerates basic properties of the gold standard dataset and further information regarding individual families and their characteristics can be found in additional file 1: section  <dig> .

takifugu rubripes

oreochromis niloticus

danio rerio

drosophila melanogaster

ciona intestinalis

loxodonta africana

tupaia belangeri

oryctolagus cuniculus

sus scrofa

equus caballus

bos taurus

homo sapiens

pongo abelii

macaca mulatta

mus musculus

xenopus tropicalis

gallus gallus

taeniopygia guttata

anolis carolinensis
the table displays the common name, scientific name and the major genbank taxonomic rank of species along with the gene and scaffold/chromosome distribution in each species present in metazoan dataset



fungal dataset
the fungal dataset consists of well-assembled genomes from  <dig> fungi species with a relatively conserved gene order, taken from yeast genome order browser  version  <dig>  <cit>  . ygob partitions genes into sets related by either speciation or whole genome duplication events at their last common ancestor and terms such families as “pillars”. the ygob database is composed of  <dig>  pillars consisting of protein-coding genes. in ygob, up to two genes from each species can be contained in a pillar. pillars are delineated semi-automatically based on sequence similarity and synteny. we use pillars as a gold standard of orthology and ohnology . a whole genome duplication  in the saccharomyces clade is hypothesized  and ygob classifies fungal species into pre-wgd species and post-wgd species in this context. to better understand distribution of genes, we classified genes in ygob pillars into orthologs , singletons , and ohnologs , see fig.  <dig> 
fig.  <dig> species-wise distribution of genes in ygob pillars. the distribution of genes for each species in ygob v. <dig> pillars such that all genes that have an ohnolog or ortholog are quantitatively measured against all the singleton genes  for each species. the distribution shows that l. waltii has the most singleton genes



data grouping for gfc
for our synthetic data  and the fungal dataset, the complete datasets were used as query data q for homology inference and as reference dataset r.

in the metazoan dataset, reference data r consisted of genomes from  <dig> species  and the query data q was composed of homo sapiens and mus musculus genomes.

evaluation
clustering strategies employed for blast, gfc and nc
the blast, nc, and gfc homology predictions were clustered using single linkage, complete linkage, and average linkage. silix was used for inferring gene families using single-linkage clustering on blast. for computing average and complete linkage clusters with blast bitscores, normalized scores were used for clustering. for a pair of genes g <dig> and g <dig> with bitscore s, the normalized score is s/ max,s).

names for clustering-based methods were constructed by appending the homology-inference method-name with the clustering strategy. for example, “gfc-single” denotes that homology has been inferred using gfc followed by family inference using single linkage clustering.

cluster quality analysis
to evaluate inferred clusters against known gene families , we computed cluster quality f for cluster i and family j using the f-score , f=2prp+r. this is the harmonic mean of precision p  and recall r .

evaluation on metazoan dataset
a precision-recall plot was drawn for all clustering methods on the metazoan dataset. one parameter from each software was identified as important for changing precision and recall, and this parameter was varied to change precision/recall. note that the selected parameter was identified from a group of parameters by varying one parameter at a time on the metazoan dataset, and analysing the effect on precision and recall; other datasets may require a different parameter. also, varying multiple parameters simultaneously might give a better precision and recall. resulting clusters were then evaluated for precision and recall. commands to run each software can be found in additional file 1: section  <dig>  for hcluster_sg, applied on blast scores, no single parameter could be identified that caused significant variation for recall; settings used for ensembl compara were employed for hcluster_sg  and varied “minimum edge density between a join” parameter. we also used nc scores as input for hcluster_sg  and then identified “breaking edge density” as the parameter causing maximum variation. “clustering threshold” was identified as the parameter for nc-based algorithms  and for blast scores. the “inflation” parameter represented the most significant parameter for mcl and it was varied in the interval . the “min” parameter, representing minimum size of pre-families, in hifix was set to  <dig>  silix clusters produced in the analysis were given as input to vary hifix clusters.

mutual information and jaccard coefficient calculation
mutual information represents dependence between two variables. let x take values in {yes,no} and denote the outcome from an inference method: homologous or not? then the entropy of x is denoted as h and calculated as h= pr ln pr+ pr ln pr. given two different clustering methods a and b, the mutual information is m=h+h−h, where h is joint entropy and quantifies the overall agreement between both software a and b.

the jaccard similarity coefficient is defined as j=|c∩d|/|c∪d| where c and d are sets of inferred homologous pairs by two different methods.

evaluation on the fungal dataset
the accuracy of gfc predictions on fungal dataset was ascertained by comparing clusters inferred from gfc homologs with ygob pillars. we also looked for possible novel pillars, missed by ygob but found as clusters of orthologs by gfc and evaluated them phylogenetically and syntenically. for phylogenetic analysis, we inferred gene trees from protein sequences of proposed gene family using a pipeline consisting of clustal omega  <cit>  and fasttree  <cit>  with default settings for both softwares. we used notung  <cit>  with default settings to calculate the most parsimonious reconciliation  and to count and score the number of duplications and losses in mpr of inferred gene tree for gene cluster  and the species tree  <cit> . notung’s d/l score is a weighted sum, where the default weights are  <dig>  for duplications and  <dig>  for losses. a lower score, or an increased cluster size with same score, indicated a better cluster because of implied closeness to mpr. this evaluation criteria is based on the hypothesis that a gene tree closer to mpr is more probable than the gene tree further from it  <cit> . we also performed syntenic evaluation of both ygob pillars and clusters inferred from gfc homologs, where we looked for synteny support for homologs. for syntenic analysis, we considered five neighboring genes upstream and five neighboring genes downstream of both genes and tried to find a blast hit in this neighborhood. if such a hit existed, then we concluded that the pair is syntenically supported.

RESULTS
we studied gene families inferred from gfc homologs for quality, agreement, recall, precision, and correlation with clusters from other software and available gold standards. the synthetic dataset was used to benchmark each software at several levels of similarity and synteny. we evaluated accuracy and statistical properties of clusters inferred from all software on metaozoan dataset. the fungal dataset was used to evaluate homology inference accuracy of gfc and importance of its syntenic measure.

synthetic dataset
gene family quality analysis
we computed cluster quality f, precision p, and recall r scores for all clustering methods on gfc and nc. as shown in fig. 3a, gfc consistently performed better than nc for each clustering algorithm for all datasets with varying synteny and similarity conservation, indicating that synteny can improve inference. this is consistent with other studies  <cit> , which shows that gene order conservation is extra information that can aid gene sequence conservation in inferring orthologs more accurately.
fig.  <dig> cluster quality scores on simulated datasets for homology inference algorithms. the cluster quality scores of  single, average and complete linkage clustering when applied on homologs inferred by genfamclust and by neighborhood correlation and  hcluster_sg, mcl, silix and hifix clustering on blast scores and genfamclust with single linkage clustering for each simulated dataset. datasets are arranged in asscending order of similarity and then by asscending order of synteny. a gene families inferred from gfc-based clustering methods  are more accurate than those inferred from nc-based clustering methods  on all clustering algorithms and  gene families inferred from gfc-single  are more accurate than gene families inferred from similarity-only based clustering algorithms. the results are displayed in two panels for better legibility



similarly, we compared gfc-single with other gene family inference methods. hierarchical clustering  and markov clustering  performed consistently well as compared to nc-single linkage and outperformed silix  and the msa-based algorithm hifix. gfc-single outperformed all these methods on clustering quality, see fig. 3b. all clustering methods had a precision close to  <dig> for simulations  <dig>   <dig>  and  <dig>  and  <dig>  for the other three simulated datasets , but recall varied for different methods and datasets with gfc-single having the best recall scores in all six datasets . gfc-single applied to datasets with high gene order conservation  unsurprisingly gave more accurate results than other homology inference methods. gfc-single applied to the datasets with lowest gene order conservation  also showed considerable difference in gene cluster quality with other methods, see fig. 3b.

metazoan dataset
accuracy of gene family inference methods
in this section, we discuss the properties that can be derived from our biological datasets.

we evaluated the accuracy of homologous pairs inferred from clusters by calculating precision and recall of all gene family inference methods. figure  <dig> displays the receiver operating characteristic  curve for all gene family inference methods. while nc-complete and gfc-complete have a higher recall to precision ratio for the computed recall points, they have a smaller upper limit on recall. there are only two points for hcluster_sg because of the small variation we could achieve; the precision was close to  <dig> , with a maximum recall of  <dig> . the maximum recall observed for mcl is  <dig> . since nc is calculated for each blast hit, the maximum recall value of nc-based clustering methods is limited by the recall of blast-hit-based methods. gfc-based methods, in turn, are limited by nc, because gfc consider only those pairs  for homology evaluation that have nc> <dig>  , but nc-based methods have a lower nc threshold of  <dig>  for inferring homology.
fig.  <dig> precision-recall plot for precision and recall of various gene family inference methods on the metazoan dataset. the right top corner shows the maximum cluster quality for compared methods. gfc-single and gfc-complete have the best cluster quality followed by nc-hierarchical and nc-average. mcl, gfc-complete and nc-complete do not have data to test for recall beyond  <dig> ,  <dig>  and  <dig>  respectively. other linkage algorithms on nc  have a maximum recall of  <dig>  while gfc-single and gfc-average have a maximum recall of  <dig> . single linkage clustering on blast scores and hifix have maximum recall of  <dig> . the inset zooms in for better legibility for recall between  <dig>  and  <dig> 



cluster quality scores for each method were also calculated, where the maximum cluster quality score for a method is shown in the top right of fig.  <dig>  gfc-single and gfc-average have the highest quality score followed by those of nc-hierarchical and nc-average. the maximum cluster quality-scores show small differences, which we interpret as a limitation with this indicator because there is substantial variation in the roc curves. synteny, domain architecture, and msa likelihood provide additional information, on top of similarity scores, as shown by the area under the curve of clustering algorithms on gfc and on nc, and hifix as compared to clustering algorithms on blast scores alone , as displayed in fig.  <dig> 

all methods except silix have precision value  <dig> for recall values in . nc-complete, followed by gfc-complete, have the highest precision values for recall values in . gfc-average, followed by nc-average and nc-hierarchical, has the highest precision to recall ratio for recall values in . from the receiver operating characteristic  curve shown in fig.  <dig>  gfc-average has a larger area under the curve. also, gfc-average and gfc-single have the best cluster quality when maximum recall is desired. therefore gfc-average has the best precision to recall trade-off of all tested homology inference methods.

for a closer look at difficult families, we analyzed the  <dig> interesting gene families chosen by song et al.  <cit>  and computed their cluster quality, see fig.  <dig> where panels a-d have data for the four example families fox, tnfr, kinase, and usp. gfc-single and gfc-average are as accurate or better than the corresponding algorithms of nc and significantly better than other methods in all cases. the difference can be clearly observed in fig. 5a for the fox family, where gfc-single and nc-single have quality score  <dig> ; gfc-average and nc-average have quality score  <dig>  while all other algorithms are around or below  <dig> . the same can also be noted for usp, a family with large sequence divergence, and the kinase family, with rich variation in domain architecture. the significantly improved results of nc over other blast-based software  was described by joseph et al.  <cit> . we have shown previously that the cluster quality of gfc is better than nc  <cit>  and that is corroborated by results shown in fig.  <dig> . in particular fig. 5e–f demonstrate overall improvement in cluster quality by gfc-single and average algorithms over other homology inference algorithms. the top three algorithms that are most accurate in inferring gene families for the overall test dataset are gfc single , nc-single  and gfc-average  as displayed in fig. 5f. however, kinase is by far the largest family  and may bias the results towards methods performing well on this family. therefore, we looked at what would happen if the kinase members were excluded. the results retained the same trend, i.e., gfc-single , nc-single  and gfc-average  are still the three best algorithms, see fig. 5e.
fig.  <dig> cluster quality of various gene family inference methods on various families and the complete test data consisting of twenty families. the figure displays cluster quality of selected methods with default settings for various protein families as well as for twenty gene families in test data. panels  display results for a particular protein family like fox, tnfr, kinase and usp respectively. fox and tnfr are single domain architecture family while kinase and usp have multidomain architecture with large sequence divergence and diverse domain architecture families. panel  displays results for nineteen families  because kinases constitute more than half of proteins in number and could bias the overall results. panel  displays the results for all twenty families. in all panels, gfc-based clustering methods have significantly higher or equal cluster quality than other methods



case studies on the value of synteny
to exemplify the value of synteny in assessing homology, we looked at two cases. the first case is an example of identifying multi-domain homology, because a domain insertion complicates similarity. the second case shows how high sequence divergence can be overcome thanks to neighboring genes.

tnfrsf1a in homo sapiens and cd <dig> in mus musculus are two genes belonging to the tumor necrosis factor receptor superfamily , as classified by song et al.  <cit>  in the metazoan dataset. figure 6a displays the domain architecture of both genes, where cd <dig> contains an additional death_trnf domain not present in tnfrsf1a. the blast bit-score between both genes is  <dig>  and the e-value is  <dig> . nc-score for the pair is  <dig> , which is below the  <dig>  threshold set for homologous gene pairs  <cit> . cd <dig> is found on chr.  <dig> in mus musculus and tnfrsf1a on chr.  <dig> in homo sapiens, very close to a cluster of identified members of tnfr superfamily. figure 6b displays this region along with nc-hits  of genes within a distance of  <dig> genes upstream and downstream of cd <dig> and tnfrsf1a. synteny score sys is  <dig> , which means that there is a very similar gene pair in the neighborhood of these genes. synteny correlation score syc is  <dig> , suggesting conserved synteny in other species. figure 6c displays the support for synteny for both cd <dig> and tnfrsf1a in pongo abelii chr.  <dig>  where both genes had a common nc-hit in pongo abelii and this gene supports synteny scores of both genes. thus when nc-score is combined with syc scores for cd <dig> and tnfrsf1a, gfc infers these genes as a ln gene pair. without support for synteny, nc would not be able to infer them as homologs with the current threshold.
fig.  <dig> case study: local synteny adding useful information for homology inference for proteins with domain insertion. the genes cd <dig> in mus musculus and tnfrsf1a in homo sapiens are homologous and belong to the tnfr superfamily. a the domain architecture of cd <dig> and tnfrsf1a. cd <dig> has an additional death_tnfr domain which is absent in tnfrsf1a. the nc-score  for cd <dig> and tnfrsf1a is  <dig> , which is under the  <dig>  threshold recommended for calling the genes homologous  <cit> . b and c gene order conservation between homo sapiens chr.  <dig>  pongo abelii chr.  <dig> and mus musculus chr.  <dig> containing cd <dig> and tnfrsf1a at the center and five genes upstream and downstream in all three chromosomes. only hits with nc-scores greater than  <dig>  are displayed in these panels. common nc-hits between cd <dig> gene in mus musculus and tnfrsf1a gene in homo sapiens are marked and used for calculating synteny correlation score between both genes. this is illustrated in  where cd <dig> in pongo abelii is a common nc-hit of both genes. direct synteny score between both genes  using sys score of genfamclust is  <dig>  and synteny correlation score between both genes using syc score is  <dig> . the gfc score obtained for this pair of genes is  <dig>  which, being is greater than  <dig>  indicates that cd <dig> and tnfrsf1a are homologs



in the second case study, usp <dig> in homo sapiens and usp <dig> in mus musculus, belonging to the ubiquitin specific peptidase  superfamily, are two homologous genes in the metazoan dataset. both proteins are single domain proteins containing the peptidase_c <dig> domain. the blast bit-score for the two proteins is  <dig>  and their e-value is  <dig> . their nc-score is  <dig> , which is below the  <dig>  threshold suggested for homologous gene pairs  <cit> . usp <dig> is found on chr.  <dig> in homo sapiens and usp <dig> on chr. x in mus musculus with significant sequence divergence between the two proteins. figure 7a displays this region along with nc-hits  of genes within a distance of  <dig> genes upstream and downstream of usp <dig> and usp <dig>  synteny score sys is  <dig>  due to presence of a similar gene pair  in the neighborhood of these genes. synteny correlation score syc is  <dig> , suggesting conserved synteny in other species. figure 7b displays the support for synteny for both usp <dig> and usp <dig> in homo sapiens chr. x, where both genes have a common nc-hit  in homo sapiens and syntenic conservation of both query genes is supported by this region. thus, when nc-score is combined with syc scores, gfc infers these genes as a homologous gene pair. due to high sequence divergence and lack of sequence similarity, nc and blast do not infer them as homologs with common thresholds.
fig.  <dig> case study: local synteny adding useful information for homology inference for highly divergent proteins. the genes usp <dig> in mus musculus and usp <dig> in homo sapiens are homologous and belong to the usp superfamily. both proteins are single domain proteins belonging to the peptidase_c <dig> superfamily. the nc-score  for usp <dig> and usp <dig> is  <dig> , which is under the  <dig>  threshold recommended for calling the genes homologous  <cit> . a and b gene order conservation between homo sapiens chr.  <dig>  homo sapiens chr. x and mus musculus chr. x containing usp <dig> and usp <dig> at the center and five genes upstream and downstream in all three chromosomes. only hits with nc-scores greater than  <dig>  are displayed in these panels. common nc-hits between usp <dig> gene in mus musculus and usp <dig> gene in homo sapiens are marked and used for calculating synteny correlation score between both genes. this is illustrated in  where usp <dig> in homo sapiens is a common nc-hit of both genes. direct synteny score between both genes  using sys score of genfamclust is  <dig>  and synteny correlation score between both genes using syc score is  <dig> . the gfc positive score obtained for this pair of genes,  <dig> , indicates that usp <dig> and usp <dig> are homologs despite high sequence divergence and little sequence similarity



similarity and statistical dependence between gene family inference methods
the similarities and dependence between various gene family inference methods was assessed by calculating jaccard similarity coefficients and mutual information scores for all pairwise comparisons for the methods. mutual information  reflects the overall dependence and is used to assess correlation between two variables . all methods are most correlated with gfc-single , which supports the proposition that gfc-single is a good replacement for other methods. however, when jaccard similarity coefficients  were calculated for the pairwise data , the top eight values  showed that gfc-single does not have a single top most value. in fact, the best values belong to gfc-average and gfc-complete, which suggests that other methods have little disagreement on clustering of genes with gfc-average and gfc-complete.

gfc
average
 <dig> 
complete
 <dig> 
single
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 

nc
average
 <dig> 
 <dig> 
complete
 <dig> 
 <dig> 
single

silix

mcl
 <dig> 
 <dig> 

hcluster_sg
 <dig> 
 <dig> 
the eight highest values for jacquard’s similarity coefficient  and mutual information  are bold-faced to show the pair of software with most similarity and statistical dependence



method agreement
we investigated the clusters formed by gfc-single matching for coherence with other methods, i.e., where two clusters a and b are coherent if a⊂b or a⊃b or a=b. two clusters are not coherent if their intersection is not empty and both contain at least one member not found in the other cluster. figure  <dig> shows the percentage of clusters inferred by gfc-single that are coherent with other homology inference method. since nc is a component of gfc and average and complete linkage are more strict algorithms than single linkage, it is not surprising that gfc-single is  <dig> % coherent with all clustering algorithms on nc and average and complete linkage clustering on gfc. unsurprisingly, all clusters in gfc-single are either superset or equal to the clusters formed by these clustering methods due to the high agreement between gfc-single and other methods. furthermore, as expected from high values in the mutual information scores , more than  <dig> % of gfc-single clusters are coherent when comparing with all other methods.
fig.  <dig> cluster coherence for gfc-single with other gene family inference methods. the bar chart displays coherence at cluster level between gfc-single and other gene family inference methods. a cluster is termed common cluster if it can be found with exactly the same members in both softwares. a cluster is termed as subset if the first software contains two or more clusters merged together as a single cluster in the second software. any cluster which is neither common nor subset  is considered contradictory. as expected, nc-based methods, i.e., nc-single, nc-average, nc-complete, gfc-average and gfc-complete have the most number of clusters in common with gfc-single  and there are no contradictory clusters between these software and gfc-single. however, other software  have relatively less common clusters with gfc-single and a few contradictory clusters can also be observed for hifix and silix



the cluster size  is an important characteristic of gene families. a method that aims to find the maximum number of true homologs may have a high false positive rate and gives large-sized clusters. on the other hand, a more precise method will trade off on the number of true homology relationships it captures and might find relatively small and average sized clusters. in order to study cluster sizes and see effect of each clustering strategy, we counted the number of proteins  in each coherent sub-group for each method, with respect to gfc-single, see fig.  <dig>  gfc-single and silix form a few large clusters reflected in fig.  <dig> and in fig.  <dig> for each corresponding method  and similarly for silix . on the other hand, clusters formed by gfc-average are similar to most other software .
fig.  <dig> protein distribution by gfc-single in comparison with other gene family inference methods. bar chart displays the protein distribution according to the cluster a protein is found in, where clusters can be common, subset, superset or contradictory as discussed before. the protein distribution in each class shows aggressive clustering behavior of gfc-based clustering methods w.r.t. other software, i.e., when compared with the corresponding bar in fig.  <dig>  we notice that the percentage proteins contained in common clusters is significantly less than the percentage of common clusters while the percentage proteins contained in subset clusters of gfc-single has substantially increased than the percentage of subset clusters of gfc-single for all software



one interesting observation is the behavior of hcluster_sg, where a large proportion of gfc-single clusters are subsets of hcluster_sg clusters , yet contains only  <dig>  % of proteins clustered by gfc-single . this is because of the compactness constraint imposed by the hcluster_sg algorithm. a similar pattern is also observed for clusters formed by mcl with respect to clusters by gfc-single.

quality assessment using the fungal dataset
accuracy of gene family inference of genfamclust
we wanted to measure the accuracy of gene family inference of gfc with a semi-automatic curated gold standard on a dataset with good syntenic support. the pipeline employed by ygob uses an automatic clustering  based on blast scores and synteny, followed by a round of manual curation  <cit> . some additional genes are assigned based on indirect evidence, via a mutual homolog or by a combination of other observations: synteny in the other post-wgd genomes  and pre-wgd genomes  at that locus, two copies of the gene in other post-wgd genomes, correct clades in phylogenetic trees, or similar protein lengths  <cit> . thanks to the manual curation, ygob can be used to benchmark clusters/gene families formed by gfc. note that there is relatively strong synteny in yeasts, so the synteny-support used by ygob is not as generally applicable for other datasets as it is for yeasts whereas the synteny quantification method of gfc can be used for datasets with various degrees of syntenic conservation.

the ygob pillars contain only orthologs and ohnologs, while gfc clusters infer homologs that also contain paralogs. hence, relating clusters and pillars, a successful cluster is either identical to, or a superset of, a ygob pillar. we first mapped gfc clusters to the ygob pillars, see fig. 10a–b, and looked at both single linkage and average linkage clustering with gfc. more than  <dig> % of pillars in ygob are coherent with both single and average linkage clusters from gfc. only  <dig>  % of the pillars are broken up into smaller clusters by gfc-average and  <dig>  % by gfc-single. there is disagreement for  <dig>  % of pillars with gfc-average and for  <dig>  % with gfc-single. therefore,  <dig>  % of ygob pillars disagree with gfc-average clusters and  <dig>  % of them with gfc-single clusters. this illustrates that most of ygob pillars are also inferred by gfc-single and gfc-average clustering.
fig.  <dig> gfc cluster agreement with ygob pillars. the figure shows bar charts displaying the agreement and disagreement between ygob pillars and clusters formed by single linkage and average linkage on homologs inferred from gfc. first, clusters determined by gfc are mapped onto ygob pillars in  for gfc-average and in  for gfc-single, where each bar displays the percentage of ygob pillars in that category. second, ygob pillars are mapped onto clusters inferred by gfc-average in  and in  by gfc-single, where each bar represents percentage of gfc clusters in that category. the track “additional pillars” displays the percentage of clusters looking like a pillar, with genes are from different species and containing singleton genes in ygob. the track “gfc clusters superset of ygob pillars” represents the percentage of gfc clusters that contain one or more ygob pillar completely. the track “contradictions” represents the percentage of ygob pillars/gfc clusters where gfc places two genes from same ygob pillar in different clusters



we wanted to see if clusters inferred from gfc can be predicted as “novel pillars”, i.e., pillars that ygob has missed. for this purpose, we mapped ygob pillars onto gfc-single or gfc-average clusters and classified clusters as coherent, contradictory and putative novel pillars as shown in fig. 10c–d. clusters from gfc-average or gfc-single containing complete ygob pillars are termed as coherent. if a cluster of gfc-single or gfc-average cluster contains an incomplete ygob pillar, then this cluster is classified as contradictory. putative novel pillars consist of those genes that exist as singleton genes or in two or more disjoint pillars in ygob dataset, but are brought together by gfc-single/gfc-average, forming a multi-gene or a multi-pillar cluster.  <dig>  % of gfc-average clusters are putative novel pillars while  <dig>  % of gfc-single clusters are putative novel pillars. most of the genes in these putative pillars are paralogs , but a few clusters can be characterized as pillars based on their one-to-one species correspondence.

analysis of novel and contradictory predictions of genfamclust
we further investigated clusters from gfc-single or gfc-average that contradicted ygob pillars, i.e., those clusters that contain at least one partial ygob pillar. we analyzed gene order support for both ygob pillars and gfc single or gfc-average clusters by looking for a similarity hit in neighborhood of all gene pairs in cluster. since gfc uses a synteny correlation score explicitly in homology inference and ygob also uses synteny for pillar inference, both gfc-single or gfc-average clusters and ygob pillars show good syntenic support . it is through phylogenetic analysis that the differences between ygob pillars and clusters of gfc-single or gfc-average are highlighted. we inferred phylogenetic trees and computed gene/species tree reconciliations with associated d/l scores  for clusters and pillars, see table  <dig>  all clusters/pillars with size <  <dig> were excluded as they always have a d/l score of  <dig>  for all three cases, i.e., novel pillars proposed by gfc, pillars contained within gfc and gfc clusters contained within ygob pillars, the average d/l score per gene of clusters from gfc-single or gfc-average is significantly lower than that of ygob pillars implying that on average, each cluster from gfc-single or gfc-average is phylogenetically more parsimonious than the corresponding ygob pillar. our manual inspection of the data suggests that gfc finds pillars with high sequence divergence that are mistakenly split up by ygob. manual curation is supposed to find and correct such cases in ygob, but the automated use of synteny in gfc seems more successful.
the phylogenetic quality of clusters formed by gfc-average linkage clusters and alternatives suggested by ygob is shown here. the pillars/clusters are of size ≥  <dig> and includes pillars not clustered together by gfc and vice versa, gfc clusters contained in ygob and probable pillar-like clusters  that contain ygob clusters. the numbers of genes in each cluster are summed up to find the total number of genes. notung’s d/l score divided by the total number of genes gives the average score per gene, where a lower ratio indicates a better fit according to the mpr



in fig.  <dig>  we present a case where a cluster determined by gfc-average and its corresponding ygob pillar do not agree. in fig. 11a, each column represents a ygob pillar and the specific pillars concerning this case are differentiated from other pillars by using red and dark blue colors. ygob places e.cym_ <dig>  along with ael037c  as displayed in fig. 11a . however, gfc-average places e.cym_ <dig> in the pillar containing tdel0d <dig>  and klla0a10989g   and shows ael037c as a single gene cluster. while both placements of ecym_ <dig> are syntenically supported, there are a couple of drawbacks with placing it alongside ael037c. first, ecym_ <dig> has weak blast hits with most of the members of the blue pillar in fig. 11a but no blast hit with ael037c within e-value of  <dig>  therefore placing ecym_ <dig> within the pillar containing tdel0d <dig> is better choice on account of similarity with other members of the pillar than placing with ael037c. second, as shown in fig. 11b  phylogenetic analysis reveals that gfc cluster easily accommodates ecym_ <dig> without adding any duplication or loss to the reconcialiation, which means that the gfc cluster has lower duplication and loss score per gene than the corresponding ygob pillar. therefore, in this case, both phylogenetically and through sequence similarity analysis, it is concluded that the cluster inferred on gfc-homologs is more plausible than the ygob pillar.
fig.  <dig> case study: difference between gfc cluster and ygob pillars - phylogenetic analysis. a displays a portion of  <dig> ygob pillars, where we are interested in the two pillars . ygob classifies them as separate clusters as shown in  but gfc-single and gfc-average classifies ecym_ <dig> to be part of blue pillar and ael037c to be a singleton gene. a also shows that both the cluster and the pillar has good syntenic support via neighboring pillars. b displays the d/l score and the most parsimonious reconciliation of gene tree with species tree constructed from gfc cluster with/without ecym_ <dig> added and highlighted here in blue. the cluster given by gfc-based methods  has the lowest d/l score to gene ratio and is, therefore, phylogenetically most probable. there exist multiple genes in the blue pillar that have a blast hit with ecym_ <dig> and there does not exist a blast hit with evalue  <dig> between ecym_ <dig> and ael037c showing similarity support for gfc cluster and lack of similarity for the genes in red pillar in 



CONCLUSIONS
homology and gene family inference are important tasks and prerequisites to functional, structural, and phylogenetic characterization of genes and proteins. multidomain proteins constitute a long-standing challenge, both in terms of interpretation and prediction of homology. based on the neighborhood correlation framework  <cit> , we have in previous work suggested a novel method, genfamclust that makes use of network structure of synteny and similarity across multiple genomes  <cit> . here, we have evaluated genfamclust in comparison with other homology inference like neighborhood correlation and blast using clustering approaches like single linkage, complete linkage, average linkage, markov clustering, hcluster_sg, silix and hifix on accuracy, similarity, dependence and/or other characteristics on complete genomes of metazoan dataset and validating accuracy of all software on simulated datasets. clustering algorithms applied on genfamclust show maximum similarity with other gene family inference methods using mutual information and jaccard similarity coefficient. moreover, we compared performance of genfamclust on complete genomes of a fungal dataset with semi-manually curated orthologs and ohnologs  to determine accuracy of genfamclust and show that the clusters, where genfamclust and yeast gene order browser pillars disagree, the ones formed by genfamclust have on average a lower duplication loss score per gene, are on average closer to the most parsimonious reconciliation with the fungal species tree and therefore more accurate than the pillars. furthermore, quantitative synteny is a useful way of incorporating gene order conservation information in homology inference. there was significant improvement in results, particularly for datasets containing homologs with syntenic support , despite genfamclust’s relatively simple approach to assessing gene order. from this work, we conclude that genfamclust is a more accurate method to infer homology than most other common homology inference approaches and its synteny measure is simple and biologically realistic as seen in diverse biological datasets as well as in simulated datasets. importantly, it is a tool that uses both similarity and synteny to explicitly predict multidomain homology.

abbreviations

alf: artificial life framework;
blast: basic local alignment search tool;
d/l: duplication/loss;
gfc: genfamclust;
lca: last common ancestor;
mcl: markov clustering;
mpr: most parsimonious reconciliation;
msa: multiple sequence alignment;
nc: neighborhood correlation;
psi-blast: position-specific iterative basic local alignment search tool;
roc: receiver operating characteristic;
tnfr: tumor necrosis factor receptor;
usp: ubiquitin specific peptidase;
wgd: whole genome duplication; 
ygob: yeast gene order browser


additional file
additional file  <dig> additional documentation. supplementary file containing additional documentation, source and processing of data sets, commands used to execute different software, and how the figures and tables were generated from raw data. 



