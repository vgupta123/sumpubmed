BACKGROUND
random forests have often been claimed to uncover interaction effects . this is deduced from the recursive structure of trees, which generally enables them to take dependencies into account in a hierarchical manner. specifically, a different behavior in the two branches after a split indicates possible interactions between the predictor variables  <cit> . however, some variable combinations without clear marginal effects might make the tree algorithm ineffective . in particular in random forests, it is difficult to differentiate between a real interaction effect, marginal effects and just random variations.
fig.  <dig> problematic splits for classification trees and random forests. in  no reasonable first split on the variables x
 <dig> or x
 <dig> can be made. however, two subsequent splits on x
 <dig> and x
 <dig> split the data perfectly. in , again no reasonable first split is possible, even though the classes are linear separable. both the variables x
 <dig> or x
 <dig> have to be considered simultaneously and even with several subsequent splits on x
 <dig> and x
 <dig>  no accurate classification is possible



to investigate how random forests deal with interaction effects, we are interested in two aspects. for the first, we consider an example reported in the studies by droździk et al.  <cit>  and zschiedrich et al.  <cit>  on a polymorphism in the mdr <dig> gene as a susceptibility factor for parkinson’s disease. only a very small marginal genetic effect was shown, but there was a significant interaction between the variant and pesticide exposure on disease risk. hence, it is of interest whether this genetic variant would nonetheless be identified as a predictor in random forests. if a variable is identified by the random forest that contributes to the classification with an interaction effect, this interaction effect is captured by the model. the second aspect is whether random forests are able to identify the interaction effect per se and the predictor variables interacting with each other. we will use the term detect for this in the following. many authors argue that random forests capture interactions , while others even state that they identify, uncover or detect them . however, empirical studies are rare.

it has been shown that variable importance measures are, in principle, suitable to capture interactions  <cit> . however, current methods seem to fail in high dimensional data  <cit> , and the effect of various different interaction models on importance measures has not been investigated. to detect interactions, the standard variable importance measures of random forests, gini and permutation importance, are by design not suitable. therefore, different methods specifically designed to detect effects of pairs of variables in random forests were proposed . these methods measure a joint variable importance to rank variable pairs by their interaction effects. the efficacy of these approaches has only been investigated in small simulations and without considering marginal effects or different interaction scenarios.

in an extensive simulation study, we therefore investigate whether random forests variable importance measures capture or detect interactions effects. in the first part, the gini and permutation variable importance measures are used to capture interaction effects between single nucleotide polymorphisms . since these methods cannot detect interaction effects, we consider only the pairwise importance measures in the second part, in which we focus on the detection of interacting snps. in our simulation, we consider various interaction models, vary effect sizes, minor allele frequencies  and the number of snps randomly selected as splitting candidates . even though snps are used as predictive variables, all results naturally generalize to other kinds of categorical data.

methods
random forests
detailed descriptions of random forests are available in the original  <cit>  and more recent literature  <cit> . in brief, random forests are ensembles of decision trees. depending on the outcome, trees can be classification or regression trees   <cit> , survival trees  <cit>  or probability estimation trees   <cit> , among others. for random forests, a number of trees are grown that differ because of two components. first, each tree is based on a prespecified number of bootstrap samples or subsamples of individuals. second, only a random subset of the variables is considered as splitting candidates at each split in the trees. to classify a subject in the random forest, the results of the single trees are aggregated in an appropriate way, depending on the type of random forest. a great advantage of random forests is that the bootstrapping or subsampling for each tree yields subsets of observations, termed out-of-bag  observations, which are not included in the tree growing process. these are used to estimate the prediction performance or variable importance. there are two specifically important parameters to random forests: the number mtry of randomly selected splitting candidates is usually kept fixed for all splits. in most implementations, the default value for mtry is p, where p is the number of variables in the dataset. however, for datasets with a large number of variables, a larger value is required to capture more relevant variables  <cit> . typically, mtry is tuned, e.g. by comparing the prediction performance of several values using cross validation. another important parameter of random forests is the size of single trees. this size is usually controlled by stopping the tree growth if a minimal terminal node size is reached. for regression and survival outcomes, the terminal node size is usually tuned together with the mtry value, while for classification the trees are grown to purity.

gini importance
the standard splitting rule in random forests for classification outcomes is to maximize the decrease of impurity that is introduced by a split. for this, the impurity is typically measured by the gini index  <cit> . since a large gini index suggests a large decrease of impurity, a split with large gini index can be considered to be important for classification. thus, the gini importance for a variable xi in a tree can be computed by summing the gini index values of all nodes in which a split on xi has been conducted. the average of all tree importance values for xi is then termed gini importance of the random forest for xi. in our simulation studies, the r package ranger  <cit>  was used to compute the gini importance.

permutation importance
the basic idea of the permutation variable importance approach  <cit>  is to consider a variable important if it has a positive effect on the prediction performance. to evaluate this, a tree is grown in the first step, and the prediction accuracy in the oob observations is calculated. in the second step, any association between the variable of interest xi and the outcome is broken by permuting the values of all individuals for xi, and the prediction accuracy is computed again. the difference between the two accuracy values is the permutation importance for xi from a single tree. the average of all tree importance values in a random forest then gives the random forest permutation importance of this variable. the procedure is repeated for all variables of interest. the package ranger  <cit>  was used in our analyses.

pairwise permutation importance 
to measure the permutation importance for a pair of variables, a modification of the permutation importance was proposed  <cit> . instead of permuting a single variable, two variables xi and xj are permuted simultaneously. as for the standard permutation importance, the difference in prediction accuracy with and without permutation is computed and used as importance value for the respective pair of variables. this procedure is repeated for all variable pairs of interest. here, usually, only a subset of the variable pairs is selected to reduce runtime. although the concept could easily be extended to higher orders of interaction, this would lead to high computational costs. originally, the approach was implemented in fortran  <dig>  <cit> . for easier usage and higher computational speed, we included the ppi measure in the r package ranger  <cit>  .

joint importance by maximal subtrees 
the joint importance by maximal subtrees measure  is based on maximal subtrees introduced by ishwaran et al.  <cit> . for this, any subtree of the original tree is called an xi-subtree if the root node is split by xi. a subtree is a maximal subtree if it is not a subtree of a larger xi-subtree. it can now be assumed that variables with subtrees closer to the root node have a larger impact on the prediction and are therefore more important than others. the distance of the maximal subtree to the root node is termed the minimal depth of a variable and gives the importance value. for interactions, second-order maximal -subtrees are used that are defined as the maximal xj-subtree within a maximal xi-subtree. here, the minimal depth is the distance of the maximal -subtree to the root of the maximal xi-subtree. for the simulation studies, the find.interaction function of the r package randomforestsrc  <cit>  was used with the option maxsubtree. a matrix with normalized minimal depths for all pairs of variables of interest is returned. since we are interested in two-way interactions, we used the average of the minimal depths of  and -subtrees to compute the joint importance of xi and xj.

joint variable importance 
for the joint variable importance measure , maximal subtrees are utilized again. as in permutation importance, the association between a variable xi and the outcome is broken by randomization. however, instead of permuting the variable, a so-called noise-up procedure is employed: each observation is dropped down the tree until a maximal xi-subtree is reached. from then on, all further splits are replaced by random child node assignments. this is repeated for all trees. the importance of variable xi is now measured by the difference between the oob prediction accuracy of the noised-up forest and the original forest. for pairs of variables xi and xj, the random assignments start as soon as a maximal subtree of xi or xj is reached. the importance of the interaction effect of xi and xj is computed by the difference of the sum of both single importance values  and the joint importance value . the find.interaction function of randomforestsrc  <cit>  was used with the option vimp.

genetic interaction models
we considered two-way interactions between two snps based on  <dig> interaction models. the models were adopted from lanktree & hegele  <cit>  but modified for gene-gene instead of gene-environment interactions and illustrated in fig.  <dig>  first, in interaction only, both snps have no marginal effects, i.e. an odds ratio  of  <dig>  but an interaction effect. second, in modifier snp, only one snp has a marginal effect, but the increase for the combination of both is larger than would be expected from marginal effects only. in no interaction, both snps have marginal effects, but there is no additional interaction effect. in the redundant model, both snps have marginal effects, but the combination leads to no further increase in the or. finally, in synergistic, both snps have a marginal effect and an additional interaction effect in the same direction.
fig.  <dig> interaction models. odds ratios for different interaction models, depending on a variant at the first snp only, the second snp only or at both snps. if both snps have no marginal effect, i.e. an odds ratio of  <dig>  but an effect if variants are present at both snps, the model is called interaction only. if only one snp has a marginal effect and the combined effect is larger than the single marginal effect, the snp without marginal effect is a modifier snp. in no interaction both snps have a marginal effect but no additional combined effect. in this example both snps have an odds ratio of  <dig>  and the combined effect is exactly  <dig> = <dig> . if both snps have a marginal effect and the combined effect is as large as each single marginal effect, the marginal effects do not add up and we call the model redundant. if both snps have a marginal effect and the combined effect is larger than expected by the marginal effects only, it is a synergistic model



simulation studies
based on these  <dig> interaction models, data was simulated with varying effect sizes for the interaction effects and marginal effects and different maf values. in each dataset, two interacting snps with marginal and/or interaction effects depending on the interaction model,  <dig> marginal-only snps and  <dig> noise snps were generated. data was simulated with a sample size of  <dig>  the phenotypes were simulated with additive effects and logit models, depending on the interaction model . the effects were chosen out of βm= and βi=, for marginal and interaction effects, respectively. the baseline β <dig> was chosen to generate an approximate equal number of cases and controls for each scenario. the maf was mafm= and mafi= for the marginal effect and interaction snps, respectively. for the noise snps, the maf was drawn from a uniform distribution between  <dig> and  <dig>  all simulation parameters are presented in table  <dig>  the resulting penetrance table for βi= <dig>  and mafi= <dig>  is shown in table  <dig> for the interaction only model, the penetrance tables for all other interaction models and scenarios are given in the additional file  <dig> .
β
i
β
i
β
i
β
i
β
i
β
i
β
i
i
β
i
β
i
β
i
in the simulation studies,  <dig> interacting snps and several snps having only marginal effects or no effects  were generated. the phenotypes were simulated with additive effects and logit models. the interacting snps have marginal and/or interaction effects, depending on the genetic model. all effects of the interacting snps are generated from a single coefficient β
i. the table shows marginal effects of snp <dig> and snp <dig> and the interaction effect. if variants at both snps are present, the resulting effect is the sum of the marginal effects and the interaction effect. the baseline β
 <dig> was chosen to generate an approximate equal number of cases and controls for each scenario


β
m

β
i

m
a
f
m

m
a
f
i

mtry
all combinations of these parameters were simulated. the interaction models interaction only, modifier snp, no interaction, redundant and synergistic  were considered. as variable importance measures, we determined the gini importance, permutation importance, pairwise permutation importance, joint importance by maximal subtrees and joint variable importance, resulting in a total of  <dig> simulation scenarios. in addition, one simulation with only  <dig> marginal-only snps and one simulation with  <dig> noise snps was performed. in both cases, m
t
r
y= <dig>  β
m=β
i= <dig>  and m
a
f
m=m
a
f
i= <dig>  was set. finally, a simulation with simulated linkage disequilibrium was performed, see the methods section for a description. all simulation scenarios were replicated  <dig> times
i= <dig> , m
a
f
i= <dig> . a
 <dig> and b
 <dig> represent the major alleles and a
 <dig> and b
 <dig> the minor alleles

a
1
a
1
a
1
a
2
a
2
a
2
b
1
b
1
b
1
b
2
b
2
b
2
compared with table  <dig> it can be seen that a variant at both snps is required for a penetrance larger than the baseline of  <dig> . since the phenotype is simulated with an additive model, the penetrance is increased if two minor alleles are present at one snp. the penetrances for other models and parameters are computed analogously and are shown in tables s1–s <dig> 



to study the influence of the fixed parameters, we further simulated datasets where the number of marginal-only snps was reduced to  <dig> and datasets where the number of noise snps was increased to  <dig>  in both cases, the effects were fixed to βm=βi= <dig>  and the maf to mafm=mafi= <dig> . to investigate the impact of linkage disequilibrium , we simulated ld structures based on data from phase  <dig> of the  <dig> genomes project  <cit> . a random region on chromosome  <dig> was chosen, and  <dig> snps without missing data and a maf between  <dig>  and  <dig>  were selected. the mean pairwise ld between these snps was d′= <dig>   and the correlation r2= <dig>  . for each simulated dataset,  <dig> snps were randomly selected out of these region, and new data with ld structure was simulated using hapsim  <cit> . effects of βm=βi= <dig> and all combinations of βm= and βi= were simulated.

on each dataset, random forests with  <dig> trees each were grown with a varying number of snps randomly selected as splitting candidates , chosen from . to investigate the capture of interacting snps, two measures of importance for single variables were computed in the first part, the gini importance and the permutation importance. second, to investigate the detection of interactions, we computed the pairwise importance measures ppi  <cit> , jmst  <cit>  and jvimp  <cit> . in total,  <dig> simulation scenarios were analyzed, and for each scenario, we ran  <dig> replications. using every importance measure, the variables were ranked, and the ranks of the true interaction snps or, in case of the pairwise measures, their combination were saved. inspired by lunetta et al.  <cit>  and mckinney et al.  <cit> , the proportion of replicates in which both true interaction snps were among the top k ranks is plotted for k= <dig> …, <dig> for the single variable importance measures. a high value for k= <dig> means that the interacting snps are ranked before all other snps and the interaction is captured by the random forest. high values for k= <dig> …, <dig> indicate that the interaction is still captured, but masked by marginal effects or noise.

for the pairwise measures, we plot the proportion of replicates in which the combination of the true interacting snps was among the top k ranks for k= <dig> …, <dig>  to make the analyses computationally feasible, combinations containing noise snps were excluded from the ranking. here, a high value for a small k indicates a high proportion of detection of the true interaction, with the exception of the no interaction model, where the interaction effect is  <dig> and any detection would be a false positive result. to compare the ranking of the interacting snps with the marginal-only snps the proportion of replicates, in which the single variable importance measures ranked the  <dig> marginal-only snps among the top k ranks is shown for k= <dig> …, <dig>  for the pairwise importance measures, the proportion of replicates, in which all  <dig> combinations of marginal-only snps are among the top k pairs, is shown for k= <dig> …, <dig>  replication code for all simulation studies is included in additional file  <dig> 

RESULTS
capturing interaction effects by single variable importance measures
the results for the single variable importance measures and mtry= <dig> are shown in fig.  <dig>  the gini importance ranked the interacting snps generally higher than the permutation importance. however, the results varied greatly, depending on the interaction model, the simulation scenario and the importance measure. for moderate interaction and marginal effects and equal maf for interacting and marginal-only snps , the interacting snps were ranked in the top  <dig> by gini importance in almost all cases. comparison with the ranking of marginal-only snps  reveals that most of the other top ranked snps were marginal-only. however, some noise snps were also included. with permutation importance, the fraction of captured interactions was generally low, except in the synergistic model. both importance measures achieved a higher capture fraction in no interaction than in interaction only, which was expected, since these measures were not designed to detect interactions. when the maf of the interacting snps was increased , the capture fraction was higher for both importance measures and all interaction models, except for permutation importance and the redundant model, where the interacting snps were almost never ranked in the top  <dig> snps. if instead the maf of the marginal-only snps was increased , the gini importance ranked the interacting snps between the marginal-only and the noise snps in almost all cases. for permutation importance, the results were mostly unchanged. if the effect size of the marginal-only snps was increased , the gini importance again ranked the interacting snps between the marginal-only and the noise snps in almost all cases, while the capture fraction of the permutation importance was very low, except for the synergistic model. if the effect size of the interacting snps was increased , the capture fraction was generally higher compared with fig. 3a, in particular for the permutation importance. if maf and effect sizes were modified at the same time, the described effects added up . for mtry= <dig>  which is the default value in most random forests implementations, the capture fraction was generally lower . if the number of marginal-only snps was reduced to  <dig> , the results were mostly similar, except that, as expected, the interacting snps were ranked on average  <dig> ranks higher. if the number of snps was increased to  <dig>  and in the case of ld , the capture fraction was low with both importance measures. in the simulation with ld, the permutation importance ranked the interacting snps higher in most of the scenarios.
fig.  <dig> simulation results for single variable importance measures. on the vertical axis, the proportion of simulation replications in which both interacting snps were included in the top k snps according to the ranking by the variable importance measures is shown. on the horizontal axis, the number of k top snps considered is shown. if the importance measure included both interacting snps in the top k snps, they were captured. in  to , different simulation scenarios are shown. the parameters β
i and β
m correspond to the effects of the interacting snps and marginal-only snps, respectively. m
a
f
i and m
a
f
m are the minor allele frequencies of the corresponding snps. see figures s1–s <dig>  for results of all simulation scenarios for the single variable importance measures



detecting interaction effects by pairwise variable importance measures
the results for the pairwise variable importance measures and mtry= <dig> are shown in fig.  <dig>  the detection fraction was low in all models. the difference between the methods were generally smaller than for the single variable importance measures. for moderate interaction and marginal effects and equal maf for interacting and marginal-only snps , the importance measures were about equal, except for redundant, where jvimp was slightly higher, and for synergistic, where it was lower. remarkably, with all importance measures, the detection in no interaction was higher than in interaction only. when the maf of the interacting snps was increased , the detection increased for all models, except for redundant, where it was lower for jmst and ppi and unchanged for jvimp. in interaction only, the increase was largest, and for jvimp, the detection was higher than in no interaction. if instead the maf of the marginal-only snps was increased , the detection was slightly lower than in fig. 4a, in particular for jvimp. if the effect size of the interacting snps was increased , the detection was higher for all importance measures. the detection of jvimp was high for interaction only and low for no interaction and synergistic. if the effect size of the marginal-only snps was increased , the detection was very low in all cases. if maf and effect sizes were modified at the same time, the described effects added up . again, for mtry= <dig>  the detection fraction was generally lower . if the number of marginal-only snps was reduced to  <dig> , the results were similar for small values of k, and the detection was higher for larger values of k. this was expected, since combinations including noise variables are excluded in the pairwise measures and thus only  <dig> combinations of snps are possible in this case. if the number of snps was increased to  <dig> , the results were comparable to the simulation with  <dig> snps. in the case of ld , the detection fraction for larger values of k was slightly increased. however, this was also the case if no interaction or marginal effects were included, indicating that correlations were detected as interactions.
fig.  <dig> simulation results for pairwise variable importance measures. on the vertical axis, the proportion of simulation replications in which the true interaction between the two interacting snps is included in the top k snp pairs according to the ranking by the variable importance measures is shown. on the horizontal axis, the number of k top snp pairs considered is shown. if the importance measure included the true interaction in the top k snp pairs, the interaction is detected. in  to , different simulation scenarios are shown. the parameters β
i and β
m correspond to the effects of the interacting snps and marginal-only snps, respectively. m
a
f
i and m
a
f
m are the minor allele frequencies of the corresponding snps. see figures s25–s <dig>  for results of all simulation scenarios for the single variable importance measures



discussion
in our extensive simulation studies, we found that random forests are capable of capturing snp-snp interactions, i.e. of including them in the model. of the single variable importance measures, the gini importance ranks the interacting snps higher than the permutation importance. the single importance measures are unable to detect interactions, and this by design. they can thus not differentiate between marginal and interaction effects. but since, in most cases, the interacting snps are ranked higher than noise snps even if no marginal effects are present, we conclude that the interaction effects are thereby captured in random forests. in general, the ranking depends heavily on the maf, with more frequent snps being ranked higher.

the results of the pairwise importance measures suggest that they are unable to detect interactions in the presence of marginal effects. with all measures, marginal effects were detected as interaction effects, and true interactions were not found if other snps with strong marginal effects were present. again, snps were ranked higher if the maf was increased. all methods ranked the interacting snps higher in the model without interaction, compared with the model with interaction only, suggesting that interaction effects cannot be differentiated from marginal effect. of the compared methods, jvimp  <cit>  achieved the best results, since detection was highest for the model with interaction only and lowest for the model without interaction in most of the simulation scenarios.

to study snp-snp interactions with random forest, we used  <dig> interaction models in a simplified setting. we simulated rather strong effects and large maf values. our results show that the pairwise importance measures are unable to detect interactions in this setting. in simulations with an increased number of noise snps, the single importance measures performed worse and the pairwise measures about equal. if ld was considered, only very strong effects were detected at all and again marginal effects were detected as interactions.

despite the difficulty of the pairwise variable importance measures to detect interactions, our data suggest that interaction effects are generally captured by random forests. one approach to improve the detection rate might be to use random forests to perform a variable selection first and applying another method to identify interactions subsequently  <cit> . however, interaction effects might again be masked by marginal effects in that approach. a related idea is to uncover marginal effects in a first step and project the remaining effects on a space orthogonal to the marginal effects, to detect interactions in a second step  <cit> . on a different route, the detection of interactions might be facilitated by developing new pairwise importance measures based on standard random forests  <cit> . however, it is argued that in the case of many predictor variables, it is unlikely that interacting variables are selected simultaneously in a given tree  <cit> . second, for combinations of variables, the attributable risk  <cit>  can be small, in particular for variants with small maf. this means that only a small proportion of cases is attributable to the interaction, and even for large effect sizes these interactions are difficult to detect. finally, it can be argued that random forests are by design unable to split on interactions  <cit> . as shown in fig. 1a, if interacting variables have no marginal effect at all, no first split is possible and the interaction cannot be captured. to solve this, the tree growing process in the random forest itself could be modified to better incorporate interactions. a promising, yet computationally intensive new approach are reinforcement learning trees  <cit> , which employ reinforcement learning in each node, to additionally incorporate future splits down in the tree. several other approaches have been proposed  <cit> , but these are based on single trees only, limiting their usage to low dimensional settings. with fast random forest implementations now available for large sample sizes  <cit>  and high dimensional data  <cit>  these or new methods could be integrated into the random forest framework.

CONCLUSIONS
we conclude that random forests are generally capable of capturing snp-snp interactions, but current variable importance measures are unable to detect them. the gini importance performs better than the permutation importance in identifying snps involved in an interaction. however, both methods are not designed to uncover interactions as such, and consequently, in most of the cases, the interactions are masked by other snps with marginal effects. none of the pairwise importance measures is able to reliably detect interactions. marginal effects are detected as interaction effects and here, too, other snps with marginal effects hinder the detection of interactions. as a result one should be cautious when claiming that random forests uncover interaction effects.

availability of data and materials
the software and simulation code supporting the conclusions of this article are included within the article and its additional files.

additional files
additional file  <dig> software package. version of the software package ranger, including the pairwise permutation importance measure. 



additional file  <dig> supplementary tables. penetrance tables for all genetic interaction models, effect sizes and minor allele frequencies. 



additional file  <dig> simulation code. replication material for all simulation studies. 



additional file  <dig> supplementary figures. all results for the single and pairwise variable importance measures. 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

mnw performed the simulation studies, implemented the pairwise permutation variable importance method and drafted the manuscript. irk conceived of the study and edited the manuscript. mnw, az and irk contributed to interpretation and presentation of the results. all authors read and approved the final manuscript.

