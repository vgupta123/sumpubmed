BACKGROUND
gene ontology   <cit>  is a useful and popular taxonomy of controlled biological terms that can be used to assess the functional relationship between different gene products. go organizes knowledge about gene function in a directed acyclic graph  of terms and their relationships. it is organized in three orthogonal ontologies capturing knowledge about cellular location, biological process and molecular function  <cit> . experts annotate go terms to genes in different organisms based on diverse evidence sources. go has become the most used ontology and annotation system for assessing the confidence and biological relevance of high-throughput experiments based on the notion that if two or more genes are related by an experiment, they should also be related by known gene function. for instance, go is often used as a benchmark for protein-protein interaction  experimental mapping and prediction  <cit> , protein function prediction  <cit> , and pathway analysis  <cit> . in this paper, we are specifically interested in the use of go in a metric for protein-protein interactions .

the relationship between gene products annotated to go is quantified either simply from the annotated terms  or more globally by using semantic similarity measures that consider the entire go dag. the go dag is a complex network of over  <dig>  terms and  <dig>  relations . the cellular component ontology of go describes gene product locations at the levels of sub-cellular structure and macromolecular complexes through over  <dig>  terms and  <dig>  relations. the molecular function ontology of go is described using over  <dig>  terms and  <dig>  relations. the complexity of biological process ontology is even greater with over  <dig>  terms and  <dig>  relations. the large number of terms and relations describing the cellular knowledge covered by go makes it difficult to naively quantify relationships between gene products. for example, saccharomyces cerevisiae proteins rpl10p  and sqt1p  physically interact with each other but do not share a go term. often, a sub-set of go terms or a reduced version of go, like go slim  <cit> , is used for relating genes. this makes go terms and annotations easier to work with and compare, but valuable information is lost in the simplification.

semantic similarity is a technique used to measure the likeness of concepts belonging to an ontology. most early semantic similarity measures  <cit>  were developed for linguistic studies in natural language processing. recently, semantic similarity measurement methods have been applied to and further developed and tailored for biological uses  <cit> . a semantic similarity function returns a numerical value describing the closeness between two  concepts or terms of a given ontology  <cit> . in the context of ppi datasets, semantic similarity can be used as an indicator for the plausibility of an interaction because proteins that interact in the cell  are expected to participate in similar cellular locations and processes. for example, a high semantic similarity value between go cellular component terms annotated to a set of proteins indicates that they are in close proximity and thus have a higher probability of interaction compared to proteins randomly selected from the proteome  <cit> . thus, semantic similarity measures are useful for scoring the confidence of a predicted ppi using the full information stored in the ontology.

semantic similarity measures can be broadly classified into two groups: edge based and node based. edge based methods  <cit>  determine semantic similarity based on the shared paths between two terms in a given ontology, whereas node based methods  <cit>  rely on comparing the properties of the input terms , their ancestors, or descendants. one commonly used property is the specificity, or the information content , of the common ancestors between a pair of terms, which captures the notion of closeness in the dag - the more specific the common ancestors of the terms, the closer the terms. the information content of a term c can be defined as the negative log likelihood of the term ,

  ic=−lnp 

where p is the probability of occurrence of the term c in a specific corpus   <cit> . while calculating p in go, the descendants of term c are also considered. for example, the probability of occurrence of the term 'cytosol' in the cellular component hierarchy of go for s. cerevisiae defined by the number of genes assigned to it is  <dig>  and its information content is  <dig> . comparative studies to determine the best semantic similarity measurement method have shown that performance on a variety of tests varies greatly depending upon the type of biological datasets used  <cit> . for example, for function prediction resnik's  <cit>  and graph information content   <cit>  work best and for cellular location prediction, the support vector machine  based method from lei et al.  <cit>  is preferable. in  <dig>  guo et al.  <cit>  compared a number of semantic similarity methods , lin  <cit> , jiang  <cit> , and graph similarity-based methods  <cit> ) on a test to distinguish true from false human ppis. they used proteins within a complex, or neighboring each other in kyoto encyclopedia of genes and genomes  regulatory pathways, as a positive ppi dataset, and randomly chosen protein pairs as a negative interaction dataset. from receiver operating characteristic  curve performance analysis they concluded that resnik  is better than other measures at distinguishing positive from negative ppis. in  <dig>  xu et al.  <cit>  compared the resnik  <cit>  , tao  <cit> , schlicker  <cit> , and wang  <cit>  semantic similarity measurement methods on the same test with a s. cerevisiae ppi dataset from the database of interacting proteins . they used schlicker's rfunsimall method which considers all go ontologies together. from roc analysis they found that the resnik  method is best for go ontologies taken separately or together. thus, recent independent studies  <cit>  show resnik's method for calculating semantic similarity is best for measuring the likelihood of true ppis.

resnik's method defines semantic similarity between two ontology terms s and t for a given set c of common ancestors of s and t as,

  r=maxc∈c 

where p is the frequency of proteins annotated to term c and its descendants in the ontology. however, in most cases, proteins are assigned to more than one term in the same go ontology. suppose, proteins a and b are annotated to sets of go terms s and t, respectively. the semantic similarity between a and b is defined as the maximum information content ) of the set s × t .

  sim=maxsi,tj,∈s,tr 

or as the average information content ) of the set s × t .

  sim=∑si,tj∈s,trn×m 

where si and tj are the go terms in sets s and t, respectively, r  is the information content of the lowest common ancestor of terms si and tj , and n and m are the set sizes. resnik  has been found to be a better measure of likelihood for ppis than avg. the use of the max function with resnik's method to score ppis makes sense because proteins in a ppi only need to be in close proximity  or in a similar biological process once, among all possible combinations annotation terms, for the ppi to be biologically relevant.

resnik's measure calculates semantic similarity based only on the information content of a common ancestor. therefore, it cannot differentiate between any two term pairs with same common ancestor even if they are in different parts of the godag. for example, proteins a and b annotated to the same cellular component term, e.g. 'cytoplasm', will have the same semantic similarity value as proteins c and d annotated to different terms, e.g. 'nucleus' and 'mitochondria', which have 'cytoplasm' as a common ancestor. thus, resnik's measure does not consider some of the information contained in the taxonomy by focusing only on the information content of a single ancestor term  <cit> . lin's and jiang's measures consider the information content of two terms along with that of a common ancestor but tend to overestimate similarity if the terms are higher up in the ontology  <cit> . for example, lin's method will assign a score of  <dig> if two proteins are present in a same general compartment, e.g. 'cytoplasm'. similar arguments also hold for molecular function and biological process go ontologies. further, the structure of go is unbalanced with some paths having more details  than others. this could be due to a particular path describing a more complex biological structure or to a particular focus of go curators as they work to complete the ontology. for example, the 'intracellular' term of go component has more depth than the 'extracellular' term , because there are many more biological terms associated with cell internals versus immediate cell externals. the ideal solution to these problems is to use a balanced go dag and annotation, but this is difficult to construct automatically  <cit> . alternatively, we can develop semantic similarity scoring methods that consider the unbalanced natureof go. in this paper, we have used the successful idea of information content from resnik  and introduced clustering of similar go terms into sub-graphs to create a new semantic similarity algorithm, topological clustering semantic similarity , which outperforms resnik's method for distinguishing positive from negative protein interactions and in other performance measurements.

RESULTS
algorithm
the goal of tcss is to find subsets of go terms defining similar concepts  and score gene products belonging to a similar subset higher than if they belong to different sets. in an effort to normalize the depth of the go dag across the ontology, the algorithm first defines mutually exclusive  sub-graphs  rooted at major nodes. these sub-graphs are collapsed as single nodes to form a meta-graph and a two-level semantic similarity calculation is per-formed, as described below.

topology based clustering
to normalize the depth of terms across the go dag, semantic similarity between terms, s and t, is calculated within a sub-graph instead of the complete go graph. sub-graphs consist of terms defining related concepts  and are defined based on a threshold on the information content of all terms present in a given ontology. the topological information content  of a term depends upon its specificity in the graph and is defined as shown in equation 

  ict=−ln||o|) 

where t is a term in the ontology o, |n| is the number of child terms of t, and |o| is the total number of terms in o  <cit> . the terms which are more specific  will have high information content as compared to less specific ones . an ict cutoff is defined in a pre-calculation step  and terms below the cutoff are selected as sub-graph roots. if two sub-graph roots have similar ict values  then their sub-graphs are merged. this is done to increase the dissimilarity between sub-graphs. a sub-graph contains all children of the selected sub-graph root term.

go terms often have multiple parents, which could result in overlapping sub-graphs . each go term in the cellular component ontology has on average  <dig>  edges, whereas the ratio is  <dig>  for the biological process ontology, and  <dig>  for the molecular function ontology. all relationship types  are treated equally. sub-graph overlap is removed in two steps :

• edge removal by transitive reduction. the go dag gives rise to partial orders ≤ on its vertices, where u ≤ v when there exists a directed edge from u to v. however, u and v could connect via many different go dag paths. for example, the go graph with paths a → b → c and a → c has the same reachability as the go graph with relation-ships a → b → c. thus, the transitive reduction of go graph g results in the smallest graph r such that, the transitive closure of g is same as the transitive closure of r. this results in 14% and 6% fewer edges in cellular component and biological process ontologies respectively, reducing the likelihood of sub-graph overlap. there was no significant reduction in the molecular function ontology.

• term duplication. after the reduction step, if a term still belongs to more than one sub-graph then it and its descendants are replicated in each sub-graph. such a situation arises with a term having disjunctive ancestors  belonging to different sub-graphs  <cit> .

finally, all sub-graphs are connected into a hierarchy based upon the position of their root terms in original graph to construct a meta-graph . meta nodes representing sub-graphs are labeled using the go term of their sub-graph root.

normalized scoring
we developed a system to calculate a semantic similarity score on the constructed meta-graph that results in more balanced semantic similarity scores compared to scoring the go dag directly. the system scores protein pairs in the same sub-graph higher than if they belong to different sub-graphs. the annotation information content  of all the terms present in an ontology is calculated based on the frequency of gene products annotated to a term and its children is shown in equation .

  ica = −ln∑t∈oannot)  

  annot=|pt∪c∈npc| 

where t is a term in the ontology o and pt is the set of gene products annotated to t. n is the set of child terms of t in the ontology. the annotation information content values lie in the range [ <dig>  ∞) and are normalized to  <cit>  by dividing with the maxi-mum information content in a sub-graph or meta-graph. for a term tis belonging to the ith sub-graph gis, the sub-graph information content  of ti is defined as shown in equation .

  ics=icamaxtis∈gisica 

for a term tim in meta-graph gm, the information content  of ti is calculated as shown in equation .

  icm =icamaxtim∈gmica 

gene products a and b may be annotated to more than one go term. let, s and t be the sets of go terms annotated to gene products a and b respectively. then the semantic similarity between gene products a and b is defined by the maximum approach, as shown in equation .

  maxsι,tj∈s,t{icmmax)if icsmax)if  si∈gis and tj∈gjs si,tj∈gis 

where lca is the lowest common ancestor  of the terms si and tj . if both the terms si and tj belong to the same sub-graph then their lowest common ancestor will be in that sub-graph, otherwise it will belong to the meta-graph.

testing
in the previous section, we presented a new algorithm, topological clustering semantic similarity , to compute semantic similarity between go terms annotated to proteins that normalizes go dag branch depth. we compared the performance of tcss with other semantic similarity measures given by resnik  <cit> , lin  <cit> , wang et al.   <cit> , schlicker et al.    <cit> , jiang & conrath   <cit> , pesquita et al.   <cit>  on the problem of scoring ppis. performance analysis of tcss was done using receiver operating characteristic  and f <dig> measures. roc grades the performance of classifiers as a trade-off between true positive rate  and false positive rate . we also used the f <dig> measure, which is the harmonic mean of precision  and recall  and indicates the classifier's ability to retrieve relevant information. the evaluation was done separately for cellular component , biological process , and molecular function  ontologies.

saccharomyces cerevisiae ppi test
s. cerevisiae positive and negative protein interaction sets  were used to evaluate the above mentioned semantic similarity measures for their ability to distinguish positives from negatives. tcss, resnik, lin, jiang and schlicker were tested using both the maximum  and best-match average   approach of combining multiple go gene annotations and wang was tested using only the bma approach, as only bma was used in the original wang publication and is the only option available in the author's implementation. bma averages scores when multiple combinations of go terms are possible . simgic considers multiple go annotations while calculating semantic similarity scores, thus max and bma approaches are not relevant for it. we focused initial tests on manually annotated go annotations ), but also tested with all annotations, including electronic annotations ).

tcss and resnik consistently showed the best performance for all three ontologies in roc analysis under different conditions , additional file 1: supp. figure s <dig> , s <dig> ). since it is not clear from roc analysis which of tcss and resnik performs better, we compared their f <dig> scores at different semantic similarity cutoffs for all the three ontologies , additional file 1: supp. figure s <dig> , s <dig> ). tcss showed average improvements of  <dig> times for cc,  <dig>  times for bp, and  <dig>  times for mf in retrieving relevant information over resnik  mainly due to the faster increase in true positive rate for tcss at a given score threshold.

tests were performed separately for cellular component , biological process  and molecular function  ontologies. best-match average and maximum approaches were used for datasets with  and without  electronic annotations. the best roc scores are in bold.

average improvement in f <dig> scores achieved by tcss over resnik for best-match average and maximum approaches. tcss does  <dig> times better than resnik for cellular component ,  <dig>  times for biological process , and  <dig>  times for molecular function  ontologies, on average.

homo sapiens ppi test
to test the generality of the method for ppi scoring, we ran similar tests as above using a h. sapiens ppi data set. h. sapiens positive and negative protein interaction sets  were used to evaluate tcss, resnik, lin, jiang, schlicker and simgic methods. the evaluation was done using bma and max approaches for combining multiple go annotations on iea+/-datasets . table  <dig> shows the improvement in f <dig> scores achieved by tcss over resnik. on average tcss performed  <dig>  times better than resnik for cc,  <dig>  times for bp, and  <dig>  times for mf ontologies.

average improvement in f <dig> scores achieved by tcss over resnik for best-match average and maximum approaches. tcss does  <dig>  times better than resnik for cellular component ,  <dig>  times for biological process , and  <dig>  times for molecular function  ontologies on average.

correlation with gene expression
to test how our method performs in another application scenario, we tested its correlation with gene expression data. two gene products that have similar function are more likely to have similar expression profiles and be annotated to similar go terms  <cit> .therefore, a comparison of the similarity between gene expression of two gene products with the semantic similarity scores obtained by different measures can be used as a performance test. gene expression profiles of randomly selected s. cerevisiae gene pairs  were evaluated against the above mentioned semantic similarity methods. the evaluation was performed as above using the bma/max approaches of combining multiple go annotations on iea+ dataset. tcss showed the best correlation between gene expression and semantic similarity with all three go ontologies , additional file 1: supp. figure s16).

correlation with ec, pfam, and sequence similarity
the collaborative evaluation of go-based semantic similarity measures  website was developed by pesquita et al.  <cit>  to evaluate semantic similarity measures on a standard set of data and benchmarks: correlation of similarity measure with similarity of sequence, pfam domains and enzyme commission  numbers . we compared tcss against resnik, schlicker, jiang, lin and simgic using cessm for both max and bma approaches on iea-dataset. tcss showed the best  correlation with ec similarity for all three ontologies , additional file 1: supp. figure s17). for pfam similarity using the max approach, tcss is best for cc and mf ontologies and simgic is best for the bp ontology ). simgic better correlates with sequence similarity than other methods in all three ontologies , additional file 1: supp. figure s17).

discussion
we present a new algorithm  for calculating semantic similarity and tested its performance against other methods. tcss shows an average improvement of  <dig>  times in f <dig> scores over resnik, the next best method, on our s. cerevisiae ppi test and  <dig> times on our h. sapiens ppi test. this clearly indicates the advantage of using tcss to retrieve positive protein interactions and hold back negative interactions over resnik's method. we compared tcss using both the bma and max approaches for combining multiple go annotations, and found that max generally works best for ppi datasets. the use of the max function to score ppis, instead of an 'average' function, makes sense because proteins in ppis only need to be in close proximity  or in a similar biological process once, among all possible combinations annotation terms, to be biologically relevant. therefore, the max approach is unlikely to overestimate true ppis. however, there may be application scenarios  where the max approach could lead to over-estimation and bma would be a better choice. in these cases, tcss can be modified to use the bma method instead of max . for example, tcss shows worse correlation with pfam similarity than simgic on the biological process ontology test, but becomes better when using bma . also, it is evident from the correlation of semantic similarity with gene expression similarity that tcss is more likely to assign a higher score to gene products if they also exhibit similar gene expression. tests using the cessm benchmark dataset were in favor of tcss for ec number similarity and pfam similarity. simgic does better than tcss in the sequence similarity correlation test. one reason for this could be that simgic scores gene products with shared annotation terms and gene products annotated to same term are more likely to be part of the same gene family and thus have high sequence similarity.

scatter plots of the semantic similarity scores obtained by tcss  and resnik  methods clearly indicate that a significant number of positive protein interactions are under-scored by resnik  in all three ontologies . given below are some biological examples selected from these scatter plots in support of our claim:

• cellular component: rpl10p is a s. cerevisiae protein responsible for joining of the  <dig> s and  <dig> s ribosomal subunits  <cit> . it has been found to interact  <cit>  with sqt1p, an essential protein involved in a late step of  <dig> s ribosomal subunit assembly or modification  <cit>  using affinity capture-mass spectrometry , affinity capture-western and two-hybrid experimental methods. rpl10p is annotated to the 'cytosolic large ribosomal subunit' term and sqt1p is annotated to the 'cytosolic ribo-some' term  <cit> . the score assigned by resnik  to the rpl10p-sqt1p interaction is  <dig>  which is low considering that both the proteins are in similar cellular components and the 'cytosolic large ribosomal subunit' term is the child term of 'cytosolic ribosome' in go. the same interaction gets a score of  <dig>  by tcss , which categorizes it as a high confidence interaction, due to the normalization step on the 'cytosolic ribosome' sub-graph.

• biological process: the nth1p-dcs1p protein-protein interaction was experimentally shown by uetz et al  and yu et al   <cit>  using two-hybrid experiments. both nth1p and dcs1p proteins share the 'vacuolar protein catabolic process' term in go  <cit> . the score assigned by resnik  to the nth1p-dcs1p interaction is  <dig>  which is low considering that both proteins are part of the same biological process. the same interaction gets a score of  <dig> by tcss , due to the normalization on 'vacuolar protein catabolic process' sub-graph, thus categorizing it as a high confidence interaction.

• molecular function: mft1p and hpr1p are the subunits of the nuclear tho complex, which is involved in transcription elongation, mitotic recombination and telomere maintenance  <cit> . the mft1p-hpr1p interaction has been shown by affinity capture-ms and affinity capture-western experimental techniques  <cit> . both mft1p and hpr1p are an-notated to the 'nucleic acid binding' term of go  <cit> . this interaction is assigned a score of  <dig>  by resnik  because the term nucleic acid binding is fairly general. this score is low considering that both the proteins are part of a same go term. the same interaction is assigned a score of  <dig> by tcss , due to the normalization step on the 'nucleic acid binding' sub-graph. 'nucleic acid binding' is a general molecular function term with a shallow hierarchy.

future directions for tcss development include testing if the go graph edge type  can provide additional information that will lead to improved performance and also testing the method more rigorously with other data sets.

CONCLUSIONS
we present a new semantic similarity algorithm, topological clustering semantic similarity, designed to use the go for ppi confidence assessment. it partitions the go dag into non-overlapping sub-graphs, using a topological clustering method, and computes semantic similarity normalized within each sub-graph. we evaluated tcss against other methods for measuring semantic similarity between go terms annotated to proteins involved in protein-protein interactions from s. cerevisiae and h. sapiens. we also tested the correlation between multiple semantic similarity scoring methods with gene expression, protein sequence, ec, and pfam similarity. performance tests were generally in favor of tcss in all three go ontologies: cellular component, biological process and molecular function.

this new method will be useful as an evidence source in ppi prediction or in confidence assessment of ppi datasets.

