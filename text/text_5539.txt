BACKGROUND
cellular functions such as growth, motility, and signaling are often guided by mechanical forces  <cit> . how proteins distribute external mechanical stress largely defines their stability and function  <cit> . being able to understand and predict the network of interactions defining the distribution of internal strain is a prerequisite for functional mutagenesis and rational design of function. a fundamental problem of most experimental and theoretical methods is their limitation to observing changes at the coordinate level. in many cases signals propagate without causing major atomic displacements, thereby hiding the communication pathway. we here present a new method termed force distribution analysis  that has the potential to overcome these limitations by observing changes in forces directly. reminiscent of finite element analysis used to engineer macroscopic structures, fda is capable to disclose the distribution of strain in molecular structures. fda is entirely based on molecular dynamics  simulations and can thus be carried out for any structure which can be subjected to md. we have successfully demonstrated the application of fda to proteins and biopolymers by revealing the mechanisms of force distribution, including the mechanically robust immunoglobulin domains  <cit> , a stiff allosteric protein  <cit> , the von willebrand factor in blood vessels  <cit>  and silk fibers  <cit> .

fda can be considered as a natural extension of any classical md code. it allows to directly observe changes in atomic forces as a result of a perturbation. examples for such perturbations are the application of an external force  or binding of a ligand. fda makes use of pair-wise forces, i.e. the force an atom exerts on another atom. this is different from the total force acting on a certain atom, figure 1a+b. by considering the direct force between each atom pair, the equilibrium force between these atoms can be different from zero, even for the theoretical case of a system without any motion. atom-wise forces, i.e. the sum over all force vectors acting on an atom, instead average out to zero over time and are not of interest here. it is by observing pair-wise forces that we obtain the advantage to be able to detect signal propagation even through stiff materials where, by definition, forces propagate without causing major atomic displacement. a real world example is newton's cradle. while coordinate changes and the corresponding ball-wise forces are non-zero only for the first and last ball, pair-wise forces are able to reveal the shock wave propagating through the stationary balls in-between as well.

during a typical md run, forces that each two atoms exert on each other are calculated in every simulations step. these forces are directly summed up, resulting in a single force vector  acting on each atom. , averaging to zero in relatively short time, can not serve as a useful measure for the propagation of mechanical perturbations. fda introduces a simple additional step to prevent this loss of information. prior to the summation, pair-wise forces are stored in an n × n matrix, where n is the number of atoms.

implementation
the fda code is implemented as an extension of gromacs, version  <dig> . <dig>  <cit> . most of the functionality is kept in external libraries to ensure maximal modularity and portability. gromacs uses so called "kernels", that is, highly optimized assembly loops, to calculate non-bonded interactions, which make up for most of the computation time. a slower fallback c/fortran implementation is provided as well. bonded interaction functions are implemented in c. monitoring pair-wise forces required modification of both, the kernels and bonded interaction potentials. fda-gromacs thus currently only supports c kernels, though there is the option to use assembly loops where possible, e.g. for solvent-solvent interactions. on our test hardware, this resulted in a performance loss of up to 50%. alternatively, however, fda can be performed in a post-processing step on trajectories obtained with the standard md code during re-run simulations, at only minor additional computational cost.

translation and rotation forbid averaging of vectorized forces, and thus our implementation does not store force vectors, but rather the norm of those. attractive and repulsive forces can still be distinguished by assigning opposite signs to them. in case vectorized forces are needed they can easily be recalculated from the trajectories. most force fields make use of multi-body forces, typically angle and dihedral terms that involve more than two atoms. we use an approximation to transform angle and proper dihedrals into a pair-wise representation, see figure 1e. such a transformation is difficult for improper dihedrals, which for this reason are excluded. the same is true for long-range forces approximated with particle mesh ewald   <cit> , which cannot straightforwardly be transformed into pair-wise interactions and are thus excluded as well. at the typical cutoff distance of >  <dig> nm, the coulomb potential already is relatively flat, i.e. slight changes in atomic distances have little effect on the force between them. overall, we find most of the strain applied to a protein to be propagated via a network comprised of a series of short to medium ranged connections, i.e. the sub-nano scale  <cit> .

analogous to coordinate trajectories, pair-wise forces are stored in so called "force trajectories". fda requires exhaustive sampling of the conformational space of the macromolecule to reduce noise , and is thus currently based on time-averaged forces. the user may specify an output frequency; if this frequency is larger than the calculation step, forces will be averaged over this output interval. force trajectories are stored in a binary file, containing a data block for each writing step. each block contains the pair-wise forces, stored in a sparse matrix representation consisting of an index identifying the atom pair, the actual force and the interaction type. this way, it is possible to analyze contributions of every potential, typically bonded  and non-bonded ) terms, separately. in order to separate coulomb and vdw interactions, the upper matrix triangle  is used to store van der waals forces, and the lower triangle  stores coulomb forces. a detailed specification of the binary format is provided together with the fda code.

regarding setup and installation, there is no difference between fda-gromacs and the standard gromacs distribution. detailed installation instruction can be found on the offcial gromacs website, http://www.gromacs.org.

RESULTS
one can use pair-wise forces to assess specific protein-ligand interactions, or to just debug a system, i.e. by checking for unrealistically high forces. yet, in most cases, the response to a mechanical or allosteric signal becomes visible by comparing forces for different states. these states can be a system with and without applied external force, or the apo and holo configuration of an allosteric protein; here we call these states reference  and perturbed  for simplicity. parts under mechanical strain become visible by subtracting forces of both states for each pair of interacting atoms. changes in force, Δf, are then given by the equation:   

to achieve a sufficient signal to noise ratio, fda will often require exhaustive sampling of the conformational space. this is best done by calculating a set of independent trajectories, as md simulations are prone to being trapped in local minima. the signal to noise ratio is estimated by comparing Δf to differences in force observed for systems in the same state, Δfnoise, where Δfnoise = fref - fref'. due to random coordinate fluctuations on the ps-ns timescale , we found convergence of forces to require simulation timescales of  <dig> to several hundred nano seconds  <cit>  , depending on the flexibility of the system. moreover, normalization by the standard error between independent trajectories, ε, may help to improve data quality. we previously defined the normalized change in force, Δfij as:   

visualization and statistical analysis
to be able to map changes in force onto the atoms of a protein structure, e.g. as a color gradient, a projection of the pair-wise space into the atom wise space is required. such a projection is given by the simple column sum:   

Δfj can be seen as the mechanical coupling of an atom j with respect to all other atoms. we use absolute values in the summation to avoid forces from canceling each other out. the Δfj can be visualized by simply writing them as b-factors into a pdb file, figure 2a+b. alternatively, changes in pair-wise forces can be mapped as a network on a protein structure, figure 2c. pair-wise forces can be seen as edges connecting atoms, and the force between these atoms is the edge weight. the network of interactions under strain can then be visualized by drawing an edge between each atom for which |Δfij| > cutoff. hereby it is often insightful to study the contributions of individual groups, such as side-chains or backbone atoms  <cit> , what is easily achieved by restricting the summation to atoms within a certain group.

more details are obtained by statistical analysis on force trajectories, e.g. using principal component analysis . we previously identified a network of correlated fluctuations governing the allosteric function of metj by performing pca on force trajectories  <cit> . in this case, it can be advantageous to look at forces between residue pairs instead of atom pairs. this will significantly decrease the memory requirements of the calculations.

finally, fda automatically provides detailed ligand-protein interaction profiles, as we have demonstrated for metj  <cit> . the interaction of a ligand with a protein structure depends on the complex interplay of individual atoms, charges play a crucial role. intuitively, this can be seen as a pair-wise interaction between the ligand and the individual protein residues. fda thus naturally provides a detailed description of the interaction pattern.

usage and tools
to ease the analysis of force trajectories, the fda implementation comes with a tool called g_fdatools to process or convert force trajectories. g_fdatools provides options to sum up force trajectories, to average forces over a distinct time interval and to optionally calculate the corresponding variances. to allow for normalization and estimation of the sampling quality, the standard error ε between average forces obtained from individual runs can be calculated. due to the vast number of pair-wise atomic interactions, which in the worst case grows quadratically with system size, it is often advantageous to instead analyze forces between residue pairs. g_fdatools allows to calculate residue averaged pair-wise forces  from atomic force trajectories in two ways.

the first and often sufficient way is to simply sum up pair-wise forces between every two residues u, v as defined in equation  <dig>    

the resulting forces are not entirely correct, as we do not work with vectorized forces, but they are a good approximation. the second way is to calculate force vectors between residues using the coordinate trajectories. here, prior to summation, exact atomic force vectors are restored by multiplying the force fij with the coordinate vector  between atoms i, j:      

in this case, x, y, z components and the norm of the force vectors between each residue pair will be returned. from our experience, a coordinate output frequency of  <dig> ps is sufficient to precisely restore the force vectors. in both cases, it is possible to restrict averaging to certain interaction types and atom groups, e.g. only coulomb interactions between pairs of side-chains.

for further analysis we provide an r package called fdatools that allows to import and analyze pair-wise forces in r  <cit> . the package provides several methods for data import, supporting full and sparse matrix representations. in all cases the output format is a simple matrix, which can easily be used for statistical analyses. various functions to visualize the force distribution by mapping pair-wise forces onto pdb structures as described above are provided. networks of residue pairs showing correlated changes in forces, as e.g. revealed by pca, can easily be created with fdatools as well. we hereto provide wrapper functions that allow to easily apply the r pca implementation  on fda data. finally, we provide a tool to convert binary force matrices into an ascii representation, allowing users to easily import the data into the software package of their choice.

a step-by-step tutorial guiding the interested user through simulation setup, data-processing and analysis is available on the fda project page hosted on google code http://code.google.com/p/force-distribution-analysis/.

limitations and complementary methods
fda is perfectly fitted to elucidate mechanisms rendering proteins mechanically stable, or to understand slow conformational transitions. in cases of high intrinsic conformational flexibility or when larger conformational transitions occur during the sampling of forces, force averages will not converge, and fda will fail to provide meaningful results. such situations may occur for simulations at temperatures close to the melting point, for intrinsically disordered proteins, or molecules showing conformational transitions on the ps to ns time scale. applying external strain to a protein and observing the induced changes by fda as described in  <cit>  is only feasible for mechanically stable and rigid proteins. for proteins with low mechanical stability, other mechanical perturbations such as e.g. ligand binding  <cit>  can be characterized, or a time-resolved analysis of forces is required, which is the focus of ongoing work.

we here want to emphasize that fda is not a replacement but a complement for existing, coordinate based methods. it provides an additional layer of information, namely how internal stress distribution will lead to conformational or entropic changes. by combining, for example, conventional trajectory analysis, normal mode analysis and fda, we could shed light on dynamic allostery in metj, a transcription factor  <cit> .

CONCLUSIONS
we here presented a new tool, force distribution analysis, as a way to track how perturbations distribute through molecules using standard molecular dynamics simulations. we outlined the basic assumptions, the implementation into the md simulation package gromacs, as well as the strength and limitations experienced in recent applications. given the successful application of fda to a number of proteins, we expect fda to play a growing role in understanding and engineering the mechanics of other macromolecules and materials.

availability and requirements
project name: force distribution analyis

project home page: http://code.google.com/p/force-distribution-analysis/

operating system: linux/unix

programming language: c, additional tools in r

other requirements: r 

license: gnu gpl v2

any restrictions to use by non-academics: none

authors' contributions
ws implemented all software and performed the analyses presented here. he also wrote this manuscript. cs is maintaining the project from now on, especially the r library. he also contributed to this manuscript. fg supervised the whole development process and contributed to this manuscript. all authors read and approved the final manuscript.

