BACKGROUND
the discovery of novel transcription factor binding sites in regulatory sequences of genes has been an important scientific challenge for some years now. computational approaches to this problem have come in two flavors. one class of methods looks for overrepresented motifs in sequences that are believed to contain several binding sites for the same factor   <cit> . the second class of methods identifies motifs that are significantly conserved in orthologous sequences, e.g., promoters of the same gene in different species  <cit> . these two approaches have been applied to their respective kinds of data sets, with moderate success. however, with new genomes being sequenced regularly, motif-finding applications today often present heterogeneous sequence data that includes promoters/enhancers of multiple co-regulated genes in one species, as well as their orthologs in other species. this paper presents a probabilistic algorithm, called "phyme" , for ab-initio detection of binding site motifs in such heterogeneous sequences.

phyme integrates two different axes of information in evaluating a candidate motif's significance. one axis is that of overrepresentation, which depends on the number of occurrences of the motif in each species. the other axis is the level of conservation of each motif instance across the species. a real motif that is not sufficiently significant along any one axis may turn out to be significant when both axes are considered simultaneously, leading to increased sensitivity and specificity of the integrated approach. given the regulatory regions of potentially co-regulated genes along with their orthologs from other species, phyme uses an expectation-maximization  algorithm to search for the motif that best explains the data. when evaluating a motif, its orthologous occurrences are assumed related to each other by a probabilistic model of evolution that takes into account the varying phylogenetic distances among the species.  each e-m iteration scales linearly with the total length of the input sequences and also with the number of species. the algorithm can also handle cases where the heterogeneous data is incomplete, i.e., where the orthologous regulatory regions are missing from some species. this capability makes it particularly suitable for applications that include data from incomplete genomes, or where orthology information is incomplete.

an important feature of phyme is that it allows motifs to occur in  conserved as well as unconserved regions in orthologous promoters, treating the two kinds of occurrences differently when scoring a motif. it does not require each binding site occurrence in one promoter to have an orthologous occurrence in any or all other species. as a result, phyme affords some flexibility in terms of the evolutionary distances spanned by the input sequences. for instance, using a distantly related ortholog will help pinpoint motifs located in conserved regions but will not hamper the discovery of motifs absent from that ortholog.

comparison with previous work
traditionally, motif finding algorithms have treated input sequences as being independently generated, and searched for statistically overrepresented motifs in them. these algorithms  <cit>  do not have the notion of sequence orthology built into them, and are therefore typically run on sequences from the same species. phyme has an obvious advantage over them, since it takes motif conservation into account. 

another class of motif-finding methods take as input sets of orthologous sequences, either aligned  <cit>  or unaligned  <cit>  and search for well-conserved motifs. these methods however, unlike phyme, do not exploit the other important aspect of a motif's significance – that of overrepresentation.

some algorithms  <cit>  take as input a heterogeneous pool of co-regulated and orthologous promoters, and find overrepresented motifs after treating all sequences  as independent. however, this "homogenizing" strategy has its disadvantage, since it treats orthologous  motif occurrences as statistically independent observations. phyme, on the other hand, respects the distinction between orthologous and co-regulated motif occurrences.

there are algorithms that attempt to handle the two axes of information by a two-step approach. for instance, cliften et al.  <cit>  and kellis et al.  <cit>  find a set of highly conserved motifs  in the first step, and then extract overrepresented ones from this set, in a second step. the algorithm compareprospector  <cit>  takes a gibbs-sampling approach to find overrepresented motifs but biases the search in regions conserved across species. conversely, one may identify overrepresented motifs in the first step, and then isolate evolutionarily conserved ones among these  <cit> . in either case, a motif that is relatively weak by either criterion alone, but strong when considering both, may be missed out. phyme's integrated approach to the heterogeneous data problem addresses this issue. admittedly, the methods of cliften et al. and kellis et al. have a broader range of applications, since these are genome-wide searches for motifs.

a recent algorithm called orthomeme  tackles the heterogeneous data problem by using expectation-maximization to search the space of motifs and the space of motif alignments  simultaneously. each motif occurrence is assumed to have an orthologous copy in the other species, that could be located anywhere in the corresponding promoter. this is in contrast to phyme's approach, where orthologous motif occurrences are restricted to pre-aligned regions of the promoters. this restriction comes with the advantage that phyme scales better with the number of species than does orthomeme. this is a significant advantage in practice, since the orthomeme implementation is able to handle only two species data, whereas we have experimented with phyme on orthologs from up to six species. moreover, phyme also allows non-conserved occurrences , or occurrences that are conserved in some species and missing in others. requiring that all motif occurrences come in orthologous sets may be justified for very closely related species, but for more diverged pairs of species  the promoters are known to have a mix of conserved and unconserved binding sites  <cit> . phyme therefore gains an advantage by looking at both kinds of occurrences. however, orthomeme's phylogenetic model is more powerful than that of phyme and can handle a greater range of motif variation than phyme can.

our approach is most similar to the algorithm phylogibbs , the main differences being that phylogibbs  uses a gibbs-sampling approach and  assumes a star topology for the phylogeny, whereas phyme uses an e-m approach and can handle arbitrary tree topologies. thus phyme has a broader domain of applicability in terms of the phylogenetic relationships among input sequences. it may therefore be preferable over phylogibbs when the phylogeny is far removed from a star, e.g., in a scenario where a pair of close species is included along with another pair of closely-related species, but the two pairs are greatly diverged from each other. on the other hand, an advantage of using phylogibbs is that multiple motifs  may be searched in parallel.

the algorithm emnem  uses e-m and a phylogenetic model to find motifs, much like phyme does, except that the former assumes that the input sequences are completely aligned. this assumption may be unsuitable for species at relatively large evolutionary distances, e.g., human and mouse, or d. melanogaster and d. pseudoobscura. therefore, phyme can handle a broader range of species divergence in its input. another important difference between emnem and phyme is the probabilistic model that each uses to model evolution. while emnem is implemented to use the jukes-cantor model  <cit> , phyme uses a more realistic model that incorporates binding site specificities. thus, in calculating the joint likelihood of aligned motif occurrences, the emnem implementation does not use the fact that the effective mutation probability of an ancestral base to some base β depends on the fitness of a binding site with β at that position. the evolutionary model used in phyme reflects this dependence, and the incorporation of the model into an expectation-maximization framework is one of the main technical contributions of our work. the results section includes a preliminary comparison of phyme's performance with that of emnem, orthomeme and phylogibbs, on real data.

the algorithm phylocon  extends the greedy algorithm of consensus  to incorporate multiple species data. however, it treats all orthologous sequences uniformly, ignoring the fact that different species may be at different relative distances from each other. as such, it may be more suitable to use phyme in cases where the phylogeny is far removed from a star topology of uniform branch length. also, the phylocon algorithm proceeds by first identifying several local multiple alignments in orthologous sequences and then searching for common patterns  among these multiple alignments. as a result, it may miss motif occurrences that are not well-conserved  in orthologous sequences. an advantage of phylocon is that it does not require the motif length to be input, and instead reports motifs of varying lengths.

RESULTS
in this section, we first present the new algorithm, and then describe its evaluation on synthetic data, as well as biological data sets from various organisms.

algorithm
suppose that the input includes n different promoters , and for each promoter there are sequences for k species.  phyme requires that there be one designated "reference species" σr in the input, for which there is sequence data corresponding to each of the n promoters. we shall describe phyme's algorithm for the special case n =  <dig>  though allowing multiple motif instances in this one sequence. the extension to n >  <dig> is trivial, and omitted here for simplicity. thus, the input consists of a set of sequences s = {s <dig>  s <dig> ,..., sk}, where si is the orthologous sequence from species i, and one of the si's comes from species σr. the input also includes the motif length l, and the phylogenetic tree Ψ over the k species, with neutral point mutation rates  along each branch. the output is a position weight matrix  representing the discovered motif, and its score.

phyme first partially aligns the input sequences and identifies contiguous regions  in each  that are highly conserved in . it then inputs all the sequences, along with the locations of the conserved blocks, to the core motif-finding algorithm.

alignment of sequences
in this pre-processing step, phyme computes the regions of high local similarity between  and each of the other si. the assumption is that such regions are of common evolutionary origin, and any sequence outside them is independently evolved. phyme runs the lagan alignment program of brudno et al.  <cit>  on each sequence pair , and extracts all ungapped aligned blocks of a certain minimum size  and percent identity, to serve as the blocks of common origin. this is illustrated in figure 1a, which shows orthologous promoters from three species, σ <dig> , σ <dig> and σ <dig>  an example of a block is region bc in σ <dig>  aligned with region uv in σ <dig>  note how blocks can overlap in the reference species .

the input is now reorganized into two kinds of sequences:

 <dig>  the sequence from the reference species, with aligned blocks of the other species "hanging off" it.  thus, any position in this sequence either has a single base from the reference species, or has an alignment of bases from multiple species, one of which is the reference species. this entire construct is called the "reference sequence".

 <dig>  any subsequence not from the reference species, and bracketed by blocks on both sides.  the terminal sequences in the non-reference species, which are to the left of the left-most block and to the right of the right-most block, may be optionally included, as per the user's specification.

phyme fits the parameters of a probabilistic model on the reference and bracketed sequences simultaneously, and the desired motif comes out as a by-product of this training procedure, which is described next.

hidden markov model
the probabilistic process that is assumed to generate sequences is described by a very simple hidden markov model . for the moment, let us assume that the sequence s being generated is entirely from one species, with no aligned positions. the hmm parameters include a "motif weight matrix" wm of length l, and a "background weight matrix" wb of length  <dig>  th entry of a weight matrix is the probability of emitting the base j at position k of the sequence being sampled from the matrix.) at each step, the generative process of the hmm chooses either wm or wb according to their transition probabilities pm = p and pb =  <dig> - p respectively, where p is a model parameter. a sequence is then sampled from the chosen weight matrix, and appended at the end of the sequence s created so far. the process then proceeds to the next step. it stops when the length of s reaches its known length l. the series of motifs chosen in the successive steps of the process is called a "parse" of the sequence. the model parameters θ, which include wm, wb, and p, associate a well-defined probability pr with each parse t of the sequence s. the probability that s was generated by an hmm with parameters θ is then given by pr = Σtpr. let pr be the probability of generating s by using only wb. for a given θ, we define



this log-likelihood ratio is the function optimized by phyme – the parameters wm and p are trained so as to maximize f.  the value of the objective function for a set of independent sequences is the sum of its values for the sequences taken separately. this additive property allows easy extension of the parameter training procedure to the general case of multiple sequences . the objective function maximized then is , the set s now including, for each of the n input promoters, the "reference sequence" as well as all "bracketed sequences"  as separate elements.

an important aspect of computing f is the subsequence probability pr. this is the probability of generating a subsequence s of length l, , when sampling from weight matrix w; so , where s = s1s <dig> ... sl, and wkj is the probability of sampling base j at the kth position of w. this formula applies when subsequence s has a single base at each position. however, we need to adapt this formula to the case where one or more positions in subsequence s may be an alignment of orthologous bases from multiple species. in this general case, we can write s as ψ1ψ <dig> ... ψl, where each ψk is either a single base, or an alignment of orthologous bases at a single position of the reference sequence. the subsequence probability pr can then be computed as , where pre denotes the probability of observing ψ at position k when sampling from w. let the vector ψ = , where sσ is the nucleotide from species σ in the single-base alignment ψ. if the sσ were independent, we could write . however, the sσ's occur in an alignment , meaning that this assumption of independence is obviously untenable. thus we need an expression for pre that explicitly takes the phylogenetic relationships among the species  into account. we present such an expression in the next section, and we shall thereafter return to the topic of maximizing the function f.

evolutionary model
this section describes the probabilistic evolutionary model that phyme uses to incorporate phylogenetic relationships in the computation of the term pre mentioned above. it was first proposed in sinha et al.  <cit>  to model binding site evolution, and applied successfully on the two fly genomes. the model makes the crucial assumption that all positions in a binding site evolve independently, at equal rates, and the probability of fixation of a mutation α → β at position k is proportional to the weight matrix entry of β at that position. if we further assume, for simplicity of exposition, that the phylogenetic tree Ψ has a star topology, then the model assumptions give us 



where sσ is the nucleotide from species σ in alignment ψ, δxy =  <dig> if x = y and  <dig> otherwise, and μσ is the neutral mutation probability between the ancestor and the species σ. for the position k, one "creates" a base α in the ancestor with frequency wkσ, and each such base is either passed unchanged to the species σ  or mutated in species σ with probability μσ and a new base selected with a frequency defined again by w.

in the general case, when Ψ does not have a star topology, formula  can be written in a recursive manner. 

expectation maximization
the function f that is maximized by phyme measures how much more likely it is that s was generated using the motif weight matrix, than without it. naturally, a pwm that maximizes this score is the motif that best explains the data. phyme tries to find such a motif by training the parameters  of the hmm, using the baum-welch algorithm  <cit> , which iteratively converges to a locally optimum θ using expectation maximization .

let , for i ∈ {m, b} be the expected number of times the hmm plants motif wi in generating the sequence, the expectation being over all parses. similarly, let  be the expected number of times that the nucleotide alignment ψ is sampled at the kth position of the motif wm.  and  are expected values of hidden variables of the hmm. these averages are computed during the "e-step" in each iteration, using dynamic programming .

in the "m-step", two kinds of updates are made, using the values of ,  computed in the e-step. the parameter p is updated according to . the motif weight matrix wm is updated by solving, for each column k of the matrix, the following set of five simultaneous equations, in variables uβ  and λ.





the derivation of the update formulas is somewhat involved, and is described in the methods section. the equations are solved using newton's method, and the solution value of uβ is used to update the th entry of wm, according to wmkβ = euβ. newton's method involves computation of the first and second partial derivatives of log pre, as described in methods. in practice, we found that newton's method always converges from a single initial condition, and the convergence almost always happens within 3– <dig> iterations.

the time complexity of  phyme is o, where l is the length of the sequences, k is the number of species, and l is the length of the motif desired. 

results on synthetic data
we first present the results of running phyme on synthetic data. the experimental framework is largely borrowed from wang and stormo  <cit> . in each experiment,  <dig> "ancestral" sequences, each of length  <dig> bp, are created at random, and  <dig> "binding sites", each of length  <dig>  are "planted" at randomly chosen locations in these sequences. the sites are chosen such that the weight matrix formed by them has a relative entropy of r. each ancestral sequence is then "evolved" by point mutations to create k additional "orthologous" copies, assuming a star topology  and a common "background mutation rate" μb along each branch.  the motif instances are subjected to a common "motif mutation rate" μm , which is the probability of mutation of any position in a motif. the ancestral set of sequences is then removed and the remaining k orthologous sets are input to the motif discovery algorithm, with one arbitrarily designated the reference species. the algorithm is made to report  <dig> different motifs, thereby making some allowance for false positives, especially when r is low. for each reported motif, its  <dig> best occurrences in the reference species are compared with the planted occurrences, to give a score ranging between  <dig> and  <dig>   the score for the best of the  <dig> reported motifs is the "performance score" of the algorithm. the three algorithms being compared are phyme, meme  <cit> , and gibbs   <cit> . phyme was run with an evolutionary tree with a star topology, the mutation rate along each branch being μb. meme and gibbs were run on the entire data set pooled together, ignoring the orthology of sequences.

we also evaluated the effect of mis-estimates of the neutral mutation rates on performance. phyme was run on random sequences created with experiment parameters k =  <dig>  μb =  <dig> , μm =  <dig>  and r ∈ { <dig>   <dig>  13}, and in different runs, the value of μb input to phyme ranged from  <dig>   to  <dig>  . we observed that underestimates of μb resulted in significantly greater performance degradation than overestimates of equal magnitude.  for instance, using μb =  <dig>  instead of the true value of  <dig>  made no difference to the performance, whereas using μb =  <dig>  resulted in  <dig> – 50% decline.

results on biological data
in the following sections, we present results of running phyme on real data sets from yeast, fly and human. the results are compared to meme , orthomeme  <cit> , phylogibbs  <cit> , and emnem  <cit> . the latter three programs address the heterogeneous data problem directly, just as phyme does. another program that solves the same problem is phylocon  <cit> . phylocon was not evaluated in our study because we did not have a clear method to post-process its output to extract a specified number of top-scoring motifs that are non-redundant. 

yeast data sets
we first present some examples in yeast, where sequence data from four species, s. cerevisiae, s. mikatae, s. kudriavzevii and s. bayanus was used. we performed motif-finding  on some regulons from the scpd  <cit>  database, which catalogues sets of co-regulated genes. for each regulon, the top η motif occurrences in s. cerevisiae reported by the algorithm  were examined for "matches" to the known weight matrix for that regulon's motif.  the number of matches was the performance score of the algorithm. we counted matches to the weight matrix, rather than to known sites, so that a reported motif occurrence that is very similar to the known motif  will not be counted as a false positive. each algorithm reported  <dig> motifs , and the results are for the best scoring motif, thereby making some allowance for false positives, such as simple repeats. even though phyme is implemented to handle arbitrary phylogenies, for efficiency it was run with a phylogenetic tree with a star topology, having s. cerevisiae at the center and the mutation rate along the branches of s. mikatae, s. kudriavzevii, and s. bayanus being  respectively. these values are based on average substitution rate per base in the corresponding pairs of species.  for multiple species data, meme was run by pooling all sequences together. orthomeme was run only for the case k =  <dig> , since its current implementation can only handle two species data. the other four programs were run for k =  <dig>   <dig>   <dig>   <dig>  in separate executions.

see methods for details on how orthomeme, phylogibbs and emnem were run.

we find the scores of orthomeme, as reported in figure  <dig>  to be lower than those of phyme . however, we observed that in all five regulons reported, orthomeme reported fewer than η occurrences in s. cerevisiae per motif. this is because orthomeme was run in the "zoops" mode , since the "tcm" mode  does not perform well. thus, with the total number of predictions being fewer than η, orthomeme's scores are expected to be lower than other programs even for the same level of specificity.

we suggest caution in comparing phyme's scores directly with those of the other programs, since we lacked expertise in choosing optimal parameter settings for them. this is particularly true for emnem, which has several parameters for modeling the evolution of motifs, and we lacked experience in setting these parameters optimally. we clearly have more expertise at using phyme than the other programs, and this makes the comparisons biased. our goal in these experiments was to provide some examples of how multiple species data can be exploited to improve performance, rather than assessing the different motif finding programs available. a proper comparative assessment of these programs has to address several challenges not addressed here. such a task was undertaken for several motif finding programs, in the work of tompa et al. . a similar assessment of the motif-finding programs in the context of the heterogeneous data problem is an important topic for future work.

fly data sets
next, we present results from fruitfly, where data from two species, d. melanogaster and d. pseudoobscura, is available. nine different enhancers were chosen – enhancers eve <dig>  eve <dig>  eve <dig>  ftz3', gtposterior, hairy <dig>  hairy <dig>  and run <dig> have binding sites for the kr transcription factor, and btdhead has bcd sites.

well-defined weight matrices are available for both kr and bcd  <cit> . for each enhancer, the top η motif occurrences  reported by the algorithm  were examined, and the number of matches was the performance score of the algorithm. six different motif-finding strategies were tested separately –  meme_ <dig>   meme_ <dig> ,  phylogibbs,  orthomeme,  emnem and  phyme . each strategy was required to report occurrences only in d. melanogaster. 

as in the yeast data sets, the comparison of scores between phyme and the other programs should be interpreted with caution, since we lacked expertise in choosing optimal parameter settings for the other programs.

human data sets
finally, we present results of running phyme on two data sets from human, where orthology with mouse and rat was utilized. these data sets were chosen because all of  <dig> different motif-finding programs tested in an assessment project  failed to report the correct motif in them. the first set corresponds to the transcription factor sp <dig>  a zinc-finger protein. the heterogeneous sequence data included  <dig> human promoters , of which four have orthologous promoters from mouse and rat,  <dig> from mouse only,  <dig> from rat only, and  <dig> have no orthologs. each of the human promoters is known to have at least one functional sp <dig> binding site, with a total of  <dig> known sites overall. figure 7a shows a "sequence logo" representation  <cit>  of an alignment of these known sites. phyme was run to find motifs of length  <dig>  using the phylogenetic tree shown in figure 7c. the second motif reported by phyme  is almost identical to the known sp <dig> weight matrix. the top  <dig> instances  of this motif included  <dig> that overlapped with known binding sites. we also ran meme on the heterogeneous data set , and the second motif reported was a good match to sp <dig>  however, of its  <dig> instances reported in human promoters, only  <dig> were overlapping with known sites. moreover, when meme was run on human promoters alone, none of the top three motifs matched the sp <dig> motif. thus, phyme showed a clear performance improvement over meme, both in the single species run, and when the orthologous sequences were pooled together.

the second data set used in our tests corresponds to the leucine zipper transcription factor c-jun. the heterogeneous data set included  <dig> bp promoters for  <dig> human genes targeted by c-jun, as well as orthologs from mouse and rat for  <dig> genes, from mouse only for  <dig> genes, and from rat only for the remaining three genes. phyme was run exactly as in the previous data set. the known binding sites of c-jun  were aligned to produce a weight matrix that is shown in figure 8a. the third ranked motif reported by phyme is shown in figure 8b, and we can see that its last five positions are similar to the first five positions of the known weight matrix. of the top  <dig> instances of the discovered motif,  <dig> overlap with known binding sites of c-jun, whereas a maximum of  <dig> could have been obtained.  we also ran meme on the heterogeneous data set , and none of the three best motifs reported by meme matched the c-jun motif. thus, both the human data sets tested demonstrate how phyme can improve motif discovery in typical motif finding scenarios by exploiting heterogeneous sequence data properly.

discussion
issues in algorithm design
alignment step
in the alignment step, phyme extracts blocks of high sequence similarity between the reference species and each of the other species. motif occurrences in such locally conserved regions are deemed orthologous, an assumption well-justified by traditional interpretations of sequence alignment. conversely, all orthologous motif occurrences are assumed to be aligned in such blocks. this assumption is not always true since there may be orthologous motif occurrences not aligned by the alignment program, but it heavily constrains the space of orthologous motif occurrences, implying greater efficiency of the search algorithm. moreover, the assumption does not mean that "true" orthologous occurrences in unaligned regions are ignored – they are merely treated as independent occurrences. our experiments on synthetic data  demonstrate that the performance is not very sensitive to the correct alignment of all orthologous motif pairs. the blocks computed in the alignment step have to be with respect to the reference species, but the alignment itself need not be done in a pairwise manner. a multiple alignment of all sequences may be computed  and blocks between  and each of the other si may then be extracted.  furthermore, the implementation may be modified in the future to drop the requirement of a reference species, since this requirement is not crucial to the motif finding step of phyme. for instance, the alignment step may utilize the "threaded block alignment"  program of blanchette et al.  <cit> , which completely circumvents the notion of a reference species in multiple alignments.

once the blocks of high sequence conservation have been identified, a possible strategy is to restrict attention to motif occurrences in these blocks, assuming that all functional binding sites must be evolutionarily conserved. however, this assumption is not true even for as closely related species as d. melanogaster and d. pseudoobscura, separated by about 25– <dig> myrs. an empirical study  <cit>  on these two species revealed that a good fraction  of occurrences of relevant motifs occur outside of locally conserved contexts, and should therefore be taken into account when discovering motifs.

motif finding
in the probabilistic process that is assumed to generate sequences, the transition probability does not depend on the previous choice made during the process, meaning that the hmm is of zeroth order, nor on the position in the sequence, meaning that any information about spatial distribution of motifs is ignored. the model, unlike that of meme, does not fragment the sequence into all l-length words to be treated independently. rather, it parses the sequence into a series of non-overlapping occurrences of the motif and background.

the evolutionary model described by formula  <dig> applies only to phylogenies having a star topology. the general case of arbitrary tree topology is described in methods. in formula  <dig>  if μσ is small , then finding different bases in orthologous positions has low probability pre, even if their frequency in w is the same. this mirrors the intuition that mutations in locally conserved regions of closely related species are evidence against a binding site residing there. for largely diverged species , pre reduces to the product of the individual bases' probabilities. it is worth emphasizing here that the weight matrix w being searched by the algorithm is assumed to be unchanged over the entire phylogenetic tree .

the neutral mutation rates  along each branch of Ψ are input by the user and not trained during e-m. training them on input data may cause overfitting, producing values that are largely inconsistent with the known evolutionary distances. the work of moses et al.  <cit>  studies this issue, and finds that it is more important to use correct phylogenetic relationships, e.g., an appropriate evolutionary tree, than to use accurate mutation rates.

note that the evolutionary model used by phyme comes into play only in equations  <dig> as the term pre. other models of evolution, e.g., f <dig>  <cit> , can be incorporated into phyme by simply using the appropriate formulation of this term, as long as the derivatives of log pre can be computed efficiently.

CONCLUSIONS
we have developed a new algorithm, phyme, that detects motifs in heterogeneous sequence data by integrating two important aspects of a motif's significance – overrepresentation and cross-species comparison – into one probabilistic score. we have evaluated different aspects of the algorithm on synthetic data, and demonstrated on some biological data sets that the new approach improves motif detection.

