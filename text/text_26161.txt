BACKGROUND
gaps caused by insertion and deletion events  are often important features of dna sequence data, which is widely used in phylogenetic studies  <cit> . although some authors consider indels to be potentially misleading  <cit> , others consider indels to be important characters  <cit>  and have argued that treating them as missing data can weaken phylogenetic analyses  <cit> . even though it is generally accepted that indels that cannot be unambiguously positioned make confident homology assessment impossible and, therefore, regions that contain them should be excluded from phylogenetic analyses  <cit> , it has been proposed that even these regions are valuable if properly coded  <cit> .

phylogenetic estimation depends on accurate character homology assessment   <cit> , which is made more difficult by the presence of indels  <cit> . indel occurrence is context-dependent, and it has been repeatedly reported that indels tend to be found clustered into specific length-variable regions  <cit> . accurate assessment of these regions  is aided by comparison among many sequences from various taxonomic levels  <cit> .

sequence comparisons are complicated by the ambiguities gaps introduce into alignments. finding a target region recognized from one alignment within another can be time consuming and difficult to perform accurately. because of the limits of computer screen size and human analytical ability, alignments of hundreds of sequences are difficult to evaluate, even when they can be prepared.

poaceae is one of the largest families of flowering plants and is economically important  <cit> . lower-level phylogenies within the family often make use of the largely non-coding plastid sequence between the trnl  5' exon and trnf , hereafter called trnl-f  <cit> . as of apr  <dig>   <dig>  the ncbi entrez nucleotides database  <cit>  contained  <dig> poaceae trnl-f sequences. comparing indel regions across these sequences can reveal patterns in indel behavior and aid researchers in creating accurate alignments. a discussion of the indel regions in these sequences is being prepared separately for publication.

the program indeval was originally developed to help researchers find known indel regions  in newly determined poaceae trnl-f sequences and simultaneously compare them with  <dig> previously determined sequences . it is supplied with input files designed for this purpose. more broadly, the program is applicable for finding specific target regions  in dna sequence. a variable region is any specific sequence fragment of interest, such as an indel region, a codon or codons, or sequence coding for a particular rna secondary structure. the lpam algorithm, which was specifically designed for indeval, is used to find sequence  flanking the variable region in the analyzed sequence. indeval can find multiple variable regions simultaneously . the program's sensitivity to different levels of nucleotide and/or length variation in conserved regions can be adjusted.

implementation
input files
indeval uses three types of input files: one conserved region file, separate variable region files for each variable region, and a dna sequence file . the conserved region file contains a template of sequence immediately flanking the variable regions . a variable region file contains messages that indicate which permutation of the variable region is in the analyzed sequence. the sequence file contains a set of sequences to be analyzed with indeval. all files are plain text . conserved region and variable region files are in indeval-specific formats. detailed instructions for creating them are in the help files. the sequence file is in fasta-format.

a conserved region file contains at least one template, created by taking a representative sequence, removing the variable regions, and replacing them with variable region file names . multiple  templates were used in the poaceae trnl-f sequences to accommodate single, large deletions that spanned otherwise conserved regions. treating them the same as the other indels would have resulted in a few large, difficult-to-interpret variable regions. indeval performance is improved by designing templates with conserved regions at least  <dig> bases long on either side of each variable region. however, the program still functions using templates with only one conserved region, conserved regions only  <dig> bases long, and variable regions flanked by other variable regions . although indeval parameters can be adjusted to reflect different degrees of nucleotide and length variation in conserved regions, it is a good idea to use a representative sequence for template design, especially if some conserved regions are short. additional templates can be designed to accommodate distantly related taxa. .

a variable region file contains the sequence variations the researcher expects in the region and some output information about each variation . in the poaceae trnl-f files, the output information is the list of taxa with each variation. for coding sequence, the output information could be the amino acids for which the variations code. if the user is interested only in knowing if a particular variation is present, the output could be simply "yes". variants not found in the variable region file are also reported by indeval. the program works if the variable region file is completely blank , but it obviously cannot provide output messages in this case. symbols can be used in variable region sequence to draw attention to specific features of interest. they are ignored during alignment, but are displayed in the variable region sequence list box . the poaceae trnl-f variable region files include spacing that emphasizes repeat motifs, hyphens to indicate that an entire variable region has been deleted, and stars to indicate possible inversion sites. indeval can help the user create these input files, comparing new sequences to those already included and indicating what adjustments should be made.

sequence files are in a less stringent fasta-format  and can be in either orientation. they can include spaces, numbers, capital or small letters, iupac ambiguity symbols, and carriage returns without disrupting indeval function.

a conserved region file  and  <dig> variable region data files, designed from  <dig> poaceae trnl-f sequences, are provided with indeval. these files are based on the first author's critical examination  of various alignments of these sequences using the web-based programs blast  <dig> sequences  <cit>  and/or clustal w multiple alignments  <cit> .

aligning a sequence with a given template
indeval begins by sorting a template's conserved regions by length. it then searches for each conserved region in the analyzed sequence , proceeding from longest to shortest. found conserved regions are used to limit the search space for future searches .

sometimes conserved regions are not found or are found at multiple locations within their subsequence. the program records this information and proceeds to the next longest sequence. a conserved region that cannot be aligned is recorded as "not found." a conserved region with multiple possible alignments is recorded as "found", but none of its possible alignments is used to limit the searches for the remaining regions.

this template alignment algorithm preserves the ordering found in the template, giving priority to the alignment suggested by the longer conserved regions, which are assumed to be more reliable. using the alignment of longer regions to reduce the search space for smaller regions minimizes the probability of finding ambiguous or incorrect alignments.

length-preserving alignment method 
indeval uses the lpam algorithm, designed specifically for indeval and described here for the first time, to align the conserved regions within their subsequences. lpam divides a conserved region into overlapping "words", strings of sequence of a user-defined length. that is, given a 4-base word length, the sequence "caatgt" would be represented as "caat", "aatg", "atgt".  lpam searches the analyzed sequence for each of these words and notes multiple finds, single finds, and missing words. each word is allowed one "vote" for a possible alignment, i.e., for the base in the analyzed sequence that begins the conserved region. if the word occurs once, it casts its vote for that alignment. if it occurs multiple times, its vote is divided equally among the possibilities. words that are not found cast no vote. the alignment that receives the most votes is assumed to be the most probable.

lpam permits a  degree of length variation. a word's possible alignments are evaluated according to whether or not they agree with the most probable alignment for the region as a whole. suppose, for example, that the most probable ungapped conserved region alignment would begin at base  <dig>  if the tolerance is set to  <dig>  lpam will allow the first word to begin at any base from  <dig> to  <dig>  preferring the possibility closest to  <dig>  if the first word in the conserved region sequence has no acceptable alignment, lpam searches for the first word that does have an acceptable alignment. all bases preceding this first found word are aligned with no gaps. in the above example, if the first and second words are not found and the third word aligns beginning at base  <dig>  the first two bases of the conserved region will be aligned with bases  <dig> and  <dig> 

each subsequent base is aligned similarly. if the word it begins has no acceptable alignment, the base is aligned according to the previous acceptable word. if the word it begins has multiple acceptable alignments, the one closest to the previous alignment is chosen. note that the range of acceptable alignments remains constant; it is a function of the initial voting and does not depend on any of the choices made in aligning individual bases.

the aligned bases from the analyzed sequence are compared with the template conserved region sequence, and a percentage similarity is established. if this is greater than the user-defined cut-off value, the conserved region is listed as found.

indeval then checks the most probable alignment that clearly differs from the first.  if this alignment also yields a percentage similarity greater than the cut-off value, neither is selected, but the region is still considered to be "found" for purposes of measuring similarity to the template .

the lpam algorithm is able to align conserved regions despite both point mutations and indels. however, deletions in the first or last word of a conserved region are indistinguishable from point mutations . lpam proved effective in the poaceae trnl-f sequences, where conserved regions are by definition length-conserved. in  <dig> sequences, there were only three instances where an indistinguishable mismatch was caused by an indel instead of a point mutation and resulted in misalignment. it is important to design templates so that the ends of conserved regions are not in sequence prone to indel activity.

the alignment suggested by lpam is not necessarily locally maximal, i.e., there are cases where a slight adjustment of the alignment would produce a higher percentage of matched bases. furthermore, a number of factors can prevent lpam from finding a correct alignment. repetitive sequence, resulting in multiple matches, can be very problematic. indeval may not be appropriate for analyzing repetitive sequence, and if it is used for this purpose, templates must be designed with great care. if every word contains a point mutation, the conserved region cannot be found. indels can cause problems if they are dispersed so that several words are disrupted. in general, lpam will correctly align regions if the mutations are clustered and the first and last base can be assigned correctly . though hypothetical situations where lpam would create incorrect alignments are easy to envision, in practice, the algorithm proved able to reliably determine where the conserved regions of a sequence begin and end. this is sufficient for the purposes of indeval. it is important to note that even when lpam does not find a conserved region alignment, a possible alignment is displayed, and the user can rearrange it  and interpret it.

choosing the best template
once conserved regions have been found, indeval calculates a "found conserved region score" for each template. each matched conserved region is given a value equal to the number of bases in that region in the template , and these values are summed to give a score for the template. this prevents a template with a major deletion from being selected over a template with more matching conserved regions . templates with higher scores are ranked above those with lower scores .

if two templates have roughly equal found conserved region scores , the one with the higher "score percentage"  is ranked higher. this ensures that sequences that actually do have deletions will be matched with deletion templates, even though the templates  have an equal number of bases in found conserved regions .

all the templates are ranked in this way and listed in the template list box in order. the highest ranked template is automatically selected, and its variable regions are analyzed. the user has the option of comparing the sequence to a template other than the one selected by indeval.

finding the correct variable region sequence
each variable region is defined as the sequence between two specific conserved regions. if both flanking conserved regions are found, the bases between them are recorded, and the appropriate variable region file is searched for a matching string of bases.

sequence between two found conserved regions is classified as a confused region if the template indicates that it should contain one or more conserved regions that were not found. because the variable regions in a confused region are not clearly delimited, indeval searches the entire region for each variable region sequence in each applicable variable region file, and all potential matches are recorded. the user is able to select from among these possibilities, rearrange the display to reflect them, and study different sequence interpretations. in this manner, indeval is able to deal satisfactorily with most short conserved regions that cannot be found because of point mutations. in the poaceae trnl-f file, one- and two-base conserved regions were incorporated into adjacent variable region files because they were impossible to find.

a short conserved region will be misaligned if a point mutation prevents it from being found in the proper place and a perfect match is found nearby. if this occurs, it is possible to set the program to disregard conserved regions of this size. . the region can then be satisfactorily parsed using the confused region algorithm.

RESULTS
indeval has two output windows . the sequence analysis window displays the analyzed sequence broken into conserved and variable regions and lists template information. from this window, the user can load template and sequence files, export the analysis to a text file, set lpam parameters and warning message options, convert the sequence to its complement prior to analysis, and choose a template other than the one selected by indeval. for conserved regions, the template sequence is listed so that it can be compared directly with the analyzed sequence. for variable regions, if the analyzed sequence matches one of the variants in the variable region file, the message for that variant is displayed.

the variable region analysis window displays the variable region file name, variants proposed by indeval, and the sequence and length of the line currently selected in the sequence analysis window . the user can request displays of some or all of the sequences in the variable region file.

a text file can be created once the user is satisfied with the display in the sequence analysis window. this file gives information about the sequence and template, lists the positions of the various conserved and variable regions, and shows the entire analyzed sequence. the user can choose whether or not variable region file information is displayed.

indeval for the windows platform is available in additional file  <dig>  the source code for indeval in microsoft visual basic  <dig>  is available in additional file  <dig>  indeval analyzes only dna sequences, but a version for protein sequences could be created using the source code. it would have to be altered to recognize amino acid sequence , and an algorithm to recognize frame-shifts would be helpful.

CONCLUSIONS
indeval is a program designed to search dna sequence for target regions and to display information about them. it can find multiple target regions simultaneously and is relatively robust when challenged by conserved region variation and differences among analyzed sequences in length, spanned region, and format. indeval differs from other alignment software in that it breaks the analyzed sequence into user-defined units and emphasizes regions that are of most interest to the user. this makes it possible to quickly compare specific features among many hundreds of sequences. an advantage of indeval is that, while it can be used to quickly skim and classify hundreds of sequences, it displays all surrounding sequence. therefore, if at any time questions arise about the initial classification, the researcher can recreate the indeval alignment, instantly find the area in question, and study it for alternative explanations.

availability and requirements
project name: indeval

project home page: 

operating system: windows platform

programming language: microsoft visual basic  <dig> 

other requirements: none

license: none

any restrictions to use by non-academics: no restrictions

authors' contributions
sdsh planned and oversaw the project, collected the data, prepared the data files, tested the program, and wrote the documentation. jah suggested the project and designed, wrote, and debugged the program. both authors read and approved the final manuscript.

supplementary material
additional file 1
indeval  <dig>  installation version indeval is currently available for the windows platform. instructions for use can be found in the help files, which are included with the program and are accessible from the sequence analysis window. an installation version of indeval  <dig>  with accessory files can be obtained by clicking on the link below or by visiting . running the installation program installs  an indeval program directory that contains the indeval.exe file, the  <dig> indevalhelp.txt files, the indevaloptions.txt file, the indevalparams.txt  file, and a templates subdirectory containing templateptrnlf.txt and a vr subdirectory with  <dig> poaceae trnl-f variable region files. the program is archived using winzip®  <dig> . winzip is available from . the zipped package has  <dig>  mb.

click here for file

 additional file 2
annotated illustrations of indeval files and displays this file  is a 9-page pdf that contains annotated illustrations and explanations of indeval files and displays. the structure and format of the conserved region, variable region, sequence, and output files is illustrated. annotated screenshots of the sequence analysis window and variable region analysis window are also included. these illustrations, combined with the indeval help files, serve as the indeval manual.

click here for file

 additional file 3
indeval source code the source code for indeval in microsoft visual basic  <dig>  can be obtained by clicking on the link below or by visiting . the files are archived using winzip®  <dig> . the package  includes the  <dig> code files, the indeval icon and the bitmap from which it was constructed, and indevalsourcecodehelp.txt, a file with advice on orienting within the source code files.

click here for file

 acknowledgements
the authors wish to thank p bureš for helpful discussions and advice and three anonymous reviewers for constructive suggestions. this research was undertaken during the graduate studies of sdsh, supported by a us national science foundation graduate research fellowship, a us student fulbright grant, and an honor society of phi kappa phi fellowship, and was supported in part by the ministry of education of the czech republic frvŠ project 556-g <dig>  and research project msm  <dig> .

figures and tables
