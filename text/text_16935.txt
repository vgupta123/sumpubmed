BACKGROUND
other than the big well-funded institutionalized databases, few bioinformatics databases have longevity beyond several years. small databases are particularly vulnerable. valuable data and metadata become irretrievably lost leading to irreproducible scientific work and redundant effort  <cit> . this is unnecessary in view of the vast amount of affordable disk space and highly accessible cloud computing power in the market.

recently, in  <dig>  the asia pacific bioinformatics network , asia's oldest bioinformatics network and pioneer of the annual international conference on bioinformatics  now in its twelfth year, initiated the effort for minimum information about a bioinformatics investigation , building on earlier ideas  <cit> . the standards for transparency, provenance and scientific reproducibility amongst the bioinformatics and computational biology community were drafted and published a year later  <cit> . the miabi standards were harmonised with the biodbcore standards of the international society for biocuration  and biosharing for use of standardized terminologies for infrastructural and informational interoperability  <cit> .

in accordance to the miabi standards, "when databases are described in a publication, a copy should be frozen, version-labelled and dated for reference", herein, we detail a simple methodology for archival and re-instantiation of small databases. further, we provide a web interface to demonstrate this functionality, with several exemplar databases to illustrate the utility of the system.

methods
briefly, the re-instantiation system consists of a web portal and a cloud-based backend. the web interface allows download of the base live operating system for database developers to build a compressed version of their database, upload their database, boot up a cloud instance, activate database and access the various functionalities . the content of the uploaded databases are vetted for extraneous files or programs that might be malicious before they are allowed for instantiation. below we describe the different components of the re-instantiation system:

 bioslax. the bioslax  <dig>   live operating system has been developed on a slackware linux base distribution called slax , to which we have added additional modules, including more than  <dig> bioinformatics software applications. bioslax is freely downloadable and depositors of databases can choose to use it to develop their databases, or develop on another platform that can be ported to bioslax. upon boot-up, bioslax un-packs, loads and activates all modules, including mysql, apache and webmin servers. other services can also be loaded and activated by adding additional bioslax modules. further, other operating systems will be explored in the future.

 building databases as bioslax lzm modules. the bioslax command "dir2lzm" is used to convert database specific files, other dependencies and other application services into lzm compressed file as bioslax modules. alternatively, database depositors can port pre-existing databases built on other platforms onto bioslax, and save the difference as an lzm slax module file that includes everything changed from the base liveos. the slax "activate" command is used to unpack and uncompress all files and folders from the lzm file, and restart all relevant processes.

 web interface. a web interface has been set up as the portal for users to access the re-instantiation system . remote calls to the cloud server are made by public-private encryption key ssh secure login and remote execution of commands, called from cgi scripts written in bash and perl, with ssh, http perl modules.

 a database of meta-information on uploaded databases and the compressed lzm files. during the upload of the lzms, meta-information about the submitters are obtained, such as their research group, author identifier , and document/publication submission . this meta-information is searchable and end-users can re-instantiate databases identified from the search, where the relevant lzm will be copied into a booted instance of a bioslax os and activated dynamically via the web cgi call to the cloud server.

 xen hypervisor or vsphere. the cloud computing platform used is the popular open source full hardware virtualization software citrix xenserver, based on xen hypervisor or vmware, based on vsphere, based on vsphere that provide the ability to create, deploy and manage the virtual machines on the cloud. for demonstration, we have set-up five instances of bioslax virtual machines for remote booting on a private cloud that consists of  <dig> supermicro servers, each with dual intel xeon x <dig>  <dig>  ghz 6-core processors ,  <dig> gb of ram and  <dig>  tb of local storage. xen's built-in "xe" commands are utilised in the xenserver to poll halted bioslax instances, activate on demand or shut down when idle. a web interface for administrators to remotely start, stop or control virtual machine instances is provided . we currently assign a public internet protocol  address to each instance to enable external access to the databases.

RESULTS
we have successfully used our re-instantiable archival system for half a dozen extinct and extant databases . some databases were previously developed on non-bioslax platforms, but were ported to bioslax without difficulty. hardcoded hyperlinks and directory paths were made relative in order for the unpackaged files to work properly. mysql databases were compatible while other sql databases required a sql dump and recreation in mysql format. notably, none of the special sql function calls not supported by mysql were detected; otherwise, appropriate sql rdbms would have to be installed into bioslax as a separate lzm module when needed. many databases are accompanied by search functions such as blast or other computational features, which were supported by bioslax for the databases that we tested. where this is not the case, the relevant programs can be compiled and added to the database lzm modules and activated accordingly. the database re-instantiation time was rapid, within  <dig> to  <dig> minutes. all database functionalities tested worked as per the original.

extant
extinct
list of extant and extinct databases successfully archived for rapid re-instantiation by use of our cloud computing prototype platform 

CONCLUSIONS
database longevity is a chronic problem within the bioinformatics community. in this report, we demonstrate that a relatively inexpensive solution can be implemented for archival of bioinformatics databases and their rapid re-instantiation should the live databases disappear. organisations, such as the apbionet, can maintain such databases on a low-cost system using cloud computing for a long period. apbionet will use this re-instantiation platform for their future incob conference submissions, as part of its miabi compliance, as well as part of its larger effort in the biodb <dig> project  <cit> , to build  <dig> miabi-compliant interoperable databases.

list of abbreviations used
: asia pacific bioinformatics network; : international conference on bioinformatics; : minimum information about a bioinformatics investigation; : international society for biocuration.

competing interests
twt and amk are honorary directors of asia pacific bioinformatics network limited. the authors declare that they have no competing interests.

authors' contributions
twt conceived the study, participated in its design and coordination. mds and ksl implemented the prototype system. cx, cpkp, sjl, krg, jct, khc, sr and amk contributed one or more databases. amk, mds, ksl and twt drafted the manuscript. all authors read and approved the final manuscript.

