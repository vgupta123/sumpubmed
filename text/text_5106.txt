BACKGROUND
human microbiomes are the communities of microbial organisms that exist on and in our bodies, and are known to interact with our bodies in many ways. recent studies have linked features of the microbiome to human health including brain, heart, liver and gut health . it is thought that identifying and studying these features at both population and individual levels will provide insight into disease risk  <cit> . however, the complexity of the challenge is not small given that the number of distinct microbial cells are estimated to be about  <dig>  times larger than that of the human host  <cit> , and the gene content is perhaps an order of magnitude larger than that  <cit> . the majority of human microbiome studies have been taxonomic in nature, focusing on 16s rdna gene sequencing and analysis, which has been useful, but fails to get at the functional differences within and between species. the recent explosion in the ngs space, which has allowed for whole genome sequencing of microbial communities  <cit> , holds significant promise in this respect. unlike single organism studies, a comprehensive set of genomes from which to align is not available, and de novo assembly of sequence reads into contigs is required for functional level analysis. in this regards, the field is not yet fully developed - different studies researching the microbiome utilize different analysis pipelines with different assemblers . the assembler chosen has been shown to have an effect on the results obtained from the study  <cit> .

the assembler used affects the length and quality of the contigs generated from a ngs run, thus impacting the conclusions drawn about a microbial sample. it is therefore important to make an informed decision when choosing an assembler for a pipeline. as new assemblers become available, it is necessary to quantify assembler quality by benchmarking them against existing tools using a consistent but relevant set of metrics. furthermore, the samples used to benchmark these assemblers need to reflect the true complexity of a biological sample, including being defined enough to be quantifiable. different large data sets, such as the terrestrial sediment metagenomic dataset from sharon et al.  <cit> , and those derived from the nih roadmap human microbiome project   <cit> , have been used to benchmark the performance of assemblers. while these datasets may capture the true complexity of a human microbiome, measuring the performance and specific strengths of metagenomic assemblers on these datasets is still a challenge, as the true genomic content of these samples is not known  <cit> . to circumvent this problem and evaluate the various aspects of assemblers more closely, we utilized communities of species with known reference genomes in known abundances. despite the reduced complexity of these datasets when compared to most human microbiome samples, the ability to precisely test different challenges an assembler may face allows for a more in-depth analysis of each metagenomic assembler, ultimately allowing for an unbiased selection that is dependent on the task at hand.

to determine the quality of metagenomic assemblies, the microbiome community often looks at  <dig>  metrics focused on the nucleotide contigs created by the assembler: the mean size of the contigs in the assembly, the size of the largest contig in the assembly, the number of misassemblies created by the assembler, and the length of contig, x, where the total length of all contigs of length ≥ x is greater than or equal to half of the total assembly size  . these metrics give a good basis for determining the assembler’s ability to join low coverage points of the genome, as well an understanding of the assembler’s ability to distinguish between similar regions across different genomes within the metagenomic set. they fail, however, to address questions of functionality, such as the number of correctly reconstructed orfs versus the number of de novo orfs.

the tool at the forefront of measuring assembler efficacy against the previous metrics is metaquast  <cit> . however, most metagenomic data sets that assemblers have been measured against via metaquast contain microbial communities that are either complex and unknown, such as the hmp  <cit> , or known but contain only a handful of species  <cit> . the larger data sets, while accurately mimicking the human microbiome, convolutes the challenges facing the assembler, and the smaller data sets do not contain enough diversity to challenge the assembler. in this study, we utilize the metaquast tool to evaluate assemblies for multiple medium sized, complex, known real and synthetic communities. each community is designed to evaluate a different challenge a metagenomic assembler may face .fig.  <dig> ngs reads from three different types of communities—the “balanced” community comprised of  <dig> unique strains of bacteria on the same order of abundance, a “staggered” community of the same  <dig> unique strains of bacteria with highly variable abundances, and single species communities comprised of  <dig> unique strains of a single species—were given as input to five different metagenomic assemblers: omega, metavelvet, megahit, metaspades and idba-ud. each assembler created contigs from the reads. by comparing the contigs generated, the orfs called from the contigs, and the abundances of the orfs and species, three different challenges metagenomic assemblers face were tested specifically. the results from these precise comparisons allows for a directed selection of assembler when completing a specific research goal




as metagenomic assembly is still a work in progress, there are a plethora of metagenomic assemblers to test utilizing various algorithmic and computational approaches; the omega  <cit>  assembler utilizes overlap graphs, whereas megahit  <cit> , idba-ud  <cit> , metaspades  <cit> , metavelvet  <cit> , soapdenovo <dig>  <cit> , and raymeta  <cit>  are de bruijn graph based. furthermore, raymeta is implemented using mpi, while other approaches run on standalone linux system. in recent years, de bruijn graph based assemblers have been successfully used to assembly next generation short reads. we picked five of the available assemblers to compare as follows: megahit was chosen as it is the successor to soapdenovo <dig> , which is used by the recently developed and popular mocat <dig> pipeline  <cit> ; metaspades as it was released recently and had self-reported strong performance; idba-ud due to its strong performance as noted by nurk et. al  <cit> ; metavelvet, due to its reported accuracy on low abundance species; and omega as it is an overlap graph based assembler.

we utilized the bei resources microbial mock community . this community of microbes is comprised of  <dig> different species with known, diverse, reference genomes. bei created two separate datasets using this community; the previously published mock balanced community  <cit> , and the newly presented mock staggered community, which is a community comprised of the same microbes present in the bei mock community, but at different relative abundances .

we also tested each assembler against a synthetic community comprised of multiple different strains of  <dig> different species: escherichia coli, a highly sequenced organism with an open pan-genome; staphylococcus aureus, a highly sequenced organism with a closed pan-genome; bacillus fragilis, a largely benign microbe found in the gut with opportunistic pathogen potential; and peptoclostridium difficile, a commonly found gut microbe with serious pathogenic potential. while it is expected that all assemblers will perform much worse with these communities, it is important to understand the ability of assemblers to create contigs unique to each strain. by comparing the efficacy of the assemblers within both of these frameworks, we are able to determine the assemblers that are strong at finding accurate contigs between and within species, as well as those that can create accurate contigs for low abundance species.

finally, we evaluate the differences of the functional predictions from each metagenomic assembler by comparing the orfs found in the assembly against the orfs in the reference genome. as the microbes within a metagenomic ecosystem interact through the metabolites they consume and produce, functional abundance prediction has been suggested as an accurate indicator of health that is modulated by the microbiome  <cit> . by examining the effects each assembler has on nucleotide similarity via orf similarity and abundance prediction for each community, we are able to gain a refined understanding into the choice of metagenomic assembler.

methods
mock community dna
the following reagent was obtained through bei resources, niaid, nih as part of the human microbiome project: genomic dna from microbial mock community b , v <dig>  l, for 16s rrna gene sequencing, hm-783d.

mock communities
for the analysis of the bei balanced mock community, we utilized the data previously generated as described in our previous study  <cit> . similarly, the dna for staggered mock communities were generated as described with input concentrations of dna per organism are as found in additional file 1: table s <dig>  library preparation and sequencing were done utilizing the sample protocol as described in the same paper  <cit> .

synthetic communities
ten strains of each of staphylococcus aureus, bacillus fragilis and peptoclostridium difficile, were arbitrarily chosen and the verified unique reference genome sequences for the strain were pooled into a single reference file per species.

read simulation
reads were simulated for the single species communities via wgsim . the community was simulated at a uniform coverage per strain determined by the length of the strain’s genome. otherwise, the − <dig>  <dig>  − <dig>  <dig> and -d  <dig> flags were set.

genomes used in simulations
the full genome sequences for read simulation were downloaded from ncbi. a full list of strain taxonomy identifiers and accession numbers for all organisms can be found in additional file 1: table s <dig> 

assembly
prior to assembly, raw paired end reads were filtered using trimmomatic  <cit>  . this trims the reads using a sliding window of size of  <dig> with average quality score < <dig>  after trimming, if either read r <dig> or r <dig> is shorter than  <dig> bases, the whole read pair is considered low quality and is removed from further analysis. after applying sequence quality filters, the balanced and staggered mock communities had  <dig> , <dig> and  <dig> , <dig> high quality paired end reads, respectively, that were used as inputs for all the assemblers. each dataset was assembled using: metaspades version  <dig> . <dig> with default parameters except for –meta and --only-assembler. the choice of kmer was managed by metaspades program; it creates graphs with  <dig> different kmer lengths. idba-ud  <dig> . <dig> was run with --mink =  <dig> --maxk =  <dig> --step =  <dig>  and --min_contig =  <dig>  the choice of kmer of 50– <dig> with step  <dig> for idba-ud is based on our previous analysis that reached optimal performance. after sequence quality filtering and trimming, reads of at least  <dig> bases were kept. we thus did not use a kmer of  <dig> or longer. shorter kmers , were not used as they performed much worse than the longer kmers. megahit <dig> . <dig> was run via “--presets meta”, as the program manual suggested. megahit also automatically uses multiple kmers in graph construction. the metavelvet  <dig> . <dig> pipeline was first running velveth  <dig> -fasta -shortpaired, then velvetg -exp_cov auto -ins_length 300; and finally meta-velvetg -ins_length  <dig> in standard, non-sl mode, installed with maxkmerlength =  <dig>  as the velvet pipeline suggested this maxkmerlength when run with default parameters. omega was run with -l  <dig> as suggested for our insert size by the omega manual.

assembled reads estimation
not all programs used for analysis reported the number of assembled reads. we thus estimate the number of assembled reads by aligning the reads to the contigs of each assembler via bwa  <cit>  mem with default parameters.

orf calling
to find the orfs present on each contig, the program metagene  <cit>  was used with default parameters on the contig set generated from each assembler.

orf clustering
to determine reference/aberrant orfs, cd-hit  <cit>  was used with -c  <dig>  -n  <dig> -m  <dig> -d  <dig> and -t  <dig> to cluster the combined set of orfs from contigs and orfs from reference genomes. clusters of reference-only orfs were called missing, and clusters of contig-only orfs were called aberrant. the contig orfs in the remaining clusters with reference orfs are considered correct orfs.

aligning reads to contigs
to align the reads to the generated contigs, bwa mem was used with default settings. the output sam file was subsequently filtered to keep only the top hit  for each read.

abundance prediction
reads were assembled into contigs as described above from which orfs were then predicted using metagene as described above. similarly, orfs were predicted from the known references for the real samples. the combined set of orfs were clustered with cd-hit as described above. all clusters containing a single reference orf were kept. the original reads were aligned to the contigs and samtools mpileup was then run to find the number of bases at each position for each contig. the abundance for each organism is then calculated as the average coverage for each orf that was in a cluster containing a reference orf for that organism.

RESULTS
a majority of microbial communities are heterogeneous in composition as well as abundance. failure to accurately reconstruct the genomes of low abundance organisms within the community is of concern as these errors could miss critical functions that pertain to the disease and health of the community or host. to assess the ability of assemblers to recover low abundance species, we contrast the performance of each assembler on balanced and staggered communities with the same organisms. the major performance indicators, including largest contig, number of misassemblies, fraction of genome coverage, number of contigs and n <dig>  are highlighted in tables  <dig> and  <dig> and are discussed in the following paragraphs.table  <dig> statistics from assembly of the mock balanced community





balanced community
within the balanced community, omega was able to assemble the largest contig, followed by metaspades, idba-ud, megahit and finally metavelvet . the total length of all assemblies from the balanced community were within 1 mb of the same size of one another , though metavelvet assembles more contigs to reach its total assembly length. furthermore, the n <dig> for metaspades is noticeably  larger than those from omega, idba-ud and megahit, all of which are also 40–60 kb larger than metavelvet . however, when examining the number of misassemblies created by each assembler, the pattern is reversed—metavelvet has the least number of misassemblies, followed by megahit, idba-ud, metaspades and finally omega , though omega makes 5– <dig> fold more errors than any of the other assemblers. metaquast reports the percent of the reference genome  covered from the concatenated genomes of all reference organisms in the mock community. for this metric, we see a third pattern—megahit covers the most, then metaspades, then idba-ud, then omega and finally metavelvet, though all are within  <dig> percentage points of one another . all assemblers were estimated to utilize at least  <dig> % of input reads during assembly, in concordance with their near complete prg.fig.  <dig> assembler performance was measured in both communities by  largest contig. contigs were ranked by length and are plotted against cumulative length of assembly for balanced  and staggered .   furthermore, assembly performance was measured in both communities by  the number of misassemblies and  prg assembled. dashed lines represent the contig number of the n <dig>  with n <dig> occurring at the intersection of the curve and it’s dashed line





staggered community
when examining the staggered community, the differences in the largest contig size from metaspades, idba-ud and megahit remains quite small—omega has a greater largest contig size, and metavelvet has a much smaller largest contig size . the total length of the assemblies, however, are quite different . metaspades covers the most number of bases, followed by megahit, then idba-ud, then omega and finally metavelvet. the n50s of the staggered community are also different from the balanced community, with metavelvet and omega almost 10 kb larger than metaspades, followed by megahit and finally idba-ud . it is important to note that while the n <dig> is much larger for metavelvet and omega, the number of bases in the assemblies are much smaller than the others. metaspades, idba-ud and megahit assembled over  <dig> % of the input reads, omega assembled  <dig> % of the input reads, and metavelvet assembled  <dig> % of the input reads. as most reads in the staggered community are from high abundance, and thus well assembled, organisms, it is anticipated that a high fraction of reads are assembled. it is important to note, however, that two assemblers can assemble the same number of reads, yet capture organisms at different abundances, as one assembler could utilize a large quantity of reads from high abundance organisms, and another could utilize a large quantity reads from low abundance organisms. the difference in assembler performance is thus better compared through the prg of each assembly: metaspades covers the most, followed by megahit, idba-ud, omega and finally metavelvet . the differences in prg are concordant with with the abundance of the species within the staggered community. furthermore, there is a large difference between the number of misassemblies from each assembler, perhaps due to the large disparity in the number of bases covered by metavelvet versus the other assemblers, and the difference in assembly graph traversal approach in omega: metavelvet has the least with  <dig>  followed by metaspades at  <dig>  idba-ud at  <dig>  megahit at  <dig> and omega at  <dig> .

synthetic communities
to determine the efficacy of each assembler to accurately reconstruct strains, we simulated four unique balanced communities of multiple strains from the same species. we did not include omega in further analyses due to the larger error rate in both mock communities, and small prg from the staggered community . for three of the four single species communities, metaspades has the largest contig , and for the b. fragilis community, metaspades, idba-ud and megahit all have similar largest contig sizes . megahit has the largest assembly for each community, closely followed by metaspades and idba-ud . metaspades has a much larger n <dig> than the other assemblers for the communities . the number of misassemblies per community is close across assemblers, except for e. coli reads assembled with idba-ud, which has four fold more misassemblies as the next greatest assembler, metaspades . finally, the genomic fraction covered by each assembly is much smaller than that of the mock community, which is between  <dig> and 80% smaller depending on the assembler and the community. megahit has the most for three of the four communities, and is on par with metavelvet for the p. difficile community. however, metavelvet either had the lowest prg, or was within 3% of the next lowest prg, for the other three communities .fig.  <dig> assembler performance measured by a largest contig, b total assembly size in megabases, c n <dig>  d number of misassemblies and e prg shown for each assembler on simulated microbial communities from  <dig> strains of b. fragilis, s. aureus, e. coli and p. difficil




orf prediction
the contigs generated by assemblers may not accurately recapitulate the orfs from the reference genome, either by missing orfs or creating novel incorrect  orfs. within the balanced community, all assemblers are able to recall over 99% of the orfs from the reference set, however, the assemblers have differing levels of aberrant orf calls, with metavelvet having the most followed by idba-ud, and megahit and metaspades having roughly the same . the staggered community, however, is extremely variable between the different assemblers. metaspades has the least amount of missing orfs, and metavelvet has an extremely high number of missing orfs, whereas metavelvet has the least number of aberrant orfs and metaspades has the most .fig.  <dig> percent of orfs present in the joint reference but missing from the assembly  vs percent of orfs present in the contigs but missing from the reference set  for the bei mock communities  and the single species communities . an even trade off would be visualized as  a linear shift across the assemblers. a decrease in missing orfs is usually paired with an increase in aberrant orfs, with a larger magnitude of change in the number of aberrant orfs. points in the single species community cluster more closely by species  than by assembler , indicating that the similarity in the sequences being assembled play a larger role in misassemblies than the assemblers themselves—general patterns within assemblers are still present




the single species communities cause a high level of variance in the performance of the various assemblers. for the e. coli and p. difficile communities, idba-ud and metavelvet predict a far larger number of aberrant orfs than either megahit or metaspades . however, megahit and metaspades both have a larger number of missing reference orfs than metavelvet or idba-ud. in the s. aureus community, idba-ud has over double the number of aberrant orf than the other assemblers, whereas other metrics are close to one another . finally, in the b. fragilis community, idba-ud has the least number of aberrant orfs, but the relative difference between the best and worst assembler is much less than in the other communities .

it is difficult to examine the accuracy of the abundance of each orf in the community due to the diversity of proteins in the community, and the difficulty of measuring individual protein concentrations. thus, as a proxy for accuracy of orf abundances, we examined the concordance of species abundances from reads mapping to the reference with species abundances from orf abundances. all assemblers have similar estimates and the same coefficient of determination  for the abundances of microbes within the balanced community . staggered abundance prediction, however, varies, with metaspades having the strongest cod  with the true relative abundances, followed by megahit , idba-ud , and finally metavelvet  . it is important to note that the number of orfs found for some species is much lower in comparison to metaspades. idba-ud and megahit both only found a single orf from one low abundance species, whereas metaspades has no singleton species. furthermore, idba-ud and megahit both miss one species in their abundance estimates, and metavelvet misses  <dig> more in addition to the aforementioned  <dig> fig.  <dig> concordance of species coverage predicted by reads  with species coverage predicted by orfs  and concordance of total missing orfs with abundance of species  for the staggered community for each assembler. both sets of graphs are plotted on natural log vs natural log scales. for regression between coverages, mean values were used—violins of the orf coverage distributions are shown surrounding each point




discussion
the quality of a metagenomic assembly is assessed by its similarity to the reference set at either the nucleotide or protein level. as metagenomic assemblies often contain multiple contigs for the same reference, unique sets of nucleotide level contigs do not necessarily contain the same protein information, as orf prediction can be disrupted at the edges of a contig. we thus aim to assess the assemblers in both contexts, as different metagenomics experiments may desire accuracy for different information.

the real mock communities were utilized to test the ability of an assembler to find low abundance species, while having an equal abundance community present as a control. species missing from both communities do not necessarily indicate a difficulty in estimating the abundance of scarce organisms, but rather a difficulty in assembling the sequence for the species.

within the balanced community, all assemblers covered a similar number of bases and prg. however, while omega, metaspades and idba-ud had much larger longest contigs, megahit has the most stable contig size, evidenced by its n <dig> almost equaling its largest contig, and large linear range . while there is no clear choice for the best assembler for nucleotide level information for the balanced community as metavelvet had a much lower number of misassemblies than the other community despite having lower scores in the other metrics , omega makes 5– <dig> fold more errors than the other assemblers, making its output uninformative.

to understand the ability of each assembler to identify low abundance organisms, we compared the staggered community performance to the balanced community performance. when shifting from assembling the balanced community to the staggered community, metaspades has a comparable number of misassemblies , a 600 kb shorter longest contig , 20 m less bases in its assembly  and 30% less prg . idba-ud also had a performance drop when used on the staggered community, though it was less of a drop than metaspades; idba-ud’s longest contig fell by 400 kb , but had a larger increase in misassemblies than metaspades . in comparison to idba-ud, metaspades appears to capture longer and more accurate nucleotide level information. it is also important to note that megahit has a large prg  despite its short longest contig and smaller n <dig> than metaspades.

in the balanced communities, megahit and metavelvet both have shorter longest contigs than metaspades and idba-ud , but cover a comparable number of nucleotides in their assemblies . the shift to assembling a staggered community causes megahit to make the second most misassemblies of all assemblers tested . however, megahit’s prg is similar to that of metaspades . despite metavelvet having the smallest contigs, its n <dig> remains unchanged by the staggered community . by examining the correlation of prg with true species abundance, we are able to see that metaspades and megahit are capturing species across all abundances, while idba-ud misses a few at low abundance.

metavelvet, on the other hand, has a lower prg yet detects species in low abundance well , indicating that it is missing information from abundant species. the number of misassemblies for metavelvet decreases when shifting to the staggered community as well. there are two possible explanations: metavelvet is skipping lowly abundant species, thus not capturing their sequence and reproducing the same errors as in the balanced community; or metavelvet is missing the low-abundant species and thus not incorporating them into chimeric contigs, thereby both missing some sequence data and skipping chimeric contigs as compared to the balanced community. regardless of the cause, metavelvet captures the most accurate nucleotide level information for scarce species, albeit in small chunks. a tool that combines both metavelvet and metaspades may result in the longest and most accurate contigs for low-abundant species.

in a separate pattern from the other four assemblers, omega has the largest longest contig size in both the balanced to the staggered communities , yet a prg in-between that of metavelvet and the other assemblers . furthermore, the number of misassemblies in omega remains far above  the others in both the balanced and staggered communities . the low prg combined with the high number of missassemblies, large contig size and large size of misassembled contigs  indicates that omega is potentially over scaffolding, similar to metaspades, yet only capturing a small amount of the population, similar to metavelvet. this combination indicates that omega captures a small, yet highly erroneous, portion of the community. the high number of errors may be due to the overlap graph approach of omega.

to understand how well assemblers can delineate strains of the same species, synthetic communities of multiple strains from the same species of microbes in balanced abundance were simulated. unsurprisingly, the assemblers did not perform as well on these communities than the previous mock communities . while metaspades continued to have the largest contigs and n <dig>  megahit consistently had the largest assembly size and largest prg. the number of misassemblies appears to depend more on the species being assembled than the assembler being used since the number of misassemblies per community is close across assemblers, except for e. coli with idba-ud, which created  <dig> times as many misassemblies as metaspades. thus, megahit is an excellent choice for recovering the different serotypes within a microbial community. megahit, for example, would be ideal for detecting a particular pathogen in a community of similar but non-pathogenic species.

to evaluate the effect of the breakpoints between contigs generated by the assemblers on protein abundance prediction, we used metagene to call orfs from assembled contigs. the only reads used for assembly were those that came from the reference genome, therefore, only two types of orfs can be predicted by metagene: 1) orfs from the reference data set that were assembled correctly; or 2) aberrant orfs, which are not present in the reference. these orfs are the only possibilities as it is not possible for an orf that is absent from the reference to be a novel and correct orf since the bei mock community is comprised of organisms with known complete references, and the single species communities were simulated data sets.

in the balanced community, the assemblers can recapitulate over 99% of the reference orfs, and only vary by 1% for aberrant orfs; the staggered community, however, has a larger disparity . overall, as points shift to the right on the x-axis, they also shift down the y-axis, indicating a relationship between the number of aberrant orfs and the number of missed reference orfs. the increase in the number of aberrant orfs, however, is much larger than the number of missing reference orfs.

while metavelvet creates accurate contigs , the number of breakpoints within the contigs causes a large loss of reference orfs from the data set. metavelvet does, however, creates the smallest number of aberrant orfs. metaspades has the least number of missing reference orfs, and the most number of aberrant orfs. this relationship is complementary to our previous notion that metavelvet, while having a much smaller amount of the metagenomic data set covered by its contigs, has a much higher quality in the assembly for low-abundant microbes. similarly, metaspades, while capturing the most information, is highly prone to making mistake in low abundance organisms during its scaffolding process.

the trade-off of a larger change in the number of aberrant orfs created than the number of reference orfs found is apparent in the single species communities as well , though the ordering of accuracy within assemblers is shifted. notably, the organism being assembled has a much larger role in the capability of an assembler to accurately assemble orfs than the assembler itself. despite the large role species plays in assembler accuracy across all communities, metaspades consistently misses the largest number of orfs from the reference, and metavelvet captures the highest number of orfs from the reference. idba-ud had a large change depending on the community, having the lowest number of aberrant orfs for b. fragilis, but the largest by a wide margin for s. aureus. over all communities, megahit is consistently in the middle or the lowest, furthering its prowess for strongly related community assembly.

we also assessed how sensitive each assembler was to the relative abundance of the organisms present in its ability to successfully reconstruct the expected orfs. this analysis was done by comparing the relative abundance of each species relative to the absolute number of missing orfs from that species for each assembler . metaspades is the most linear with its drop in performance with low abundant species, whereas megahit and idba-ud both have a large, quick drop at mid abundance. metavelvet has a bimodal distribution, with a large number of missing orfs at low abundance, and then almost no missing orfs at high abundance. these results further metaspades as a strong choice for orf prediction in diverse communities where important functions might only be found at low abundances, while also suggesting that metavelvet might be appropriate for orf prediction in the case where one favors accurate information for the most prevalent functions in the community.

finally, some efforts have examined functional capabilities of a community as a whole. it is extremely difficulty and infeasible, however, to accurately measure a community’s protein abundances for orf abundance comparison. we thus used a proxy to measure how each assembler distorts the true abundances of orfs. to do so, we used the concordance of species coverage measured by mapping reads to the joint reference genomes with the average coverage of orfs called by the assembler for each species. all assemblers recapitulate the mock balanced community to relatively the same abundances, with identical cods . we expect this similarity due to the similarity between all previous metrics examined for the balanced community.

there is a small difference, however, between an assembler’s ability to determine the relative abundances of species within the staggered community. this difference mirrors the ability of each assembler to recreate reference orfs. metaspades is able to most accurately reproduce the relative abundances compared to idba-ud, megahit or metavelvet . though the difference in the cod is quite small for metaspades, idba-ud and megahit, metaspades has more normally distributed orf coverage profiles at the lower abundances than idba-ud and megahit, indicating it is finds a more consistent abundance across the orfs it reassembles. furthermore, it misses no species, while megahit and idba-ud each miss one, and only call a single orf for another .

CONCLUSIONS
depending on the metagenomic task, different assemblers should be chosen. prior knowledge about the diversity and relative abundances of the data set allows for an informed choice of assembler. within low abundance environments, metavelvet makes the smallest assemblies, but has a very small number of misassemblies within those contigs. metaspades has the highest number of misassemblies, but creates the longest contigs. because of this, metaspades is an excellent choice for determining orfs within a metagenomic sample.

within communities with similar microbes, megahit does an excellent job of reconstructing different contigs from the set. furthermore, it does well at recreating the functional abundance profile of a community. idba-ud, while not leading in any category, does not preform the worst in any category, lending itself as a great metagenomic assembler for nucleotide level information when prior information about the community is not known. future algorithms that combine the results from multiple assemblers could provide higher quality and longer contigs by preferring sequences generated by metavelvet, and incorporating them into the calls by metaspades or megahit depending on diversity and abundance of the microbes within the target metagenomic ecosystem. as metavelvet captures highly accurate information, revising the matching contigs or parts of scaffolds from metaspades and megahit to match metavelvet may help resolve some misassemblies created. a simple default to the metavelvet contigs for similar sequences may not be complex enough to capture the diversity and low abundance species that metaspades, megahit and idba-ud find, however. a tool which creates a consensus assembly from the combination of metavelvet and either megahit or metaspades may prove to find the most accurate information.

additional files

additional file 1: table s <dig>  species abundance in mock staggered community. table s <dig>  dna concentration in mock staggered community. table s <dig>  tax id and accession numbers for all organisms in mock or synthetic communities. table s <dig>  metaquast output from mock balanced community. table s <dig>  metaquast output from mock staggered community. 

 
additional file 2: 
figure s <dig>  concordance of species coverage predicted by reads  with species coverage predicted by orfs   and concordance of total missing orfs  with abundance of species  for the balanced community for each assembler. both sets of graphs are plotted on natural log vs natural log scales. for regression between coverages, mean values were used—violins of the orf coverage distributions are shown surrounding each point. 

 


abbreviations
codcoefficient of determination

hmphuman microbiome project

mbmegabase

ngsnext generation sequencing

nihnational institutes of health

orfopen reading frame

prgpercent of reference genome

