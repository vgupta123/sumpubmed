BACKGROUND
phylogenies reconstructed from dna data are usually depicted as hierarchical, bifurcating trees, but such trees are inappropriate when intraspecific phylogenies are studied because recombination between taxa, the persistence of ancestral alleles and the presence of multiple descendents from single ancestors give rise to a reticulated and multifurcating pattern of relationships  <cit> . networks rather than hierarchical trees are therefore more suitable for studying intraspecific relationships  <cit> . two main types of network have been used: true phylogenetic networks which aim to reconstruct the phylogenetic history of a set of sequences, and within which nodes represent ancestral sequences and edges represent evolutionary events; and character-display networks which display all conflict within the dataset, nodes not necessarily representing ancestral sequences and some edges not corresponding to true events  <cit> . to construct a true phylogenetic network the dataset must be relatively small and reticulations must be rare, and often a number of networks must be evaluated to identify the optimal one. character-display methods are therefore more popular, especially when combined with pruning methods that reduce the number of nodes and edges, giving a topology that approximates with a phylogenetic network.

various character-display methods have been used to study intraspecific phylogenies, including reticulated networks  <cit> , statistical parsimony  <cit> , split decomposition  <cit> , median-joining networks  <cit>  and neighbor-net  <cit> , but median networks  <cit>  are the most effective at displaying conflicts in the evolutionary histories of sequences while preserving the relative distances between sequences within the network. a median network or buneman graph  <cit>  is a network containing nodes representing binary strings and edges connecting those nodes whose strings differ by a single character. the network identifies possible ancestral sequences, depicts reticulations indicating recombination or homoplasy, and contains all the most parsimonious trees connecting the sequences from the initial alignment  <cit> . when median networks are constructed from dna sequence alignments  <cit> , the sequences are converted into n binary vectors of length k, n being the number of unique sequences in the alignment and k the number of unique binary positions. constant positions are discarded and positions displaying more than two characters are either converted into sets of binary characters  <cit>  or removed from the analysis  <cit> , identical columns being pooled to generate a set of unique positions. the network can be thought of as being embedded in a k-dimensional hypercube with nodes representing sequences located at the hypercube's vertices. two sequences are joined if they differ by one character. to achieve a connected graph, medians are generated that represent missing intermediates between observed sequences. the hypothetical median sequences may correspond to extinct ancestral sequences or existing sequences not sampled in the dataset; their nodes are called latent vertices  <cit> . one mechanism to generate the median network takes triplets of binary sequences, the majority character state at each position being chosen to generate the sequence which connects the three most parsimoniously. this procedure is repeated for all triplets of sequences, including newly generated medians, until no new median sequences are made; the resulting network is called the median closure.

a quasi-median network is the generalisation of a median network where characters can have more than two states. dna sequences have five possible character states at any given position â€“ a, t, g, c or indel . a dna sequence alignment where only two bases are observed at each position  can be represented as a string of binary characters; for these sequences the quasi-median network would coincide with the median network and could be embedded within the vertices of a hypercube. for alignments with more than two bases at any given position , the network can contain complete graphs kn, where n represents the number of character states observed at a given position. therefore quasi-median networks containing multistate characters cannot be embedded in the vertices of a hypercube. various approaches have been used to generate median networks for alignments containing multistate characters. these include discarding multistate characters  <cit> , which is unsatisfactory because phylogenetic information contained within the multistate positions is lost, and a generalisation of median networks called the relation graph  <cit> , which allows incorporation of multistate characters but which does not always give the quasi-median network and is not necessarily connected  <cit> . a third possibility is to convert the multistate characters into sets of binary characters by generating one character to represent the transversion  and one or two additional characters to represent transitions   <cit> . the limitation with this approach is that the choice of character ordering is arbitrary: for example, a multistate position comprising a, c and t could be represented as a transversion between a and t with a transition from t to c, or a transversion between a to c and a transition from c to t. in this way the conversion of a to t can require one event or two depending on which ordering of events is chosen. the difficulties with these approaches might not be significant when a small number of closely related sequences is studied, but multistate characters become more common when larger numbers of sequences are aligned and/or more diverse sequences are compared.

an additional problem with median networks is the complexity of the topology that is obtained if there is extensive incompatibility between characters. two characters are said to be incompatible if all combinations of the binary character states exist within the alignment; for example, if the states are '0' and '1' then any observations of '00', '01', '10' and '11' will result in a reticulation within the network. if no pairs of characters are incompatible the median network will be a tree, increasing numbers of incompatible states will introduce increasing numbers of reticulations. if all character pairs are incompatible then the median network constructed from sequences of length n will contain 2n nodes and will be an n-dimensional hypercube. in the case of quasi-median networks, multistate characters also introduce reticulations. pairs of characters are said to be strongly compatible where for a given pair of characters, there exists a pair of character states such that no sequence is observed which does not match one of these states. where pairs of characters are not strongly compatible the quasi-median network will contain all possible combinations of character states for these columns  <cit> . hence the quasi-median closure for small sets of sequences with many character pairs which are not strongly compatible can contain large numbers of latent vertices and be too dense to visualize effectively.

simplification of network topology can be achieved by graph reduction, in which certain characters are converted into sets of characters to reduce the number of incompatible states within the alignment, based upon how many sequences contain that character state  and how often a character is observed   <cit> . the reduction is based on coalescent theory and as such is not suitable for datasets in which recombination has occurred: whilst conversion of incompatible characters into sets of characters is acceptable when incompatibility has arisen because of homoplasy, recombination produces reticulations which should be retained if the network is to give a true indication of evolutionary relationships between sequences.

a second reduction method has been devised in which pruning of latent vertices is based on the properties of tuples of characters  <cit> . for an unobserved median to be retained, for any k-tuple of positions in its sequence there must be either a non-median sequence which matches all k positions or no non-median sequence which fails to match all of the k positions. when k =  <dig> this criterion merely defines a binary median sequence, in order for a sequence to be a median every pair of positions within it must have been observed in a real sequence. when k =  <dig> .n, median sequences which contain certain k-tuple differences are removed from the network  <cit> . for quasi-median networks the inclusion of multistate characters results in vertices within the quasi-median closure which may fail to satisfy the necessary criteria when k =  <dig>  it is suggested  <cit>  that the relation graph represents the graph produced by this pruning mechanism  <cit>  extended for use with quasi-median networks. these papers, however, do not outline an approach which could readily be employed to generate relation graphs for a set of sequences.

both pruned median networks and the relation graph can have disconnected components where disconnectedness implies evolutionary distance  <cit> . a disadvantage of disconnected components is the absence of information indicating how they were once related as it is not possible to identify from which region of the full network nodes were deleted to produce the subgraphs. for small datasets, the unpruned network can be displayed for comparison, but for larger networks computational limitations may prevent visualisation of the unpruned graph. the resulting loss of information can make it impossible to identify relationships between more distantly related sequences.

this paper addresses the problems inherent in construction and reduction of quasi-median networks. we describe a novel method of generating quasi-median networks that uses all characters, both binary and multistate, without imposing an arbitrary ordering of the multistate partitions. we also describe a pruning mechanism which maintains at least one shortest path  between observed sequences, displaying the underlying relations between all pairs of sequences while maintaining a connected graph.

RESULTS
quasi-median network construction using the virtual median
here we present a novel approach to generate quasi-median networks for a set of aligned dna sequences. this method incorporates multistate characters by inferring virtual medians to connect them. the median closure of the sequences with virtual medians is determined, after which the virtual medians are converted to multistate characters generating the quasi-median closure . the process is outlined in detail below.

given a multiple sequence alignment a reference sequence is chosen; the choice of sequence is arbitrary and does not alter the final network. constant nucleotide positions within the alignment are discarded  <cit> . positions containing two nucleotides are recorded in a binary format, those nucleotides which match the reference position becoming '0', others becoming '1'. for multistate positions letters are used, the reference sequence and matching bases being converted to 'a', the first alternative base to 'b' and so on. the choice of symbols to represent each character state is arbitrary, numbers have been used for binary characters and letters for multistate characters to make them more easily distinguishable for the user. after the initial encoding, identical characters are collapsed giving 'semi-processed' sequences.

each character represents a partition of the data into sets, for instance those with '0' at that position and those with '1'. to generate the median closure for a set of semi-processed sequences each partition of the data must be unique  <cit> . multistate characters frequently contain partitions observed in other multistate or binary characters, so the median closure cannot be constructed from the semi-processed sequences. to overcome this problem the sequences are further modified to produce binary sequences. each multistate character is replaced with between three and five binary columns. a median network constructed for a multistate character treated in this way will be composed of nodes representing the initial nucleotides each connected to a virtual median . after the second round of processing, identical characters are collapsed once again, recording which characters are collapsed together. these binary sequences form the final processed sequence set. if there are no multistate characters within the initial sequence alignment the semi-processed and processed sequences are the same.

the median closure is constructed from the processed sequences as described in  <cit> . each sequence generated in the median closure is then converted to the semi-processed format. to do this, each tuple of positions encoding a multistate character is examined and replaced with the corresponding character state. for tuples which encode a virtual median, a set of new median sequences corresponding to each combination of possible character states is created. the set of semi-processed sequences constitutes the nodes of the quasi-median closure, with edges connecting those nodes whose sequences differ by one character. an advantage of quasi-median networks is that the same set of sequences will always produce the same network, additionally the entire process can be automated with no parameters to be chosen by the user, ensuring consistent results and ease of use.

network reduction by the minimum geodesic set cover approximation
a pruned quasi-median network should accurately represent the relationships between all real sequences. one way of achieving this is to retain at least one geodesic between all pairs of observed sequences. the parsimony principle states that the simplest description of the relationship between two sequences represents a good approximation of the real evolutionary history. a geodesic is the most parsimonious means of explaining the relationship between two sequences as its length is equal to the edit distance, that is the number of character edits required to convert one semi-processed sequence into the other. extending the parsimony principle to the entire network, an ideal method would preserve at least one geodesic between all pairs of observed sequences, such that a minimal number of latent vertices are retained in the final network.

the identification of the minimal set of latent vertices required to maintain a geodesic between all pairs of observed sequences appears to be similar to the set-covering problem  <cit> , which is believed to be np-hard. whilst heuristics exist to find approximate solutions to the set-cover problem, they would require generation of the median closure which is often not feasible for networks that would typically require pruning. we therefore devised our own heuristic approach, the minimum geodesic set cover approximation , which uses a scoring system based on observed frequencies of character states to select a geodesic to be maintained between sequences. this can be performed for pairs of sequences and as such does not require generation of the median closure.

in mgsca a score is assigned to each character state at every position of the semi-processed sequence alignment equal to the fraction of sequences which contain that character state at the position in question. every node in the quasi-median closure represents a sequence. each node is assigned a score equal to the product of the scores of the character states in its sequence. the set of geodesics is identified between each pair of observed sequences in turn and each geodesic within a set is given a score equal to the product of its nodes' scores. the highest scoring geodesic from each set is selected as it represents the pathway which is most likely given the observed set of sequences, and in the case of a tie all highest scoring geodesics are retained; any latent vertex not found on one of these geodesics is deleted from the network. the union of these highest-scoring geodesics gives the pruned quasi-median network.

here we present a computationally efficient approach to generate quasi-median networks. to initiate the procedure, a pair of processed observed sequences is chosen. as the generation of a quasi-median closure is independent of the order in which the characters are processed, subgraphs can be generated for each sequence pair containing only those edits required to convert one sequence to the other. an alignment is constructed from the processed sequences containing all observed sequences but only those positions where the two sequences differ â€“ because we are interested in identifying the shortest paths between the pair, edits to any character which they have in common can be ignored. from this truncated alignment a median closure is constructed and sequences within the closure are restored to full length by addition of the characters shared by the two observed sequences. from this sequence set a quasi-median closure can be constructed as shown in figure  <dig>  although expansion of the virtual medians is slightly modified as only those multistate character states seen in the sequence pair need be included in the set of median sequences produced . this is because edits involving additional multistate character states will not occur on the shortest paths between the sequence pair. the geodesics can then be identified and assigned scores based on the frequencies of the character states at each position. the highest scoring geodesic is selected, and once the observed nodes and edges have been recorded the subgraph can be deleted, greatly reducing the size of the network required to be kept in memory. this process is repeated for all pairs of observed sequences, and the pruned quasi-median network is the union of all the selected geodesics. in median networks all nodes are connected if they differ by one character, but for visualisation purposes it is preferable to show only these high priority geodesics.

if more than one geodesic within a set has the highest score then all equally high scoring geodesics are retained. this means that sometimes there are small sets of alternative nodes, which can be identified by observing which geodesics pass through each node. if nodes always occur at the same position on equivalent geodesics they can be collapsed into a single node to reduce network complexity, these are depicted as boxes labelled with the number of nodes that have been collapsed .

mgsca generates pruned quasi-median networks which are connected and which preserve the minimum path lengths between observed semi-processed sequences. only those geodesics which are most likely given the initial set of observed sequences are retained, which greatly reduces the number of latent vertices in the network. the collapse of nodes which are always alternatives to one another allows the further reduction of the network without loss of useful information. figure  <dig> shows the network constructed from four sequences displaying all possible partitions of the set of sequences as detailed in  <cit>  from an ape mtdna data set  <cit> . the initial sequences are given in table 1a and table 1b lists the eight virtual median sequences invoked in the generation of this network. the quasi-median closure would contain  <dig> nodes but the pruned quasi-median network contains a more easily viewable fifty nodes. the network shows a similar structure to the median-joining network for the same data  <cit> , but in our network all edges are equivalent to one edit, thus maintaining a consistent representation of the pairwise distances between the sequences. when applied to the sea beet 5s rdna data , the procedure reduced an original quasi-median closure containing  <dig> vertices to a pruned network with only  <dig> vertices . the pruned network is biologically informative as it shows a clear separation between the harbour and cliff top populations, in agreement with previous studies of these populations using isozymes, restriction fragment length polymorphisms and short tandem repeats, which have suggested that the harbour and cliff top plants display genetic isolation by distance  <cit> . additional interpretations that can be drawn from this network regarding the evolutionary history of these populations will be described elsewhere .

CONCLUSIONS
previous studies have shown median and quasi-median networks to be useful tools for analysis of intraspecific phylogenies. we devised a new and fast method to generate quasi-median networks, using a virtual median and enabling all characters, both binary and multistate, to be used without imposing an arbitrary ordering of the multistate partitions and hence without losing phylogenetic information. we also developed a simple and intuitive pruning mechanism that reduces the number of latent vertices within a network while maintaining a connected network and preserving the geodesic lengths between all pairs of observed sequences. a great advantage of this approach is that each sequence pair can be treated separately so that the full quasi-median closure does not need to be constructed, an important consideration with relatively divergent sequences that can give rise to quasi-median networks that are too large to build. the method always produces a single network because it displays multiple equally good geodesics, therefore no arbitrary decisions have to be made during network construction, and no external parameters have to be applied. application of this approach to 5s rdna sequence data from sea beet produced a pruned network within which genetic isolation between populations by distance was evident, demonstrating the value of this approach for exploration of evolutionary relationships.

