BACKGROUND
the analysis of genome sequences in order to discover the location and structure of genes is an increasingly important task. however, a complete and accurate description of the gene structure on the basis of sequence alone remains a difficult problem  <cit> . in eukaryotic organisms, sequences known as introns are removed from precursors to mrna, in the complex process of splicing. the boundaries between introns and exons are called splice sites and the identification of these positions poses a particular challenge. the adjacent nucleotides on intron boundaries comprise two different consensus sequences for the 5'  site and 3'  site. position-specific scoring matrices can be compiled from thousands of annotated splice sites that reflect the contribution of each base at each position. any given sequence can then be evaluated on the degree of agreement with the consensus matrix. however, similar sequences within introns and exons that fit the scoring matrices are observed at a very high frequency, and information at the 5' splice site, branch site, and 3' splice site is insufficient to accurately predict splicing outcomes  <cit> . these facts suggest that other factors must also play a role and help the complex of rna and proteins identify real splice sites  <cit> .

in many cases, the discrimination between splice sites and other sequences can be optimized using machine-learning methods. a machine-learning algorithm uses a set of known examples  and a set of characteristics or features describing the training set to construct a model of the data. the learned model is evaluated by testing its accuracy on a held-out test set. different machine-learning algorithms, such as markov models or neural networks, have been used to improve splice-site prediction  <cit> . genesplicer, described by pertea et al.  <cit>  and maxent, described by yeo and burge  <cit> , are examples of machine-learning algorithms applied to splice-site prediction. genesplicer uses markov modelling techniques, in addition to maximal dependency decomposition analysis, and maxent uses a maximum entropy approach to rank and select "constraints"  for splice-site prediction.

an important input to any machine-learning algorithm is the choice of features describing the dataset. a challenge is how to determine the best set of features for the prediction task at hand. this is especially true for sequence data. one solution is to use automated feature-selection techniques that identify useful or informative features from a large collection of features.

feature-selection techniques have been used extensively in machine-learning problems, and they have been receiving more attention in the computational biology community. for example, liu and wong used feature-selection methods in their prediction of translation-initiation sites  <cit> . degroeve et al.  <cit>  used feature subset selection, combined with support vector machines, to predict splice sites. zhang et al.  <cit> , employed a recursive feature-selection technique, based on support vector machines, to identify sequence information that distinguishes real exons from pseudo exons.

in earlier work, we developed a feature-generation algorithm  for sequence classification  <cit> . the algorithm used the four nucleotides of the dna alphabet, {a, c, g and t}, and their positions in the sequence to construct descriptive features. fga started with these basic features and built more-complex features in an iterative fashion. these features were: groups of consecutive nucleotides, groups of not-necessarily-adjacent nucleotides, and nucleotides or groups of nucleotides associated with particular positions or a range of relative positions in the sequence. because the feature space explored was very large, fga iteratively reduced the size of the feature set by eliminating features according to various feature-selection methods. then, the final set of features that we obtained became input for the learning algorithm.

the learning algorithm that we used  is a max-margin classifier similar to support vector machines . relative to support vector machines, the cmls algorithm exhibits a faster convergence, resulting in shorter training times. our generated features, in combination with the cmls classifier, resulted in two very effective splice-site prediction models for acceptor  <cit>  and donor sites. we illustrate the performance of the fga model for acceptor and donor splice-site prediction in figure 1a and figure 1b. here we also include a comparison with the performances of genesplicer and maxent splice-site prediction models. the fga classifier has been made generally available as a webserver  <cit> .

in this paper, we explore the knowledge-discovery power of our algorithm by taking a closer look at the generated features. we present examples of the observed feature groups and describe our efforts to detect biological signals that may be important for the splicing process. we find that the features generated for computational splice-site prediction include known functional elements, and we present evidence that these features provide previously unknown information about some aspects of these splicing signals.

RESULTS
sequences and splice-site neighborhood
for these experiments we considered canonical splice sites. we explored a splice-site neighborhood of  <dig> nucleotides upstream and  <dig> nucleotides downstream of the consensus ag or gt dinucleotides, with a total sequence length of  <dig> nucleotides. the sequence alphabet was composed of four different nucleotides a, c, g and t, and their individual positions were measured relative to the annotated splice site.

description of generated feature sets
here we summarize the specific steps used to generate the composite feature sets used in our analysis. these features are significantly more complex than the features previously considered in the literature. the algorithm, fga, is described formally in the methods section and in  <cit> . to generate a composite feature set we need to specify an initial set of features, an appropriate construction method, and a fast feature-selection method. to prepare the initial sets of features, we started with the position-specific k-mer sets for k from  <dig> to  <dig>  the numbers of potential features for these feature sets are, respectively,  <dig> ,  <dig> ,  <dig> , and  <dig> . for each of these sets the information gain feature-selection method was used to select the top scoring  <dig>  features. these sets constituted our initial feature sets for the construction algorithm. as described in methods, the feature-construction method expanded each of these sets by adding one position-specific nucleotide in an unconstrained position. after the construction step, we again used information gain to evaluate each of the features in the constructed set. then we evaluated each feature according to a logistic scheme, taking into account the distance between the newly added nucleotide and the original feature, preferring features for which the distance was smaller. after the feature selection step, the top scoring  <dig>  features were selected. these sets constituted the input sets for the next iteration. we ran the algorithm and generated features up to, at most,  <dig> conjunct nucleotides in different positions in the composite feature sets. for each set of features we built a separate splice-site prediction model using the cmls  <cit>  classification algorithm. table  <dig> summarizes the splice-site prediction performance for each of these feature sets. some of these sets performed better than others, but in our analysis we explored all the sets for the purpose of knowledge discovery.

a-3mer2
fga-generated feature sets for splice sites and their individual performances at splice-site prediction. each value reported is an average precision ) over  <dig> values of recall ), 0%, 10%, 20% ... and 100%, and is the result of a three-fold cross validation. all the features in these features sets extend along the whole splice-site neighbourhood  that we study.

in what follows, we use the shorthand notation s-kmern to describe the composite feature subsets that we studied. in this notation, s ∈ {a, d} stands for acceptor  or donor  splice sites, kmer stands for the number of consecutive position-specific nucleotide features in the initial set, n is the number of additional conjuncts and  denotes the interval from position p <dig> to position p <dig> in the sequence. for example, a-3mer <dig> <cit>  is a subset of acceptor splice-site features. these features were generated from the initial set of position-specific 3-mer features and were obtained after three fga iterations, adding each time a new nucleotide in an unconstrained position within the specified interval. the sequence positions associated with each of the features in this subset were from the coding region  <dig> to  <dig> nucleotides downstream the acceptor splice site.

following with our definitions, we say that two composite features match if they share the same nucleotide pattern, starting at different positions. for example, let 4mer <cit>  = {a <dig> g <dig> c <dig> t <dig>  a <dig> g <dig> c <dig> t9} be the subset of composite 4-mer features from the interval  <cit> , where a <dig> denotes nucleotide a at the first sequence position. in this case, the features a <dig> g <dig> c <dig> t <dig> and a <dig> g <dig> c <dig> t <dig>  are two matching composite features. a composite feature subset may contain several matching features that differ only in the starting position within the specified interval. we represent a set of such occurrences with an interval-feature pattern, e.g. ai gi+ <dig> ci+ <dig> ti+ <dig>  an interval-feature pattern is the nucleotide pattern shared among the matching composite features and the number of interval occurrences of a feature pattern is the number of matching composite features it represents. we use the notation s-kmern* to denote the set of all interval- feature patterns for the subset s-kmern. for the above example, given the set of features 4mer <cit>  = {a <dig> g <dig> c <dig> t <dig>  a <dig> g <dig> c <dig> t9}, the set of interval-feature patterns is 4mer <cit> * = {ai gi+ <dig> ci+ <dig> ti+3}. the number of occurrences for the pattern ai gi+ <dig> ci+ <dig> ti+ <dig> in the given feature set is two.

in our analysis, features were ranked according to the weight assigned to them by the classification algorithm. we used the weblogo program  <cit>  to draw frequency plots. we plotted histograms and used basic k-means clustering algorithms and edit-distance measures to cluster the features into groups. here we list some of our findings and illustrate them with our features.

knowledge discovery: generated features capture biological signals
what kinds of biological signals do these generated features capture? examples of positive signals that we might expect to find in a typical pre-mrna include the branch site, the pyrimidine-rich region close to the acceptor splice site, splice-site consensus signals themselves, and exonic splicing enhancers. in addition, it is likely that sequence elements associated with the coding sequence were present among our features. however, we found that fga performed quite well  on the recognition of splice sites flanked by non-coding exons .

the branch site interval
the mammalian branch-site signal is difficult to describe because it is degenerate and shows very low levels of purifying selection  <cit> . in order to investigate the branch-point signal, we examined composite features of  <dig> nucleotides that start in the interval from  <dig> to  <dig> nucleotides upstream from the acceptor splice site . our current feature set for this purpose was a-3mer <dig>  the subset contained  <dig> selected features.

the  <dig> top-scoring a -3mer <dig>  features  are all related to either the branch-site consensus or the pyrimidine tract.

the first column shows the interval-feature patterns in the branch-point interval . the second column shows the number of individual occurrences for each pattern in different positions within the specified interval. the average assigned weight is given in the third column. for comparison we include the total number of occurrences for this pattern in the complete neighbourhood  , and in the last column we show the narrowed range interval that comprises the total occurrences for each pattern.

a summary of position-specific gctgac features and their respective weight assigned by the cmls classifier from the a -3mer <dig>  feature set.

the acceptor splice-site  interval
also shown in figure  <dig> is the distribution of tttt and cctt in this interval. note that this distribution is broader than the distribution of branch-site tetramers. in addition, there is a region  where the scores assigned to tttt become negative and tetramers containing c have maximal scores. similar peaks are observed for cttt, tctt, ttct and tttc .

in order to further investigate the characteristics of the upstream region close to the acceptor splice site, we also examined the feature set a-5mer there were more than  <dig>  selected features in this subset. we note that a large number of features were selected in this set, indicating stronger potential signals close to the splice site. based on the weight assigned by the cmls algorithm, we divided these features into two groups; positively weighted features and negatively weighted ones. in figure  <dig>  we used the weblogo program to draw a frequency plot of the two groups of features. the annotated acceptor site is shown in the figure with the consensus dinucleotide ag.

one interpretation from these plots is that the generated features are capturing the pyrimidine tract, and that they are scanning along the sequence for the exact ag dinucleotide consensus where the true acceptor site is located. the difference between the two frequency plots for positively and negatively weighted features is striking. figure 3a shows that the presence of the ct-rich feature is very important in this interval and figure 3b shows that the presence of an ag-rich element is an indicator of a non-splice sequence. the frequency plot for the positively weighted features  is very similar to the acceptor splice-site consensus itself. however, our features do not simply reflect the nucleotide frequencies seen at true sites. figures 3c and 3d show the frequency distribution of the true acceptor sequences and non-acceptor sequences in the training dataset. the frequency distribution of the non-acceptor sequences in our dataset in the pyrimidine-tract interval  is different from that of the negatively weighted features in the a-5mer feature set . in other words, our features were better than frequency data alone at discriminating true splice sites. to illustrate this difference, we used the frequency distribution matrices of these data to discriminate the true splice sites, achieving an 11ptavg precision of  <dig> %. on the other hand, when we trained a cmls classifier on the fga feature set, it achieved an 11ptavg precision of  <dig> % for the same task.

exploring the pyrimidine-tract interval further, we selected another feature set, which was characterized by composite positional features containing  <dig> nucleotides in different positions, a-6mer <dig>  we made a list of the features, and we identified clusters of similar features, using the k-means clustering algorithm with the edit-distance similarity measure. figure  <dig> shows some examples and samples of the features in each group.

ggg motifs near the 5' slice site
in order to investigate the characteristics of introns near the 5' splice site, we explored the intron downstream of the 5' splice site, using a number of parameters. in each case, ggg and gggg motifs were common. for example, the d-3mer <cit>  set included  <dig> positively ranked occurrences of ggg and  <dig> negatively ranked occurrences. a plot of scores versus position for ggg and gggg is provided in figure 5a and figure 5b, showing that this motif scores positively in the intron downstream of 5' splice sites but negatively in the flanking exon. ggg likewise dominates d-3mer. a number of papers have reported a role for ggg and gggg motifs in splicing  <cit> . recognition of these motifs has been attributed to the u <dig> snrnp  <cit>  and hnrnp h  <cit> .

the donor splice-site interval
next, we investigate the characteristics of the donor splice site. sample clusters, similar to those created for the acceptor site, are shown in figure  <dig>  the first two sequence logos, figure 6a and figure 6b, show the frequency plot of the positively and negatively weighted groups of features for the set d-6mer. the donor splice-site consensus sequence is maggtragt . the next two plots, figure 6c and figure 6d, show the frequency plot for the same interval based on the true donor and non-donor sequences in the training dataset. once again, the sequence logo of the positively weighted features resembles the logo of the nucleotide frequency of the positive data, but important differences are apparent, especially at positions on the periphery of the region shown.
we also compared our generated features to published work on exonic splicing enhancers  and exonic splicing silencers . eses and esss are short oligonucleotide sequences located in the exonic region that affect splicing. the presence of ese sequences in the exonic region results in the enhancement of the recognition of the nearby splice sites. the presence of the ess sequences, on the other hand, suppresses nearby splicing events. these regulatory signals have been studied experimentally  and computational methods have been built to find them  <cit> .

we considered the set of distinct hexamers in the flanking exon interval, for both acceptor and donor by computing interval features of the region of the sequence downstream from the annotated splice site for acceptor and upstream for donor. we divided this set of interval features into positively and negatively weighted sets. we compared these sets of hexamers  with a list of experimentally identified ese's and ess's of mammalian and viral rna  <cit> . there are  <dig> experimentally determined ese sequences listed by zheng  <cit> , including some that are identical but have different sources. the set of hexamers identified from our method produced an overlap for  <dig> ese sequences comprising  <dig> nucleotides, out of  <dig>  yielding a coverage of 87%. twenty-eight of these sequences were perfectly identified by the hexamers covering all the nucleotides. the ess sequences were not recognized as well as the ese ones. we provide these results as supplement data .

rescue-ese  <cit> , fas-ess  <cit>  and esr  <cit>  are computational methods that are specifically tailored to identifying exonic signals that impact a splicing event. rescue-ese identified candidate exonic splicing enhancers in vertebrate exons based on their statistical features. this method identified a set of  <dig> hexamers, which we refer to as rescueese. fas-ess started with a set of experimentally identified exonic splicing silencer sequences of length  <dig>  it computationally derived a set of  <dig> hexamers which we refer to as fasess. esr identified exonic splicing regulator sequences based on conservation of synonymous nucleotides. this set contains  <dig> hexamers, which were not necessarily divided into enhancer and silencer categories. we refer to this set as astesr. an additional method  compared bona fide exons with pseudo-exons in order to identify putative eses  and putative esss . the pese set contains  <dig> octamers and the pess set contains  <dig> octamers. there were  <dig> unique hexamers in the pese set, which we refer to as chpese, and there were  <dig> unique hexamers in the pess set, which we refer to as chpess.

in order to be able to compare the fga-generated features with the ese hexamers identified by these methods, we looked at the different fga sets of features that contained six consecutive position-specific nucleotides and were associated with the exonic regions. we looked at the feature sets generated for both acceptor and donor splice sites. we selected the features that belonged to the sequence interval  <dig> nucleotides downstream of annotated acceptor splice sites and  <dig> nucleotides upstream of annotated donor sites . because fga features were position-specific, for each set we computed the interval-feature patterns, thus obtaining a list of hexamers found in the exonic regions. we divided the features into positively weighted and negatively weighted sets denoted as s-kmern+ and s-kmern-, where s ∈ {a, d} stands for acceptor and donor features respectively.

we computed the overlap between each fga-generated set of hexamers and each of the four published sets of exonic regulatory sequences . we present the overlap for each pair of sets and the corresponding p-values in table  <dig>  the p-value shows the probability that a randomly selected set of hexamers, containing as many hexamer features as found by the fga algorithm, has an overlap equal to or greater than the value given in the overlap column in table 5; this probability is calculated from the hypergeometric distribution. in table  <dig>  we have highlighted all the p-values less than  <dig>  or greater than  <dig> , indicating the significant relationship between the feature sets. all of these other sets have significant overlaps with our features, but the most significant are with chpese and chpess sets, perhaps because they were generated using methods similar to ours.

* p-value is very close to  <dig> 

the number of shared features between the fga generated sets of hexamers and the exon regulator hexamer sets and the p-value stating the probability of having this overlap or a greater overlap by chance. we highlight the highly statistically significant probabilities. the set d -3mer <dig>  did not contain position specific hexamers and the set d -4mer <dig>  contained only  <dig> position specific hexamers, two of which overlapped with rescueese set.

in order to address possible positional preferences  <cit>  for ese elements we examined the distribution of short motifs corresponding to eses among our features. we observed a clear preference for exon sequences, but did not find a strong preference for a particular interval or position. for example, the gaag tetramer is weighted positively throughout the exonic region, as illustrated in figure 7a and figure 7b. this signal was found in almost every position in the  <dig> nucleotide region and the weights of the respective features were very similar, so we cannot specify a region or interval of preference. the one exception was the immediate neighborhood of the donor site , which reflects splice-site consensus rather than exonic splicing enhancer signal. in contrast, gaag was a negatively weighted feature in the intronic region.

we next asked whether those hexamers present in our set but not others have predictive value. as described above, many experimentally determined exonic enhancers  overlapped our features. while this was true of the other sets as well, even when those previously described motifs were excluded, our features still accounted for some observations . interestingly, many of these were examples of the a/c-rich motifs: cacaca, gcccaa, tcaaca, cattca and cctaca. such a/c-rich elements have been described before  <cit>  but have not been extensively characterized.

CONCLUSIONS
we previously showed that our fga algorithm could be used to build accurate sequence classifiers  <cit> . here we have shown that the features generated by our algorithm for the purpose of discriminating between true and false splice sites correspond to functional splicing signals. generated features included known features such as the branch-site consensus, acceptor splice-site consensus, pyrimidine tracts, coding potential and exon splicing regulator signals. the ability of fga to accurately extract the branch-site signal  is especially noteworthy in view of the elusive nature of this signal  <cit> . furthermore, the generated features provided information about the preferred location and sequence of these features, as illustrated by the distribution of branch-site and pyrimidine-tract features. however, we note that because fga does not produce features to capture particular events such as ag di-nucleotide exclusion zones  <cit> , it was not able to extract contingent signals such as distant branch sites coupled to them.

in addition, novel aspects of splicing signals could also be inferred from this method. we point to two examples. one is the co-occurrence of a peak of cctt scores with a group of negative cmls weights for tttt at position - <dig> in the acceptor region. we believe that this may be a real, and previously unappreciated, aspect of the pyrimidine-tract signal. this signal is recognized by the large subunit of u2af . we note that in-vitro selection experiments  <cit>  found a marked preference for a cc dinucleotide in the case of u2af but not ptb or sxl. thus, although u2af will bind oligou, there are other proteins that will do so and these are generally splicing repressors. our observed features were consistent with the possibility that positions - <dig> and - <dig> may be an especially important region for discriminating between positive factors and negative factors that bind to similar sequence elements. this subtlety was revealed by our features despite the fact that it was not apparent from raw nucleotide-frequency data . in a second example, even though our ese hexamer features showed a statistically significant overlap with those obtained by other computational methods , there were examples obtained by ours but not other methods, including a number of ese motifs that corresponded to experimentally determined exonic splicing enhancers.

finally, this method can be easily applied to other species and to similar classification problems for the discovery of species-specific regulatory elements. we have made our features available online  and receiver operating curve  analysis. for any sensitivity ratio, tp/, we calculate the precision at the threshold which achieves that ratio. precision, tp/, measures the proportion of the sequences scoring above the threshold that are true splice sites. the 11ptavg is the average of precisions estimated at these sensitivity values 0%, 10%, 20%, ..., 100%. we also draw the roc curve, which is the graphical representation of the sensitivity  versus false positive rate . false positive rate, fp/, is the value we wish to minimize and the roc graph shows the tradeoff between sensitivity and false positive rate.

feature types and construction procedures
the composite features we generated for splice-site prediction capture compositional and positional properties of sequences. in our general fga technique, we distinguished different types and we defined a construction algorithm for each type. in the experiments described in this paper, we used positional composite features, which we define as follows:

position-specific nucleotides are basic features that represent the nucleotides at each of the positions i in the sequence. these features capture the nucleotide-position preference in the sequence; therefore they are very commonly used in dna sequence-classification analysis. as an example, assume our feature set is f = { a <dig>  c <dig>  ..., gn, tn}, where a <dig> denotes nucleotide a at the first sequence position. our sequences have a length n of  <dig> nucleotides; therefore our position-specific set of single nucleotides contains  <dig> features. we use this initial feature set to construct complex position-specific features.

position-specific k-mer features
the position-specific k-mer features capture the correlations between k-adjacent nucleotides and their respective positions. at each position i in the sequence these features represent the substring appearing at positions i, i +  <dig>  ..., i + k -  <dig> 

construction method
given an initial set of position-specific k-mer features, this construction method expands them to a set of position-specific -mers by appending another nucleotide to each position-specific k-mer. now, if our initial set is fintial = {a <dig> g2}, we can extend it to the set fconstructed = {a <dig> g <dig> a <dig>  a <dig> g <dig> c <dig>  a <dig> g <dig> g <dig>  a <dig> g <dig> t3}.

composite positional features
the composite positional features consist of a conjunction of n nucleotides in n different positions co-occurring in the sequence. in the simplest case, this type of feature set consists of position-specific single nucleotides. while the position-specific k-mers capture only the correlations among nearby positions, the composite positional features intend to capture the correlations between different nucleotides in non-consecutive positions in the sequence. we construct these complex features from conjunctions of position-specific features. the dimensionality of this kind of feature is inherently high. if the number of conjuncts is k, we have a total of 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaalmaabmaajugqbeaafaqabegabaaabagaemoba4gabagaem4aasgaaagccagloagaayzkaaaaaa@31ca@ × 4k such features for a sequence of length n.

construction method
given the set of k-conjuncts, this construction method selects from the set of basic features to add another position-specific nucleotide in an unconstrained position. in this manner we construct the set of -conjuncts. now, if our initial set is finitial = {a <dig> g2}, we can extend it to the level  <dig> set of position-specific base combinations fconstructed = {a <dig> g <dig> ^ a <dig>  a <dig> g <dig> ^ c <dig>  ..., a <dig> g <dig> ^ tn}. incrementally, in this manner we can construct higher levels.

feature selection
feature-selection methods reduce the set of features by keeping only the useful features for the task at hand. the problem of selecting useful features has been the focus of extensive research and many approaches have been proposed  <cit> .

we considered several approaches for initial pruning of features of different types during the generation stage. in our data, we found that the information gain feature-selection method performed best for selecting composite positional features and we calculated the value for each of the features according to the following formula:

 ig=−h+ph+ph,
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbqscqwghbwrcqggoaakcqwgmbgzcqggpaqkcqgh9aqpcqghsislcqwgibasdaqadaqaaiabdoeadbgaayjkaiaawmcaaiabgucariabdchawnaabmaabagaemozaygacagloagaayzkaagaemisag0aaewaaeaadawcgaqaaiabdoeadbqaaiabdagambaaaiaawicacaglpaaacqghrawkcqwgwbacdaqadaqaamaanaaabagaemozaygaaagaayjkaiaawmcaaiabdieainaabmaabawaasgbaeaacqwgdbwqaeaadaqdaaqaaiabdagambaaaaaacagloagaayzkaagaeiilawcaaa@4d15@ 

where h=∑iplog⁡p
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgibasdaqadaqaaiabdoeadbgaayjkaiaawmcaaiabg2da9maaqafabagaemicaa3aaewaaeaacqwgjbwydawgaawcbagaemyaakgabeaaaogaayjkaiaawmcaaigbcygasjabc+gavjabceganbwcbagaemyaakgabeqdcqghris5aogaemicaa3aaewaaeaacqwgjbwydawgaawcbagaemyaakgabeaaaogaayjkaiaawmcaaaaa@44ad@ : feature, c class

logistic scheme
the feature selection method assigns a score to every feature in the feature set, based on the intrinsic properties of the dataset such as feature-class entropy. our feature construction method for the composite positional features expanded the feature set by adding a new nucleotide from any position in the sequence to the original feature. we added a score that penalizes this distance, such that the farther away the position of the newly added nucleotide to the original feature is, the lower the score of the newly constructed feature. we normalized the distance values to a standard normal distribution. then we applied a logistic scheme to assign these scores to each of the features in the constructed set of positional features. finally, each feature was assigned a score according to the following formula:

 fscore = ig + exp 

feature generation algorithm 
by employing a systematic search over the feature space, we can extract relevant features more efficiently than if a single selection were applied to the whole set. the feature generation algorithm combines feature-construction and feature-selection methods described above, it chooses a final set of features, and it produces a classification model for the task at hand. the algorithm is composed of these main stages:

• feature generation. we start with an initial set of features. for each iteration we follow these steps: 1) we expand the given features obtaining a new set of composite features during the feature-construction step, and 2) we specify the useful ones during the feature-selection step. the features that are assigned a low selection score by the feature-selection method and logistic scheme are eliminated. we repeat using the selected features as input for the construction method and iterate through these steps to generate richer and more complex features until a specified number of iterations is reached.

• final feature collection and selection. in this stage, we collect all the features selected on each iteration and apply another feature-selection step.

• classification. the last stage of our algorithm builds a classifier over the final set of features. the learned parameters are used to classify new sequences.

while feature generation remains a computationally intensive process, the organization of the generation process according to the different types allows us to search a much larger space of features efficiently. this provides us with a set of different composite features, which may prove valuable for the task at hand. however, when the training is complete the classification stage has a linear complexity, depending only on the number of putative splice-sites present in the input sequence.

authors' contributions
all authors participated in the design of the study and the interpretation of results. all authors contributed, read, and approved the final manuscript.

supplementary material
additional file 1
fga identified features that contribute to table  <dig>  . a text file with the complete list of features associated with the branch-point interval , from the feature set a-3mer <dig>  the features are ranked according to the absolute value or their assigned weight. the top-scoring  <dig> features of this list are shown in table  <dig> 

click here for file

 additional file 2
features that contribute to figure  <dig> and other features that show similar behaviour . a text file with the complete list of selected features from feature set a-3mer <dig> .

click here for file

 additional file 3
fga identified hexamers in acceptor splice-site prediction and donor splice-site prediction . a text file with the complete list of hexamers that our method indicates they are likely to be eses or esss.

click here for file

 additional file 4
fga-generated features produce a significant overlap with experimentally identified ese sequences table in  <cit>  . the first worksheet in the excel file contains the table of experimentally identified ese sequences in  <cit>  and the overlap with the fga identified hexamers from feature sets a-6mer  <cit>  and d-6mer  <cit> . for each comparison an exact match is required. we compared the positively weighted hexamer sets against the ese sequences, and the negatively weighted hexamer sets against ess sequences. the second worksheet contains the overlap of the ese sequences with the fga identified hexamers that are not included in rescueese, astesr or chpese sets.

click here for file

 additional file 5
fga-generated features produce significant overlap with computationally identified lists of exonic splicing regulator signals  <cit>  . a text file with the list of fga features overlapping with rescueese and astesr exonic splicing regulator lists.

click here for file

 acknowledgements
this research was supported in part by an appointment to the national center for biotechnology information scientific visitors program sponsored by the national library of medicine and administered by the oak ridge institute for science and education .
