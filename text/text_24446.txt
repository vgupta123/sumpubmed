BACKGROUND
the multiple alignment of homologous sequences provides important information on the evolution and the sequence-function relationships of protein families. two types of methods, tree-based or space-based methods, can be used to compare sequences . both methods depend on a multiple alignment of homologous sequences. tree methods assume a hierarchical, binary structure of the data to infer phylogenetic relationships. on the other hand, space methods are based on multivariate analysis of a distance matrix between the sequences and do not assume a specific structure for the data. such a method is metric multidimensional  which is a powerful method to visualize distances between elements  <cit> . mds, also named principal coordinate analysis, starts from a matrix of distances between elements and visualizes these elements in a low dimensional space in which the distances best approximate the original distances. applied to biological sequences, this method usefully complements phylogeny  <cit> .

the completion of the genome sequencing of a wide variety of organisms has paved the way to the comparison of protein families from different species. a very interesting property of mds is the possibility to project supplementary elements onto a reference or “active” space. the positions of the supplementary elements  are obtained from their distance to the active elements  <cit> . this property provides a very useful tool to compare orthologous sequences to a reference sequence set. in particular, when several orthologous protein families are compared, this method can be used to visualize evolutionary drifts  <cit> .

mds is based on the eigen-decomposition  of a cross-product matrix derived from the distance matrix  <cit>  and can be performed with the default tools included in the r statistical language . in addition, several r packages such as ade4made <dig>  adegenet, and vegan <cit>  have been developed to provide multivariate analysis in the field of bioinformatics, including mds. for example, the dudi.pca function in ade <dig> <cit>  or the wcmdscale function in vegan <cit>  performs mds analysis. however, the projection technique has not been widely used yet and, to the best of our knowledge, is not included in the available r packages.

thus, we have developed the r package bios2mds  to provide all the tools necessary to perform the mds analysis of multiple sequence alignments. this package includes a function that projects supplementary sequences onto a reference space and, thus, makes it possible to compare orthologous sequence sets.

implementation
main features
the bios2mds package has been developed in the r statistical environment. r was chosen because it is open-source, accessible under the gnu general public license and widely used within the bioinformatics community. r packages can take advantage of functions already developed in available packages. here, the aim of the package is to provide the tools necessary to compare orthologous sequence sets by mds analysis, namely to analyze the active set by metric mds to define an active space and project supplementary orthologous sequences onto this active space.

while it is possible to use available packages such as ape <cit>  and seqinr <cit>  to read sequences and compute distance matrices, we preferred to avoid too many dependencies for clarity purpose. thus the corresponding functions were rewritten and included into the bios2mds package. concerning the mds computation, the cmds function provided by r gives the final results  but does not give access to the intermediary matrices that are required for the projection technique. it was thus necessary to write an mds function from its basic equations in order to perform the projection of supplementary elements.

functionalities
here, we present the main functionalities of bios2mds. the package provides a complete r environment for mds analysis in the context of protein sequences. it includes functions for data import, mds computation, clustering and visualization of the results.

data import
multidimensional scaling relies on distance matrices. the user can provide these distance matrices or compute them from multiple sequence alignments in the fasta or msf formats. sequence alignments are read in with the import.fasta or import.msf functions. several measures of distances can be computed for multiple alignments of protein sequences: the euclidean distances based on the square roots of the difference scores  <cit> , the distances based on the difference scores and the distances based on dissimilarity scores computed from amino acid substitution matrices. the substitution matrices provided with bios2mds are the jtt  <cit>  and the gonnet  <cit>  matrices, the blosum  <cit>  and the pam  <cit>  series, along with the phat  <cit>  and jtt_tm  <cit>  matrices, more specifically developed for membrane proteins. the distances based on the difference scores can also be used for nucleotide sequences. more sophisticated measures of dna distances can be found in several packages, such as ade <dig>  apeand phangorn <cit> .

mds computation
briefly, given a matrix of  distances between elements, mds transforms this matrix of squared distances into a cross-product matrix whose eigen-decomposition provides the factor score matrix giving the coordinates of the elements on the principal components  <cit> . the projection of supplementary elements onto the active space depends on the matrix of distances between the supplementary and the active elements and on the factor score matrix of the active elements  <cit> . to make the projection possible and to facilitate subsequent data analysis especially in the case of orthologous sequence sets, we provide the mmds function  and the mmds.project function that performs projection of supplementary elements onto an active space.

clustering
the mds representation of the sequence space can be analyzed by k-means in order to find clusters. this part of bios2mds depends on the amap <cit> , e <dig> <cit> , and cluster <cit>  packages. the kmeans.run function that we have developed assesses the robustness of the clustering. it depends on the kmeans and the matchclasses functions from the amap and e <dig> packages, respectively. the kmeans.run function performs multiple runs of kmeans from the amap package and analyzes the resulting clusters with the matchclasses function from the e <dig> package. the output of kmeans.run provides the most frequent clustering solution, with the list of the members of each cluster and their relative membership to this cluster in the different runs. the sil.score function performs multiple runs of the silhouette function from the cluster package. the silhouette function helps determining the optimal number of clusters  <cit> . multiple runs with sil.score allow taking into account the clustering uncertainty. the write.fasta function allows users to retrieve the multiple sequence alignment of each cluster, in fasta format, for further analysis.

visualization
the package bios2mds contains graphical tools to visualize the results of the mds analysis in r. the mmds.2d.plot and mmds.3d.plot functions are used for 2d and 3d representations, respectively, of active and supplementary elements, on the same graph, on user selected components. the mmds.3d.plot function is based on plot3d from the rgl package  <cit>  that provides an interactive tool for 3d visualization within the r environment. the col.group function allows the use of a color code for plotting the 2d and 3d graphs, based on groupings and colors defined by the user in csv files, for both active and supplementary elements. the mmds.2d.multi function visualizes the barycenters of the groups defined by the user in the 2d representation of the active elements. finally, the write.mmds.pdb function allows users to export the coordinates of each element on the first three components obtained by mds in a pdb format for visualization with a molecular graphics program, such as pymol  or rasmol . when col.group is used, each user-defined group corresponds to a different pdb chain number to facilitate selection and coloring.

RESULTS
in this section, we show and discuss the results obtained by typical mds analyses. the input consists of non-redundant sets of non-olfactory class a g-protein-coupled receptors  from different species  <cit> . two types of analysis make sense: the analysis of paralogous sequences, yielding a sequence space, and the comparison of orthologous sequences, using the projection technique.

analysis of paralogous sequences
the human set includes  <dig> aligned sequences of gpcrs  <cit> . the mds analysis of this set provides a typical sequence space . in this example, the distances between sequences are equal to their difference scores and the 3d sequence space of human gpcrs is displayed with the plot3d command from the rgl package  <cit>  that allows interactive 3d representation within the r environment. the elements are colored using the color.group function based on the prior knowledge of the twelve gpcr sub-families present in humans  <cit> . clustering allows the grouping of these sub-families into four groups that correspond to major pathways of gpcr evolution  <cit> .

different distance matrices can be computed from a multiple sequence alignment. these matrices are based either on a difference score or on a dissimilarity score obtained with an amino acid substitution matrix. in mds, the distance matrix should be euclidean or close to a euclidean matrix. distances equal to the square roots of the difference scores are euclidean  <cit> , and the mds analysis of the corresponding matrix gives only positive eigenvalues. distances equal to the difference scores give negative eigenvalues representing about 3% of the variance, whereas distances based on dissimilarity scores give negative eigenvalues that can represent from  <dig> to 7% of the variance .

the percent of negative components represents the weight of negative components in the variance of the data.

the sequence spaces of human gpcrs obtained with the different distance matrices do not reveal dramatic differences and the overall patterns are maintained . in particular, the sequence spaces obtained from the difference scores or their square roots are very similar and the slight changes observed with dissimilarity scores are quite independent of the matrix used for the computation. this is illustrated in figures 2c and d that show the 2d sequence spaces obtained with the “best” and the “worst” matrices, as defined by comparison to euclidean distances 

the “noise” of the data can be estimated from the mds analysis of a random sequence alignment  that is generated with the random function and has the same length, number of sequences, and amino acid composition as the initial alignment.

comparison of orthologous sequence sets
in the example shown in figure  <dig>  the input consists of two sets of aligned sequences  <cit> : the set of  <dig> gpcr sequences from h. sapiens and a set of  <dig> gpcr sequences from n. vectensis . among these anemone sequences,  <dig> can be assigned to five sub-families present in humans. the mmds.project function projects the “supplementary” sequences onto the “active” sequence space. the positions of the supplementary elements depend only on their distances to active elements. either set can be alternatively active or supplementary. by this way, we can analyze the gpcr evolution from the point of view of humans or of sea anemones.

figures 4a and b show the projection of the assigned and unassigned sequences from n. vectensis, respectively, onto the sequence space of human gpcrs. as previously discussed  <cit> , receptors that cannot be assigned to a human sub-family are projected onto the centre of the human space since their specific evolution is expected to happen on perpendicular dimensions. the gpcr sequence space of the sea anemone has a cross shape  and is driven by several large sub-families with no equivalent in humans. for clarity purpose, we project separately the human gpcrs from either “ancient” or “recent” sub-families onto this sequence space . the “ancient” sub-families are those present both in n. vectensis and in h. sapiens <cit> . the projection of the human receptors from these “ancient” sub-families onto the anemone sequence space is consistent with the reverse projection . similarly, the human receptors from “recent” sub-families, with no equivalent in n. vectensis, are projected towards the centre of the anemone sequence space .

the usefulness of the projection technique is illustrated by the example of the somatostatin/opioid receptor sub-family . the input consists of two sets of aligned sequences: the human set that includes  <dig> so receptors, and a set of receptors from n. vectensisc. elegansc. intestinalis and d. melanogaster that could be assigned to the so sub-family  <cit> . figure  <dig> shows the projection of the orthologous so receptors onto the sequence space of human gpcrs. we have shown previously that this sub-family initiated from a deletion in an ancestor of the peptide receptors  that led to the split between these two sub-families  <cit> . the so receptors from remote species  are close to the pep receptors, whereas those from the chordate c. intestinalis and from the fruit fly d. melanogaster , are located at intermediary positions. thus the projection technique reveals the evolutionary drift of specific sub-families.

CONCLUSIONS
the r package bios2mds provides users with a powerful and flexible framework to perform multidimensional scaling of multiple sequence alignments. the program can import data directly as distance matrices or as multiple sequence alignments from which distance matrices are computed. the package bios2mds is tailored for the analysis of protein sequences but can be adapted for nucleotide sequences. several r tools, including the cmds command, offer the possibility to perform mds analysis of a distance matrix. however, to our knowledge, the bios2mds package is unique in allowing the projection of supplementary elements onto an active space in the r environment. this property is especially suited for the comparison of orthologous sequence sets and the evolution of specific protein sub-families. the tools for the visualization of the data have been designed to take advantage of prior knowledge on the protein family under scrutiny, for example its classification into sub-families or the presence of specific sequence motifs. finally, it has to be emphasized that the input of the projection function within bios2mds requires only active and supplementary distances matrices. thus this function can be widely used for any kind of application.

availability and requirements
project name: bios2mds

project home page: http://cran.r-project.org/web/packages/bios2mds/index.html

operating systems: platform independent

programming language: r  <dig> 

other requirements: requires the amap, e <dig>  cluster, scales and rgl packages

license: gnu general public license

any restrictions to use by non-academics: none

competing interests
the authors declare that they have no competing interests.

authors' contributions
jp and jmb contributed equally to this work. jp and mc conceived the package. ha provided the projection method and support to implement it in r. jp and jmb wrote the software, which jp, mc and jmb tested and debugged. mc wrote the first draft of the manuscript, which ha revised and all authors approved.

