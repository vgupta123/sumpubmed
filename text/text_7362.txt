BACKGROUND
one area of particular interest to the proteomics community is the application of proteomics to the determination of proteins that are differentially expressed or abundant between samples representing different physiological or disease states  <cit> . typically, such analyses require a quantitative proteomics approach, for which there is a wide range of experimental options available to the researcher. these generally fall into one of two categories, or represent some combined form of both  <cit> : i) stable isotope labeling, combined with lc-ms/ms identification, providing accurate relative abundance, or, if suitably calibrated peptide or protein reference samples are available, absolute quantification; ii) lc-ms label free quantification , in which quantification is determined via observed changes in the ion current for individual analytes.

isotopic labeling and label free approaches each have their own set of challenges and limitations. ms/ms-based isotopic labeling approaches must introduce the label pre- or post-sample isolation. post-isolation methods include the use of labeling reagents such as icat  <cit>  and itraq  <cit> , whereas pre-isolation labeling methods  include the use of silac  <cit>  labeling reagents, for use in cell culture-based experiments. all of these methods, however, limit the number of individual biological samples that can be compared in a single experiment to a very low number, and peptides can generally only be quantified if they are also successfully identified by ms/ms, unless combined with a lc-ms profiling approach. in contrast, lc-ms-based label free approaches are ideal for the comparison of large sets of samples or populations where, in principle, every feature detected by the mass spectrometer is potentially quantifiable. however, since lc-ms approaches rely on some form of data alignment or pattern matching, they require a much higher degree of experimental reproducibility. this can be challenging for lc-ms, when large numbers of consecutive analyses are often required.

as a result of both the increased use of lc-ms-based workflows, and the complex computational challenge that the alignment of large sets of lc-ms data represent, a wide range of tools to address this need have appeared  <cit> . it is also because of the complexity of this problem, and the different computational approaches that can be taken to solving it, that each of the tools has its own, individual set of strengths and weaknesses. thus for the biologist or proteomics researcher, tool selection can depend on what experiment is being done, or what mass spectrometer or data type is being used etc. for example, the two lc-ms tools we have implemented in the version of corra presented here, specarray  <cit>  and superhirn  <cit> , each work better than the other with data generated with different types of mass spectrometer, as is discussed further below. other tool limitations/considerations include: those designed to run on a single processor versus those that can run on a cluster; some have a limitation on the number of samples  that can be aligned in one experiment; others are designed to use ms/ms identification of some peptides as 'landmarks' during the alignment process. in general, these lc-ms tools also have no, or only very minimal statistical capability to assign confidence to data alignments, and thus control the false discovery rate. finally, as each tool was developed in a different academic setting, each with their own set of needs and workflows, the input/output formats of the tools do not make them readily compatible with each other, or the array of statistical packages that have been developed for analysis of high-dimensional data. for all these reasons, embarking on an lc-ms-based proteomic discovery workflow can be a daunting task for the biologist or other researcher who is not already well versed in proteomics and bioinformatics.

we therefore set out to develop, and here present corra: a free, open source and customizable computational platform that enables lc-ms proteomic workflows. the corra framework extends and adapts existing algorithms used for lc-ms-based proteomics, as well as existing statistical algorithms from the microarray community suitable for the analysis of high-dimensional lc-ms data, as well as adapting additional software engineering technologies, such as distributed processing and google web toolkit. as such, corra addresses an unmet need in the lc-ms proteomics field: to provide an open source computational platform that allows biologists and other researchers, not formally trained in bioinformatics, to easily process, visualize and analyze lc-ms data in the manner of their choosing, all within a single application, and on their own workstation. using a web-based interface, corra guides the user from ms data generation, through data processing, visualization, and statistical analysis steps, providing for multiple server-side data processing modes and statistical analyses along the way, towards the identification of differentially abundant or expressed candidate features for prioritized targeted identification by subsequent ms/ms. corra also provides all the information and documentation required for the knowledgeable user to customize the platform, and integrate the data processing and/or statistical analysis tools of their own choosing, according to their specific workflow needs.

to illustrate the implementation of corra for the analysis, visualization and interpretation of biologically relevant lc-ms data, we present analyses of two biological pilot studies as examples of commonly performed proteomic lc-ms experiments, that each highlight different aspects and uses of corra. the first pilot study demonstrates the use of corra for candidate plasma biomarker discovery aimed at human type  <dig> diabetes. here we show the use of aligned lc-ms features to correctly classify the normal and disease plasma sample groups, followed by corra-enabled targeted ms/ms identification of the differentially abundant peptide features. the second pilot study demonstrates the use of corra for phosphopeptide profiling, where we identify in vivo substrates of a protein kinase using a kinase deletion strain of yeast. here we expect that the target phosphopeptides of the kinase will be absent from one set of samples. again, follow-up corra-enabled targeted ms/ms identified the phosphopeptide features absent in the kinase knockout strain.

methods
overview of the apml format
to facilitate the integration into a coherent analysis platform of existing software tools with those yet to be developed, it was necessary to define a data format that could capture any and all relevant information relating to the data and the experiment, to ensure portability of data between the disparate tools in use. we therefore defined and implemented the annotated putative peptide markup language  data format within the corra framework to both store processed data, and port it from one tool to the next. apml is defined using extensible markup language . we chose xml since it is a simple language, designed for data representation, and is easily parsed and self-describing by markup tags. apml captures essential lc-ms data information for statistical analysis, as well as additional information for identification, profiling, clustered features, etc. the apml schema and documentation can be found here  <cit> .

the apml element has two child elements, the dataprocessing and data elements . the dataprocessing element only stores software information in the softwaretype, while the data element, and all its sub-elements, stores all data information and potential annotations. the primary elements for data storage are the peak_lists and alignment elements. however, there is also an optional cluster_profile element, which, for example, can be used to capture a list of clustered feature references, such as would be found in a time course or dilution series experiment, when needed. picked feature lists are stored in peak_lists, and can have one to many peak_list elements, where each stores the detected features of a single lc-ms run . the alignment element stores all the lc-ms file information in the feature_source_list element, and stores aligned features in the aligned_features element .

both the featuretype and alignedfeaturetype elements  have the coordinate element. the coordinate element is defined as coordinatetype , which contains coordinate information defined by m/z , retention time , charge and mass attributes. the coordinatetype also contains optional range elements for scan, time and m/z. we also defined ppidcollectiontype for the ppid element for each feature . this is an optional element to store putative feature identification that can be derived from ms/ms data, or via existing database information, such as from peptidealtas  <cit>  or unipep  <cit> . finally, we also found it useful to have an element, the optional clusterprofiletype , to store a grouped collection of any type of intensity profile that may arise through a sample dilution series or time course, for example. full descriptions of all elements of apml and its types can be found in the apml documentation  <cit> .

apml implementation with lc-ms and statistical tools
a goal of corra was to enable the integration of multiple and disparate lc-ms data analysis tools, and integrate them, seamlessly, with common statistical packages to allow for better comparison between differently-processed datasets, via the addition of statistical measures of confidence and error rates. the integration of tools was achieved via ampl and the various parsers. in the current build of corra we have integrated specarray  <cit>  and superhirn  <cit> , both adapted to generate their final output in apml, as well as to operate in a distributed computing environment. to integrate the tools with the needed statistical analyses, we implemented another apml parser, using r's xml library, to facilitate an interface to corrastatistics.r. this allows the user to launch within corra additional statistical data analyses, suitable for quantitative proteomics data analysis, via the use of selected bioconductor packages.

bioconductor is a leading open source and software project for the statistical analysis of high-throughput biological data  <cit> , and is primarily based on r, a language and environment for statistical computing and graphics. bioconductor represents a rich source of statistical packages pertinent to proteomic data analysis, and thus a perfect source of tools for corra's data processing framework. the current version of corrastatistics.r includes the limma  <cit>  and masigpro  <cit>  bioconductor packages to detect statistically significant features that are differentially abundant between related sample sets  and with a controlled false discovery rate, with the option of adding time course information, if required. corrastatistics.r also allows for the use of mlinterfaces and hierarchical clustering for supervised and unsupervised clustering applications.

an inherent aspect of any lc-ms profiling experiment, where features are to be aligned across multiple lc-ms runs, is the issue of missing features across a subset of the lc-ms runs being aligned. one explanation for such 'missing' features is the failure of the feature detection and/or alignment tools to correctly detect and align every true feature in every data file, usually as a result of experimental variation . however, missing features may also be indicative of real and desired experimental information. therefore, instead of throwing away aligned features with missing intensity values of a subset of the lc-ms runs, corrastatistics.r also provides the user with the option to replace such missing intensity values, either with a user-specified value, or the default setting: the minimum intensity value obtained among all aligned features, after intensity normalization, for the given data set. these missing values are then applied to the aligned intensity dataset, allowing subsequent analyses to detect features that were above the limit of detection by lc-ms in one data/sample sub-group, but not in another.

apml parsers and viewers
to enable corra to launch multiple and disparate tools, as well as to facilitate the integration of other new and yet to be developed lc-ms tools into corra, we needed to implement apml parsers and enable the use of apml across the whole corra platform. we thus implemented a generic apml parser library package using java standard edition  <dig>  to ensure efficient memory and parser use, simple api for xml and stream api for xml were used in the library package. the apml parser package is also included with corra, along with the apml schema documentation, to the quantitative proteomics tool development community, to enable the integration of other pre-existing and newly developed tools into the corra framework, and thus enable other workflows and applications of corra on an 'as needed' basis. the apml schema and implementation are also readily extensible, and thus customizable, via the addition of new optional elements and by extending the provided java classes. the javadoc, org.systemsbiology.libs.apmlparser, is thus provided to assist any developer who wishes to plug the current parser into another analytical tool implementation, for his or her own specific needs . apml peaklist and alignment viewers are also implemented within corra to provide the user with a visual 2d display of lc-ms intensity data, within m/z and lc retention time dimensions .

corra web graphical interface
another important design goal for corra was to enable relative ease of use of its various tools and statistical packages by users with little or no formal bioinformatic training, all within a single computational interface. this was accomplished via the development a web-based graphical user interface  to help guide any user through the various desired data processing and analysis steps, in a systematic and straightforward way. this was done by using google web toolkit for the client web application. access to the interface is via a web-browser, and does not require installation of any custom software on the user's computer. data processing happens on a remote server that leverages a compute cluster environment to achieve high-throughput and scalability. this has the advantage of not tying up the user's computational resources during time-consuming analyses.

in addition to the number of lc-ms runs to be analyzed and their inherent file-sizes, the processing time is highly variable and dependent on which lc-ms tool is used, user specified setup parameters, as well as the hardware and number of compute nodes that the corra platform is run on. however, as a guide, utilizing specarray for alignment in a multi-threaded and distributed computing environment, feature extraction for  <dig> lc-ms runs, with a ~ <dig> gb mzxml file per lc-ms run, took corra ~ <dig> hours. this was done on a six dual-core, dual processor amd opteron  <dig>  cluster, each with  <dig> mb of level  <dig> cache.

implementing new lc-ms tools or statistical packages in corra
as has been discussed above, the version of corra presented here includes implementation of specarray  <cit>  and superhirn  <cit>  for the lc-ms data alignments, and the limma  <cit>  and masigpro  <cit>  packages for statistical analysis of aligned data. however, researchers with a sufficient bioinformatics background can readily implant additional tools of their choosing. to add an additional lc-ms tool, this would minimally require modifying the new tool's code to be able to input and output data in apml format. tools that also use ms/ms data would have to be modified to use pepxml  <cit>  representation of the ms/ms data. additionally, tools that are not designed to do so could be modified to take advantage of corra's distributed processing architecture, if desired. since corra already includes parsers for r's expressionset data format, introducing existing or new r statistical packages is very simple. finally, the corra gui would have to be updated to show the new tools in the web interface.

enrichment of n-glycopeptides from human plasma samples relevant to type  <dig> diabetes
 <dig> human plasma samples were obtained directly from the funding agency . diagnostic classifications had been made via the oral glucose tolerance test , the current diagnostic 'gold standard' for diabetes.  <dig> control samples were from subjects with normal glucose tolerance , with blood glucose levels ranging from  <dig> to  <dig> mg/dl  <dig> hours post-glucose challenge after fasting.  <dig> samples were from patients newly diagnosed with type  <dig>  diabetes  , with blood glucose levels ranging from  <dig> to  <dig> mg/dl  <dig> hours post-glucose challenge after fasting. n-linked glycoproteins were enriched from the plasma samples, and the formerly n-glycosylated peptides recovered, following digestion with trypsin and protein n-glycosidase f  sequentially, essentially as described elsewhere  <cit> . sample preparations were performed in a 96-well plate format, using a freedom evo robotic workstation  for all liquid handling and incubation steps, following manual transfer of plasma samples to the 96-well plate. sample locations in the plate were randomized and recorded. final n-glycopeptide isolates were stored, dry, in glass vials at -80°c until needed. samples were resuspended in  <dig> % acetic acid prior to ms analyses.

mass spectrometric analyses of human plasma n-glycopeptide isolates
peptides were separated on an  <dig> series hplc system  equipped with a nanoflow pump, operating at a flow rate of  <dig> μl/min. mobile phase a was a  <dig> % formic acid in water, and mobile phase b was  <dig> % formic acid, 5% water, 95% acetonitrile. a binary linear gradient from 5% to 35% b was used to separate the peptides on a  <dig> cm monolithic c <dig> column, with a  <dig> μm inner diameter . a self-packed integrafrit column  with a bed of magic c <dig>  <dig> μm particles ,  <dig> cm ×  <dig> μm, was used as a pre-column. sample volumes of  <dig> μl were injected by the autosampler. samples were randomized for loading, and re-randomized for all subsequent technical replicates.

mass analysis was performed on a microtof electrospray time-of-flight mass spectrometer  at a mass accuracy of  <dig> ppm, and a resolving power of  <dig>  or better. the mass scale was calibrated using glu1-fibrinopeptide b  and mass spectra were acquired at  <dig> spectrum/s over an m/z range of 300– <dig> . high mass on the microtof was maintained via automated instrument recalibration between each sample injection. this was achieved by injecting  <dig> fmol of glufib, before running a  <dig> minute wash gradient, increasing the cone voltage to  <dig> v to induce in-source cid. the glufib fragment ions were then used by a visual basic script to recalibrate the mass spectrometer on-the-fly, thereby ensuring high mass accuracy from the first to last sample. this measure also has the benefit of greatly reducing carry-over between complex samples, such as plasma-derived peptide isolates, and also provides a way to monitor sensitivity and reproducibility of the system during large-scale sample batch analyses.

for ms/ms identification of corra-identified discriminatory n-glycopeptides, an inclusion list for the top-ranked  <dig> discriminatory peptides was used for targeted ms/ms on an ltq-ft mass spectrometer  as described elsewhere  <cit> .

enrichment of phosphopeptides from control and ark <dig> kinase knockout strains of yeast
three biological replicates each of the yeast s. cerevisiae wild type  and the deletion strain  were grown to od ~ <dig>  at 30°c in synthetic defined  medium ,  <dig>  g isoleucine,  <dig>  g valine,  <dig>  g adenine,  <dig>  g arginine,  <dig>  g leucine,  <dig>  g lysine,  <dig>  g methionine,  <dig>  g phenylalanine,  <dig>  g threonine,  <dig>  g,  <dig>  g tryptophan,  <dig>  g tyrosine,  <dig>  g uracil,  <dig>  g glutamic acid and  <dig>  g aspartic acid). cells were harvested at 30°c by centrifugation. then cells were washed once in sd medium , pelleted by centrifugation, and were shock-frozen in liquid nitrogen until needed. yeast cell pellets were subsequently thawed in ice-cold lysis buffer ,  <dig> mm vanadate,  <dig> mm sodium pyrophosphate and  <dig> mm naf) using  <dig> ml of lysis buffer per gram of yeast. yeast cells were lysed by glass bead beating . phosphopeptides were isolated following tryptic digestion of total protein isolates using titanium dioxide affinity purification, as described elsewhere  <cit> .

mass spectrometric analyses of yeast phosphopeptide isolates
the phosphopeptide samples were analyzed on a hybrid ltq-orbitrap mass spectrometer  interfaced with a nanoelectrospray ion source. chromatographic separation of peptides was achieved on an eksigent nano lc system , equipped with a  <dig> cm fused silica emitter,  <dig> μm inner diameter , packed in-house with a magic c <dig> aq,  <dig> μm beads, loaded from a cooled  spark holland autosampler, and were separated using acetonitrile/water solvent system containing  <dig> % formic acid, at a flow rate of  <dig> nl/min. peptide mixtures were separated with a gradient from  <dig> to 30% acetonitrile over  <dig> minutes. for ms/ms data acquisition, one data-dependent ms/ms scan was acquired in the linear ion trap for each orbitrap-ms scan, the latter acquired at  <dig>  nominal resolution settings , with an overall cycle time of ~ <dig> seconds. charge state screening was employed to select for 2+ ions, rejecting 1+ ions and those with undetermined charge. for injection control, the automatic gain control was set to  <dig> ×  <dig> and  <dig> ×  <dig> for full orbitrap-ms and linear ion trap ms/ms, respectively. the instrument was calibrated externally, according to manufacturer's instructions. data was acquired using internal lock mass calibration on m/z  <dig>  and  <dig> .

database searching of ms/ms data for peptide identification
data from targeted lc-ms/ms on an ltq-ft, for the human plasma study, were searched using sequest v <dig>  and the human ipi database v <dig>  . trypsin was specified for cleavage, allowing one non-tryptic terminus. no mass filtering was used, a  <dig>  da precursor mass tolerance was used, and a fragment ion tolerance zero was applied . a stable modification for cys of + <dig>  da was used, as well as differential modifications for met of + <dig>  da and for asn of + <dig>  da. a maximum of  <dig> modified residues per peptide were allowed. orbitrap ms/ms data, for the yeast kinase study, were searched using sorcer er-sequest v <dig> . <dig>  running on sagen sorcerer, and using the yeast sgd database . trypsin was specified for cleavage, allowing for two missed cleavages and one non-tryptic terminus. mass tolerance was set to  <dig> ppm for the monoisotopic precursor ions, and to  <dig>  da for fragment ions. stable modification for cys of + <dig>  da was used, along with stable modification for all carboxylate groups of + <dig>  da, and differential modification for ser, thr and tyr of + <dig>  da was also used. for both datasets, final peptide assignments were made and false discovery rates calculated by peptideprophet  interpretation of sequest search results  <cit> . for the purposes of this study, modified amino acid assignments, according to above criteria, were made by virtue of the top-ranked sequest match, followed by manual/visual inspection of ms/ms spectra.

RESULTS
as has been previously stated, the goal of the corra project was to create a single computational platform that was customizable, free and open source, for the enabling lc-ms-based proteomic workflows. the sections that follow below serve to illustrate the data flow through the corra framework, and include discussions of the processing/analysis options available in the corra implementation presented here, summarized in figure  <dig>  this is then followed by sections describing two, very different, biological pilot studies, chosen as 'real world' experimental examples, both to illustrate and validate the application of key aspects of the corra workflow to quantitative lc-ms data processing and analysis, and it's use for informing subsequent identification of peptides/proteins of interest via targeted ms/ms.

corra data input and software processing
at the outset,  raw lc-ms data files are first converted to mzxml  <cit> , prior to importing into the corra framework. the data can then be processed for feature/peak picking and alignment. the current implementation of corra uses superhirn for very high mass accuracy orbitrap or ft-ms data  and specarray for high mass accuracy tof-ms data . these default settings were, in fact, determined through testing the feature picking/alignment tools on multiple data types, where we observed that a given tool performed better with certain types of ms data, and in a somewhat instrument-dependent way. we reasoned that this effect likely resulted from the original data sets that were used during the initial stages of tool development and testing. specarray was initially developed for the analysis of esi-tof data  <cit> , and thus performed better than superhirn for the analysis of the esi-tof data, such as that obtained for the human type  <dig> diabetes plasma study shown below. on the other hand, superhirn was initially developed for the analysis of very high mass accuracy ft-ms data  <cit> , and thus performed better than specarray for the analysis of very high mass accuracy orbitrap ft-ms data, such as that in the yeast kinase knockout study, also shown below. since it is necessary to have high mass accuracy data  in order to perform lc-ms profiling of complex samples, the implementation of specarray and superhirn in this initial version of corra represents sufficient choice for anyone wanting to perform lc-ms profiling using corra. however, the corra platform, being open source, was designed so that additional tools could be integrated, according to project-specific needs, as described under methods above.

another feature of the corra framework is that it facilitates the process of peak picking and alignment on the server side  utilizing an underlying cluster environment with a job-scheduling system  to process all the lc-ms runs in a given data set. this mode of analysis also ensures that the process is not limited by the size of the data set  as some stand-alone tools can be. following feature detection, the user can display pertinent statistics to evaluate the data quality and usefulness, such as a distribution for the number of features extracted from each lc-ms run. finally, the outputs of these analyses are converted to apml, both for storage, and for data visualization via corra's apml viewer .

corra peak picking and alignment
as discussed above, the current implementation of the corra framework allows for the use of either specarray or superhirn for feature picking and alignment purposes. however, in order to facilitate the analysis of large data sets, where ms signal intensity typically varies over time, corra normalizes the ms signal intensity data, prior to importing into the peak picking and alignment tools, using limma   <cit> . corra, via apml, also allows for subsequent annotation of aligned peaks where ms/ms data is available, for example via subsequent targeted ms/ms identification of differentially abundant peptide features.

it is worth noting here that corra was designed primarily for the analysis of lc-ms-based  quantitative proteomic data. it is thus highly desirable that the data itself should be acquired under conditions that maximize for reproducibility. to this end, in one of the studies discussed below, we instituted an automated calibration of the mass spectrometer via the inclusion of a calibration standard in the blank/wash cycle. this provided for very consistent mass resolution and accuracy, meaning that the major concerns to focus efforts on were the maintaining reproducibility for both chromatography and sensitivity. if sensitivity were to drop appreciably, then many features that were above signal-to-noise may no longer be detected. this effect could mislead the user into thinking that the absence of such features was related to biology, rather than machine performance. it is therefore important to be mindful of this issue when analyzing large lc-ms profiling datasets. indeed, the use of the calibration standard between runs enabled us to closely follow ms sensitivity over the course of large-scale experiments, and several datasets were abandoned before we obtained the data presented in the diabetes example study below, due to the detection of ms sensitivity-related problems. reproducibility of lc retention time, on the other hand, is somewhat more challenging, the main issues being sample carry-over and gradient drift. fortunately, the short wash cycle between analyses greatly reduced carry-over, without significantly increasing the time required per sample analysis. gradient drift can be harder to control. however, improvement in the alignment algorithms currently implemented, have meant that, for the higher-end lc systems commonly in use, this is rarely an issue, save for a major breakdown in the lc-system.

statistical data analysis using corrastatistics.r
to be complete, any single platform for lc-ms data analysis would need to include statistical algorithms, appropriate for the analysis of lc-ms data, to generate measures of significance for  features that appeared to be differentially expressed or abundant between two or more sample groups. fortunately, many such algorithms have been established for the analysis of genomic and microarray data, now freely available via bioconductor  <cit> . corra thus includes bioconductor r statistical packages that are useful and appropriate for the interpretation lc-ms data to meet this need, and which are contained in the corrastatistics.r module.

to perform statistical analyses, apml data sets are first imported into corrastatistics.r, which first parses apml's dataset and sample information to create an annotated sample and feature intensity data format in the expressionset  <cit>  object, the format required for application to the r's statistical packages from bioconductor. the implementation of corrastatistics.r presented here, uses limma  <cit>  for processing data without time course information, and masigpro  <cit>  for data that does contain time course information. regardless of which is used, the final output is always the same: a ranked list of features that best discriminate between one or more biological/physiological/clinical groups. this list can then be used to generate an inclusion list for targeted ms/ms analysis and subsequent identification of the discriminatory peptides/proteins of interest . finally, the ms/ms spectra, and resultant peptide sequences identified etc., can be annotated back into the aligned apml file for that particular data set.

one drawback of clustering analyses, and indeed many other statistical methods that could be applied, is that they can only use features that aligned across all lc-ms runs. however, it is possible that a given feature may not be present in one sample pool versus another due to a genuine biological effect, rather than it being below the limit of ms detection in one or more lc-ms runs, or due to an error made by either the feature picking or alignment tool. thus, in order to work around the clustering limitations for such real-life situations, we included an optional function within corra , where the user can replace missing intensity data  with the minimum measured intensity for the entire dataset , or a specified nominal value of their choosing. when missing intensity values are not replaced, only features that have intensities across all lc-ms runs will be used for supervised or unsupervised clustering analyses. limma analysis of aligned features can then be performed to calculate fold-changes in intensity for each aligned feature across all lc-ms runs which, in turn, can be used to assign a measure of statistical significance for the observed fold changes, for the given dataset. when missing values are replaced prior to clustering, this will produce highly artificial ratios, which can be very misleading if interpreted improperly. therefore, great care must be taken in applying this optional functionality prior to clustering analysis. for example, if a given feature in the 'control' population aligned across  <dig> of  <dig> runs, then replacing the missing feature could be beneficial, since this is likely a 'real' feature that was missed in just one run by the ms or software tools. however, it may be unwise to replace all  <dig> missing features for another feature that aligned across only  <dig> runs.

nevertheless, there are clearly situations where the ability to replace missing features with a nominal value are of use, hence the provision of this function. an example of such a case is given below, where lc-ms profiling was performed on phosphopeptides isolated from a specific protein kinase knockout strain of yeast, in comparison to a wild-type control strain. in this case, we expected missing features in the knockout, when compared with the control. thus, by using the missing feature replacement function wisely, we were able to successfully cluster the data to identify phosphopeptides that were not present in the profile from the knockout yeast strain. similarly, in a typical biomarker discovery workflow, there may be markers only present  in the disease samples, due to a change in gene expression versus the control samples. thus if one were to observe features that aligned across all  cases, but not the controls, the judicious use of this function would similarly help identify such features. however, since the ratios it generates are highly artificial and therefore open to misinterpretation, it is up to the individual user to ensure that they use this particular function wisely, and to report it when they do so. indeed, it should be stressed that there are many ways in which high-dimensional data, such as lc-ms data, can be validly analyzed. thus it is always incumbent on the individual user to first consult with the literature, and/or a suitably qualified biostatistician, before embarking on such complex statistical analyses. finally, the bioconductor packages implemented so far were chosen for applicability to our current proteomics research. however, alternative approaches to both statistical data analysis and missing feature replacement are enabled by corra's open software architecture. with the built-in converter to r's expressionset file format, a user can readily extend or plug-in their own bioconductor packages of preference into the corra pipeline, as discussed under methods above.

examples of corra application to biological studies
we next used corra for the analysis of lc-ms data from two biological pilot studies, as examples of commonly performed proteomic lc-ms experiments. the first goal of these biological studies was to validate the corra platform's capability to take lc-ms data all the way through to the identification of statistically credentialed, differentially abundant peptides for targeted ms/ms identification. the second goal was to provide 'real life' examples of discovery-based proteomic experiments to illustrate the type of experiments corra is useful for analyzing, and to show the type of information it can provide for the biologist end user. these two studies were also chosen since they separately highlight different aspects of, and the flexibility of corra.

the first of these is from a pilot type  <dig> diabetes biomarker discovery project using human plasma. here we wanted to be able to initially classify the samples according to disease state via label-free lc-ms analysis, then subsequently identify differentially abundant peptides via ms/ms. the second is from a study to identify candidate protein kinase substrates in vivo via lc-ms phosphopeptide profiling, using kinase deletion strains of the yeast s. cerevisiae. here we show an example using a yeast deletion strain for the kinase ark <dig>  in this case, unlike the type  <dig> diabetes study, we expected the phosphopeptides of interest to be completely absent from the lc-ms profiles compared with a wild-type strain, requiring a different analytical strategy using corra. again, we subsequently identified the missing phosphopeptides of interest by ms/ms reanalysis of the wild-type yeast strain.

application of corra to plasma biomarker discovery for human type  <dig> diabetes
the purpose of the pilot study presented here was to apply current lc-ms quantitative proteomics technology to try and identify potential type  <dig> diabetes candidate plasma biomarkers via profiling of  n-glycosylated peptides . to do this, n-glycosite peptides were isolated from plasma samples collected from control individuals with normal glucose tolerance , as well as from newly diagnosed cases of type  <dig> diabetes .

n-glycosite peptide isolates were thus prepared from  <dig> individual ngt plasma samples and  <dig> individual db plasma samples, as previously described  <cit>  and summarized above under methods. the  <dig> samples were then randomized for lc-ms analysis, followed by  <dig> additional technical lc-ms replicate analyses of all  <dig>  each with a new randomization of sample run order to reduce potential bias, for a total of  <dig> lc-ms runs. following conversion of the raw data to mzxml format, the  <dig> data files were input into corra for feature picking and alignment by specarray. the aligned datasets were then imported into the corrastatistics.r module for statistical analysis, as described above.

an alternate corra analysis output for this same data is shown in figure  <dig>  in this case, a "volcano" plot was generated, using limma, to show the detection of differential abundance for the  <dig> features that aligned across at least  <dig> of the  <dig> lc-ms runs . in this plot, the aligned features are ordered by log odds  on the y-axis. the log odds b value is, essentially, a measure of probability that the feature is differentially expressed/abundant , i.e. the higher the log odds for each feature, the higher the probability that the feature is genuinely differentially expressed/abundant.

we then ranked these  <dig> aligned features according to log odds for differential abundance to generate a list of the top  <dig> for targeted ms/ms, i.e. to identify the peptides, hence proteins, that best discriminated between the ngt and db diagnostic groups. an inclusion list was thus made for these  <dig> features and two samples, each a pool of  <dig> randomly chosen plasma isolates for each disease state, ngt and db, were analyzed, separately, in triplicate, for acquisition of ms/ms data on an ft-ltq spectrometer. in this way, we were able to assign peptide sequence identity to over half of the  <dig> targeted features . table  <dig> shows the top  <dig> most discriminatory peptides  that were also successfully matched to a peptide sequence, with a peptideprophet score of ≥  <dig>  via ms/ms, which corresponded to a false discovery rate of 2%. a log odds of  <dig>  represents a minimum probability of  <dig> % for likelihood of non-random differential abundance for these  <dig> peptides, which, in turn, had a minimum probability 91% for correct identification by ms/ms .

b  indicates odds of the peptide/proteins are differentially expressed between ngt and db groups. peptideprophet  <cit>  probability  indicates the probability of correctly assigning ms/ms spectra to the given peptide. to be listed here, a peptide first had to score log odds of ≥  <dig>  for differential abundance, and then ≥  <dig>  by peptideprophet for subsequent ms/ms peptide sequence assignment. we also give the m/z value and charge state  for both the feature initially detected by ms <dig>  as well for the peptide subsequently identified by ms/ms . for peptide sequence identifications, n# is used to indicate the predicted position of the modified asparagine residues, resulting from their conversion to aspartic acid during the deglycosylation step used during sample preparation. the consensus sequence for n-glycosylation is -n-x-s/t- where x is any amino acid except proline, and s/t is serine or threonine. the ipi database entries that were matched to the given sequences are also listed. the log odds b value is a statistical measure of the likelihood that a given feature is genuinely differentially expressed/abundant, where higher log odds values represent increased probability of such. log odds can be converted to a probability. in this case, where we used a log odds cut-off of ≥  <dig> , the probability that a feature at this value really is differentially abundant is: exp/) =  <dig> , . thus a log odds value of  <dig> corresponds to a 50– <dig> chance that the feature is genuinely differentially abundant.

finally, it should be noted here that these data are from a pilot study, and as such, none of the proteins identified were, or should be considered as candidate markers for diabetes without further studies. nevertheless, they do illustrate how the corra framework was implemented to determine, and then identify, targets of interest in any lc-ms-based biomarker discovery workflow. in turn, it also shows how corra could be of use to biologists or other researchers interested in lc-ms data analysis of any other, similar comparison of related physiological states.

application of corra to phosphopeptide profiling of an ark <dig> kinase knockout yeast strain
as a second example of corra application, we analyzed lc-ms profiles of phosphopeptides isolated from a wild-type yeast strain, for comparison to those obtained from a yeast strain lacking the protein kinase ark <dig>  the goal was to see whether we could identify potential ark  <dig> target proteins, and phosphorylation sites, for this kinase. unlike for the human diabetes pilot study above, here we fully expected to observe the 'missing features' effect in the ark  <dig> deletion strain. additionally, these analyses were performed on a very high mass accuracy orbitrap-ltq spectrometer, and the superhirn tool was instead used for the feature picking and alignments within corra.

we therefore prepared total phosphopeptide isolates from the two yeast strains, as previously described  <cit>  and summarized under methods. the two samples were then analyzed on an orbitrap-ltq spectrometer, in triplicate , limiting the lc-retention time range for data analysis to the  <dig> to  <dig> minute window, since this was the region where the peptides eluted for these analyses. on average, superhirn detected ~ <dig>  features per lc-ms run, with  <dig>  total detected features. of these,  <dig>  aligned across all six lc-ms runs, with  <dig>  that aligned across three or more lc-ms runs.

since there were  <dig> biological samples, each analyzed in triplicate, we took the  <dig>  features that aligned across three or more runs for importing into the corrastatistics.r module, to search for the differentially abundant features between the control and the kinase knockout yeast strains. in this study, we were especially interested in phosphopeptides not detected in the knockout strain versus the control strain, since these would represent potential targets for the missing kinase. thus to do this, we utilized the 'n/a replace'  functionality within corra to set missing features between all  <dig> runs to the minimum intensity value detected for the entire dataset. while we recognized that this would generate artificial ratios when we performed the analysis, it nevertheless provided us with the information we needed, since we were, ultimately, only interested in peptide identity here, and not a quantitative measure of differential abundance.

from these data analyses, as with the diabetes study above, we next made an inclusion list for targeted ms/ms, to try and identify some of the phosphopeptides lost in the ark <dig> knockout yeast versus the control. table  <dig> lists the top  <dig> most discriminatory peptides, with a log odds of ≥  <dig> , and that also matched a peptide sequence by ms/ms, with a peptideprophet score of ≥  <dig>  . ark <dig> is known to be involved in endocytosis and actin reorganization, as also are  <dig> other proteins from table  <dig> , demonstrating that corra successfully enabled the generation of potentially biologically relevant information. finally, for confirmation purposes, figure  <dig> shows extracted ion chromatograms, for all  <dig> lc-ms runs, for the identified ydr <dig> peptide, rhs*lglneakk  at m/z =  <dig>  3+, confirming it's detection in all  <dig> replicate analyses of the control strain, and its absence in all  <dig> replicate analyses of the ark <dig> knockout strain.

b  indicates odds of the peptide/proteins are differentially expressed between wild type yeast and deletion strain group. peptideprophet  <cit>  probability  indicates the probability of correctly assigning ms/ms spectra to the given peptide. we also give the m/z value and charge state  for both the feature initially detected by ms <dig>  as well for the peptide subsequently identified by ms/ms . for peptide sequence identifications, s* and t* indicate the predicted position of the modified  serine or threonine residues reported by sequest search and manual/visual inspection of the ms/ms spectra. the yeast sdg database accession numbers matched to the sequences are also listed, along with their corresponding sgd systematic protein names. the log odds b value is a statistical measure of the likelihood that a given feature is genuinely differentially expressed/abundant, where higher log odds values represent increased probability of such. log odds can be converted to a probability. in this case, a log odds of  <dig> corresponds exp/) =  <dig>  .

CONCLUSIONS
here we present corra, a complete, free and open source computational platform that enables lc-ms-based proteomic workflows, and as such, addresses an unmet need in the lc-ms proteomics field. the corra framework extends and adapts existing algorithms used for lc-ms-based proteomics, as well as existing statistical algorithms from the microarray community suitable for the analysis of high-dimensional lc-ms data, with a view to controlling false-discovery rates. corra also adapts additional software engineering technologies, such as distributed processing and google web toolkit. corra enables the use of an array of lc-ms data alignment tools, integrating them with various forms of statistical analyses via bioconductor, for the generation of statistically validated lists of differentially abundant peptide features for subsequent targeted lc-ms/ms identification, all within a single computational platform. corra is not intended as an alternative to pre-existing lc-ms analytical tools, such as specarray  <cit> , superhirn  <cit> , msinspect  <cit> , pepper  <cit> , and others, but rather provides a framework for using such tools in a way that can overcome some of their limitations, such as the ability to process datasets of large size, via corra's distributed computation process. corra effectively obviates cross-tool incompatibilities through the use of a new common data format, ampl, that allows for rich data annotation from multiple experimental workflows, as well as a set of parsers between different data input/output formats, including r's expressionset format for statistical data analysis. finally, in part through its implementation via a web-based gui, corra fills a noticeable gap in the field of lc-ms, or 'label-free' quantitative proteomics, in that it provides for biologists and other researchers, not just those trained in bioinformatics, to process, visualize and analyze their data in the manner of their choosing, all within a single application, and on their own workstation.

in the version of corra presented here, two of the aforementioned lc-ms tools, specarray and superhirn were implemented, as were the bioconductor packages limma and masigpro for statistical analysis. however, with the description of the a common file format for lc-ms data, apml, and with the parsers and documentation also provided with corra, the ability to incorporate additional software tools and statistical algorithms for additional workflows is fully supported. this allows for a user with appropriate bioinformatics training to set up corra on any linux server, either as is, or customized for their own personal or groups workflows. finally, corra is provided as open source , and may be downloaded, along with all relevant documentation  <cit> . corra is also available from sourceforge.net . further development of corra and apml remain ongoing. upcoming releases of corra will include an apml-ready version of the lc-ms analysis tool msinspect  <cit> , additional functionality to allow for the extraction and quantification of lc-ms data that includes the incorporation of stable isotope labels, and providing corra outputs in a format suitable for downstream interaction with selected reaction monitoring-based workflows.

abbreviations
apml: annotated putative peptide markup language; db: type  <dig> diabetes; esi: electrospray ionization; ft: fourier transform; glufib: glu1-fibrinopeptide b; gui: graphical user interface; lc-ms: liquid chromatography mass spectrometry; limma: linear models for microarray data; ms/ms: tandem mass spectrometry; ngt: normal glucose tolerance; ogtt: oral glucose tolerance test; pngasef: protein n-glycosidase f; sd: synthetic defined; tof: time of flight; xml: extensible markup language.

authors' contributions
mb, dc, je, ag, ov and nz conceived the original corra framework, and mb subsequently oversaw corra framework design, including apml and data analysis tools, and their implementation. mb amended and revised the specarray tool for implementation within corra. lm wrote the superhirn software tool and collaborated with mb for modifications required for corra implementation. vs assisted with corra data analyses and designed and implemented the corra gui. ov did the initial design for the statistical analytical methods. bb performed the yeast phosphopeptide experiments and preliminary data analyses. kc performed glycopeptide isolations for the human diabetes plasma study. hl performed the lc-ms analyses for the human diabetes plasma study. sl oversaw all mass spectrometry experiments at isb and performed targeted ms/ms experiments for the human diabetes plasma study. ra oversaw the research contributed by eth and designed the yeast phosphopeptide study with bb. jw oversaw the research contributed by isb and designed the human diabetes plasma study. jw and mb wrote the manuscript.

