BACKGROUND
affymetrix microarrays consist of a number of probe cells, each probe cell containing a unique probe. there are two types of probes, perfect match  and mismatch  occurring as pairs. the sequences for pm and mm are almost identical. the difference consists of a single base change in the middle of the pm probe sequence to the watson-crick complement for the mm probe sequence. a series of such probe pairs forms a probe set which represents a transcript  <cit> .

hence, it is part of the preprocessing of affymetrix arrays to compute a single expression value for the different probe sets. one of the most popular algorithms for this purpose is mas  <dig> , developed by affymetrix  <cit> . it is the algorithm that, for instance, was most frequently applied within the framework of phase ii of the microarray quality control  project  <cit> .

mas  <dig>  uses pm and ideal match  to compute the expression values where, for probe set i and probe pair j,

  imi,j={mmi,j,mmi,j <pmi,j2−sbipmi,j,mmi,j≥pmi,jand sbi>τ12−τ1τ2τ1+τ2−sbpmi,j,mmi,j≥pmi,jand sbi≤τ <dig> 

with default values τ <dig> =  <dig>   and τ  <dig> =  <dig> . the specific background  is determined using tukey's biweight one-step estimator  where affymetrix's version of tukey's biweight disregards all observations outside of median ± <dig> median absolute deviation   leading to a very robust estimator:

  sbi=tbi, j= <dig>  …, ni) 

then, the signal log value for each probe set is obtained via

  siglogva1i=tbi 

with probe value pvi, j = log <dig> and vi, j = max{pmi, j - imi, j, δ}. the constant δ with default value δ = 2- <dig> is introduced for numerical stability.

however, as table three in section  <dig>  of hampel et al.   <cit>  suggests there are more efficient robust estimators than tukey's biweight, e.g. the tanh-estimator. in addition, table eight.five in section  <dig>  of kohl   <cit>  shows that in the infinitesimal robust setup for normal location and scale one may lose up to  <dig> % asymptotic efficiency if one uses tukey's biweight in combination with mad  instead of the optimally robust estimator. consequently, we implemented an algorithm along the l ines of mas  <dig>  where we substituted the tukey biweight one-step location estimator by an in infinitesimally robust radius-minimax  k-step  location and scale estimator  <cit> .

illumina beadarrays are based on 3-micron silica beads that are randomly positioned on fiber optic bundles or planar silica slides. each bead is covered with hundreds of thousands of copies of a specific oligonucleotide sequence assigning the bead to a certain bead type, where each bead type is represented in high redundancy with more than  <dig> replicates on average. the intensity values of the single beads are called bead level data. it is part of the preprocessing to aggregate the bead level data to so-called bead summary data leading to a single expression value for each bead type. in this paper we only consider data from single-channel gene expression beadarrays. besides that, beadarrays can also be used for snp genotyping, methylation profiling, and copy number variation analysis  <cit> .

in illumina's proprietary beadstudio software an outlier rejection method  combined with mean and standard deviation is used to aggregate the bead level data to bead summary data. the mad in this setup is standardized by  <dig>  to be consistent at the normal model. that is, the location part of illumina's estimator is a huber-type skipped mean and is very close to estimator x <dig> of hampel   <cit> , which uses  <dig>  × mad. quoting hampel et al.   <cit> , p.  <dig>  the x <dig> estimator is "frequently quite reasonable, according to present preliminary knowledge". however, monte-carlo studies show that there may be an efficiency loss of 5-25% compared to more sophisticated robust estimators  <cit> . hence, we implemented an algorithm which uses rmx k-step estimators for summarizing bead level data. the goal of this paper is to demonstrate that the application of optimally robust rmx estimators can lead to a considerable efficiency gain and increased reproducibility for well-established preprocessing algorithms. first, we argue for normal location and scale as the ideal model, at least for the log-transformed values of some publicly available affymetrix and illumina data sets, using minimum kolmogorov distance. second, we use monte-carlo simulations and those publicly available datasets to compare mas  <dig>  and illumina's default method with our modified algorithms based on rmx estimators. the proposed preprocessing algorithms are implemented in the r package robloxbioc <cit> . a brief overview of infinitesimal robustness is given in the methods section at the end of the manuscript.

RESULTS
affymetrix data
we replace tukey's biweight which only provides a location estimate by an rmx estimator for normal location and scale n. the tukey biweight and the rmx estimator are constructed as one-step and k-step estimates based on median and mad, respectively. as both estimators are so called asymptotically linear  estimators, a straightforward way to compare these estimators is to observe the corresponding influence curves/functions  displayed in figure  <dig> 

in both cases, the location part of the ic is redescending. in contrast to tukey's biweight rejecting observations more than about  <dig>   mad times away from the median, the rmx estimator only downweights large observations. moreover, the plot shows that tukey's biweight is mostly affected by undiscoverable  gross errors located around  <dig>   mad-times away from the median where the ic of tukey's biweight  is maximal, whereas the rmx estimator is mostly deflected by large observations where the euclidean length of the location and scale ic is maximal.

however, for applying the rmx estimator for normal location and scale, one first should check if it is plausible to assume normal location and scale as the ideal model for the mi, j := log <dig> values. as we can not test for approximate normality , we use the minimum kolmogorov distance for this purpose. that is, we minimize, in μ ∈ ℝ and σ ∈ ,

  dκ,f^mi)=supx∈ℝ|Φμ,σ−f^mi| 

where Φ μ,σ is the cumulative distribution function of n and f^mi is the empirical distribution function of the sample mi, j,..., mi, ni. working with a right-continuous empirical distribution function the above supremum is equal to

  maxj= <dig> …,ni{Φμ,σ)−j−1ni, jni−Φμ,σ)} 

where mi,, ..., mi, is the increasingly sorted sample. in particular, the minimal possible kolmogorov distance for sample size n is - <dig> 

of course, it would be possible to use some other distance  or the test statistic of some test for normality for this purpose. however, we decided to use the kolmogorov distance since there is a certain connection between kolmogorov neighborhoods and the gross-error model in infinitesimal robustness , lemma  <dig> . <dig> and proposition  <dig> . <dig>  <cit> ) and the kolmogorov distance can be computed efficiently via equation . nevertheless, the computations take more than  <dig> minutes for the hgu95a dataset and more than  <dig> minutes for the hgu133a dataset, which consist of  <dig> and  <dig> genechips, respectively, using function kolmogorovmindist of our package robloxbioc on an intel p <dig> . for more details on these latin square spike-in datasets we refer to cope et al.   <cit>  and irizarry et al.   <cit> .

number of probe sets per number of probe level pairs  for hgu95a and hgu133a genechips.

differences of the medians of the minimum kolmogorov distances between the latin square datasets and the normal random samples for each number of probe level pairs .

to get a rough estimate of the corresponding size of the contamination neighborhood , which is required for selecting an appropriate rmx estimator, we use the following heuristics: for kolmogorov , total variation  and contamination neighborhoods  of size s ∈  it holds

  uc⊂uv⊂uκ 

in addition, at least in the one-dimensional case and under symmetry, the optimally robust ics for uc and uv coincide. moreover, if the optimally robust ic is monotone, then it is also the solution for uk   <cit> . based on these considerations we multiply the median difference between the observed and the simulated kolmogorov distance by two, leading us to a neighborhood size s ∈ .

we use the corresponding rmx 3-step estimator instead of tukey's biweight to compute the specific background values sbi and the signal log values siglogvali. asymptotically  speaking it makes no difference which k we choose to construct the rmx estimator and differences only occur if one takes a look at higher-order asymptotics as shown by unpublished results of p. ruckdeschel. however, to date, there are no finite-sample results indicating an optimal choice for k if there is any. the use of three steps is motivated by the observation that in all situations we considered so far, the estimates were stable and did not change very much after the third iteration.

the results in section  <dig>  of kohl   <cit>  show that, in the infinitesimal robust setup and for known contamination radius, the optimally robust al estimators clearly outperform the tumad estimator for the estimation of normal location and scale with respect to the asymptotic maximum mse, where the maximum efficiency loss is  <dig> %. moreover, the results of the following monte-carlo study, which is in the spirit of the princeton robustness study  <cit> , indicate that this is also true for the rmx estimator in the case of an unknown neighborhood radius and finite-sample size. due to the finite-sample size and the shrinkage of the neighborhoods, we use a finite-sample correction of the neighborhood radius determined by a large simulation study. the finite-sample correction leads to a larger neighborhood radius; i.e., to a more conservative estimation procedure. it can be computed with function finitesamplecorrection of the r package roblox <cit> .

for the simulations we chose a sample size n =  <dig> as most of the probes sets have this number of probe pairs on hgu133a genechips  and performed m =  <dig> monte-carlo replications. as the ideal model we used n which is no restriction due to equivariance of the location and scale model. as contaminating  distributions we employed:

• n, t <dig> and cauchy leading to an increased variance

• n and ncausing a positive bias

• dirac measures at  <dig>   and  <dig> , which are approximations for the least favorable contaminations  for the tukey and the rmx estimator, respectively.

we selected s ∈ { <dig> ,  <dig> ,  <dig> } as sizes of the gross error models. the results for other contaminating distributions or amounts of gross errors can easily be computed with function affysimstudy of our r package robloxbioc.

since there is no estimator yielding reliable results if there are 50% or more gross errors, we wanted to admit only random samples with less than 50% contamination. the probability for rejecting a sample is ≤ exp{-2n2} by theorem  <dig> of hoeffding   <cit> ; i.e., decays exponentially in the sample size n. at n =  <dig> and s ∈ { <dig> ,  <dig> ,  <dig> } a replacement of a sample is necessary with probability  <dig>  · 10- <dig>   <dig>  · 10- <dig> and  <dig>  · 10- <dig>  respectively. hence, unsurprisingly, there was no single sample that had to be replaced in our monte-carlo study.

the results in table  <dig> show that the rmx location estimate in all situations considered has a smaller empirical mse than tukey's biweight. the efficiency loss of tukey's biweight in nearly all situations is about 15-20%.

n
t
3
n
n
d
d

1000
empirical mse  for normal location and scale estimators at sample size n =  <dig>  and contamination s ∈ { <dig> ,  <dig> ,  <dig> }.

next, we present some results demonstrating the accuracy of the two procedures for the hgu95a and hgu133a latin square datasets. for the computations we also used the rmx 3-step estimator for s ∈  which is implemented as default in function robloxbioc of our r package robloxbioc. the results for the mas  <dig>  with tukey's biweight were determined with function mas <dig> of bioconductor package affy <cit> . in addition to the availability of different robust estimators, the implementation in robloxbioc is more efficient. the normalization using robloxbioc on an intel p <dig>  requires about  <dig> minute in contrast to about  <dig> minutes for mas <dig> 

in figure  <dig> analogously to figure  <dig> in cope et al.   <cit> , the mean standard deviations  are plotted against the mean log-expression values for the two datasets. the curves were determined by smoothing the resulting scatterplots, which include sds and mean log expressions for each gene not spiked-in. these plots indicate an improvement of the accuracy of mas  <dig>  when using the rmx estimator instead of tukey's biweight as the variability in terms of mean sd for the rmx estimator is clearly smaller especially for hgu95a. some quantiles of the computed sd values are given in table  <dig>  the results for the log fold-changes observed for non-differentially expressed genes  -i.e., genes not spiked-in - confirm these results; see table  <dig>  overall we expect that using the rmx estimator increases the accuracy of mas  <dig>  by 10-20%.

accuracy measures of  <cit>  and  <cit>   for tukey's biweight and the rmx estimator for s ∈ .

the comparisons of the two robust procedures were performed with the bioconductor package affycomp <cit> . the full assessments of cope et al.   <cit>  and irizarry et al.   <cit>  can be computed using the r code specified in the file affymetrixexample.r in the scripts folder of our package robloxbioc. the simulation study can be recomputed by the r code given in the file affymetrixsimstudy.r also provided in the scripts folder.

as the following results indicate, the higher accuracy of rmx estimators increases the reproducibility of gene expression analyses. we analyzed a random subset of the maqc-i study  <cit>  provided by the bioconductor package maqcsubsetafx <cit> . regarding the affymetrix platform, a total of  <dig> u <dig> plus  <dig>  genechips have been generated and four different reference rnas have been used.  100% of stratagene's universal human reference rna,  100% of ambion's human brain reference rna,  75% of a and 25% of b and  25% of a and 75% of b. each reference has been repeated five times on six different test sites. the datasets refa,..., refd provided by package maqcsubsetafx consist of the data of six randomly chosen u <dig> plus  <dig>  genechips  for each reference rna. as figure  <dig> shows, the assumption of approximate normality is fulfilled. we measured the reproducibility in terms of the spearman correlation of the normalized data and the pearson correlation of the log2-transformed normalized data. in all cases the correlation was found to be higher for the rmx estimators. the relative increase is  <dig> - <dig> %  in the case of spearman correlation and  <dig> - <dig> %  in the case of pearson correlation.

the results can be recomputed using the r code specified in the file affymetrixreproducibility.r in the scripts folder of the package robloxbioc.

illumina data
since we intend to apply the rmx estimators for normal location and scale to summarize the bead level data, we first checked whether the normal model is appropriate for these data. we use the spike-in data investigated in dunning et al.   <cit>  consisting of eight customized mouse- <dig> version  <dig> beadchips hybridized with a complex mouse background. each beadchip contains six beadarrays each made up of two strips on the chip surface. in total each of the beadarrays includes  <dig> bead types. the raw bead level values were sharpened and background subtracted  <cit> . due to the random positioning of the beads, the number of beads per bead type varies from array to array. in figure  <dig> and  <dig> we have depicted those bead types with  <dig> to  <dig> replicates and  <dig> to  <dig> replicates, respectively. the results were obtained using function kolmogorovmindist of the r package robloxbioc where the computations took about  <dig> hours for the spike-in dataset. both figures indicate that the assumption of normal location and scale as the ideal model is more appropriate for the log-transformed bead level data. hence, we propose to use the rmx 3-step estimator for normal location and scale and s ∈  in combination with the already mentioned finite-sample correction instead of illumina's method, which is a huber-type skipped mean and standard deviation  <cit> , to summarize the log-transformed bead level data. the use of three steps and the choice s ∈  is driven by the same heuristics as in the affymetrix case.

in a further step we have performed a simulation study using a very similar setup as in the affymetrix case. due to the higher redundancy of the illumina data, we chose a sample size of  <dig> instead of  <dig>  moreover, we replaced the dirac measure at  <dig>  by the dirac measure at  <dig>  which is an approximation for the least favorable contamination for illumina's default method. the results for other contaminations can easily be computed with the function illuminasimstudy of the r package robloxbioc. as in the affymetrix setup, we applied the modification that less than 50% of the observations contained in a sample may be contaminated where again no single sample had to be modified. the results in table  <dig> show that the two estimators perform similarly with a slight advantage for the rmx estimator. due to the outlier rejection step included in the illumina method, it is unsurprising, that it performs especially well if the contaminating distribution puts mass on large values. in contrast, the rmx estimator outperforms the illumina method in situations where the outliers are less obvious like in the case of t <dig> or n. furthermore, looking at the maximum empirical risk for the simultaneous estimation of location and scale illumina's method shows an efficiency loss of about 15% compared to the rmx estimator. in view of these results it is no surprise that illumina's method performs best in figure  <dig> of dunning et al.   <cit>  where outliers at  <dig> were used and average bias and log <dig> variance are plotted versus percentage of simulated outliers for several summary methods. besides that, the approach of dunning et al.   <cit>  contains a flaw from a statistical point of view. the original data is contaminated irrespective of the bead type. that is, one gross-error model for the whole dataset was used instead of a gross-error model for each bead type in the dataset. this approach might reflect the way contamination occurs in practice but, already at moderate contamination rates, one obtains many bead types where 50% or more of the bead values are contaminated and consequentially no reliable estimator exists. we postulate that this is the reason why the reported breakdown points are clearly smaller than the "real" breakdown points of the considered estimators .

n
n
n
empirical mse  for normal location and scale estimators at sample size n =  <dig>  and contamination s ∈ { <dig> ,  <dig> ,  <dig> }.

next, we report some results representing the accuracy of the two procedures for the spike-in data of dunning et al.   <cit> . for the computations we again used the rmx 3-step estimator for s ∈  which is the default in function robloxbioc of the r package robloxbioc. the results for illumina's method were determined with the function createbeadsummarydata of the bioconductor package beadarray <cit> . the computations of the bead summary values take about  <dig> seconds and about  <dig> seconds using createbeadsummarydata and robloxbioc, respectively. so far, the rmx estimator is implemented in interpreted r code. by switching to compiled code  we probably could compete with createbeadsummarydata which is calling c code.

for the comparisons we use the approach of cope et al.   <cit>  and irizarry et al.   <cit>  as in the case of the affymetrix data. in a first step we plotted the mean sds against the mean log-expression values for those genes not spiked-in, results are depicted in figure  <dig>  the plot indicates a slight improvement of the accuracy by using the rmx estimator instead of illumina's default method as the mean sd is slightly smaller for the rmx estimator. some quantiles for the sd values are given in table  <dig>  secondly, we took a look at the log fold-changes observed for the non-differentially expressed genes . this statistic also confirms the above results; see table  <dig>  moreover, we added the results for the other methods implemented in package beadarray which are mean and sd, median and mad, 5% trimmed mean and sd as well as 5% winsorized mean and sd. the numerical results show that these other methods perform worse than illumina's default method and the rmx estimator. overall the rmx estimator performs the best and we expect an increase in accuracy of at least 1-5% by using the rmx estimator instead of the other methods.

accuracy measures of  <cit>  and  <cit>   for the rmx estimator for s ∈ , illumina's default method as well as mean and sd , median and mad , 5% trimmed mean and sd  and 5% winsorized mean and sd .

the results mentioned can be recomputed via the r code provided in files illuminaexample.r and illuminasimstudy.r which are included in the scripts folder of our r package robloxbioc.

as the following results indicate, the higher accuracy of our rmx estimators is reflected in an increased reproducibility of gene expression analyses. we have again used the spike-in data of dunning et al.   <cit>  which can be divided into twelve sets each including four technical replicates. for these twelve sets we measured the reproducibility in terms of the spearman and pearson correlation of the summarized log2-transformed data, overall leading to  <dig> pairwise comparisons. in  <dig>  and  <dig>  cases respectively, the correlation was higher for the rmx estimators. as before, the differences between the two procedures were found to be small and remained well below  <dig> % in all cases.

the results can be recomputed using the r code given in the file illuminareproducibility.r in the scripts folder of our package robloxbioc.

CONCLUSIONS
as the variability of the estimation is clearly reduced as well as the reproducibility is increased when we apply rmx estimators for preprocessing, it is reasonable to assume a higher power for subsequent statistical analyses.

in the case of illumina data the rmx summarization method can be combined with different preprocessing methods that can be applied to bead summary data, e.g. the variance-stabilizing transformation  of lin et al.   <cit> .

in the case of affymetrix data there are several other well-known normalization methods based on parametric models e.g. the robust multi-array average  or the variance stabilization and calibration  which can be used. the rma procedure is based on a linear additive model where one uses median polish  <cit>  for parameter estimation. a replacement of the median polish by a corresponding rmx polish may further improve the algorithm. in the case of vsn a possible modification could consist of replacing the least trimmed sum of squares  regression  <cit>  by an rmx estimator for regression  <cit> . as the above results and the results in chapters  <dig> and  <dig> in kohl   <cit>  indicate, these modifications lead to an increased accuracy. at the same time we can retain the high breakdown point of the already available robust estimators by using the k-step construction in combination with bounded rmx ics  <cit> .

the reported results and the universality of the infinitesimal robustness approach suggest that optimally robust rmx estimators should also be of interest for other bioinformatics applications.

