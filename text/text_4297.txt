BACKGROUND
various approaches have been taken to analyse regulatory networks in the last few years. one such approach is in silico simulation of fluctuations in network components when the network is perturbed  <cit> . comparing in silico results with experimental outputs may highlight the relevance of certain approaches in our understanding of biological insights. nonetheless, confronting experimental data with a regulatory network comes up against many difficulties. one of these is the incomplete state-of-art of the regulatory knowledge, recently identified in  <cit> . another difficulty is the large scale of regulatory models, which makes the task of collecting kinetic constants and parameters intolerable. other issues that induce errors in this confrontation are heterogeneity in the available data  <cit> , and the sometimes violated assumption that mrna expression levels are correlated to protein activity  <cit> . to deal with these problems, we propose a global qualitative analysis, which formalises automatic reasoning in order to compare experimental data with the network behaviour expected from its topology. our method highlights incomplete regions in a regulatory model and reasons over which products in the network need to be activated or inactivated in order to globally explain the experimental data  <cit> .

as described in this article, we have enclosed this reasoning in the bioquali cytoscape  <cit>  plugin, which allows the user to visualise the outputs of global automatic reasoning on large-scale regulatory networks. these outputs can be inconsistent subgraphs or a list of nodes, whose expression is deduced as increasing or decreasing in order to explain the observed data consistently.

consistency between regulatory networks and expression data has been studied previously in  <cit> . these studies proposed manual local consistency checks, in some cases by adding new regulation rules. the automation of this idea was recently implemented in a cytoscape plugin in  <cit> . with the bioquali plugin, we go one step further since we propose automating a global consistency reasoning: the effects of influences are carried through the whole network in order to generate a consistency diagnosis that takes account of the entire topology of the network. in comparison with previous approaches, the new functions we provide are: a global analysis, which involves all network connections; no assumption regarding the null transcription factor activity when its mrna expression change is non-significant; and visualisation of a consistent configuration of the whole network in which it is inferred that the expression of certain nodes fluctuates in a determined way that explains the experimental data provided. to do this, the bioquali plugin relies on a robust architecture, which makes it effective in terms of speed and maintainability. bioquali uses statistically significant expression profiles to deduce activity levels of transcription factors , however, it does not assume that non-significant mrna changes imply a null activity level of the tf. the bioquali plugin can help detect post-transcriptional regulations in a model; this capacity relies on the bioquali inferred fluctuating nodes. this inference, obtained after confronting consistent transcriptional regulations with mrna changes, reflects new fluctuations related either to mrna expression or to protein activity levels. confronting this inference with the sense of variation of mrna expression may elucidate missing post-transcriptional interactions. detecting an inconsistent subgraph may also imply the absence of a post-transcriptional regulation. bioquali cannot automatically predict when a post-transcriptional interaction is missing, but it does provide tools for diagnosing a regulatory network which, combined with biological expertise, may result in adding post-transcriptional effects to complete a network model.

we illustrate this plugin by means of two regulatory models: a small eukaryotic model of the regulation of fatty acid metabolism and the large-scale prokaryotic transcriptional network of e. coli. these networks have been compared with small- and large-scale datasets, obtaining in each case globally-explained inconsistencies and predictions that agree with the biological literature.

implementation
the bioquali plugin is implemented in java, based on the cytoscape api, and using the rest architectural style. by default, the client component uses an unauthenticated http connection to communicate with the genouest web server  <cit> . this enables fast remote execution of the algorithm underlying the bioquali plugin on the genouest high performance computing facility . the genouest computing infrastructure consists of  <dig> amd opteron bi-processor nodes  with  <dig> gb of memory each and a job submission server, sge, which manages access and computation. alternatively, the server side component can be downloaded at  <cit>  and installed on any standard pc.

the plugin is available to download from the cytoscape plugin website  <cit> , under the plugin/analysis section. it is packaged as a jar file which must be placed in the cytoscape plugins directory. it is compiled with the latest cytoscape api . the plugin can also be installed using the cytoscape plugin management system, selecting "bioqualiplugin v. <dig> " from the analysis section. alternatively, the bioquali plugin is available via java web start . descriptions and documentation are provided under the "availability and requirements" section.

RESULTS
bioquali plugin functionalities
inputs
the bioquali plugin receives two types of input: an experimental dataset and a regulatory network. bioquali is able to handle large-scale networks, for example, the bacterial transcriptional regulatory networks of e. coli  <cit>  and corynebacterium  <cit> . however, any type of regulatory network is accepted provided that an annotation file with labelled interactions is first imported to cytoscape. the plugin provides a user-friendly annotation interface for classifying interaction labels as {+, -, &, ?} regulation types. this classification will then be used to perform automatic reasoning on behaviours. the {+, -} types represent positive and negative influences among network products; the '&' is a boolean and among signs ; and the '?' represents interactions with unclassifiable effects .

thanks to the annotation functionality, the plugin is compatible with other network import plugins: the user may use regulatory networks obtained using the coryneregnet cytoscape plugin  <cit>  or automatically import the latest update of the regulondb database in order to retrieve the e. coli transcriptional network  <cit> .

the experimental dataset, resulting from the comparison of gene or protein expression levels between two conditions, can be provided as raw numbers representing the relative gene expression levels. a functionality of the plugin enables the user to classify these observations as up- or down-regulated {+, -} using a chosen threshold. the dataset can also be imported as a cytoscape node attributes file  in which certain network products are annotated as '+' or '-', depending on their expression change.

outputs
the plugin outputs three types of results after checking for consistency: a list of local inconsistencies , global inconsistencies  or a list of predictions. the first result  is output when the network presents inconsistencies of the form: "a is the only activator of b, a increases but b decreases". the second type of inconsistency , much more difficult to detect, is a global one: it is shown as a subgraph in which the sign of its nodes or edges contradicts the flow of events at certain steps . the plugin automatically retrieves all the subnetworks of a model that are inconsistent with a certain dataset . for the third type of result, the plugin outputs a list of predictions when a network is consistent with experimental data: it shows fluctuations in the network products inferred as increasing or decreasing in order to consistently explain the experimental data.

the consistency criteria
an obvious way to study the consistency of a regulatory network with expression data is to consider that the expression changes of some network products have to be explained by the connections existing in the network. in order to increase the expression of a gene either one of its inhibitors must be repressed or one of its activators expressed; if this is not the case the model or data should be examined. this type of reasoning also appears in formalisms based on the causal rule  <cit> , and  <cit> . the domain of validity of this rule covers steady state or gene perturbation expression data with small restrictions, as shown in  <cit> . dynamical behaviours caused by oscillatory modules, such as negative feed forward loops in the network, will appear to be inconsistent using this criterion; implying that a system with these characteristics does not shift from a stable steady state to another stable steady state.

the central functionality of the bioquali plugin is to automatically and visually illustrate for the user how to explain experimental observations regarding the regulatory model using the abovementioned reasoning. in fig.  <dig>  we illustrate the automatic reasoning underlying the bioquali plugin. given a known  regulatory network in which some products are observed, the plugin reasons over the whole network in order to determine its consistency. in fig. 2a, we describe a small regulatory network. let us say, for example, that rpsp and rpmc are observed as down-regulated; we then deduce that, as fnr is the only inhibitor of rpsp, fnr should be up-regulated; if this is the case, following a similar reasoning, we conclude that arca should be down-regulated. to conclude our analysis, we observe rpmc as down-regulated, however, its inhibitor is down-regulated and its activator is up-regulated; we should conclude that rpmc is up-regulated, yet its observed change tells us the opposite, therefore, we find an inconsistency between model and data . using the same network but changing the observed data, i.e. rpsp up-regulated and rpmc down-regulated, leads us through another deduction path, in this case it is possible to assign a unique {+, -} change value to fnr and arca that explains the observed data consistently. this unique deduction is called prediction .

the problem with global automatic reasoning is that it is computationally difficult to solve when the system is large enough , even for discretised network influences  and discretised expression changes . the proposed solution, underlying the bioquali cytoscape plugin, uses diagram decisions and is described in the methods section . its main relevance is that it handles the consistency of a network with an expression dataset from a global point of view encompassing all the connections between the network components.

case study  <dig> – chicken fatty acid synthesis transcriptional network
the chicken liver is a major organ, which controls energy metabolism and, especially, fatty acid synthesis. the liver is regulated by complex mechanisms; for this reason, in an initial approach, we used only the most important biological molecules to define a synthetical model. using the bioquali plugin, we confronted this model with transcriptomic data obtained from the feeding-to-fasting transition in the chicken liver  <cit>  . as an output, we detected the srebf <dig> node as a local inconsistency : srebf <dig> is observed in the dataset as down-regulated, while its only activator is observed as up-regulated, thus, the model must be completed in order to explain srebf1's observation.

log <dig> expression ratios of the biological entities of the fatty acid metabolism network during the feeding-to-fasting transition in chicken liver after  <dig> hours  <cit> .

in order to correct this inconsistency we completed the model by introducing activated forms of nuclear receptors produced by physical interactions with other molecules. the new nodes were active-ppar , active-nr1h <dig> , and active-srebp . in the new model, targets of the nuclear receptors ppara, nr1h <dig>  and srebf <dig> became targets of their active forms: active-ppar is an activator of the transcription of acaca, fasn, acly, scd <dig>  fads <dig>  and fads <dig>  <cit> ; active-nr1h <dig> is an activator of srebf <dig> and fasn, that also indirectly activates acly, acaca, and scd <dig>  <cit> .

to comply with this level of detail, we added two nodes standing for control of the activation of the nuclear receptors: scap controls the cleavage of srebf <dig> while pufa metabolites  activate the formation of active-ppar from ppara. they also inhibit the formation of active-nr1h <dig> and active-srebp  <cit> . this larger network was globally consistent and output predictions for the nodes without expression values, such as pufa and active-srebp . these predictions were confirmed by the literature  <cit> . this analysis suggests that control of nuclear receptors by pufa metabolites is absolutely necessary to consistently explain the transcriptome experimental data during fasting.

case study  <dig> – e. coli large-scale transcriptional network
the e. coli transcriptional regulatory network was obtained from the regulondb database  <cit>  on november  <dig>  it consisted of  <dig> tf-gene regulations classified according to three types: activation, repression, and context-dependent effect; we assigned '+', '-', and '?' signs respectively to these three types of regulation. using the bioquali plugin, we visualised a region where this network was inconsistent, see fig. 5a . in order to correct this inconsistency we added the sigma-gene regulations , resulting in a network of  <dig> regulations. this larger network was globally consistent, meaning that it may entail stable behaviours when experimental data is added to it.

we compared the globally consistent regulatory network with two experimental datasets:  a small literature dataset obtained from regulondb in which  <dig> proteins/genes were carefully verified as increasing  or repressing  during exponential-stationary growth shift; this was a heterogeneous dataset since the changes were reported at different time-points.  a genome-scale dataset obtained by comparing two e. coli affymetrix expression compendia  <cit> ;  <dig> {+, -} gene expression changes were obtained by comparing the stationary growth phase with the early-log growth phase in the e. coli k <dig> strain  <cit> . the small dataset of observations was initially inconsistent with the regulatory model . we corrected it by adding two positive regulations from the sigma factor rpod to ihfa and ihfb according to a recent publication on e. coli functional regulations  <cit> . this network correction explained the observed repressed  effect of ihfa. the consistency of the corrected model with the small dataset reflected  <dig> positive and negative fluctuations in the network molecules . we confronted these predictions with the affymetrix ratios dataset , observing that the predicted fluctuations agree in a range from  <dig> % to 88%, depending on whether they were compared to the full dataset or only to 8-fold significant observations. we also confronted the e. coli corrected regulatory model using the genome-scale compendium, obtaining  <dig> global inconsistencies between the model and the dataset when using 3-fold expression changes .

finally, we compared the bioquali plugin with the coma cytoscape plugin  <cit> . the two approaches propose different ways of reasoning to determine the consistency of a regulatory network with expression data. the main advantage of the bioquali plugin, compared with coma, is its ability to determine a global consistency that takes account of all the influences  that a node in the network receives. the coma plugin cannot retrieve any of the multiple global inconsistencies we reported in fig.  <dig>  we also obtained different results when checking the consistency of the corynebacterium glutamicum regulatory network with the expression dataset provided in  <cit> . the bioquali plugin detected that the network model was consistent with the 4-fold gene expression changes and it calculated  <dig> predictions, whereas the coma plugin output  <dig> local inconsistencies using the same data. these inconsistencies were not noticed by bioquali since it assumes that non-observed nodes, or nodes with small change in expression, may influence other genes by post-transcriptional effects . an example of this situation is illustrated in additional file  <dig> 

in table  <dig>  we summarise the time performance obtained using the bioquali plugin to visualise all the results mentioned above on a standard pc, comparing them with those obtained using the coma plugin. additionally, in order to measure the prediction performance of the bioquali plugin, we performed 10-fold cross-validation over 2-fold significant changes of the genome-scale dataset. as a result we obtained that our predictions had a  <dig> % of precision and 22% of sensitivity on average. this reflects that our consistency criteria can generate good predictions, even when using imprecise data.

this table summarizes the results and time performance  obtained after the consistency analysis of the large-scale regulatory networks and experimental datasets used to illustrate the bioquali plugin. we compared the results obtained with our plugin to those obtained with the coma plugin using the same data. using bioquali, we obtained four types of results: local inconsistencies , global inconsistencies , only network consistency , or predictions . using the coma plugin only local inconsistencies are reported. the difference in the types of results is reflected in the time the plugins took to perform the computation. we tested the time performance with a standard pc.

CONCLUSIONS
the main purpose of the bioquali plugin is to enhance the visualisation of predictions and inconsistencies in order to facilitate the exploration of large-scale networks with regard to an experimental protocol. in concrete terms, the bioquali plugin derives automatic deductions from observed behaviours and identifies subgraphs with unexpected behaviour. in our opinion, these global inconsistent subgraphs are the most interesting network areas: either an interaction is missing or a dynamical process occurs that cannot be modelled by intuitive reasoning on variations. in both cases, understanding the mechanisms involved in the inconsistent areas of a network will undoubtedly generate new biological insights. for example, in the fatty acids metabolism model, the inconsistency detected using the bioquali plugin showed that the initially missing control of nuclear receptors by pufa metabolites was essential to explain the experimental observation.

regarding the e. coli analysis, we conclude that the regulondb database proposes a model of regulations that is highly consistent with the significant fluctuations identified by microarray outputs in the exponential-stationary growth shift. we also illustrate how a small set of variations collected from heterogeneous sources can highlight a new and larger consensus of changes in the network products during this condition. these predicted changes express how the fluctuation in a larger part of the network has to occur in order to explain our observed data.

further improvements to the bioquali plugin will consist in adding functionalities related to sign inference in oriented but unsigned regulatory networks  <cit> , incorporating the zero value as a fourth sign of expression change or regulation, adding the possibility of representing an interaction as a boolean function, and building a user-friendly interface for experimental design. also, we are currently working on setting up a soap architecture in our web server in order to facilitate communications between the bioquali plugin  and the genouest web server.

