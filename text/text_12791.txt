BACKGROUND
the life sciences of today is an information-heavy field with extensive use of high-throughput methods that generate large amounts of data at an ever-increasing rate  <cit> . as the quantity of data increases, proper methods for handling the data become important. good data handling with standardization is important not only in the analysis step, but also for the data generation step  <cit> . modeling wet-laboratory experiments in a computerized information system is a non-trivial task and needs a flexible system capable of supporting the daily laborative work related to microplates, which are the main media used in high-throughput assay systems.

general systems for ultra high throughput screening need highly optimized and streamlined platforms  <cit> , whereas lead optimization systems need to be more flexible and handle a more fluctuating range of plate formats and layouts  <cit> . this study was devoted to the development of such a flexible laboratory information system  for microplates, termed "brunn". bioclipse  <cit>  was choosen as a platform to base the lis on. the system is designed to help in refining raw data and encourages re-use of layouts for the plates, brunn thus focuses on providing a platform for fluctuating plate layouts; here we demonstrate it on a fluorometric microculture cytotoxicity assay  in use at the university hospital of uppsala, sweden.

microplates
microplates were introduced in the early 1960s  <cit> . since then they have become an integral part of daily laboratory work in most disciplines, including drug discovery and clinical routine testing. microplates consist of an array of wells. the outer dimension of microplates is standardized, but the plates are available with different numbers of wells and volumes. microplates can be handled both manually and by robots, and they facilitate sample handling and serial dilutions by transferring solutions across rows or columns in parallel. they can be manufactured with different optical properties, such as for fluorescent read-outs, colorimetric assays, and microscopy. in addition, the plastics can be given different properties, e.g. making a sample adhere, or not adhere, to the walls of the well. moreover, wells can be shaped in different ways . microplates are available in a variety of standardized densities, where  <dig> rows ×  <dig> columns =  <dig> wells with a volume of 200- <dig> μl are the most suited to be handled manually. much denser plates are also available, among which 384-well plates can be handled manually, though this is rather painstaking. plates with higher densities than this are difficult to use; one reason for this is that the small volumes of liquid in each well evaporate quite fast.

microplates allow large quantities of data to be generated fast. most assays give one result per well, but it is also possible to perform time-resolved assays with one measurement per time-point per well. in high-throughput settings, thousands of measurements are generated by automatic plate handling robots, of which many types are available on the market. collecting high-throughput data in a laboratory information system gives great benefits. for example, assays commonly exhibit a systematic variation across the geometry of the plate, which necessitates controls to be distributed in a statistically secured way over the plates. in order to handle this effectively a lis for microplates is required.

bioclipse
the first version of bioclipse was released in  <dig> and bioclipse has since then been in constant dynamic development and improvement. bioclipse is an open source software integration platform for the life sciences, providing a graphical point-and-click workbench for chemo- and bioinformatics data. bioclipse features a plug-in-based architecture which makes its possible to seamlessly integrate virtually any functionality in bioclipse and make it function with any other bioclipse functionality. among its functions can be mentioned qsar functionality  <cit> , site-of-metabolism prediction  <cit> , semantic web support  <cit> , remote web services  <cit> , browsing of large compound collections, editing of chemical structures, and a reporting system based on jasperreports  <cit> , which can be used for generating printable reports with text and diagrams. on top of this, a very powerful feature of bioclipse is also its javascript environment through which the entire application can be scripted  <cit> .

bioclipse inherits the top-of-the-line plugin structure of eclipse, which provides an extensible environment where each bioclipse installation can be tailored with the features needed by a certain user. choosing bioclipse as the platform for brunn means that brunn does not need to reinvent the proverbial wheel, but can use suitable parts of bioclipse already available, and it allows for the easy integration of the microplate assay data with the other features of bioclipse. the bioclipse workbench consists of editors and views. editors follow the load/save pattern and many instances of the same editor can be open at the same time, whereas views reside around the editors and shows different information; for example a table of properties for the selected resource.

implementation
architecture
brunn ships as a set of plugins for bioclipse. for example, a core plugin contains the business logic, and a user interface plugin contains the graphical visualisation parts.

a simplified version of the data model is shown in figure  <dig>  the relational database stores measurements in a general way, and each well has a queue of operations that can be performed on it. brunn currently uses only one standard measurement operation, but with the elected architecture it is relatively easy to adopt brunn to a workflow where multiple measurements or operations are performed on each well. the data model contains a base entity abstractsample, which can be built upon for creating samples other than the currently supported ones.

brunn uses hibernate  <cit>  for mapping objects to the relational database, which is implemented in mysql  <cit> , and the spring framework  <cit>  to leverage communication with mysql.

user interface
brunn's user interface consists mainly of the brunn explorer - a tree view for browsing resources - and a number of editors used for editing and visualising them . computer representations of plates are created using an iterative process where each step is stored as one resource type. table  <dig> contains a complete list of brunn resources visible in the brunn explorer.

plates in brunn are built in a stepwise process where the result of each step is stored in the database as one resource type.

RESULTS
brunn is modeled around the workflow exemplified in the left part of figure  <dig> which shows an example use case for brunn. platetypes of any size can be defined by giving the number of rows and columns. . when creating a platelayout, the user defines which wells should be used as controls, and which for treatments. in this step, excel-like formulæ can be entered for calculating, for example, survival index in percent . substances are placed on the plates in batches. all plates in a batch conform to a masterplate defining which substances are in which wells and in which concentrations. when a plate is to be used, it is retrieved from cryostorage and samples are seeded on it and assay specific steps are taken to retrieve raw data which are imported into brunn. imported data can be curated manually. values such as si % can be calculated using values from the wells and the formulæ defined when creating the platelayout.

dose-response curves can also automatically be generated and ic50-values calculated.

auditing and users
brunn has two user levels, administrators and regular users. an administrator can do what all regular users can do, as well as create new users and undelete resources which previously have been deleted. brunn keeps track of who created what resource and when. when a resource is selected in the brunn explorer, the properties view will list creator and creation date for that resource, as shown in figure  <dig>  after a resource has been created in brunn, for security reasons, it can actually not be deleted - only marked as deleted.

defining a platetype
it is possible to create plates of any size by defining a platetype with the desired number of rows and columns. there are no restrictions in the data model for the sizes of the plates, but as mentioned above currently not all parts of brunn support sizes other than 96- and 384-well microplates.

creating a platelayout
when working with microtiter plates it is common to use the same general layout and calculate the same values for the same wells for multiple plates. in order for the user to only have to input the information once, a reusable platelayout can be created. platelayouts are created from platetypes. the platelayout editor has a point-and-click interface for placing well markers symbolizing different groups of control, blank and treatment wells. when control markers are placed, functions for average and standard deviation for the wells with those markers are automatically created. the platelayout editor also contains a user interface for creating other user-defined plate-specific functions.

in order to compensate for drift within the plate, different control wells can be used when calculating things like survival index for various wells. this means that well-functions, which are containers for well-specific calculation formulæ, for example si %, need to be created manually only once for each group of wells using the same control.

well functions and plate functions make it possible for the user to create a platelayout, tailored to calculate exactly what the user is intrested in; for example survival index or various statistical measures used during primary screening. 

placing substances - defining a masterplate
plates are normally prepared and cryostored in batches where all plates in one batch have the same substance with the same concentration at the same location. in a subsequent step, they are seeded with samples. creating such a batch of plates corresponds to creating a masterplate in brunn.

in the masterplate editor, the substance markers placed in the platelayout editor are associated with a substance with a different concentration for each well. this is done by dragging-and-dropping a substance to a marker and creating a dilution series in a dialog window.

adding samples - creating a plate
the seeding of a physical plate with samples corresponds to creating a plate in brunn. the entity plate corresponds to a microplate with a barcode, substances, and samples seeded on it. the dialog window for creating a plate lets the user specify barcode, plate name, cells to seed and a masterplate to base the new plate on. once a plate has been created, data can be imported to it.

data importing
results are imported into brunn from a text file containing raw data from one or many plates. brunn supports imports from two different file formats, namely data log files from the multipurpose reader fluostar optima  and plain comma separated files. files produced by an automated system may already contain barcodes, but in case the file lacks a certain barcode, it must be provided during the import step as shown in figure  <dig>  raw data is connected to plates in brunn matched by barcodes.

data browsing and curation
once raw data has been imported, the plate editor can be used for viewing the results for one plate. the plate editor has multiple tabs where data can be viewed in different ways .

by using the proper tabs of the plate editor, wells can be marked as outliers, effectively removing them from further calculations. to help the user identify outliers the calculation functions can be viewed. for example, when a plate layout is created with markers indicating wells used for blank and control values, functions like coefficient of variance as percent  for all wells with those markers are automaticly created, or if doing primary screening the user can write a plate function for standard deviation of all screened substances and for example use it when creating well functions, like z-scores  <cit> .

the last tab in the plate editor shows a graphical report containing dose-response curves and automatic calculations of ic <dig>  the dose response curves are drawn with straight lines between the points and the ic <dig> values are calculated by identifying the two points closest to 50% and then doing a linear aproximation between them to get a value for ic <dig>  this is the default behavior of brunn because when working with cell assays the shape of the curves tend to vary a lot. however, if the assay gives output suitable for a sigmoidal curve fitting there is a user configurable preference that toggles ic50-calculation by fitting the hill equation using non-linear least-squares regression with the org.apache.commons.math  <cit>  library.

accessing the brunn database in bioclipse
the data in the brunn database can be reached via the bioclipse interface through the scripting language javascript. this means that more advanced analyses based on brunn data can be performed by a user familiar with this tool. by retrieving data from the database, data format consistency is guaranteed regardless of who made the actual lab work.

an example of a javascript script  <cit>  performing a double-sided t-test on brunn data can be found at the myexperiment  <cit>  web page. 

built-in documentation
bioclipse provides a built-in help system where the user can either browse -- much like one can browse the web -- or have a help view open which shows context-specific assistance for what the user is doing for the moment. the documentation system also features small stepwise instructions called cheat-sheets for common operations. brunn takes advantage of both these features. table  <dig> lists the cheat-sheets currently shipping with brunn.

a cheat-sheet is a stepwise series of instructions inside the program which can help the user remember how certain tasks are performed, or function as a tutorial.

example use case: fmca
while brunn was developed to be general enough to handle virtually any type of microplate assay, it was validated on a microplate-based fluorometric microculture cytotoxicity assay   <cit> , an assay type that is in wide use for measuring cytotoxic and cytostatic effects of chemical compounds in vitro. it is a cell viability assay, and the specific one used herein is in use at the division of clinical pharmacology of the uppsala university hospital.

there is a trade-off between testing as large a number of substances as possible on one plate with enough number of replicates, and testing at a sufficient number of different concentrations. hence, the layout of the plates  is continually improved, and there are multiple layouts being used side by side.

discussion
control markers and brunn
when working with microplates it is common to use control markers to measure systematic errors. there are statistical methods that complements this sort of markers during primary screening, like for example z-scores, which can be added as well functions in brunn, but when doing dilution series they are not applicable. brideau et al  <cit>  lists the following four potential problems with the control based approach:

 <dig>  does not handle positional variability

 <dig>  biases may be added by the controls

 <dig>  control variability is not accounted for

 <dig>  not clear how to handle outliers

brunn uses built in support for control markers for catching systematic errors and at least partly provides solutions for dealing with these potential problems. in the fmca example the position variability problem  has been approached in two ways. first, there has been trouble with different values in the outermost wells on the plates and hence they have not been used for measurements. second, there are different control markers on the plate and the closest one is used in the calculations. to keep track of control variability  the cv % is calculated both for each control group individually and all controls together.

these cv values can be used as a hint for identifying outliers . still the outlier problem is always present and brunn does not provide the final solution for how to handle outliers. it is important for the user to have issues like this in mind when designing the platelayout. brunn provides a framework where things can be set up and organized in a systematic way.

comparison of brunn with other open source lis
there are two other open source lis systems for microplate assays which deserve to be mentioned, namely slims  <cit>  and screensaver  <cit> . slims is dedicated for chemical genetics and handles large-scale screening data. screensaver also handles high-throughput screening facilities. however, slims and screensaver lacks the flexibility of brunn, as the two former are mainly directed towards primary screening where substances are tested in one concentration to find hits or misses according to some threshold value. when doing mechanistic classifications  <cit> , multiple concentrations need to be assayed and the half maximal inhibitory concentration  calculated from the accumulated data. in the latter situation, which is the situation brunn is designed for, the goal is rather to learn more about fewer substances. moreover, the integration of brunn with bioclipse allows the experienced bioclipse user to seamlessly integrate the brunn features with a wide plethora of ever growing bioclipse chemobioinformatics resources and plugins.

CONCLUSIONS
brunn is an open source laboratory information system for microplate based high-throughput screening, capable of handling a multitude of different plate layouts. brunn can be used to create dose-response curves and extract ic50-values. brunn uses a point-and-click interface based on the graphical workbench bioclipse and is easy to use and allows integrating data with the multitude of other resources available in bioclipse.

brunn ensures that researchers can retrieve data in a consistent manner regardless of who performed the actual lab work. by constructing platelayouts errors from copying and pasting in spreadsheets can be avoided. the more advanced user can extract brunn data using the bioclipse scripting environment.

although the current implementation is very much tailored for the daily work at the division of clinical pharmacology at uppsala university hospital, the application contains many more general solutions that allow it to be adopted and reused at other locations. the plugin architecture of bioclipse provides a great flexibility and enables reuse of components built by other bioclipse projects. it also makes it easy to build plugins for integrating brunn with other bioclipse features.

basing brunn on bioclipse has directly brought in a help system including such as cheat-sheets, and scripting possibilities as well as access to a reporting framework . this means also that it will be straightforward for the experienced user to take advantage of the chemobioinformatics tools in bioclipse.

availability and requirements
project name: brunn

project home page: http://brunn.sourceforge.net

operating system: platform independent

programming language: java

license: eclipse public license 

restrictions to use by non-academics: none

code: http://github.com/jonalv/bioclipse.brunn

an oracle virtualbox image  <cit>  based on ubuntu with complete installation and some test data can be downloaded from http://pele.farmbio.uu.se/trybrunn/brunnonubuntu.zip

authors' contributions
rl and ca conceived the system. ja, ca and os designed it. ja implemented it, and rl, ca, os and jw supervised the project. ja, ca, os and jw wrote the manuscript. all authors read and approved the final manuscript.

