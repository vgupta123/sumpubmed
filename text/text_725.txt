BACKGROUND
the rapid development of high-throughput technology and increasing amounts of biological data promises greater insight into the complex interactions that govern cellular function. in particular, gene expression measurements can be used to infer network relationships between genes in a cell, potentially uncovering important interactions that perturb the cellular state  <cit> . understanding these network relationships between genes can lead to greater insight into cellular processes, such as the cell cycle or disease progressions  <cit> . traditionally, gene networks have been analyzed as static entities. however, biological processes such as development and disease progression evolve over time and react to changing environments. representing these dynamic interactions with a single static network limits the biological insights that can be derived from analysis. recently, biologists have attained a deeper knowledge of the functional and regulatory underpinnings of complex biological processes by studying dynamic gene-gene relationships  <cit> . in addition, recent algorithmic advancements allow these time-varying networks to be reverse engineered from a time series of molecular profiles. as techniques in dynamic network analysis continue to advance, tools that can visualize these complex networks will become increasingly important to understanding the systematic rewiring of the transcriptional regulatory circuitry that controls cell behavior.

dynamic network analysis begins with data collection and the creation of a series of gene-gene interactions  from the data . dynamic gene expression data is generally available as microarray samples that are collected over a time course or under multiple conditions. many cutting-edge machine learning techniques are available to fully leverage the information stored within the data to create a series of related, evolving gene networks. here, we list a few of these strategies. tesla and keller builds off sparse regression techniques  <cit>  and tv-dbn  <cit>  estimates a chain of evolving networks using time-varying dynamic bayesian networks. in addition, robinson and hartemink suggested learning a non-stationary dynamic bayesian network using markov chain monte carlo sampling  <cit>  and lozano et al.proposed a different approach that uses the notion of granger causality to model causal relationships among variables over time  <cit> . in contrast to linear time-varying networks, treegl is a method for analyzing networks that evolve over tree-shaped genealogies   <cit> . each of these strategies can be used to recover a series of networks from dynamic gene expression data for further analysis. 

once a series of networks is available for analysis, these networks must be explored to find the subtle  changes in network topology. analysts can examine the changing network topology to find key regulators that drive the network evolution. at this point, the focus becomes more exploratory than query driven. information visualization, “the use of computer-supported, interactive visual representations of data to amplify cognition,” as a field, touts its strengths at generating exploration-based insights, explanatory and persuasive interaction, and aesthetic representations  <cit> . visualization techniques excel at providing an explanation of the overall structure of the data or finding weak or unexpected patterns most easily recognized by humans  <cit> .

because visualization naturally enables gene network analysis, many visualization tools have been developed to explore biological networks including cytoscape  <cit> , osprey  <cit> , visant  <cit> , and graphle  <cit> . although many tools exist, the state-of-the-art tools in biological network analysis do not support the exploration of dynamic networks  <cit> . while information visualization researchers have developed and evaluated techniques for dynamic network analyses of numerous kinds in other contexts, including social networks  <cit> , internet traffic networks  <cit> , and even literature networks  <cit> , these tools are not easily applicable in the biological context . additionally, in our own experience exploring dynamic gene networks, we have found that multiple networks need to be visualized simultaneously and in real-time. to explore these networks, analysts must conveniently load and view a large number of networks and rapidly switch between networks to compare the topologies. thus, given our experience and current visualization research, we have found that the visualization tools available for gene network analysis, such as cytoscape, are insufficient to support the analysis of a large number of rewiring networks.

we present tvnviewer, an online visualization toolspecifically designed to support the discovery of spatial or temporal changes in network topology via exploration  <cit> . in addition to facilitating exploratory analysis, tvnviewer allows analysts to create the intuitive visualizations required to present their discoveries. in this paper, we demonstrate how the visualizations in tvnviewer facilitate dynamic network analysis through the analysis of two real datasets. the first dataset is a yeast  microarray dataset that contains  <dig> genes measured at  <dig> time points across two cell cycles  <cit> . the networks at each time point have been recovered using time-varying dynamic bayesian networks   <cit> . the second dataset is a breast cancer progression and reversal dataset  <cit> ; breast cells grown in a 3d culture begin as normal cells, become malignant , and are then reverted by drugs that inhibit various signaling pathways. the networks have been recovered using treegl  <cit> . tvnviewer can be used to expose the similarities and differences of these cells states to reveal the effectiveness of various drugs.

the outline of the paper is as follows: we first discuss the implementation and design of tvnviewer and then show how the visualizations available in tvnviewer enable the analysis of the yeast and breast cancer datasets through several visualization strategies. finally, we demonstrate the power of dynamic network analysis in tvnviewer via biological analysis of the breast cancer and yeast datasets.

implementation
tvnviewer runs as a freely available online visualization tool, accessed from http://sailing.cs.cmu.edu/tvnviewer. we present several resources for analysts to learn how to use tvnviewer: extensive online documentation, video tutorials, and five example preloaded networks. analysts who create an optional login can store up to ten datasets directly on the tvnviewer website. however, all tvnviewer functionality is available without a login through a temporary session. data for tvnviewer is stored securely on the website in a mysql database. analysts can upload data onto the website as described in the online documentation.

tvnviewer itself is implemented using adobe actionscript, and thus runs on all major browsers with the freely-available adobe flash plug-in. tvnviewer is an open-source project; the source code for tvnviewer can be downloaded from the main website. to implement tvnviewer, we built off of flare, an easily-customized, open-source web-visualization project .

in addition to providing different visual representations of the data, tvnviewer allows the analyst to customize network views to the analyst’s preferred visual representation. specifically, the analyst can adjust the size of the data nodes, choose to have the data nodes sized based on degree, adjust the font size of the labels, or change the visual thickness of the edges. based on the size of the analyst’s screen, tvnviewer dynamically resizes the visualization to ensure that all labels and nodes fit within the visualization window. the opacity of each edge in tvnviewer represents its weight in the network and can be adjusted by the analyst. additionally, the analyst can select what edges and node labels are visible in the visualization. for example, consider the case where a network has many edges with a low weight. in this case, the analyst increases the minimum edge threshold and all edges below this threshold disappear, revealing the strongest interactions. another scenario is where the analyst is interested in only a handful of genes or gene groups. in this scenario, the analyst can remove all other labels from the visualization, highlighting the specific genes of interest. providing customizable, interactive visualizations like these allows analysts to enhance their own cognition by putting their knowledge into the analysis. rather than constantly having to remember numeric or ordinal values for edge weights, for example, the visualization off-loads those considerations to the visual cortex, allowing the analyst to focus on analytic activities rather than the trivia of edge weights which are only valuable for the analyst in so far as they generate insights  <cit> .

RESULTS
in this section, we highlight some oftvnviewer’s visualizations available for dynamic network analysis. in each case, we use the yeast or breast cancer data to show how an analyst would use tvnviewer to discover patterns and information in the recovered set of networks. after the demonstrations, we will discuss the results of using tvnviewer for dynamic network analysis.

one-level network circle view
an important challenge in dynamic network analysis is the recognition of subtle changes in the network topology over time. in the one-level network circle view, the analyst sees all the genes in the dataset aligned in a circle layout. the genes are represented by circles  and the connections between genes are represented by edges . the genes areclustered to minimize the number of edges going across the circle, keeping most edges local to tight clusters of genes around the edge of the circle. genes are colored by this clustering; details are provided in the online documentation describing how this is done. also, the analyst can use the tree view to view the sorting tree of how the nodes were clustered.

in the one-level network circle view, the analyst can step through the sequence of networks in real time to explore the rewiring of the gene networks. we demonstrate this feature in figure  <dig>  where we show a subnetwork of genes at  <dig> time points from a large network derived from yeast gene expression data. the top graph in figure  <dig> represents the gene network at time  <dig>  and all nodes are labeled by the names of the genes they represent. to enhance the figure’s readability, we have utilized tvnviewer’s option to remove gene name labels in the graphs representing the other time points. the  <dig> time points in this figure represent two cell cycles where the first occurs between time point  <dig> and  <dig> and the second occurs between time point  <dig> and  <dig>  the one-level gene network view in tvnviewer makes the appearance and disappearance of edges in the network readily accessible to the analyst, without the awkward integration or customization required by other network visualization tools. the analyst can quickly identify that this particular network is active in the beginning of each cell cycle which corresponds to the g <dig> phase of the cell cycle.

two-level network with go annotations
often, there are more genes in the network than can be visualized by using circle view. in this case, it is more helpful to group similar genes by function  groups) and then visualize the interactions amongst the groups. tvnviewer provides a two-level network view specifically designed to allow high level exploration of the network at the group level, while still being able to zoom in to explore individual gene interactions. consider analyzing a t <dig> malignant breast cancer cell network with  <dig> genes , generated using treegl  <cit> . a two-level network view using second level go biological process groups is shown in figure 3a. one can zoom in on a specific group, such as “necrosis” , revealing the genes associated with that group. the analyst can zoom even further by selecting a particular gene to reveal its specific interactions. for example figure 3c shows that the tubb gene  interacts with genes from many groups, most notably the signaling process and biological adhesion groups. this makes sense since tubb encodes proteins that are important to gtp binding and gtpase activityin addition to its involvement in the structure of the cytoskeleton. thus, the two-level view provides the analyst with both a high level perspective of the networks while simultaneously allowing him to focus on particular genes. 

directed graphs
tvnviewer can be used to visualize both directed and undirected graphs. directed graphs are valuable if an analyst is interested in cases where the direction of the edge is significant, such as in a regulatory cascade. the initial layout of the graph is not changed in the case of directed graphs for the circle and force views. however, as the analyst hovers over different genes, tvnviewer will highlight all of the gene’s in-edges in red, out-edges in green, and bidirectional edges in cyan. if an analyst is interested in one particular gene or gene group, he can select that particular node and tvnviewer will isolate that node and show only the genes connected to it. for example, in figure 4a, we have selected mig1in the yeast dataset; all the edges connected to it are highlighted in red indicating that they are in-edges, implying that they may have a regulatory relationship with mig <dig>  however, in figure 4b, the selected node ino <dig> has only out-degree nodes since the edges connected to it are green. this suggests that these genes may be regulated by ino <dig>  these regulatory relationships may change across time or space, and the analyst can use tvnviewer to trace these relationships using directional information.

stack view
while the circle layouts allow analysts to understand how gene networks rewire over time or space, the stack view visualization is better fit for exploring how specific interactions between genes or gene ontology groups change over time. for instance, we would like to be able to view how the biological functions of the network change over time, such as over the course of a cell cycle. this can be done by grouping the genes by their go functional group to visualize with the stack view . in this view, the out-degree of each go category is stacked, one on top of the other. thus, the variation in individual go categories is clear, and the overall variation in out-degree is emphasized. this visualization clearly shows that the overall network is active during g <dig> phase and we observe that genes in the go categories: atp binding, electron transport chains, and phospholipase c activity are especially active. this is expected as these are all functions involved in cellular respiration, which is the signature activity of the g <dig> phase of the cell cycle. by hovering over the go category in the stack; both the go category and its degree at the given time point is displayed.

the analyst can select specific go categories of interest by listing them using the filter box, or by simply selecting them on the plot. additionally, if the analyst is interested in specific genes, he can go past the group level and generate stack plots of genes of interest. although it is relatively simple to implement selection and filtering functions in a visualization, the impact provided by these features is substantial. by allowing analysts to rapidly and simply subset their data while highlighting items of interest, we allow analysts to play “what if” scenarios, which may combine a number of highlights or filters. these visualization features, comparable to dynamic queries, drastically lower the cost of exploring and experimenting with the data and evaluating the outcome of varying queries in comparison to database queries or other approaches  <cit> . in figure  <dig>  we use filters on the stack view to show recurring go groups including electron carrier activity, alcohol dehydrogenase  activity, and various enzymatic processes. figure  <dig> shows that these groups are active between time points 1– <dig> and 14– <dig>  the timing is consistent with g1-phase which occurs at the beginning of each cell cycle. this observation is expected biologically; we expect that the cell is growing during g <dig>  and thus cellular respiration, which requires electron carrier activity, and nadh activity, and other enzymatic activities are occurring. 

analysis of temporally dependent gene-gene interactions across the yeastcell cycle
budding yeast  serves as an excellent model for dynamic network learning because the molecular mechanisms of the cell cycle control system are well known  <cit> . budding yeast follows the eukaryotic cell cycle, which is divided into  <dig> distinct phases  <cit> . the first is g1-phase , which is the interval between mitosis and dna synthesis where the cell is actively growing. this is followed by s-phase  during which dna replication occurs. the cell continues to grow during g <dig>  and then divides in the m or mitosis phase. for the purpose of this study, we group the g <dig> and m phase and refer to it as g2m.

studying the yeast cell cycle is a fitting scenario for utilizing tvnviewer as both an exploratory tool and a method of validation.we first generate a series of networks across time from yeast gene expression data using tv-dbn  <cit> . then we select subnetworks that are active during certain cell cycle phases and observe their temporal activity as it relates to their function. for example, figure  <dig> shows a network with genes that were found to be active during the g2m-phase. here, we observe functional groups that are clearly relevant to m-phase such as chromosome segregation, mitotic spindle elongation, and telomere maintenance. in addition, we observe go groups like dna repair, recombinational repair, and response to dna damage stimulus which are indicative of g2-phase. one of the major checkpoints occurs in g <dig> phase, whereby cells are arrested in response to damaged or unreplicated dna  <cit> . thus, we can conclude that these functions are aligned with what we expect from genes that are active in g2m.

an important characteristic of cell cycle data is that it is repetitive. thus, we should observe recurring patterns in the time-varying networks. figure  <dig> shows a set of genes, active in s-phase. the colored layers of plots clearly indicate that the interactions between the genes repeat over the two cell cycles; the first cell cycle occurs between time points 1– <dig> and the second during time points 13– <dig>  if we take the same subnetwork shown in figure  <dig> and annotate the genes using go functional groups, we can observe which groups are active over the time series . similar to figure  <dig>  the colored layers show the go groups repeat across the two cell cycles. the go terms listed are also relevant to s-phase as they indicate the presence of genes involved in dna binding, helicase activity and atp binding.

from this preliminary overview of the functional significance of the genes provided by tvnviewer, we can then focus on particular genes and investigate supporting biological literature that can both confirm and explain why these genes interact. for instance, the gene hmi <dig> was found to be a dna helicase and experimental results indicated that it localized in the mitochondria and was required for the maintenance of the functional mitochondrial genome  <cit> . the unwinding activity of the helicase requires atp hydrolysis and has a 3′ to 5′ polarity  <cit> . another gene in the subnetwork is ynl208w. while not much is known about the function ofynl208w, the protein was detected in purified mitochondria  <cit> . interestingly, experimental evidence places both hmi <dig> and ynl208w at the same cellular location, supporting the prediction by our network that these genes interact.

studying developmental processes such as the yeast cell cycle requires the integration of temporal and functional information. by using tvnviewer, we identify the recurring patterns of the gene subnetworks in s-phase.we also find that the functional roles of the genes in the network are consistent with the timing of network activity. this analysis canguide the exploration of biological literature to link the gene-gene interactions and formulate a summarizing regulatory mechanism.

exploring the progression and reversal of breast cancer
using tvnviewer, we also investigate the progression and reversion of breast cancer cells using dynamic network analysis. functional analysis of 3d culture models of breast cancer has led to a deeper understanding of the effect of a cell’s microenvironment on tumorgenesis and metastasis  <cit> . it was found that micro-environmental factors and signaling pathways have a dramatic influence on the growth dynamics and malignancy of the cells  <cit> . furthermore, treatment with inhibitors of various signaling molecules causes reversion of t <dig> cells into morphologically-normal-looking cells . our objective is to analyze the functional differences amongst the different cell states.

we first used treegl  <cit>  to reverse engineer gene networks for each cell state. as shown in figure  <dig>  compared to s <dig> cells, t <dig> cells display increased activities in cell proliferation and locomotion, both of which are indicative of cancer. furthermore, we see that that the t <dig> network exhibits significantly more interaction with the extracellular matrix and other components related to the cell membrane such as the vesicle . this is expected since it has been found that a cell’s interaction with its microenvironment affects tumorgenicity and metastasis  <cit> . finally, one can see that the t <dig> network also displays increased signal transducer activity . signal transducers and activators of transcription, especially those associated with cytokine and growth factor activity have been implicated in tumorigenesis  <cit> . 

as we can readily observe from the figures, the t4r cells are different from the s <dig> and t <dig> cells, but are also distinct from each other. the mmp-t4r network is very sparse and thus has few interactions. notably,cell proliferation and other indicators of cancer are absent in mmp-t4r cells. on the other hand, the pi3k-mapkk-t4r cells still display considerable cell proliferation and interaction with the extracellular matrix. pi3k-mapkk –t4r cells also exhibit more activity such as tetrapyrole binding, demethylase activity and carbohydrate binding, all of which are absent in the other cell states. collectively, these data suggest that although t <dig> cells can be morphologically reverted back to the normal-looking t4r cells, the underlying molecular mechanisms in the reverted cells are different from those in either s <dig> or t <dig> cells and from one another.

CONCLUSIONS
the cellular mechanisms responsible for progression through the cell cycle or the development of disease are complex and dynamic. thus, many machine learning approaches have been designed to construct dynamic networks that model these processes. to fully exploit the information captured in these networks, we must have the visualization framework to simultaneously analyze a series of networks. however, current network visualization tools require extensive adaptation to explore a time series of networks. in many cases, this would require the generation of separate network visualizations, which cannot be easily compared and explored in real time.

in this work, we have demonstrated tvnviewer, a new visualization tool built for exploring the dynamic relationships between genes across a time series or in response to environment or disease. tvnviewer provides a clean interface that can be used to enable high-level functional and topological analysis in addition to highlighting more subtle network interactions over time. it facilitates a convenient and intuitive analysis of a yeast and breast cancer dataset that would not be possible using other gene network visualization tools. to conclude, tvnviewer can enable researchers to leverage the networks produced by machine learning and statistics methods through presenting the temporal context and combination of gene-level and functional-level information to allow for extensive biological analysis and interpretation.

availability and requirements
·project name: tvnviewer

·project home page:http://sailing.cs.cmu.edu/tvnviewer

·operating system: platform independent

·programming language: actionscript

·other requirements: adobe flash player

·license: noncommercial research use

·any restrictions to use by non-academics: license needed

competing interests
the authors declare that they have no competing interests.

authors’ contributions
rec developed the software and drafted the manuscript. jx and ap tested the software, performed the biological analysis, and drafted the manuscript. pk provided a visualization perspective and drafted the manuscript. epx directed the project and drafted the manuscript. all authors read and approved the final manuscript.

