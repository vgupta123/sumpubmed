BACKGROUND
the emerging field of metagenomics enables a more comprehensive understanding of environmental microbial communities  <cit> . however, metagenomic data consists of enormous numbers of fragmented sequences that challenge data analysis methodologically and computationally. to address these challenges, new methods and resources have been developed, such as simulated datasets <cit> , img/m <cit> , camera <cit> , mg-rast <cit> , taxonomy tools <cit> , statistical comparison <cit> , functional diversity analysis <cit> , binning  <cit>  and so on.

the rapid analysis of multiple metagenomes with a clustering and annotation pipeline  presented herein aims to address the particular computational challenges imposed by the huge size and great diversity of metagenomic data. the primary goal is to significantly reduce the computational effort in sequence comparison, as large-scale comparison of metagenomic sequences has become extremely time-consuming. for example, the protein analysis of the global ocean sampling  study <cit>  took more than one million cpu hours.

metagenomic datasets may contain many novel genes that don't show any homology to existing genes. for example, only ~10% of the sequences in the "metagenomic profiling of nine biomes"  study  <cit>  match known functional genes. novel genes in metagenomic datasets have not been used in many studies with homology-based gene prediction and analysis, so the second goal of rammcap is to explore whole datasets and make use of the novel sequences. because the ab initio gene finding approaches developed for complete genomes work poorly with fragmented dna sequences, recently, several new gene prediction methods were developed for short dna sequences with high sensitivity and specificity, such as metagene <cit> , metageneannotator <cit> , and neural networks <cit> . in rammcap, orfs are called with either metagene or simple six reading frame translation; both methods can identify novel genes.

since more and more metagenomes will be available in the future, the third goal of rammcap is to provide a new way to compare metagenomes from various environmental conditions and to identity and visualize the statistically significant differences between metagenomes.

in this paper, rammcap was implemented and applied to the two largest metagenomic collections. the first set, gos  <cit> , features  <dig>  million ~ <dig> base sanger reads from  <dig> samples. a second, the biomes  <cit>  set, has  <dig>  million ~ <dig> base  <dig> reads from  <dig> microbiomes and  <dig> viromes samples. with moderate computational effort, rammcap can quickly analyzed these huge datasets and obtained many novel results that could not be achieved by other existing methods.

RESULTS
implementation
rammcap is illustrated in figure  <dig>  cluster analysis is a key approach in this pipeline. our previous ultra-fast sequence clustering algorithm cd-hit  <cit>  was modified to handle large metagenomic datasets. using the dna version of cd-hit, the metagenomic reads from one or more metagenomes are clustered together at 95% sequence identity over 80% of length  to identify clusters of unique genomic sequences, referred to as read clusters. it takes ~ <dig> hour to cluster a million  <dig> base reads.

orfs are collected from sequence reads with orf_finder, a orf calling program implemented here by six reading frame translation in a similar way as the gos study <cit> . within each reading frame, an orf starts at the beginning of a read or the first atg after a previous stop codon; it ends at the first stop codon or the end of that read. the minimal length of orfs can be specified by users. orfs can also be called from sequence reads with program metagene <cit> . since these sequence reads are short, a predicted orf maybe a portion of a complete orf. an orf may also be a translation from a non-coding frame: such an orf is called a spurious orf, as defined in the original gos study  <cit> . the gos study also introduced a spurious orf detection method using nonsynonymous to synonymous substitution test, which is available along with a recent gos clustering study  <cit> . this method is not integrated within rammcap, but it can be used independently to identify the spurious orfs predicted here.

orfs are first clustered at 90-95% identity to identify the non-redundant sequences, which are further clustered to families  at a conservative threshold, so that each cluster contains sequences of the same or similar function. a 30% sequence identity indicates significant similarities for full-length proteins. since orfs from sanger reads are long enough, so they are clustered at 30% identity over 80% of orf length. orfs from  <dig> reads are much shorter; they are clustered at 60% identity over 80% of orf length. orf clusters are used for functional studies. the size of an orf cluster is the number of its non-redundant sequences. for one million orfs, it takes a few cpu hours to cluster at 60% identity and ~ <dig> cpu hours at 30% identity.

the clustering method in rammcap is quite different from the clustering method in the gos study  <cit>  and its incremental update  <cit> , which generated core clusters by all-against-all blast search and then merged core clusters into final clusters using sequence profile methods. the final clusters in the gos study are large and contain sequences of very remote similarities, whereas the clustering method employed here only tries to generate very conservative clusters.

orfs are annotated from pfam and tigrfam with hmmer <cit>  , and from cog with rps-blast <cit> . hits must be with e-values ≤  <dig> , and meet the significant scores in case of hmmer searches. this annotation process only takes ~ <dig> cpu hours for one million orfs.

optionally, orf annotation may be performed quickly by running only the representative sequence of each orf cluster and then transferring the annotation to other members in that cluster. but transferred annotation may be wrong in some cases, for example, where the target orf has fewer domains than the source orf . since the annotation process is very fast, it is preferable to run all the orfs for more accurate annotation.

statistical comparison of metagenome
in many metagenomic projects, multiple samples from different environmental conditions were studied. this manuscript describes a novel way to compare metagenomes and visualize their differences. since sequences from multiple metagenomes are clustered into families or classified into reference families , metagenomes can be compared by their occurrence profiles across all the families or selected families of interests.

here, an occurrence profile coefficient, rab = na ∩ b/na ∪ b, is defined as the similarity measure between two metagenomes a and b. na ∩ b is the number of families that are found in both a and b above a minimal occurrence cutoff  without significant difference. na ∪ b is na ∩ b plus the number of families that occur in one metagenome significantly higher than in another metagenome. the value of rab is between 0- <dig>  with  <dig> representing no overlap and  <dig> indicating a perfect match between a and b.

let na and nb be the number of sequences in a and b, let ha and hb be the number of sequences that occur in family h. one question is whether the difference between ha and hb is statistically significant. rodriguez-brito et al introduced a method to test such statistical significance of differences between two metagenomes  <cit> . rodriguez-brito's method used a large amount  of simulations by randomly picking a certain number of sequences from a, b, and a+b to generate distributions and analyze it, so it is very time-consuming.

in this paper, the z test for two independent proportions <cit>  is adopted to test the statistical significance of differences between two metagenomes. given na, nb, ha, and hb, there are three occurrence rates pa = ha/na, pb = hb/nb, and p = /. the statistical significance between a and b can be described by:

  

this method just needs calculation of a single equation, but it produces near identical results as the rodriguez-brito's method. comparisons between the rodriguez-brito's method and the z test method under several different combinations of na, nb, ha, and hb is shown in figure  <dig> 

in this manuscript, ha is considered significantly higher than hb if both  the z score satisfied a user defined confidence level such as  <dig> , and  pa ≥ f × pb, where f  is also a user defined parameter, called significant factor.

the statistical significance cannot be established at very low occurrences, so the low occurrence families are excluded from na ∩ b in calculation of rab. the minimal occurrence cutoff of a family h within metagenome a is defined as the minimal number of ha to produce a significant z score when a is compared to another metagenome b where na = nb and hb =  <dig>  it can be obtained that:

  

since 2na >>z <dig>  the minimal cutoff of ha is  <dig> at  <dig>  confidence level , and  <dig> at  <dig>  confidence level .

the occurrence profile coefficients are calculated for all the metagenome pairs, and the output matrix is used to hierarchically cluster the metagenomes.

performance of orf prediction
orf_finder and metagene  <cit>  were evaluated with simulated metagenomic reads generated with metasim software <cit>  from the completed microbial genomes released between january and may  <dig> from ncbi. four datasets  of  <dig> million reads each with average length of  <dig>   <dig>   <dig> and  <dig> bases were generated to simulate the current sequencing techniques. the error rates for both  <dig>  and sanger  defined by metasim are much higher than the reported error rates  <cit> , so the exact model with default parameters were used in metasim for all simulated datasets. if a simulated read overlaps with an annotated orf by ncbi at least  <dig> amino acid, the overlapped part is used as a true orf. a predicted orf by either orf_finder or metagene is a true-positive if at least 50% of it overlaps with a true orf within the same reading frame. the ratios of true-positives relative to all true orfs  and to predicted orfs  were used as a performance measure . four orf cutoff lengths  were applied for orf_finder. this analyses show that metagene has high sensitivity and specificity  for reads of at least  <dig> bases. but its sensitivity drops to 59% for  <dig> base sequences. orf_finder has very high sensitivity  and very low specificity  at  <dig> amino acid cut off length; a longer cutoff length produces a higher specificity but lowers the sensitivity.

datasets
testing on clustering
rammcap was applied to gos <cit>  and biome <cit> , the two largest metagenomic collections. prior to the full development of rammcap, we clustered the  <dig>  million gos orfs released by the original gos study  <cit>  at 30% identity and published the detailed clustering results  <cit> . here the biome reads and biome orfs, which have  <dig>  and  <dig>  million sequences respectively, were clustered at 95% and 60% identity . the previous gos clusters were added in figure  <dig> to show the difference between gos and biome .

gos orfs have more than  <dig> clusters that contain ≥  <dig> non-redundant sequences; biome orfs have less than  <dig> such clusters. about 70% gos orfs, 46% biome reads, and a similar percent biome orfs are found in non-singleton clusters. within the biome datasets , the microbiomes have more large clusters compared to viromes; suggesting that microbial sequences are more conserved than viral sequences.

clustering analysis is a powerful tool to recover protein families and to discover the novel ones; it helps to recognize spurious orfs. clustering tends to put real orfs into large clusters and leaves spurious ones in small or singleton clusters because spurious orfs have more random features. if the orfs with pfam, tigrfam, or cog matches are considered true orfs, then 93% of these true gos orfs are found in clusters of size ≥  <dig>  which is only  <dig> % total gos clusters; here cluster size is the number of non-redundant sequences in a cluster. further, 28% of the true biome orfs are in  <dig> % of top clusters of size ≥  <dig>  many large clusters without any homology to known proteins are found, which may shed light on novel families of environment specific functions.

validation of clustering quality
orfs called from metagenomic reads are short and fragmented. in addition, errors such as frame shifting and wrong gene boundary may occur due to sequencing errors. therefore a conservative threshold is used in producing orf clusters to ensure that a cluster contains sequences of the same or similar function. the quality of clustering was evaluated with pfam, the manually curated classification of protein families. the domain sequences in pfam models  were extracted from the alignments and were clustered at 30% identity using the clustering protocol in rammcap.

not all the pfam sequences were used. very short pfam families < <dig> amino acids were excluded because most of these families were built by sequence patterns rather than similarities. some pfam families are overlapping, for those families, short ones were excluded. since pfam families were built with very sensitive hmm models, the sequences within same families can be very diverse, even at sequence identities very much below 30%. therefore it is anticipated that divergent sequences from a large pfam family may be placed in separate clusters. the goals of clustering are:  to generate homogeneous clusters whose sequences are from the same pfam families,  to cover most sequences in a small number of large clusters. the distributions of clusters of pfam domain sequences are shown in figure  <dig>  a cluster is considered good if >95% of its members are from the same pfam family. it is observed that most sequences  are in good clusters , which are ~ <dig> times more than bad clusters . although there are singleton clusters, but non-singleton clusters still cover 94% of sequences, and clusters of size ≥  <dig> cover 85% of sequences.

testing on clustering-based comparison of metagenomes
statistical comparisons of gos and biome metagenomes based on the occurrence profile coefficient calculations using results of clusters are shown in figure  <dig>  the gos samples show great overlaps, but all unique samples are classified as outliers, such as gs <dig> , gs <dig> , and gs <dig> , from other marine samples. the sample-specific clusters may shed light on functional aspects related to the environment for further studies. the biome samples intersect much less, but notable overlaps are found between pairing samples, such as fish-m vs fish-v, and coral-m vs coral-v. the differences between gos and biome samples reflect that the biome samples are more diverse.

testing on protein family-based comparison of metagenomes
annotations from pfam, tigrfam, and cog are used for metagenome comparison in a similar way that is applied in clusters. these analyses show over- and under-represented families between samples. the protein families of these three databases are all organized into super families: clans in pfam, role categories in tigrfam, and functional classes in cog. therefore, metagenome comparison can be made under a specific super family of interest, which is a unique feature of this study. samples were compared systematically under all super families and many significant differences were found. here we show a few interesting examples . gos samples share an extremely similar occurrence profile across the  <dig> families of cog class f , which suggests this class is highly conserved across the world's ocean. the least conserved class, aside from functional unknown classes and a few tiny classes, is t . similar observations were obtained for biome samples, but the intrinsic diversity of biome sequences introduces more non-overlapping families.

CONCLUSIONS
the cpu time for clustering gos orfs, biome reads, and biome orfs were  <dig>   <dig>  and  <dig> hours, respectively. gos orfs cost relatively more, but still two orders of magnitude less than the original gos study <cit> . the annotation for gos orfs and biome orfs took  <dig> and  <dig> hours. through clustering analysis, many novel families can be identified and can be used in metagenome comparison. the rammcap software and pre-calculated results are available at .

