BACKGROUND
copy number variants  are genomic rearrangements that result in a different number of copies of a segment of the genome, and include deletions, amplifications, and unbalanced translocations. cnvs are common in the human genome, and cnvs have been associated with several diseases  <cit> . similarly, cnvs  are found in many cancer genomes  <cit> . thus, detection of cnvs and characterization of the gene or genes that they affect is an important task.

array comparative genome hybridization   <cit>  is a widely-used experimental technique for the measurement of copy number variants in genomes. acgh involves the hybridization of differentially fluorescently labeled dna fragments from a test genome and a reference genome to a set of genomic probes derived from the reference genome sequence. measurements of the test:reference fluorescence ratio at each probe identify locations in the test genome that are present in lower, higher, or similar copy in the reference genome, producing a copy number profile of the test genome. copy number profiles are typically compared across individuals to identify recurrent cnvs that are shared by multiple individuals. these recurrent cnvs may be germline polymorphisms, or in the case of cancer samples, recurrent somatic mutations. large cohorts of acgh data from cancer genomes   <cit> ) provide the statistical power to identify numerous recurrent somatic cnvs. several methods have been introduced to identify recurrent cnvs, including gistic  <cit> , cocoa  <cit> , stac  <cit> , and cmds  <cit> . these methods  first partition each copy number profile into regions  of equal copy number, producing a segmentation for each individual . since a cnv alters the copy number of multiple adjacent probes, segmenting the copy number profile helps overcome experimental errors at each probe. these segmentations are then combined to identify aberrant intervals that are shared by multiple individuals. an implicit assumption of this approach is that the target of the cnv lies within the interval; this is the case for oncogenes that lie within amplifications or tumor suppressor genes that lie within deletions.

some recurrent rearrangements do not target a gene within the aberrant interval, but rather target a gene or locus at the boundary of the interval. a striking example is the tmprss2-erg fusion gene in prostate cancer  <cit> . this fusion gene results from a  <dig> mb deletion on chromosome  <dig>  where the two endpoints  of the deletion lie in the two partner genes of the fusion. more recently, next-generation dna sequencing has shown other fusion genes that are located at the endpoints of the cnvs  in  <cit> ). these and other examples motivate the development of methods that discover recurrent breakpoints rather than recurrent intervals.

we introduce a novel algorithm called neighborhood breakpoint conservation  to identify recurrent breakpoints in copy number data. nbc computes the probability that a breakpoint occurs between each pair of adjacent probes over all possible segmentations of a single copy number profile and then combines these probabilities across multiple profiles to identify recurrent breakpoints. the probabilistic approach contrasts with the typical methods for acgh analysis that compute only a single segmentation of a copy number profile. consideration of a single segmentation is reasonable for identifying recurrent aberrations because large aberrations will typically overlap in different individuals as long as the segmentations reasonably approximate the true underlying copy number level. however, identification of recurrent breakpoints is more sensitive to the choice of segmentation. due to measurement errors in individual probes, the optimal segmentation of each individual profile may not "align" across profiles. thus it is necessary to consider multiple suboptimal segmentations. moreover the probabilistic approach allows use to account for biological variability in the location of a breakpoint within a gene or other locus. we apply nbc to acgh data from  <dig> primary prostate tumors and predict  <dig> cnvs, including one gene truncation and one fusion gene which is the well-known tmprss2-erg fusion gene. we also apply nbc to  <dig> glioblastoma  tumors and predict  <dig> cnvs, including  <dig> gene truncations and  <dig> fusion genes. additionally, we predict  <dig> germline cnvs from  <dig> available matched blood samples from gbm patients. a number of the somatic cnv predictions in gbm involve the protein phosphatase ptpn <dig>  suggesting that deregulation of ptpn <dig> via a variety of rearrangements is common in glioblastoma. we note that nbc is readily adapted to analyze copy number profiles obtained from next-generation dna sequencing data  <cit> .

methods
the neighborhood breakpoint conservation  algorithm takes, as input, acgh data from many individuals and identifies recurrent breakpoints and pairs of recurrent breakpoints in a subset of the individuals . the first step in nbc, as in most acgh analysis, is to segment each copy number profile into intervals of equal copy number.

while many existing methods produce a single segmentation for acgh data  <cit> , nbc uses a dynamic programming approach  <cit>  to compute the probability  of a copy number profile x given a segmentation . nbc then employs a stochastic backtrace to compute the posterior probability . using this approach, one can derive the segmentation  with maximum probability, but more importantly, one can compute the posterior probability of events of interest over all possible segmentations of the data. in particular, we compute the probability of a breakpoint between each pair of adjacent probes, as well as the probability of a breakpoint within a fixed interval or probes .

the second step of nbc is to combine breakpoint probabilities in each individual to determine breakpoints that appear in multiple individuals. similar to  <cit> , we use a binomial order statistic  <cit>  to compute a p-value for the event that k or more individuals share a breakpoint between two adjacent probes. we then extend this breakpoint score to consider pairs of breakpoints that are shared by multiple individuals. finally, we also define a score for a breakpoint that may occur anywhere within an interval of adjacent probes  that is shared by multiple individuals. we detail each of these two steps in the following sections.

a probability model for segmentation and breakpoint analysis
a probabilistic formulation of the segmentation problem assigns a probability to each possible segmentation of x. the probability of other events, such as a breakpoint occurring at a particular locus, are readily computed from this model. probabilistic segmentation approaches have been previously applied to cnv detection  <cit> , but we found that these methods either: require a finite number of copy number levels ; focus on probabilistic model selection rather than an explicit probabilistic model for the segmentation itself  <cit> ; or do not perform well on high-resolution oligonucleotide arrays .

our algorithm is based on the change-point model described in  <cit> . consider a copy number profile x = , where xi is the log <dig> ratio of test.reference dna at the ith probe. we assume that the test genome consists of an unknown number of segments k with corresponding copy numbers Θ = {θ <dig> ...,θk}. following the usual assumptions for acgh data  <cit> , we assume that each xi is normally distributed with mean μi and variance σ <dig>  the variance σ <dig> is a hyperparameter whose value must be set. below we describe how we estimate this value from the data. the mean μi equals θs if probe i lies within segment s. further, we assume that xi from different segments are independent. let lj denote the number of probes in segment j, and let kmax denote the maximum number of segments in the test genome.

we define the breakpoint sequence a = , where av is the index of the probe at the start of the v + 1st segment and ak+ <dig> = n is a "dummy" breakpoint signifying the end of the sequence . thus,  

the unknowns in our model are the breakpoint sequence a, the number of segments k, and the segment copy numbers Θ. we assume a priori that Θ is independent of a and k. we further assume that the segment copy numbers θs ∈ Θ are independent and normally distributed with mean μ <dig> and variance .  we assign a prior on breakpoints sequences a such that all a with k segments are equally likely, . additionally, we assign a prior on the number of segments k such that there is a probability of  of a single segment  and the remaining values of k,  <dig> <k ≤ kmax, are equally likely. note that these priors do not make any strong assumptions about the data. essentially, the a priori assumption is that with probability  the data is produced from a single segment.

from the priors p  and p  and the values of the hyperparameter σ; μ <dig>  σ <dig>  the joint distribution p  can be derived .

hyperparameter estimation
the segmentation and breakpoint analysis algorithm relies on setting values for the hyperparameters μ <dig> ,  , and σ <dig> . we describe how to estimate these from the copy number profile x = . first, we set μ <dig> to be the median of the xi. to estimate the variances  and σ <dig>  we form sliding windows of  <dig> probes. let v be the median of the sample variances of the windows, and let m be the maximum absolute difference between the sample means of the windows and μ <dig>  we set the measurement variance σ <dig> = 2v and the segment variance .

to test the sensitivity of our results to our particular estimates of the hyperparameters - in particular our estimates of σ <dig> and  - we performed two simulations that are inspired by the simulations of  <cit> .

simulation # <dig> we generated an artificial chromosome with  <dig> probes containing a  <dig> probe single-copy gain  placed in the center. we then introduced various amounts of gaussian noise  in the probe measurements, setting . for each value of , we generated  <dig> such chromosomes.

simulation # <dig> we generated an artificial chromosome with  <dig> probes with gaussian noise n in the probe measurements. we then introduced a  <dig> probe aberration at various log <dig> ratios.  <dig> ,  <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig>  for each log <dig> ratio, we generated  <dig> such chromosomes.

a representative sample of the datasets for simulation # <dig> and simulation # <dig> are shown in additional file  <dig>  figure s <dig> and s <dig> 

we ran nbc on datasets from the two simulations with different estimates for the variances  and σ <dig>  detailed below. to assess the quality of the resulting breakpoint predictions, we consider probe locations with pr ≥  <dig>  to be a predicted breakpoint. we assume that a predicted breakpoint detects a true breakpoint if the predicted breakpoint location is ≤  <dig> probes away from the true breakpoint location. we count the number of true positive predictions . additionally, we count the number of false positive predictions for each dataset. we average the true positives and false positives over the  <dig> artificial chromosomes.

simulation # <dig> has a fixed aberration log <dig> ratio, so we set the segment variance  and we test three different values of σ2: v, 2v, and 3v . compared to our estimated value of σ <dig> = 2v, the number of true positives is similar when σ <dig> = v or σ <dig> = 3v and the measurement error  is low. as  increases, setting σ <dig> = v results in more false positives compared to our estimate σ <dig> = 2v, while setting σ <dig> = 3v results in fewer total predictions, including true positives. thus, at lower measurement error the results are not particularly sensitive to the value of σ <dig>  with our estimate σ <dig> = 2v maintaining reasonable sensitivity and specificity and higher measurement error.

since simulation # <dig> has fixed measurement error, we set the measurement variance σ <dig> = 2v and test three different values of , and m <dig> . the number of true and false positives is very similar for all three estimates of . the only exception is that when , there is a large variation in the number of false positives over the different simulated chromosomes. these simulations show that our hyperparameter estimates are reasonable, although other estimation approaches are possible.

the simulations underscore that the ability to detect the breakpoints of a segment is related to both the copy number of the segment  and the measurement error . for example, in simulation # <dig> , as the probe variance σ <dig> increases the average number of false positive breakpoints increases while the average number of true positives remains below one. to avoid such situations, we do not segment the data and immediately report  <dig> breakpoints when our estimates of σ and σ <dig> satisfy σ ≥ 3σ <dig> 

computing breakpoint probabilities
we compute the probability of a breakpoint between pairs of adjacent probes by sampling breakpoint sequences a from the distribution p  and counting the proportion of samples that have a breakpoint between adjacent probes. note that the probability of a breakpoint between adjacent probes can be analytically computed . we describe a sampling strategy, since this will generalize to the computation of the probability of breakpoints that lie within an interval or pairs or breakpoints. for notational convenience, let

x = , x, and x[i:j) =  the probability of x is   

where   

here,  is the length  of p  is the probability of the data x given that the test genome is divided into k segments, and  is the probability that  consists of a single segment. the product in equation  results from the segment independence assumption. the choice of a conjugate prior for p  allows the integral to be analytically computed . however, calculating p  in this way requires summing over all possible breakpoint sequences a and is computationally infeasible. a dynamic program allows the efficient computation of this term.

dynamic program
let p  be the probability of observing x given that it is generated from k different segments. we compute this p  for  <dig> ≤ k ≤ kmax and  <dig> ≤ j ≤ n as follows.      

the final row of the dynamic programming table contains p  for  <dig> ≤ k ≤ kmax, which is used in equation  to compute p .

recursive sampling
we use p  as well as the base case p  and intermediate terms p  in the dynamic program to sample exact and independent breakpoint sequences a using a backward sampling technique  <cit> .

 <dig>  draw k = k from p , determined by inverting p  using bayes rule.

 <dig>  set ak+ <dig> = n.

 <dig>  draw ak, ak- <dig>  ..., a <dig> recursively using the conditional distributions computed by the recurrences in equation . given aq, the location of the beginning of the qth segment, the distribution of aq- <dig> is obtained as follows.   

from a set of breakpoint sequences sampled in proportion to p , we determine the probability of a breakpoint occurring between two adjacent probes by counting the proportion of samples that contain a breakpoint at that locus. other probabilities derived from these sampled breakpoint sequences are described in subsequent sections.

runtime analysis
the base cases p  require o computations and the dynamic program requires o computations; thus computing p  is achieved in o) time. all computations necessary to sample a breakpoint sequence a are already computed in the dynamic program, so sampling is linear in the number of breakpoints k drawn from p .

identifying recurrent breakpoints
after sampling breakpoint sequences for a set of individuals, we identify recurrent breakpoints that appear in many individuals at the same genomic locus. let  be a set of copy number profiles from m individuals, where sj =  is the copy number profile for individual j. we assume that the same array probes are used for each individual, i.e. the ith probe in individual sj is at the same location as the ith probe in individual sj'. we analyze recurrent breakpoints at two levels of resolution.

• recurrent probe breakpoints occur between the same two array probes in a subset of individuals.

• recurrent interval breakpoints occur within the same interval of the genome in a subset of individuals.

in addition to analyzing these types of recurrent breakpoints, we also consider pairs of recurrent breakpoints to identify recurrent cnvs. note that these pairs may indicate intrachromosomal cnvs, as in the case of classic copy number aberrations like duplications and deletions, or interchromosomal cnvs, as in the case of  translocations.

recurrent probe breakpoints
for each probe, we define a score that measures the presence of a breakpoint in a subset of individuals. we design this score to account for the observation that the number of breakpoints in copy-number profiles, particularly in a set of cancer samples, is highly variable. that is, in a set of cancer samples, even from the same cancer type, there will typically be highly rearranged cancer genomes with many breakpoints, and less rearranged genomes with relatively few breakpoints. this variability in the number of breakpoints is maintained following our bayesian segmentation approach - despite the fact that we use the same flat prior for each individual - because there is strong evidence to support a larger number of breakpoints in some samples. since there is a greater chance of recurrent breakpoints occurring randomly in a collection of highly rearranged genomes than a collection of less rearranged genomes, it is advantageous to consider the number of breakpoints in each profile when scoring recurrent breakpoints. because the variability of number of breakpoints across different individuals is typically not well matched by a standard distribution, one approach is to use a permutation test that preserves the number and probability of breakpoints in each profile while permuting their location. we instead derive a score for recurrent probe breakpoints based on a binomial order statistic  <cit> . this score first normalizes the breakpoint probability at each probe in each individual according to the breakpoint probabilities across all probes in individual. these normalized values are then combined across multiple individuals to produce a recurrent breakpoint score.

let bi be the event that a breakpoint lies between probes i and i + 1; p  is the breakpoint probability at probe i in individual sj, and is computed by counting the proportion of sampled breakpoint sequences a that have a breakpoint between i and i +  <dig>  let ρj be the fraction of probes with a higher breakpoint probability than probe i in individual sj .   

let π be a permutation of the individuals  such that . for  <dig> ≤ h ≤ m, we wish to determine the probability that h or more individuals have a breakpoint at location i. because of our normalization of the breakpoint probabilities in each sample, under the null hypothesis the individual scores ρj are independent and uniformly distributed in  <cit> . thus, the probability that h or more individuals have a breakpoint at location i is given by the tail of the binomial distribution with success probability . the p-value for the probe location i is   

where we are only interested in scoring those breakpoints that are present in at least hmin patients. note that because the binomial order statistic is computed from the empirical distribution ρj of breakpoint probabilities in each sample, the relative magnitude of the breakpoint probability is not used in the computation. despite this loss of information, we found that the binomial order statistic produced reasonable results on real data  and was more efficient than a permutation test.

finally, we assume that a recurrent breakpoint is also conserved in the direction of the copy number change: all samples with a recurrent breakpoint are either breakpoints that go from relatively low copy number to high copy number of vice versa. a breakpoint sequence a defined a segmentation, and we use the mean values of each segment to determine the direction of copy number change. the copy number change is positive if the mean of the segment to the right of the breakpoint is higher than the mean of the segment to the left. we test both cases for each recurrent breakpoint, doubling the number of hypotheses we test. we control the false discovery rate  using the method of benjamini and hochberg  <cit> .

recurrent interval/gene breakpoints
we extend our approach to find recurrent breakpoints that lie within a genomic interval w; e.g. a gene. unlike the recurrent probe breakpoint calculation above, where each probe was a priori equally likely to contain a breakpoint, intervals that contain more probes are a priori more likely to contain a breakpoint than intervals that contain fewer probes. to account for this, we use a log-odds score that is defined as follows. let b ∈ w be the event that one or more breakpoints lie between any pair of adjacent probes within w. similarly, let b ∉ w be the event that no breakpoint lies between any adjacent probes within w. the log-odds score ℓj that patient sj contains a breakpoint within w is   

the conditional probabilities p and p describe probabilities over all possible segmentations of the copy number profile sj. p is determined by sampling breakpoint sequences a and counting the number of samples that contain one or more breakpoints in the interval w. p is then simply 1- p. the scaling factor  is computed by counting the number of ways to place breakpoints such that none of them lie in w:      

here, the last term in equation  counts the number of ways to choose k breakpoints that do not lie in w. as in the recurrent breakpoint computation above, we use the binomial order statistic to combine log-odds scores across patients. first, in an analogous computation to equation  we normalize the log-odds scores using the empirical cumulative distribution, which produces the normalized rank of ℓj for all j:   

finally, using the ρj scores for each patient sj we compute the p-value ρ using the binomial order statistic as in equation .

for the experiments below, we define the the copy number change for an interval w to be positive if at least 90% of the breakpoints within the interval are positive and negative if at least 90% of the breakpoints within the interval are negative. otherwise, we do not call a breakpoint in w.

pairs of recurrent interval/gene breakpoints
we identify pairs of non-overlapping recurrent interval breakpoints using a log-odds score similar to equation  that scores two breakpoints occurring in intervals w <dig> and w <dig>  an important case we will consider is when w <dig> and w <dig> are genes. let b ∈ w <dig> be the event that a breakpoint lies between any pair of adjacent probes within w <dig>  and let b' ∈ w <dig> be the event that a breakpoint lies between any pair of adjacent probes within w <dig>  we define the score for intervals w <dig> and w <dig> for a particular patient sj.   

each term is computed similarly to equation . if w <dig> and w <dig> are on different chromosomes, the events p  and p  are independent and equations  and  are used to compute the scaling factor . if the intervals are on the same chromosome then the events are dependent, and the numerator in the scaling factor is   

where  

the denominator in the scaling factor is then  

the p-value ρ is computed by normalizing as in equation  according to the empirical distribution of log-odds scores over all pairs of non-overlapping intervals and then using the binomial order statistic to determine the final p-value. here, we test four hypotheses for each pair w <dig> and w <dig> by considering the four combinations of direction of copy number change: {, , , }. note that restricting w <dig> and w <dig> to each contain a single probe identifies pairs of recurrent probe breakpoints.

predicting structural variants, gene truncations, and fusion genes
our statistics for single recurrent breakpoints  and ρ) and pairs of recurrent breakpoints  and ρ) provide a flexible framework to predict particular rearrangement configurations. in this paper, we classify predictions into structural variants, gene truncations, and fusion genes.

structural variants
pairs of recurrent probe breakpoints may indicate germline or somatic rearrangements that have recurrent breakpoints at the highest resolution allowed by the spacing of probes. to identify these rearrangements, we compute the pairs of recurrent probe breakpoint statistic for every pair of probes within each chromosomal arm. note that this limits the structural variant predictions to intrachromosomal rearrangements only.

gene truncations
recurrent breakpoints found within a single gene may indicate a gene truncation, resulting in the loss of functionality for a particular gene. to predict gene truncations, we compute the recurrent interval breakpoint detection statistic, using the set of gene regions from refseq as our intervals of interest.

fusion genes
pairs of recurrent interval breakpoints found within genes suggest potential fusion genes. we compute pairs of recurrent interval breakpoints using all pairs of gene regions from refseq as our intervals of interest. note that not all pairs of recurrent genes suggest functional fusion genes. for example, a rearrangement that joins the 3' end of one gene to the 3' end of another gene is typically not a functional fusion gene. thus, we restrict our attention to pairs of interval breakpoints with particular configurations .

specifically, consider a pair of recurrent intervals g <dig> and g <dig> that represent gene regions. each gene has an orientation, orient ∈ {+, -} and orient ∈ {+, -}. additionally, the breakpoint that lies within each recurrent interval has an associated direction of copy number change, dir ∈ {+, -} and dir ∈ {+, -}. we assume that a fusion gene contains the 5' end of one gene joined to the 3' end of the other gene and thus satisfies the following rule.   

filtering and ranking predictions
we apply a number of additional steps to remove and prioritize predictions. in the case of fusion genes, if there are many predictions remaining we rank these predictions by the preservation of copy number across the fusion point.

removing single probe aberrations
single probe aberrations are segments consisting of a single probe. since these are difficult to distinguish from experimental artifacts, we remove them from further consideration. single probe aberrations are characterized by two large changes in copy number in adjacent probes, where the segments adjacent to this aberration have a similar copy number. we identify these probes and remove them from the analysis.

removing known cnvs
we remove predictions that are new known cnvs. we say that a single probe is "near" a known cnv in the database of genomic variants   <cit>  if it is within  <dig> kb of a recorded copy number variant endpoint, and a gene region is "near" a known copy number variant if it is within  <dig> kb of a recorded copy number variant endpoint. additionally, a pair of intrachromosomal recurrent breakpoints are near a variant if at least one of the breakpoints is within  <dig> kb of a recorded copy number variant endpoint and the mutual overlap between the prediction interval  and the variant interval is greater than 50%.

ranking predictions
since fusion genes  are physically joined in the test genome, we expect the copy number of either side of the breakpoint to be the same. thus, we rank these predictions by calculating the root mean squared difference  between the copy number levels of probes surrounding the breakpoint. consider fusion gene predictions. we know the configuration of the gene partners, but we do not know exactly where the breakpoint lies. thus, we determine the copy number on each side of the fusion as the average of the three flanking probes of the left gene partner and the three flanking probes of the right gene partner. if h patients have the breakpoint, determined by the argmax of equation ,  is the left-flanking copy number of the fusion and  is the right-flanking copy number of the fusion, then the rms difference of the pair of conserved breakpoints is   

RESULTS
we applied nbc to two acgh datasets. a collection of  <dig> primary prostate tumors, and  <dig> glioblastoma  tumors. for each dataset, we computed recurrent probe breakpoints, recurrent gene breakpoints, pairs of recurrent probe breakpoints, and pairs of recurrent gene breakpoints.

prostate dataset
we applied nbc to agilent acgh data from a collection of  <dig> primary prostate tumors. each sample contained copy number ratios for  <dig>  acgh probes that were mapped to the hg <dig> human reference genome. we examined recurrent gene breakpoints using the gene regions from  <dig>  hg <dig> refseq genes. table  <dig> reports the number of predicted variants, and tables listing the breakpoint coordinates and additional information are in additional file  <dig>  tables s <dig>  s <dig>  s <dig> and s <dig>  we visualize predictions by plotting the average segmentation for each of the individuals that were involved of the final p-value computations for recurrent breakpoints in equation . the average segmentation is created by averaging the segment copy numbers Θ at each probe for the sampled breakpoint sequences a. we predict one novel gene truncation, which occurs in the complement factor h  gene . cfh encodes a protein that is secreted into the bloodstream and is essential for complement system regulation, and cfh polymorphisms are associated with macular degeneration  <cit> . from pairs of recurrent probes, we predict  <dig> novel variants, the most significant of which lies in the defb locus . defb genes have been associated with the risk of prostate cancer  <cit> , and this locus lies near many known cnvs, complicating the study of nearby genes. we predict only one fusion gene, the well-known tmprss2-erg fusion gene, which we detect in  <dig> patients with a p-value of  <dig>  × 10- <dig> . the tmprss2-erg fusion gene has an rms difference of  <dig> .

breakpoint types are described by the indicated rearrangement type. '# predicted' is the number of predictions that are significant with fdr <  <dig> . '# in dgv' counts the breakpoints near known structural variants in the database of genomic variants . '# novel' is the number of predictions that are not near any known variant in dgv.

* novel pairs of recurrent gene breakpoints consistent with the fusion gene configuration.

comparison to segmentation approaches
to demonstrate the importance of breakpoint uncertainty in computing recurrent breakpoints, we compared our fusion gene predictions to those obtained using a single segmentation for each individual. we segmented copy number profiles from each individual using circular binary segmentation   <cit>  . cbs returns a single segmentation  for each individual. from these sets of breakpoints, for each pair of genes from the same chromosome, we counted the number of patients with a breakpoint in each gene. only two individuals had a pair of breakpoints within tmprss <dig> and erg from the cbs segmentations . further, there are  <dig> fusion gene predictions that occur in two individuals after applying the filters described previously, and zero predictions that occur in more than two individuals. since no other common fusion genes in prostate cancer are known, we assume that these remaining predictions are false positives. thus, nbc is more sensitive and specific in fusion gene identification.

glioblastoma dataset
we next applied our method to agilent  <dig> k acgh data of glioblastoma  tumors from the cancer genome atlas  <cit> . data was collected from  <dig> gbm patients, including  <dig> tumor samples and  <dig> matched blood samples. each sample contains  <dig>  acgh probes across the hg <dig> human reference genome. gene regions from  <dig>  hg <dig> refseq genes were used to determine recurrent gene breakpoints. classification of breakpoints in the tumor samples and filtering of the predictions were performed as above. additionally, to restrict attention to somatic breakpoints we remove from consideration any recurrent breakpoints found in the tumor samples that also appear in the blood samples. when identifying recurrent probe breakpoints in the blood samples, we increase the false discovery rate  from  <dig>  to  <dig>  to more aggressively filter recurrent breakpoints in tumor samples. table  <dig> reports the number of predicted variants, and tables listing the breakpoint coordinates and additional information are in additional file  <dig>  tables s <dig>  s <dig>  s <dig> and s <dig> 

columns are described in table  <dig>  except for '# in blood' which indicates the number of predictions that also appear in the blood samples and are ignored as somatic predictions.

* fdr is increased to <  <dig>  for blood samples.

** novel pairs of recurrent gene breakpoints consistent with the fusion gene configuration.

we predict  <dig> gene truncations from the tumor samples, three of which are shown in figure  <dig>  each of these has some support in the literature for an association with glioblastoma or other neuronal diseases. ecop is co-amplified with egfr in glioblastoma as well as other cancers  <cit> , runx <dig> is expressed in glioblastoma cells  <cit> , and pcdh11x is associated with late-onset alzheimer's disease  <cit> . we also predict  <dig> fusion genes from the tumor samples. one of these predictions involving ints <dig> and med <dig> might arise due to a tandem duplication whose breakpoints are within the two genes . another prediction involves ppp1r9a, which is an imprinted gene that appears in neuronal tissues and has been shown to be expressed in other embryonic tissues  <cit>  . the phosphatase ptpn <dig> appears highly rearranged in  <dig> gbm patients, and it is a partner in a surprisingly large fraction  of the fusion gene predictions . ptpn <dig> is known to dephosphorylate oncogenes c-abl and src; thus deregulation of ptpn <dig> might contribute to tumor survival  <cit> . while the 5' end of ptpn <dig> appears amplified with respect to the log <dig> copy number ratios at the 3' end, many fusion gene predictions consist of a deletion of the 3' end . additionally, some fusion gene candidates might indicate multiple rearrangements, such as a translocation occurring after an amplification that results in a fusion gene configuration . due to the large number of candidate rearrangement partners of ptpn <dig>  it might be the deregulation of ptpn <dig>  and not necessarily any single rearrangement, that is important for gbm.

the phosphatase ptpn <dig> appears in  <dig> predicted fusion genes, and is also a predicted gene truncation for  <dig> patients. the predictions are ranked according to the root mean squared difference  of the copy number on either side of the fusion point.

discussion
nbc successfully identifies known fusion genes and structural variants. for fusion genes, nbc's consideration of uncertainty and variability in the locations of breakpoints provides an advantage over methods that compare individual segmentations of copy number profiles. this advantage is mitigated for variants with highly conserved breakpoints such as germline structural variants that are common in a population. however, it is possible that nbc would be helpful for complex, or overlapping, structural variants, where recurrent breakpoints might be a stronger signal than recurrent aberrant intervals.

nbc relies on a bayesian change point algorithm, which requires specifying both prior distributions and a few hyperparameters. the weak priors that we use do not make strong assumptions about the data. however, hyperparameter estimation for bayesian change point algorithms remains a difficult problem, and is sensitive to the particular type of data to be segmented. while our method chooses the hyperparameters systematically from the data rather than requiring user-defined input, poor parameter estimation leads to excessive breakpoint calling if there are no breakpoints to find or if the experimental error cannot be modeled by a constant σ <dig>  we presented one approach to estimate hyperparameters from acgh data, but more sophisticated methods  could be used  <cit> .

in this paper, we focused on applications of nbc to acgh data. but nbc is equally applicable to copy number profiles generated by mapping dna sequence reads to a reference genome  <cit> . with next generation sequencing technologies, breakpoint resolution can be much higher than most current acgh methods, but the problems of breakpoint variability and uncertainty remain.

CONCLUSIONS
we have introduced neighborhood breakpoint conservation , an algorithm that identifies recurrent breakpoints in data from multiple individuals. nbc correctly identifies a known fusion gene  in acgh data from  <dig> prostate tumors and predicts gene truncations, structural variants, and fusion genes in acgh data from glioblastoma. we expect that application of our method to additional samples will allow us to uncover and categorize other recurrent germline and somatic rearrangements.

authors' contributions
plp, mmi, and cc provided acgh data from prostate cancer samples. ar implemented the algorithm and performed experiments. bjr conceived of the project and supervised the work. ar and bjr wrote the manuscript. all authors read and approved the manuscript.

supplementary material
additional file 1
the appendix includes full derivations of the segmentation model, comparisons to other segmentation algorithms, and data aquisition and implementation details.

click here for file

 additional file 2
tables of all the breakpoints and pairs of breakpoints predicted for the prostate dataset and the gbm dataset. note that the values reported for the prostate dataset  are log base  <dig>  while the values reported for the gbm dataset are log base  <dig> 

click here for file

 acknowledgements
we thank chip lawrence, bill thompson, and eric ruggieri for technical discussions, and brendan hickey and hsin-ta wu for their contributions to preliminary analysis of fusion genes. we also thank the anonymous reviewers of an earlier version of the manuscript for helpful suggestions. ar is supported by a national science foundation graduate research fellowship. bjr is supported by a career award at the scientific interface from the burroughs wellcome fund, dod/cdmrp breast cancer synergy award w81xwh-07-1- <dig>  and the susan g. komen breast cancer foundation. this work was made possible in part with funding from the advance program at brown university, under nsf grant no.  <dig>  prostate data sample collection was funded by the national cancer institute to the baylor prostate cancer spore 
