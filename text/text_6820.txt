BACKGROUND
rapid development of the dna microarray technology makes it very possible to study the transcriptional response of a complete genome to different experimental conditions. the rapid increasing of microarray datasets provides unique opportunities to perform systematic functional analysis in genome research. a subset of genes showing correlated co-expression patterns across a subset of conditions are expected to be functionally related. one important research area in bioinformatics and clinical research is finding patterns which relate to disease diagnosis, drug discovery and the function prediction.

biclustering is proposed for grouping simultaneously genes set and condition set over which the gene subset exhibit similar expression patterns. cheng and church  <cit>  introduce first biclustering to mine genes clusters with respect to a subset of the conditions from microarray data. up to date, a number of biclustering algorithms for microarray data analysis have been developed such as δ-biclustering  <cit> , floc  <cit> , pclustering  <cit> , statistical-algorithmic method for biclustering analysis  <cit> , spectral biclustering  <cit> .

during the last three decades, inspired by biology views, some heuristic approachs such as evolutionary algorithms  <cit>  have been proposed to discover global optimal solutions in gene expression data. for multi-objective optimization  problem, multi-objective evolutionary algorithms   <cit>  are proposed to discover efficiently global optimal solution.

recently an artificial immune system is introduced to deal with moo problem. jiao  <cit>  proposes immune genetic algorithm which improves the searching ability and adaptability, greatly increase the converging speed. yoo and hajela  <cit>  first extends the immune system to solve multi-objective optimization problems. coello  <cit>  propose an algorithm based on the immune response principle to solve moo problem and effectively improve the diversity of pareto optimal solutions. bic-ainet   <cit>  being an immune-inspired biclustering algorithm is used to group similar texts efficiently and extract implicit useful information from groups of texts. coelho  <cit>  combines the multi-population of ainet and the biclustering techniques, and proposes mom-ainet  algorithm to mining biclusters. liu <cit>  proposes a novel multi-objective immune biclustering  algorithm to find more significant biclusters from gene expression data.

most mops use a fixed population size to find non-dominated solutions for obtaining the paterto front. the computational cost is the greatest influence of population size on these population-based meta-heuristic algorithms. hence dynamically adjusting the population size need consider the balance between computational cost and the algorithm performance. some methods using dynamic size are proposed. tan  <cit>  proposed an incrementing moea that adaptively computes am appropriate population size according to the online discovered trade-off surface and its desired population size that corresponds to the distribution density. yen and lu  <cit>  proposed dynamic population size moea that includes a population-growing strategy based on the converted fitness and a population-declining strategy that resorts to the following age, health and crowdedness. leong and yen  <cit>  introduced dynamic population size and a fixed number of multiple swarms into multi-objective optimization algorithm that improved diversity and convergence of optimization algorithm.

methods
based on the immune response principle and ε-dominance strategy  <cit> , this paper incorporating dynamic population size  <cit>  into moib  <cit>  algorithm, and proposes a novel dynamic multi-objective immune optimization biclustering algorithm to find one or more significant biclusters of maximum size in microarray data. in the proposed algorithm, the feasible solutions are regarded as antibodies and pareto optimal solutions are preserved in an antigen population updated by ε-dominance relation and computation of crowding distance. many pareto optimal solutions can be effectively obtained and distributed onto the pareto front in this way. three objectives, the size, homogeneity and row variance of biclusters, are satisfied simultaneously by applying three fitness function in optimization framework. a low mean squared residue  score of bicluster denotes that the expression level of each gene within the bicluster is similar over the range of conditions. therefore, we focus on finding biclusters of maximum size, with mean squared residue lower than a given δ, with a relatively high row variance.

biclusters
given a gene expression data matrix d=g×c={dij}  is a real-valued n×m matrix, here g is a set of n genes {g <dig>  g <dig>  ⋯, gn}, c a set of m biological conditions {c <dig>  c <dig>  ⋯, cn}. entry dij means the expression level of gene gi under condition cj. if there is a submatrix b=g×c, where g⊂g, c⊂c, to satisfy certain homogeneity and minimal size of the cluster, we say that b is a bicluster.

bicluster encoding
each bicluster is encoded as an individual of the population. each individual is represented by a binary string of fixed length n+m, where n, m is the number of genes, conditions of the microarray dataset, respectively. the first n bits are responding to n genes, the following m bits to m conditions. if a bit is set to  <dig>  it means that the responding gene or condition belongs to the encoded bicluster; otherwise it does not. this encoding presents the advantage of having a fixed size, thus using simply of standard variation operations. therefore, the string “0110100010#0110100110” presents the individual encoding a bicluster with  <dig> genes and  <dig> conditions, and its size is 4×5= <dig>  where # is a symbol used to delimit the bits of the rows from the columns.

fitness function
our hope is mining biclusters with low mean squared residue, with high volume and gene-dimensional variance, and those three objectives in conflict with each other are well suited for multi-objective to model. to achieve these aims, this paper uses the same fitness functions as  <cit> .

update of ϵ-pareto set of the population
in order to guarantee the convergence and maintain diversity in the population at the same time, we implement updating of ϵ-pareto set of the population during clonal selection operation. a general scheme of the updating algorithm is given in  <cit> .

immune response principle
an immune system can collect biological processes of an organism that protects against disease by identifying and killing pathogens and tumour cells. it can detect a wide variety of viruses and parasitic worms, and distinguish them from the organism's own healthy cells and tissues to protect an organism. it is highly distributed, highly adaptive, self-organization in nature  <cit> . artificial immune system  is a new computational approach for the computational intelligence community. it has widely such as pattern recognition, data analysis, function approximation and optimization.

the immune selection principle  <cit>  is used to describe the basic properties of an adaptive immune response to an antigenic stimulus  <cit> . when applying the immune selection principle to solve multi-objective problem, it can generate several elements from the pareto optimal set at one run. clonal selection operation is used to implement local search in many different directions along the pareto front. mutation operator is applied to explore through the whole search space, thus attain the exact pareto front of the problem.

dmoio biclustering algorithm
multiple-objective optimization aim at the following two competing objectives: 1) to quickly obtain a non-dominated front that is close to the true pareto front and 2) to maintain the diversity of the solutions along the resulting pareto front. these two objectives are in conflict each other because maintaining the diversity will slow down the convergence speed and may degrade the quality of the resulting pareto front. on one hand, moio algorithms tend to the optimal regions. on the other hand, the clonal selection behaviour may lead to premature convergence in the search space and produce a uniformly distributed pareto front. the influence of population size on the performance of moio is the computational cost. it is difficult to deal with this conflict issues for a moio with a fixed population size because a predetermined computation resource has to be allocated and properly distributed between two competing objectives. hence, inspired by  <cit> , during biclustering of the microarray datasets, dynamically adjusting the population size to explore the search space in balance between two competing objectives is applied in this paper.

initial population
in most multi-objective optimization methods the initial archive is set to empty. the first archive contains the non-dominated solutions of the initial population. each antigen selects best local guide from the archive members using sigma method  <cit> . selecting the first local guides from the archive has a great impact on the diversity of solutions in the next generations. hence the diversity of solutions depends on the first non-dominated solutions. but if the initial archive is not empty and contains some well-distributed non-dominated solutions, the solutions converge faster than before, while keeping a good diversity. there are two methods to find a good initial archive. the first possibility is to run the moio with an empty archive for a large population and a few generations. the large population gives us a good diversity and a few generations  are used to develop the population to a little convergence. on another hand, moea can produce some good solutions with a very good diversity after a few generations. so another possibility is to use the results of a small moea method. here, small means a moea with a few individuals and a few generations . this paper first runs state-of-art moea with  <dig> individuals and  <dig> generations to produce the initial archive of dmoiob.

fining the global best solution
to order to find the global best solutions, this paper uses the basic idea of sigma method  <cit>  and by considering the objective space, finding the best local guide pg among the archive members for the antigen iof population as follows. in the first step, we assign the value σj, to each antigen j in the archive. in the second step, σifor antigen i of the population is calculated, and then calculates the distance between the σi and σj, ∀jj= <dig> ⋯,|a|. finally, the antigen kin the archive a which its σkhas the minimum distance to σi is selected as the best local guide for the antigen i. therefore, antigen pg = xkis the best local guide for antigen i.in other words, each antigen that has a closer sigma value to the sigma value of the archive member, must select that archive member as the best local guide. in the case of two dimensional objective spaces, closer means the difference between the sigma values and in the case of m- dimensional objective space, it means the m-dimensional euclidean distance between the sigma values. algorithm  <dig> shows the algorithm of the sigma method for finding the best local pg for the antigen i of the population  <cit> . here, the function sigma calculates the σ value and dist computes the euclidian distance. yi denotes the objective value of the jth element of the antigen population p.  

population adding method
population adding strategy mainly consist in increasing the population size to ensure sufficient number of individuals to contribute to the search process and to place those new individuals in unexplored areas to discover new possible solutions. based on the strategies of dynamic population size  <cit> , the following procedures is proposed to facilitate exploration and exploitation capabilities for dmoiob.

step 1: selecting candidate antibodies added

the non-dominated set considered as candidate antibodies must have the highest probability of generating new antibodies that will improve the convergence toward the pareto front. therefore the number of potential antibodies determined via ns = int) is randomly selected from the non-dominated set. where r <dig> denotes a random number obtained from a uniform distribution within  <cit> .

step 2: defining the number of mutation

the number of mutation of the selected antibody is adaptively determined every iteration. each selected antibody’s responsibility is to generate a certain number of new antibodies from the selected antibody. a probability value is used to determine the number of perturbations adaptively in which the number of mutation  is bound by the minimum and maximum number of mutation.

step 3: limiting the range of new antibodies

in proposed algorithm, to balance the exploitation and exploration capabilities and to avoid generating too many new antibodies from being too far away from the selected antibodies, it is necessary to generate a higher number of new antibodies within the neighbourhood than outside of the neighbourhood which similar to  <cit> .

population decreasing method
to prevent the excessive growth in population, a population decreasing strategy which similar to  <cit>  is proposed to adaptively control the population size. in dmoiob, the condition to remove a antibody depends upon sigma values. sigma value is utilized to select potential antibodies to be deleted. after computing all the distance between sigma value of each antibody and sigma value of its corresponding best local guide, the rank of the distance of each antibody can be attained. if the removal of antibodies is only based upon the distance rank of each antibody, then there is a possibility of eliminating an excessively large quantity of antibodies in which some may carry unique schema to contribute in the search process. a selection ratio is implemented to regulate the number of antibodies to be removed and to provide some degrees of diversity preservation at the same time. a selection ratio that is inspired by coello and montes  <cit>  is used to stochastically allocate a small percentage of antibodies in the population for removal. hence, given a selection ratio s ∊  <cit> , at iteration t, the number of antibodies to be eliminated is s×|pt|. note that the choice of the selection ratio is dependent upon the user’s preference, where it can be a function of the swarm population size or it can be a fixed ratio. for this paper, the selection ratio is a fixed number, which is set to be a small number, i.e., s ≤  <dig> . with a small selection ratio, there is a possibility that those selected antibodies in pt may not be eliminated. in other words, some of the selected antibodies in pt whose rank indicators are low may remain in the next iteration. in addition, a small selection ratio can prevent the removal of an uncontrollable large number of antibodies while providing some degree of diversity preservation. this paper set s = <dig> .

dmoiob algorithm
we propose a dynamic moio biclustering algorithm  to mine biclusters from the microarray datasets to attain the global optimum solutions. we incorporates the following three strategies: 1) ϵ-dominance to quicken convergence speed; 2) sigma method to find good local guides; 3) population-growing strategy to increase the population size to promote exploration capability; and 4) population declining strategy to prevent the population size from growing excessively.

the pseudo-code of the proposed dmoiob algorithm is given in algorithm  <dig>   

dmoiob algorithm iteratively updates the antigens population until user-defined number of generation are generated and last converges to the optimal solution.

RESULTS
this paper applies the proposed dmoiob algorithm to mine biclusters from two well known datasets and compare the diversity and convergence of the dmoiob algorithm with moib algorithm. lastly, the biological relevance of the biclusters found by dmoiob is given.

datasets and data preprocessing
the first dataset is the yeast saccharomyces cerevisiae cell cycle expression data  <cit> , and the second dataset is the human b-cells expression data  <cit> .

the yeast dataset collects expression level of  <dig>  genes under  <dig> conditions. all entries are integers lying in the range of 0- <dig>  out of the yeast dataset there are  <dig> missing values. the  <dig> missing values are replaced by random number between  <dig> and  <dig>  <cit> .

the human b-cells expression dataset is collection of  <dig>  genes and  <dig> conditions, with  <dig> % missing values, lying in the range of integers -750- <dig> the missing values are replaced by random numbers between -800- <dig>  <cit> . however, those random values affect the discovery of biclusters <cit> . for providing a fair comparison with existing methods here set the same parameter for δ as  <cit> , i.e., for the yeast data δ= <dig>  for the human b-cells expression data δ= <dig>  the two gene expression dataset are taken from  <cit> .

testing
dmoiob algorithm is implemented in java programming language and is performed on a  <dig> ghz pentium 4pc with 512m of ram running windows xp. to evaluate its performance, the proposed algorithm is compared to moib  <cit>  algorithm on two well known datasets, the yeast cell cycle expression data  <cit>  and the human b-cells expression data  <cit> .

yeast dataset
human b-cells expression dataset
comparative analysis
in this section, this paper compares the proposed algorithm with moib algorithm on the yeast dataset and the human dataset and the results are showed in table  <dig> 

from table  <dig>  the biclusters found by dmoiob has a slightly higher squared residue and a higher bicluster size than those by moib on both yeast dataset and human dataset. it is clear from the above results that the proposed moib algorithm performs best in maintaining the diversity of solutions.

for computation cost we find that the computation time of moiob is  <dig> s on yeast dataset and  <dig> s on human dataset, is superior to that of moib.

in total it is clear from the above results that the proposed dmoiob algorithm performs best in maintaining diversity, achieving convergence.

biological analysis of biclusters
we determine the biological relevance of the biclusters found by dmoiob on the yeast dataset in terms of the statistically significant go annotation database. the gene ontology  project  provides three structured, controlled vocabularies that describe gene products in terms of their associated biological processes, cellular components and molecular functions in a species-independent manner. to better understand the mining results, we feed genes in each bicluster to onto-express and obtain a hierarchy of functional annotations in terms of gene ontology for each bicluster.

the degree of enrichment is measured by p-values which use a cumulative hyper-geometric distribution to compute the probability of observing the number of genes from a particular go category within each bicluster. the p-values are calculated for each functional category in each bicluster to denote how well those genes match with the corresponding go category given in table  <dig> 

CONCLUSIONS
this paper has provided a novel dynamic multi-objective immune optimization biclustering framework for mining biclusters from microarray datasets. we focus on finding maximum biclusters with lower mean squared residue and higher row variance. those three objectives are incorporated into the framework with three fitness functions. we apply immune clonal selection principle and sigma method to find better local guide in objective space and combine ε-dominance and crowding distance strategy to improve the diversity of the solutions and to quicken convergence of the algorithm; a population adding method that dynamically grows new individuals with enhanced exploration and exploitation capabilities; a population decreasing strategy to balance and control the dynamic population size. the results on the yeast microarray dataset and the human b-cells expression dataset verify the good quality of the found biclusters, and comparative analysis show that the proposed moib is superior to moib algorithm in terms of the diversity of solutions and the convergence of the algorithm.

competing interests
the authors declare that they have no competing interests.

authors' contributions
jl design dmobio to mine biclusters from gene expression data and drafted the manuscript. zl, xh and ep were involved in study design and coordination and revised the manuscript. yc conducted the algorithm design.

