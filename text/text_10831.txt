BACKGROUND
in biological sciences it is often necessary to compare sets of data such as genes, proteins, organisms as well as other entities. the same set comparison activities can be useful to many other research fields. sets and their unions and intersections may be conveniently displayed as venn diagrams, a widely adopted and familiar layout  <cit> . a recent example can be seen in the article describing the banana genome  <cit> , where a venn diagram illustrates the relationship among six plant genomes. venn diagrams may also be used as a means to explore and reason about data, but most often such diagrams provide only static views of up to four sets of data.

although venn diagrams may be built for any number of sets, the layout becomes increasingly challenging beyond four sets. for instance, we can use circles to create a symmetric three-set diagram but we cannot use them with four or more sets and still show all possible intersections and exclusive regions. the same holds for ellipses: we cannot create a diagram with more than five sets with them. many other shapes may be used, such as squares, triangles and spherical surface segments, the latter being a widely adopted layout proposed by edwards  <cit> . a venn diagram could even be formed by elements with abstract shapes, but not without difficulties in showing all necessary regions and in generalizing for any number of sets.

with a larger number of sets, symmetric venn diagrams are easier to interpret because the reader needs less time to locate regions of interest and their boundaries, as well as set intersections. considering restrictions in aesthetics and burden on human visual ability, venn diagrams of seven sets just seem to be too much.

many websites and graphics programs allow users to manually draw labeled venn diagrams. other programs extend the basic drawing, automating the construction of diagrams from lists of elements in each set. examples include pangloss venn diagram generator  and venny , both restricted to static diagrams of up to four sets. other examples are drawvenn  and biovenn  <cit>  that construct area-proportional diagrams, limited by the fact that it is not possible to create symmetric venn diagrams with more than four sets that respect proportionality. software systems that build area-proportional diagrams for larger number of sets use heuristics and typically produce euler diagrams without support for all possible intersections among sets.

a few programs extend the functionality beyond drawing the diagram and listing the elements in each diagram region. genevenn  <cit>  and vennmaster  <cit>  link genes in each set to entrez  or to gene ontology . jvenn  <cit>  is a javascript library and viewer that enables to compare up to six lists. vennture  <cit>  improves data integration of sets comparison. genespring  integrate venn diagrams into the analysis of microarray data. this is also the case of silicocyte .

however, these choices are limited either in the number of sets they handle or in the ability to display partial set operations . displaying partial unions, that is, locating regions that combine unions of sets and their intersections, and highlighting such regions interactively, can provide additional insight to the analyst. in this article we describe interactivenn, a web-based tool to build and analyze venn diagrams. interactivenn provides the ability to interactively visualize the effect of successive unions of up to six sets, enhancing the user capacity of analyzing data. additionally, set unions are allowed in any order, including along a union list or a binary tree, enabling different perspectives on the data, for instance in the analysis of sets of genes across species related by a phylogeny.

implementation
interactivenn was implemented as a web application in html and javascript, using functions provided by libraries d <dig> js , jpaq , jscolor  and filesaver .

RESULTS
interactivenn offers a clean interface, as shown in fig.  <dig>  to build a diagram, the user starts selecting the number of sets, which also determines the diagram shape. the user may type or paste the name of each set, as well as its elements . each element of a set is a string terminated by the end of a line. the diagram updates as sets are filled. the sets can also be loaded from a file.


when the user moves the cursor over the diagram, the set under the cursor will be highlighted to help identify its intersections. transparency is employed to help locate intersections and ease the identification of each region in the diagram. pressing a mouse button on a non-empty region triggers the display of a list of the elements in the intersection of sets represented by that region.

interactivenn enables unions of sets preserving the diagram shape. such unions of sets are often useful to unveil differences and similarities among them. the unions may be guided either by a binary tree or by a list. the selection between tree or list is made via the main toolbar of interactivenn.

a sequence of unions guided by a tree is shown in fig.  <dig>  the depicted tree can be coded as )), where parentheses group subtrees and commas indicate bifurcation ). with )) typed in the appropriate field in interactivenn’s interface, the user may navigate across tree levels, starting from the leaves level, where sets a,b,c and d are distinct. navigating up the tree will render the diagram for sets a, b, c∪d, then the diagram for a and b∪c∪d, and finally the diagram for a∪b∪c∪d. the diagram will be updated to reflect the size of each region, subject to diagram unions. navigating through diagrams will thus allow the user to inspect the effect of unions instantly. for instance, going from level  <dig> to level  <dig> in fig.  <dig> allows to observe the intersections among a, b and the common ancestor of c and d. the tree itself is also shown by interactivenn.


a more general union specification may be given by a list of sets to unite at each step. the navigation between diagrams obtained through the tree in fig.  <dig> may be also obtained specifying the list ;cd;cdb,cdba. the list allows defining unions that are not hierarchically related, for instance ;cd;cb;ab,cd will produce a diagram where no sets are united, then one diagram with the sets a, b and c∪d, another diagram with a, c∪b and d, and finally a diagram with the sets a∪b and c∪d.

interactivenn allows adjusting font size as well as setting and opacity, that may be used by the user to tune the diagram layout. it also allows exporting the diagram in png and svg formats, and the elements in every diagram region may be exported as a text file. interactivenn allows saving the sets to a local file that can be uploaded in a future moment for further analyses.

study case 1: comparing feature selection methods for candidate biomarkers discovery
to show the usefulness of our tool, we have analyzed a published prostate cancer proteomic dataset  <cit> , searching for candidate biomarkers through feature selection analyses. in a previous work by kawahara et al.  <cit> , a discovery-to-target pipeline was proposed to analyze proteomics data, comprising a mass spectrometry -based discovery, three feature selection methods, clustering, venn diagram, bioinformatics analyses and targeted approaches. the feature selection methods used in the pipeline were the univariate beta-binomial  <cit> , the semi-multivariate nearest shrunken centroids   <cit>  and the multivariate support vector machine-recursive features elimination   <cit> . the proof-of-concept was performed in a well-controlled proteomic data from the secretomes of three human cell lines, and was also validated on the published prostate cancer proteomic dataset  <cit> .

here, in order to generate lists of proteins sorted by relevance in discriminating the two classes in the dataset  and extracapsullar  prostate cancer cells), five methods were used, including the three used before in the discovery-to-target pipeline  <cit> , the classical t test and the mww test, all implemented in r. these and many other methods are being developed and applied for this type of study and they need to be compared for a deeper understanding on the distribution of candidate biomarkers resulting from the different methods.

as described by tibshirani et al.  <cit> , we may consider the top-n proteins to look for potential biomarkers. although there are statistical validation procedures to define the value of n and to calculate false-positive and false-negative rates for each method  <cit> , we adopt the vision that it is also important to compare all resulting lists of proteins, since those that appear in most methods may be more reliable or may lead to less false-positives, and thus can be further used by biologists in future experiments. moreover, in a second analysis step, we may compare both the intersecting and exclusive proteins of each method to determine if one is good for potential biomarkers identification.

based on the confidence level  for the univariate methods  and on the double cross-validation procedure for the semi and multivariate methods , the top-n final ranked lists of candidate biomarkers resulting from each model were compared. in total, all five methods have shown  <dig> different proteins . figure 3a shows that all methods retrieved  <dig> common proteins, while the semi and multivariate methods have, in general, more exclusive proteins than the univariate ones. we can also see that the semi and multivariate methods exclusively share  <dig> proteins, whereas among the univariate methods, only one protein is exclusively shared by the beta-binomial and mww tests. union operations allow us to see different patterns, for instance, by using the code bc to trigger the union of sets b  and c , we see that  <dig> proteins were retrived exclusively by the semi and multivariate methods . the approach adopted by interactivenn preserves the position and shape of the sets, allowing a smoother exploration. other unions are possible as well.


furthermore, seven proteins identified as candidate biomarkers in the prostate cancer cells in the work by kim et al.  <cit>  were also verified in the same work by experimental biochemical methods and were searched in the venn diagram sets built using the interactivenn tool: klk <dig> , acpp , sfn, mme, park <dig>  timp <dig> e tgm <dig>  notably, from these proteins, klk <dig> was the only one not validated as a candidate biomarker and, using interactivenn, we could observe that it was retrieved as an exclusive protein only by the mww test . out of the other six validated candidates, four  were found in the intersection among the three methods used in the discovery-to-target pipeline  <cit> , one  was found in the intersection between beta-binomial and nsc, and another one , in the intersection between nsc and svm-rfe. interestingly, none was found exclusively by the t test, suggesting that the three methods used in the pipeline described by kawahara et al.  <cit>  could retrieve the best potential candidate biomarkers in their intersections.

study case 2: distribution of gene families among six plant genomes
a venn diagram comparing six plant proteomes is shown in the article describing the banana  genome and the evolution of monocotyledonous plants  <cit> . the diagram shows the distribution of shared gene families  among the proteomes of five monocotyledons  and one eudicotyledon , and it was used to compare how many sequence clusters exist in common among these species.

the data set of the m. acuminata article was converted to the interactivenn format to reproduce the venn diagram described above. the result is shown in fig. 4b. the m. acuminata article also presents a binary tree showing the timing of whole-genome duplications relative to speciation events within representative monocotyledons and eudicotyledons. the phylogenetic tree representing the relations between the different plant species could also be used to relate information between the sets in a venn diagram. set unions as provided by interactivenn allow the identification of similarities and differences between the species groups, as defined by the tree hierarchy.


as an example, fig. 4a shows a simplified tree that represents the hierarchy that appears in the m. acuminata article, with only six species. starting the union operations according to this tree, we have at level  <dig> the union of all sets . following the hierarchy, interactivenn then groups all monocotyledons at level  <dig>  because at this level they are in the same branch . it is possible to identify unique sequence clusters of monocotyledons relative to arabidopsis thaliana. navigating to level  <dig> , the diagram shows two groups between the monocotyledons: the union of o. sativa, b. distachyon and s. bicolor, and the union of m. acuminata and p. dactylifera. at level  <dig>  there is only one group: o. sativa and s. bicolor. when level  <dig> is reached, the diagram shows each species’ set individually .

CONCLUSIONS
more than providing a wider set of features to publish results of sets comparisons, interactivenn extends the ability to analyze combinations of sets of elements in part or in total, affording additional observations on the interactions between joined sets. we expect that interactivenn will be used by biologists in a wide range of tasks and also by other researchers who seek for more flexible control of the examination of set unions in venn diagrams of objects.

availability and requirements
project name: interactivennproject home page: http://www.interactivenn.net/operating system: platform independentprogramming language: javascript and htmlother requirements: web browsers firefox  <dig> or later or chrome  <dig> or laterlicense: gplv3any restrictions to use by non-academics: none

competing interests

the authors declare that they have no competing interests.

authors’ contributions

the system was proposed by frs. hh, rm and gpt designed the system, that was implemented by hh and tested by rm and gpt. gvm proposed the study cases and conducted them with hh. an early draft of the manuscript was written by frs and gpt, and then augmented and reviewed by hh, rm, gvm and gpt. all authors approved the final manuscript.

