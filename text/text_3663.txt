BACKGROUND
rna sequencing  is a basic tool for measuring expressions of multiple genomic loci . one important goal for rna-seq is to identify of differentially expressed genes  under different conditions. researchers typically start the differential expression  analysis with a so-called “count matrix”, where each row indicates the gene , each column indicates the sample, and each cell indicates the number of reads mapped to the gene in the sample . there are roughly four levels of resolution in current de analysis: gene-, transcript-, exon-, and base-level. examples of the de methods for individual levels are  edger  <cit> , deseq  <cit> , and tcc  <cit>  for gene-level;  cuffdiff <dig>  <cit> , iuta  <cit> , and splicingcompass  <cit>  for transcript-level;  dexseq  <cit>  and npebseq  <cit>  for exon-level; and  der finder  <cit>  for base-level. many methods can perform de analysis for multiple levels  and are provided as r/bioconductor packages  <cit> .

read counts across technical replicates derived from a single source fit to a poisson distribution  <cit> . for data on biological replicates  derived from different individuals, the gene-level counts well fit to an over-dispersed poisson distribution such as a negative-binomial  model  <cit> , beta-binomial  model  <cit> , poisson-tweedie model  <cit> , and so on. in particular, the poisson-tweedie model well captures the biological variation  when many brs are available. as an increase in sample size  precedes an increase in sequencing depth  , a more complex model such as poisson-tweedie may be the first choice for count data with many brs. however, as many replicates are still difficult to take due to sequencing cost and the small amount of the target rna sample, rna-seq data with few brs have mainly been stored. two r packages based on the nb model  have been widely used as a common choice for de analysis of rna-seq data with few brs .

in general, the de analysis consists of two steps , and each r package has its own methods for the x-y pipeline  <cit> . the aim of normalization is to make the normalized counts for non-degs similar between all samples  <cit> . the edger and deseq manipulate the raw count data as input. they first calculate normalization factors  for individual samples as x, then construct the model , and calculate p-values  as y. previous studies have demonstrated that x has more impact than y on the ranked gene list  <cit>  and that two normalization methods implemented in the two packages  generally give satisfactory results  <cit> . while the normalization method provided in edger is termed tmm   <cit> , we here call the default pipelines x-y for edger and deseq “edger-edger ” and “deseq-deseq ”, respectively.

we previously proposed a multi-step normalization procedure called tbt  <cit> . tbt consists of three steps: x using tmm , y using an empirical bayesian method implemented in the bayseq package  <cit>  , and x using tmm after elimination of the estimated degs  comprising the tmm-bayseq-tmm normalization pipeline. the key concept is to alleviate the negative effect of potential degs before calculating the normalization factors in step  <dig>  as mentioned previously  <cit> , the deg elimination strategy  can be repeated until the calculated normalization factors converge. the iterative tbt can be described as a tmm-n procedure. accordingly, a generalized pipeline with the multi-step normalization can be described as x-n-y in which the x-n with n > =  <dig> corresponds to the iterative deges-based normalization.

our tcc package  <cit>  implements the proposed pipeline x-n-y. recommendations are made from an extensive simulation analysis:  edger-3-edger on two-group rna-seq data with few replicates and  deseq-3-deseq on two-group data without replicates  <cit> . however, similar to many other studies , the performance evaluations were limited to a two-group comparison. while many r packages as well as tcc can perform de analysis on more complex experimental designs , there have been few evaluation studies on rna-seq data with those designs, e.g., multi-group data. the current study aims to evaluate  <dig> pipelines available in nine r packages when analyzing multi-group rna-seq count data. specifically, our primary interest is to investigate the effectiveness of the deges-based pipeline in tcc under such more complex designs. we report pipelines suitable for multi-group comparison.

RESULTS
to investigate the performance of de pipelines for a multi-group comparison, a total of  <dig> pipelines available in the nine packages were mainly evaluated in this study: tcc   <cit> , edger   <cit> , deseq   <cit> , deseq <dig>   <cit> , voom  <cit>  in limma   <cit> , samseq  <cit>  in samr , poissonseq   <cit> , bayseq   <cit> , and ebseq   <cit> . note that tcc can perform several combinations for the de pipeline x-n-y with n =  <dig> as recommended  <cit> . we sometimes refer to this deges-based pipeline as xyx-y with the fixed number of n for short. we basically confine individual methods  in each pipeline to functions provided by the same packages  for simplicity. for example, the edger-related pipeline is “edger-3-edger”, where x = tmm and y = the deg identification method, implemented in edger. although we previously termed this pipeline “ideges/edger-edger”  <cit> , here we abbreviate it to eee-e for convenience. similarly, the “deseq-3-deseq” pipeline can be shortened to ddd-d. this is because  users can select, for example, different deg identification methods y for steps  <dig> and  <dig> and  we will discuss some possible combinations such as ded-s for the “deseq-3-deseq2” pipeline. in this sense, the deges-based pipeline can also be denoted as x-n-z or xyx-z.

following our previous studies  <cit> , we here demonstrate the performance of these pipelines mainly on the basis of same evaluation metric and simulation framework. we use the area under the roc curve  as a main measure of comparison, which evaluates both sensitivity and specificity of the pipelines simultaneously . to perform the multi-group comparison as simply as possible, we focus here on the three-group data  with equal numbers of replicates . the gene ranking was performed on the basis of an anova-like p-value or the derivatives, where a low p-value for a gene indicates a high degree of de in at least one of the groups compared. the simulation conditions are as follows: the total number of genes is  <dig>  ,  <dig> or 25 % of the genes are degs , the levels of de are four-fold in individual groups, and the proportions of degs up-regulated in individual groups  are , , , , , , and .

simulation data with replicates
we first assessed the performances of a total of  <dig> pipelines: three pipelines in tcc , edger, edger_robust, deseq, deseq <dig>  voom, samseq, poissonseq, bayseq, and ebseq. table  <dig> lists the average auc values of  <dig> trials between the ranked gene lists and the truth for various simulation conditions with nrep =  <dig>  overall, the auc values for the eee-e pipeline were the highest and similar across the seven different proportions of degs up-regulated in individual groups . the edger  performed the second best overall. eee-e and edger performed comparably under the unbiased proportion of degs in individual groups . this is quite reasonable because the eee-e can be viewed as an iterative edger pipeline and their theoretical performances are the same under the unbiased condition  <cit> . similar to the relationship between eee-e and edger, the ddd-d  can be viewed as an iterative deseq  pipeline. as expected, ddd-d  consistently outperformed deseq  in all simulation conditions except for the unbiased situations.table  <dig> average auc values for simulation data with replicates


 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 



 <dig> 



 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 



 <dig> 


average auc values  of  <dig> trials for each simulation condition are shown:  pdeg = 5 % and  pdeg = 25 %. simulation data contain a total of  <dig>  genes: pdeg % of genes is for degs, pg <dig> % of pdeg in g <dig> is higher than in the other groups, and each group has three brs . seven conditions are shown in total. the highest auc value for each condition is in bold



we observed similar auc values across the seven different proportions of degs for individual pipelines at pdeg = 5 % . when a higher amount of degs was introduced , the performances generally worsened as the degrees of biases increased . for example, the auc values for voom under the unbiased  and most biased  proportions decreased from  <dig>  to  <dig>  %. we observed relatively poor performances for ebseq and voom. this is consistent with a previous simulation study on two-group data with a low number of brs   <cit> . a possible explanation of these results is that ebseq was originally developed to detect de isoforms   <cit>  and the large body of methodology in voom is for microarray data   <cit> . our current evaluation focuses on the gene-level rna-seq count data and does not address the problem of such a detailed resolution of de analysis. samseq and poissonseq performed stably across different proportions. this is probably because both methods are non-parametric ones that do not assume any particular distribution for the data and are generally robust against such biased situations. these methods, however, performed poorly overall. additional file  <dig> is the r code for obtaining these results.

it should be noted that the relative performances for ebseq tend to improve as the number of replicates per group increases . in particular, ebseq consistently outperformed the others when nrep =  <dig> and pdeg = 5 %, suggesting that the deges-based pipeline based on ebseq could produce a more accurate ranked gene list. however, as previously discussed for the deges-based pipeline based on bayseq  <cit> , bayesian methods  generally require huge computation time . while the computation can be parallelized, the implementation of deges for ebseq might be unfeasible.

recall that the level of de for degs was four-fold in this simulation framework and the shape of the distribution for introduced degs is the same as that of non-degs  <cit> . although the simulation framework has been used , this may weaken the validity of the current simulation framework. to mitigate this concern, we performed simulations with different distributions of de when introducing degs. in this simulation, the fold-changes for degs were randomly sampled from “ <dig>  + a gamma distribution with shape =  <dig>  and scale =  <dig> ”, giving mean fold-change of  <dig>  . similar to the results with a fixed level of de , eee-e performed the best overall . while a more extensive study with other simulation settings should still be performed, this trend suggests that different distributions of de does not have much impact on the de results. the functionality for generating the different distributions of de in the “simulatereadcounts” function will be available in tcc ver.  <dig> . <dig> or higher.

as mentioned above, tcc can perform various combinations for the deges-based de pipeline x-n-z or xyx-z, where y and z are the deg identification methods and x is the normalization method. we investigated the effect of the individual methods  by analyzing a total of  <dig> pipelines . table  <dig> shows the average auc values for these pipelines. note that the values in tables  <dig> and  <dig> are comparable and that those for the four pipelines  are provided in both tables. it is clear that choosing z has more impact on the gene ranking accuracy than choosing y and that using the deg identification method provided in edger in both y and z can be recommended. in comparison with the two normalization methods in x in the eight deges-based pipelines, the method in deseq  gave slightly higher auc values than the tmm normalization method in edger . however, the superiority of deseq in x was not observed when the four non-deges-based pipelines x-z were compared, where edger  outperformed deseq. in any case, the different choices in x have less impact than those in y and z. additional file  <dig> is the r code for obtaining the results shown in table  <dig> table  <dig> effect of different choices for the possible pipelines in tcc


eee-e
 <dig> 

ded-e
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 

ede-e

ddd-e

eee-d

ded-d

ede-d

ddd-d


d-e
 <dig> 

e-d


eee-e

ded-e
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 

ede-e

ddd-e

eee-d

ded-d

ede-d

ddd-d


d-e
 <dig> 

e-d

legends are basically the same as in table  <dig>  results of a total of  <dig> pipelines are shown. the auc values for four pipelines  in bold are also shown in table  <dig>  the ded-e pipeline outperforms the others overall



surprisingly, the best pipeline was ded-e, followed by eee-e and ddd-e . the ded-e and ddd-e pipelines consist of methods provided by different packages. for example, ded-e, the “deseq-3-edger” pipeline, consists of the normalization method in deseq as x and the deg identification method in edger as y and z. these results suggest that in some cases, the suitable choices of the best pipeline may slightly improve de results. we should note that the current simulation data are generated by the “simulatereadcounts” function in tcc. this is simply because, to the best of our knowledge, tcc only provides the r function that can generate multi-group simulation count data. tcc simulates all counts using nb distributions, implying that this simulation framework advantageously acts on the classical r packages such as edger and deseq. this is probably the main reason for poor performances of two recently published packages ; those are the advanced versions for edger and deseq, respectively, and are robust against count outliers such as abnormally high counts . to the best of our knowledge, only one r package, compcoder  <cit> , can generate simulation count data with outliers, but it has been restricted to only two-group comparisons so far. extending the simulation framework of compcoder to multi-group data may allow different pipelines to be compared more equally.

simulation data without replicates
unlike  count data with replicates, there are few packages that can manipulate count data without replicates. these include tcc, edger, deseq, deseq <dig>  and so on. we here evaluated a total of  <dig> pipelines . table  <dig> shows the results for simulation data without replicates under pdeg = 25 %. when three original non-deges-based pipelines x-z are compared, deseq <dig>  performed the best, followed by deseq  and edger . this is completely different from the results in table  <dig>  when  <dig> deges-based pipelines xyx-z are compared, choosing z for the deges-based pipeline has more impact on the gene ranking accuracy than choosing y  and that using the deg identification method provided in deseq <dig>  can be recommended as z. this result may possibly be explained by the removal of outliers that do not fit the distributional assumptions of the model  <cit> : deseq <dig>  <cit>  implements a functionality for detecting and removing outliers on the basis of cook’s distance  <cit> . in the situation of count data without replicates, degs tend to be flagged as outliers: cook’s distances are generally greater for degs than for non-degs. the negative effect of 25 % degs introduced in this simulation framework could therefore be weakened.table  <dig> – average auc values for simulation data without replicates


eee-e

ded-e

ede-e

ddd-e

eee-d

ded-d

ede-d

ddd-d


d-e

e-d


sss-s

eee-s
 <dig> 

ded-s

ede-s
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 

ddd-s


e-s

d-s
legends are basically the same as in table  <dig>  results of a total of  <dig> pipelines under pdeg = 25 % are shown. the ede-s pipeline outperforms the others overall



in addition to the model construction only with non-outliers in the z step, the deges-based normalization in the xyx step also slightly but reliably improves ranked gene lists. for example, the auc values higher for sss-s than s-s  are by virtue of the multi-step normalization strategy originally proposed by kadota et al.  <cit> . however, as also discussed in the tcc paper  <cit> , deseq and deseq <dig> generally estimate false discovery rates  more conservatively than others  <cit> . indeed, we observed that the numbers of potential degs satisfying 10 % fdr in step  <dig>  in the sss-s pipeline were nearly zero  in all simulations, although the actual pdeg values were 25 %. this is reasonable because any attempt to work without replicates will lead to conclusions of very limited reliability  <cit> . tcc employs a predefined floor pdeg value  to obtain certain differences between the deges-based approach sss-s and non-deges-based approach s-s: at least 5 % of the top-ranked genes are not used when the normalization factors are calculated at step  <dig> in the xyx pipeline. as an estimated pdeg value of x% tends to work better when simulation data with the same pdeg value are analyzed, accurate estimation is the next important task. additional file  <dig> is the r code for obtaining the results shown in table  <dig> 

real data with replicates
in addition to the simulation study, we also analyzed a real rna-seq count dataset sequenced from the three species : humans , chimpanzees , and rhesus macaques   <cit> . briefly, blekhman et al. studied expression levels of liver samples from three males  and three females  from each species, giving a total of six different individuals  for each species. since they performed duplicate experiments for each individual , the publicly available raw count matrix consists of  <dig>  genes ×  <dig> samples . to correctly estimate the biological variation and make the assumed structure of input data, we summed and collapsed the count data of technical replicates, giving a reduced number of columns in the count matrix . we here compared a total of  <dig> pipelines in light of the overall similarity of ranked gene lists, the number of shared degs satisfying an fdr threshold, and so on. to compare these pipelines as simply as possible, we regarded this dataset as a single-factor experimental design of three species where each has six biological replicates . the full r code for analyzing this dataset is provided in additional file  <dig>  the results of sample clustering applied to these raw and collapsed count datasets are given in additional file  <dig> .

figure  <dig> shows the dendrogram of average-linkage clustering for the  <dig> ranked gene lists. seven pipelines located in the center  show similar ranked gene lists. this is mainly because the seven pipelines from the four packages  commonly employ a generalized linear model  framework. indeed, the minimum value of spearman’s correlation coefficients  among the seven pipelines was  <dig> . it is also noteworthy that ranked gene lists produced from tcc’s iterative strategies and the corresponding original non-iterative strategies are particularly similar. for example, the r between eee-e from tcc and e-e from edger was  <dig> , implying that these data are not extremely biased in light of the proportions of degs up- and/or down-regulated in individual groups . that is, the proportions of degs in these data  are rather closer to  than, for example,  or .fig.  <dig> overall similarity of  <dig> ranked gene lists applied for blekhman’s real count data. the dendrogram of average-linkage clustering is shown. spearman’s rank correlation coefficient  is used as a similarity metric; left-hand scale represents 



note that the dendrogram shown in fig.  <dig> does not necessarily indicate the superiority of the seven glm-based pipelines over the others such as ebseq and bayseq. for example, ebseq employs an empirical bayesian framework that returns the posterior probabilities for each of the five possible expression patterns  to each gene. we here used the posterior probability obtained from the “non-deg” pattern as a surrogate estimate for the adjusted p-values and ranked genes in ascending order of the values. this is probably the main reason for ebseq having lower similarity than the others. we also confirmed this trend with some simulation data. as shown in sheet  <dig> in additional file  <dig>  ebseq had the highest average auc values in the simulation condition: pdeg = 5 %,  for , and nrep =  <dig>  a typical dendrogram of  <dig> ranked gene lists obtained from this simulation condition is given in additional file  <dig>  in this trial, while ebseq and bayseq formed one of the two major clusters, those auc values were not the top two: the ranks for ebseq and bayseq were the 1st and 6th, respectively. these results indicate that the low similarities of ranked gene lists between bayesian pipelines  and the glm-based pipelines do not matter.

we compared the numbers of degs obtained from individual pipelines and the overlaps between all pairs of pipelines . we found that different pipelines could produce considerably different numbers of degs. indeed, the numbers widely ranged from  <dig>  to  <dig> . this trend is consistent with that in a previous comparative study  <cit> . as expected from fig.  <dig>  we observed similar numbers of degs between the three deges-based pipelines  and the corresponding non-deges-based ones . the jaccard coefficients, defined as “intersection/union” for two sets of degs, for the three pairs  were top-ranked among a total of  <dig> possible pairs. for example, both eee-e in tcc and e-e in edger reported the same numbers of degs . of these,  <dig> degs  were common, and the jaccard coefficient was  <dig> / 7286 =  <dig>  . the overall number of common genes across the  <dig> sets of degs was  <dig>  since individual sets were identified under the 5 % fdr threshold, 95 % of the  <dig> common degs can statistically be regarded as confident.

we next classified the expression patterns of the degs obtained from the  <dig> pipelines . we here assigned individual degs to one of the ten possible patterns defined in bayseq  <cit> ; this package returns one of these patterns to each gene. the background information for this data is shown in the “all_genes” row in table  <dig>  the “common” row indicates the percentages of individual expression patterns for the  <dig> common degs. the remaining rows  show the distributions for each of the pipelines. it is reasonable that no degs identified by individual pipelines are assigned as a flat expression pattern  for the hs  vs. pt  vs. rm  comparison. we found that most degs were assigned preferably to one of four patterns  and unpreferably to one of two patterns . that is, up-  regulation in g <dig> for degs tends to coincide with g <dig> more than g <dig>  this can also be seen in the results from sample clustering of the raw count data , implying that we can roughly predict the de results such as those shown in table  <dig> from the overall similarities of samples on the raw count data.table  <dig> – classification of expression patterns for degs


eee-e

ddd-d

sss-s



percentages of genes assigned to each of the ten possible patterns defined as bayseq. numbers in the “total” column indicate the numbers of genes. for example, bayseq assigned  <dig>  % of  <dig>  genes as “g1 = g2 = g <dig> ”



when comparing the distributions of patterns for degs between pipelines, we saw high similarities overall. if anything, bayseq showed a distribution relatively different from the others in light of the higher percentages for three patterns . this kind of classification can also be performed using ebseq  <cit> . ebseq defines a total of five possible patterns when comparing three groups: pattern  <dig> for non-deg , pattern  <dig> for differential expression  in g <dig> , pattern  <dig> for de in g <dig> , pattern  <dig> for de in g <dig> , and pattern  <dig> for de among all groups. similar to bayseq, ebseq also returns one of these patterns to each gene. the results of classification based on ebseq are given in additional file  <dig>  similar to the results from bayseq , we observed that nearly half the degs were assigned to pattern  <dig>  where the expression patterns between g <dig> and g <dig> tend to be more similar than for g <dig>  we also observed that the distribution for bayseq is relatively different from the others, e.g., lower percentages in patterns  <dig> and  <dig> and a higher percentage in pattern  <dig> 

we finally assessed the reproducibility of ranked gene lists. remember that the real dataset we analyzed here consists of three groups, each of which has six brs . in addition to the original three-group comparison with six replicates , we also performed three three-group comparisons by dividing the original dataset into three; individual subsets consist of two brs for each group. for example, the first subset  consists of a total of six samples for comparing hs_rep1- <dig>  pt_rep1- <dig>  and rm_rep1- <dig>  likewise, the third subset  is for comparing “hs_rep5- <dig> vs. pt_rep5- <dig> vs. rm_rep5-6”. after performing the de analysis for the three subsets , we obtained three ranked gene lists for these subsets. accordingly, there are a total of four ranked gene lists  for each pipeline. we evaluated the reproducibility of ranked gene lists  for each subset to the original dataset  and  among the three subsets .

figure  <dig> shows the numbers of common genes between the compared sets of top-ranked genes for individual pipelines:  for the top  <dig> and  for the top  <dig>  for example, there were  <dig> common genes when comparing the two sets  of the  <dig> top-ranked genes obtained from the eee-e pipeline . as shown in table  <dig> and additional file  <dig>  the more brs we use, the more accurate the ranked gene lists we can obtain. accordingly, the evaluation based on the reproducibility of ranked gene lists is analogous to a performance comparison when the available count data have only two brs. overall, we see high reproducibility for three edger-related pipelines  and low reproducibility for two pipelines . this trend is consistent with the simulation results shown in table  <dig>  and previous simulation results for two-group data with two brs  <cit> . although poissonseq showed the highest reproducibility when the  <dig> top-ranked genes were evaluated , the performance seems unstable, especially on <  <dig> top-ranked genes. this is mainly due to low reproducibility of the ranked gene list for rep1- <dig> to the list for rep1- <dig>  although we saw a plausible outlying sample  in the dendrogram of sample clustering for the raw count data, it would not have been related to the dissimilarity of ranked gene lists between rep1- <dig> and rep1- <dig>  the percentages of overlapping/common genes  for any numbers of top-ranked genes are given in additional file  <dig> fig.  <dig> reproducibility between ranked gene lists. numbers of common genes between top-ranked genes for individual pipelines are shown:  results for  <dig> top-ranked gene lists and  results for  <dig> top-ranked gene lists. bars in black , gray , and blue  in fig. 2a indicate the numbers of common genes between the two sets of  <dig> top-ranked genes obtained from the individual pipelines. for example, the gray bar  for ddd-d in fig. 2a indicates that there were  <dig> common genes when the  <dig> top-ranked genes from the dataset rep1- <dig> are compared with the  <dig> top-ranked genes from the dataset rep3- <dig>  analogously, bars in red  in fig. 2b indicate the numbers of common genes between the three sets of  <dig> top-ranked genes for the three datasets . for example, the red bar for eee-e in fig. 2b indicates that there were  <dig> common genes  when the three sets of gene lists  obtained from the pipeline eee-e for the three datasets were compared. the full r code for this analysis is given in additional file 5




effect of different choices for options
in general, there are multiple options for some functions, and different choices may result in different ranked gene lists. we investigated the effect of different choices for two representative pipelines  under one simulation condition  for  shown in table 1a. for e-e, we evaluated a total of eight combinations,  <dig> method options  in “calcnormfactors” function ×  <dig> test options  in the “glmlrt” function, provided in edger. we observed quite similar performances between the two test options . the average auc value when using the method = ”tmm” option was the highest , followed by “rle” , “upperquartile” , and “none” . since the best practice  is the default in e-e , the choices should be left unchanged. currently, tcc does not allow these options to be changed when performing eee-e that can be recommended for multi-group data with replicates.

we should note that d-d does not follow the simple conclusion described above . we evaluated a total of  <dig> combinations,  <dig> method options  ×  <dig> sharingmode options  ×  <dig> fittype options , in “estimatedispersions” function provided in deseq. while the average auc value for the suggested combination in deseq  was  <dig>  %, the highest value in the  <dig> interrogated combinations was  <dig>  %. surprisingly, the best performing combination  did not include any suggested choice.

we found that using both method = “blind” and sharingmode = “fit-only” was especially important to obtain high auc value when analyzing count data with replicates. recall that the combination was the default  choices for deseq when analyzing count data without replicates. the high auc values with the sharingmode = “fit-only” option can be explained by the nature of simulation data . in other words,  the sharingmode = “fit-only” option is advantageous when existence of count outliers is not assumed  and  the simulation data generated by the “simulatereadcounts” function in tcc do not have count outliers. the method = “blind” option ignores the group labels  and can compute a gene’s empirical dispersion value even if there is no brs. as described in the manual, this method can lead to loss of power . the use of method = “blind” for count data with replicates cannot practically be recommended in light of potential low sensitivity. most importantly, deseq  is no longer recommended by the authors and deseq <dig>  is recommended instead regardless of the number of brs  <cit> .

we also investigated the effect of different choices for one pipeline s-s under one simulation condition  for  shown in table  <dig>  we evaluated a total of six combinations,  <dig> type options  in the “estimatesizefactors” function ×  <dig> fittype options  in “estimatedispersions” function, provided in deseq <dig>  overall, we found that different choices for fittype options had more impact than those of type options. moreover, the use of fittype = “parametric” had the highest auc values , followed by the uses of “local” , and “mean” . since the best practice  is the default in s-s , the choices should be left unchanged. similar to the above described for eee-e, tcc does not allow these options to be changed when performing sss-s, which can be recommended for multi-group data without replicates. these results indicate that, as expected, suggested options should basically be used. the auc values for these combinations are given in additional file  <dig> 

CONCLUSIONS
we evaluated  <dig> pipelines for de analysis of multi-group rna-seq count data. second to two-group comparison, this experimental design has arguably been performed well in practice. to our knowledge, the current evaluation is the first comprehensive study on multi-group count data. our main findings can be summarized as follows:

first, the idea of deges implemented in tcc can be applied to multi-group data. we confirmed that the auc values for the three deges-based pipelines  were higher overall than the corresponding non-deges-based pipelines: e-e , d-d , and s-s , respectively .

second, choosing deg identification method z in the deges-based pipeline xyx-z is critical for obtaining good de results. for z in the pipeline xyx-z, using e  and s  when analyzing three-group data with and without replicates, respectively, gave higher auc values than the others.

third, to analyze three-group data with replicates, we recommend using either ded-e or eee-e . both pipelines can easily be performed by using the tcc package. while ded-e showed the highest auc values under the interrogated pipelines and simulation conditions, the difference between ded-e and the second best pipeline eee-e can practically be negligible. since eee-e is the natural extension of a deges-based pipeline for edger, using eee-e would be the best practice. however, note that two bayesian pipelines  perform comparably to or better than the glm-based pipelines  when a number of replicates are available . in particular, ebseq consistently outperformed eee-e under some simulation conditions , suggesting that the deges-based pipeline based on ebseq could produce a more accurate ranked gene list. although these bayesian pipelines tend to come at the cost of a huge computation time, their implementation and evaluation are the next important tasks.

fourth, to analyze three-group data without replicates, we recommend using either ede-s or sss-s . both pipelines can easily be performed by using the tcc package. while ede-s showed the highest auc values under the interrogated pipelines and simulation conditions, the difference between ede-s and the second best pipeline sss-s can be practically negligible. since sss-s is the natural extension of a deges-based pipeline for deseq <dig>  using sss-s would be the best practice. note that our previous recommendation for analyzing two-group data without replicates was to use ddd-d and that this conclusion was obtained only by evaluating a total of eight competing pipelines . we expect the deseq2-related pipelines  would be recommended for analyzing two-group data without replicates as an updated guideline. the comprehensive evaluation should, of course, be performed as one of the next tasks.

fifth, the results of de analysis  can roughly be estimated by the hierarchical dendrogram of sample clustering for the raw count data . the dendrogram of sample clustering tells us some useful information about the de results. the real count data we used here have  <dig>  ~  <dig>  % of degs at the 5 % fdr threshold . in our experience, such results  have frequently been obtained when individual groups  form distinct sub-clusters where each sub-cluster consists only of members in each group . in other words, if members in each sub-cluster originate from plural groups, no or few degs would be obtained as the de result for such indistinct data. of course, it is critical to employ appropriate choices for the distance metric and filtering of low count data for obtaining a robust dendrogram. while we employed the default options  in the clustering function  provided in tcc, further evaluation should also be performed.

we speculate that the current recommendations made from the three-group comparative study can be applied to data consisting of three or more groups. while our preliminary analysis for four- and five-group simulation data has produced similar results to the current study, comprehensive evaluations are the next tasks.

