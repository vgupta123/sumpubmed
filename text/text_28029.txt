BACKGROUND
dna microarray technology allows researchers to estimate the relative expression levels of thousands of genes simultaneously over different time points, different experimental conditions, or different tissue samples. it is the relevant abundance of the mrna genetic product that provides surrogate information about the relative abundance of the cell's proteins. the differences in protein abundance are what characterize phenotypic differences between cells. identifying such differences  can lead to insight about biological processes and pathways that might be involved in a disease process as well as highlight new potential targets for diagnostic and therapeutic development. see  <cit>  for more background on microarrays.

identifying signal in the presence of abundant noise
while potentially rich in information, microarray data pose a serious statistical challenge due to the sheer volume of information being processed  <cit> . it is the norm to see data collected on tens of thousands of genes from only a handful of samples. data analysis is further complicated because of heterogeneity of gene-specific variances and correlation of gene expressions due to biological effect or technological artifact. although many inferential questions are of interest, a common concern is of the detection of differentially expressing genes between experimental groups . because of the large number of genes and tests involved, and because of the many inherent sources of noise in microarray data, the potential for type-i errors or false detections is large. for two-group problems, a common strategy is to control the false discovery rate  using the method of  <cit>  or empirical bayes methods  <cit> . however, while these methods work well in controlling fdr, the price paid is often a conservativeness that leads to missing important genes  <cit> . indeed, in two-group problems, the total number of misclassified genes can be derived in closed form assuming normally distributed data  <cit> . such calculations suggest that when the fraction of truly differentially expressing genes is relatively low, total misclassification of differential effects will be large unless fdr is controlled at a high value, thus putting into question the value of such control.

multigroup data
the issues become more complex for multigroup data collected over different experimental groups, such as data collected from distinct stages of a disease process, or time course experiments in which microarrays are used to track gene expression profiles over time . the richness of such data lends itself to a myriad of potential questions and each question brings with it the thorny statistical problems associated with multiple testing. because of this, most approaches start by simplifying multigroup hypotheses into a composite question that can be tested using a one-dimensional test statistic for each gene. while this is certainly convenient – for example, it makes it possible to apply standard error control methods such as the fdr – the strategy may not be optimal for several reasons. first, the underlying test statistic is likely to be fairly elementary, and thus highly variable because it will not be regularized. that is, the test is not likely to be constructed in a way that uses information across all genes and samples. regularization is an important concept in microarray settings where sample sizes are small and the number of parameters are large . secondly, composite statistics are seriously limited in the information they provide. consider an f-test analysis involving contrasts for identifying specific patterns of differential expression across groups. for example, consider a gene that differentially expresses early on in a disease process, such as cancer, significantly affecting the biological milieu and making it possible for other genes to act, but then later vanishes. we call this a hit-and-run hypothesis. a contrast, or set of contrasts, looking for hit-and-run genes would simply provide what is equivalent to a p-value for rejecting the null hypothesis of no such pattern being present, but it would tell you very little about the likelihood of classifying a gene as having a hit-and-run pattern as apposed to some other pattern type.

rescaled spike and slab model selection and regularization
recently ishwaran and rao  <cit> , building upon work in  <cit> , introduced a method for detecting differentially expressing genes between multiple groups termed bayesian anova for microarrays . this method recasts the statistical problem as a high dimensional model selection problem, and uses a specific bayesian hierarchical model oriented towards adaptive shrinkage. by using model averaging, a way of accounting for model uncertainty, bam provides gene effect estimates that are shrunken relative to standard least square estimates in which primarily only the non-differentially expressing gene effects are shrunken. this is a general phenomenon called selective shrinkage  <cit>  that enables bam to optimally balance total false detections  against total false non-detections . selective shrinkage, theoretically, translates into more reproducible differential calls. bam's ability to selectively shrink gene effects is an important form of regularization and is due to the use of a rescaled spike and slab model introduced by  <cit> . this model, in combination with a carefully selected continuous bimodal prior , enables bam to use data across all genes and all experimental groups to accurately estimate different levels of sparsity  and then to selectively shrink gene effects based on the estimated complexities. equivalently, this procedure can be viewed as a penalization method in which each gene effect has a unique penalty term that is adaptively estimated from the data  <cit> .

the bam estimation procedure is fully automatic and is based on a gibbs sampling algorithm. not only are regularized differential gene effects estimated, but so is an automatic data adaptive cutoff value for determining which genes are differentially expressing. this cutoff value, for large enough sample sizes, has the theoretical property of delineating genes with true differential expression from those genes with no differential activity  <cit> . this is crucial, since determining an appropriate cutoff value is a critical aspect in searching for differential expression .

another important feature in analyzing microarray data is the ability to systematically deal with heterogeneity of variances across genes and groups. variance stabilization can lead to tremendous gains in power and is another important aspect of regularization. this issue was discussed in depth in  <cit>  and ishwaran and papana . bamarray™ incorporates a nonparametric classification and regression tree  clustering algorithm described in ishwaran and papana  to effectively deal with unequal variances. of note is that the procedure does not artificially dampen or amplify group differences across genes for the sake of attaining variance stabilization.

illustrative example: tracking the genomic stagewise development of liver metastatic colon cancer
as preliminary illustration and motivation for bamarray™, we look at expression data from a large microarray repository of colon cancer tissue samples comprising various stages of tumor progression. this data were obtained from sanford markowitz at the ireland cancer center of case western reserve university. all gene expression data were collected using high density 59k-on-one gene chips developed by eos biotechnology. these are affymetrix-derived chips with proprietary probe sets. the high density of probe sets reflects known genes and ests  as well as predicted exons.

standard least square test statistics  from a traditional anova models provide a strikingly different plot. figure  <dig> plots these values. especially apparent is the ellipsoid nature of the figure. as was shown in  <cit> , this is due to the high variability of the estimates and because of a regression to the mean effect caused by the correlation between the z-statistics, in this case for mets versus bsurvivors and d versus bsurvivors genewise effect estimates. regression to the mean inflates false detections and makes it more difficult to delineate signal from noise. notice how difficult it is to identify any hit-and-run candidates. early hit-and-run genes might be the ones in the quadrants indicated by the two arrows, but it is not so clear. this type of effect is strikingly absent in figure  <dig> and clearly shows the benefits of shrinkage.

implementation
software architecture
bamarray™  is a stand-alone platform independent desktop java application. solutions currently exist for the mac os x, linux, and windows xp operating systems. a native code c library is at the core of the product. this library implements the bam algorithm and consists of several components including data pre-processing, data variance stabilizing transformations, and the gibbs sampler. a java graphical user interface surrounds the native code library and allows the user to interact with the library and conduct customized data analysis.

installing and uninstalling bamarray™
bamarray™ is available for download in the form of a self-extracting executable install package. details can be found at . users must register online in order to download the product. a 30-day evaluation license key will be automatically generated and emailed to the user upon registration . the user may then download the install package and execute the file according to the operating system specific protocol. the user completes the install by following the prompts generated by the package.

on first run, bamarray™ will query the user for the license key. once the key is verified, the product will present the user with the main console from which analysis can proceed.

uninstalling bamarray™ is as straightforward as the install process. an uninstall icon is produced during the install process in the product's home directory. double-clicking on this icon will remove the product from the system. user modified data files will remain, but can be disposed of manually if so desired.

some key software features
 <dig>  bamarray is a stand-alone platform independent desktop java application. solutions currently exist for the mac os x, linux, and windows xp operating systems.

 <dig>  full multigroup analysis for up to  <dig> groups can be handled. overlay multigroup plots  are available for visualizing how genes are mapped to specific pattern types of differential expression across groups.

 <dig>  graphical zoom-in and lassoing tools enable the user to interactively generate lists of differentially expressing genes.

 <dig>  gene labels can be toggled on or off allowing genes of interest to be readily identified. genes of interest  can be highlighted using a selection list.

 <dig>  gene lists of interest can be exported for further exploration.

 <dig>  unequal variances across genes and groups are systematically handled by an automated pre-processing step.

RESULTS
note on normalization of microarray data
bamarray™ assumes that the data to be analyzed has been suitably normalized . normalization is simply the removal of systematic effects across samples that might bias inference. two examples are batch effects in which samples were run, and dates that samples were extracted. normalization can significantly affect microarray inferences  <cit> . the user is required to provide suitably normalized expression data to bamarray™. normalization procedures are currently not provided within the package, but a future release  will have this capability .

normalization methods for two-color array data  are discussed in  <cit> . for affymetrix oligonucleotide arrays, suitable options include the affymetrix mas  <dig>  analysis suite  <cit>  or robust multi-array analysis  <cit> . these, and other, procedures are available in bioconductor  <cit> .

data formats and importing data files
bamarray™ supports microarray data in the form of an excel spreadsheet or space-delimited text file . the first row of the file should contain class label information . this can be coded as letters and  integers. the first column of the dataset contains a gene label id and is used for plotting and reporting purposes. each subsequent entry following the first column is a suitably normalized gene expression measurement. there must be one row per gene, with each column representing a measurement for the sample identified in the first row. figures  <dig> and  <dig> show the first few rows of an example data set  in text and excel formats respectively.

illustrative example 
the brain tissue dataset shown in figures  <dig> and  <dig>  is a microarray experiment studying hippocampal aging and cognitive impairment. the goal of the experiment was to look for gene expression changes that track aging-dependent cognitive decline. hippocampal ca <dig> tissue was collected from  <dig>   <dig>  and  <dig> month old male fischer rats after  <dig> days training on a water maze which included object memory task . there were  <dig>   <dig> and  <dig> samples collected for the respective age groups. the age groups are labeled as young, middle, and aged. the data are available at the national center for biotechnology information  gene expression omnibus  data repository under series record accession number gse <dig>  this dataset comes pre-bundled with the default bamarray™ installation. the default input directory  contains the brain tissue dataset.

importing data
to open a microarray data set, click new under the file menu of the bamarray™ main console and browse for the data. once the file is found, click to highlight it, then click the open button at the bottom of the open file dialog box. another dialog box will appear prompting for the groups to be used in the analysis. groups can be added or removed by using the add and remove buttons respectively. alternatively, for data with many groups, the user can select all groups , or any subset , instead of having to click on each group one at a time. all "standard" navigation keys can be used. figure  <dig> shows the brain tissue dataset where all three groups have been chosen. after selecting the groups, click ok. the program will then read the data and notify the user of progress by way of the status bar at the bottom of the bamarray™ main console. file name, number of groups, number of samples per group and total number of genes  is provided in the file information panel on the main console.

bamarray™ run settings
after the data is successfully read, several different run options can be selected from the main console . many of these values are preset at well chosen default values and do not necessarily have to be adjusted .

the description of key run options are as follows :

 accuracy: low, medium, high and super settings correspond to the number of iterations for the gibbs sampler. the gibbs sampler is a monte carlo method for estimating parameter values of interest. the more iterations used , the more accurate, but the longer the run time. for data exploration, a medium setting will suffice. however, it is good practice to confirm results at the high or super setting when possible.

 baseline: this allows the user to define the baseline group for comparison purposes. the rationale for the baseline group is provided in  <cit> . it is typical to assign a control group or perhaps a normal or preliminary disease state as the baseline group. in our colon cancer example the bsurvivors represent the baseline, whereas in the brain tissue dataset the young group serves as the baseline . for time-course data the zero time point might be the most sensible baseline choice. note that a no baseline option is also available; details are provided later.

 clustering:

automatic and manual settings. the default automatic setting implements a variance stabilization and regularization step that systematically removes gene specific mean-variance trends. this is important to satisfy the constant variance assumption of the bam model. the underlying method is based on a cart clustering approach and has the important feature that it does not alter the original signal to noise ratio of the data as seen with global transformation, such as logarithms ). thus we recommend that users not pre-process their data and use the clustering procedure instead to provide variance stabilized transformed data. for advanced users a manual option is used to pre-specify the number of clusters. one should carefully consult ishwaran and papana  before experimenting with this option, however.

 variance: equal and unequal settings. expression values for genes are expected to have different variances ). this option, however, indicates whether the variability of expression values differs over experimental group as well. the default equal option implies equal variances across groups. graphical diagnostic plots  are provided for assessing if this assumption is met. for many applications, an equal variance model will be reasonable. for more details please consult  <cit>  and ishwaran and papana .

clicking run initiates the analysis. a status and progress bar at the bottom of the bamarray™ main console indicate how long the gibbs sampler will take and when the analysis has successfully completed.

bamarray™ graphics
the graphical suite becomes available once the gibbs sampling step is completed. bamarray™ graphics can be broadly grouped into two categories: data plots and inferential plots.

 <dig>  data plots are used to verify the assumption of equal variances. these include  cluster diagnostic plots,  standard deviation plots,  group mean plots, and  v-plots .

 <dig>  inferential plots are based on estimated parameters from the model and are used for detecting differentially expressing genes. these include color enhanced shrinkage plots of zcut values for identifying differentially expressing genes for a specific group. also provided are multigroup zcut scatter plots  for visualizing differentially expressing genes simultaneously over two or more groups.

data plots for assessing model assumptions: cluster diagnostic plots
if the clustering option is set to automatic, bamarray™ presents a cluster diagnostic plot for assessing the adequacy of the variance stabilization transformation. figure  <dig> shows a "cluster diagnostic" plot. the solid blue line represents the percentiles for the theoretical target under a constant variance assumption. the dashed lines are values under the attempted transformations. as the number of clusters increases, the dashed lines will become closer to the solid line. see ishwaran and papana  for more details.

data plots for assessing model assumptions: standard deviation, group mean difference and v-plots
standard deviation and group mean difference plots can be examined to assess validity of the transformation. if an equal variance model has been approximately achieved, there should be no obvious trend visible in either of the above plots . figure  <dig> shows genewise standard deviations for groups aged and young on the transformed scales. notice the lack of apparent structure and the relative tightness of the data points around the value  that is the target value.

the v-plot  <cit>  is another tool to assess adequacy of the equal variance transformation. if variances have stabilized to values near  <dig>  then plotting the group mean difference for a gene versus the corresponding t-statistic in absolute values  should give a plot with a line having constant slope. these theoretical lines  are overlayed as dotted black lines on the v-plot and the tightness around this line provides a graphical indication of the appropriateness of the transformation. see figure  <dig> 

inferential plots for detecting differentially expressing genes: shrinkage plots
shrinkage plots  <cit>  are used to identify genes found to be differentially expressing  relative to the baseline. figure  <dig> is the shrinkage plot for the zcut gene differential effects of the age group from the brain tissue data . green points indicate genes which are being turned off for the aged group, whereas red indicates genes being turned on. blue points are genes that are not differentially expressing.

the horizontal axis for the shrinkage plot are zcut gene differential effects while the vertical axis are the corresponding posterior variances. theoretical arguments show that genes that are truly differentially expressing will have posterior variances that coalesce to  <dig> on the far left and right sides of the plot. as the number of samples increases, eventually all of the truly differentially expressing genes will be found and none of the non-differentially expressing genes will be falsely detected  <cit> . bamarray™ uses this principle to determine a data adaptive cutoff value.

inferential plots for detecting differentially expressing genes: multigroup scatterplots and zooming in
the legend in the top right corner of figure  <dig> indicates how each gene is mapped to a particular pattern type of differential expression across the experimental groups. as in the shrinkage plot, the actual decision of whether a gene is significant and which group it belongs to is done automatically by bamarray™. different colors correspond to different expression profile types across groups. a gene could, for example, be significantly upregulated going from young to medium to aged or down regulated going from young to medium but not from medium to aged. these patterns would correspond to the magenta color in the upper right hand quadrant of figure  <dig> and the green data points hugging the negative y-axis respectively. multigroup scatter plots are typically dense. it is often useful to zoom in on particular genes or particular gene expression patterns to improve clarity. figure  <dig> shows the lassoing zoom-in feature available in bamarray™. a lassoed box focused on only those genes that are significantly upregulated for the aged group but not the middle aged group is illustrated .

the lasso feature is activated by clicking and dragging the mouse cursor over a region of interest. releasing the mouse button causes the plot to zoom in . the user can repeatedly zoom in, even examining a single gene of interest if they choose. the original plot can always be restored by clicking the reset zoom button at the bottom of the plot. lassoing is available on all data and inferential plots.

adding gene labels to plots and saving gene lists
gene labels can be toggled on or off on almost all bamarary™ plots . to toggle labels, pull down the view menu item on the plot and click on the the desired gene subgroup. to overlay different subgroups, simply repeat the process by clicking on a new subgroup. a word of caution: if the zoom is reset, the original plot is restored but the labels will still be on. this can considerably slow the program down. however, gene labels for a particular subgroup can always be removed by going through the gene labeling process again and clicking the subgroup off.

labeled  genes can be saved as genes lists and output to a text file. to save all genes on the current plot pull down the file menu on the plot and click save genes as.... to add more genes to a previously saved list, simply use the append genes feature on the same menu column. for convenience bamarray™ makes sure that appended lists of genes contain no duplicate gene labels. there is also a feature that allows the user to save all significant genes. this is found on the main console under the file menu as save all sig genes.... in particular, for users who are interested in a fully automated session, the procedure is:

 <dig>  read in the data. select the groups for the analysis and the baseline group. click on run.

 <dig>  when the analysis is complete, go to the main console under the file menu and click on save all sig genes.... this will save all significant genes and their classification values.

plotting options and using the gene tracking facility
bamarray™ plots can be customized by pulling down the tools menu item on any graph. this will highlight an options command, which when activated, will open up a plot options window that highlights preferences. plotting label and character sizes can be adjusted here. clicking the apply button activates the desired changes. the default label and character sizes are  <dig> pt.

highlighting the tracking button in the plot options window  opens up a dialog box that allows the user to manually enter gene labels. genes can be tagged one at a time by sequentially entering gene names and then clicking the add button. the gene list of interest will then be updated and viewable in the display box above. genes can be deleted from this list by highlighting those genes using the mouse and then clicking delete. this feature can be used to track genes that make up a biological pathway of interest. once a gene list has been produced, clicking apply will cause all open plots to have genes in the gene list highlighted in boldface and their points enclosed in a dark circle. it can be handy sometimes to increase the plotting label size in order to clearly see the highlighted genes on all plots.

more on assuming equal variances across groups
as discussed earlier, bamarray™ allows for group variances to be modeled as unequal. a tip-off that an unequal group variance transformation is required is shown in figure  <dig> which shows a model with an unequal group variance structure fit under an equal variance assumption. the standard deviations plot shows a characteristic smearing effect indicating that the variance clustering algorithm was not able to achieve constant variance across genes. contrast this with figure  <dig> which uses the unequal variance clustering option that allows for unequal group variances. note how the smearing effect has all but vanished.

the no baseline option
there are occasions when fitting a model with a no baseline option is of interest. this option is accessible under the tools menu on the main console under baseline options. clicking on no baseline selection enables this feature for the session. no baseline means that each gene effect is being tested against a null value of zero  rather than against a defined baseline group.

example: tracking tumor progression genes. the colon cancer example presented earlier compared the various stages of colon cancer against the early onset bsurvivors group. in an informal sense, this analysis asks the question "what makes a good tumor go bad?" another approach would be to identify genes that track the stagewise progression of metastatic colon cancer. this can be done by creating a new response variable, which measures the difference in gene expression between the successive stages of colon cancer, and then using a four-group analysis with no baseline in bamarray™. the new response values would include modified stage c gene expression data created by comparing c measurements for a gene to some overall summary measurement for the corresponding bsurvivors gene. similarly there would be a modified stage d measurement designed to measure difference from the d's to the c's. finally we would have modified mets expression values recording differences between the mets and the d's. each gene effect could then be tested against the null value of zero and statistical inference would reveal which genes have significant changes in gene expression as a function of stagewise progression of colon cancer.

discussion
the need for high quality software is rapidly growing in the area of genomic research. more powerful and elegant ways to store and analyze data are making mining the vast quantities of data we collect much more manageable and time efficient. our main objective in producing bamarray™ was to provide cutting edge statistical tools embedded within a sophisticated and easy-to-use graphical interface. our goal was to free the user from as many subjective choices as possible and facilitate interactions with their data. while some knowledge of the underlying methodology is certainly useful, our main focus was to delineate the methodological ideas via simple, yet elegant, graphics that would make the software much more approachable for non-statisticians. yet because the output from our software is stored in text format with clean and simple summary structures, it makes it possible for a more advanced statistical user to interface bamarray™ with their own favorite products.

bamarray™ has some key advantages which can be summarized and contrasted against other similar software. these include:

 <dig>  bamarray is a stand-alone desktop java application that interfaces with a native code c library. the software is highly portable and it is possible to create builds of the software for virtually any operating system. at this time, the software has solutions for the mac os x , linux, and the windows xp operating systems.

 <dig>  bamarray™ allows for a full multigroup analysis. this facilitates the searching for complex biological patterns such as the hit-and-run patterns of differential expression described earlier in this manuscript. of course, many other applications are possible. for example, the very large number of experimental groups that can be analyzed  facilitates studying expression changes in data settings where group labels could be tissue types collected from multiple regions within an organism .

 <dig>  bamarray™ is nearly automatic in its usage. the user is freed from having to set and  choose tuning parameters, many of which can often affect the resulting conclusions  <cit> . instead, we appeal to underlying theory to set tuning parameters at theoretically optimal values.

 <dig>  bamarray™ importantly does not require a user-specified cutoff value for identifying significant genes. this is often the most difficult part of using a statistical software package. the choice of what is deemed significant is often arbitrary and dictated by available resources for follow-up analyses. instead with bamarray™, the cutoff values are set by appealing to the underlying theory via a novel shrinkage plot. from this plot, genes with posterior variances coalescing at a value of  <dig> are guaranteed to be truly differentially expressing with probability tending to  <dig> 

 <dig>  unequal variances across genes and  experimental groups is a common occurrence in multigroup studies. as described, global variance stabilizing transformations can be difficult to find and also unduly affect signal-to-noise ratios. bamarray™ uses a sophisticated local variance stabilizing cart algorithm which does not suffer from the adverse properties of a global transformation. importantly, this type of variance stabilization can also be used as a pre-processing step on its own. so even if a user would eventually like to analyze data in another package, variance stabilization can still be handled effectively in bamarray™.

 <dig>  a no-baseline option in bamarray™ allows for some non-standard experimental designs to be analyzed. this includes analyzing one-way anova models , time course gene expression profiles, or perhaps tracking disease progression genes.

 <dig>  a suite of graphical tools are available in bamarray™. these include diagnostic plots to check for the appropriateness of model assumptions and the adequacy of the pre-processing; zoom-in and lassoing features that allow the user to interactively generate lists of differentially expressing genes; toggling on or off of gene labels; and a gene tracker function that allows pre-specified lists of genes to be interactively tracked for differential expression across experimental groups.

 <dig>  gene lists can exported to any software package that can read simple text files. a myriad of possibilities exist for follow-up analyses, but for most users, annotating gene lists would be of first importance. this can be done easily by importing significant gene lists from bamarray™ into packages like genespring, netaffx™ or bioconductor.

 <dig>  all figures can be saved as publication quality color graphics.

 <dig>  analyses can be done at various levels of accuracy. this amounts to user-control over how many gibbs sampling iterations are allowed. for most exploratory, first-wave analyses, a lower number of iterations would be sufficient. when conducting confirmatory analyses, a much larger number of iterations can be set.

what's next?
our illustrative example involving colon cancer showed how bamarray™ can be used to track differentially expressing genes in multigroup experiments by statistically mapping genes to unique differential expression pattern types . an important outcome of this is the ability to group genes by pattern type in order to find more focused underlying biology. we note, however, that higher order analyses like building molecular classifiers or survival outcome predictors can also benefit from this information. in fact, the very patterns that are found can be used in a special way to help build more powerful molecular models. this is work that we will report on shortly.

in addition to this work, the team continues to upgrade the software and a new release, release  <dig> , will soon be made available at . this major upgrade will contain some important enhancements to the product. for example, the capability to run bamarray™ in an unattended batch mode initiated from a script file will be available. batch mode allows users to source bamarray™ from any application that implements the use of operating system command driven script files. writing custom designed scripts allow users to interface with different types of software, such as bioconductor, and r, and could be used, for example, to automate the process of normalizing data. release  <dig>  will also have a save run feature allowing users to save the results of a run for later retrieval. a run that can take minutes to execute can be restored in only seconds using a restore run feature. save run can also be triggered in batch mode. this unique feature allows users to batch multiple jobs for later retrieval. finally, release  <dig>  will allow users to populate a tracking list from gene labels found in an existing file. these and many more enhancements will be found in the next release of the product.

CONCLUSIONS
bamarray™ is user friendly java-based software that effectively and efficiently implements the bam methodology for analyzing expression data from multigroup experimental designs. the portability and flexibility of the product make it possible to rapidly adapt bamarray™ to the highly dynamic field of genomic informatics and to modify the existing product to allow for seemless interface with other software and data mining tools as they become available.

availability and requirements
 <dig>  project name: bam

 <dig>  project home page: 

 <dig>  operating system: windows xp, linux, mac os x .

 <dig>  programming language: java, c.

 <dig>  other requirements:  <dig> mb ram,  <dig>  ghz pentium  <dig> cpu,  <dig> mb free disk space on hard drive, sun java™  <dig> runtime environment, standard edition   <dig> x. for windows xp, installation must be done by users in the "administrators" group or "power users" group only.

 <dig>  license: academic and commercial license available from technology transfer office at case western reserve university. details found at .

 <dig>  any restrictions to use by non-academics: license needed.

authors' contributions
hemant ishwaran and j. sunil rao developed the theory and methodology underlying bam. the colon cancer application evolved from research collaboration between j. sunil rao and sanford markowitz of the ireland cancer center at case western reserve university. java software development, design and software engineering issues for bamarray™ were handled by udaya b. kogalur. the native code c library was written by hemant ishwaran. all authors contributed to writing the manuscript.

