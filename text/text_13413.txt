BACKGROUND
the assumption, that proteins are the functional resultant of most genetic information, was derived from studies primarily done on bacteria such as escherichia coli whose genomes are dominated by protein coding sequences . the perception that organism  complexity is correlated with the number of protein coding genes was undermined, when by means of sequencing experiments it became abundantly clear that the numbers of protein coding genes do not keep up with the functional repertoire of an organism ). on the other hand, the non-coding region of genomes increases with the complexity of organisms. for example, ~5%, 70% and 80% of the genomic regions of bacteria, unicellular eukaryotes and invertebrates respectively are annotated to be non-coding
 <cit> . amazingly, not only is the majority of this non-coding region transcribed, but also these non-coding rnas  are proving to be biologically functional
 <cit> . many types of ncrnas are involved in diverse cellular activities such as replication
 <cit> , transcription
 <cit> , gene expression regulation , gene silencing
 <cit>  and chromosome stability
 <cit> , rna modification , rna processing , rna stability
 <cit> , protein stability
 <cit> , translocation  and localization
 <cit> . having roles in developmental processes and being involved in maintaining homeostasis, any perturbation in the abundances and or sequence of these ncrnas results in disorders like tumorigenesis
 <cit> , neurological disorders
 <cit> , cardiovascular
 <cit> , developmental
 <cit> , autoimmune, imprinting
 <cit>  and other human diseases and disorders
 <cit> .

unraveling the functional role of this allegedly inert transcription requires the analysis of large amounts of sequence data. recently, the encode project
 <cit>  assigned biochemical functions for 80% of the human genome, much of which is annotated to be non-protein coding. various other high-throughput sequencing  projects are producing huge amounts of transcriptomic data
 <cit> . thus, computational methods are required to analyze these humongous datasets so as to address the goal of predicting potentially functional non-coding regions and their respective function.

while it has been possible to efficiently discriminate coding and non-coding rna sequences, for example by employing svm based prediction models , further classifying the non-coding transcripts into functional categories remains challenging. although, various bioinformatics tools are available for the classification of these transcripts-- their prediction performance is not satisfactory.

knowing that nucleotide base pairing and stacking interactions between different regions provide ncrna sequences a well-defined structure; these interactions may also further reveal biological functions. indeed it has been shown that rna structure is responsible for specific biological function
 <cit> . minimum free energy  based approaches
 <cit>  and thermo-stability of multiple aligned structures
 <cit>  have also been used for the prediction of functional rna.

the structure of an ncrna molecule can be represented as a graph. being a representative of relationships between different nucleotides, a ncrna graph uses ‘nodes’ to represent the nucleotides and ‘edges’ to represent the interactions  between the nucleotides. such a graph based representation leads to defining of different properties that represent the different characteristics of ncrna molecules. two levels of relationships can be defined using graph theory based properties: relationships defined on the level of the nucleotides  and relationships that represent the graph itself . graph properties, derived from a graph representation of predicted ncrna structure, have been previously used as a feature set to classify ncrna molecules
 <cit> . childs et al <cit>  developed a web-based tool, grapple that utilized graph properties to classify rna molecules into rfam families. when compared to existing methods, grapple was demonstrated to be more robust to sequence divergence between the members of an rfam family and also exhibited improved prediction accuracy.

the overall performance of various machine-learning algorithms is intrinsically dependent upon many factors. the performance parameters of grapple could be affected by ‘external’ factors such as the accuracy of predicted rna structure, the choice of classifier and normalization/optimization procedures selected. in order to explore the potential of different classes of machine learning algorithms to learn distinctive features of ncrna classes, we employed graph properties as input parameters to a variety of machine learning methods. additional information regarding structures containing pseudoknot interactions was also incorporated into the modeling framework. so as to facilitate comparative analysis with grapple, we used the same training and testing datasets as grapple. to incorporate rna pseudoknot information ipknot software was used to predict rna structures, as it was demonstrated to be more accurate when compared with other methods
 <cit> . we implemented this approach into the form of a web-server  called ‘rnacon’.

RESULTS
in order to discriminate the non-coding sequences from the coding transcripts, we initially developed a methodology for discriminating non-coding rna from coding rnas. secondly, we developed models to classify ncrnas into different classes.

prediction of non-coding rnas
we employed composition-based features for discriminating coding and non-coding sequences. using mono, di, tri, tetra and penta- nucleotides composition as an input feature, machine-learning techniques based models were developed for classification purposes
 <cit> . we analyzed simple mono-nucleotide compositions  & di-nucleotide compositions  and observed that uridine is preferred in noncoding rna whereas cytosine and guanine are more abundant in coding rna. the comparative analysis of di-nucleotide compositions showed that ua, gu and uu preference in ncrnas whereas cg, ga, gc, uc, aa and ac are preferred in coding rnas . this analysis established the differential nucleotide compositions difference between coding and non-coding rnas. thereafter, we used these compositional features for developing svm-based models. the most efficient model was created by complete optimization of different parameters/kernels and achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc using 10-fold cross validation technique. the same procedure was repeated for di-nucleotide compositions  and achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc. the comparative analysis of tri-nucleotide compositions also showed differences between ncrna and coding rnas . we achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc using  <dig> input features of tri-nucleotide compositions . tetra-nucleotide compositions  based approach of  <dig> input features achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc. the  <dig> input features of penta-nucleotide compositions  based approach achieved  <dig> % accuracy,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc. this analysis shows that simple tnc based approach that involves only  <dig> input features was sufficient to predict ncrnas with good accuracy . thereafter, weka package
 <cit>  was used to select  <dig> attributes  of tnc that contributed maximally towards discriminating the coding and non-coding sequences. these tri-nucleotides are acg, ccg, cga, cgc, cgg, cgu, cua, gcg, ggg, gua, uaa, uac, uag and ucg. we applied tnc of these  <dig> tri-nucleotides for svm-based prediction and achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc.

we also applied a hybrid approach of all five  approaches. using this, we predicted svm scores of all five as an input for the svm based machine learning. on the basis of these five input features, we achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc. in the machine learning based predictions, over-optimization is a major problem so it is important to evaluate, models on independent datasets. we used 50% data of both noncoding and coding rna for training and testing by 10-fold cross validation and predicted remaining 50% independent data on the developed svm models. here we achieved  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig>  mcc for the mnc, dnc, tnc, ttnc, pnc and hybrid approaches respectively . the performance of svm based prediction model is threshold-dependent, thus we provided threshold-wise results of all approaches in the additional file
1: tables s <dig>  s <dig>  s <dig>  s <dig>  s <dig> and s <dig> 

the mnc, dna, tnc, ttnc and pnc approaches are mono-, di-, tri-, tetra- and penta-nucleotide compositions respectively. hybrid is a combined approach based prediction of all predicated svm scores of mnc, dnc, tnc, ttnc and pnc approaches.

classification of non-coding rnas
in the classification of different non-coding rnas, we used same 20% non-redundant dataset that was earlier used by the grapple method
 <cit> . this dataset incorporated both training and testing datasets for  <dig> different classes of non-coding rnas .

composition based approaches
knowing that the composition based approaches performed well for the purpose of discriminating coding and non-coding rnas, we calculated mononucleotide and di-nucleotide composition based differences between the ncrna classes . the tri-nucleotide compositional differences were also different for the whole dataset  and 20% non-redundant dataset . to check whether these approaches could also classify different ncrna classes, we used mnc, dnc and tnc as an input feature set. after applying  <dig> different classifiers  it was observed that composition based approaches were unable to classify different ncrnas. only bayesnet achieved highest  <dig>  sensitivity using tri-nucleotide compositions . this suggests that simple composition based input feature set is not able to distinguish between different classes of ncrnas.

*
#
*ipknot – normalized  graph properties value used for all classifier.

#ipknot – real graph properties value used for all classifiers.

graph properties based approach
as the composition-based approach was not able to classify different classes of ncrna sequences, an alternative feature set was required that incorporates ncrna family specific information. it has been shown previously that the structure of ncrna may provide insights into biological functions and therefore specific ncrna families
 <cit> . in order to use this ncrna structural information as a feature set for machine-learning techniques, we firstly predicted the structures of non-coding rnas belonging to  <dig> different classes by using ipknot software
 <cit> . the igraph r package was used to calculate the graph properties of all the predicted structures
 <cit> . total  <dig> different graph properties were chosen . it is evident from figure 
 <dig>  that graph properties contributed differentially towards various ncrna classes.

as graph properties can represent nucleotide level  and structure level  parameters, the scale and the range of graph properties metrics vary extensively. so as to provide uniformity in the scale and range of these metrics, we normalized graph properties values into the range of - <dig>  to + <dig>  before applying  <dig> different classifiers. the naivebayes, multilayerperceptron, ibk, libsvm, smo and randomforest achieved sensitivity  values of  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig>  respectively . as the bayesnet classifier failed to run on the normalized values, we tried all these classifiers on the raw, non-normalized, value of graph properties: where bayesnet, naivebayes, multilayerperceptron, ibk, libsvm, smo and randomforest achieved sensitivity values of  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig>  respectively . it must be pointed out that randomforest  based approach achieved the highest sensitivity of  <dig>  and  <dig>  mcc . the multilayerperceptron is second highest performing classifier and achieved sensitivity of  <dig>  and  <dig>  mcc . smo classifier based prediction achieved sensitivity of  <dig>  and  <dig>  mcc .

since we used the dataset from the previous study of grapple, where they have already removed the biasness of sequence similarity, length and gc content in order to test the predictive power of graph-properties only
 <cit> . however, we calculated the correlation between the average length of particular ncrna class and their prediction performance  from randomforest model and achieved correlation coefficient values  of - <dig>  between the average length and sensitivity . it means, length affects the prediction performance and has a negative correlation with the sensitivity.

comparisons of rnacon with different existing methods
in order to evaluate the prediction performance of rnacon , we compared rnacon with different gene-calling programs, conc, cpc, grapple and rfam-based covariance models.

comparison with different gene-calling programs
the gene-calling programs detect protein-coding part in the transcripts/cdnas; therefore, they can also be used to discriminate between coding and noncoding genes. in this study, we used  <dig> noncoding rnas as positive and  <dig> coding rnas as negative datasets-- collectively called conc dataset. rnacon achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc on this conc dataset. we evaluate performance of three commonly used gene-calling programs  on this conc dataset.

first, we used the standalone version  <dig>  of augustus on the conc dataset and found that it predicted genes  in the  <dig>  noncoding rnas out of  <dig> noncoding rnas. this means that augustus correctly predicts  <dig>  noncoding rnas as non-coding . similarly, it predicted genes in the  <dig>  coding rnas out of total  <dig> coding rnas and it failed to predict any gene in the remaining  <dig>  coding rnas . overall augustus achieved  <dig> % accuracy and  <dig>  mcc. likewise, genemark.hmm  achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc. comparatively, glimmer.hmm  performed better than other two gene-calling programs and achieved  <dig> % sensitivity,  <dig> % specificity,  <dig> % accuracy and  <dig>  mcc. these results showed that rnacon performed better  than other three gene-calling programs .

the prediction of the three selected gene-calling programs is based on the prediction of protein coding genes only. these three algorithms were designed to specifically predict the protein coding genes and ignore the rest of the sequences, treating them as background noise. these gene-calling algorithms perform satisfactorily while predicting non-coding rnas. in reality these methods are actually ignoring the non-coding "background" by just selecting for the protein coding sequences whereas rnacon is actually discriminating coding the non-coding genes and not selectively identifying one class from the datasets.

comparison with conc and cpc
in the discrimination between noncoding and coding rna, conc
 <cit>  has used various input features  such as peptide length, amino acid compositions, secondary structure content, percentage of residues exposed to solvent, sequence compositional entropy, number of homologs in a protein database and alignment entropy. the conc method was further improved by cpc
 <cit>  method using the following six input features: log-odds score, coverage of the predicted orf, integrity of predicted orf, number of hits against protein database, hit-score and frame-score. using all these complex input features cpc reported  <dig> % accuracy. for comparison purposes, we used cpc standalone software
 <cit>  to calculate these input features from the same conc dataset. by developing svm-based models we achieved maximum accuracy of  <dig> %, which is almost similar to five-input features  based hybrid approach of rnacon  . varied factors such as learning parameters, optimization procedure and svm version can affect this marginal performance difference. importantly, rnacon uses computationally simpler methodology to achieve comparable results. considering the humongous amounts of sequence data, simple, fast and straightforward methods are requirement of the current times. for example, the rnacon_predict  takes less than 1 minute  to process  <dig> sequences  using a mac os x  of  <dig>  ghz  and 4gb ram  system. in contrast, cpc reported that their method took 3513 minutes of cpu time  for same number  of rfam sequences. the huge amount of available transcriptomic/ngs data requires rnacon type of method because it can easily process millions of sequences within reasonably cpu time. the rnacon_predict processed  <dig> sequences each of coding and noncoding rna in the  <dig>  and  <dig>  minutes respectively. moreover, given the importance of ncrnas in biology, our primary emphasis was to develop a method for the ncrna classification.

comparison with grapple
in order to undertake a one-to-one comparison with the grapple method, we created the same confusion matrix , as was shown in childs et al [see table 
 <dig> 
 <cit> ]. following childs et al
 <cit> ,  <dig> random testing sets , were incorporated into the confusion matrix . comparing the performance parameters, we achieved sensitivity of  <dig>  and mcc of  <dig>  as compared to sensitivity of  <dig>  and mcc of  <dig>  achieved by the grapple method. in the class-wise comparisons of all  <dig> classes, sensitivity of  <dig> classes and specificity of  <dig> classes of our method is higher than those of the grapple method . it clearly shows that our randomforest based approach performed better than the libsvm-based approach of grapple method.

comparison with rfam-based covariance models 
although, grapple already compared the graph-properties based and covariance based models
 <cit> , the study employed muscle based alignments, that may artificially handicap the performance of covariance models. therefore, we used the original rfam-based covariance models  and compared with our rnacon method. all the sequences of different ncrna classes used for the development of rnacon were retrieved from rfam . we evaluate rfam-cm version and rnacon on novel sequences those that were not included in release  <dig> . in order to remove biasness in prediction, we have only taken new sequences that have no similarity  with sequences in rfam . in order to extract non-redundant sequences, we search sequences of different classes/families in rfam  against the same families in rfam . our final dataset contained sequences of different classes in new rfam  that shows no similarity at blast e-value  <dig>  with sequences in rfam .

surprisingly, rfam-cm  performed unsatisfactorily on these  sequences and classified only  <dig> % ncrnas correctly. when we employed rnacon for predicting the classes of these sequences, the prediction accuracy was  <dig> % . it is noteworthy that rnacon was able to accurately predict two non-coding rna families , whose sequences were novel in the comparative analysis. above analysis indicates that rnacon can also classify non-redundant non-coding sequences, where rfam fails to classify the same. overall rnacon is a useful tool, which can classify even sequences which have low sequence similarity; it will complement existing tools like rfam-cm.

discussion
knowing that biologically important functional information is present at the sequence as well as at the structure level, we investigated both the sequence-based feature set as well as the structure based graph properties to discriminate between coding and non-coding rnas and to classify ncrnas into different families. we initially try to discriminate sequences of ncrnas from the sequences of protein-coding rnas and subsequently we go on to explore the potential of a range of machine learning algorithms to classify the ncrna sequences into different families. an overview of the algorithm of rnacon method is given in the figure 
 <dig> 

for the purpose of discriminating between non-coding and coding rna sequences, svm based simple tri-nucleotide compositions  approach performed well. although, nucleotide composition based approaches have been used previously by conc
 <cit> , the study also involved the use of various other features such as peptide length, amino acid compositions, secondary structure content, percentage of residues exposed to solvent, sequence compositional entropy, number of homologs in a protein database and alignment entropy. although biologically relevant, all these features incorporate un-necessary complexity to the problem of discriminating coding from non-coding rnas. an advantage of using the tnc approach is that when developed into a web-based/standalone application, it efficiently discriminates coding and non-coding rna, before we further classify them into different ncrna classes. weka software
 <cit>  was used to select  <dig> most contributing tri-nucleotides and observed that cua, ggg, gua, uaa, uac and uag are preferred in non-coding rnas whereas acg, ccg, cga, cgc, cgg, cgu, gcg and ucg are preferred in coding rnas . obviously, tnc of the stop codon uag and uaa are more abundant in ncrnas whereas cg containing tri-nucleotides  are more preferred in the coding rnas.

to classify different ncrnas,  <dig> different graph properties of ipknot-based predicted structures were calculated using the igraph r package. although biological interpretation of various graph properties is not as yet established, properties related to local or global features of any ncrna structure could reveal interesting insights of different ncrna classes. for examples measures like betweenness and centrality could reveal the most "central" nucleotides—depicting important roles these core nodes may play in the flow of information. global properties like degree, diameter, girth and density provide us with a holistic view of the ncrna structures, revealing the overall "compactness" of the different classes. a thorough analysis of the biological significance if these properties could indeed prove to be beneficial. weka package that contains various classifiers such as bayesnet, naivebayes, multilayerperceptron, ibk, libsvm, smo and randomforest was used to develop and test different classification models. by applying  <dig> different classifiers, we found that randomforest was the best performing classifier and achieved highest mcc of  <dig>  and outperformed the mcc  of grapple method
 <cit> . the graph properties based approach performed well  for haca-box, mirna,  <dig> s-rrna, trna, 6s-rna, tmrna and intron-gp- <dig> ncrnas while its performance was average  for the 5s-rrna, srp, t-box and ribozyme ncrnas. the approach failed  to classify cd-box, ires, leader, intron-gp- <dig>  ssu-rrna <dig> and riboswitch . the reason was because most of the cd-box, leader, ires, intron-gp- <dig>  ssu-rrna <dig> and riboswitch sequences were wrongly predicted as  <dig> s-rrna, haca-box, t-box, ribozyme, intron-gp- <dig> and  <dig> s-rrna respectively. many factors, such as accuracy of predicted structures and conversion of structures into the informative graph properties influence the prediction performance.

the prediction performance based comparison of rnacon with three gene-calling programs indicates that rnacon performs better in discriminating non-coding and coding sequences. similarly, rfam-based covariance models performed poor to classify the novel/non-similar sequences whereas comparatively structural information based graph-properties of rnacon method performed well because graph-properties based features provide both local as well as global structural features of a particular class. the performance of rfam-based covariance models was poor because we evaluated performance on the rfam  <dig>  sequences, which have very low similarity  with the rfam  <dig>  database. if we evaluate all the sequences in the rfam  <dig> , which are not included in the rfam  <dig>  , then performance will be much higher. additionally, a simple algorithm for discriminating coding and noncoding rnas is efficient enough to process thousands of rnas in few minutes. currently, rnacon method was not developed for some newly emerging noncoding classes such as lncrnas and crispr. in the future, we hope that prediction performance will be improved with more accurate and efficient structure prediction algorithms, more biologically relevant graph properties and classifiers and will also integrate the new ncrna classes.

CONCLUSIONS
in this study, a systematic attempt has been made to predict and classify ncrnas. svm based tnc approach discriminated noncoding and coding rnas efficiently. furthermore, graph properties based approach classifies different ncrna classes using randomforest classifier. analysis showed that length of rnas has a negative correlation with the prediction sensitivity for classifying noncoding rnas. comparatively, rnacon performed well than other gene-calling programs and rfam-based covariance models. all these prediction models have been implemented in the form of a freely available ‘rnacon’ web-server/standalone.

