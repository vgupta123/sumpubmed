BACKGROUND
in recent years, high throughput biotechnologies have made large-scale gene expression surveys a reality. gene expression data provide an opportunity to directly review the activities of thousands of genes simultaneously. however, computational methods that can handle the complexity  of these biological data are often unavailable  <cit> . powerful computational methods and data mining tools are needed for biologically meaningful inferences from gene expression data.

cluster analysis has been used to separate genes into groups based on their expression profiles  <cit> , in which similar expression profiles will be more likely in the same group. although cluster analysis gives insight into the groups of genes that may share similar functions, the inference of the relationships among these groups is beyond what cluster analysis can do.

a variety of continuous or discrete, static or dynamic, quantitative or qualitative models have been proposed for inference of biological networks. these include biochemically driven methods  <cit> , linear models  <cit> , boolean networks  <cit> , fuzzy logic  <cit> , bayesian networks  <cit> , and recurrent neural networks  <cit> . biochemically inspired models are developed on the basis of the reaction kinetics between different components of a network. however, most of the biochemically relevant reactions under participation of proteins do not follow linear reaction kinetics, and the full network of regulatory reactions is very complex and hard to unravel in a single step. linear models attempt to solve a weight matrix that represents a series of linear combinations of the expression level of each gene as a function of other genes, which is often underdetermined since gene expression data usually have far fewer dimensions than the number of genes. in a boolean network, the interactions between genes are modeled as boolean function. boolean networks assume that genes are either "on" or "off" and attempt to solve the state transitions for the system. the validity of the assumptions that genes are only in one of these two states has been questioned by a number of researchers, particularly among those in the biological community. in  <cit> , an approach is proposed based on fuzzy rules of a known activator/repressor model of gene interaction. this algorithm transforms expression values into qualitative descriptors that can be evaluated by using a set of heuristic rules and searches for regulatory triplets consisting of activator, repressor, and target gene. this approach, though logical, is a brute force technique for finding gene relationships. it involves significant computation time, which restricts its practical usefulness. in  <cit> , we propose the use of clustering as an interface to a fuzzy logic-based method to improve the computational efficiency. in a bayesian network model, each gene is considered as a random variable and the edges between a pair of genes represent the conditional dependencies entailed in the network structure. bayesian statistics are applied to find certain network structure and the corresponding model parameters that maximize the posterior probability of the structure given the data. unfortunately, this learning task is np-hard, and it also has the underdetermined problem. the recurrent neural network  model has received considerable attention because it can capture the nonlinear and dynamic aspects of gene regulatory interactions. several algorithms have been applied for rnn training in network inference tasks, such as fuzzy-logic  <cit>  and genetic algorithm  <cit> . in  <cit> , we applied particle swarm optimization  method to train the rnn for network inference, yielding promising results.

as variant sources of biological data are becoming available now, it is very necessary and helpful to infer gene regulatory network  not only from one single data source, but from data fusion of multiple complementary data sources. a few previous studies combined time course gene expression data with other data sources, such as genomic location data  <cit>  and sequence motif  <cit> . prior knowledge of grn helps understand gene interactions in important biological processes such as differentiation, cell cycle, and development. due to the specific properties of gene expression data, the task of inferring grns involves several challenges including:  living cells contain thousands of genes ;  each gene interacts with one or more other genes directly or indirectly with complex dynamic and nonlinear relationships,  current technologies generate data that involve a substantial amount of noise, and  due to the cost of large-scale gene expression profiling experiments, the sample size is extremely low compared with the number of genes. in this study, we address these challenges by:  preprocessing gene expression data  to reduce the data noise;  clustering genes with gene expression data and gene functional category information to find the optimal modules with biological significance and reduce the problem dimensionality;  modeling grns with the particle swarm optimization â€“ recurrent neural network  method between the modules to capture their nonlinear and dynamic relationships.

our previous studies  <cit>  demonstrate that we can benefit by incorporating known gene functional category information in terms of improving the inferential power of our framework. moreover, instead of using fully connected rnn model, we propose a network pruning method to select the statistically significant weights for the final grn structure using pso. the hybrid pso-rnn algorithm is applied to infer networks of interactions from two real-world gene expression data. the inferred grns are confirmed with previous studies.

RESULTS
in this section, we demonstrate the inference ability of our proposed method via two experimental studies: the rat central nervous system  and yeast cell cycle process. both data were preprocessed in the original studies  <cit> . to proceed with the module network inference process, we first imputed the missing values in the data by using the bayesian principal component analysis  method  <cit> . following that, we standardized the data between zero and one.

rat cns data
this case study is based on the data published in  <cit> , consisting of gene expression levels for  <dig> genes during the development of the cns of rats. each gene was measured at nine different points in time . the first measurement was made  <dig> days before birth, and the intervals between measurements were  <dig> or  <dig> days in the period before birth and  <dig> days after birth. the gene functional category information can also be found in  <cit> .

the module selection result and corresponding modules are shown in figure  <dig>  as illustrated in figure 1a, the optimal number of fuzzy c-means  clustering is five, which confirms previous cluster result reported in  <cit> . figure 1b shows the expression levels of the four clusters . we also compared the genes in each cluster with the cluster results in  <cit> . most genes are the same in each cluster, although the clustering methods are different in the two studies. we considered four modules that correspond to the first four clusters: module  <dig> consists of genes active during initial proliferation, module  <dig> contains genes associated with neurogenesis, module  <dig> in made up of most genes for neuro transmitter signaling, and module  <dig> contains genes active during the final maturation of the tissue. this shows that our module selection method has the ability to identify the optimal number of modules by incorporating gene function category information.

the reverse engineering algorithm is applied to the four modules for network inference. the final reconstructed network was built by choosing significant parameters as described in the methods section. our results were compared to those obtained by deng et al.  <cit>   and wahde et al.  <cit>  . apparently, the three results agree on certain regulation pathways. module  <dig> shows up regulation to module  <dig>   <dig> and  <dig> in our method, which can be verified in either  or . the regulation associated with module  <dig> can also be found in  and . only one new regulation inferred by our method could not be found in  and : module  <dig> up-regulates module  <dig>  according to figure 1b, the expression level of module  <dig> is apparently followed by module  <dig>  which confirms the results. figure  <dig> shows the time course of observed expressional levels of four modules and their predictions by the inference method.

yeast cell cycle data
the yeast cell cycle data presented in  <cit>  consist of six time series  expression measurements of the transcript  levels of s. cerevisiae genes.  <dig> genes were identified as cell cycle regulated based on cluster analysis in  <cit> . here, we used the cdc <dig> time course data of the  <dig> genes since it has the largest number of time points .

spellman et al.  <cit>  assigned attributes  for genes that represent the time when gene expression levels take the peak during cell cycle. based on the four phrases in a cell cycle, g <dig> -> s -> g <dig> -> m, spellman et al. assigned each gene to one of the five peaks g <dig>  s, s/g <dig>  g2/m, and m/g <dig>  using this information, we selected the module shown in figure  <dig> for the cdc <dig> data set. as shown in figure 4a, the optimal number of fcm clustering is five, which is based on the number of peak phrases each gene can be assigned to. table  <dig> shows the number of genes with different peak time for each cluster. from the highlighted numbers in table  <dig>  we can characterize the modules: it is clear that module  <dig> is responsible for genes with peaks in m/g <dig> or g <dig>  followed by module  <dig>  and so on. the expression levels of modules are shown in figure 4b.

this table shows the number of genes with different peak time for each cluster in yeast cell cycle data. from the highlighted numbers in the table, we can characterize the modules: it is clear that module  <dig> is responsible for genes with peaks in m/g <dig> or g <dig>  followed by module  <dig>  and so on.

the pso-rnn algorithm is applied to the network inference of the five modules. the final reconstructed network is inferred by choosing significant parameters as described in the methods section. unlike the cns data, we could not compare our results to other publications due to lack of similar studies. instead we illustrate the results according to their peak attributes. as shown in figure  <dig>  all the regulations identified here are positive. considering such characteristics of the modules and directions of the arcs between modules, we observe that the obtained network codes a partially consistent regulatory relationship between modules recalled from the time sequence of the phase in cell cycle. all the relationships among modules indicate that each module has some regulatory impact on its follow-up modules, according to the peaks each module stands for. there is one exception: module  <dig> has an up-regulation on module  <dig>  which shows that some feedback may exist in yeast cycle process. figure  <dig> shows the time course of observed expressional level for five modules and their predictions by the inference method.

CONCLUSIONS
reverse engineering of grns from time course gene expression data is a major obstacle in system biology due to the limited number of time points. we demonstrate that our method can address this challenge by decomposing the reverse engineering problem into modules, where two steps are involved: the gene expression data is clustered into modules with biological significances to reduce the problem dimensionality, and the network is built based on the expression profiles of modules. we evaluate the performance of the algorithm using two real data sets: rat cns data and yeast cell cycle data. the results indicate that biologically meaningful modules are selected and biologically plausible networks between modules are estimated. for example, in cns data, the inferred network at module level is a combination of the networks verified in the other two studies  <cit> . our future research will focus on network module inference with more detailed gene category/regulation information. multiple data sources  can be used for this purpose. also, the data fusion from complementary data sources will not only help solve the underdetermined problem in grn inference, but also increase the prediction accuracy. another direction to address the under-determined reverse engineering problem is to decompose the grn into small subnetworks, called network motifs   <cit> .

