BACKGROUND
knowledge on protein-protein interactions is essential for understanding many processes in living cells. these interactions are mediated through the respective molecular surfaces and are governed by the properties of the amino acid residues and atoms, which form these surfaces, as well as more distributed properties such as hydrophobicity and electrostatic potential. structural data from crystallographic analyses deposited in the protein data bank   <cit>  contain a vast amount of information on protein-protein contacts, including "biological" contacts which are also present in solution as well as contacts necessary for crystal formation. several programs are available which allow the calculation and analysis of surface properties, e.g. to predict hotspots for protein interaction  <cit> . however, these programs are not designed to calculate, analyze and visualize actual protein-protein contact patches. various reviews describe investigations about statistical analyses of protein-protein interaction, characterization of different interface properties  <cit>  and the identification of contact patches especially focused on the distinction between biological interactions and crystal contacts  <cit> . other studies describe specific properties used to discriminate between interfaces and non-interfaces like shape and geometric parameter complementarities, accessible surface comparison at multimerization as well as physicochemical properties, conservation scores and interface residue preferences and clusters  <cit> . despite the fact that this information is very useful for the identification and analysis of biological contacts, it lacks a convenient visual representation of information especially for crystal contact surfaces and their properties. a plethora of macromolecular visualization tools exist, which are either web-based or stand alone programs . most of them also provide structural analysis tools or are part of different databases which contain all sorts of organized structural annotation information like the gpssserver  <cit> , the mark-us server  <cit> , the polyview-3d utility  <cit> , or the program pocketpicker  <cit> . there are also databases which are mainly focused on protein contacts or interfaces like the scowlp  <cit> . this database is based on the scop  <cit>  classification and provides interaction information on domain interfaces and uses jmol  <cit>  for visualization. web based visualization tools like jmol are very useful to give an overview of the structure including of the different provided information. however, they are less powerful than stand-alone programs like the swiss-pdb viewer  <cit>  or pymol  <cit> . not all of these tools provide sufficient surface representation features or the surface representation is generated on the fly. consequently, the actual surface points are not accessible directly for annotation or calculation purposes. software packages which do provide contact interaction information most often make use of atom to atom distances and atom coordinates instead of surface point coordinates. many programs also do not take into account crystal symmetry. therefore, we devised vasco a program package enabling the annotation and visualization of surface properties and contact patches. specifically we aimed at  identifying contact patches in protein crystal structures including contacts generated by crystal symmetry,  annotating these patches according to different surface properties and  analysing surface patches of proteins in contact with rna, dna or ligands. additional aims were the convenient representation of annotated surfaces and the development of a distance calculation for the surface points in contact regions. for visualization we chose pymol because of its wide spread within the structural biology community and its broad functionality and expandability.

implementation
vasco itself is a python  <cit>  based command line tool which makes use of the vasco modules  to calculate properties and run external programs. the programs patchcalc and hydrocalc, written in c, are used to calculate hydrophobicity as well as contact patches and distance values. the external programs msms  <cit>  for surface calculation and delphi  <cit>  for electrostatics calculations are separately available and licensed but included in the program package. the vasco package integrates the calculation of molecular surfaces of proteins, the computation of different properties , the identification of contact patches, and a flexible visualization module. for the latter task we use the program pymol  <cit>  representing molecular surfaces as "compiled graphic objects" , a pymol specific format allowing the generation of three-dimensional objects from building blocks such as spheres, cylinders and triangles. we developed a plug-in, which reads the vasco surface file and generates cgos based on the provided information. this phython-based plug-in provides a convenient interface to visualize the surface output.

RESULTS
vasco is a program package for the calculation of protein surface properties and the visualization of annotated surfaces. our software uses a unique surface point based approach where each of these points can be directly annotated by different properties. the surfaces and interaction patches are visualized in pymol using a custom-made plug-in.

surface points are defined by the solvent excluded surface  of a protein. in addition, it identifies contact patches between protein molecules based on a point distance cutoff, considering also symmetry equivalent molecules in a crystal. thus, surface points are separated into contact and non-contact areas allowing separate analysis. the current set of properties contains the electrostatic potential, the hydrophobicity and the contact distance and is easily extendable due to the modular structure of the program package. the different modules and programs are integrated into an analysis pipeline to allow fast and efficient analysis of the protein structures. special emphasis was given to the visualization of crystal contact patches and surfaces which is especially important for the analysis of this kind of data. we do not distinguish between biological and crystal contact patches automatically, yet the patch information with the mapped properties may help to differentiate them visually. our software can serve as a supplement to other available visualisation tools and provides additional information on protein-protein contacts which are relevant for structural biologists and crystallographers as well.

another strength of the vasco program is the possibility to compare molecular surfaces of biomolecules. to that end, a pdb file has to be generated containing two superimposed structures . by neglecting the symmetry information one is able to annotate surfaces with a surface difference value which corresponds to the minimum distance of a particular surface point in one molecule to any surface point in the other molecule. these calculations can be used to identify regions on those surfaces which differ significantly from each other or to investigate the influence of mutations on surface shape.

calculation pipeline
the python based command line program called vasco.py, reads a pdb file  and in turn calls the various modules and programs performing the necessary calculations . the output of the program is a gzip-compressed text file containing information on the surface itself  as well as on the calculated properties, which can be visualized in pymol using the vasco surface viewer plug-in . reasonable default parameters  and libraries  are provided, but can easily be changed for particular purposes.

surface determination
molecular surface points are determined by msms  version  <dig> . <dig>  <cit>  using the ses  definition, a probe radius of  <dig>  Å and a vertex density of  <dig> . there are other surface calculation programs available including naccess  <cit> , surface racer  <cit> , asc  <cit> , or the molecular surface package  <cit> . we chose the program msms because it provides surface point files with additional information such as triangulation and normal vectors which can be used directly for visualization.

hydrophobicity
the command line program hydrocalc was developed to calculate hydrophobicity values at each surface point. a library of atomic hydrophobic contribution values  was created based on the values derived by ghose et al.  <cit>  and newer calculations of viswanadhan and ghose et al.  <cit> . these hc values  can be seen as fragmental increments  to the total lipophilicity of the molecule. andry et al. have created a distance dependent function for a so called molecular lipophilicity potential   <cit>  the applicability of which has been proven for small molecules. due to its unsuitability for large molecules another form of the mlp definition was used  <cit>  .

 mlp=∑i=1nfi⋅g∑i=1ng 

formula 1: molecular lipophilicity potential . fi is the partial lipophilicity of the i-th fragment of a molecule. di is the distance of the surface point from the center of the fragment i. n is the amount of fragments considered for the calculation and g is the distance function for the i-th fragment.

the program uses a fermi-type distance function  <cit>   to calculate the contribution of a particular atom to the molecular lipophilicity potential  at a certain surface point. the empirical drop-off parameters c <dig> and c <dig> were set to standard values . the fermi-function simulates the decrease of hydrophobic influence of distant atoms to avoid false assignments within protein molecules.

 g=e−c1c2+1ec1+ <dig> 

formula 2: fermi-type distance function. c <dig> and c <dig> are empirical drop-off parameters. d is the distance of a certain surface point from the center of the fragment.

compared to other algorithms to assign hydrophobicity values to surface points, this approach has the advantage that the hydrophobicity calculation can be carried out with distance dependent atomic contributions on every surface point separately. this is in contrast to other strategies where whole amino acid hydrophobicity scores are used and mapped onto the surface  <cit> . our calculation is clearly more time consuming but has the advantage that the hydrophobicity is smoothly distributed over the surface. due to its distance dependent character it accounts for the three dimensional arrangement of the atoms and their contributions to the hydrophobicity on each surface point.

electrostatic potential
the program delphi  <cit>  is used to calculate the electrostatic potential at the molecular surface points. as default parameters we used a grid spacing of  <dig> Å with the macromolecule taking up 60% of the calculation box. internal and external dielectric constants were set to  <dig> and  <dig> respectively. an ion exclusion radius of  <dig> Å and a salt concentration of  <dig>  mol l- <dig> were applied. the probe radius for the surface calculation is the same as used for msms . all parameters can be changed by the user, if necessary. delphi requires the positions of  hydrogen atoms. as most of the structure files deposited in the pdb miss this information, we calculate hydrogen atom positions using a modified version of the program protonate, which is part of the amber program package  <cit> . we consider only backbone and n-terminal hydrogen atoms and assign charges only to fully charged amino acids as well as backbone atoms. histidines are assigned a total charge of + <dig> . the delphi output file contains the electrostatic potential at the given coordinates  in units of kt/e , where k is the boltzmann-constant and the temperature t is set to  <dig> k.

contact patch calculation
the program patchcalc was developed to calculate interaction patches based on a distance cutoff involving surface points. this includes interactions between different unit surfaces as well as interactions between symmetry related surface points. we define a "unit" as an assembly of protein chains  for which surface points and corresponding properties will be calculated. by default each protein chain forms a separate unit, but one can combine several chains to a larger unit, e.g. to an oligomer. the combination of all thus defined units forms the so called "partition". the command line program patchcalc calculates all the contact patches of each unit within a partition . a surface point contact is assumed, when the distance between surface points is below a certain threshold, which is  <dig>  Å by default but can be changed by the user. in order to utilize crystal symmetry the program requires information on the unit cell  and on the space group, which is both provided automatically within the vasco-program. atomic cartesian coordinates are transformed to fractional coordinates  <cit> . space group symmetry is provided as library of transformation matrices and vectors  which are applied to the fractional coordinates. nearest neighbors of a particular surface point are identified taking translational symmetry into account. the final output contains the point to point distance as well as unit and symmetry information which are used to annotate the different contact patches.

visualization
a pymol plug-in was developed for displaying the surface properties calculated by the vasco program. each identified surface contact patch can be viewed and analyzed separately. the user can freely define colours and transparency levels of the different surfaces. the minimum and maximum values for a colour ramp describing a certain property are calculated automatically, but can as well be set manually . to speed up loading of the surface representation the user can select to view just those annotated surfaces, which are the current focus of interest. after loading of the surfaces one can switch fast and easily between the annotated surfaces by using the standard function keys. because pymol's internal ray-tracing routine also works for the additional properties calculated by the program package, it can be used to create high-resolution, publication quality figures. the plug-in configures itself depending on the available surface properties in the input file and is therefore flexible to show different properties depending on the currently active surface file. this feature will be especially useful when new surface properties will be provided in later versions of the vasco program package.

examples
surface property visualization
the vasco program can be used to visualize surface interaction patches between different units  as well as to analyse crystal contact patches calculated with crystal symmetry information. the structure of a gun <dig> homolog   <cit>  was chosen as an example. the asymmetric unit of this structure consists of a single polypeptide chain with a length of  <dig> amino acid residues. as the structure comprises only one chain, this chain forms the only unit. figure  <dig> shows the molecular surface coloured according to hydrophobicity  and electrostatic potential  employing the default colour ramp. figures 3c and 3d contain information on interactions with symmetry related molecules . interaction patches are coloured according to contact distances  and to patch types . the latter are defined by the interacting unit and the applied symmetry operation.

another example of the results of contact patch calculation is shown in figure  <dig>  the antizyme inhibitor  which regulates cellular polyamine homestasis is compared with the highly homologous orithine decarboxilase  which is in contrast to azi enzymatically active  <cit> . figures 4a and 4b show all contact patches for chain a of azi   <cit>  and chain a of odc   <cit> , respectively. in the case of odc two protein chains are present in the asymmetric unit, but a very similar "dimer" of azi is generated by crystal symmetry . a visual comparison of the proposed dimer interfaces reveals a significantly smaller surface contact size in the case of azi  as well as a more compact contact surface in the case of odc . this analysis suggests that this interface in azi could be an artefact of crystal formation and nonphysiological. biochemical studies indeed showed that azi exists as a monomer in solution while odc is dimeric  <cit> . in addition, the "hydrophobic zipper"  <cit>  can easily be seen on the odc dimer interface  which is missing in case of the azi . thus, vasco can be very helpful in getting a first visual impression of the interfaces and their properties.

visualization of surface differences
the comparison of molecular surfaces of biomolecules is an additional strength of the vasco program. a specific example of a surface comparison involving two homologous rna binding proteins is shown in figure  <dig> highlighting surface differences between signal recognition particle  <dig>  from h. sapiens  <cit>  and methanococcus jannaschii  <cit> .

another example shows the active site of two old yellow enzyme  homologues . these two enzymes  exhibit opposite enantioselectivity in the reduction of a nitroalkene substrate, which is supposed to be caused by subtle structural differences  <cit> . the differences in the surface topography around the active sites of opr <dig>   <cit>  and opr <dig>   <cit>  are shown in figure  <dig> by mapping minimum point distances onto the respective molecular surfaces. in this example, red areas indicate surface indentations which are not present in the other molecule, whereas green areas indicate convexities. specifically, the red area close to the flavin cofactor in opr <dig> emphasizes a deep pocket missing in opr <dig>  which, however, is important for the proper binding of the substrate . the lack of this pocket in opr <dig> necessitates a different binding mode of the substrate thereby yielding the opposite enantiomer. our tools provide a convenient way to visualize such differences and to analyze their biological significance.

CONCLUSIONS
the vasco package provides convenient tools for the representation of annotated surfaces. it allows the facile inclusion of new properties  for surface mapping. the calculated surface is always divided into patch and non-patch surfaces allowing separate visual analysis of these regions. the tool also provides a unique point distance approach for the analysis and visualization of surface differences between two structures. by using the common protein representation and visualization tool pymol as environment for the plug-in, the annotated surfaces can be visualized. the plug-in automatically accommodates additional surface properties provided in the input file. we expect that vasco will expand and grow over time especially by integrating new surface properties and property calculations.

availability and requirements
project name: vasco

project home page: .

operating systems: windows, unix

programming languages: python, c

software packages: python  <dig>  or higher , pymol  <dig>  or higher 

hardware requirements: processor:  <dig> ghz pentium  <dig> or similar, memory:  <dig> gb ram video card: 3d opengl compatible graphics accelerator card with  <dig> mb ram

license: the vasco program is free for academic use but includes third party programs like the msms program for surface calculation and the delphi v.  <dig>  program for electrostatic calculations which have to be registered . for more information about licensing see 

any restrictions to non-academics:

if you are interested in a commercial use license for vasco, please send your name, address, fax and telephone numbers and email address to: vasco@genome.tugraz.at. commercial versions of msms and delphi have to be obtained from .michel f. sanner and .raquel norel respectively.

authors' contributions
gs designed and implemented the software and drafted the manuscript. rr was involved in software design and testing. ggt contributed to the draft of the manuscript, webpage creation and coordination of software packaging and licensing. kg participated in the design and implementation of hydrocalc and patchcalc and helped to draft the manuscript. general scientific advice was given by ck and kg. all authors read and approved the final manuscript.

supplementary material
additional file 1
calculated hc values for amino acids. the data table provided contains the calculated hydrophobic contribution values for the standard amino acids.

click here for file

 acknowledgements
this work was supported by the austrian federal ministry of science and research through the gen-au project bin ii  and by the research centre applied biocatalysis. we want to acknowledge markus c. jorde who was involved in parts of the coding of hydrocalc and patchcalc and daniel friedl who helped to write the installation manual as well as gustav oberdorfer who provided the docked nitroalkene structures. we would also like to thank michel f. sanner  and raquel norel  for allowing us to integrate and distribute their programs along with vasco.
