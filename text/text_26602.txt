BACKGROUND
successful prediction of gene function from disparate data sources is an important challenge in the post-genomic era. methods to do so can illuminate new mechanisms for the emergence and organization of function at the genome level, and lead to the understanding of disease mechanisms or prediction of drug targets. functional organization of genes is often dramatically revealed by their positions in biomolecular networks and the topological constraints that these positions entail. much work has been done on using graph properties of protein interaction networks  to elucidate gene and protein function, particularly in the baker's yeast saccharomyces cerevisiae for which high quality genome-scale interaction maps  can be constructed. in these interaction graphs, nodes represent individual proteins and edges represent their physical binding. several previous reports find interesting correlations between network properties and aspects of biological function  <cit> . for example, pairwise correlations have been found between protein degree/centrality, gene essentiality, and evolutionary rate  <cit> . other methods attempt to uncover sets of genes implicated in a common function, i.e., functional modules, from network structure  <cit> . yet other methods combine graph-theoretic data with other data sources, such as expression levels  <cit>  or functional annotation of neighboring proteins in the interaction map  <cit> , to further elucidate function.

one of the earliest observed correlations between a graph-theoretic property and a functional attribute is the well-known correlation between the degree  of a protein in a yeast pin and the essentiality of the corresponding protein-coding gene  <cit>  . correlations between essentiality and other graph properties, including various centrality measures, have also been reported in yeast  <cit>  and other organisms such as the nematode worm caenorhabditis elegans and fruit fly drosophila melanogaster  <cit> . the principal observation emerging from these studies is that essential proteins tend to be over-represented among proteins with high degrees and high centralities in a pin. this leads to the hypothesis that the indispensability of a given protein for cellular function is at least partially determined by both its local connectivity  and its global position  in a pin  <cit> .

synthetic lethal interactions are important genetic interactions for understanding biological function and for potentially developing novel classes of drug targets  <cit> . two genes are said to participate in a synthetic lethal interaction if simultaneous deletion mutations in both, but not in any one alone, cause lethality. thus, the concept of synthetic lethality may be viewed as an extension of essentiality. indeed, it has been recently proposed that the type of genetic redundancy conferred by synthetic lethality leads to redundancy being more prevalent among proteins that are highly connected and highly central in pins  <cit> . this finding implies correlations between pin graph properties and synthetic lethality similar to the correlations with essentiality of single genes. in fact, such correlations have also been reported earlier. tong et.al.  <cit>  observed that synthetic genetic interactions, including synthetic lethal  and synthetic sick  interactions, are more prevalent between genes encoding proteins within the same protein complex  than between those encoding proteins across complexes or between proteins that are not part of any known complex. these authors also addressed the issue of using this correlation to predict protein-protein interactions from synthetic genetic interactions, and concluded that this predictive value is limited because few  gene pairs encode proteins that are members of the same complex. they further find that the number of common neighbors between two genes in a synthetic genetic network correlates with the existence of a protein-protein interaction between the corresponding gene products. it is well understood that proteins encoded by genes having synthetic genetic interaction are enriched among proteins that lie in separate pathways as opposed to the same pathway , thus further indicating a preference for protein network position among the products of synthetic gene pairs. in spite of these studies, it is an open question whether there is enough information in pins alone for determining synthetic lethal interactions. the conceptual basis for this expectation is that all biological function is ultimately defined by the interaction of proteins with other proteins, dna/rna, or small molecules . since most protein-dna/rna or protein-metabolite interactions are directly or indirectly influenced by other protein-protein interactions, it is reasonable that the structure of the pin might encode sufficient information for all other interaction networks. however, this encoding could be subtle and perhaps beyond simple linear statistical correlations envisaged in explicit analytical models.

arguably the most systematic and accurate method to date for genome-wide prediction of synthetic sick or lethal  interactions was carried out by wong et al.  <cit>  in saccharomyces cerevisiae using multiple input features, including protein interactions, gene expression, functional annotation, and sequence motifs. the method can be used to streamline the ssl discovery process wherein it would require one to experimentally test less than 20% of the pairs to discover ssl pairs with 80% success rate. but the method relies on disparate data sources  which are not readily available for organisms other than s. cerevisiae. furthermore, the success of this method does not answer the question posed in the previous paragraph.

here we study, in s. cerevisiae, the extent to which a ssl interaction between two genes can be predicted solely from the topological properties of the corresponding proteins in a pin and from the knowledge of other ssl interactions that the genes in question participate in. our motivation stems not only from the expectations described above, but also from the observation that the yeast protein interaction network formed by literature curated interactions  <cit> , composed of ~ <dig> proteins and ~ <dig> interactions, is substantially larger than the size of the most recent synthetic genetic network formed by literature curated and high-throughput screen interactions , thus potentially enabling the discovery of new ssl interactions. strikingly, we find that the best overall accuracy for ssl prediction from protein interaction data is comparable or higher than that found via a combination of disparate inputs  <cit> , thus confirming the predictive power of pins for ssl interactions and opening up the possibility of predicting the ssl network for other organisms where genome-scale protein interaction networks have been found.

methods
protein interaction network  data
for computing network properties associated with protein-protein interactions in yeast, we used the literature curated protein interactions in saccharomyces cerevisiae culled by reguly et.al  <cit> . this network contains  <dig> proteins and  <dig> interactions.

pin graph-theoretic properties used for predicting ssls
for use as inputs to a support vector machine  classifier, we computed the following pin graph-theoretic properties for each protein.

 degree: the number of direct interactions with other proteins.

 clustering coefficient  <cit> : the fraction of possible interactions among direct neighbors of a protein in the pin.

 closeness centrality  <cit> : let d be the shortest distance between proteins p and q in a pin. then the closeness centrality of protein p is defined as /Σq d, where n is the total number of proteins in the pin. it therefore measures the extent to which protein p is close to all other proteins in the pin.

 normalized betweenness centrality  <cit> : let σp,q be the number of shortest paths between proteins p and q in a pin, and let σp,q be the number of shortest paths between p and q that pass through protein r. then the betweenness centrality of r is defined as Σσp,q/σp,q, where the sum is taken over all distinct pairs p and q. we normalize this measure to lie between  <dig> and  <dig> by dividing the betweenness centrality by the total number of pairs in the network not including r: , where n is the number of proteins in the pin of interest. it essentially measures the fraction of network shortest paths that a given protein lies on.

 eigenvector centrality  <cit> : let v denote the  index of a particular protein in the adjacency matrix corresponding to a pin. then the eigenvector centrality of that protein is defined as the vth element of the principal eigenvector of the adjacency matrix. this principal eigenvector is normalized such that its largest entry is  <dig>  this centrality is a measure for how well connected a protein is to other highly connected proteins in a network.

 stress centrality: the absolute number of network shortest paths that pass through protein r.

 bridging centrality  <cit> : the bridging centrality of a protein  is defined as the product of the betweenness centrality and the bridging coefficient of the protein. while the betweenness centrality measures the fraction of network shortest paths a given protein lies on, the bridging coefficient measures the extent to which a protein is lying between other densely connected proteins in a network. let dr and nr represent the degree and the set of neighbors of a protein r. then the bridging coefficient  of the protein r is defined as

 bc=dr−1∑i∈nrdi− <dig>  

 information centrality  <cit> : let a be the adjacency matrix of the pin, d a diagonal matrix of the degrees of each protein, and j a matrix with all its elements equal to  <dig>  let b = d - a + j and let c = b- <dig>  this construction yields the information matrix i with elements iij = - <dig>  the information centrality ic of protein i is then defined as a harmonic mean:

 ic=n− <dig>  

as recognized by  <cit> , this measure essentially measures the mean lengths of paths ending at protein i. a similar interpretation was given by  <cit> , who showed that information centrality is identical to current-flow closeness centrality.

 current-flow betweenness centrality  <cit> : this centrality measure is a generalization of the standard betweenness centrality index that takes into account not just shortest paths but other paths as well. its definition is obtained from the definition of betweenness centrality by replacing σp,q/σp,q by τp,q, the throughput through node r  <cit> . it is related to the distance traversed by a random walk along the network that ends at a particular protein node.

all of the above properties are properties of single nodes in a network. the first two are sensitive only to the local network structure around the node, while all the others are sensitive to the global network topology. furthermore, the last two properties depend not only on shortest paths through the network, but on other paths as well.

in addition to the above  <dig> single-node properties, we also computed a set of two-node properties, namely, the inverse of shortest distance d between proteins p and q, number of mutual neighbors between proteins p and q, and two indicator variables 2hop s-s and 2hop s-p, which exploit the fact that the known synthetic genetic network contains a large number of triangles  <cit> . 2hop s-s takes a value  <dig> if the genes encoding the two proteins p and q share a synthetic lethal partner and  <dig> otherwise, whereas 2hop s-p takes a value  <dig> if there exists a protein r such that r has physical interaction with protein p and the gene corresponding to protein r has a ssl interaction with protein q or vice versa. we computed properties - using the network analysis tool pajek  <cit> ,  and  using the sna package for the r statistical computing platform  <cit> ,  based on the formula given in  <cit> , and  and  using our implementation of the algorithm given in  <cit> .

synthetic genetic interaction data
our primary data sources for training and testing the svm classifier  were the literature curated genetic interactions from  <cit>  and large-scale genetic interaction screens of  <cit> , filtered for ssl interactions. from these sources we extracted only those pairs of genes whose protein products were found in the literature curated protein interaction network of  <cit> , resulting in a dataset of  <dig> confirmed ssl pairs from  <cit> , and  <dig> pairs when combined with literature curated ssl interactions of  <cit> . we then excluded gene pairs whose protein products were localized to mitochondria – this was necessary because our initial results showed that it is difficult to distinguish synthetic sick mutants from yeast mutants where the slow growth is conferred by the absence of a single  mitochondrial protein. this resulted in a dataset of  <dig> pairs of confirmed ssl interactions from  <cit> , and  <dig> pairs of confirmed ssl interactions if we included pairs from the literature curated genetic interactions of  <cit> . in order to train the classifier, we also required a list of negatives, i.e., pairs of genes confirmed to be not partaking in a ssl interaction. we constructed non-ssl pairs by generating all pairwise combinations of the  <dig> baits used in the large scale genetic interaction screen of  <cit>  with all other non-essential genes in yeast whose protein products were not localized to mitochondria and then removing from this dataset the ssl interactions confirmed by high throughput and other experimental methods. the resulting number of ssl pairs and non-ssl pairs that were obtained from literature curated and high throughput methods are presented in table  <dig>  it is important to bear in mind that some of the inferred non-ssl pairs may well be ssl because of errors in the high throughput screen. this explains the decrease in the number of non-ssl pairs upon inclusion of literature curated  data. for the combined data from literature curated and genome wide screens, we also generated probability distributions of each pin graph-theoretic property discussed above, separately for ssl and non-ssl pairs. probability distributions were converted from histograms to smoothed probability density functions using gaussian smoothing as implemented by the 'density' function in the r statistical computing platform.

the table lists number of ssl pairs and non-ssl pairs in high throughput  and combined ) data sets.

support vector machine classifier
we use support vector machines  to model correlations between pin properties and the existence of a ssl interaction. various graph-theoretical properties  of two proteins in a pin are fed as inputs to the svm classifier, which is schematically represented in figure  <dig> 

the output of the svm classifier is a score that measures the propensity of the two corresponding genes to partake in a ssl interaction. high scores indicate higher propensities for ssl interactions, while low scores indicate higher propensities for lack of a ssl interaction. we found that svms had the highest overall accuracy as compared to other prediction systems that we experimented with, including naive bayes classifiers and neural networks. in our study, we used libsvm, a publicly available integrated software for support vector classification  <cit> . the full prediction system has  <dig> inputs lumped into a single vector x: the averages and absolute differences of the  <dig> properties - for each protein pair, the shortest distance d between the two proteins, number of mutual neighbors of the two proteins in pin, and the two indicator variables 2hop s-s and 2hop s-p. the raw output svm scores that were assigned to the protein pairs by the svm classifier were mapped to posterior probabilities with a value ranging between  <dig> and  <dig> to measure propensity for a ssl interaction between the corresponding genes  <cit> . the svms were trained using a radial basis function kernel whose parameters were optimized by performing a five-fold cross-validation on the entire training set, as suggested  <cit> . the svm classifier was trained on a randomly selected but a balanced subset of pairs of genes with and without ssl interaction, i.e., the training set comprised of two-thirds of the known synthetic lethal pairs and an equal number of known non-ssl pairs. the test set consisted of the remaining gene pairs  that were not used in training the svm classifier.

since the svm output score takes a continuum of values between  <dig> and  <dig>  we set a variable cutoff κ for deciding whether a pair of genes partakes in a ssl interaction. pairs that scored above κ were predicted to be ssl, while pairs that scored below κ were predicted to be non-ssl. we then measured the sensitivity and specificity of the method on the test sets as a function of κ and generated roc  curves of sensitivity vs. 1-specificity to represent the overall accuracy of the method. sensitivity is defined as the proportion of true positives that are classified correctly by the method and specificity is defined as the proportion of true negatives that are classified correctly by the method. the area under the roc curve, a statistic commonly used to assess prediction accuracy  was computed in a non-parametric manner using the trapezoidal approximation. in a similar manner, we found the positive predictive value  of the method as a function of the threshold κ, where positive predictive value is defined as the ratio of correctly predicted positives to the total number of predicted positives.

cross validation studies
ten-fold cross-validation studies of the performance of the svm classifier were carried out by using balanced ssl and non-ssl training data for training but representative datasets for testing, as follows. known ssl pairs were first divided randomly into  <dig> groups. an equal number of non-ssl pairs were randomly selected and each of these pairs was randomly assigned to one of the  <dig> groups. thus, each group contained an equal number of ssl and non-ssl pairs. nine such groups were combined for training the svm classifier, which was subsequently tested on all ssl pairs from the withheld group and all non-ssl pairs from the withheld group as well as the remaining data. this was repeated  <dig> times with each group playing the role of the test group once.

prediction of novel ssl interactions
finally, we sought to identify novel ssl interactions. to this end, we first culled a data set consisting of gene pairs that were not tested for synthetic genetic interactions . to score the new set of gene pairs we retrained our classifier on the complete set of known ssl pairs and an equal number of randomly selected non-ssl pairs. the retrained classifier was then used to evaluate the propensity of each of the ≈ <dig>   <dig>   <dig> gene pairs in the newly constructed data set to be ssl. this prediction task was repeated five times, each time training on a different set of randomly selected non-ssl pairs. the gene pairs that scored above the desired cutoff in all the five runs were reported as putative novel ssls . based on results from high throughput genetic analysis studies, it has been estimated that the global ssl network of yeast will contain ≈ <dig>  interactions  <cit> . as there are ≈ <dig> non-essential genes in s. cerevisiae, we expect the newly constructed data set to proportionately contain ≈ <dig>  ×  <dig> ,000/ =  <dig>  true ssl interactions, which turns out to be approximately equal to the number of novel ssl predictions that can be obtained at a svm output threshold level of κ =  <dig>  .

RESULTS
we used thirteen different graph-theoretic properties of proteins  in a pin as putative predictors for the existence of a ssl interaction between the corresponding gene pair. this resulted in a maximum of  <dig> inputs to the svm classifier: two values for each single node property, and one value each for the shortest distance, mutual protein neighborhood, 2hop s-s and 2hop s-p.

input feature distributions for ssls and non-ssls
in order to assess the suitability of each of the graph-theoretic properties in distinguishing ssl pairs from non-ssl pairs we obtained the distributions of these properties across ssl pairs and non-ssl pairs. for each property, we plot the distribution of the average of that property over two genes in a pair, and the absolute difference of that property across the two genes. most properties studied here show statistically significant but small distributional differences between ssl pairs and non-ssl pairs . properties that display the greatest distributional differences  are eigenvector centrality, degree and bridging centrality. since shortest distance is technically infinite for two proteins that lie in two different components of the pin, we used the inverse of shortest distance as input to the svm classifier. from table  <dig> one can infer that, when viewed as part of a pin, ssl pairs as compared to non-ssl ones tend to have higher average degree, higher average closeness centrality, higher average information centrality and higher number of mutual neighbors.

difference in mean values of various graph properties between ssl and non-ssl pairs, assessed using an independent sample t-test.

accuracy of ssl predictions
we first assessed the performance of the svm classifier when only pin properties were used and the "triangle-completing" 2hop properties were excluded. this is because 2hop properties are binary inputs whose prediction accuracy is extremely sensitive to the choice of test data set . we randomly selected 2/ <dig> of the known ssl pairs and an equal number of non-ssl pairs for training the svm classifier and withheld the remaining pairs of genes for testing the accuracy of the method. we tested the method on the withheld data, resulting in the roc curves for different training sets. as is clear from figure  <dig>  the overall performance of the predictor, as measured by the area under the roc curve, shows slight improvement when interactions from literature curated data are included in the training set as opposed to using interactions from high throughput synthetic lethal screens alone, with overall accuracies of  <dig>  and  <dig>  respectively. we note that higher values of the svm classifier output threshold, κ,  lead to higher specificity, while lower values of κ  lead to higher sensitivity.

addition of 2hop features to the inputs improves the performance of the classifier
when 2hop features were included as additional inputs to the svm classifier there was a significant improvement in the performance of the classifier on the randomly chosen test set , consistent with previously reported increases in accuracy when 2hop features are included  <cit> . the best overall accuracy, as measured by the auc, is about  <dig> %, obtained with the svm classifier trained on literature curated and high throughput data using all the pin properties and 2hop features.

comparison to other approaches
we compared our results to an earlier study  <cit>  where probabilistic decision trees were used to distinguish between ssl and non-ssl pairs. the accuracy of our method appears higher than that reported in  <cit>  , where diverse genomic datasets and 2hop properties are included as putative determinants of ssl interaction . further, the accuracy obtained by our method when 2hop properties are excluded is significantly higher than that found in  <cit>  when 2hop properties are excluded, as further discussed below . we note that accuracies measured by area under the roc curve take into account both false positive and false negative errors. however, they do not account for the low prevalence of ssls among all pairs of genes in a genome. we therefore also compute the positive predictive accuracies for our svm classifiers as a function of the threshold level . it is interesting to note that addition of both 2hop characteristics leads to a decrease in predictive accuracy at high thresholds, even though the auc increases when both these features are included. the reason for this is that the increase in sensitivity after addition of both 2hop characteristics is offset by a faster increase in false positive rate. the positive predictive values  of the predictors at a threshold level of  <dig>  are listed in table  <dig>  note that in order to assess the the fold-improvement in prediction ability, the ppv should be compared to the estimated prevalence of ssls among all gene pairs in yeast  =  <dig> , as it is estimated that there are ≅  <dig>  ssl interactions and ≈ <dig> non-essential genes in s. cerevisiae)  <cit> .

positive predictive values for classifiers trained with and without 2hop characteristics at a threshold level of  <dig> .

individual importance of predictor variables
we investigated the importance of each of the individual predictor variables by training the svm classifier on each of them separately . classifiers trained using individual predictors perform better than random classifiers, although the classification performance when all the predictor variables are used is much better than any of the classifiers trained on individual predictor variables. of all the pin predictor variables studied, degree turns out to be the best performing individual predictor. the known importance of degree in characterizing gene essentiality therefore extends to ssl properties of gene pairs as well. indeed, strong correlations between synthetic lethality and node degree have been reported earlier  <cit> . the second best predictor was information centrality, a hybrid measure which relates to both closeness centrality and random walk based eigen-centrality, each of which turned out to be significant predictor variables on their own. also, the significant contribution of information centrality to ssl prediction may indicate that information propagation in a biological network does not always favor shortest paths. we further tested the individual importance of the 2hop characteristics when used singly or jointly as predictor variables. since these features always assign equal scores to all pairs for which "triangle completion" is possible and equal scores to all pairs for which this is not possible, these inputs lead to fixed specificity and sensitivity values. while it is possible to predict ssl pairs by triangle completion with reasonably high specificity and sensitivity on certain test sets , namely those that have a large number of ssl or protein interactions with other genes/proteins, the specificities and sensitivities will vary greatly as properties of the test set are changed .

the table lists sensitivity and specificity values at different threshold levels in case of classifiers trained using 2hop characteristics alone.

robustness of prediction with respect to choice of test data
we first performed ten-fold cross validation of the svm classifier  with all inputs, and found less than 1% variation in classification accuracy as measured by area under the roc curve , thus confirming the robustness of the classification performance with respect to different choices of randomly constructed test sets.

the classifier was trained using all the graph-theoretic properties and the 2hop characteristics.

next, in order to further assess the role of the 2hop properties in the prediction task, we designed a test set in which none of the genes had ssl interactions with other genes/proteins. both 2hop properties are identically zero for all pairs in this test set and these properties therefore lose predictive value on such a set. while this type of test set does not reflect the enhanced prevalence of triangles in ssl networks, we carried out this procedure in order to assess whether pin properties by themselves would also significantly lose their predictive value when no triangles can be completed with known ssl interactions for a test pair. table  <dig> shows that although there is some loss of accuracy, the accuracy of 70% is still considerably larger than the corresponding accuracy in wong et al.  <cit>  when 2hop properties are not included.

ten fold cross-validation was carried out with and without excluding gene pairs having non-zero 2hop properties from training and test sets. in both the cases the classifiers were trained without using 2hop characteristics.

robustness of prediction with respect to errors in the protein interaction network
since our prediction method relies strongly on protein interaction data, it is important to assess the prediction quality with respect to errors in protein interaction data. since we use high confidence protein interaction data , we surmised that the dominant error in the protein interaction network could be attributed to missing interactions. we therefore added a predetermined number of new edges randomly to the original protein interaction network, retrained and reevaluated our svm classifier. this task was repeated, each time adding a different number of random interactions  to the pin. while adding more than  <dig> random interactions  significantly changes the numerical value of the propensity for ssl interaction assigned by the svm, we found no detectable change in the roc curves . this suggests that random additional interactions contribute roughly equally to input features of ssl and non-ssl pairs, resulting in no significant change in overall discrimination ability.

paired sample t-test p-values for the difference in ssl propensities assigned to the test dataset by the svm before and after adding random edges to the protein interaction network.

comparison of predicted ssl network with the known ssl network
having achieved reasonably high cross-validation accuracy, we proceeded to find out if the predicted ssl network shared the same characteristics as the known ssl network . earlier studies have indicated that genes known to have ssl interaction tend to share similar gene ontology  annotation, are enriched for common upstream regulators, and preferentially are part of the same protein complex  <cit> . since none of these characteristics were used as input features for our prediction method , we investigated whether our predicted ssls were also enriched for these features at different threshold levels starting from  <dig>  up to  <dig>  . as is evident from table  <dig>  predicted ssl interactions at each of the threshold levels appear to have properties similar to known ssl interactions. while the existence of a common upstream regulator among the predicted novel ssl pairs does not appear statistically significant beyond a threshold level of  <dig> , this may be attributed to the small sample size at high thresholds. odds ratios for all properties generally show an increasing trend as the threshold level is increased, showing that the svm classifier preferentially selects gene pairs having the properties studied with higher accuracy at higher thresholds, even though the properties themselves are not used as input features for prediction. the simultaneous increase in the predictive accuracy of ssl prediction  and enrichment for participation in the same protein complex  is consistent with the dominance of "within-pathway" explanations for genetic interactions suggested by kelley and ideker  <cit> .

association between ssl interaction and gene-pair characteristic, following the framework of  <cit> . s ∩ c represents the number of gene pairs with both ssl interaction and same gene-pair characteristic. sonly represents the number of gene pairs with ssl interaction only. conly represents the number of non-ssl gene pairs that share the same characteristic. s' ∩ c' represents the number of gene pairs that neither have ssl interaction nor share a specified characteristic. odds represents the odds ratio of a ssl pair sharing a given characteristic to a non-ssl pair sharing the same characteristic. the p-value represents the statistical significance of overlap between ssl interaction and the specified characteristic as computed by fisher's exact test. if a protein corresponding to a gene is not assigned to any of the known protein complexes then the gene and its interacting partner are considered to come from two different protein complexes. similarly in the case of upstream regulators, if a gene does not have any known upstream regulator then the gene and its interacting partner are treated as if they don't share any common upstream regulator. the p-values are not significant in case of common upstream regulator due to the fact the number of predicted positives that share a common upstream regulator is very small in comparison to the total number of pairs that share a common upstream regulator, which is also reflected in the low odds ratio seen at different levels of threshold.

CONCLUSIONS
our results clearly demonstrate the informative value of protein interaction networks for ssl genetic interactions. we show that graph-theoretic properties of proteins in a protein interaction network serve as compelling and relatively robust determinants for the existence of synthetic lethality between their gene counterparts. when members of the gene pair in question have known ssl interactions with other genes, the predictive power for ssl interaction within that gene pair is greatly enhanced by the tendency of triangles to form in ssl networks . however, even in the absence of known ssl interactions, we have shown that pins by themselves can predict ssl interactions with significantly higher accuracy than previously found. inclusion of pin centralities in the development of meta-servers for ssl prediction is therefore likely to be very useful. further, even though no functional properties are used as input features in our method, the method identifies gene pairs that are enriched for participation in common go categories, in the same protein complex, and to a more limited extent, for having the same upstream regulator. these properties may be therefore viewed as further predictions of the method, even though they were earlier used as inputs for identifying ssls  <cit> . this shows that pins, even in the absence of qualifying data from gene regulatory and gene expression studies, may be more informative of gene function than normally envisioned.

authors' contributions
sp & sz performed the analysis and wrote the paper. alr & anr conceived the project and wrote the paper.

supplementary material
additional file 1
supplementary information. this file contains analysis of the performance of our ssl prediction method as compared to the method used in  <cit> . it also contains novel ssls predicted by our method at different threshold levels.

click here for file

 acknowledgements
this work was supported by grants from the national science foundation .
