BACKGROUND
plants regulate intrinsic gene expression through transcription factors , transcriptional regulators , chromatin regulators  and the basal transcription machinery to control development and respond to environmental changes. to understand the fundamental mechanisms of plant development and environmental responses, we need a systematic way to identify and categorize tfs, trs, and crs on a genomic scale.

tfs are proteins that bind to specific dna sequences, usually to a motif in the target gene promoter, to control the transcription of the target gene. tfs may perform this function with other proteins, e.g., trs. a classic example of the control of gene expression via tfs and trs is the control that the auxin signal has over all major aspects of plant development. auxin enhances the proteolysis of auxin/iaa  transcriptional repressors, which heterodimerize with the auxin response factor  tfs to block the transcriptional activation of auxin-responsive genes  <cit> . this example demonstrates that tfs and trs play equally vital roles in plants.

crs are also essential components in the gene expression regulation machinery. crs are divided into two categories: 1) chromatin remodelers that reposition and restructure nucleosomes and 2) chromatin modifiers that add or remove covalent marks from histones. chromatin remodeling complexes are widely conserved among plants, animals, and fungi. the maintenance of the chromatin structure conserves epigenetic marks on the histones, which are required for both proper plant development and the maintenance of perception to environmental cues such as light and temperature  <cit> . in arabidopsis thaliana, mutations of histone mono-ubiquitination enzymes lead to premature flowering as well as defects in plant size and leaf development. these changes indicate that histone mono-ubiquitination enzymes are master regulators of plant development  <cit> .

over the past several years, next-generation sequencing  technologies have enabled life scientists to collect genome sequences both rapidly and economically. however, although plant gene transcription regulatory elements, including tfs, trs, and crs, have been broadly studied for several years, only a few tools have been developed to systematically categorize and analyze published tf/tr/cr gene families on a genomic scale. one popular database, dbd , features pfam  <cit>  and superfamily  <cit>  domain information and is organized by families and genomes  <cit> . furthermore, dbd provides a supplemental function that allows users to submit single protein sequence to search for dna binding domains within the protein. this database, however, focuses on tfs only.

another popular database, plntfdb , hosts sequences and pfam domain models of  <dig> tf/tr families in plants  <cit> . however, plntfdb lacks an analytic function and serves as a reference database only. itak is an unpublished analysis tool  that has adopted the pfam domain rules described in plntfdb to predict tf and tr genes. however, although the web version of itak is user-friendly, this tool can analyze a maximum of  <dig> sequences for each submission, which makes it impractical for analyzing sequences on a genomic scale. the standalone version of itak may be capable of large-scale data analyses if the linux command line program is optimized and deployed on a parallel computing cluster. however, this implementation poses a challenge for most biologists.

the above analysis tools were developed on the basis of domain patterns from pfam and superfamily databases, which are not sufficient for the systematic identification and categorization of tf/tr domains because some tf/tr domains are not covered by either the pfam or the superfamily databases. for example, the btb/poz-like domain is the featured domain of the btb-poz, btb-poz-math, and abtb families, but the domain model is available only in the prosite profile database  <cit>   or the smart  <cit>  database . as another example, the chromo and shadow domains of the chromo-domain family are also found only in the prosite and smart domain pattern databases.

interproscan  <cit>  is a comprehensive program that integrates  <dig> domain signature search programs and corresponding domain pattern libraries and has been used for tf/tr gene prediction. kakar et al  scanned all medicago truncatula genome sequences using interproscan and identified tf/tr gene families from a curated mapping table between interproscan domains and tf/tr families  <cit> . wang et al  also developed a tf/tr prediction protocol using interproscan and the mapping table previously described in their soybean database, soydb  <cit> . however, to date, neither of these efforts has led to a web server or software that is available for public use.

we have developed a web-based analysis server, planttfcat , which utilizes interproscan to systematically search proteins for tf/tr/cr-related domain signatures. furthermore, we have developed comprehensive prediction logics based on relationships between gene families and conserved domains to effectively distinguish families with common conserved domains, which are often overlooked in traditional blast-based searches. planttfcat therefore systematically predicts and categorizes plant tf, tr, and cr genes with high coverage and sensitivity.

to provide high-throughput genome-scale analysis capability, we customized interproscan to include only relevant domain information. we further accelerated the back-end prediction module by deploying planttfcat on our in-house biogrid parallel computing platform, which is equipped with approximately  <dig> amd processor cores at  <dig> ghz clock frequency. with these optimizations, planttfcat is able to analyze the arabidopsis thaliana genome release tair <dig>  in less than 10 minutes.

implementation
comprehensive prediction logics
the interproscan domain patterns of  <dig> tf/tr/cr families were compiled in a back-end database by mining the published datasets  <cit>  and reviewing the existing literature. for each family, the prediction logic is composed of a “must-have domain” pattern and a “prohibited domain” pattern, respectively. the domain signatures of a protein in interproscan that meet the former pattern may satisfy the criterion for such a family. however, any signature that meets the latter pattern will lead to a negative prediction.

the “must-have domain” pattern was designed to handle logical relationships such as “and” and “or”. for example, the arf tf family is expected to include either ipr <dig> or ipr <dig>  as well as ipr <dig> . we therefore use a logical expression &ipr <dig> to represent the “must-have domain” pattern for the arf tf family.

the “prohibited domain” pattern was designed to divide superfamilies into more specific families based on the existing literature. for example, experimental evidence implicates the btb/poz-like domain, which is a protein-protein interaction module, in the regulation of gene expression through the local control of chromatin conformation. in some cases, the btb-poz domain has been observed with math , which is known to be involved in the regulation of protein processing and ubiquitination. however, the btb-poz domain has also been associated with the ankyrin repeat, which is another protein-protein interaction domain  <cit> . therefore, we categorized btb-poz proteins into the btb-poz-math and abtb families based on the differences in their companion domain using the “prohibited domain” pattern. as another example, tfs with the dna-binding domain mads box  can be subdivided into two families: mads type <dig> and mads-mick. the mads type <dig> family includes only the mads box. however, the mads-mick family includes both the mads box and a keratin-like box   that promotes protein dimerization. to discriminate between these two families, the k-box domain can be included in the “prohibited domain” pattern of the mads type <dig> family.

the comprehensive prediction logics, including the “must-have domain” and “prohibited domain” patterns, are available in additional file  <dig> for all  <dig> families. these prediction logics are also listed by family on the planttfcat website .

infrastructure and implementation
the planttfcat consists of an intuitive web interface that allows users to submit large numbers of sequences and retrieve analysis results as well as a sophisticated back-end high-performance prediction module that uses interproscan to search potential domains from the user-submitted sequences. this back-end module screens potential tfs/trs/crs by referring to the featured conserved domain patterns of each family. the planttfcat web server runs on an oracle java virtual machine and resin j2ee server. the high-performance prediction module is deployed on our in-house biogrid parallel computing platform, which runs on a centos  <dig> linux operating system. the planttfcat web interface was written in the groovy language and the back-end pipeline was written in both java and groovy.

high-throughput capability
interproscan is a computationally intensive program that completes the search for the domains of a typical protein sequence in approximately 5 minutes. to analyze genome-scale sequences, we reduced the domain pattern libraries in interproscan to include only tf/tr/cr-related domains, which accelerated the search by  <dig> to  <dig> orders of magnitude. this customized interproscan installation coupled with our in-house biogrid parallel computing deployment allows planttfcat to analyze the entire arabidopsis thaliana genome  within 10 minutes.

session management
user-submitted jobs are scheduled into the back-end pipeline by a queue management system on a first-come first-serve basis. only two sessions can run simultaneously in the back-end pipeline. all other sessions wait in the queue until the current jobs have been completed. an exception is made for small jobs , which are submitted and run directly without waiting in the queue.

RESULTS
interface
users can submit either nucleic acid or protein sequences under the “analysis” tab  of planttfcat web server. the back-end pipeline detects the sequence type and translates nucleic acid sequences into protein sequences according to their six open reading frames . most submissions can be completed within several minutes. large datasets, e.g., approximately 100 mb of nucleic acid sequences, may require up to an hour to complete. planttfcat returns a web-based table that allows users to query, sort, and filter the results when the analysis session is complete. the prediction results are also available for batch download .

performance evaluation
we compared the predictions from planttfcat with the benchmark data in plntfdb  <cit>  using the arabidopsis thaliana genome release v <dig>  and the zea mays genome release 3b. <dig> . planttfcat missed  <dig> genes out of  <dig>  tf/tr gene models from the arabidopsis thaliana data in plntfdb. moreover, planttfcat reported  <dig>  additional gene models as tf/tr/cr candidates. of these identified gene models, only  <dig> were not confirmed, because they were annotated as either unknown or non-tf/tr genes per the tair <dig> annotation . in the monocot species, zea mays, planttfcat achieves a similar prediction performance:  <dig> genes were missed and  <dig>  genes were newly predicted as tf/tr/cr genes  . such results suggest that planttfcat can predict tf/tr/cr genes with high coverage and sensitivity.

the ‘matches’ column denotes the number of genes that were categorized into the same/synonymous/super/sub families of plntfdb by planttfcat. the ‘conflicts’ column denotes the number of genes that were identified by planttfcat as tf/tr/cr genes, but with different family annotations than plntfdb. the ‘missed genes’ column represents the genes that were omitted by planttfcat but identified as tf/tr genes in the plntfdb database. the ‘newly predicted genes’ column denotes the genes predicted as tf/tr/cr genes by planttfcat that were missed by plntfdb.

we compared the false positive rate of planttfcat with traditional blast-based methods. the arabidopsis thaliana tair <dig> was chosen as a test dataset. a blast search  was run against the tair <dig> tf/tr genes that were downloaded from plntfdb. the blast search correctly hit all of the  <dig>  tf/tr reference genes because the test dataset contains these reference genes. in addition, the blast-based method reported  <dig>  more homologous genes as tf/tr candidates that had been excluded by plntfdb . in contrast, planttfcat reported only  <dig> false positives, as described above. we also tested these methods against the populus trichocarpa jgi gene models v <dig>  and achieved similar results . these results suggest that planttfcat is a better choice for tf/tr/cr gene annotation over a traditional blast search against a reference dataset due to a lower rate of false positives. the details for both comparisons are available in additional file  <dig> 

discussion
the back-end pipeline of planttfcat was originally developed to annotate medicago truncatula tfs and other trs as a part of the international medicago genome sequencing and annotation project. the latest genome analysis and gene models from this project were recently published  <cit> . the planttfcat web interface and server were made publicly available in late  <dig> 

the planttfcat web server provides the scientific community with a convenient high-throughput tool to annotate tf/tr/cr genes on a genomic scale. compared with blast-based methods, planttfcat does not require biologists to install linux command line programs, parse outputs, or deploy programs on complicated high performance clusters. with the support of our parallel computing platform and customized interproscan domain pattern libraries, planttfcat is able to analyze large-scale datasets, such as the data from the next generation sequencing platform for the genomic sequencing projects.

planttfcat uses signature domain information to ascribe proteins to different families depending on the presence or absence of multiple domains in a single protein, which are based on published tf/tr/cr functional characterizations. our performance evaluations indicated that planttfcat identifies tf/tr/cr genes with a lower false positive rate than traditional blast-based approaches without compromising the true positive rate.

planttfcat is also able to distinguish families with “prohibited domain” patterns. for example, the b <dig>  ap2-erebp, rav, and arf families have common domains, but exclude some domains in their sequences. the b <dig> and ap2-erebp families each contain one dna binding domain, the b <dig> dna binding domain and the ap <dig> dna binding domain, respectively. the rav family contains both the b <dig> and ap <dig> dna binding domains in a single protein, and the arf family contains a b <dig> dna binding domain as well as a protein-protein interaction domain. such complicated families cannot be predicted easily with a single blast search. for example, on the ncbi website, at3g <dig>  is annotated as an ap2/erf gene as well as a b <dig> family transcription factor, namely arf <dig>  however, at3g <dig>  is actually a member of the rav family because it contains both b <dig> and ap <dig> domains.

CONCLUSIONS
in conclusion, planttfcat performs a systematic analysis of protein domain signatures in interproscan to produce high coverage and sensitivity for tf/tr/cr annotations. planttfcat provides more accurate functional classifications than blast-based methods.

availability and requirements
project name: planttfcat

project home page:http://plantgrn.noble.org/planttfcat/

operating system: platform independent 

programming language: groovy, java

other requirements: a web browser

license: none for usage.

any restrictions to use by non-academics: none.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
pz conceived the project and supervised the development of the planttfcat system as well as the analyses. xd developed the planttfcat system and performed the system performance evaluations. ss and mu provided in-depth insights into chromatin regulators, transcription factors, and transcriptional regulators, curated the mapping table between the interproscan domains and the tf/tr families, and assisted with the compilation and fine-tuning of the prediction logics. xd, ss, and pz wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
list of comprehensive prediction logics for all tf/tr/cr families included in the planttfcat.

click here for file

 additional file 2
performance analysis by systematically comparing planttfcat predictions and the plntfdb database on 
arabidopsis thaliana 
genome.

click here for file

 additional file 3
performance analysis by systematically comparing planttfcat predictions and the plntfdb database on maize  genome.

click here for file

 additional file 4
performance comparisons between planttfcat and traditional blast method on 
arabidopsis thaliana 
genome.

click here for file

 acknowledgements
the authors would like to thank dr. andry andriankaja for providing valuable comments and suggestions during the initial planttfcat prediction pipeline development and ms. zhaohong zhuang for her assistance with the tf/tr/cr family literature analysis, curation, and description compilation for the planttfcat website development. this work was supported by the national science foundation  and the samuel roberts noble foundation.
